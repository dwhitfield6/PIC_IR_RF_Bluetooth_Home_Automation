

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Apr 18 19:08:50 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK3,global,class=CODE,delta=1
     8                           	psect	idataBANK4,global,class=CODE,delta=1
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    20                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    21                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   144                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   145                           	psect	text118,global,reloc=2,class=CODE,delta=1
   146                           	psect	text119,global,reloc=2,class=CODE,delta=1
   147                           	psect	text120,global,reloc=2,class=CODE,delta=1
   148                           	psect	text121,global,reloc=2,class=CODE,delta=1
   149                           	psect	text122,global,reloc=2,class=CODE,delta=1
   150                           	psect	text123,global,reloc=2,class=CODE,delta=1
   151                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   152                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   153  0000                     
   154                           	psect	idataCOMRAM
   155  00A536                     __pidataCOMRAM:
   156                           	opt stack 0
   157                           
   158                           ;initializer for _IRbitPosition
   159  00A536  20                 	db	32
   160                           
   161                           ;initializer for _RF_IR
   162  00A537  37                 	db	55
   163                           
   164                           ;initializer for _RF_IR_Postscaler
   165  00A538  02                 	db	2
   166                           
   167                           ;initializer for _ReceivingIR
   168  00A539  0D                 	db	13
   169                           
   170                           	psect	idataBANK0
   171  00A542                     __pidataBANK0:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _IRcodePlace
   175  00A542  01                 	db	1
   176                           
   177                           ;initializer for _Sent
   178  00A543  01                 	db	1
   179                           
   180                           	psect	idataBANK3
   181  00A53A                     __pidataBANK3:
   182                           	opt stack 0
   183                           
   184                           ;initializer for _IRtimeout
   185  00A53A  1389               	dw	5001
   186  00A53C  0000               	dw	0
   187                           
   188                           	psect	idataBANK4
   189  00A120                     __pidataBANK4:
   190                           	opt stack 0
   191                           
   192                           ;initializer for _ProductName
   193  00A120  48                 	db	72
   194  00A121  6F                 	db	111
   195  00A122  6D                 	db	109
   196  00A123  65                 	db	101
   197  00A124  20                 	db	32
   198  00A125  41                 	db	65
   199  00A126  75                 	db	117
   200  00A127  74                 	db	116
   201  00A128  6F                 	db	111
   202  00A129  6D                 	db	109
   203  00A12A  61                 	db	97
   204  00A12B  74                 	db	116
   205  00A12C  69                 	db	105
   206  00A12D  6F                 	db	111
   207  00A12E  6E                 	db	110
   208  00A12F  00                 	db	0
   209  00A130  00                 	db	0
   210  00A131  00                 	db	0
   211  00A132  00                 	db	0
   212  00A133  00                 	db	0
   213  00A134  00                 	db	0
   214  00A135  00                 	db	0
   215  00A136  00                 	db	0
   216  00A137  00                 	db	0
   217  00A138  00                 	db	0
   218  00A139  00                 	db	0
   219  00A13A  00                 	db	0
   220  00A13B  00                 	db	0
   221  00A13C  00                 	db	0
   222  00A13D  00                 	db	0
   223  00A13E  00                 	db	0
   224  00A13F  00                 	db	0
   225  00A140  00                 	db	0
   226  00A141  00                 	db	0
   227  00A142  00                 	db	0
   228  00A143  00                 	db	0
   229  00A144  00                 	db	0
   230  00A145  00                 	db	0
   231  00A146  00                 	db	0
   232  00A147  00                 	db	0
   233  00A148  00                 	db	0
   234  00A149  00                 	db	0
   235  00A14A  00                 	db	0
   236  00A14B  00                 	db	0
   237  00A14C  00                 	db	0
   238  00A14D  00                 	db	0
   239  00A14E  00                 	db	0
   240  00A14F  00                 	db	0
   241  00A150  00                 	db	0
   242  00A151  00                 	db	0
   243                           
   244                           	psect	mediumconst
   245  00EF76                     __pmediumconst:
   246                           	opt stack 0
   247  00EF76  00                 	db	0
   248  00EF77                     _dpowers:
   249                           	opt stack 0
   250  00EF77  0001               	dw	1
   251  00EF79  0000               	dw	0
   252  00EF7B  000A               	dw	10
   253  00EF7D  0000               	dw	0
   254  00EF7F  0064               	dw	100
   255  00EF81  0000               	dw	0
   256  00EF83  03E8               	dw	1000
   257  00EF85  0000               	dw	0
   258  00EF87  2710               	dw	10000
   259  00EF89  0000               	dw	0
   260  00EF8B  86A0               	dw	34464
   261  00EF8D  0001               	dw	1
   262  00EF8F  4240               	dw	16960
   263  00EF91  000F               	dw	15
   264  00EF93  9680               	dw	38528
   265  00EF95  0098               	dw	152
   266  00EF97  E100               	dw	57600
   267  00EF99  05F5               	dw	1525
   268  00EF9B  CA00               	dw	51712
   269  00EF9D  3B9A               	dw	15258
   270  00EF9F                     __end_of_dpowers:
   271                           	opt stack 0
   272  00EF9F                     __npowers_:
   273                           	opt stack 0
   274  00EF9F  00                 	db	0
   275  00EFA0  80                 	db	128
   276  00EFA1  3F                 	db	63
   277  00EFA2  CD                 	db	205
   278  00EFA3  CC                 	db	204
   279  00EFA4  3D                 	db	61
   280  00EFA5  D7                 	db	215
   281  00EFA6  23                 	db	35
   282  00EFA7  3C                 	db	60
   283  00EFA8  12                 	db	18
   284  00EFA9  83                 	db	131
   285  00EFAA  3A                 	db	58
   286  00EFAB  B7                 	db	183
   287  00EFAC  D1                 	db	209
   288  00EFAD  38                 	db	56
   289  00EFAE  C6                 	db	198
   290  00EFAF  27                 	db	39
   291  00EFB0  37                 	db	55
   292  00EFB1  38                 	db	56
   293  00EFB2  86                 	db	134
   294  00EFB3  35                 	db	53
   295  00EFB4  C0                 	db	192
   296  00EFB5  D6                 	db	214
   297  00EFB6  33                 	db	51
   298  00EFB7  CC                 	db	204
   299  00EFB8  2B                 	db	43
   300  00EFB9  32                 	db	50
   301  00EFBA  70                 	db	112
   302  00EFBB  89                 	db	137
   303  00EFBC  30                 	db	48
   304  00EFBD  E7                 	db	231
   305  00EFBE  DB                 	db	219
   306  00EFBF  2E                 	db	46
   307  00EFC0  E5                 	db	229
   308  00EFC1  3C                 	db	60
   309  00EFC2  1E                 	db	30
   310  00EFC3  42                 	db	66
   311  00EFC4  A2                 	db	162
   312  00EFC5  0D                 	db	13
   313  00EFC6                     __end_of__npowers_:
   314                           	opt stack 0
   315  00EFC6                     __powers_:
   316                           	opt stack 0
   317  00EFC6  00                 	db	0
   318  00EFC7  80                 	db	128
   319  00EFC8  3F                 	db	63
   320  00EFC9  00                 	db	0
   321  00EFCA  20                 	db	32
   322  00EFCB  41                 	db	65
   323  00EFCC  00                 	db	0
   324  00EFCD  C8                 	db	200
   325  00EFCE  42                 	db	66
   326  00EFCF  00                 	db	0
   327  00EFD0  7A                 	db	122
   328  00EFD1  44                 	db	68
   329  00EFD2  40                 	db	64
   330  00EFD3  1C                 	db	28
   331  00EFD4  46                 	db	70
   332  00EFD5  50                 	db	80
   333  00EFD6  C3                 	db	195
   334  00EFD7  47                 	db	71
   335  00EFD8  24                 	db	36
   336  00EFD9  74                 	db	116
   337  00EFDA  49                 	db	73
   338  00EFDB  97                 	db	151
   339  00EFDC  18                 	db	24
   340  00EFDD  4B                 	db	75
   341  00EFDE  BC                 	db	188
   342  00EFDF  BE                 	db	190
   343  00EFE0  4C                 	db	76
   344  00EFE1  6B                 	db	107
   345  00EFE2  6E                 	db	110
   346  00EFE3  4E                 	db	78
   347  00EFE4  03                 	db	3
   348  00EFE5  15                 	db	21
   349  00EFE6  50                 	db	80
   350  00EFE7  79                 	db	121
   351  00EFE8  AD                 	db	173
   352  00EFE9  60                 	db	96
   353  00EFEA  F3                 	db	243
   354  00EFEB  49                 	db	73
   355  00EFEC  71                 	db	113
   356  00EFED                     __end_of__powers_:
   357                           	opt stack 0
   358  00EFED                     _hexpowers:
   359                           	opt stack 0
   360  00EFED  0001               	dw	1
   361  00EFEF  0000               	dw	0
   362  00EFF1  0010               	dw	16
   363  00EFF3  0000               	dw	0
   364  00EFF5  0100               	dw	256
   365  00EFF7  0000               	dw	0
   366  00EFF9  1000               	dw	4096
   367  00EFFB  0000               	dw	0
   368  00EFFD  0000               	dw	0
   369  00EFFF  0001               	dw	1
   370  00F001  0000               	dw	0
   371  00F003  0010               	dw	16
   372  00F005  0000               	dw	0
   373  00F007  0100               	dw	256
   374  00F009  0000               	dw	0
   375  00F00B  1000               	dw	4096
   376  00F00D                     __end_of_hexpowers:
   377                           	opt stack 0
   378  00F00D                     _ProjectName:
   379                           	opt stack 0
   380  00F00D  48                 	db	72
   381  00F00E  6F                 	db	111
   382  00F00F  6D                 	db	109
   383  00F010  65                 	db	101
   384  00F011  20                 	db	32
   385  00F012  41                 	db	65
   386  00F013  75                 	db	117
   387  00F014  74                 	db	116
   388  00F015  6F                 	db	111
   389  00F016  6D                 	db	109
   390  00F017  61                 	db	97
   391  00F018  74                 	db	116
   392  00F019  69                 	db	105
   393  00F01A  6F                 	db	111
   394  00F01B  6E                 	db	110
   395  00F01C  20                 	db	32
   396  00F01D  49                 	db	73
   397  00F01E  52                 	db	82
   398  00F01F  2F                 	db	47
   399  00F020  52                 	db	82
   400  00F021  46                 	db	70
   401  00F022  20                 	db	32
   402  00F023  48                 	db	72
   403  00F024  75                 	db	117
   404  00F025  62                 	db	98
   405  00F026  00                 	db	0
   406  00F027                     __end_of_ProjectName:
   407                           	opt stack 0
   408  00F027                     _Conf2_ChannelH_1_OFF_STR:
   409                           	opt stack 0
   410  00F027  43                 	db	67
   411  00F028  6F                 	db	111
   412  00F029  6E                 	db	110
   413  00F02A  66                 	db	102
   414  00F02B  32                 	db	50
   415  00F02C  5F                 	db	95
   416  00F02D  43                 	db	67
   417  00F02E  68                 	db	104
   418  00F02F  61                 	db	97
   419  00F030  6E                 	db	110
   420  00F031  6E                 	db	110
   421  00F032  65                 	db	101
   422  00F033  6C                 	db	108
   423  00F034  48                 	db	72
   424  00F035  5F                 	db	95
   425  00F036  31                 	db	49
   426  00F037  5F                 	db	95
   427  00F038  4F                 	db	79
   428  00F039  46                 	db	70
   429  00F03A  46                 	db	70
   430  00F03B  00                 	db	0
   431  00F03C                     __end_of_Conf2_ChannelH_1_OFF_STR:
   432                           	opt stack 0
   433  00F03C                     _Conf2_ChannelH_2_OFF_STR:
   434                           	opt stack 0
   435  00F03C  43                 	db	67
   436  00F03D  6F                 	db	111
   437  00F03E  6E                 	db	110
   438  00F03F  66                 	db	102
   439  00F040  32                 	db	50
   440  00F041  5F                 	db	95
   441  00F042  43                 	db	67
   442  00F043  68                 	db	104
   443  00F044  61                 	db	97
   444  00F045  6E                 	db	110
   445  00F046  6E                 	db	110
   446  00F047  65                 	db	101
   447  00F048  6C                 	db	108
   448  00F049  48                 	db	72
   449  00F04A  5F                 	db	95
   450  00F04B  32                 	db	50
   451  00F04C  5F                 	db	95
   452  00F04D  4F                 	db	79
   453  00F04E  46                 	db	70
   454  00F04F  46                 	db	70
   455  00F050  00                 	db	0
   456  00F051                     __end_of_Conf2_ChannelH_2_OFF_STR:
   457                           	opt stack 0
   458  00F051                     _Conf2_ChannelH_3_OFF_STR:
   459                           	opt stack 0
   460  00F051  43                 	db	67
   461  00F052  6F                 	db	111
   462  00F053  6E                 	db	110
   463  00F054  66                 	db	102
   464  00F055  32                 	db	50
   465  00F056  5F                 	db	95
   466  00F057  43                 	db	67
   467  00F058  68                 	db	104
   468  00F059  61                 	db	97
   469  00F05A  6E                 	db	110
   470  00F05B  6E                 	db	110
   471  00F05C  65                 	db	101
   472  00F05D  6C                 	db	108
   473  00F05E  48                 	db	72
   474  00F05F  5F                 	db	95
   475  00F060  33                 	db	51
   476  00F061  5F                 	db	95
   477  00F062  4F                 	db	79
   478  00F063  46                 	db	70
   479  00F064  46                 	db	70
   480  00F065  00                 	db	0
   481  00F066                     __end_of_Conf2_ChannelH_3_OFF_STR:
   482                           	opt stack 0
   483  00F066                     _Conf2_ChannelH_1_ON_STR:
   484                           	opt stack 0
   485  00F066  43                 	db	67
   486  00F067  6F                 	db	111
   487  00F068  6E                 	db	110
   488  00F069  66                 	db	102
   489  00F06A  32                 	db	50
   490  00F06B  5F                 	db	95
   491  00F06C  43                 	db	67
   492  00F06D  68                 	db	104
   493  00F06E  61                 	db	97
   494  00F06F  6E                 	db	110
   495  00F070  6E                 	db	110
   496  00F071  65                 	db	101
   497  00F072  6C                 	db	108
   498  00F073  48                 	db	72
   499  00F074  5F                 	db	95
   500  00F075  31                 	db	49
   501  00F076  5F                 	db	95
   502  00F077  4F                 	db	79
   503  00F078  4E                 	db	78
   504  00F079  00                 	db	0
   505  00F07A                     __end_of_Conf2_ChannelH_1_ON_STR:
   506                           	opt stack 0
   507  00F07A                     _Conf2_ChannelH_2_ON_STR:
   508                           	opt stack 0
   509  00F07A  43                 	db	67
   510  00F07B  6F                 	db	111
   511  00F07C  6E                 	db	110
   512  00F07D  66                 	db	102
   513  00F07E  32                 	db	50
   514  00F07F  5F                 	db	95
   515  00F080  43                 	db	67
   516  00F081  68                 	db	104
   517  00F082  61                 	db	97
   518  00F083  6E                 	db	110
   519  00F084  6E                 	db	110
   520  00F085  65                 	db	101
   521  00F086  6C                 	db	108
   522  00F087  48                 	db	72
   523  00F088  5F                 	db	95
   524  00F089  32                 	db	50
   525  00F08A  5F                 	db	95
   526  00F08B  4F                 	db	79
   527  00F08C  4E                 	db	78
   528  00F08D  00                 	db	0
   529  00F08E                     __end_of_Conf2_ChannelH_2_ON_STR:
   530                           	opt stack 0
   531  00F08E                     _Conf2_ChannelH_3_ON_STR:
   532                           	opt stack 0
   533  00F08E  43                 	db	67
   534  00F08F  6F                 	db	111
   535  00F090  6E                 	db	110
   536  00F091  66                 	db	102
   537  00F092  32                 	db	50
   538  00F093  5F                 	db	95
   539  00F094  43                 	db	67
   540  00F095  68                 	db	104
   541  00F096  61                 	db	97
   542  00F097  6E                 	db	110
   543  00F098  6E                 	db	110
   544  00F099  65                 	db	101
   545  00F09A  6C                 	db	108
   546  00F09B  48                 	db	72
   547  00F09C  5F                 	db	95
   548  00F09D  33                 	db	51
   549  00F09E  5F                 	db	95
   550  00F09F  4F                 	db	79
   551  00F0A0  4E                 	db	78
   552  00F0A1  00                 	db	0
   553  00F0A2                     __end_of_Conf2_ChannelH_3_ON_STR:
   554                           	opt stack 0
   555  00F0A2                     _Conf2_ChannelB_OFF_STR:
   556                           	opt stack 0
   557  00F0A2  43                 	db	67
   558  00F0A3  6F                 	db	111
   559  00F0A4  6E                 	db	110
   560  00F0A5  66                 	db	102
   561  00F0A6  32                 	db	50
   562  00F0A7  5F                 	db	95
   563  00F0A8  43                 	db	67
   564  00F0A9  68                 	db	104
   565  00F0AA  61                 	db	97
   566  00F0AB  6E                 	db	110
   567  00F0AC  6E                 	db	110
   568  00F0AD  65                 	db	101
   569  00F0AE  6C                 	db	108
   570  00F0AF  42                 	db	66
   571  00F0B0  5F                 	db	95
   572  00F0B1  4F                 	db	79
   573  00F0B2  46                 	db	70
   574  00F0B3  46                 	db	70
   575  00F0B4  00                 	db	0
   576  00F0B5                     __end_of_Conf2_ChannelB_OFF_STR:
   577                           	opt stack 0
   578  00F0B5                     _Conf2_ChannelD_OFF_STR:
   579                           	opt stack 0
   580  00F0B5  43                 	db	67
   581  00F0B6  6F                 	db	111
   582  00F0B7  6E                 	db	110
   583  00F0B8  66                 	db	102
   584  00F0B9  32                 	db	50
   585  00F0BA  5F                 	db	95
   586  00F0BB  43                 	db	67
   587  00F0BC  68                 	db	104
   588  00F0BD  61                 	db	97
   589  00F0BE  6E                 	db	110
   590  00F0BF  6E                 	db	110
   591  00F0C0  65                 	db	101
   592  00F0C1  6C                 	db	108
   593  00F0C2  44                 	db	68
   594  00F0C3  5F                 	db	95
   595  00F0C4  4F                 	db	79
   596  00F0C5  46                 	db	70
   597  00F0C6  46                 	db	70
   598  00F0C7  00                 	db	0
   599  00F0C8                     __end_of_Conf2_ChannelD_OFF_STR:
   600                           	opt stack 0
   601  00F0C8                     _Conf2_ChannelB_ON_STR:
   602                           	opt stack 0
   603  00F0C8  43                 	db	67
   604  00F0C9  6F                 	db	111
   605  00F0CA  6E                 	db	110
   606  00F0CB  66                 	db	102
   607  00F0CC  32                 	db	50
   608  00F0CD  5F                 	db	95
   609  00F0CE  43                 	db	67
   610  00F0CF  68                 	db	104
   611  00F0D0  61                 	db	97
   612  00F0D1  6E                 	db	110
   613  00F0D2  6E                 	db	110
   614  00F0D3  65                 	db	101
   615  00F0D4  6C                 	db	108
   616  00F0D5  42                 	db	66
   617  00F0D6  5F                 	db	95
   618  00F0D7  4F                 	db	79
   619  00F0D8  4E                 	db	78
   620  00F0D9  00                 	db	0
   621  00F0DA                     __end_of_Conf2_ChannelB_ON_STR:
   622                           	opt stack 0
   623  00F0DA                     _Conf2_ChannelD_ON_STR:
   624                           	opt stack 0
   625  00F0DA  43                 	db	67
   626  00F0DB  6F                 	db	111
   627  00F0DC  6E                 	db	110
   628  00F0DD  66                 	db	102
   629  00F0DE  32                 	db	50
   630  00F0DF  5F                 	db	95
   631  00F0E0  43                 	db	67
   632  00F0E1  68                 	db	104
   633  00F0E2  61                 	db	97
   634  00F0E3  6E                 	db	110
   635  00F0E4  6E                 	db	110
   636  00F0E5  65                 	db	101
   637  00F0E6  6C                 	db	108
   638  00F0E7  44                 	db	68
   639  00F0E8  5F                 	db	95
   640  00F0E9  4F                 	db	79
   641  00F0EA  4E                 	db	78
   642  00F0EB  00                 	db	0
   643  00F0EC                     __end_of_Conf2_ChannelD_ON_STR:
   644                           	opt stack 0
   645  00F0EC                     _Conf2_ChannelB_OFF:
   646                           	opt stack 0
   647  00F0EC  00                 	db	0
   648  00F0ED  01                 	db	1
   649  00F0EE  01                 	db	1
   650  00F0EF  00                 	db	0
   651  00F0F0  01                 	db	1
   652  00F0F1  00                 	db	0
   653  00F0F2  00                 	db	0
   654  00F0F3  00                 	db	0
   655  00F0F4  00                 	db	0
   656  00F0F5  00                 	db	0
   657  00F0F6  00                 	db	0
   658  00F0F7  01                 	db	1
   659  00F0F8  00                 	db	0
   660  00F0F9  01                 	db	1
   661  00F0FA  00                 	db	0
   662  00F0FB  00                 	db	0
   663  00F0FC                     __end_of_Conf2_ChannelB_OFF:
   664                           	opt stack 0
   665  00F0FC                     _Conf2_ChannelB_ON:
   666                           	opt stack 0
   667  00F0FC  00                 	db	0
   668  00F0FD  01                 	db	1
   669  00F0FE  01                 	db	1
   670  00F0FF  00                 	db	0
   671  00F100  01                 	db	1
   672  00F101  00                 	db	0
   673  00F102  00                 	db	0
   674  00F103  00                 	db	0
   675  00F104  00                 	db	0
   676  00F105  00                 	db	0
   677  00F106  01                 	db	1
   678  00F107  00                 	db	0
   679  00F108  00                 	db	0
   680  00F109  01                 	db	1
   681  00F10A  00                 	db	0
   682  00F10B  00                 	db	0
   683  00F10C                     __end_of_Conf2_ChannelB_ON:
   684                           	opt stack 0
   685  00F10C                     _Conf2_ChannelD_OFF:
   686                           	opt stack 0
   687  00F10C  00                 	db	0
   688  00F10D  01                 	db	1
   689  00F10E  01                 	db	1
   690  00F10F  00                 	db	0
   691  00F110  01                 	db	1
   692  00F111  00                 	db	0
   693  00F112  00                 	db	0
   694  00F113  00                 	db	0
   695  00F114  00                 	db	0
   696  00F115  00                 	db	0
   697  00F116  00                 	db	0
   698  00F117  01                 	db	1
   699  00F118  00                 	db	0
   700  00F119  00                 	db	0
   701  00F11A  00                 	db	0
   702  00F11B  01                 	db	1
   703  00F11C                     __end_of_Conf2_ChannelD_OFF:
   704                           	opt stack 0
   705  00F11C                     _Conf2_ChannelD_ON:
   706                           	opt stack 0
   707  00F11C  00                 	db	0
   708  00F11D  01                 	db	1
   709  00F11E  01                 	db	1
   710  00F11F  00                 	db	0
   711  00F120  01                 	db	1
   712  00F121  00                 	db	0
   713  00F122  00                 	db	0
   714  00F123  00                 	db	0
   715  00F124  00                 	db	0
   716  00F125  00                 	db	0
   717  00F126  01                 	db	1
   718  00F127  00                 	db	0
   719  00F128  00                 	db	0
   720  00F129  00                 	db	0
   721  00F12A  00                 	db	0
   722  00F12B  01                 	db	1
   723  00F12C                     __end_of_Conf2_ChannelD_ON:
   724                           	opt stack 0
   725  00F12C                     _Conf2_ChannelH_1_OFF:
   726                           	opt stack 0
   727  00F12C  00                 	db	0
   728  00F12D  01                 	db	1
   729  00F12E  01                 	db	1
   730  00F12F  00                 	db	0
   731  00F130  01                 	db	1
   732  00F131  00                 	db	0
   733  00F132  00                 	db	0
   734  00F133  00                 	db	0
   735  00F134  00                 	db	0
   736  00F135  01                 	db	1
   737  00F136  00                 	db	0
   738  00F137  00                 	db	0
   739  00F138  00                 	db	0
   740  00F139  00                 	db	0
   741  00F13A  00                 	db	0
   742  00F13B  00                 	db	0
   743  00F13C                     __end_of_Conf2_ChannelH_1_OFF:
   744                           	opt stack 0
   745  00F13C                     _Conf2_ChannelH_1_ON:
   746                           	opt stack 0
   747  00F13C  00                 	db	0
   748  00F13D  01                 	db	1
   749  00F13E  01                 	db	1
   750  00F13F  00                 	db	0
   751  00F140  01                 	db	1
   752  00F141  00                 	db	0
   753  00F142  00                 	db	0
   754  00F143  00                 	db	0
   755  00F144  01                 	db	1
   756  00F145  00                 	db	0
   757  00F146  00                 	db	0
   758  00F147  00                 	db	0
   759  00F148  00                 	db	0
   760  00F149  00                 	db	0
   761  00F14A  00                 	db	0
   762  00F14B  00                 	db	0
   763  00F14C                     __end_of_Conf2_ChannelH_1_ON:
   764                           	opt stack 0
   765  00F14C                     _Conf2_ChannelH_2_OFF:
   766                           	opt stack 0
   767  00F14C  00                 	db	0
   768  00F14D  01                 	db	1
   769  00F14E  01                 	db	1
   770  00F14F  00                 	db	0
   771  00F150  01                 	db	1
   772  00F151  00                 	db	0
   773  00F152  00                 	db	0
   774  00F153  00                 	db	0
   775  00F154  00                 	db	0
   776  00F155  00                 	db	0
   777  00F156  00                 	db	0
   778  00F157  01                 	db	1
   779  00F158  00                 	db	0
   780  00F159  00                 	db	0
   781  00F15A  00                 	db	0
   782  00F15B  00                 	db	0
   783  00F15C                     __end_of_Conf2_ChannelH_2_OFF:
   784                           	opt stack 0
   785  00F15C                     _Conf2_ChannelH_2_ON:
   786                           	opt stack 0
   787  00F15C  00                 	db	0
   788  00F15D  01                 	db	1
   789  00F15E  01                 	db	1
   790  00F15F  00                 	db	0
   791  00F160  01                 	db	1
   792  00F161  00                 	db	0
   793  00F162  00                 	db	0
   794  00F163  00                 	db	0
   795  00F164  00                 	db	0
   796  00F165  00                 	db	0
   797  00F166  01                 	db	1
   798  00F167  00                 	db	0
   799  00F168  00                 	db	0
   800  00F169  00                 	db	0
   801  00F16A  00                 	db	0
   802  00F16B  00                 	db	0
   803  00F16C                     __end_of_Conf2_ChannelH_2_ON:
   804                           	opt stack 0
   805  00F16C                     _Conf2_ChannelH_3_OFF:
   806                           	opt stack 0
   807  00F16C  00                 	db	0
   808  00F16D  01                 	db	1
   809  00F16E  01                 	db	1
   810  00F16F  00                 	db	0
   811  00F170  01                 	db	1
   812  00F171  00                 	db	0
   813  00F172  01                 	db	1
   814  00F173  00                 	db	0
   815  00F174  00                 	db	0
   816  00F175  00                 	db	0
   817  00F176  00                 	db	0
   818  00F177  00                 	db	0
   819  00F178  00                 	db	0
   820  00F179  00                 	db	0
   821  00F17A  00                 	db	0
   822  00F17B  00                 	db	0
   823  00F17C                     __end_of_Conf2_ChannelH_3_OFF:
   824                           	opt stack 0
   825  00F17C                     _Conf2_ChannelH_3_ON:
   826                           	opt stack 0
   827  00F17C  00                 	db	0
   828  00F17D  01                 	db	1
   829  00F17E  01                 	db	1
   830  00F17F  00                 	db	0
   831  00F180  01                 	db	1
   832  00F181  00                 	db	0
   833  00F182  00                 	db	0
   834  00F183  01                 	db	1
   835  00F184  00                 	db	0
   836  00F185  00                 	db	0
   837  00F186  00                 	db	0
   838  00F187  00                 	db	0
   839  00F188  00                 	db	0
   840  00F189  00                 	db	0
   841  00F18A  00                 	db	0
   842  00F18B  00                 	db	0
   843  00F18C                     __end_of_Conf2_ChannelH_3_ON:
   844                           	opt stack 0
   845  00F18C                     _Conf1_ChannelD_STR:
   846                           	opt stack 0
   847  00F18C  43                 	db	67
   848  00F18D  6F                 	db	111
   849  00F18E  6E                 	db	110
   850  00F18F  66                 	db	102
   851  00F190  31                 	db	49
   852  00F191  5F                 	db	95
   853  00F192  43                 	db	67
   854  00F193  68                 	db	104
   855  00F194  61                 	db	97
   856  00F195  6E                 	db	110
   857  00F196  6E                 	db	110
   858  00F197  65                 	db	101
   859  00F198  6C                 	db	108
   860  00F199  44                 	db	68
   861  00F19A  00                 	db	0
   862  00F19B                     __end_of_Conf1_ChannelD_STR:
   863                           	opt stack 0
   864  00F19B                     _Conf1_ChannelE_STR:
   865                           	opt stack 0
   866  00F19B  43                 	db	67
   867  00F19C  6F                 	db	111
   868  00F19D  6E                 	db	110
   869  00F19E  66                 	db	102
   870  00F19F  31                 	db	49
   871  00F1A0  5F                 	db	95
   872  00F1A1  43                 	db	67
   873  00F1A2  68                 	db	104
   874  00F1A3  61                 	db	97
   875  00F1A4  6E                 	db	110
   876  00F1A5  6E                 	db	110
   877  00F1A6  65                 	db	101
   878  00F1A7  6C                 	db	108
   879  00F1A8  45                 	db	69
   880  00F1A9  00                 	db	0
   881  00F1AA                     __end_of_Conf1_ChannelE_STR:
   882                           	opt stack 0
   883  00F1AA                     _Conf1_ChannelF_STR:
   884                           	opt stack 0
   885  00F1AA  43                 	db	67
   886  00F1AB  6F                 	db	111
   887  00F1AC  6E                 	db	110
   888  00F1AD  66                 	db	102
   889  00F1AE  31                 	db	49
   890  00F1AF  5F                 	db	95
   891  00F1B0  43                 	db	67
   892  00F1B1  68                 	db	104
   893  00F1B2  61                 	db	97
   894  00F1B3  6E                 	db	110
   895  00F1B4  6E                 	db	110
   896  00F1B5  65                 	db	101
   897  00F1B6  6C                 	db	108
   898  00F1B7  46                 	db	70
   899  00F1B8  00                 	db	0
   900  00F1B9                     __end_of_Conf1_ChannelF_STR:
   901                           	opt stack 0
   902  00F1B9                     _SYNTAX_ERR:
   903                           	opt stack 0
   904  00F1B9  45                 	db	69
   905  00F1BA  72                 	db	114
   906  00F1BB  72                 	db	114
   907  00F1BC  6F                 	db	111
   908  00F1BD  72                 	db	114
   909  00F1BE  3A                 	db	58
   910  00F1BF  20                 	db	32
   911  00F1C0  53                 	db	83
   912  00F1C1  79                 	db	121
   913  00F1C2  6E                 	db	110
   914  00F1C3  74                 	db	116
   915  00F1C4  61                 	db	97
   916  00F1C5  78                 	db	120
   917  00F1C6  00                 	db	0
   918  00F1C7                     __end_of_SYNTAX_ERR:
   919                           	opt stack 0
   920  00F1C7                     _Conf1_ChannelD:
   921                           	opt stack 0
   922  00F1C7  03                 	db	3
   923  00F1C8  03                 	db	3
   924  00F1C9  03                 	db	3
   925  00F1CA  03                 	db	3
   926  00F1CB  03                 	db	3
   927  00F1CC  03                 	db	3
   928  00F1CD  00                 	db	0
   929  00F1CE  00                 	db	0
   930  00F1CF  01                 	db	1
   931  00F1D0  00                 	db	0
   932  00F1D1  00                 	db	0
   933  00F1D2  00                 	db	0
   934  00F1D3                     __end_of_Conf1_ChannelD:
   935                           	opt stack 0
   936  00F1D3                     _Conf1_ChannelE:
   937                           	opt stack 0
   938  00F1D3  00                 	db	0
   939  00F1D4  03                 	db	3
   940  00F1D5  03                 	db	3
   941  00F1D6  03                 	db	3
   942  00F1D7  03                 	db	3
   943  00F1D8  03                 	db	3
   944  00F1D9  00                 	db	0
   945  00F1DA  00                 	db	0
   946  00F1DB  01                 	db	1
   947  00F1DC  00                 	db	0
   948  00F1DD  00                 	db	0
   949  00F1DE  00                 	db	0
   950  00F1DF                     __end_of_Conf1_ChannelE:
   951                           	opt stack 0
   952  00F1DF                     _Conf1_ChannelF:
   953                           	opt stack 0
   954  00F1DF  03                 	db	3
   955  00F1E0  00                 	db	0
   956  00F1E1  03                 	db	3
   957  00F1E2  03                 	db	3
   958  00F1E3  03                 	db	3
   959  00F1E4  03                 	db	3
   960  00F1E5  00                 	db	0
   961  00F1E6  00                 	db	0
   962  00F1E7  01                 	db	1
   963  00F1E8  00                 	db	0
   964  00F1E9  00                 	db	0
   965  00F1EA  00                 	db	0
   966  00F1EB                     __end_of_Conf1_ChannelF:
   967                           	opt stack 0
   968  00F1EB                     _FirmVersion:
   969                           	opt stack 0
   970  00F1EB  31                 	db	49
   971  00F1EC  2E                 	db	46
   972  00F1ED  30                 	db	48
   973  00F1EE  5F                 	db	95
   974  00F1EF  44                 	db	68
   975  00F1F0  57                 	db	87
   976  00F1F1  30                 	db	48
   977  00F1F2  63                 	db	99
   978  00F1F3  00                 	db	0
   979  00F1F4                     __end_of_FirmVersion:
   980                           	opt stack 0
   981  00F1F4                     _PCBVersion:
   982                           	opt stack 0
   983  00F1F4  52                 	db	82
   984  00F1F5  65                 	db	101
   985  00F1F6  76                 	db	118
   986  00F1F7  41                 	db	65
   987  00F1F8  00                 	db	0
   988  00F1F9                     __end_of_PCBVersion:
   989                           	opt stack 0
   990  00F1F9                     _Conf1_Channels:
   991                           	opt stack 0
   992  00F1F9  44                 	db	68
   993  00F1FA  45                 	db	69
   994  00F1FB  46                 	db	70
   995  00F1FC  00                 	db	0
   996  00F1FD                     __end_of_Conf1_Channels:
   997                           	opt stack 0
   998  00F1FD                     _Conf2_Channels:
   999                           	opt stack 0
  1000  00F1FD  42                 	db	66
  1001  00F1FE  44                 	db	68
  1002  00F1FF  48                 	db	72
  1003  00F200  00                 	db	0
  1004  00F201                     __end_of_Conf2_Channels:
  1005                           	opt stack 0
  1006  00F201                     _Frequency:
  1007                           	opt stack 0
  1008  00F201  33                 	db	51
  1009  00F202  31                 	db	49
  1010  00F203  35                 	db	53
  1011  00F204  00                 	db	0
  1012  00F205                     __end_of_Frequency:
  1013                           	opt stack 0
  1014  00F205                     _CRLN:
  1015                           	opt stack 0
  1016  00F205  0D                 	db	13
  1017  00F206  0A                 	db	10
  1018  00F207  00                 	db	0
  1019  00F208                     __end_of_CRLN:
  1020                           	opt stack 0
  1021  0000                     _ADCON0	set	4034
  1022  0000                     _ADCON0bits	set	4034
  1023  0000                     _ADCON1	set	4033
  1024  0000                     _ADCON1bits	set	4033
  1025  0000                     _ADCON2	set	4032
  1026  0000                     _ADCON2bits	set	4032
  1027  0000                     _ADRESH	set	4036
  1028  0000                     _ADRESL	set	4035
  1029  0000                     _ANSEL	set	3966
  1030  0000                     _ANSELH	set	3967
  1031  0000                     _BAUDCONbits	set	4024
  1032  0000                     _EEADR	set	4009
  1033  0000                     _EEADRH	set	4010
  1034  0000                     _EECON1bits	set	4006
  1035  0000                     _EECON2	set	4007
  1036  0000                     _EEDATA	set	4008
  1037  0000                     _INTCON2bits	set	4081
  1038  0000                     _INTCONbits	set	4082
  1039  0000                     _IOCBbits	set	3965
  1040  0000                     _IPR1bits	set	3999
  1041  0000                     _IPR2bits	set	4002
  1042  0000                     _LATA	set	3977
  1043  0000                     _LATB	set	3978
  1044  0000                     _LATC	set	3979
  1045  0000                     _PIE1bits	set	3997
  1046  0000                     _PIE2bits	set	4000
  1047  0000                     _PIR1bits	set	3998
  1048  0000                     _PIR2bits	set	4001
  1049  0000                     _PORTA	set	3968
  1050  0000                     _PORTB	set	3969
  1051  0000                     _PORTC	set	3970
  1052  0000                     _PR2	set	4043
  1053  0000                     _RCONbits	set	4048
  1054  0000                     _RCREG	set	4014
  1055  0000                     _RCSTA	set	4011
  1056  0000                     _RCSTAbits	set	4011
  1057  0000                     _SPBRG	set	4015
  1058  0000                     _SPBRGH	set	4016
  1059  0000                     _T0CONbits	set	4053
  1060  0000                     _T1CONbits	set	4045
  1061  0000                     _T2CONbits	set	4042
  1062  0000                     _T3CONbits	set	4017
  1063  0000                     _TMR0H	set	4055
  1064  0000                     _TMR0L	set	4054
  1065  0000                     _TMR1H	set	4047
  1066  0000                     _TMR1L	set	4046
  1067  0000                     _TMR2	set	4044
  1068  0000                     _TMR3H	set	4019
  1069  0000                     _TMR3L	set	4018
  1070  0000                     _TRISAbits	set	3986
  1071  0000                     _TRISBbits	set	3987
  1072  0000                     _TRISCbits	set	3988
  1073  0000                     _TXREG	set	4013
  1074  0000                     _TXSTA	set	4012
  1075  0000                     _TXSTAbits	set	4012
  1076  0000                     _WPUB	set	3964
  1077  00F208                     STR_70:
  1078  00F208  4E                 	db	78	;'N'
  1079  00F209  45                 	db	69	;'E'
  1080  00F20A  43                 	db	67	;'C'
  1081  00F20B  20                 	db	32
  1082  00F20C  63                 	db	99	;'c'
  1083  00F20D  6F                 	db	111	;'o'
  1084  00F20E  64                 	db	100	;'d'
  1085  00F20F  65                 	db	101	;'e'
  1086  00F210  20                 	db	32
  1087  00F211  30                 	db	48	;'0'
  1088  00F212  78                 	db	120	;'x'
  1089  00F213  25                 	db	37
  1090  00F214  6C                 	db	108	;'l'
  1091  00F215  58                 	db	88	;'X'
  1092  00F216  20                 	db	32
  1093  00F217  6E                 	db	110	;'n'
  1094  00F218  6F                 	db	111	;'o'
  1095  00F219  77                 	db	119	;'w'
  1096  00F21A  20                 	db	32
  1097  00F21B  74                 	db	116	;'t'
  1098  00F21C  72                 	db	114	;'r'
  1099  00F21D  61                 	db	97	;'a'
  1100  00F21E  6E                 	db	110	;'n'
  1101  00F21F  73                 	db	115	;'s'
  1102  00F220  6D                 	db	109	;'m'
  1103  00F221  69                 	db	105	;'i'
  1104  00F222  74                 	db	116	;'t'
  1105  00F223  73                 	db	115	;'s'
  1106  00F224  20                 	db	32
  1107  00F225  52                 	db	82	;'R'
  1108  00F226  46                 	db	70	;'F'
  1109  00F227  20                 	db	32
  1110  00F228  63                 	db	99	;'c'
  1111  00F229  6F                 	db	111	;'o'
  1112  00F22A  6E                 	db	110	;'n'
  1113  00F22B  66                 	db	102	;'f'
  1114  00F22C  69                 	db	105	;'i'
  1115  00F22D  67                 	db	103	;'g'
  1116  00F22E  20                 	db	32
  1117  00F22F  25                 	db	37
  1118  00F230  64                 	db	100	;'d'
  1119  00F231  20                 	db	32
  1120  00F232  63                 	db	99	;'c'
  1121  00F233  68                 	db	104	;'h'
  1122  00F234  61                 	db	97	;'a'
  1123  00F235  6E                 	db	110	;'n'
  1124  00F236  6E                 	db	110	;'n'
  1125  00F237  65                 	db	101	;'e'
  1126  00F238  6C                 	db	108	;'l'
  1127  00F239  20                 	db	32
  1128  00F23A  25                 	db	37
  1129  00F23B  63                 	db	99	;'c'
  1130  00F23C  20                 	db	32
  1131  00F23D  64                 	db	100	;'d'
  1132  00F23E  65                 	db	101	;'e'
  1133  00F23F  76                 	db	118	;'v'
  1134  00F240  69                 	db	105	;'i'
  1135  00F241  63                 	db	99	;'c'
  1136  00F242  65                 	db	101	;'e'
  1137  00F243  20                 	db	32
  1138  00F244  25                 	db	37
  1139  00F245  64                 	db	100	;'d'
  1140  00F246  00                 	db	0
  1141  00F247                     STR_81:
  1142  00F247  45                 	db	69	;'E'
  1143  00F248  6E                 	db	110	;'n'
  1144  00F249  74                 	db	116	;'t'
  1145  00F24A  65                 	db	101	;'e'
  1146  00F24B  72                 	db	114	;'r'
  1147  00F24C  20                 	db	32
  1148  00F24D  73                 	db	115	;'s'
  1149  00F24E  70                 	db	112	;'p'
  1150  00F24F  65                 	db	101	;'e'
  1151  00F250  63                 	db	99	;'c'
  1152  00F251  69                 	db	105	;'i'
  1153  00F252  61                 	db	97	;'a'
  1154  00F253  6C                 	db	108	;'l'
  1155  00F254  20                 	db	32
  1156  00F255  27                 	db	39
  1157  00F256  43                 	db	67	;'C'
  1158  00F257  6F                 	db	111	;'o'
  1159  00F258  64                 	db	100	;'d'
  1160  00F259  65                 	db	101	;'e'
  1161  00F25A  27                 	db	39
  1162  00F25B  20                 	db	32
  1163  00F25C  74                 	db	116	;'t'
  1164  00F25D  6F                 	db	111	;'o'
  1165  00F25E  20                 	db	32
  1166  00F25F  63                 	db	99	;'c'
  1167  00F260  68                 	db	104	;'h'
  1168  00F261  61                 	db	97	;'a'
  1169  00F262  6E                 	db	110	;'n'
  1170  00F263  67                 	db	103	;'g'
  1171  00F264  65                 	db	101	;'e'
  1172  00F265  20                 	db	32
  1173  00F266  73                 	db	115	;'s'
  1174  00F267  65                 	db	101	;'e'
  1175  00F268  72                 	db	114	;'r'
  1176  00F269  69                 	db	105	;'i'
  1177  00F26A  61                 	db	97	;'a'
  1178  00F26B  6C                 	db	108	;'l'
  1179  00F26C  20                 	db	32
  1180  00F26D  6E                 	db	110	;'n'
  1181  00F26E  75                 	db	117	;'u'
  1182  00F26F  6D                 	db	109	;'m'
  1183  00F270  62                 	db	98	;'b'
  1184  00F271  65                 	db	101	;'e'
  1185  00F272  72                 	db	114	;'r'
  1186  00F273  20                 	db	32
  1187  00F274  6F                 	db	111	;'o'
  1188  00F275  72                 	db	114	;'r'
  1189  00F276  20                 	db	32
  1190  00F277  4E                 	db	78	;'N'
  1191  00F278  20                 	db	32
  1192  00F279  74                 	db	116	;'t'
  1193  00F27A  6F                 	db	111	;'o'
  1194  00F27B  20                 	db	32
  1195  00F27C  63                 	db	99	;'c'
  1196  00F27D  61                 	db	97	;'a'
  1197  00F27E  6E                 	db	110	;'n'
  1198  00F27F  63                 	db	99	;'c'
  1199  00F280  65                 	db	101	;'e'
  1200  00F281  6C                 	db	108	;'l'
  1201  00F282  00                 	db	0
  1202  00F283                     STR_71:
  1203  00F283  4E                 	db	78	;'N'
  1204  00F284  45                 	db	69	;'E'
  1205  00F285  43                 	db	67	;'C'
  1206  00F286  20                 	db	32
  1207  00F287  63                 	db	99	;'c'
  1208  00F288  6F                 	db	111	;'o'
  1209  00F289  64                 	db	100	;'d'
  1210  00F28A  65                 	db	101	;'e'
  1211  00F28B  20                 	db	32
  1212  00F28C  30                 	db	48	;'0'
  1213  00F28D  78                 	db	120	;'x'
  1214  00F28E  25                 	db	37
  1215  00F28F  6C                 	db	108	;'l'
  1216  00F290  58                 	db	88	;'X'
  1217  00F291  20                 	db	32
  1218  00F292  6E                 	db	110	;'n'
  1219  00F293  6F                 	db	111	;'o'
  1220  00F294  77                 	db	119	;'w'
  1221  00F295  20                 	db	32
  1222  00F296  74                 	db	116	;'t'
  1223  00F297  72                 	db	114	;'r'
  1224  00F298  61                 	db	97	;'a'
  1225  00F299  6E                 	db	110	;'n'
  1226  00F29A  73                 	db	115	;'s'
  1227  00F29B  6D                 	db	109	;'m'
  1228  00F29C  69                 	db	105	;'i'
  1229  00F29D  74                 	db	116	;'t'
  1230  00F29E  73                 	db	115	;'s'
  1231  00F29F  20                 	db	32
  1232  00F2A0  52                 	db	82	;'R'
  1233  00F2A1  46                 	db	70	;'F'
  1234  00F2A2  20                 	db	32
  1235  00F2A3  63                 	db	99	;'c'
  1236  00F2A4  6F                 	db	111	;'o'
  1237  00F2A5  6E                 	db	110	;'n'
  1238  00F2A6  66                 	db	102	;'f'
  1239  00F2A7  69                 	db	105	;'i'
  1240  00F2A8  67                 	db	103	;'g'
  1241  00F2A9  20                 	db	32
  1242  00F2AA  25                 	db	37
  1243  00F2AB  64                 	db	100	;'d'
  1244  00F2AC  20                 	db	32
  1245  00F2AD  63                 	db	99	;'c'
  1246  00F2AE  68                 	db	104	;'h'
  1247  00F2AF  61                 	db	97	;'a'
  1248  00F2B0  6E                 	db	110	;'n'
  1249  00F2B1  6E                 	db	110	;'n'
  1250  00F2B2  65                 	db	101	;'e'
  1251  00F2B3  6C                 	db	108	;'l'
  1252  00F2B4  20                 	db	32
  1253  00F2B5  25                 	db	37
  1254  00F2B6  63                 	db	99	;'c'
  1255  00F2B7  20                 	db	32
  1256  00F2B8  00                 	db	0
  1257  00F2B9                     STR_72:
  1258  00F2B9  52                 	db	82	;'R'
  1259  00F2BA  46                 	db	70	;'F'
  1260  00F2BB  20                 	db	32
  1261  00F2BC  63                 	db	99	;'c'
  1262  00F2BD  6F                 	db	111	;'o'
  1263  00F2BE  6E                 	db	110	;'n'
  1264  00F2BF  66                 	db	102	;'f'
  1265  00F2C0  69                 	db	105	;'i'
  1266  00F2C1  67                 	db	103	;'g'
  1267  00F2C2  20                 	db	32
  1268  00F2C3  25                 	db	37
  1269  00F2C4  64                 	db	100	;'d'
  1270  00F2C5  20                 	db	32
  1271  00F2C6  63                 	db	99	;'c'
  1272  00F2C7  68                 	db	104	;'h'
  1273  00F2C8  61                 	db	97	;'a'
  1274  00F2C9  6E                 	db	110	;'n'
  1275  00F2CA  6E                 	db	110	;'n'
  1276  00F2CB  65                 	db	101	;'e'
  1277  00F2CC  6C                 	db	108	;'l'
  1278  00F2CD  20                 	db	32
  1279  00F2CE  25                 	db	37
  1280  00F2CF  63                 	db	99	;'c'
  1281  00F2D0  20                 	db	32
  1282  00F2D1  64                 	db	100	;'d'
  1283  00F2D2  65                 	db	101	;'e'
  1284  00F2D3  76                 	db	118	;'v'
  1285  00F2D4  69                 	db	105	;'i'
  1286  00F2D5  63                 	db	99	;'c'
  1287  00F2D6  65                 	db	101	;'e'
  1288  00F2D7  20                 	db	32
  1289  00F2D8  25                 	db	37
  1290  00F2D9  64                 	db	100	;'d'
  1291  00F2DA  20                 	db	32
  1292  00F2DB  73                 	db	115	;'s'
  1293  00F2DC  75                 	db	117	;'u'
  1294  00F2DD  63                 	db	99	;'c'
  1295  00F2DE  63                 	db	99	;'c'
  1296  00F2DF  65                 	db	101	;'e'
  1297  00F2E0  73                 	db	115	;'s'
  1298  00F2E1  73                 	db	115	;'s'
  1299  00F2E2  66                 	db	102	;'f'
  1300  00F2E3  75                 	db	117	;'u'
  1301  00F2E4  6C                 	db	108	;'l'
  1302  00F2E5  6C                 	db	108	;'l'
  1303  00F2E6  79                 	db	121	;'y'
  1304  00F2E7  20                 	db	32
  1305  00F2E8  65                 	db	101	;'e'
  1306  00F2E9  72                 	db	114	;'r'
  1307  00F2EA  61                 	db	97	;'a'
  1308  00F2EB  73                 	db	115	;'s'
  1309  00F2EC  65                 	db	101	;'e'
  1310  00F2ED  64                 	db	100	;'d'
  1311  00F2EE  00                 	db	0
  1312  00F2EF                     STR_66:
  1313  00F2EF  45                 	db	69	;'E'
  1314  00F2F0  72                 	db	114	;'r'
  1315  00F2F1  72                 	db	114	;'r'
  1316  00F2F2  6F                 	db	111	;'o'
  1317  00F2F3  72                 	db	114	;'r'
  1318  00F2F4  3A                 	db	58	;':'
  1319  00F2F5  20                 	db	32
  1320  00F2F6  4E                 	db	78	;'N'
  1321  00F2F7  6F                 	db	111	;'o'
  1322  00F2F8  20                 	db	32
  1323  00F2F9  52                 	db	82	;'R'
  1324  00F2FA  46                 	db	70	;'F'
  1325  00F2FB  20                 	db	32
  1326  00F2FC  63                 	db	99	;'c'
  1327  00F2FD  6F                 	db	111	;'o'
  1328  00F2FE  6E                 	db	110	;'n'
  1329  00F2FF  66                 	db	102	;'f'
  1330  00F300  69                 	db	105	;'i'
  1331  00F301  67                 	db	103	;'g'
  1332  00F302  20                 	db	32
  1333  00F303  32                 	db	50	;'2'
  1334  00F304  2C                 	db	44
  1335  00F305  20                 	db	32
  1336  00F306  63                 	db	99	;'c'
  1337  00F307  68                 	db	104	;'h'
  1338  00F308  61                 	db	97	;'a'
  1339  00F309  6E                 	db	110	;'n'
  1340  00F30A  6E                 	db	110	;'n'
  1341  00F30B  65                 	db	101	;'e'
  1342  00F30C  6C                 	db	108	;'l'
  1343  00F30D  20                 	db	32
  1344  00F30E  48                 	db	72	;'H'
  1345  00F30F  20                 	db	32
  1346  00F310  64                 	db	100	;'d'
  1347  00F311  65                 	db	101	;'e'
  1348  00F312  76                 	db	118	;'v'
  1349  00F313  69                 	db	105	;'i'
  1350  00F314  63                 	db	99	;'c'
  1351  00F315  65                 	db	101	;'e'
  1352  00F316  20                 	db	32
  1353  00F317  73                 	db	115	;'s'
  1354  00F318  70                 	db	112	;'p'
  1355  00F319  65                 	db	101	;'e'
  1356  00F31A  63                 	db	99	;'c'
  1357  00F31B  69                 	db	105	;'i'
  1358  00F31C  66                 	db	102	;'f'
  1359  00F31D  69                 	db	105	;'i'
  1360  00F31E  65                 	db	101	;'e'
  1361  00F31F  64                 	db	100	;'d'
  1362  00F320  00                 	db	0
  1363  00F321                     STR_67:
  1364  00F321  45                 	db	69	;'E'
  1365  00F322  72                 	db	114	;'r'
  1366  00F323  72                 	db	114	;'r'
  1367  00F324  6F                 	db	111	;'o'
  1368  00F325  72                 	db	114	;'r'
  1369  00F326  3A                 	db	58	;':'
  1370  00F327  20                 	db	32
  1371  00F328  52                 	db	82	;'R'
  1372  00F329  46                 	db	70	;'F'
  1373  00F32A  20                 	db	32
  1374  00F32B  63                 	db	99	;'c'
  1375  00F32C  6F                 	db	111	;'o'
  1376  00F32D  6E                 	db	110	;'n'
  1377  00F32E  66                 	db	102	;'f'
  1378  00F32F  69                 	db	105	;'i'
  1379  00F330  67                 	db	103	;'g'
  1380  00F331  20                 	db	32
  1381  00F332  32                 	db	50	;'2'
  1382  00F333  2C                 	db	44
  1383  00F334  20                 	db	32
  1384  00F335  63                 	db	99	;'c'
  1385  00F336  68                 	db	104	;'h'
  1386  00F337  61                 	db	97	;'a'
  1387  00F338  6E                 	db	110	;'n'
  1388  00F339  6E                 	db	110	;'n'
  1389  00F33A  65                 	db	101	;'e'
  1390  00F33B  6C                 	db	108	;'l'
  1391  00F33C  20                 	db	32
  1392  00F33D  48                 	db	72	;'H'
  1393  00F33E  20                 	db	32
  1394  00F33F  64                 	db	100	;'d'
  1395  00F340  65                 	db	101	;'e'
  1396  00F341  76                 	db	118	;'v'
  1397  00F342  69                 	db	105	;'i'
  1398  00F343  63                 	db	99	;'c'
  1399  00F344  65                 	db	101	;'e'
  1400  00F345  20                 	db	32
  1401  00F346  6F                 	db	111	;'o'
  1402  00F347  75                 	db	117	;'u'
  1403  00F348  74                 	db	116	;'t'
  1404  00F349  20                 	db	32
  1405  00F34A  6F                 	db	111	;'o'
  1406  00F34B  66                 	db	102	;'f'
  1407  00F34C  20                 	db	32
  1408  00F34D  72                 	db	114	;'r'
  1409  00F34E  61                 	db	97	;'a'
  1410  00F34F  6E                 	db	110	;'n'
  1411  00F350  67                 	db	103	;'g'
  1412  00F351  65                 	db	101	;'e'
  1413  00F352  00                 	db	0
  1414  00F353                     STR_128:
  1415  00F353  53                 	db	83	;'S'
  1416  00F354  65                 	db	101	;'e'
  1417  00F355  74                 	db	116	;'t'
  1418  00F356  73                 	db	115	;'s'
  1419  00F357  20                 	db	32
  1420  00F358  52                 	db	82	;'R'
  1421  00F359  65                 	db	101	;'e'
  1422  00F35A  6D                 	db	109	;'m'
  1423  00F35B  6F                 	db	111	;'o'
  1424  00F35C  74                 	db	116	;'t'
  1425  00F35D  65                 	db	101	;'e'
  1426  00F35E  20                 	db	32
  1427  00F35F  62                 	db	98	;'b'
  1428  00F360  75                 	db	117	;'u'
  1429  00F361  74                 	db	116	;'t'
  1430  00F362  74                 	db	116	;'t'
  1431  00F363  6F                 	db	111	;'o'
  1432  00F364  6E                 	db	110	;'n'
  1433  00F365  20                 	db	32
  1434  00F366  74                 	db	116	;'t'
  1435  00F367  6F                 	db	111	;'o'
  1436  00F368  20                 	db	32
  1437  00F369  73                 	db	115	;'s'
  1438  00F36A  65                 	db	101	;'e'
  1439  00F36B  6E                 	db	110	;'n'
  1440  00F36C  64                 	db	100	;'d'
  1441  00F36D  20                 	db	32
  1442  00F36E  52                 	db	82	;'R'
  1443  00F36F  46                 	db	70	;'F'
  1444  00F370  20                 	db	32
  1445  00F371  43                 	db	67	;'C'
  1446  00F372  6F                 	db	111	;'o'
  1447  00F373  6E                 	db	110	;'n'
  1448  00F374  66                 	db	102	;'f'
  1449  00F375  69                 	db	105	;'i'
  1450  00F376  67                 	db	103	;'g'
  1451  00F377  20                 	db	32
  1452  00F378  32                 	db	50	;'2'
  1453  00F379  20                 	db	32
  1454  00F37A  63                 	db	99	;'c'
  1455  00F37B  68                 	db	104	;'h'
  1456  00F37C  61                 	db	97	;'a'
  1457  00F37D  6E                 	db	110	;'n'
  1458  00F37E  6E                 	db	110	;'n'
  1459  00F37F  65                 	db	101	;'e'
  1460  00F380  6C                 	db	108	;'l'
  1461  00F381  20                 	db	32
  1462  00F382  42                 	db	66	;'B'
  1463  00F383  00                 	db	0
  1464  00F384                     STR_122:
  1465  00F384  53                 	db	83	;'S'
  1466  00F385  65                 	db	101	;'e'
  1467  00F386  74                 	db	116	;'t'
  1468  00F387  73                 	db	115	;'s'
  1469  00F388  20                 	db	32
  1470  00F389  52                 	db	82	;'R'
  1471  00F38A  65                 	db	101	;'e'
  1472  00F38B  6D                 	db	109	;'m'
  1473  00F38C  6F                 	db	111	;'o'
  1474  00F38D  74                 	db	116	;'t'
  1475  00F38E  65                 	db	101	;'e'
  1476  00F38F  20                 	db	32
  1477  00F390  62                 	db	98	;'b'
  1478  00F391  75                 	db	117	;'u'
  1479  00F392  74                 	db	116	;'t'
  1480  00F393  74                 	db	116	;'t'
  1481  00F394  6F                 	db	111	;'o'
  1482  00F395  6E                 	db	110	;'n'
  1483  00F396  20                 	db	32
  1484  00F397  74                 	db	116	;'t'
  1485  00F398  6F                 	db	111	;'o'
  1486  00F399  20                 	db	32
  1487  00F39A  73                 	db	115	;'s'
  1488  00F39B  65                 	db	101	;'e'
  1489  00F39C  6E                 	db	110	;'n'
  1490  00F39D  64                 	db	100	;'d'
  1491  00F39E  20                 	db	32
  1492  00F39F  52                 	db	82	;'R'
  1493  00F3A0  46                 	db	70	;'F'
  1494  00F3A1  20                 	db	32
  1495  00F3A2  43                 	db	67	;'C'
  1496  00F3A3  6F                 	db	111	;'o'
  1497  00F3A4  6E                 	db	110	;'n'
  1498  00F3A5  66                 	db	102	;'f'
  1499  00F3A6  69                 	db	105	;'i'
  1500  00F3A7  67                 	db	103	;'g'
  1501  00F3A8  20                 	db	32
  1502  00F3A9  31                 	db	49	;'1'
  1503  00F3AA  20                 	db	32
  1504  00F3AB  63                 	db	99	;'c'
  1505  00F3AC  68                 	db	104	;'h'
  1506  00F3AD  61                 	db	97	;'a'
  1507  00F3AE  6E                 	db	110	;'n'
  1508  00F3AF  6E                 	db	110	;'n'
  1509  00F3B0  65                 	db	101	;'e'
  1510  00F3B1  6C                 	db	108	;'l'
  1511  00F3B2  20                 	db	32
  1512  00F3B3  44                 	db	68	;'D'
  1513  00F3B4  00                 	db	0
  1514  00F3B5                     STR_130:
  1515  00F3B5  53                 	db	83	;'S'
  1516  00F3B6  65                 	db	101	;'e'
  1517  00F3B7  74                 	db	116	;'t'
  1518  00F3B8  73                 	db	115	;'s'
  1519  00F3B9  20                 	db	32
  1520  00F3BA  52                 	db	82	;'R'
  1521  00F3BB  65                 	db	101	;'e'
  1522  00F3BC  6D                 	db	109	;'m'
  1523  00F3BD  6F                 	db	111	;'o'
  1524  00F3BE  74                 	db	116	;'t'
  1525  00F3BF  65                 	db	101	;'e'
  1526  00F3C0  20                 	db	32
  1527  00F3C1  62                 	db	98	;'b'
  1528  00F3C2  75                 	db	117	;'u'
  1529  00F3C3  74                 	db	116	;'t'
  1530  00F3C4  74                 	db	116	;'t'
  1531  00F3C5  6F                 	db	111	;'o'
  1532  00F3C6  6E                 	db	110	;'n'
  1533  00F3C7  20                 	db	32
  1534  00F3C8  74                 	db	116	;'t'
  1535  00F3C9  6F                 	db	111	;'o'
  1536  00F3CA  20                 	db	32
  1537  00F3CB  73                 	db	115	;'s'
  1538  00F3CC  65                 	db	101	;'e'
  1539  00F3CD  6E                 	db	110	;'n'
  1540  00F3CE  64                 	db	100	;'d'
  1541  00F3CF  20                 	db	32
  1542  00F3D0  52                 	db	82	;'R'
  1543  00F3D1  46                 	db	70	;'F'
  1544  00F3D2  20                 	db	32
  1545  00F3D3  43                 	db	67	;'C'
  1546  00F3D4  6F                 	db	111	;'o'
  1547  00F3D5  6E                 	db	110	;'n'
  1548  00F3D6  66                 	db	102	;'f'
  1549  00F3D7  69                 	db	105	;'i'
  1550  00F3D8  67                 	db	103	;'g'
  1551  00F3D9  20                 	db	32
  1552  00F3DA  32                 	db	50	;'2'
  1553  00F3DB  20                 	db	32
  1554  00F3DC  63                 	db	99	;'c'
  1555  00F3DD  68                 	db	104	;'h'
  1556  00F3DE  61                 	db	97	;'a'
  1557  00F3DF  6E                 	db	110	;'n'
  1558  00F3E0  6E                 	db	110	;'n'
  1559  00F3E1  65                 	db	101	;'e'
  1560  00F3E2  6C                 	db	108	;'l'
  1561  00F3E3  20                 	db	32
  1562  00F3E4  44                 	db	68	;'D'
  1563  00F3E5  00                 	db	0
  1564  00F3E6                     STR_124:
  1565  00F3E6  53                 	db	83	;'S'
  1566  00F3E7  65                 	db	101	;'e'
  1567  00F3E8  74                 	db	116	;'t'
  1568  00F3E9  73                 	db	115	;'s'
  1569  00F3EA  20                 	db	32
  1570  00F3EB  52                 	db	82	;'R'
  1571  00F3EC  65                 	db	101	;'e'
  1572  00F3ED  6D                 	db	109	;'m'
  1573  00F3EE  6F                 	db	111	;'o'
  1574  00F3EF  74                 	db	116	;'t'
  1575  00F3F0  65                 	db	101	;'e'
  1576  00F3F1  20                 	db	32
  1577  00F3F2  62                 	db	98	;'b'
  1578  00F3F3  75                 	db	117	;'u'
  1579  00F3F4  74                 	db	116	;'t'
  1580  00F3F5  74                 	db	116	;'t'
  1581  00F3F6  6F                 	db	111	;'o'
  1582  00F3F7  6E                 	db	110	;'n'
  1583  00F3F8  20                 	db	32
  1584  00F3F9  74                 	db	116	;'t'
  1585  00F3FA  6F                 	db	111	;'o'
  1586  00F3FB  20                 	db	32
  1587  00F3FC  73                 	db	115	;'s'
  1588  00F3FD  65                 	db	101	;'e'
  1589  00F3FE  6E                 	db	110	;'n'
  1590  00F3FF  64                 	db	100	;'d'
  1591  00F400  20                 	db	32
  1592  00F401  52                 	db	82	;'R'
  1593  00F402  46                 	db	70	;'F'
  1594  00F403  20                 	db	32
  1595  00F404  43                 	db	67	;'C'
  1596  00F405  6F                 	db	111	;'o'
  1597  00F406  6E                 	db	110	;'n'
  1598  00F407  66                 	db	102	;'f'
  1599  00F408  69                 	db	105	;'i'
  1600  00F409  67                 	db	103	;'g'
  1601  00F40A  20                 	db	32
  1602  00F40B  31                 	db	49	;'1'
  1603  00F40C  20                 	db	32
  1604  00F40D  63                 	db	99	;'c'
  1605  00F40E  68                 	db	104	;'h'
  1606  00F40F  61                 	db	97	;'a'
  1607  00F410  6E                 	db	110	;'n'
  1608  00F411  6E                 	db	110	;'n'
  1609  00F412  65                 	db	101	;'e'
  1610  00F413  6C                 	db	108	;'l'
  1611  00F414  20                 	db	32
  1612  00F415  45                 	db	69	;'E'
  1613  00F416  00                 	db	0
  1614  00F417                     STR_126:
  1615  00F417  53                 	db	83	;'S'
  1616  00F418  65                 	db	101	;'e'
  1617  00F419  74                 	db	116	;'t'
  1618  00F41A  73                 	db	115	;'s'
  1619  00F41B  20                 	db	32
  1620  00F41C  52                 	db	82	;'R'
  1621  00F41D  65                 	db	101	;'e'
  1622  00F41E  6D                 	db	109	;'m'
  1623  00F41F  6F                 	db	111	;'o'
  1624  00F420  74                 	db	116	;'t'
  1625  00F421  65                 	db	101	;'e'
  1626  00F422  20                 	db	32
  1627  00F423  62                 	db	98	;'b'
  1628  00F424  75                 	db	117	;'u'
  1629  00F425  74                 	db	116	;'t'
  1630  00F426  74                 	db	116	;'t'
  1631  00F427  6F                 	db	111	;'o'
  1632  00F428  6E                 	db	110	;'n'
  1633  00F429  20                 	db	32
  1634  00F42A  74                 	db	116	;'t'
  1635  00F42B  6F                 	db	111	;'o'
  1636  00F42C  20                 	db	32
  1637  00F42D  73                 	db	115	;'s'
  1638  00F42E  65                 	db	101	;'e'
  1639  00F42F  6E                 	db	110	;'n'
  1640  00F430  64                 	db	100	;'d'
  1641  00F431  20                 	db	32
  1642  00F432  52                 	db	82	;'R'
  1643  00F433  46                 	db	70	;'F'
  1644  00F434  20                 	db	32
  1645  00F435  43                 	db	67	;'C'
  1646  00F436  6F                 	db	111	;'o'
  1647  00F437  6E                 	db	110	;'n'
  1648  00F438  66                 	db	102	;'f'
  1649  00F439  69                 	db	105	;'i'
  1650  00F43A  67                 	db	103	;'g'
  1651  00F43B  20                 	db	32
  1652  00F43C  31                 	db	49	;'1'
  1653  00F43D  20                 	db	32
  1654  00F43E  63                 	db	99	;'c'
  1655  00F43F  68                 	db	104	;'h'
  1656  00F440  61                 	db	97	;'a'
  1657  00F441  6E                 	db	110	;'n'
  1658  00F442  6E                 	db	110	;'n'
  1659  00F443  65                 	db	101	;'e'
  1660  00F444  6C                 	db	108	;'l'
  1661  00F445  20                 	db	32
  1662  00F446  46                 	db	70	;'F'
  1663  00F447  00                 	db	0
  1664  00F448                     STR_132:
  1665  00F448  53                 	db	83	;'S'
  1666  00F449  65                 	db	101	;'e'
  1667  00F44A  74                 	db	116	;'t'
  1668  00F44B  73                 	db	115	;'s'
  1669  00F44C  20                 	db	32
  1670  00F44D  52                 	db	82	;'R'
  1671  00F44E  65                 	db	101	;'e'
  1672  00F44F  6D                 	db	109	;'m'
  1673  00F450  6F                 	db	111	;'o'
  1674  00F451  74                 	db	116	;'t'
  1675  00F452  65                 	db	101	;'e'
  1676  00F453  20                 	db	32
  1677  00F454  62                 	db	98	;'b'
  1678  00F455  75                 	db	117	;'u'
  1679  00F456  74                 	db	116	;'t'
  1680  00F457  74                 	db	116	;'t'
  1681  00F458  6F                 	db	111	;'o'
  1682  00F459  6E                 	db	110	;'n'
  1683  00F45A  20                 	db	32
  1684  00F45B  74                 	db	116	;'t'
  1685  00F45C  6F                 	db	111	;'o'
  1686  00F45D  20                 	db	32
  1687  00F45E  73                 	db	115	;'s'
  1688  00F45F  65                 	db	101	;'e'
  1689  00F460  6E                 	db	110	;'n'
  1690  00F461  64                 	db	100	;'d'
  1691  00F462  20                 	db	32
  1692  00F463  52                 	db	82	;'R'
  1693  00F464  46                 	db	70	;'F'
  1694  00F465  20                 	db	32
  1695  00F466  43                 	db	67	;'C'
  1696  00F467  6F                 	db	111	;'o'
  1697  00F468  6E                 	db	110	;'n'
  1698  00F469  66                 	db	102	;'f'
  1699  00F46A  69                 	db	105	;'i'
  1700  00F46B  67                 	db	103	;'g'
  1701  00F46C  20                 	db	32
  1702  00F46D  32                 	db	50	;'2'
  1703  00F46E  20                 	db	32
  1704  00F46F  63                 	db	99	;'c'
  1705  00F470  68                 	db	104	;'h'
  1706  00F471  61                 	db	97	;'a'
  1707  00F472  6E                 	db	110	;'n'
  1708  00F473  6E                 	db	110	;'n'
  1709  00F474  65                 	db	101	;'e'
  1710  00F475  6C                 	db	108	;'l'
  1711  00F476  20                 	db	32
  1712  00F477  48                 	db	72	;'H'
  1713  00F478  00                 	db	0
  1714  00F479                     STR_46:
  1715  00F479  45                 	db	69	;'E'
  1716  00F47A  72                 	db	114	;'r'
  1717  00F47B  72                 	db	114	;'r'
  1718  00F47C  6F                 	db	111	;'o'
  1719  00F47D  72                 	db	114	;'r'
  1720  00F47E  3A                 	db	58	;':'
  1721  00F47F  20                 	db	32
  1722  00F480  4E                 	db	78	;'N'
  1723  00F481  6F                 	db	111	;'o'
  1724  00F482  20                 	db	32
  1725  00F483  4E                 	db	78	;'N'
  1726  00F484  45                 	db	69	;'E'
  1727  00F485  43                 	db	67	;'C'
  1728  00F486  20                 	db	32
  1729  00F487  63                 	db	99	;'c'
  1730  00F488  6F                 	db	111	;'o'
  1731  00F489  64                 	db	100	;'d'
  1732  00F48A  65                 	db	101	;'e'
  1733  00F48B  20                 	db	32
  1734  00F48C  73                 	db	115	;'s'
  1735  00F48D  61                 	db	97	;'a'
  1736  00F48E  76                 	db	118	;'v'
  1737  00F48F  65                 	db	101	;'e'
  1738  00F490  64                 	db	100	;'d'
  1739  00F491  20                 	db	32
  1740  00F492  66                 	db	102	;'f'
  1741  00F493  6F                 	db	111	;'o'
  1742  00F494  72                 	db	114	;'r'
  1743  00F495  20                 	db	32
  1744  00F496  73                 	db	115	;'s'
  1745  00F497  70                 	db	112	;'p'
  1746  00F498  65                 	db	101	;'e'
  1747  00F499  63                 	db	99	;'c'
  1748  00F49A  69                 	db	105	;'i'
  1749  00F49B  66                 	db	102	;'f'
  1750  00F49C  69                 	db	105	;'i'
  1751  00F49D  65                 	db	101	;'e'
  1752  00F49E  64                 	db	100	;'d'
  1753  00F49F  20                 	db	32
  1754  00F4A0  63                 	db	99	;'c'
  1755  00F4A1  6F                 	db	111	;'o'
  1756  00F4A2  6D                 	db	109	;'m'
  1757  00F4A3  6D                 	db	109	;'m'
  1758  00F4A4  61                 	db	97	;'a'
  1759  00F4A5  6E                 	db	110	;'n'
  1760  00F4A6  64                 	db	100	;'d'
  1761  00F4A7  00                 	db	0
  1762  00F4A8                     STR_47:
  1763  00F4A8  52                 	db	82	;'R'
  1764  00F4A9  65                 	db	101	;'e'
  1765  00F4AA  6D                 	db	109	;'m'
  1766  00F4AB  6F                 	db	111	;'o'
  1767  00F4AC  74                 	db	116	;'t'
  1768  00F4AD  65                 	db	101	;'e'
  1769  00F4AE  42                 	db	66	;'B'
  1770  00F4AF  75                 	db	117	;'u'
  1771  00F4B0  74                 	db	116	;'t'
  1772  00F4B1  74                 	db	116	;'t'
  1773  00F4B2  6F                 	db	111	;'o'
  1774  00F4B3  6E                 	db	110	;'n'
  1775  00F4B4  25                 	db	37
  1776  00F4B5  6C                 	db	108	;'l'
  1777  00F4B6  75                 	db	117	;'u'
  1778  00F4B7  20                 	db	32
  1779  00F4B8  6E                 	db	110	;'n'
  1780  00F4B9  6F                 	db	111	;'o'
  1781  00F4BA  77                 	db	119	;'w'
  1782  00F4BB  20                 	db	32
  1783  00F4BC  74                 	db	116	;'t'
  1784  00F4BD  72                 	db	114	;'r'
  1785  00F4BE  61                 	db	97	;'a'
  1786  00F4BF  6E                 	db	110	;'n'
  1787  00F4C0  73                 	db	115	;'s'
  1788  00F4C1  6D                 	db	109	;'m'
  1789  00F4C2  69                 	db	105	;'i'
  1790  00F4C3  74                 	db	116	;'t'
  1791  00F4C4  73                 	db	115	;'s'
  1792  00F4C5  20                 	db	32
  1793  00F4C6  4E                 	db	78	;'N'
  1794  00F4C7  45                 	db	69	;'E'
  1795  00F4C8  43                 	db	67	;'C'
  1796  00F4C9  20                 	db	32
  1797  00F4CA  63                 	db	99	;'c'
  1798  00F4CB  6F                 	db	111	;'o'
  1799  00F4CC  64                 	db	100	;'d'
  1800  00F4CD  65                 	db	101	;'e'
  1801  00F4CE  20                 	db	32
  1802  00F4CF  30                 	db	48	;'0'
  1803  00F4D0  78                 	db	120	;'x'
  1804  00F4D1  25                 	db	37
  1805  00F4D2  6C                 	db	108	;'l'
  1806  00F4D3  58                 	db	88	;'X'
  1807  00F4D4  20                 	db	32
  1808  00F4D5  00                 	db	0
  1809  00F4D6                     STR_140:
  1810  00F4D6  43                 	db	67	;'C'
  1811  00F4D7  6C                 	db	108	;'l'
  1812  00F4D8  65                 	db	101	;'e'
  1813  00F4D9  61                 	db	97	;'a'
  1814  00F4DA  72                 	db	114	;'r'
  1815  00F4DB  73                 	db	115	;'s'
  1816  00F4DC  20                 	db	32
  1817  00F4DD  73                 	db	115	;'s'
  1818  00F4DE  61                 	db	97	;'a'
  1819  00F4DF  76                 	db	118	;'v'
  1820  00F4E0  65                 	db	101	;'e'
  1821  00F4E1  64                 	db	100	;'d'
  1822  00F4E2  20                 	db	32
  1823  00F4E3  42                 	db	66	;'B'
  1824  00F4E4  75                 	db	117	;'u'
  1825  00F4E5  74                 	db	116	;'t'
  1826  00F4E6  74                 	db	116	;'t'
  1827  00F4E7  6F                 	db	111	;'o'
  1828  00F4E8  6E                 	db	110	;'n'
  1829  00F4E9  20                 	db	32
  1830  00F4EA  66                 	db	102	;'f'
  1831  00F4EB  6F                 	db	111	;'o'
  1832  00F4EC  72                 	db	114	;'r'
  1833  00F4ED  20                 	db	32
  1834  00F4EE  52                 	db	82	;'R'
  1835  00F4EF  46                 	db	70	;'F'
  1836  00F4F0  20                 	db	32
  1837  00F4F1  43                 	db	67	;'C'
  1838  00F4F2  6F                 	db	111	;'o'
  1839  00F4F3  6E                 	db	110	;'n'
  1840  00F4F4  66                 	db	102	;'f'
  1841  00F4F5  69                 	db	105	;'i'
  1842  00F4F6  67                 	db	103	;'g'
  1843  00F4F7  20                 	db	32
  1844  00F4F8  32                 	db	50	;'2'
  1845  00F4F9  20                 	db	32
  1846  00F4FA  63                 	db	99	;'c'
  1847  00F4FB  68                 	db	104	;'h'
  1848  00F4FC  61                 	db	97	;'a'
  1849  00F4FD  6E                 	db	110	;'n'
  1850  00F4FE  6E                 	db	110	;'n'
  1851  00F4FF  65                 	db	101	;'e'
  1852  00F500  6C                 	db	108	;'l'
  1853  00F501  20                 	db	32
  1854  00F502  42                 	db	66	;'B'
  1855  00F503  00                 	db	0
  1856  00F504                     STR_134:
  1857  00F504  43                 	db	67	;'C'
  1858  00F505  6C                 	db	108	;'l'
  1859  00F506  65                 	db	101	;'e'
  1860  00F507  61                 	db	97	;'a'
  1861  00F508  72                 	db	114	;'r'
  1862  00F509  73                 	db	115	;'s'
  1863  00F50A  20                 	db	32
  1864  00F50B  73                 	db	115	;'s'
  1865  00F50C  61                 	db	97	;'a'
  1866  00F50D  76                 	db	118	;'v'
  1867  00F50E  65                 	db	101	;'e'
  1868  00F50F  64                 	db	100	;'d'
  1869  00F510  20                 	db	32
  1870  00F511  42                 	db	66	;'B'
  1871  00F512  75                 	db	117	;'u'
  1872  00F513  74                 	db	116	;'t'
  1873  00F514  74                 	db	116	;'t'
  1874  00F515  6F                 	db	111	;'o'
  1875  00F516  6E                 	db	110	;'n'
  1876  00F517  20                 	db	32
  1877  00F518  66                 	db	102	;'f'
  1878  00F519  6F                 	db	111	;'o'
  1879  00F51A  72                 	db	114	;'r'
  1880  00F51B  20                 	db	32
  1881  00F51C  52                 	db	82	;'R'
  1882  00F51D  46                 	db	70	;'F'
  1883  00F51E  20                 	db	32
  1884  00F51F  43                 	db	67	;'C'
  1885  00F520  6F                 	db	111	;'o'
  1886  00F521  6E                 	db	110	;'n'
  1887  00F522  66                 	db	102	;'f'
  1888  00F523  69                 	db	105	;'i'
  1889  00F524  67                 	db	103	;'g'
  1890  00F525  20                 	db	32
  1891  00F526  31                 	db	49	;'1'
  1892  00F527  20                 	db	32
  1893  00F528  63                 	db	99	;'c'
  1894  00F529  68                 	db	104	;'h'
  1895  00F52A  61                 	db	97	;'a'
  1896  00F52B  6E                 	db	110	;'n'
  1897  00F52C  6E                 	db	110	;'n'
  1898  00F52D  65                 	db	101	;'e'
  1899  00F52E  6C                 	db	108	;'l'
  1900  00F52F  20                 	db	32
  1901  00F530  44                 	db	68	;'D'
  1902  00F531  00                 	db	0
  1903  00F532                     STR_142:
  1904  00F532  43                 	db	67	;'C'
  1905  00F533  6C                 	db	108	;'l'
  1906  00F534  65                 	db	101	;'e'
  1907  00F535  61                 	db	97	;'a'
  1908  00F536  72                 	db	114	;'r'
  1909  00F537  73                 	db	115	;'s'
  1910  00F538  20                 	db	32
  1911  00F539  73                 	db	115	;'s'
  1912  00F53A  61                 	db	97	;'a'
  1913  00F53B  76                 	db	118	;'v'
  1914  00F53C  65                 	db	101	;'e'
  1915  00F53D  64                 	db	100	;'d'
  1916  00F53E  20                 	db	32
  1917  00F53F  42                 	db	66	;'B'
  1918  00F540  75                 	db	117	;'u'
  1919  00F541  74                 	db	116	;'t'
  1920  00F542  74                 	db	116	;'t'
  1921  00F543  6F                 	db	111	;'o'
  1922  00F544  6E                 	db	110	;'n'
  1923  00F545  20                 	db	32
  1924  00F546  66                 	db	102	;'f'
  1925  00F547  6F                 	db	111	;'o'
  1926  00F548  72                 	db	114	;'r'
  1927  00F549  20                 	db	32
  1928  00F54A  52                 	db	82	;'R'
  1929  00F54B  46                 	db	70	;'F'
  1930  00F54C  20                 	db	32
  1931  00F54D  43                 	db	67	;'C'
  1932  00F54E  6F                 	db	111	;'o'
  1933  00F54F  6E                 	db	110	;'n'
  1934  00F550  66                 	db	102	;'f'
  1935  00F551  69                 	db	105	;'i'
  1936  00F552  67                 	db	103	;'g'
  1937  00F553  20                 	db	32
  1938  00F554  32                 	db	50	;'2'
  1939  00F555  20                 	db	32
  1940  00F556  63                 	db	99	;'c'
  1941  00F557  68                 	db	104	;'h'
  1942  00F558  61                 	db	97	;'a'
  1943  00F559  6E                 	db	110	;'n'
  1944  00F55A  6E                 	db	110	;'n'
  1945  00F55B  65                 	db	101	;'e'
  1946  00F55C  6C                 	db	108	;'l'
  1947  00F55D  20                 	db	32
  1948  00F55E  44                 	db	68	;'D'
  1949  00F55F  00                 	db	0
  1950  00F560                     STR_136:
  1951  00F560  43                 	db	67	;'C'
  1952  00F561  6C                 	db	108	;'l'
  1953  00F562  65                 	db	101	;'e'
  1954  00F563  61                 	db	97	;'a'
  1955  00F564  72                 	db	114	;'r'
  1956  00F565  73                 	db	115	;'s'
  1957  00F566  20                 	db	32
  1958  00F567  73                 	db	115	;'s'
  1959  00F568  61                 	db	97	;'a'
  1960  00F569  76                 	db	118	;'v'
  1961  00F56A  65                 	db	101	;'e'
  1962  00F56B  64                 	db	100	;'d'
  1963  00F56C  20                 	db	32
  1964  00F56D  42                 	db	66	;'B'
  1965  00F56E  75                 	db	117	;'u'
  1966  00F56F  74                 	db	116	;'t'
  1967  00F570  74                 	db	116	;'t'
  1968  00F571  6F                 	db	111	;'o'
  1969  00F572  6E                 	db	110	;'n'
  1970  00F573  20                 	db	32
  1971  00F574  66                 	db	102	;'f'
  1972  00F575  6F                 	db	111	;'o'
  1973  00F576  72                 	db	114	;'r'
  1974  00F577  20                 	db	32
  1975  00F578  52                 	db	82	;'R'
  1976  00F579  46                 	db	70	;'F'
  1977  00F57A  20                 	db	32
  1978  00F57B  43                 	db	67	;'C'
  1979  00F57C  6F                 	db	111	;'o'
  1980  00F57D  6E                 	db	110	;'n'
  1981  00F57E  66                 	db	102	;'f'
  1982  00F57F  69                 	db	105	;'i'
  1983  00F580  67                 	db	103	;'g'
  1984  00F581  20                 	db	32
  1985  00F582  31                 	db	49	;'1'
  1986  00F583  20                 	db	32
  1987  00F584  63                 	db	99	;'c'
  1988  00F585  68                 	db	104	;'h'
  1989  00F586  61                 	db	97	;'a'
  1990  00F587  6E                 	db	110	;'n'
  1991  00F588  6E                 	db	110	;'n'
  1992  00F589  65                 	db	101	;'e'
  1993  00F58A  6C                 	db	108	;'l'
  1994  00F58B  20                 	db	32
  1995  00F58C  45                 	db	69	;'E'
  1996  00F58D  00                 	db	0
  1997  00F58E                     STR_138:
  1998  00F58E  43                 	db	67	;'C'
  1999  00F58F  6C                 	db	108	;'l'
  2000  00F590  65                 	db	101	;'e'
  2001  00F591  61                 	db	97	;'a'
  2002  00F592  72                 	db	114	;'r'
  2003  00F593  73                 	db	115	;'s'
  2004  00F594  20                 	db	32
  2005  00F595  73                 	db	115	;'s'
  2006  00F596  61                 	db	97	;'a'
  2007  00F597  76                 	db	118	;'v'
  2008  00F598  65                 	db	101	;'e'
  2009  00F599  64                 	db	100	;'d'
  2010  00F59A  20                 	db	32
  2011  00F59B  42                 	db	66	;'B'
  2012  00F59C  75                 	db	117	;'u'
  2013  00F59D  74                 	db	116	;'t'
  2014  00F59E  74                 	db	116	;'t'
  2015  00F59F  6F                 	db	111	;'o'
  2016  00F5A0  6E                 	db	110	;'n'
  2017  00F5A1  20                 	db	32
  2018  00F5A2  66                 	db	102	;'f'
  2019  00F5A3  6F                 	db	111	;'o'
  2020  00F5A4  72                 	db	114	;'r'
  2021  00F5A5  20                 	db	32
  2022  00F5A6  52                 	db	82	;'R'
  2023  00F5A7  46                 	db	70	;'F'
  2024  00F5A8  20                 	db	32
  2025  00F5A9  43                 	db	67	;'C'
  2026  00F5AA  6F                 	db	111	;'o'
  2027  00F5AB  6E                 	db	110	;'n'
  2028  00F5AC  66                 	db	102	;'f'
  2029  00F5AD  69                 	db	105	;'i'
  2030  00F5AE  67                 	db	103	;'g'
  2031  00F5AF  20                 	db	32
  2032  00F5B0  31                 	db	49	;'1'
  2033  00F5B1  20                 	db	32
  2034  00F5B2  63                 	db	99	;'c'
  2035  00F5B3  68                 	db	104	;'h'
  2036  00F5B4  61                 	db	97	;'a'
  2037  00F5B5  6E                 	db	110	;'n'
  2038  00F5B6  6E                 	db	110	;'n'
  2039  00F5B7  65                 	db	101	;'e'
  2040  00F5B8  6C                 	db	108	;'l'
  2041  00F5B9  20                 	db	32
  2042  00F5BA  46                 	db	70	;'F'
  2043  00F5BB  00                 	db	0
  2044  00F5BC                     STR_144:
  2045  00F5BC  43                 	db	67	;'C'
  2046  00F5BD  6C                 	db	108	;'l'
  2047  00F5BE  65                 	db	101	;'e'
  2048  00F5BF  61                 	db	97	;'a'
  2049  00F5C0  72                 	db	114	;'r'
  2050  00F5C1  73                 	db	115	;'s'
  2051  00F5C2  20                 	db	32
  2052  00F5C3  73                 	db	115	;'s'
  2053  00F5C4  61                 	db	97	;'a'
  2054  00F5C5  76                 	db	118	;'v'
  2055  00F5C6  65                 	db	101	;'e'
  2056  00F5C7  64                 	db	100	;'d'
  2057  00F5C8  20                 	db	32
  2058  00F5C9  42                 	db	66	;'B'
  2059  00F5CA  75                 	db	117	;'u'
  2060  00F5CB  74                 	db	116	;'t'
  2061  00F5CC  74                 	db	116	;'t'
  2062  00F5CD  6F                 	db	111	;'o'
  2063  00F5CE  6E                 	db	110	;'n'
  2064  00F5CF  20                 	db	32
  2065  00F5D0  66                 	db	102	;'f'
  2066  00F5D1  6F                 	db	111	;'o'
  2067  00F5D2  72                 	db	114	;'r'
  2068  00F5D3  20                 	db	32
  2069  00F5D4  52                 	db	82	;'R'
  2070  00F5D5  46                 	db	70	;'F'
  2071  00F5D6  20                 	db	32
  2072  00F5D7  43                 	db	67	;'C'
  2073  00F5D8  6F                 	db	111	;'o'
  2074  00F5D9  6E                 	db	110	;'n'
  2075  00F5DA  66                 	db	102	;'f'
  2076  00F5DB  69                 	db	105	;'i'
  2077  00F5DC  67                 	db	103	;'g'
  2078  00F5DD  20                 	db	32
  2079  00F5DE  32                 	db	50	;'2'
  2080  00F5DF  20                 	db	32
  2081  00F5E0  63                 	db	99	;'c'
  2082  00F5E1  68                 	db	104	;'h'
  2083  00F5E2  61                 	db	97	;'a'
  2084  00F5E3  6E                 	db	110	;'n'
  2085  00F5E4  6E                 	db	110	;'n'
  2086  00F5E5  65                 	db	101	;'e'
  2087  00F5E6  6C                 	db	108	;'l'
  2088  00F5E7  20                 	db	32
  2089  00F5E8  48                 	db	72	;'H'
  2090  00F5E9  00                 	db	0
  2091  00F5EA                     STR_69:
  2092  00F5EA  45                 	db	69	;'E'
  2093  00F5EB  72                 	db	114	;'r'
  2094  00F5EC  72                 	db	114	;'r'
  2095  00F5ED  6F                 	db	111	;'o'
  2096  00F5EE  72                 	db	114	;'r'
  2097  00F5EF  3A                 	db	58	;':'
  2098  00F5F0  20                 	db	32
  2099  00F5F1  4E                 	db	78	;'N'
  2100  00F5F2  45                 	db	69	;'E'
  2101  00F5F3  43                 	db	67	;'C'
  2102  00F5F4  20                 	db	32
  2103  00F5F5  63                 	db	99	;'c'
  2104  00F5F6  6F                 	db	111	;'o'
  2105  00F5F7  64                 	db	100	;'d'
  2106  00F5F8  65                 	db	101	;'e'
  2107  00F5F9  20                 	db	32
  2108  00F5FA  61                 	db	97	;'a'
  2109  00F5FB  6C                 	db	108	;'l'
  2110  00F5FC  72                 	db	114	;'r'
  2111  00F5FD  65                 	db	101	;'e'
  2112  00F5FE  61                 	db	97	;'a'
  2113  00F5FF  64                 	db	100	;'d'
  2114  00F600  79                 	db	121	;'y'
  2115  00F601  20                 	db	32
  2116  00F602  73                 	db	115	;'s'
  2117  00F603  61                 	db	97	;'a'
  2118  00F604  76                 	db	118	;'v'
  2119  00F605  65                 	db	101	;'e'
  2120  00F606  64                 	db	100	;'d'
  2121  00F607  20                 	db	32
  2122  00F608  74                 	db	116	;'t'
  2123  00F609  6F                 	db	111	;'o'
  2124  00F60A  20                 	db	32
  2125  00F60B  74                 	db	116	;'t'
  2126  00F60C  68                 	db	104	;'h'
  2127  00F60D  69                 	db	105	;'i'
  2128  00F60E  73                 	db	115	;'s'
  2129  00F60F  20                 	db	32
  2130  00F610  52                 	db	82	;'R'
  2131  00F611  46                 	db	70	;'F'
  2132  00F612  20                 	db	32
  2133  00F613  63                 	db	99	;'c'
  2134  00F614  6F                 	db	111	;'o'
  2135  00F615  64                 	db	100	;'d'
  2136  00F616  65                 	db	101	;'e'
  2137  00F617  00                 	db	0
  2138  00F618                     STR_82:
  2139  00F618  44                 	db	68	;'D'
  2140  00F619  65                 	db	101	;'e'
  2141  00F61A  76                 	db	118	;'v'
  2142  00F61B  69                 	db	105	;'i'
  2143  00F61C  63                 	db	99	;'c'
  2144  00F61D  65                 	db	101	;'e'
  2145  00F61E  20                 	db	32
  2146  00F61F  72                 	db	114	;'r'
  2147  00F620  65                 	db	101	;'e'
  2148  00F621  73                 	db	115	;'s'
  2149  00F622  75                 	db	117	;'u'
  2150  00F623  6D                 	db	109	;'m'
  2151  00F624  65                 	db	101	;'e'
  2152  00F625  73                 	db	115	;'s'
  2153  00F626  20                 	db	32
  2154  00F627  77                 	db	119	;'w'
  2155  00F628  69                 	db	105	;'i'
  2156  00F629  74                 	db	116	;'t'
  2157  00F62A  68                 	db	104	;'h'
  2158  00F62B  6F                 	db	111	;'o'
  2159  00F62C  75                 	db	117	;'u'
  2160  00F62D  74                 	db	116	;'t'
  2161  00F62E  20                 	db	32
  2162  00F62F  63                 	db	99	;'c'
  2163  00F630  68                 	db	104	;'h'
  2164  00F631  61                 	db	97	;'a'
  2165  00F632  6E                 	db	110	;'n'
  2166  00F633  67                 	db	103	;'g'
  2167  00F634  69                 	db	105	;'i'
  2168  00F635  6E                 	db	110	;'n'
  2169  00F636  67                 	db	103	;'g'
  2170  00F637  20                 	db	32
  2171  00F638  73                 	db	115	;'s'
  2172  00F639  65                 	db	101	;'e'
  2173  00F63A  72                 	db	114	;'r'
  2174  00F63B  69                 	db	105	;'i'
  2175  00F63C  61                 	db	97	;'a'
  2176  00F63D  6C                 	db	108	;'l'
  2177  00F63E  20                 	db	32
  2178  00F63F  6E                 	db	110	;'n'
  2179  00F640  75                 	db	117	;'u'
  2180  00F641  6D                 	db	109	;'m'
  2181  00F642  62                 	db	98	;'b'
  2182  00F643  65                 	db	101	;'e'
  2183  00F644  72                 	db	114	;'r'
  2184  00F645  00                 	db	0
  2185  00F646                     STR_45:
  2186  00F646  4E                 	db	78	;'N'
  2187  00F647  45                 	db	69	;'E'
  2188  00F648  43                 	db	67	;'C'
  2189  00F649  20                 	db	32
  2190  00F64A  43                 	db	67	;'C'
  2191  00F64B  6F                 	db	111	;'o'
  2192  00F64C  64                 	db	100	;'d'
  2193  00F64D  65                 	db	101	;'e'
  2194  00F64E  20                 	db	32
  2195  00F64F  61                 	db	97	;'a'
  2196  00F650  64                 	db	100	;'d'
  2197  00F651  64                 	db	100	;'d'
  2198  00F652  72                 	db	114	;'r'
  2199  00F653  65                 	db	101	;'e'
  2200  00F654  73                 	db	115	;'s'
  2201  00F655  73                 	db	115	;'s'
  2202  00F656  3A                 	db	58	;':'
  2203  00F657  20                 	db	32
  2204  00F658  30                 	db	48	;'0'
  2205  00F659  78                 	db	120	;'x'
  2206  00F65A  25                 	db	37
  2207  00F65B  30                 	db	48	;'0'
  2208  00F65C  32                 	db	50	;'2'
  2209  00F65D  58                 	db	88	;'X'
  2210  00F65E  20                 	db	32
  2211  00F65F  2C                 	db	44
  2212  00F660  20                 	db	32
  2213  00F661  63                 	db	99	;'c'
  2214  00F662  6F                 	db	111	;'o'
  2215  00F663  6D                 	db	109	;'m'
  2216  00F664  6D                 	db	109	;'m'
  2217  00F665  61                 	db	97	;'a'
  2218  00F666  6E                 	db	110	;'n'
  2219  00F667  64                 	db	100	;'d'
  2220  00F668  3A                 	db	58	;':'
  2221  00F669  20                 	db	32
  2222  00F66A  30                 	db	48	;'0'
  2223  00F66B  78                 	db	120	;'x'
  2224  00F66C  25                 	db	37
  2225  00F66D  30                 	db	48	;'0'
  2226  00F66E  32                 	db	50	;'2'
  2227  00F66F  58                 	db	88	;'X'
  2228  00F670  20                 	db	32
  2229  00F671  00                 	db	0
  2230  00F672                     STR_89:
  2231  00F672  53                 	db	83	;'S'
  2232  00F673  65                 	db	101	;'e'
  2233  00F674  72                 	db	114	;'r'
  2234  00F675  69                 	db	105	;'i'
  2235  00F676  61                 	db	97	;'a'
  2236  00F677  6C                 	db	108	;'l'
  2237  00F678  20                 	db	32
  2238  00F679  4E                 	db	78	;'N'
  2239  00F67A  75                 	db	117	;'u'
  2240  00F67B  6D                 	db	109	;'m'
  2241  00F67C  62                 	db	98	;'b'
  2242  00F67D  65                 	db	101	;'e'
  2243  00F67E  72                 	db	114	;'r'
  2244  00F67F  20                 	db	32
  2245  00F680  63                 	db	99	;'c'
  2246  00F681  6F                 	db	111	;'o'
  2247  00F682  75                 	db	117	;'u'
  2248  00F683  6C                 	db	108	;'l'
  2249  00F684  64                 	db	100	;'d'
  2250  00F685  20                 	db	32
  2251  00F686  6E                 	db	110	;'n'
  2252  00F687  6F                 	db	111	;'o'
  2253  00F688  74                 	db	116	;'t'
  2254  00F689  20                 	db	32
  2255  00F68A  62                 	db	98	;'b'
  2256  00F68B  65                 	db	101	;'e'
  2257  00F68C  20                 	db	32
  2258  00F68D  62                 	db	98	;'b'
  2259  00F68E  75                 	db	117	;'u'
  2260  00F68F  72                 	db	114	;'r'
  2261  00F690  6E                 	db	110	;'n'
  2262  00F691  65                 	db	101	;'e'
  2263  00F692  64                 	db	100	;'d'
  2264  00F693  20                 	db	32
  2265  00F694  74                 	db	116	;'t'
  2266  00F695  6F                 	db	111	;'o'
  2267  00F696  20                 	db	32
  2268  00F697  45                 	db	69	;'E'
  2269  00F698  45                 	db	69	;'E'
  2270  00F699  50                 	db	80	;'P'
  2271  00F69A  52                 	db	82	;'R'
  2272  00F69B  4F                 	db	79	;'O'
  2273  00F69C  4D                 	db	77	;'M'
  2274  00F69D  00                 	db	0
  2275  00F69E                     STR_86:
  2276  00F69E  53                 	db	83	;'S'
  2277  00F69F  65                 	db	101	;'e'
  2278  00F6A0  72                 	db	114	;'r'
  2279  00F6A1  69                 	db	105	;'i'
  2280  00F6A2  61                 	db	97	;'a'
  2281  00F6A3  6C                 	db	108	;'l'
  2282  00F6A4  20                 	db	32
  2283  00F6A5  4E                 	db	78	;'N'
  2284  00F6A6  75                 	db	117	;'u'
  2285  00F6A7  6D                 	db	109	;'m'
  2286  00F6A8  62                 	db	98	;'b'
  2287  00F6A9  65                 	db	101	;'e'
  2288  00F6AA  72                 	db	114	;'r'
  2289  00F6AB  20                 	db	32
  2290  00F6AC  73                 	db	115	;'s'
  2291  00F6AD  75                 	db	117	;'u'
  2292  00F6AE  63                 	db	99	;'c'
  2293  00F6AF  63                 	db	99	;'c'
  2294  00F6B0  65                 	db	101	;'e'
  2295  00F6B1  73                 	db	115	;'s'
  2296  00F6B2  73                 	db	115	;'s'
  2297  00F6B3  66                 	db	102	;'f'
  2298  00F6B4  75                 	db	117	;'u'
  2299  00F6B5  6C                 	db	108	;'l'
  2300  00F6B6  6C                 	db	108	;'l'
  2301  00F6B7  79                 	db	121	;'y'
  2302  00F6B8  20                 	db	32
  2303  00F6B9  62                 	db	98	;'b'
  2304  00F6BA  75                 	db	117	;'u'
  2305  00F6BB  72                 	db	114	;'r'
  2306  00F6BC  6E                 	db	110	;'n'
  2307  00F6BD  65                 	db	101	;'e'
  2308  00F6BE  64                 	db	100	;'d'
  2309  00F6BF  20                 	db	32
  2310  00F6C0  74                 	db	116	;'t'
  2311  00F6C1  6F                 	db	111	;'o'
  2312  00F6C2  20                 	db	32
  2313  00F6C3  45                 	db	69	;'E'
  2314  00F6C4  45                 	db	69	;'E'
  2315  00F6C5  50                 	db	80	;'P'
  2316  00F6C6  52                 	db	82	;'R'
  2317  00F6C7  4F                 	db	79	;'O'
  2318  00F6C8  4D                 	db	77	;'M'
  2319  00F6C9  00                 	db	0
  2320  00F6CA                     STR_73:
  2321  00F6CA  52                 	db	82	;'R'
  2322  00F6CB  46                 	db	70	;'F'
  2323  00F6CC  20                 	db	32
  2324  00F6CD  63                 	db	99	;'c'
  2325  00F6CE  6F                 	db	111	;'o'
  2326  00F6CF  6E                 	db	110	;'n'
  2327  00F6D0  66                 	db	102	;'f'
  2328  00F6D1  69                 	db	105	;'i'
  2329  00F6D2  67                 	db	103	;'g'
  2330  00F6D3  20                 	db	32
  2331  00F6D4  25                 	db	37
  2332  00F6D5  64                 	db	100	;'d'
  2333  00F6D6  20                 	db	32
  2334  00F6D7  63                 	db	99	;'c'
  2335  00F6D8  68                 	db	104	;'h'
  2336  00F6D9  61                 	db	97	;'a'
  2337  00F6DA  6E                 	db	110	;'n'
  2338  00F6DB  6E                 	db	110	;'n'
  2339  00F6DC  65                 	db	101	;'e'
  2340  00F6DD  6C                 	db	108	;'l'
  2341  00F6DE  20                 	db	32
  2342  00F6DF  25                 	db	37
  2343  00F6E0  63                 	db	99	;'c'
  2344  00F6E1  20                 	db	32
  2345  00F6E2  73                 	db	115	;'s'
  2346  00F6E3  75                 	db	117	;'u'
  2347  00F6E4  63                 	db	99	;'c'
  2348  00F6E5  63                 	db	99	;'c'
  2349  00F6E6  65                 	db	101	;'e'
  2350  00F6E7  73                 	db	115	;'s'
  2351  00F6E8  73                 	db	115	;'s'
  2352  00F6E9  66                 	db	102	;'f'
  2353  00F6EA  75                 	db	117	;'u'
  2354  00F6EB  6C                 	db	108	;'l'
  2355  00F6EC  6C                 	db	108	;'l'
  2356  00F6ED  79                 	db	121	;'y'
  2357  00F6EE  20                 	db	32
  2358  00F6EF  65                 	db	101	;'e'
  2359  00F6F0  72                 	db	114	;'r'
  2360  00F6F1  61                 	db	97	;'a'
  2361  00F6F2  73                 	db	115	;'s'
  2362  00F6F3  65                 	db	101	;'e'
  2363  00F6F4  64                 	db	100	;'d'
  2364  00F6F5  00                 	db	0
  2365  00F6F6                     STR_74:
  2366  00F6F6  45                 	db	69	;'E'
  2367  00F6F7  72                 	db	114	;'r'
  2368  00F6F8  72                 	db	114	;'r'
  2369  00F6F9  6F                 	db	111	;'o'
  2370  00F6FA  72                 	db	114	;'r'
  2371  00F6FB  3A                 	db	58	;':'
  2372  00F6FC  20                 	db	32
  2373  00F6FD  52                 	db	82	;'R'
  2374  00F6FE  46                 	db	70	;'F'
  2375  00F6FF  20                 	db	32
  2376  00F700  63                 	db	99	;'c'
  2377  00F701  68                 	db	104	;'h'
  2378  00F702  61                 	db	97	;'a'
  2379  00F703  6E                 	db	110	;'n'
  2380  00F704  6E                 	db	110	;'n'
  2381  00F705  65                 	db	101	;'e'
  2382  00F706  6C                 	db	108	;'l'
  2383  00F707  20                 	db	32
  2384  00F708  6E                 	db	110	;'n'
  2385  00F709  65                 	db	101	;'e'
  2386  00F70A  65                 	db	101	;'e'
  2387  00F70B  64                 	db	100	;'d'
  2388  00F70C  73                 	db	115	;'s'
  2389  00F70D  20                 	db	32
  2390  00F70E  74                 	db	116	;'t'
  2391  00F70F  6F                 	db	111	;'o'
  2392  00F710  20                 	db	32
  2393  00F711  62                 	db	98	;'b'
  2394  00F712  65                 	db	101	;'e'
  2395  00F713  20                 	db	32
  2396  00F714  6F                 	db	111	;'o'
  2397  00F715  6E                 	db	110	;'n'
  2398  00F716  65                 	db	101	;'e'
  2399  00F717  20                 	db	32
  2400  00F718  63                 	db	99	;'c'
  2401  00F719  68                 	db	104	;'h'
  2402  00F71A  61                 	db	97	;'a'
  2403  00F71B  72                 	db	114	;'r'
  2404  00F71C  61                 	db	97	;'a'
  2405  00F71D  63                 	db	99	;'c'
  2406  00F71E  74                 	db	116	;'t'
  2407  00F71F  65                 	db	101	;'e'
  2408  00F720  72                 	db	114	;'r'
  2409  00F721  00                 	db	0
  2410  00F722                     STR_68:
  2411  00F722  45                 	db	69	;'E'
  2412  00F723  72                 	db	114	;'r'
  2413  00F724  72                 	db	114	;'r'
  2414  00F725  6F                 	db	111	;'o'
  2415  00F726  72                 	db	114	;'r'
  2416  00F727  3A                 	db	58	;':'
  2417  00F728  20                 	db	32
  2418  00F729  4E                 	db	78	;'N'
  2419  00F72A  6F                 	db	111	;'o'
  2420  00F72B  20                 	db	32
  2421  00F72C  73                 	db	115	;'s'
  2422  00F72D  70                 	db	112	;'p'
  2423  00F72E  61                 	db	97	;'a'
  2424  00F72F  63                 	db	99	;'c'
  2425  00F730  65                 	db	101	;'e'
  2426  00F731  20                 	db	32
  2427  00F732  61                 	db	97	;'a'
  2428  00F733  76                 	db	118	;'v'
  2429  00F734  61                 	db	97	;'a'
  2430  00F735  69                 	db	105	;'i'
  2431  00F736  6C                 	db	108	;'l'
  2432  00F737  61                 	db	97	;'a'
  2433  00F738  62                 	db	98	;'b'
  2434  00F739  6C                 	db	108	;'l'
  2435  00F73A  65                 	db	101	;'e'
  2436  00F73B  20                 	db	32
  2437  00F73C  74                 	db	116	;'t'
  2438  00F73D  6F                 	db	111	;'o'
  2439  00F73E  20                 	db	32
  2440  00F73F  74                 	db	116	;'t'
  2441  00F740  68                 	db	104	;'h'
  2442  00F741  69                 	db	105	;'i'
  2443  00F742  73                 	db	115	;'s'
  2444  00F743  20                 	db	32
  2445  00F744  52                 	db	82	;'R'
  2446  00F745  46                 	db	70	;'F'
  2447  00F746  20                 	db	32
  2448  00F747  63                 	db	99	;'c'
  2449  00F748  6F                 	db	111	;'o'
  2450  00F749  64                 	db	100	;'d'
  2451  00F74A  65                 	db	101	;'e'
  2452  00F74B  00                 	db	0
  2453  00F74C                     STR_146:
  2454  00F74C  4E                 	db	78	;'N'
  2455  00F74D  45                 	db	69	;'E'
  2456  00F74E  43                 	db	67	;'C'
  2457  00F74F  20                 	db	32
  2458  00F750  64                 	db	100	;'d'
  2459  00F751  65                 	db	101	;'e'
  2460  00F752  73                 	db	115	;'s'
  2461  00F753  63                 	db	99	;'c'
  2462  00F754  72                 	db	114	;'r'
  2463  00F755  69                 	db	105	;'i'
  2464  00F756  70                 	db	112	;'p'
  2465  00F757  74                 	db	116	;'t'
  2466  00F758  69                 	db	105	;'i'
  2467  00F759  6F                 	db	111	;'o'
  2468  00F75A  6E                 	db	110	;'n'
  2469  00F75B  20                 	db	32
  2470  00F75C  66                 	db	102	;'f'
  2471  00F75D  6F                 	db	111	;'o'
  2472  00F75E  72                 	db	114	;'r'
  2473  00F75F  20                 	db	32
  2474  00F760  41                 	db	65	;'A'
  2475  00F761  72                 	db	114	;'r'
  2476  00F762  62                 	db	98	;'b'
  2477  00F763  69                 	db	105	;'i'
  2478  00F764  74                 	db	116	;'t'
  2479  00F765  72                 	db	114	;'r'
  2480  00F766  61                 	db	97	;'a'
  2481  00F767  72                 	db	114	;'r'
  2482  00F768  79                 	db	121	;'y'
  2483  00F769  20                 	db	32
  2484  00F76A  63                 	db	99	;'c'
  2485  00F76B  6F                 	db	111	;'o'
  2486  00F76C  64                 	db	100	;'d'
  2487  00F76D  65                 	db	101	;'e'
  2488  00F76E  20                 	db	32
  2489  00F76F  73                 	db	115	;'s'
  2490  00F770  65                 	db	101	;'e'
  2491  00F771  6E                 	db	110	;'n'
  2492  00F772  64                 	db	100	;'d'
  2493  00F773  00                 	db	0
  2494  00F774                     STR_60:
  2495  00F774  45                 	db	69	;'E'
  2496  00F775  72                 	db	114	;'r'
  2497  00F776  72                 	db	114	;'r'
  2498  00F777  6F                 	db	111	;'o'
  2499  00F778  72                 	db	114	;'r'
  2500  00F779  3A                 	db	58	;':'
  2501  00F77A  20                 	db	32
  2502  00F77B  4E                 	db	78	;'N'
  2503  00F77C  6F                 	db	111	;'o'
  2504  00F77D  20                 	db	32
  2505  00F77E  52                 	db	82	;'R'
  2506  00F77F  46                 	db	70	;'F'
  2507  00F780  20                 	db	32
  2508  00F781  63                 	db	99	;'c'
  2509  00F782  6F                 	db	111	;'o'
  2510  00F783  6E                 	db	110	;'n'
  2511  00F784  66                 	db	102	;'f'
  2512  00F785  69                 	db	105	;'i'
  2513  00F786  67                 	db	103	;'g'
  2514  00F787  75                 	db	117	;'u'
  2515  00F788  72                 	db	114	;'r'
  2516  00F789  61                 	db	97	;'a'
  2517  00F78A  74                 	db	116	;'t'
  2518  00F78B  69                 	db	105	;'i'
  2519  00F78C  6F                 	db	111	;'o'
  2520  00F78D  6E                 	db	110	;'n'
  2521  00F78E  20                 	db	32
  2522  00F78F  73                 	db	115	;'s'
  2523  00F790  70                 	db	112	;'p'
  2524  00F791  65                 	db	101	;'e'
  2525  00F792  63                 	db	99	;'c'
  2526  00F793  69                 	db	105	;'i'
  2527  00F794  66                 	db	102	;'f'
  2528  00F795  69                 	db	105	;'i'
  2529  00F796  65                 	db	101	;'e'
  2530  00F797  64                 	db	100	;'d'
  2531  00F798  00                 	db	0
  2532  00F799                     STR_62:
  2533  00F799  45                 	db	69	;'E'
  2534  00F79A  72                 	db	114	;'r'
  2535  00F79B  72                 	db	114	;'r'
  2536  00F79C  6F                 	db	111	;'o'
  2537  00F79D  72                 	db	114	;'r'
  2538  00F79E  3A                 	db	58	;':'
  2539  00F79F  20                 	db	32
  2540  00F7A0  52                 	db	82	;'R'
  2541  00F7A1  46                 	db	70	;'F'
  2542  00F7A2  20                 	db	32
  2543  00F7A3  63                 	db	99	;'c'
  2544  00F7A4  6F                 	db	111	;'o'
  2545  00F7A5  6E                 	db	110	;'n'
  2546  00F7A6  66                 	db	102	;'f'
  2547  00F7A7  69                 	db	105	;'i'
  2548  00F7A8  67                 	db	103	;'g'
  2549  00F7A9  75                 	db	117	;'u'
  2550  00F7AA  72                 	db	114	;'r'
  2551  00F7AB  61                 	db	97	;'a'
  2552  00F7AC  74                 	db	116	;'t'
  2553  00F7AD  69                 	db	105	;'i'
  2554  00F7AE  6F                 	db	111	;'o'
  2555  00F7AF  6E                 	db	110	;'n'
  2556  00F7B0  20                 	db	32
  2557  00F7B1  6F                 	db	111	;'o'
  2558  00F7B2  75                 	db	117	;'u'
  2559  00F7B3  74                 	db	116	;'t'
  2560  00F7B4  20                 	db	32
  2561  00F7B5  6F                 	db	111	;'o'
  2562  00F7B6  66                 	db	102	;'f'
  2563  00F7B7  20                 	db	32
  2564  00F7B8  72                 	db	114	;'r'
  2565  00F7B9  61                 	db	97	;'a'
  2566  00F7BA  6E                 	db	110	;'n'
  2567  00F7BB  67                 	db	103	;'g'
  2568  00F7BC  65                 	db	101	;'e'
  2569  00F7BD  00                 	db	0
  2570  00F7BE                     STR_49:
  2571  00F7BE  45                 	db	69	;'E'
  2572  00F7BF  72                 	db	114	;'r'
  2573  00F7C0  72                 	db	114	;'r'
  2574  00F7C1  6F                 	db	111	;'o'
  2575  00F7C2  72                 	db	114	;'r'
  2576  00F7C3  3A                 	db	58	;':'
  2577  00F7C4  20                 	db	32
  2578  00F7C5  52                 	db	82	;'R'
  2579  00F7C6  65                 	db	101	;'e'
  2580  00F7C7  6D                 	db	109	;'m'
  2581  00F7C8  6F                 	db	111	;'o'
  2582  00F7C9  74                 	db	116	;'t'
  2583  00F7CA  65                 	db	101	;'e'
  2584  00F7CB  20                 	db	32
  2585  00F7CC  62                 	db	98	;'b'
  2586  00F7CD  75                 	db	117	;'u'
  2587  00F7CE  74                 	db	116	;'t'
  2588  00F7CF  74                 	db	116	;'t'
  2589  00F7D0  6F                 	db	111	;'o'
  2590  00F7D1  6E                 	db	110	;'n'
  2591  00F7D2  20                 	db	32
  2592  00F7D3  6E                 	db	110	;'n'
  2593  00F7D4  75                 	db	117	;'u'
  2594  00F7D5  6D                 	db	109	;'m'
  2595  00F7D6  62                 	db	98	;'b'
  2596  00F7D7  65                 	db	101	;'e'
  2597  00F7D8  72                 	db	114	;'r'
  2598  00F7D9  20                 	db	32
  2599  00F7DA  74                 	db	116	;'t'
  2600  00F7DB  6F                 	db	111	;'o'
  2601  00F7DC  6F                 	db	111	;'o'
  2602  00F7DD  20                 	db	32
  2603  00F7DE  68                 	db	104	;'h'
  2604  00F7DF  69                 	db	105	;'i'
  2605  00F7E0  67                 	db	103	;'g'
  2606  00F7E1  68                 	db	104	;'h'
  2607  00F7E2  00                 	db	0
  2608  00F7E3                     STR_163:
  2609  00F7E3  45                 	db	69	;'E'
  2610  00F7E4  72                 	db	114	;'r'
  2611  00F7E5  72                 	db	114	;'r'
  2612  00F7E6  6F                 	db	111	;'o'
  2613  00F7E7  72                 	db	114	;'r'
  2614  00F7E8  3A                 	db	58	;':'
  2615  00F7E9  20                 	db	32
  2616  00F7EA  4E                 	db	78	;'N'
  2617  00F7EB  6F                 	db	111	;'o'
  2618  00F7EC  20                 	db	32
  2619  00F7ED  72                 	db	114	;'r'
  2620  00F7EE  65                 	db	101	;'e'
  2621  00F7EF  6D                 	db	109	;'m'
  2622  00F7F0  6F                 	db	111	;'o'
  2623  00F7F1  74                 	db	116	;'t'
  2624  00F7F2  65                 	db	101	;'e'
  2625  00F7F3  20                 	db	32
  2626  00F7F4  62                 	db	98	;'b'
  2627  00F7F5  75                 	db	117	;'u'
  2628  00F7F6  74                 	db	116	;'t'
  2629  00F7F7  74                 	db	116	;'t'
  2630  00F7F8  6F                 	db	111	;'o'
  2631  00F7F9  6E                 	db	110	;'n'
  2632  00F7FA  20                 	db	32
  2633  00F7FB  77                 	db	119	;'w'
  2634  00F7FC  61                 	db	97	;'a'
  2635  00F7FD  73                 	db	115	;'s'
  2636  00F7FE  20                 	db	32
  2637  00F7FF  70                 	db	112	;'p'
  2638  00F800  72                 	db	114	;'r'
  2639  00F801  65                 	db	101	;'e'
  2640  00F802  73                 	db	115	;'s'
  2641  00F803  73                 	db	115	;'s'
  2642  00F804  65                 	db	101	;'e'
  2643  00F805  64                 	db	100	;'d'
  2644  00F806  00                 	db	0
  2645  00F807                     STR_50:
  2646  00F807  45                 	db	69	;'E'
  2647  00F808  72                 	db	114	;'r'
  2648  00F809  72                 	db	114	;'r'
  2649  00F80A  6F                 	db	111	;'o'
  2650  00F80B  72                 	db	114	;'r'
  2651  00F80C  3A                 	db	58	;':'
  2652  00F80D  20                 	db	32
  2653  00F80E  52                 	db	82	;'R'
  2654  00F80F  65                 	db	101	;'e'
  2655  00F810  6D                 	db	109	;'m'
  2656  00F811  6F                 	db	111	;'o'
  2657  00F812  74                 	db	116	;'t'
  2658  00F813  65                 	db	101	;'e'
  2659  00F814  20                 	db	32
  2660  00F815  62                 	db	98	;'b'
  2661  00F816  75                 	db	117	;'u'
  2662  00F817  74                 	db	116	;'t'
  2663  00F818  74                 	db	116	;'t'
  2664  00F819  6F                 	db	111	;'o'
  2665  00F81A  6E                 	db	110	;'n'
  2666  00F81B  20                 	db	32
  2667  00F81C  6E                 	db	110	;'n'
  2668  00F81D  6F                 	db	111	;'o'
  2669  00F81E  74                 	db	116	;'t'
  2670  00F81F  20                 	db	32
  2671  00F820  73                 	db	115	;'s'
  2672  00F821  70                 	db	112	;'p'
  2673  00F822  65                 	db	101	;'e'
  2674  00F823  63                 	db	99	;'c'
  2675  00F824  69                 	db	105	;'i'
  2676  00F825  66                 	db	102	;'f'
  2677  00F826  69                 	db	105	;'i'
  2678  00F827  65                 	db	101	;'e'
  2679  00F828  64                 	db	100	;'d'
  2680  00F829  00                 	db	0
  2681  00F82A                     STR_110:
  2682  00F82A  44                 	db	68	;'D'
  2683  00F82B  69                 	db	105	;'i'
  2684  00F82C  73                 	db	115	;'s'
  2685  00F82D  70                 	db	112	;'p'
  2686  00F82E  6C                 	db	108	;'l'
  2687  00F82F  61                 	db	97	;'a'
  2688  00F830  79                 	db	121	;'y'
  2689  00F831  73                 	db	115	;'s'
  2690  00F832  20                 	db	32
  2691  00F833  46                 	db	70	;'F'
  2692  00F834  69                 	db	105	;'i'
  2693  00F835  72                 	db	114	;'r'
  2694  00F836  6D                 	db	109	;'m'
  2695  00F837  77                 	db	119	;'w'
  2696  00F838  61                 	db	97	;'a'
  2697  00F839  72                 	db	114	;'r'
  2698  00F83A  65                 	db	101	;'e'
  2699  00F83B  2F                 	db	47
  2700  00F83C  48                 	db	72	;'H'
  2701  00F83D  61                 	db	97	;'a'
  2702  00F83E  72                 	db	114	;'r'
  2703  00F83F  64                 	db	100	;'d'
  2704  00F840  77                 	db	119	;'w'
  2705  00F841  61                 	db	97	;'a'
  2706  00F842  72                 	db	114	;'r'
  2707  00F843  65                 	db	101	;'e'
  2708  00F844  20                 	db	32
  2709  00F845  56                 	db	86	;'V'
  2710  00F846  65                 	db	101	;'e'
  2711  00F847  72                 	db	114	;'r'
  2712  00F848  73                 	db	115	;'s'
  2713  00F849  69                 	db	105	;'i'
  2714  00F84A  6F                 	db	111	;'o'
  2715  00F84B  6E                 	db	110	;'n'
  2716  00F84C  00                 	db	0
  2717  00F84D                     STR_90:
  2718  00F84D  53                 	db	83	;'S'
  2719  00F84E  65                 	db	101	;'e'
  2720  00F84F  72                 	db	114	;'r'
  2721  00F850  69                 	db	105	;'i'
  2722  00F851  61                 	db	97	;'a'
  2723  00F852  6C                 	db	108	;'l'
  2724  00F853  20                 	db	32
  2725  00F854  4E                 	db	78	;'N'
  2726  00F855  75                 	db	117	;'u'
  2727  00F856  6D                 	db	109	;'m'
  2728  00F857  62                 	db	98	;'b'
  2729  00F858  65                 	db	101	;'e'
  2730  00F859  72                 	db	114	;'r'
  2731  00F85A  20                 	db	32
  2732  00F85B  65                 	db	101	;'e'
  2733  00F85C  6E                 	db	110	;'n'
  2734  00F85D  74                 	db	116	;'t'
  2735  00F85E  65                 	db	101	;'e'
  2736  00F85F  72                 	db	114	;'r'
  2737  00F860  65                 	db	101	;'e'
  2738  00F861  64                 	db	100	;'d'
  2739  00F862  20                 	db	32
  2740  00F863  69                 	db	105	;'i'
  2741  00F864  6E                 	db	110	;'n'
  2742  00F865  63                 	db	99	;'c'
  2743  00F866  6F                 	db	111	;'o'
  2744  00F867  72                 	db	114	;'r'
  2745  00F868  72                 	db	114	;'r'
  2746  00F869  65                 	db	101	;'e'
  2747  00F86A  63                 	db	99	;'c'
  2748  00F86B  74                 	db	116	;'t'
  2749  00F86C  6C                 	db	108	;'l'
  2750  00F86D  79                 	db	121	;'y'
  2751  00F86E  00                 	db	0
  2752  00F86F                     STR_31:
  2753  00F86F  45                 	db	69	;'E'
  2754  00F870  72                 	db	114	;'r'
  2755  00F871  72                 	db	114	;'r'
  2756  00F872  6F                 	db	111	;'o'
  2757  00F873  72                 	db	114	;'r'
  2758  00F874  3A                 	db	58	;':'
  2759  00F875  20                 	db	32
  2760  00F876  63                 	db	99	;'c'
  2761  00F877  6F                 	db	111	;'o'
  2762  00F878  75                 	db	117	;'u'
  2763  00F879  6C                 	db	108	;'l'
  2764  00F87A  64                 	db	100	;'d'
  2765  00F87B  20                 	db	32
  2766  00F87C  6E                 	db	110	;'n'
  2767  00F87D  6F                 	db	111	;'o'
  2768  00F87E  74                 	db	116	;'t'
  2769  00F87F  20                 	db	32
  2770  00F880  64                 	db	100	;'d'
  2771  00F881  65                 	db	101	;'e'
  2772  00F882  63                 	db	99	;'c'
  2773  00F883  6F                 	db	111	;'o'
  2774  00F884  64                 	db	100	;'d'
  2775  00F885  65                 	db	101	;'e'
  2776  00F886  20                 	db	32
  2777  00F887  4E                 	db	78	;'N'
  2778  00F888  45                 	db	69	;'E'
  2779  00F889  43                 	db	67	;'C'
  2780  00F88A  20                 	db	32
  2781  00F88B  63                 	db	99	;'c'
  2782  00F88C  6F                 	db	111	;'o'
  2783  00F88D  64                 	db	100	;'d'
  2784  00F88E  65                 	db	101	;'e'
  2785  00F88F  00                 	db	0
  2786  00F890                     STR_156:
  2787  00F890  52                 	db	82	;'R'
  2788  00F891  43                 	db	67	;'C'
  2789  00F892  2D                 	db	45
  2790  00F893  30                 	db	48	;'0'
  2791  00F894  31                 	db	49	;'1'
  2792  00F895  35                 	db	53	;'5'
  2793  00F896  2A                 	db	42
  2794  00F897  33                 	db	51	;'3'
  2795  00F898  20                 	db	32
  2796  00F899  43                 	db	67	;'C'
  2797  00F89A  68                 	db	104	;'h'
  2798  00F89B  61                 	db	97	;'a'
  2799  00F89C  6E                 	db	110	;'n'
  2800  00F89D  6E                 	db	110	;'n'
  2801  00F89E  65                 	db	101	;'e'
  2802  00F89F  6C                 	db	108	;'l'
  2803  00F8A0  20                 	db	32
  2804  00F8A1  48                 	db	72	;'H'
  2805  00F8A2  20                 	db	32
  2806  00F8A3  64                 	db	100	;'d'
  2807  00F8A4  65                 	db	101	;'e'
  2808  00F8A5  76                 	db	118	;'v'
  2809  00F8A6  69                 	db	105	;'i'
  2810  00F8A7  63                 	db	99	;'c'
  2811  00F8A8  65                 	db	101	;'e'
  2812  00F8A9  20                 	db	32
  2813  00F8AA  31                 	db	49	;'1'
  2814  00F8AB  20                 	db	32
  2815  00F8AC  4F                 	db	79	;'O'
  2816  00F8AD  46                 	db	70	;'F'
  2817  00F8AE  46                 	db	70	;'F'
  2818  00F8AF  00                 	db	0
  2819  00F8B0                     STR_158:
  2820  00F8B0  52                 	db	82	;'R'
  2821  00F8B1  43                 	db	67	;'C'
  2822  00F8B2  2D                 	db	45
  2823  00F8B3  30                 	db	48	;'0'
  2824  00F8B4  31                 	db	49	;'1'
  2825  00F8B5  35                 	db	53	;'5'
  2826  00F8B6  2A                 	db	42
  2827  00F8B7  33                 	db	51	;'3'
  2828  00F8B8  20                 	db	32
  2829  00F8B9  43                 	db	67	;'C'
  2830  00F8BA  68                 	db	104	;'h'
  2831  00F8BB  61                 	db	97	;'a'
  2832  00F8BC  6E                 	db	110	;'n'
  2833  00F8BD  6E                 	db	110	;'n'
  2834  00F8BE  65                 	db	101	;'e'
  2835  00F8BF  6C                 	db	108	;'l'
  2836  00F8C0  20                 	db	32
  2837  00F8C1  48                 	db	72	;'H'
  2838  00F8C2  20                 	db	32
  2839  00F8C3  64                 	db	100	;'d'
  2840  00F8C4  65                 	db	101	;'e'
  2841  00F8C5  76                 	db	118	;'v'
  2842  00F8C6  69                 	db	105	;'i'
  2843  00F8C7  63                 	db	99	;'c'
  2844  00F8C8  65                 	db	101	;'e'
  2845  00F8C9  20                 	db	32
  2846  00F8CA  32                 	db	50	;'2'
  2847  00F8CB  20                 	db	32
  2848  00F8CC  4F                 	db	79	;'O'
  2849  00F8CD  46                 	db	70	;'F'
  2850  00F8CE  46                 	db	70	;'F'
  2851  00F8CF  00                 	db	0
  2852  00F8D0                     STR_160:
  2853  00F8D0  52                 	db	82	;'R'
  2854  00F8D1  43                 	db	67	;'C'
  2855  00F8D2  2D                 	db	45
  2856  00F8D3  30                 	db	48	;'0'
  2857  00F8D4  31                 	db	49	;'1'
  2858  00F8D5  35                 	db	53	;'5'
  2859  00F8D6  2A                 	db	42
  2860  00F8D7  33                 	db	51	;'3'
  2861  00F8D8  20                 	db	32
  2862  00F8D9  43                 	db	67	;'C'
  2863  00F8DA  68                 	db	104	;'h'
  2864  00F8DB  61                 	db	97	;'a'
  2865  00F8DC  6E                 	db	110	;'n'
  2866  00F8DD  6E                 	db	110	;'n'
  2867  00F8DE  65                 	db	101	;'e'
  2868  00F8DF  6C                 	db	108	;'l'
  2869  00F8E0  20                 	db	32
  2870  00F8E1  48                 	db	72	;'H'
  2871  00F8E2  20                 	db	32
  2872  00F8E3  64                 	db	100	;'d'
  2873  00F8E4  65                 	db	101	;'e'
  2874  00F8E5  76                 	db	118	;'v'
  2875  00F8E6  69                 	db	105	;'i'
  2876  00F8E7  63                 	db	99	;'c'
  2877  00F8E8  65                 	db	101	;'e'
  2878  00F8E9  20                 	db	32
  2879  00F8EA  33                 	db	51	;'3'
  2880  00F8EB  20                 	db	32
  2881  00F8EC  4F                 	db	79	;'O'
  2882  00F8ED  46                 	db	70	;'F'
  2883  00F8EE  46                 	db	70	;'F'
  2884  00F8EF  00                 	db	0
  2885  00F8F0                     STR_108:
  2886  00F8F0  43                 	db	67	;'C'
  2887  00F8F1  6C                 	db	108	;'l'
  2888  00F8F2  65                 	db	101	;'e'
  2889  00F8F3  61                 	db	97	;'a'
  2890  00F8F4  72                 	db	114	;'r'
  2891  00F8F5  73                 	db	115	;'s'
  2892  00F8F6  20                 	db	32
  2893  00F8F7  6D                 	db	109	;'m'
  2894  00F8F8  65                 	db	101	;'e'
  2895  00F8F9  6D                 	db	109	;'m'
  2896  00F8FA  6F                 	db	111	;'o'
  2897  00F8FB  72                 	db	114	;'r'
  2898  00F8FC  79                 	db	121	;'y'
  2899  00F8FD  20                 	db	32
  2900  00F8FE  61                 	db	97	;'a'
  2901  00F8FF  6E                 	db	110	;'n'
  2902  00F900  64                 	db	100	;'d'
  2903  00F901  20                 	db	32
  2904  00F902  72                 	db	114	;'r'
  2905  00F903  65                 	db	101	;'e'
  2906  00F904  73                 	db	115	;'s'
  2907  00F905  65                 	db	101	;'e'
  2908  00F906  74                 	db	116	;'t'
  2909  00F907  73                 	db	115	;'s'
  2910  00F908  20                 	db	32
  2911  00F909  64                 	db	100	;'d'
  2912  00F90A  65                 	db	101	;'e'
  2913  00F90B  76                 	db	118	;'v'
  2914  00F90C  69                 	db	105	;'i'
  2915  00F90D  63                 	db	99	;'c'
  2916  00F90E  65                 	db	101	;'e'
  2917  00F90F  00                 	db	0
  2918  00F910                     STR_76:
  2919  00F910  45                 	db	69	;'E'
  2920  00F911  6E                 	db	110	;'n'
  2921  00F912  74                 	db	116	;'t'
  2922  00F913  65                 	db	101	;'e'
  2923  00F914  72                 	db	114	;'r'
  2924  00F915  20                 	db	32
  2925  00F916  59                 	db	89	;'Y'
  2926  00F917  20                 	db	32
  2927  00F918  74                 	db	116	;'t'
  2928  00F919  6F                 	db	111	;'o'
  2929  00F91A  20                 	db	32
  2930  00F91B  72                 	db	114	;'r'
  2931  00F91C  65                 	db	101	;'e'
  2932  00F91D  73                 	db	115	;'s'
  2933  00F91E  65                 	db	101	;'e'
  2934  00F91F  74                 	db	116	;'t'
  2935  00F920  20                 	db	32
  2936  00F921  6F                 	db	111	;'o'
  2937  00F922  72                 	db	114	;'r'
  2938  00F923  20                 	db	32
  2939  00F924  4E                 	db	78	;'N'
  2940  00F925  20                 	db	32
  2941  00F926  74                 	db	116	;'t'
  2942  00F927  6F                 	db	111	;'o'
  2943  00F928  20                 	db	32
  2944  00F929  63                 	db	99	;'c'
  2945  00F92A  61                 	db	97	;'a'
  2946  00F92B  6E                 	db	110	;'n'
  2947  00F92C  63                 	db	99	;'c'
  2948  00F92D  65                 	db	101	;'e'
  2949  00F92E  6C                 	db	108	;'l'
  2950  00F92F  00                 	db	0
  2951  00F930                     STR_27:
  2952  00F930  45                 	db	69	;'E'
  2953  00F931  72                 	db	114	;'r'
  2954  00F932  72                 	db	114	;'r'
  2955  00F933  6F                 	db	111	;'o'
  2956  00F934  72                 	db	114	;'r'
  2957  00F935  3A                 	db	58	;':'
  2958  00F936  20                 	db	32
  2959  00F937  63                 	db	99	;'c'
  2960  00F938  6F                 	db	111	;'o'
  2961  00F939  75                 	db	117	;'u'
  2962  00F93A  6C                 	db	108	;'l'
  2963  00F93B  64                 	db	100	;'d'
  2964  00F93C  20                 	db	32
  2965  00F93D  6E                 	db	110	;'n'
  2966  00F93E  6F                 	db	111	;'o'
  2967  00F93F  74                 	db	116	;'t'
  2968  00F940  20                 	db	32
  2969  00F941  64                 	db	100	;'d'
  2970  00F942  65                 	db	101	;'e'
  2971  00F943  63                 	db	99	;'c'
  2972  00F944  6F                 	db	111	;'o'
  2973  00F945  64                 	db	100	;'d'
  2974  00F946  65                 	db	101	;'e'
  2975  00F947  20                 	db	32
  2976  00F948  41                 	db	65	;'A'
  2977  00F949  64                 	db	100	;'d'
  2978  00F94A  64                 	db	100	;'d'
  2979  00F94B  72                 	db	114	;'r'
  2980  00F94C  65                 	db	101	;'e'
  2981  00F94D  73                 	db	115	;'s'
  2982  00F94E  73                 	db	115	;'s'
  2983  00F94F  00                 	db	0
  2984  00F950                     STR_22:
  2985  00F950  45                 	db	69	;'E'
  2986  00F951  72                 	db	114	;'r'
  2987  00F952  72                 	db	114	;'r'
  2988  00F953  6F                 	db	111	;'o'
  2989  00F954  72                 	db	114	;'r'
  2990  00F955  3A                 	db	58	;':'
  2991  00F956  20                 	db	32
  2992  00F957  43                 	db	67	;'C'
  2993  00F958  6F                 	db	111	;'o'
  2994  00F959  6D                 	db	109	;'m'
  2995  00F95A  6D                 	db	109	;'m'
  2996  00F95B  61                 	db	97	;'a'
  2997  00F95C  6E                 	db	110	;'n'
  2998  00F95D  64                 	db	100	;'d'
  2999  00F95E  20                 	db	32
  3000  00F95F  6C                 	db	108	;'l'
  3001  00F960  61                 	db	97	;'a'
  3002  00F961  72                 	db	114	;'r'
  3003  00F962  67                 	db	103	;'g'
  3004  00F963  65                 	db	101	;'e'
  3005  00F964  72                 	db	114	;'r'
  3006  00F965  20                 	db	32
  3007  00F966  74                 	db	116	;'t'
  3008  00F967  68                 	db	104	;'h'
  3009  00F968  61                 	db	97	;'a'
  3010  00F969  74                 	db	116	;'t'
  3011  00F96A  20                 	db	32
  3012  00F96B  32                 	db	50	;'2'
  3013  00F96C  35                 	db	53	;'5'
  3014  00F96D  35                 	db	53	;'5'
  3015  00F96E  00                 	db	0
  3016  00F96F                     STR_23:
  3017  00F96F  45                 	db	69	;'E'
  3018  00F970  72                 	db	114	;'r'
  3019  00F971  72                 	db	114	;'r'
  3020  00F972  6F                 	db	111	;'o'
  3021  00F973  72                 	db	114	;'r'
  3022  00F974  3A                 	db	58	;':'
  3023  00F975  20                 	db	32
  3024  00F976  41                 	db	65	;'A'
  3025  00F977  64                 	db	100	;'d'
  3026  00F978  64                 	db	100	;'d'
  3027  00F979  72                 	db	114	;'r'
  3028  00F97A  65                 	db	101	;'e'
  3029  00F97B  73                 	db	115	;'s'
  3030  00F97C  73                 	db	115	;'s'
  3031  00F97D  20                 	db	32
  3032  00F97E  6C                 	db	108	;'l'
  3033  00F97F  61                 	db	97	;'a'
  3034  00F980  72                 	db	114	;'r'
  3035  00F981  67                 	db	103	;'g'
  3036  00F982  65                 	db	101	;'e'
  3037  00F983  72                 	db	114	;'r'
  3038  00F984  20                 	db	32
  3039  00F985  74                 	db	116	;'t'
  3040  00F986  68                 	db	104	;'h'
  3041  00F987  61                 	db	97	;'a'
  3042  00F988  74                 	db	116	;'t'
  3043  00F989  20                 	db	32
  3044  00F98A  32                 	db	50	;'2'
  3045  00F98B  35                 	db	53	;'5'
  3046  00F98C  35                 	db	53	;'5'
  3047  00F98D  00                 	db	0
  3048  00F98E                     STR_155:
  3049  00F98E  52                 	db	82	;'R'
  3050  00F98F  43                 	db	67	;'C'
  3051  00F990  2D                 	db	45
  3052  00F991  30                 	db	48	;'0'
  3053  00F992  31                 	db	49	;'1'
  3054  00F993  35                 	db	53	;'5'
  3055  00F994  2A                 	db	42
  3056  00F995  33                 	db	51	;'3'
  3057  00F996  20                 	db	32
  3058  00F997  43                 	db	67	;'C'
  3059  00F998  68                 	db	104	;'h'
  3060  00F999  61                 	db	97	;'a'
  3061  00F99A  6E                 	db	110	;'n'
  3062  00F99B  6E                 	db	110	;'n'
  3063  00F99C  65                 	db	101	;'e'
  3064  00F99D  6C                 	db	108	;'l'
  3065  00F99E  20                 	db	32
  3066  00F99F  48                 	db	72	;'H'
  3067  00F9A0  20                 	db	32
  3068  00F9A1  64                 	db	100	;'d'
  3069  00F9A2  65                 	db	101	;'e'
  3070  00F9A3  76                 	db	118	;'v'
  3071  00F9A4  69                 	db	105	;'i'
  3072  00F9A5  63                 	db	99	;'c'
  3073  00F9A6  65                 	db	101	;'e'
  3074  00F9A7  20                 	db	32
  3075  00F9A8  31                 	db	49	;'1'
  3076  00F9A9  20                 	db	32
  3077  00F9AA  4F                 	db	79	;'O'
  3078  00F9AB  4E                 	db	78	;'N'
  3079  00F9AC  00                 	db	0
  3080  00F9AD                     STR_157:
  3081  00F9AD  52                 	db	82	;'R'
  3082  00F9AE  43                 	db	67	;'C'
  3083  00F9AF  2D                 	db	45
  3084  00F9B0  30                 	db	48	;'0'
  3085  00F9B1  31                 	db	49	;'1'
  3086  00F9B2  35                 	db	53	;'5'
  3087  00F9B3  2A                 	db	42
  3088  00F9B4  33                 	db	51	;'3'
  3089  00F9B5  20                 	db	32
  3090  00F9B6  43                 	db	67	;'C'
  3091  00F9B7  68                 	db	104	;'h'
  3092  00F9B8  61                 	db	97	;'a'
  3093  00F9B9  6E                 	db	110	;'n'
  3094  00F9BA  6E                 	db	110	;'n'
  3095  00F9BB  65                 	db	101	;'e'
  3096  00F9BC  6C                 	db	108	;'l'
  3097  00F9BD  20                 	db	32
  3098  00F9BE  48                 	db	72	;'H'
  3099  00F9BF  20                 	db	32
  3100  00F9C0  64                 	db	100	;'d'
  3101  00F9C1  65                 	db	101	;'e'
  3102  00F9C2  76                 	db	118	;'v'
  3103  00F9C3  69                 	db	105	;'i'
  3104  00F9C4  63                 	db	99	;'c'
  3105  00F9C5  65                 	db	101	;'e'
  3106  00F9C6  20                 	db	32
  3107  00F9C7  32                 	db	50	;'2'
  3108  00F9C8  20                 	db	32
  3109  00F9C9  4F                 	db	79	;'O'
  3110  00F9CA  4E                 	db	78	;'N'
  3111  00F9CB  00                 	db	0
  3112  00F9CC                     STR_159:
  3113  00F9CC  52                 	db	82	;'R'
  3114  00F9CD  43                 	db	67	;'C'
  3115  00F9CE  2D                 	db	45
  3116  00F9CF  30                 	db	48	;'0'
  3117  00F9D0  31                 	db	49	;'1'
  3118  00F9D1  35                 	db	53	;'5'
  3119  00F9D2  2A                 	db	42
  3120  00F9D3  33                 	db	51	;'3'
  3121  00F9D4  20                 	db	32
  3122  00F9D5  43                 	db	67	;'C'
  3123  00F9D6  68                 	db	104	;'h'
  3124  00F9D7  61                 	db	97	;'a'
  3125  00F9D8  6E                 	db	110	;'n'
  3126  00F9D9  6E                 	db	110	;'n'
  3127  00F9DA  65                 	db	101	;'e'
  3128  00F9DB  6C                 	db	108	;'l'
  3129  00F9DC  20                 	db	32
  3130  00F9DD  48                 	db	72	;'H'
  3131  00F9DE  20                 	db	32
  3132  00F9DF  64                 	db	100	;'d'
  3133  00F9E0  65                 	db	101	;'e'
  3134  00F9E1  76                 	db	118	;'v'
  3135  00F9E2  69                 	db	105	;'i'
  3136  00F9E3  63                 	db	99	;'c'
  3137  00F9E4  65                 	db	101	;'e'
  3138  00F9E5  20                 	db	32
  3139  00F9E6  33                 	db	51	;'3'
  3140  00F9E7  20                 	db	32
  3141  00F9E8  4F                 	db	79	;'O'
  3142  00F9E9  4E                 	db	78	;'N'
  3143  00F9EA  00                 	db	0
  3144  00F9EB                     STR_63:
  3145  00F9EB  45                 	db	69	;'E'
  3146  00F9EC  72                 	db	114	;'r'
  3147  00F9ED  72                 	db	114	;'r'
  3148  00F9EE  6F                 	db	111	;'o'
  3149  00F9EF  72                 	db	114	;'r'
  3150  00F9F0  3A                 	db	58	;':'
  3151  00F9F1  20                 	db	32
  3152  00F9F2  4E                 	db	78	;'N'
  3153  00F9F3  6F                 	db	111	;'o'
  3154  00F9F4  20                 	db	32
  3155  00F9F5  52                 	db	82	;'R'
  3156  00F9F6  46                 	db	70	;'F'
  3157  00F9F7  20                 	db	32
  3158  00F9F8  63                 	db	99	;'c'
  3159  00F9F9  68                 	db	104	;'h'
  3160  00F9FA  61                 	db	97	;'a'
  3161  00F9FB  6E                 	db	110	;'n'
  3162  00F9FC  6E                 	db	110	;'n'
  3163  00F9FD  65                 	db	101	;'e'
  3164  00F9FE  6C                 	db	108	;'l'
  3165  00F9FF  20                 	db	32
  3166  00FA00  73                 	db	115	;'s'
  3167  00FA01  70                 	db	112	;'p'
  3168  00FA02  65                 	db	101	;'e'
  3169  00FA03  63                 	db	99	;'c'
  3170  00FA04  69                 	db	105	;'i'
  3171  00FA05  66                 	db	102	;'f'
  3172  00FA06  69                 	db	105	;'i'
  3173  00FA07  65                 	db	101	;'e'
  3174  00FA08  64                 	db	100	;'d'
  3175  00FA09  00                 	db	0
  3176  00FA0A                     STR_64:
  3177  00FA0A  45                 	db	69	;'E'
  3178  00FA0B  72                 	db	114	;'r'
  3179  00FA0C  72                 	db	114	;'r'
  3180  00FA0D  6F                 	db	111	;'o'
  3181  00FA0E  72                 	db	114	;'r'
  3182  00FA0F  3A                 	db	58	;':'
  3183  00FA10  20                 	db	32
  3184  00FA11  52                 	db	82	;'R'
  3185  00FA12  46                 	db	70	;'F'
  3186  00FA13  20                 	db	32
  3187  00FA14  63                 	db	99	;'c'
  3188  00FA15  68                 	db	104	;'h'
  3189  00FA16  61                 	db	97	;'a'
  3190  00FA17  6E                 	db	110	;'n'
  3191  00FA18  6E                 	db	110	;'n'
  3192  00FA19  65                 	db	101	;'e'
  3193  00FA1A  6C                 	db	108	;'l'
  3194  00FA1B  20                 	db	32
  3195  00FA1C  6F                 	db	111	;'o'
  3196  00FA1D  75                 	db	117	;'u'
  3197  00FA1E  74                 	db	116	;'t'
  3198  00FA1F  20                 	db	32
  3199  00FA20  6F                 	db	111	;'o'
  3200  00FA21  66                 	db	102	;'f'
  3201  00FA22  20                 	db	32
  3202  00FA23  72                 	db	114	;'r'
  3203  00FA24  61                 	db	97	;'a'
  3204  00FA25  6E                 	db	110	;'n'
  3205  00FA26  67                 	db	103	;'g'
  3206  00FA27  65                 	db	101	;'e'
  3207  00FA28  00                 	db	0
  3208  00FA29                     STR_33:
  3209  00FA29  4E                 	db	78	;'N'
  3210  00FA2A  45                 	db	69	;'E'
  3211  00FA2B  43                 	db	67	;'C'
  3212  00FA2C  20                 	db	32
  3213  00FA2D  63                 	db	99	;'c'
  3214  00FA2E  6F                 	db	111	;'o'
  3215  00FA2F  64                 	db	100	;'d'
  3216  00FA30  65                 	db	101	;'e'
  3217  00FA31  20                 	db	32
  3218  00FA32  6E                 	db	110	;'n'
  3219  00FA33  6F                 	db	111	;'o'
  3220  00FA34  74                 	db	116	;'t'
  3221  00FA35  20                 	db	32
  3222  00FA36  65                 	db	101	;'e'
  3223  00FA37  6E                 	db	110	;'n'
  3224  00FA38  74                 	db	116	;'t'
  3225  00FA39  65                 	db	101	;'e'
  3226  00FA3A  72                 	db	114	;'r'
  3227  00FA3B  65                 	db	101	;'e'
  3228  00FA3C  64                 	db	100	;'d'
  3229  00FA3D  20                 	db	32
  3230  00FA3E  63                 	db	99	;'c'
  3231  00FA3F  6F                 	db	111	;'o'
  3232  00FA40  72                 	db	114	;'r'
  3233  00FA41  72                 	db	114	;'r'
  3234  00FA42  65                 	db	101	;'e'
  3235  00FA43  63                 	db	99	;'c'
  3236  00FA44  74                 	db	116	;'t'
  3237  00FA45  6C                 	db	108	;'l'
  3238  00FA46  79                 	db	121	;'y'
  3239  00FA47  00                 	db	0
  3240  00FA48                     STR_77:
  3241  00FA48  44                 	db	68	;'D'
  3242  00FA49  65                 	db	101	;'e'
  3243  00FA4A  76                 	db	118	;'v'
  3244  00FA4B  69                 	db	105	;'i'
  3245  00FA4C  63                 	db	99	;'c'
  3246  00FA4D  65                 	db	101	;'e'
  3247  00FA4E  20                 	db	32
  3248  00FA4F  72                 	db	114	;'r'
  3249  00FA50  65                 	db	101	;'e'
  3250  00FA51  73                 	db	115	;'s'
  3251  00FA52  75                 	db	117	;'u'
  3252  00FA53  6D                 	db	109	;'m'
  3253  00FA54  65                 	db	101	;'e'
  3254  00FA55  73                 	db	115	;'s'
  3255  00FA56  20                 	db	32
  3256  00FA57  77                 	db	119	;'w'
  3257  00FA58  69                 	db	105	;'i'
  3258  00FA59  74                 	db	116	;'t'
  3259  00FA5A  68                 	db	104	;'h'
  3260  00FA5B  6F                 	db	111	;'o'
  3261  00FA5C  75                 	db	117	;'u'
  3262  00FA5D  74                 	db	116	;'t'
  3263  00FA5E  20                 	db	32
  3264  00FA5F  72                 	db	114	;'r'
  3265  00FA60  65                 	db	101	;'e'
  3266  00FA61  73                 	db	115	;'s'
  3267  00FA62  65                 	db	101	;'e'
  3268  00FA63  74                 	db	116	;'t'
  3269  00FA64  00                 	db	0
  3270  00FA65                     STR_18:
  3271  00FA65  43                 	db	67	;'C'
  3272  00FA66  6F                 	db	111	;'o'
  3273  00FA67  6E                 	db	110	;'n'
  3274  00FA68  66                 	db	102	;'f'
  3275  00FA69  69                 	db	105	;'i'
  3276  00FA6A  67                 	db	103	;'g'
  3277  00FA6B  75                 	db	117	;'u'
  3278  00FA6C  72                 	db	114	;'r'
  3279  00FA6D  61                 	db	97	;'a'
  3280  00FA6E  74                 	db	116	;'t'
  3281  00FA6F  69                 	db	105	;'i'
  3282  00FA70  6F                 	db	111	;'o'
  3283  00FA71  6E                 	db	110	;'n'
  3284  00FA72  20                 	db	32
  3285  00FA73  31                 	db	49	;'1'
  3286  00FA74  20                 	db	32
  3287  00FA75  52                 	db	82	;'R'
  3288  00FA76  46                 	db	70	;'F'
  3289  00FA77  20                 	db	32
  3290  00FA78  63                 	db	99	;'c'
  3291  00FA79  6F                 	db	111	;'o'
  3292  00FA7A  64                 	db	100	;'d'
  3293  00FA7B  65                 	db	101	;'e'
  3294  00FA7C  20                 	db	32
  3295  00FA7D  73                 	db	115	;'s'
  3296  00FA7E  65                 	db	101	;'e'
  3297  00FA7F  6E                 	db	110	;'n'
  3298  00FA80  74                 	db	116	;'t'
  3299  00FA81  00                 	db	0
  3300  00FA82                     STR_20:
  3301  00FA82  43                 	db	67	;'C'
  3302  00FA83  6F                 	db	111	;'o'
  3303  00FA84  6E                 	db	110	;'n'
  3304  00FA85  66                 	db	102	;'f'
  3305  00FA86  69                 	db	105	;'i'
  3306  00FA87  67                 	db	103	;'g'
  3307  00FA88  75                 	db	117	;'u'
  3308  00FA89  72                 	db	114	;'r'
  3309  00FA8A  61                 	db	97	;'a'
  3310  00FA8B  74                 	db	116	;'t'
  3311  00FA8C  69                 	db	105	;'i'
  3312  00FA8D  6F                 	db	111	;'o'
  3313  00FA8E  6E                 	db	110	;'n'
  3314  00FA8F  20                 	db	32
  3315  00FA90  32                 	db	50	;'2'
  3316  00FA91  20                 	db	32
  3317  00FA92  52                 	db	82	;'R'
  3318  00FA93  46                 	db	70	;'F'
  3319  00FA94  20                 	db	32
  3320  00FA95  63                 	db	99	;'c'
  3321  00FA96  6F                 	db	111	;'o'
  3322  00FA97  64                 	db	100	;'d'
  3323  00FA98  65                 	db	101	;'e'
  3324  00FA99  20                 	db	32
  3325  00FA9A  73                 	db	115	;'s'
  3326  00FA9B  65                 	db	101	;'e'
  3327  00FA9C  6E                 	db	110	;'n'
  3328  00FA9D  74                 	db	116	;'t'
  3329  00FA9E  00                 	db	0
  3330  00FA9F                     STR_96:
  3331  00FA9F  50                 	db	80	;'P'
  3332  00FAA0  43                 	db	67	;'C'
  3333  00FAA1  42                 	db	66	;'B'
  3334  00FAA2  20                 	db	32
  3335  00FAA3  68                 	db	104	;'h'
  3336  00FAA4  61                 	db	97	;'a'
  3337  00FAA5  73                 	db	115	;'s'
  3338  00FAA6  20                 	db	32
  3339  00FAA7  42                 	db	66	;'B'
  3340  00FAA8  6C                 	db	108	;'l'
  3341  00FAA9  75                 	db	117	;'u'
  3342  00FAAA  65                 	db	101	;'e'
  3343  00FAAB  74                 	db	116	;'t'
  3344  00FAAC  6F                 	db	111	;'o'
  3345  00FAAD  6F                 	db	111	;'o'
  3346  00FAAE  74                 	db	116	;'t'
  3347  00FAAF  68                 	db	104	;'h'
  3348  00FAB0  20                 	db	32
  3349  00FAB1  63                 	db	99	;'c'
  3350  00FAB2  61                 	db	97	;'a'
  3351  00FAB3  70                 	db	112	;'p'
  3352  00FAB4  61                 	db	97	;'a'
  3353  00FAB5  62                 	db	98	;'b'
  3354  00FAB6  69                 	db	105	;'i'
  3355  00FAB7  6C                 	db	108	;'l'
  3356  00FAB8  69                 	db	105	;'i'
  3357  00FAB9  74                 	db	116	;'t'
  3358  00FABA  79                 	db	121	;'y'
  3359  00FABB  00                 	db	0
  3360  00FABC                     STR_14:
  3361  00FABC  42                 	db	66	;'B'
  3362  00FABD  54                 	db	84	;'T'
  3363  00FABE  4E                 	db	78	;'N'
  3364  00FABF  61                 	db	97	;'a'
  3365  00FAC0  6D                 	db	109	;'m'
  3366  00FAC1  65                 	db	101	;'e'
  3367  00FAC2  3D                 	db	61	;'='
  3368  00FAC3  48                 	db	72	;'H'
  3369  00FAC4  6F                 	db	111	;'o'
  3370  00FAC5  6D                 	db	109	;'m'
  3371  00FAC6  65                 	db	101	;'e'
  3372  00FAC7  20                 	db	32
  3373  00FAC8  41                 	db	65	;'A'
  3374  00FAC9  75                 	db	117	;'u'
  3375  00FACA  74                 	db	116	;'t'
  3376  00FACB  6F                 	db	111	;'o'
  3377  00FACC  6D                 	db	109	;'m'
  3378  00FACD  61                 	db	97	;'a'
  3379  00FACE  74                 	db	116	;'t'
  3380  00FACF  69                 	db	105	;'i'
  3381  00FAD0  6F                 	db	111	;'o'
  3382  00FAD1  6E                 	db	110	;'n'
  3383  00FAD2  20                 	db	32
  3384  00FAD3  25                 	db	37
  3385  00FAD4  6C                 	db	108	;'l'
  3386  00FAD5  75                 	db	117	;'u'
  3387  00FAD6  0D                 	db	13
  3388  00FAD7  00                 	db	0
  3389  00FAD8                     STR_115:
  3390  00FAD8  44                 	db	68	;'D'
  3391  00FAD9  69                 	db	105	;'i'
  3392  00FADA  73                 	db	115	;'s'
  3393  00FADB  70                 	db	112	;'p'
  3394  00FADC  6C                 	db	108	;'l'
  3395  00FADD  61                 	db	97	;'a'
  3396  00FADE  79                 	db	121	;'y'
  3397  00FADF  73                 	db	115	;'s'
  3398  00FAE0  20                 	db	32
  3399  00FAE1  74                 	db	116	;'t'
  3400  00FAE2  68                 	db	104	;'h'
  3401  00FAE3  65                 	db	101	;'e'
  3402  00FAE4  20                 	db	32
  3403  00FAE5  73                 	db	115	;'s'
  3404  00FAE6  75                 	db	117	;'u'
  3405  00FAE7  70                 	db	112	;'p'
  3406  00FAE8  70                 	db	112	;'p'
  3407  00FAE9  6C                 	db	108	;'l'
  3408  00FAEA  79                 	db	121	;'y'
  3409  00FAEB  20                 	db	32
  3410  00FAEC  76                 	db	118	;'v'
  3411  00FAED  6F                 	db	111	;'o'
  3412  00FAEE  6C                 	db	108	;'l'
  3413  00FAEF  74                 	db	116	;'t'
  3414  00FAF0  61                 	db	97	;'a'
  3415  00FAF1  67                 	db	103	;'g'
  3416  00FAF2  65                 	db	101	;'e'
  3417  00FAF3  00                 	db	0
  3418  00FAF4                     STR_162:
  3419  00FAF4  50                 	db	80	;'P'
  3420  00FAF5  72                 	db	114	;'r'
  3421  00FAF6  65                 	db	101	;'e'
  3422  00FAF7  73                 	db	115	;'s'
  3423  00FAF8  73                 	db	115	;'s'
  3424  00FAF9  20                 	db	32
  3425  00FAFA  52                 	db	82	;'R'
  3426  00FAFB  65                 	db	101	;'e'
  3427  00FAFC  6D                 	db	109	;'m'
  3428  00FAFD  6F                 	db	111	;'o'
  3429  00FAFE  74                 	db	116	;'t'
  3430  00FAFF  65                 	db	101	;'e'
  3431  00FB00  20                 	db	32
  3432  00FB01  43                 	db	67	;'C'
  3433  00FB02  6F                 	db	111	;'o'
  3434  00FB03  6E                 	db	110	;'n'
  3435  00FB04  74                 	db	116	;'t'
  3436  00FB05  72                 	db	114	;'r'
  3437  00FB06  6F                 	db	111	;'o'
  3438  00FB07  6C                 	db	108	;'l'
  3439  00FB08  20                 	db	32
  3440  00FB09  62                 	db	98	;'b'
  3441  00FB0A  75                 	db	117	;'u'
  3442  00FB0B  74                 	db	116	;'t'
  3443  00FB0C  74                 	db	116	;'t'
  3444  00FB0D  6F                 	db	111	;'o'
  3445  00FB0E  6E                 	db	110	;'n'
  3446  00FB0F  00                 	db	0
  3447  00FB10                     STR_87:
  3448  00FB10  53                 	db	83	;'S'
  3449  00FB11  65                 	db	101	;'e'
  3450  00FB12  72                 	db	114	;'r'
  3451  00FB13  69                 	db	105	;'i'
  3452  00FB14  61                 	db	97	;'a'
  3453  00FB15  6C                 	db	108	;'l'
  3454  00FB16  20                 	db	32
  3455  00FB17  4E                 	db	78	;'N'
  3456  00FB18  75                 	db	117	;'u'
  3457  00FB19  6D                 	db	109	;'m'
  3458  00FB1A  62                 	db	98	;'b'
  3459  00FB1B  65                 	db	101	;'e'
  3460  00FB1C  72                 	db	114	;'r'
  3461  00FB1D  20                 	db	32
  3462  00FB1E  69                 	db	105	;'i'
  3463  00FB1F  73                 	db	115	;'s'
  3464  00FB20  20                 	db	32
  3465  00FB21  6E                 	db	110	;'n'
  3466  00FB22  6F                 	db	111	;'o'
  3467  00FB23  77                 	db	119	;'w'
  3468  00FB24  3A                 	db	58	;':'
  3469  00FB25  20                 	db	32
  3470  00FB26  25                 	db	37
  3471  00FB27  6C                 	db	108	;'l'
  3472  00FB28  75                 	db	117	;'u'
  3473  00FB29  20                 	db	32
  3474  00FB2A  00                 	db	0
  3475  00FB2B                     STR_99:
  3476  00FB2B  54                 	db	84	;'T'
  3477  00FB2C  72                 	db	114	;'r'
  3478  00FB2D  61                 	db	97	;'a'
  3479  00FB2E  6E                 	db	110	;'n'
  3480  00FB2F  73                 	db	115	;'s'
  3481  00FB30  6D                 	db	109	;'m'
  3482  00FB31  69                 	db	105	;'i'
  3483  00FB32  74                 	db	116	;'t'
  3484  00FB33  74                 	db	116	;'t'
  3485  00FB34  69                 	db	105	;'i'
  3486  00FB35  6E                 	db	110	;'n'
  3487  00FB36  67                 	db	103	;'g'
  3488  00FB37  20                 	db	32
  3489  00FB38  46                 	db	70	;'F'
  3490  00FB39  72                 	db	114	;'r'
  3491  00FB3A  65                 	db	101	;'e'
  3492  00FB3B  71                 	db	113	;'q'
  3493  00FB3C  75                 	db	117	;'u'
  3494  00FB3D  65                 	db	101	;'e'
  3495  00FB3E  6E                 	db	110	;'n'
  3496  00FB3F  63                 	db	99	;'c'
  3497  00FB40  79                 	db	121	;'y'
  3498  00FB41  3A                 	db	58	;':'
  3499  00FB42  20                 	db	32
  3500  00FB43  25                 	db	37
  3501  00FB44  73                 	db	115	;'s'
  3502  00FB45  00                 	db	0
  3503  00FB46                     STR_161:
  3504  00FB46  45                 	db	69	;'E'
  3505  00FB47  6E                 	db	110	;'n'
  3506  00FB48  74                 	db	116	;'t'
  3507  00FB49  65                 	db	101	;'e'
  3508  00FB4A  72                 	db	114	;'r'
  3509  00FB4B  20                 	db	32
  3510  00FB4C  3F                 	db	63	;'?'
  3511  00FB4D  3F                 	db	63	;'?'
  3512  00FB4E  3F                 	db	63	;'?'
  3513  00FB4F  20                 	db	32
  3514  00FB50  66                 	db	102	;'f'
  3515  00FB51  6F                 	db	111	;'o'
  3516  00FB52  72                 	db	114	;'r'
  3517  00FB53  20                 	db	32
  3518  00FB54  43                 	db	67	;'C'
  3519  00FB55  6F                 	db	111	;'o'
  3520  00FB56  6D                 	db	109	;'m'
  3521  00FB57  6D                 	db	109	;'m'
  3522  00FB58  61                 	db	97	;'a'
  3523  00FB59  6E                 	db	110	;'n'
  3524  00FB5A  64                 	db	100	;'d'
  3525  00FB5B  20                 	db	32
  3526  00FB5C  4D                 	db	77	;'M'
  3527  00FB5D  65                 	db	101	;'e'
  3528  00FB5E  6E                 	db	110	;'n'
  3529  00FB5F  75                 	db	117	;'u'
  3530  00FB60  00                 	db	0
  3531  00FB61                     STR_118:
  3532  00FB61  54                 	db	84	;'T'
  3533  00FB62  72                 	db	114	;'r'
  3534  00FB63  61                 	db	97	;'a'
  3535  00FB64  6E                 	db	110	;'n'
  3536  00FB65  73                 	db	115	;'s'
  3537  00FB66  6D                 	db	109	;'m'
  3538  00FB67  69                 	db	105	;'i'
  3539  00FB68  74                 	db	116	;'t'
  3540  00FB69  73                 	db	115	;'s'
  3541  00FB6A  20                 	db	32
  3542  00FB6B  73                 	db	115	;'s'
  3543  00FB6C  61                 	db	97	;'a'
  3544  00FB6D  76                 	db	118	;'v'
  3545  00FB6E  65                 	db	101	;'e'
  3546  00FB6F  64                 	db	100	;'d'
  3547  00FB70  20                 	db	32
  3548  00FB71  4E                 	db	78	;'N'
  3549  00FB72  45                 	db	69	;'E'
  3550  00FB73  43                 	db	67	;'C'
  3551  00FB74  20                 	db	32
  3552  00FB75  63                 	db	99	;'c'
  3553  00FB76  6F                 	db	111	;'o'
  3554  00FB77  64                 	db	100	;'d'
  3555  00FB78  65                 	db	101	;'e'
  3556  00FB79  00                 	db	0
  3557  00FB7A                     STR_7:
  3558  00FB7A  53                 	db	83	;'S'
  3559  00FB7B  4E                 	db	78	;'N'
  3560  00FB7C  2C                 	db	44
  3561  00FB7D  48                 	db	72	;'H'
  3562  00FB7E  6F                 	db	111	;'o'
  3563  00FB7F  6D                 	db	109	;'m'
  3564  00FB80  65                 	db	101	;'e'
  3565  00FB81  20                 	db	32
  3566  00FB82  41                 	db	65	;'A'
  3567  00FB83  75                 	db	117	;'u'
  3568  00FB84  74                 	db	116	;'t'
  3569  00FB85  6F                 	db	111	;'o'
  3570  00FB86  6D                 	db	109	;'m'
  3571  00FB87  61                 	db	97	;'a'
  3572  00FB88  74                 	db	116	;'t'
  3573  00FB89  69                 	db	105	;'i'
  3574  00FB8A  6F                 	db	111	;'o'
  3575  00FB8B  6E                 	db	110	;'n'
  3576  00FB8C  20                 	db	32
  3577  00FB8D  25                 	db	37
  3578  00FB8E  6C                 	db	108	;'l'
  3579  00FB8F  75                 	db	117	;'u'
  3580  00FB90  0D                 	db	13
  3581  00FB91  00                 	db	0
  3582  00FB92                     STR_91:
  3583  00FB92  54                 	db	84	;'T'
  3584  00FB93  68                 	db	104	;'h'
  3585  00FB94  65                 	db	101	;'e'
  3586  00FB95  20                 	db	32
  3587  00FB96  27                 	db	39
  3588  00FB97  43                 	db	67	;'C'
  3589  00FB98  6F                 	db	111	;'o'
  3590  00FB99  64                 	db	100	;'d'
  3591  00FB9A  65                 	db	101	;'e'
  3592  00FB9B  27                 	db	39
  3593  00FB9C  20                 	db	32
  3594  00FB9D  77                 	db	119	;'w'
  3595  00FB9E  61                 	db	97	;'a'
  3596  00FB9F  73                 	db	115	;'s'
  3597  00FBA0  20                 	db	32
  3598  00FBA1  77                 	db	119	;'w'
  3599  00FBA2  72                 	db	114	;'r'
  3600  00FBA3  6F                 	db	111	;'o'
  3601  00FBA4  6E                 	db	110	;'n'
  3602  00FBA5  67                 	db	103	;'g'
  3603  00FBA6  21                 	db	33
  3604  00FBA7  21                 	db	33
  3605  00FBA8  21                 	db	33
  3606  00FBA9  00                 	db	0
  3607  00FBAA                     STR_84:
  3608  00FBAA  45                 	db	69	;'E'
  3609  00FBAB  6E                 	db	110	;'n'
  3610  00FBAC  74                 	db	116	;'t'
  3611  00FBAD  65                 	db	101	;'e'
  3612  00FBAE  72                 	db	114	;'r'
  3613  00FBAF  20                 	db	32
  3614  00FBB0  6E                 	db	110	;'n'
  3615  00FBB1  65                 	db	101	;'e'
  3616  00FBB2  77                 	db	119	;'w'
  3617  00FBB3  20                 	db	32
  3618  00FBB4  53                 	db	83	;'S'
  3619  00FBB5  65                 	db	101	;'e'
  3620  00FBB6  72                 	db	114	;'r'
  3621  00FBB7  69                 	db	105	;'i'
  3622  00FBB8  61                 	db	97	;'a'
  3623  00FBB9  6C                 	db	108	;'l'
  3624  00FBBA  20                 	db	32
  3625  00FBBB  4E                 	db	78	;'N'
  3626  00FBBC  75                 	db	117	;'u'
  3627  00FBBD  6D                 	db	109	;'m'
  3628  00FBBE  62                 	db	98	;'b'
  3629  00FBBF  65                 	db	101	;'e'
  3630  00FBC0  72                 	db	114	;'r'
  3631  00FBC1  00                 	db	0
  3632  00FBC2                     STR_120:
  3633  00FBC2  41                 	db	65	;'A'
  3634  00FBC3  6C                 	db	108	;'l'
  3635  00FBC4  6C                 	db	108	;'l'
  3636  00FBC5  6F                 	db	111	;'o'
  3637  00FBC6  77                 	db	119	;'w'
  3638  00FBC7  73                 	db	115	;'s'
  3639  00FBC8  20                 	db	32
  3640  00FBC9  73                 	db	115	;'s'
  3641  00FBCA  61                 	db	97	;'a'
  3642  00FBCB  76                 	db	118	;'v'
  3643  00FBCC  69                 	db	105	;'i'
  3644  00FBCD  6E                 	db	110	;'n'
  3645  00FBCE  67                 	db	103	;'g'
  3646  00FBCF  20                 	db	32
  3647  00FBD0  4E                 	db	78	;'N'
  3648  00FBD1  45                 	db	69	;'E'
  3649  00FBD2  43                 	db	67	;'C'
  3650  00FBD3  20                 	db	32
  3651  00FBD4  63                 	db	99	;'c'
  3652  00FBD5  6F                 	db	111	;'o'
  3653  00FBD6  64                 	db	100	;'d'
  3654  00FBD7  65                 	db	101	;'e'
  3655  00FBD8  73                 	db	115	;'s'
  3656  00FBD9  00                 	db	0
  3657  00FBDA                     STR_26:
  3658  00FBDA  53                 	db	83	;'S'
  3659  00FBDB  65                 	db	101	;'e'
  3660  00FBDC  6E                 	db	110	;'n'
  3661  00FBDD  74                 	db	116	;'t'
  3662  00FBDE  20                 	db	32
  3663  00FBDF  4E                 	db	78	;'N'
  3664  00FBE0  45                 	db	69	;'E'
  3665  00FBE1  43                 	db	67	;'C'
  3666  00FBE2  20                 	db	32
  3667  00FBE3  63                 	db	99	;'c'
  3668  00FBE4  6F                 	db	111	;'o'
  3669  00FBE5  64                 	db	100	;'d'
  3670  00FBE6  65                 	db	101	;'e'
  3671  00FBE7  20                 	db	32
  3672  00FBE8  3D                 	db	61	;'='
  3673  00FBE9  20                 	db	32
  3674  00FBEA  30                 	db	48	;'0'
  3675  00FBEB  78                 	db	120	;'x'
  3676  00FBEC  25                 	db	37
  3677  00FBED  6C                 	db	108	;'l'
  3678  00FBEE  58                 	db	88	;'X'
  3679  00FBEF  20                 	db	32
  3680  00FBF0  00                 	db	0
  3681  00FBF1                     STR_97:
  3682  00FBF1  42                 	db	66	;'B'
  3683  00FBF2  6C                 	db	108	;'l'
  3684  00FBF3  75                 	db	117	;'u'
  3685  00FBF4  65                 	db	101	;'e'
  3686  00FBF5  74                 	db	116	;'t'
  3687  00FBF6  6F                 	db	111	;'o'
  3688  00FBF7  6F                 	db	111	;'o'
  3689  00FBF8  74                 	db	116	;'t'
  3690  00FBF9  68                 	db	104	;'h'
  3691  00FBFA  20                 	db	32
  3692  00FBFB  66                 	db	102	;'f'
  3693  00FBFC  69                 	db	105	;'i'
  3694  00FBFD  72                 	db	114	;'r'
  3695  00FBFE  6D                 	db	109	;'m'
  3696  00FBFF  77                 	db	119	;'w'
  3697  00FC00  61                 	db	97	;'a'
  3698  00FC01  72                 	db	114	;'r'
  3699  00FC02  65                 	db	101	;'e'
  3700  00FC03  20                 	db	32
  3701  00FC04  69                 	db	105	;'i'
  3702  00FC05  73                 	db	115	;'s'
  3703  00FC06  3A                 	db	58	;':'
  3704  00FC07  00                 	db	0
  3705  00FC08                     STR_152:
  3706  00FC08  52                 	db	82	;'R'
  3707  00FC09  46                 	db	70	;'F'
  3708  00FC0A  4B                 	db	75	;'K'
  3709  00FC0B  33                 	db	51	;'3'
  3710  00FC0C  30                 	db	48	;'0'
  3711  00FC0D  36                 	db	54	;'6'
  3712  00FC0E  4C                 	db	76	;'L'
  3713  00FC0F  43                 	db	67	;'C'
  3714  00FC10  20                 	db	32
  3715  00FC11  43                 	db	67	;'C'
  3716  00FC12  68                 	db	104	;'h'
  3717  00FC13  61                 	db	97	;'a'
  3718  00FC14  6E                 	db	110	;'n'
  3719  00FC15  6E                 	db	110	;'n'
  3720  00FC16  65                 	db	101	;'e'
  3721  00FC17  6C                 	db	108	;'l'
  3722  00FC18  20                 	db	32
  3723  00FC19  42                 	db	66	;'B'
  3724  00FC1A  20                 	db	32
  3725  00FC1B  4F                 	db	79	;'O'
  3726  00FC1C  46                 	db	70	;'F'
  3727  00FC1D  46                 	db	70	;'F'
  3728  00FC1E  00                 	db	0
  3729  00FC1F                     STR_3:
  3730  00FC1F  52                 	db	82	;'R'
  3731  00FC20  45                 	db	69	;'E'
  3732  00FC21  53                 	db	83	;'S'
  3733  00FC22  45                 	db	69	;'E'
  3734  00FC23  54                 	db	84	;'T'
  3735  00FC24  20                 	db	32
  3736  00FC25  74                 	db	116	;'t'
  3737  00FC26  6F                 	db	111	;'o'
  3738  00FC27  20                 	db	32
  3739  00FC28  72                 	db	114	;'r'
  3740  00FC29  65                 	db	101	;'e'
  3741  00FC2A  61                 	db	97	;'a'
  3742  00FC2B  64                 	db	100	;'d'
  3743  00FC2C  20                 	db	32
  3744  00FC2D  76                 	db	118	;'v'
  3745  00FC2E  65                 	db	101	;'e'
  3746  00FC2F  72                 	db	114	;'r'
  3747  00FC30  73                 	db	115	;'s'
  3748  00FC31  69                 	db	105	;'i'
  3749  00FC32  6F                 	db	111	;'o'
  3750  00FC33  6E                 	db	110	;'n'
  3751  00FC34  21                 	db	33
  3752  00FC35  00                 	db	0
  3753  00FC36                     STR_151:
  3754  00FC36  52                 	db	82	;'R'
  3755  00FC37  46                 	db	70	;'F'
  3756  00FC38  4B                 	db	75	;'K'
  3757  00FC39  33                 	db	51	;'3'
  3758  00FC3A  30                 	db	48	;'0'
  3759  00FC3B  36                 	db	54	;'6'
  3760  00FC3C  4C                 	db	76	;'L'
  3761  00FC3D  43                 	db	67	;'C'
  3762  00FC3E  20                 	db	32
  3763  00FC3F  43                 	db	67	;'C'
  3764  00FC40  68                 	db	104	;'h'
  3765  00FC41  61                 	db	97	;'a'
  3766  00FC42  6E                 	db	110	;'n'
  3767  00FC43  6E                 	db	110	;'n'
  3768  00FC44  65                 	db	101	;'e'
  3769  00FC45  6C                 	db	108	;'l'
  3770  00FC46  20                 	db	32
  3771  00FC47  42                 	db	66	;'B'
  3772  00FC48  20                 	db	32
  3773  00FC49  4F                 	db	79	;'O'
  3774  00FC4A  4E                 	db	78	;'N'
  3775  00FC4B  00                 	db	0
  3776  00FC4C                     STR_37:
  3777  00FC4C  4E                 	db	78	;'N'
  3778  00FC4D  45                 	db	69	;'E'
  3779  00FC4E  43                 	db	67	;'C'
  3780  00FC4F  20                 	db	32
  3781  00FC50  3D                 	db	61	;'='
  3782  00FC51  20                 	db	32
  3783  00FC52  61                 	db	97	;'a'
  3784  00FC53  64                 	db	100	;'d'
  3785  00FC54  64                 	db	100	;'d'
  3786  00FC55  72                 	db	114	;'r'
  3787  00FC56  65                 	db	101	;'e'
  3788  00FC57  73                 	db	115	;'s'
  3789  00FC58  73                 	db	115	;'s'
  3790  00FC59  2C                 	db	44
  3791  00FC5A  63                 	db	99	;'c'
  3792  00FC5B  6F                 	db	111	;'o'
  3793  00FC5C  6D                 	db	109	;'m'
  3794  00FC5D  6D                 	db	109	;'m'
  3795  00FC5E  61                 	db	97	;'a'
  3796  00FC5F  6E                 	db	110	;'n'
  3797  00FC60  64                 	db	100	;'d'
  3798  00FC61  00                 	db	0
  3799  00FC62                     STR_112:
  3800  00FC62  43                 	db	67	;'C'
  3801  00FC63  68                 	db	104	;'h'
  3802  00FC64  61                 	db	97	;'a'
  3803  00FC65  6E                 	db	110	;'n'
  3804  00FC66  67                 	db	103	;'g'
  3805  00FC67  65                 	db	101	;'e'
  3806  00FC68  73                 	db	115	;'s'
  3807  00FC69  20                 	db	32
  3808  00FC6A  53                 	db	83	;'S'
  3809  00FC6B  65                 	db	101	;'e'
  3810  00FC6C  72                 	db	114	;'r'
  3811  00FC6D  69                 	db	105	;'i'
  3812  00FC6E  61                 	db	97	;'a'
  3813  00FC6F  6C                 	db	108	;'l'
  3814  00FC70  20                 	db	32
  3815  00FC71  4E                 	db	78	;'N'
  3816  00FC72  75                 	db	117	;'u'
  3817  00FC73  6D                 	db	109	;'m'
  3818  00FC74  62                 	db	98	;'b'
  3819  00FC75  65                 	db	101	;'e'
  3820  00FC76  72                 	db	114	;'r'
  3821  00FC77  00                 	db	0
  3822  00FC78                     STR_25:
  3823  00FC78  4E                 	db	78	;'N'
  3824  00FC79  45                 	db	69	;'E'
  3825  00FC7A  43                 	db	67	;'C'
  3826  00FC7B  20                 	db	32
  3827  00FC7C  63                 	db	99	;'c'
  3828  00FC7D  6F                 	db	111	;'o'
  3829  00FC7E  6D                 	db	109	;'m'
  3830  00FC7F  6D                 	db	109	;'m'
  3831  00FC80  61                 	db	97	;'a'
  3832  00FC81  6E                 	db	110	;'n'
  3833  00FC82  64                 	db	100	;'d'
  3834  00FC83  3A                 	db	58	;':'
  3835  00FC84  20                 	db	32
  3836  00FC85  30                 	db	48	;'0'
  3837  00FC86  78                 	db	120	;'x'
  3838  00FC87  25                 	db	37
  3839  00FC88  30                 	db	48	;'0'
  3840  00FC89  32                 	db	50	;'2'
  3841  00FC8A  58                 	db	88	;'X'
  3842  00FC8B  20                 	db	32
  3843  00FC8C  00                 	db	0
  3844  00FC8D                     STR_24:
  3845  00FC8D  4E                 	db	78	;'N'
  3846  00FC8E  45                 	db	69	;'E'
  3847  00FC8F  43                 	db	67	;'C'
  3848  00FC90  20                 	db	32
  3849  00FC91  61                 	db	97	;'a'
  3850  00FC92  64                 	db	100	;'d'
  3851  00FC93  64                 	db	100	;'d'
  3852  00FC94  72                 	db	114	;'r'
  3853  00FC95  65                 	db	101	;'e'
  3854  00FC96  73                 	db	115	;'s'
  3855  00FC97  73                 	db	115	;'s'
  3856  00FC98  3A                 	db	58	;':'
  3857  00FC99  20                 	db	32
  3858  00FC9A  30                 	db	48	;'0'
  3859  00FC9B  78                 	db	120	;'x'
  3860  00FC9C  25                 	db	37
  3861  00FC9D  30                 	db	48	;'0'
  3862  00FC9E  32                 	db	50	;'2'
  3863  00FC9F  58                 	db	88	;'X'
  3864  00FCA0  20                 	db	32
  3865  00FCA1  00                 	db	0
  3866  00FCA2                     STR_44:
  3867  00FCA2  53                 	db	83	;'S'
  3868  00FCA3  65                 	db	101	;'e'
  3869  00FCA4  6E                 	db	110	;'n'
  3870  00FCA5  74                 	db	116	;'t'
  3871  00FCA6  20                 	db	32
  3872  00FCA7  4E                 	db	78	;'N'
  3873  00FCA8  45                 	db	69	;'E'
  3874  00FCA9  43                 	db	67	;'C'
  3875  00FCAA  20                 	db	32
  3876  00FCAB  63                 	db	99	;'c'
  3877  00FCAC  6F                 	db	111	;'o'
  3878  00FCAD  64                 	db	100	;'d'
  3879  00FCAE  65                 	db	101	;'e'
  3880  00FCAF  20                 	db	32
  3881  00FCB0  30                 	db	48	;'0'
  3882  00FCB1  78                 	db	120	;'x'
  3883  00FCB2  25                 	db	37
  3884  00FCB3  6C                 	db	108	;'l'
  3885  00FCB4  58                 	db	88	;'X'
  3886  00FCB5  20                 	db	32
  3887  00FCB6  00                 	db	0
  3888  00FCB7                     STR_113:
  3889  00FCB7  44                 	db	68	;'D'
  3890  00FCB8  69                 	db	105	;'i'
  3891  00FCB9  61                 	db	97	;'a'
  3892  00FCBA  67                 	db	103	;'g'
  3893  00FCBB  6E                 	db	110	;'n'
  3894  00FCBC  6F                 	db	111	;'o'
  3895  00FCBD  73                 	db	115	;'s'
  3896  00FCBE  74                 	db	116	;'t'
  3897  00FCBF  69                 	db	105	;'i'
  3898  00FCC0  63                 	db	99	;'c'
  3899  00FCC1  20                 	db	32
  3900  00FCC2  43                 	db	67	;'C'
  3901  00FCC3  6F                 	db	111	;'o'
  3902  00FCC4  6D                 	db	109	;'m'
  3903  00FCC5  6D                 	db	109	;'m'
  3904  00FCC6  61                 	db	97	;'a'
  3905  00FCC7  6E                 	db	110	;'n'
  3906  00FCC8  64                 	db	100	;'d'
  3907  00FCC9  73                 	db	115	;'s'
  3908  00FCCA  3A                 	db	58	;':'
  3909  00FCCB  00                 	db	0
  3910  00FCCC                     STR_95:
  3911  00FCCC  46                 	db	70	;'F'
  3912  00FCCD  69                 	db	105	;'i'
  3913  00FCCE  72                 	db	114	;'r'
  3914  00FCCF  6D                 	db	109	;'m'
  3915  00FCD0  77                 	db	119	;'w'
  3916  00FCD1  61                 	db	97	;'a'
  3917  00FCD2  72                 	db	114	;'r'
  3918  00FCD3  65                 	db	101	;'e'
  3919  00FCD4  20                 	db	32
  3920  00FCD5  56                 	db	86	;'V'
  3921  00FCD6  65                 	db	101	;'e'
  3922  00FCD7  72                 	db	114	;'r'
  3923  00FCD8  73                 	db	115	;'s'
  3924  00FCD9  69                 	db	105	;'i'
  3925  00FCDA  6F                 	db	111	;'o'
  3926  00FCDB  6E                 	db	110	;'n'
  3927  00FCDC  3A                 	db	58	;':'
  3928  00FCDD  20                 	db	32
  3929  00FCDE  25                 	db	37
  3930  00FCDF  73                 	db	115	;'s'
  3931  00FCE0  00                 	db	0
  3932  00FCE1                     STR_10:
  3933  00FCE1  53                 	db	83	;'S'
  3934  00FCE2  53                 	db	83	;'S'
  3935  00FCE3  2C                 	db	44
  3936  00FCE4  48                 	db	72	;'H'
  3937  00FCE5  6F                 	db	111	;'o'
  3938  00FCE6  6D                 	db	109	;'m'
  3939  00FCE7  65                 	db	101	;'e'
  3940  00FCE8  20                 	db	32
  3941  00FCE9  41                 	db	65	;'A'
  3942  00FCEA  75                 	db	117	;'u'
  3943  00FCEB  74                 	db	116	;'t'
  3944  00FCEC  6F                 	db	111	;'o'
  3945  00FCED  6D                 	db	109	;'m'
  3946  00FCEE  61                 	db	97	;'a'
  3947  00FCEF  74                 	db	116	;'t'
  3948  00FCF0  69                 	db	105	;'i'
  3949  00FCF1  6F                 	db	111	;'o'
  3950  00FCF2  6E                 	db	110	;'n'
  3951  00FCF3  0D                 	db	13
  3952  00FCF4  00                 	db	0
  3953  00FCF5                     STR_35:
  3954  00FCF5  4E                 	db	78	;'N'
  3955  00FCF6  45                 	db	69	;'E'
  3956  00FCF7  43                 	db	67	;'C'
  3957  00FCF8  20                 	db	32
  3958  00FCF9  3D                 	db	61	;'='
  3959  00FCFA  20                 	db	32
  3960  00FCFB  28                 	db	40
  3961  00FCFC  33                 	db	51	;'3'
  3962  00FCFD  32                 	db	50	;'2'
  3963  00FCFE  20                 	db	32
  3964  00FCFF  62                 	db	98	;'b'
  3965  00FD00  69                 	db	105	;'i'
  3966  00FD01  74                 	db	116	;'t'
  3967  00FD02  20                 	db	32
  3968  00FD03  63                 	db	99	;'c'
  3969  00FD04  6F                 	db	111	;'o'
  3970  00FD05  64                 	db	100	;'d'
  3971  00FD06  65                 	db	101	;'e'
  3972  00FD07  29                 	db	41
  3973  00FD08  00                 	db	0
  3974  00FD09                     STR_154:
  3975  00FD09  54                 	db	84	;'T'
  3976  00FD0A  52                 	db	82	;'R'
  3977  00FD0B  30                 	db	48	;'0'
  3978  00FD0C  30                 	db	48	;'0'
  3979  00FD0D  39                 	db	57	;'9'
  3980  00FD0E  20                 	db	32
  3981  00FD0F  43                 	db	67	;'C'
  3982  00FD10  68                 	db	104	;'h'
  3983  00FD11  61                 	db	97	;'a'
  3984  00FD12  6E                 	db	110	;'n'
  3985  00FD13  6E                 	db	110	;'n'
  3986  00FD14  65                 	db	101	;'e'
  3987  00FD15  6C                 	db	108	;'l'
  3988  00FD16  20                 	db	32
  3989  00FD17  44                 	db	68	;'D'
  3990  00FD18  20                 	db	32
  3991  00FD19  4F                 	db	79	;'O'
  3992  00FD1A  46                 	db	70	;'F'
  3993  00FD1B  46                 	db	70	;'F'
  3994  00FD1C  00                 	db	0
  3995  00FD1D                     STR_28:
  3996  00FD1D  73                 	db	115	;'s'
  3997  00FD1E  65                 	db	101	;'e'
  3998  00FD1F  6E                 	db	110	;'n'
  3999  00FD20  74                 	db	116	;'t'
  4000  00FD21  20                 	db	32
  4001  00FD22  4E                 	db	78	;'N'
  4002  00FD23  45                 	db	69	;'E'
  4003  00FD24  43                 	db	67	;'C'
  4004  00FD25  20                 	db	32
  4005  00FD26  63                 	db	99	;'c'
  4006  00FD27  6F                 	db	111	;'o'
  4007  00FD28  64                 	db	100	;'d'
  4008  00FD29  65                 	db	101	;'e'
  4009  00FD2A  20                 	db	32
  4010  00FD2B  30                 	db	48	;'0'
  4011  00FD2C  78                 	db	120	;'x'
  4012  00FD2D  25                 	db	37
  4013  00FD2E  6C                 	db	108	;'l'
  4014  00FD2F  58                 	db	88	;'X'
  4015  00FD30  00                 	db	0
  4016  00FD31                     STR_93:
  4017  00FD31  53                 	db	83	;'S'
  4018  00FD32  75                 	db	117	;'u'
  4019  00FD33  70                 	db	112	;'p'
  4020  00FD34  70                 	db	112	;'p'
  4021  00FD35  6C                 	db	108	;'l'
  4022  00FD36  79                 	db	121	;'y'
  4023  00FD37  20                 	db	32
  4024  00FD38  56                 	db	86	;'V'
  4025  00FD39  6F                 	db	111	;'o'
  4026  00FD3A  6C                 	db	108	;'l'
  4027  00FD3B  74                 	db	116	;'t'
  4028  00FD3C  61                 	db	97	;'a'
  4029  00FD3D  67                 	db	103	;'g'
  4030  00FD3E  65                 	db	101	;'e'
  4031  00FD3F  20                 	db	32
  4032  00FD40  3D                 	db	61	;'='
  4033  00FD41  20                 	db	32
  4034  00FD42  25                 	db	37
  4035  00FD43  66                 	db	102	;'f'
  4036  00FD44  00                 	db	0
  4037  00FD45                     STR_53:
  4038  00FD45  52                 	db	82	;'R'
  4039  00FD46  65                 	db	101	;'e'
  4040  00FD47  6D                 	db	109	;'m'
  4041  00FD48  6F                 	db	111	;'o'
  4042  00FD49  74                 	db	116	;'t'
  4043  00FD4A  65                 	db	101	;'e'
  4044  00FD4B  42                 	db	66	;'B'
  4045  00FD4C  75                 	db	117	;'u'
  4046  00FD4D  74                 	db	116	;'t'
  4047  00FD4E  74                 	db	116	;'t'
  4048  00FD4F  6F                 	db	111	;'o'
  4049  00FD50  6E                 	db	110	;'n'
  4050  00FD51  27                 	db	39
  4051  00FD52  78                 	db	120	;'x'
  4052  00FD53  27                 	db	39
  4053  00FD54  20                 	db	32
  4054  00FD55  73                 	db	115	;'s'
  4055  00FD56  65                 	db	101	;'e'
  4056  00FD57  74                 	db	116	;'t'
  4057  00FD58  00                 	db	0
  4058  00FD59                     STR_148:
  4059  00FD59  52                 	db	82	;'R'
  4060  00FD5A  46                 	db	70	;'F'
  4061  00FD5B  4B                 	db	75	;'K'
  4062  00FD5C  31                 	db	49	;'1'
  4063  00FD5D  30                 	db	48	;'0'
  4064  00FD5E  30                 	db	48	;'0'
  4065  00FD5F  4C                 	db	76	;'L'
  4066  00FD60  43                 	db	67	;'C'
  4067  00FD61  20                 	db	32
  4068  00FD62  43                 	db	67	;'C'
  4069  00FD63  68                 	db	104	;'h'
  4070  00FD64  61                 	db	97	;'a'
  4071  00FD65  6E                 	db	110	;'n'
  4072  00FD66  6E                 	db	110	;'n'
  4073  00FD67  65                 	db	101	;'e'
  4074  00FD68  6C                 	db	108	;'l'
  4075  00FD69  20                 	db	32
  4076  00FD6A  44                 	db	68	;'D'
  4077  00FD6B  00                 	db	0
  4078  00FD6C                     STR_149:
  4079  00FD6C  52                 	db	82	;'R'
  4080  00FD6D  46                 	db	70	;'F'
  4081  00FD6E  4B                 	db	75	;'K'
  4082  00FD6F  31                 	db	49	;'1'
  4083  00FD70  30                 	db	48	;'0'
  4084  00FD71  30                 	db	48	;'0'
  4085  00FD72  4C                 	db	76	;'L'
  4086  00FD73  43                 	db	67	;'C'
  4087  00FD74  20                 	db	32
  4088  00FD75  43                 	db	67	;'C'
  4089  00FD76  68                 	db	104	;'h'
  4090  00FD77  61                 	db	97	;'a'
  4091  00FD78  6E                 	db	110	;'n'
  4092  00FD79  6E                 	db	110	;'n'
  4093  00FD7A  65                 	db	101	;'e'
  4094  00FD7B  6C                 	db	108	;'l'
  4095  00FD7C  20                 	db	32
  4096  00FD7D  45                 	db	69	;'E'
  4097  00FD7E  00                 	db	0
  4098  00FD7F                     STR_150:
  4099  00FD7F  52                 	db	82	;'R'
  4100  00FD80  46                 	db	70	;'F'
  4101  00FD81  4B                 	db	75	;'K'
  4102  00FD82  31                 	db	49	;'1'
  4103  00FD83  30                 	db	48	;'0'
  4104  00FD84  30                 	db	48	;'0'
  4105  00FD85  4C                 	db	76	;'L'
  4106  00FD86  43                 	db	67	;'C'
  4107  00FD87  20                 	db	32
  4108  00FD88  43                 	db	67	;'C'
  4109  00FD89  68                 	db	104	;'h'
  4110  00FD8A  61                 	db	97	;'a'
  4111  00FD8B  6E                 	db	110	;'n'
  4112  00FD8C  6E                 	db	110	;'n'
  4113  00FD8D  65                 	db	101	;'e'
  4114  00FD8E  6C                 	db	108	;'l'
  4115  00FD8F  20                 	db	32
  4116  00FD90  46                 	db	70	;'F'
  4117  00FD91  00                 	db	0
  4118  00FD92                     STR_153:
  4119  00FD92  54                 	db	84	;'T'
  4120  00FD93  52                 	db	82	;'R'
  4121  00FD94  30                 	db	48	;'0'
  4122  00FD95  30                 	db	48	;'0'
  4123  00FD96  39                 	db	57	;'9'
  4124  00FD97  20                 	db	32
  4125  00FD98  43                 	db	67	;'C'
  4126  00FD99  68                 	db	104	;'h'
  4127  00FD9A  61                 	db	97	;'a'
  4128  00FD9B  6E                 	db	110	;'n'
  4129  00FD9C  6E                 	db	110	;'n'
  4130  00FD9D  65                 	db	101	;'e'
  4131  00FD9E  6C                 	db	108	;'l'
  4132  00FD9F  20                 	db	32
  4133  00FDA0  44                 	db	68	;'D'
  4134  00FDA1  20                 	db	32
  4135  00FDA2  4F                 	db	79	;'O'
  4136  00FDA3  4E                 	db	78	;'N'
  4137  00FDA4  00                 	db	0
  4138  00FDA5                     STR_119:
  4139  00FDA5  52                 	db	82	;'R'
  4140  00FDA6  65                 	db	101	;'e'
  4141  00FDA7  6D                 	db	109	;'m'
  4142  00FDA8  6F                 	db	111	;'o'
  4143  00FDA9  74                 	db	116	;'t'
  4144  00FDAA  65                 	db	101	;'e'
  4145  00FDAB  42                 	db	66	;'B'
  4146  00FDAC  75                 	db	117	;'u'
  4147  00FDAD  74                 	db	116	;'t'
  4148  00FDAE  74                 	db	116	;'t'
  4149  00FDAF  6F                 	db	111	;'o'
  4150  00FDB0  6E                 	db	110	;'n'
  4151  00FDB1  25                 	db	37
  4152  00FDB2  64                 	db	100	;'d'
  4153  00FDB3  20                 	db	32
  4154  00FDB4  73                 	db	115	;'s'
  4155  00FDB5  65                 	db	101	;'e'
  4156  00FDB6  74                 	db	116	;'t'
  4157  00FDB7  00                 	db	0
  4158  00FDB8                     STR_101:
  4159  00FDB8  53                 	db	83	;'S'
  4160  00FDB9  65                 	db	101	;'e'
  4161  00FDBA  72                 	db	114	;'r'
  4162  00FDBB  69                 	db	105	;'i'
  4163  00FDBC  61                 	db	97	;'a'
  4164  00FDBD  6C                 	db	108	;'l'
  4165  00FDBE  20                 	db	32
  4166  00FDBF  4E                 	db	78	;'N'
  4167  00FDC0  75                 	db	117	;'u'
  4168  00FDC1  6D                 	db	109	;'m'
  4169  00FDC2  62                 	db	98	;'b'
  4170  00FDC3  65                 	db	101	;'e'
  4171  00FDC4  72                 	db	114	;'r'
  4172  00FDC5  3A                 	db	58	;':'
  4173  00FDC6  20                 	db	32
  4174  00FDC7  25                 	db	37
  4175  00FDC8  6C                 	db	108	;'l'
  4176  00FDC9  75                 	db	117	;'u'
  4177  00FDCA  00                 	db	0
  4178  00FDCB                     STR_39:
  4179  00FDCB  4E                 	db	78	;'N'
  4180  00FDCC  45                 	db	69	;'E'
  4181  00FDCD  43                 	db	67	;'C'
  4182  00FDCE  20                 	db	32
  4183  00FDCF  3D                 	db	61	;'='
  4184  00FDD0  20                 	db	32
  4185  00FDD1  30                 	db	48	;'0'
  4186  00FDD2  78                 	db	120	;'x'
  4187  00FDD3  31                 	db	49	;'1'
  4188  00FDD4  43                 	db	67	;'C'
  4189  00FDD5  45                 	db	69	;'E'
  4190  00FDD6  33                 	db	51	;'3'
  4191  00FDD7  35                 	db	53	;'5'
  4192  00FDD8  30                 	db	48	;'0'
  4193  00FDD9  41                 	db	65	;'A'
  4194  00FDDA  46                 	db	70	;'F'
  4195  00FDDB  20                 	db	32
  4196  00FDDC  00                 	db	0
  4197  00FDDD                     STR_56:
  4198  00FDDD  52                 	db	82	;'R'
  4199  00FDDE  65                 	db	101	;'e'
  4200  00FDDF  6D                 	db	109	;'m'
  4201  00FDE0  6F                 	db	111	;'o'
  4202  00FDE1  74                 	db	116	;'t'
  4203  00FDE2  65                 	db	101	;'e'
  4204  00FDE3  42                 	db	66	;'B'
  4205  00FDE4  75                 	db	117	;'u'
  4206  00FDE5  74                 	db	116	;'t'
  4207  00FDE6  74                 	db	116	;'t'
  4208  00FDE7  6F                 	db	111	;'o'
  4209  00FDE8  6E                 	db	110	;'n'
  4210  00FDE9  31                 	db	49	;'1'
  4211  00FDEA  20                 	db	32
  4212  00FDEB  73                 	db	115	;'s'
  4213  00FDEC  65                 	db	101	;'e'
  4214  00FDED  74                 	db	116	;'t'
  4215  00FDEE  00                 	db	0
  4216  00FDEF                     STR_78:
  4217  00FDEF  53                 	db	83	;'S'
  4218  00FDF0  79                 	db	121	;'y'
  4219  00FDF1  73                 	db	115	;'s'
  4220  00FDF2  74                 	db	116	;'t'
  4221  00FDF3  65                 	db	101	;'e'
  4222  00FDF4  6D                 	db	109	;'m'
  4223  00FDF5  20                 	db	32
  4224  00FDF6  77                 	db	119	;'w'
  4225  00FDF7  69                 	db	105	;'i'
  4226  00FDF8  6C                 	db	108	;'l'
  4227  00FDF9  6C                 	db	108	;'l'
  4228  00FDFA  20                 	db	32
  4229  00FDFB  72                 	db	114	;'r'
  4230  00FDFC  65                 	db	101	;'e'
  4231  00FDFD  73                 	db	115	;'s'
  4232  00FDFE  65                 	db	101	;'e'
  4233  00FDFF  74                 	db	116	;'t'
  4234  00FE00  00                 	db	0
  4235  00FE01                     STR_165:
  4236  00FE01  30                 	db	48	;'0'
  4237  00FE02  31                 	db	49	;'1'
  4238  00FE03  32                 	db	50	;'2'
  4239  00FE04  33                 	db	51	;'3'
  4240  00FE05  34                 	db	52	;'4'
  4241  00FE06  35                 	db	53	;'5'
  4242  00FE07  36                 	db	54	;'6'
  4243  00FE08  37                 	db	55	;'7'
  4244  00FE09  38                 	db	56	;'8'
  4245  00FE0A  39                 	db	57	;'9'
  4246  00FE0B  41                 	db	65	;'A'
  4247  00FE0C  42                 	db	66	;'B'
  4248  00FE0D  43                 	db	67	;'C'
  4249  00FE0E  44                 	db	68	;'D'
  4250  00FE0F  45                 	db	69	;'E'
  4251  00FE10  46                 	db	70	;'F'
  4252  00FE11  00                 	db	0
  4253  00FE12                     STR_104:
  4254  00FE12  53                 	db	83	;'S'
  4255  00FE13  79                 	db	121	;'y'
  4256  00FE14  73                 	db	115	;'s'
  4257  00FE15  74                 	db	116	;'t'
  4258  00FE16  65                 	db	101	;'e'
  4259  00FE17  6D                 	db	109	;'m'
  4260  00FE18  20                 	db	32
  4261  00FE19  63                 	db	99	;'c'
  4262  00FE1A  6F                 	db	111	;'o'
  4263  00FE1B  6D                 	db	109	;'m'
  4264  00FE1C  6D                 	db	109	;'m'
  4265  00FE1D  61                 	db	97	;'a'
  4266  00FE1E  6E                 	db	110	;'n'
  4267  00FE1F  64                 	db	100	;'d'
  4268  00FE20  73                 	db	115	;'s'
  4269  00FE21  3A                 	db	58	;':'
  4270  00FE22  00                 	db	0
  4271  00FE23                     STR_41:
  4272  00FE23  4E                 	db	78	;'N'
  4273  00FE24  45                 	db	69	;'E'
  4274  00FE25  43                 	db	67	;'C'
  4275  00FE26  20                 	db	32
  4276  00FE27  3D                 	db	61	;'='
  4277  00FE28  20                 	db	32
  4278  00FE29  30                 	db	48	;'0'
  4279  00FE2A  78                 	db	120	;'x'
  4280  00FE2B  33                 	db	51	;'3'
  4281  00FE2C  38                 	db	56	;'8'
  4282  00FE2D  2C                 	db	44
  4283  00FE2E  20                 	db	32
  4284  00FE2F  30                 	db	48	;'0'
  4285  00FE30  78                 	db	120	;'x'
  4286  00FE31  30                 	db	48	;'0'
  4287  00FE32  41                 	db	65	;'A'
  4288  00FE33  00                 	db	0
  4289  00FE34                     STR_52:
  4290  00FE34  52                 	db	82	;'R'
  4291  00FE35  65                 	db	101	;'e'
  4292  00FE36  6D                 	db	109	;'m'
  4293  00FE37  6F                 	db	111	;'o'
  4294  00FE38  74                 	db	116	;'t'
  4295  00FE39  65                 	db	101	;'e'
  4296  00FE3A  42                 	db	66	;'B'
  4297  00FE3B  75                 	db	117	;'u'
  4298  00FE3C  74                 	db	116	;'t'
  4299  00FE3D  74                 	db	116	;'t'
  4300  00FE3E  6F                 	db	111	;'o'
  4301  00FE3F  6E                 	db	110	;'n'
  4302  00FE40  27                 	db	39
  4303  00FE41  78                 	db	120	;'x'
  4304  00FE42  27                 	db	39
  4305  00FE43  00                 	db	0
  4306  00FE44                     STR_98:
  4307  00FE44  50                 	db	80	;'P'
  4308  00FE45  43                 	db	67	;'C'
  4309  00FE46  42                 	db	66	;'B'
  4310  00FE47  20                 	db	32
  4311  00FE48  56                 	db	86	;'V'
  4312  00FE49  65                 	db	101	;'e'
  4313  00FE4A  72                 	db	114	;'r'
  4314  00FE4B  73                 	db	115	;'s'
  4315  00FE4C  69                 	db	105	;'i'
  4316  00FE4D  6F                 	db	111	;'o'
  4317  00FE4E  6E                 	db	110	;'n'
  4318  00FE4F  3A                 	db	58	;':'
  4319  00FE50  20                 	db	32
  4320  00FE51  25                 	db	37
  4321  00FE52  73                 	db	115	;'s'
  4322  00FE53  00                 	db	0
  4323  00FE54                     STR_1:
  4324  00FE54  42                 	db	66	;'B'
  4325  00FE55  75                 	db	117	;'u'
  4326  00FE56  66                 	db	102	;'f'
  4327  00FE57  66                 	db	102	;'f'
  4328  00FE58  65                 	db	101	;'e'
  4329  00FE59  72                 	db	114	;'r'
  4330  00FE5A  20                 	db	32
  4331  00FE5B  4F                 	db	79	;'O'
  4332  00FE5C  76                 	db	118	;'v'
  4333  00FE5D  65                 	db	101	;'e'
  4334  00FE5E  72                 	db	114	;'r'
  4335  00FE5F  66                 	db	102	;'f'
  4336  00FE60  6C                 	db	108	;'l'
  4337  00FE61  6F                 	db	111	;'o'
  4338  00FE62  77                 	db	119	;'w'
  4339  00FE63  00                 	db	0
  4340  00FE64                     STR_117:
  4341  00FE64  52                 	db	82	;'R'
  4342  00FE65  65                 	db	101	;'e'
  4343  00FE66  6D                 	db	109	;'m'
  4344  00FE67  6F                 	db	111	;'o'
  4345  00FE68  74                 	db	116	;'t'
  4346  00FE69  65                 	db	101	;'e'
  4347  00FE6A  42                 	db	66	;'B'
  4348  00FE6B  75                 	db	117	;'u'
  4349  00FE6C  74                 	db	116	;'t'
  4350  00FE6D  74                 	db	116	;'t'
  4351  00FE6E  6F                 	db	111	;'o'
  4352  00FE6F  6E                 	db	110	;'n'
  4353  00FE70  25                 	db	37
  4354  00FE71  64                 	db	100	;'d'
  4355  00FE72  00                 	db	0
  4356  00FE73                     STR_2:
  4357  00FE73  53                 	db	83	;'S'
  4358  00FE74  79                 	db	121	;'y'
  4359  00FE75  73                 	db	115	;'s'
  4360  00FE76  74                 	db	116	;'t'
  4361  00FE77  65                 	db	101	;'e'
  4362  00FE78  6D                 	db	109	;'m'
  4363  00FE79  20                 	db	32
  4364  00FE7A  6D                 	db	109	;'m'
  4365  00FE7B  75                 	db	117	;'u'
  4366  00FE7C  73                 	db	115	;'s'
  4367  00FE7D  74                 	db	116	;'t'
  4368  00FE7E  20                 	db	32
  4369  00FE7F  62                 	db	98	;'b'
  4370  00FE80  65                 	db	101	;'e'
  4371  00FE81  00                 	db	0
  4372  00FE82                     STR_55:
  4373  00FE82  52                 	db	82	;'R'
  4374  00FE83  65                 	db	101	;'e'
  4375  00FE84  6D                 	db	109	;'m'
  4376  00FE85  6F                 	db	111	;'o'
  4377  00FE86  74                 	db	116	;'t'
  4378  00FE87  65                 	db	101	;'e'
  4379  00FE88  42                 	db	66	;'B'
  4380  00FE89  75                 	db	117	;'u'
  4381  00FE8A  74                 	db	116	;'t'
  4382  00FE8B  74                 	db	116	;'t'
  4383  00FE8C  6F                 	db	111	;'o'
  4384  00FE8D  6E                 	db	110	;'n'
  4385  00FE8E  31                 	db	49	;'1'
  4386  00FE8F  00                 	db	0
  4387  00FE90                     STR_65:
  4388  00FE90  57                 	db	87	;'W'
  4389  00FE91  68                 	db	104	;'h'
  4390  00FE92  69                 	db	105	;'i'
  4391  00FE93  63                 	db	99	;'c'
  4392  00FE94  68                 	db	104	;'h'
  4393  00FE95  20                 	db	32
  4394  00FE96  64                 	db	100	;'d'
  4395  00FE97  65                 	db	101	;'e'
  4396  00FE98  76                 	db	118	;'v'
  4397  00FE99  69                 	db	105	;'i'
  4398  00FE9A  63                 	db	99	;'c'
  4399  00FE9B  65                 	db	101	;'e'
  4400  00FE9C  3F                 	db	63	;'?'
  4401  00FE9D  00                 	db	0
  4402  00FE9E                     STR_147:
  4403  00FE9E  52                 	db	82	;'R'
  4404  00FE9F  46                 	db	70	;'F'
  4405  00FEA0  20                 	db	32
  4406  00FEA1  63                 	db	99	;'c'
  4407  00FEA2  6F                 	db	111	;'o'
  4408  00FEA3  6D                 	db	109	;'m'
  4409  00FEA4  6D                 	db	109	;'m'
  4410  00FEA5  61                 	db	97	;'a'
  4411  00FEA6  6E                 	db	110	;'n'
  4412  00FEA7  64                 	db	100	;'d'
  4413  00FEA8  73                 	db	115	;'s'
  4414  00FEA9  3A                 	db	58	;':'
  4415  00FEAA  00                 	db	0
  4416  00FEAB                     STR_116:
  4417  00FEAB  49                 	db	73	;'I'
  4418  00FEAC  52                 	db	82	;'R'
  4419  00FEAD  20                 	db	32
  4420  00FEAE  63                 	db	99	;'c'
  4421  00FEAF  6F                 	db	111	;'o'
  4422  00FEB0  6D                 	db	109	;'m'
  4423  00FEB1  6D                 	db	109	;'m'
  4424  00FEB2  61                 	db	97	;'a'
  4425  00FEB3  6E                 	db	110	;'n'
  4426  00FEB4  64                 	db	100	;'d'
  4427  00FEB5  73                 	db	115	;'s'
  4428  00FEB6  3A                 	db	58	;':'
  4429  00FEB7  00                 	db	0
  4430  00FEB8                     STR_139:
  4431  00FEB8  52                 	db	82	;'R'
  4432  00FEB9  46                 	db	70	;'F'
  4433  00FEBA  20                 	db	32
  4434  00FEBB  63                 	db	99	;'c'
  4435  00FEBC  6C                 	db	108	;'l'
  4436  00FEBD  65                 	db	101	;'e'
  4437  00FEBE  61                 	db	97	;'a'
  4438  00FEBF  72                 	db	114	;'r'
  4439  00FEC0  20                 	db	32
  4440  00FEC1  32                 	db	50	;'2'
  4441  00FEC2  2C                 	db	44
  4442  00FEC3  42                 	db	66	;'B'
  4443  00FEC4  00                 	db	0
  4444  00FEC5                     STR_133:
  4445  00FEC5  52                 	db	82	;'R'
  4446  00FEC6  46                 	db	70	;'F'
  4447  00FEC7  20                 	db	32
  4448  00FEC8  63                 	db	99	;'c'
  4449  00FEC9  6C                 	db	108	;'l'
  4450  00FECA  65                 	db	101	;'e'
  4451  00FECB  61                 	db	97	;'a'
  4452  00FECC  72                 	db	114	;'r'
  4453  00FECD  20                 	db	32
  4454  00FECE  31                 	db	49	;'1'
  4455  00FECF  2C                 	db	44
  4456  00FED0  44                 	db	68	;'D'
  4457  00FED1  00                 	db	0
  4458  00FED2                     STR_141:
  4459  00FED2  52                 	db	82	;'R'
  4460  00FED3  46                 	db	70	;'F'
  4461  00FED4  20                 	db	32
  4462  00FED5  63                 	db	99	;'c'
  4463  00FED6  6C                 	db	108	;'l'
  4464  00FED7  65                 	db	101	;'e'
  4465  00FED8  61                 	db	97	;'a'
  4466  00FED9  72                 	db	114	;'r'
  4467  00FEDA  20                 	db	32
  4468  00FEDB  32                 	db	50	;'2'
  4469  00FEDC  2C                 	db	44
  4470  00FEDD  44                 	db	68	;'D'
  4471  00FEDE  00                 	db	0
  4472  00FEDF                     STR_135:
  4473  00FEDF  52                 	db	82	;'R'
  4474  00FEE0  46                 	db	70	;'F'
  4475  00FEE1  20                 	db	32
  4476  00FEE2  63                 	db	99	;'c'
  4477  00FEE3  6C                 	db	108	;'l'
  4478  00FEE4  65                 	db	101	;'e'
  4479  00FEE5  61                 	db	97	;'a'
  4480  00FEE6  72                 	db	114	;'r'
  4481  00FEE7  20                 	db	32
  4482  00FEE8  31                 	db	49	;'1'
  4483  00FEE9  2C                 	db	44
  4484  00FEEA  45                 	db	69	;'E'
  4485  00FEEB  00                 	db	0
  4486  00FEEC                     STR_137:
  4487  00FEEC  52                 	db	82	;'R'
  4488  00FEED  46                 	db	70	;'F'
  4489  00FEEE  20                 	db	32
  4490  00FEEF  63                 	db	99	;'c'
  4491  00FEF0  6C                 	db	108	;'l'
  4492  00FEF1  65                 	db	101	;'e'
  4493  00FEF2  61                 	db	97	;'a'
  4494  00FEF3  72                 	db	114	;'r'
  4495  00FEF4  20                 	db	32
  4496  00FEF5  31                 	db	49	;'1'
  4497  00FEF6  2C                 	db	44
  4498  00FEF7  46                 	db	70	;'F'
  4499  00FEF8  00                 	db	0
  4500  00FEF9                     STR_143:
  4501  00FEF9  52                 	db	82	;'R'
  4502  00FEFA  46                 	db	70	;'F'
  4503  00FEFB  20                 	db	32
  4504  00FEFC  63                 	db	99	;'c'
  4505  00FEFD  6C                 	db	108	;'l'
  4506  00FEFE  65                 	db	101	;'e'
  4507  00FEFF  61                 	db	97	;'a'
  4508  00FF00  72                 	db	114	;'r'
  4509  00FF01  20                 	db	32
  4510  00FF02  32                 	db	50	;'2'
  4511  00FF03  2C                 	db	44
  4512  00FF04  48                 	db	72	;'H'
  4513  00FF05  00                 	db	0
  4514  00FF06                     STR_42:
  4515  00FF06  52                 	db	82	;'R'
  4516  00FF07  65                 	db	101	;'e'
  4517  00FF08  6D                 	db	109	;'m'
  4518  00FF09  6F                 	db	111	;'o'
  4519  00FF0A  74                 	db	116	;'t'
  4520  00FF0B  65                 	db	101	;'e'
  4521  00FF0C  42                 	db	66	;'B'
  4522  00FF0D  75                 	db	117	;'u'
  4523  00FF0E  74                 	db	116	;'t'
  4524  00FF0F  74                 	db	116	;'t'
  4525  00FF10  6F                 	db	111	;'o'
  4526  00FF11  6E                 	db	110	;'n'
  4527  00FF12  00                 	db	0
  4528  00FF13                     STR_127:
  4529  00FF13  52                 	db	82	;'R'
  4530  00FF14  46                 	db	70	;'F'
  4531  00FF15  20                 	db	32
  4532  00FF16  73                 	db	115	;'s'
  4533  00FF17  65                 	db	101	;'e'
  4534  00FF18  74                 	db	116	;'t'
  4535  00FF19  20                 	db	32
  4536  00FF1A  32                 	db	50	;'2'
  4537  00FF1B  2C                 	db	44
  4538  00FF1C  42                 	db	66	;'B'
  4539  00FF1D  00                 	db	0
  4540  00FF1E                     STR_121:
  4541  00FF1E  52                 	db	82	;'R'
  4542  00FF1F  46                 	db	70	;'F'
  4543  00FF20  20                 	db	32
  4544  00FF21  73                 	db	115	;'s'
  4545  00FF22  65                 	db	101	;'e'
  4546  00FF23  74                 	db	116	;'t'
  4547  00FF24  20                 	db	32
  4548  00FF25  31                 	db	49	;'1'
  4549  00FF26  2C                 	db	44
  4550  00FF27  44                 	db	68	;'D'
  4551  00FF28  00                 	db	0
  4552  00FF29                     STR_129:
  4553  00FF29  52                 	db	82	;'R'
  4554  00FF2A  46                 	db	70	;'F'
  4555  00FF2B  20                 	db	32
  4556  00FF2C  73                 	db	115	;'s'
  4557  00FF2D  65                 	db	101	;'e'
  4558  00FF2E  74                 	db	116	;'t'
  4559  00FF2F  20                 	db	32
  4560  00FF30  32                 	db	50	;'2'
  4561  00FF31  2C                 	db	44
  4562  00FF32  44                 	db	68	;'D'
  4563  00FF33  00                 	db	0
  4564  00FF34                     STR_123:
  4565  00FF34  52                 	db	82	;'R'
  4566  00FF35  46                 	db	70	;'F'
  4567  00FF36  20                 	db	32
  4568  00FF37  73                 	db	115	;'s'
  4569  00FF38  65                 	db	101	;'e'
  4570  00FF39  74                 	db	116	;'t'
  4571  00FF3A  20                 	db	32
  4572  00FF3B  31                 	db	49	;'1'
  4573  00FF3C  2C                 	db	44
  4574  00FF3D  45                 	db	69	;'E'
  4575  00FF3E  00                 	db	0
  4576  00FF3F                     STR_125:
  4577  00FF3F  52                 	db	82	;'R'
  4578  00FF40  46                 	db	70	;'F'
  4579  00FF41  20                 	db	32
  4580  00FF42  73                 	db	115	;'s'
  4581  00FF43  65                 	db	101	;'e'
  4582  00FF44  74                 	db	116	;'t'
  4583  00FF45  20                 	db	32
  4584  00FF46  31                 	db	49	;'1'
  4585  00FF47  2C                 	db	44
  4586  00FF48  46                 	db	70	;'F'
  4587  00FF49  00                 	db	0
  4588  00FF4A                     STR_131:
  4589  00FF4A  52                 	db	82	;'R'
  4590  00FF4B  46                 	db	70	;'F'
  4591  00FF4C  20                 	db	32
  4592  00FF4D  73                 	db	115	;'s'
  4593  00FF4E  65                 	db	101	;'e'
  4594  00FF4F  74                 	db	116	;'t'
  4595  00FF50  20                 	db	32
  4596  00FF51  32                 	db	50	;'2'
  4597  00FF52  2C                 	db	44
  4598  00FF53  48                 	db	72	;'H'
  4599  00FF54  00                 	db	0
  4600  00FF55                     STR_36:
  4601  00FF55  20                 	db	32
  4602  00FF56  20                 	db	32
  4603  00FF57  20                 	db	32
  4604  00FF58  20                 	db	32
  4605  00FF59  20                 	db	32
  4606  00FF5A  20                 	db	32
  4607  00FF5B  20                 	db	32
  4608  00FF5C  20                 	db	32
  4609  00FF5D  6F                 	db	111	;'o'
  4610  00FF5E  72                 	db	114	;'r'
  4611  00FF5F  00                 	db	0
  4612  00FF60                     STR_80:
  4613  00FF60  43                 	db	67	;'C'
  4614  00FF61  68                 	db	104	;'h'
  4615  00FF62  61                 	db	97	;'a'
  4616  00FF63  6E                 	db	110	;'n'
  4617  00FF64  67                 	db	103	;'g'
  4618  00FF65  65                 	db	101	;'e'
  4619  00FF66  20                 	db	32
  4620  00FF67  53                 	db	83	;'S'
  4621  00FF68  4E                 	db	78	;'N'
  4622  00FF69  00                 	db	0
  4623  00FF6A                     STR_106:
  4624  00FF6A  48                 	db	72	;'H'
  4625  00FF6B  65                 	db	101	;'e'
  4626  00FF6C  6C                 	db	108	;'l'
  4627  00FF6D  70                 	db	112	;'p'
  4628  00FF6E  20                 	db	32
  4629  00FF6F  4D                 	db	77	;'M'
  4630  00FF70  65                 	db	101	;'e'
  4631  00FF71  6E                 	db	110	;'n'
  4632  00FF72  75                 	db	117	;'u'
  4633  00FF73  00                 	db	0
  4634  00FF74                     STR_11:
  4635  00FF74  53                 	db	83	;'S'
  4636  00FF75  59                 	db	89	;'Y'
  4637  00FF76  2C                 	db	44
  4638  00FF77  30                 	db	48	;'0'
  4639  00FF78  30                 	db	48	;'0'
  4640  00FF79  31                 	db	49	;'1'
  4641  00FF7A  30                 	db	48	;'0'
  4642  00FF7B  0D                 	db	13
  4643  00FF7C  00                 	db	0
  4644  00FF7D                     STR_9:
  4645  00FF7D  53                 	db	83	;'S'
  4646  00FF7E  55                 	db	85	;'U'
  4647  00FF7F  2C                 	db	44
  4648  00FF80  31                 	db	49	;'1'
  4649  00FF81  31                 	db	49	;'1'
  4650  00FF82  35                 	db	53	;'5'
  4651  00FF83  4B                 	db	75	;'K'
  4652  00FF84  0D                 	db	13
  4653  00FF85  00                 	db	0
  4654  00FF86                     STR_38:
  4655  00FF86  45                 	db	69	;'E'
  4656  00FF87  78                 	db	120	;'x'
  4657  00FF88  61                 	db	97	;'a'
  4658  00FF89  6D                 	db	109	;'m'
  4659  00FF8A  70                 	db	112	;'p'
  4660  00FF8B  6C                 	db	108	;'l'
  4661  00FF8C  65                 	db	101	;'e'
  4662  00FF8D  3A                 	db	58	;':'
  4663  00FF8E  00                 	db	0
  4664  00FF8F                     STR_58:
  4665  00FF8F  52                 	db	82	;'R'
  4666  00FF90  46                 	db	70	;'F'
  4667  00FF91  20                 	db	32
  4668  00FF92  63                 	db	99	;'c'
  4669  00FF93  6C                 	db	108	;'l'
  4670  00FF94  65                 	db	101	;'e'
  4671  00FF95  61                 	db	97	;'a'
  4672  00FF96  72                 	db	114	;'r'
  4673  00FF97  00                 	db	0
  4674  00FF98                     STR_92:
  4675  00FF98  56                 	db	86	;'V'
  4676  00FF99  6F                 	db	111	;'o'
  4677  00FF9A  6C                 	db	108	;'l'
  4678  00FF9B  74                 	db	116	;'t'
  4679  00FF9C  61                 	db	97	;'a'
  4680  00FF9D  67                 	db	103	;'g'
  4681  00FF9E  65                 	db	101	;'e'
  4682  00FF9F  00                 	db	0
  4683  00FFA0                     STR_164:
  4684  00FFA0  28                 	db	40
  4685  00FFA1  6E                 	db	110	;'n'
  4686  00FFA2  75                 	db	117	;'u'
  4687  00FFA3  6C                 	db	108	;'l'
  4688  00FFA4  6C                 	db	108	;'l'
  4689  00FFA5  29                 	db	41
  4690  00FFA6  00                 	db	0
  4691  00FFA7                     STR_34:
  4692  00FFA7  55                 	db	85	;'U'
  4693  00FFA8  73                 	db	115	;'s'
  4694  00FFA9  61                 	db	97	;'a'
  4695  00FFAA  67                 	db	103	;'g'
  4696  00FFAB  65                 	db	101	;'e'
  4697  00FFAC  3A                 	db	58	;':'
  4698  00FFAD  00                 	db	0
  4699  00FFAE                     STR_57:
  4700  00FFAE  52                 	db	82	;'R'
  4701  00FFAF  46                 	db	70	;'F'
  4702  00FFB0  20                 	db	32
  4703  00FFB1  73                 	db	115	;'s'
  4704  00FFB2  65                 	db	101	;'e'
  4705  00FFB3  74                 	db	116	;'t'
  4706  00FFB4  00                 	db	0
  4707  00FFB5                     STR_12:
  4708  00FFB5  53                 	db	83	;'S'
  4709  00FFB6  7E                 	db	126
  4710  00FFB7  2C                 	db	44
  4711  00FFB8  30                 	db	48	;'0'
  4712  00FFB9  0D                 	db	13
  4713  00FFBA  00                 	db	0
  4714  00FFBB                     STR_17:
  4715  00FFBB  43                 	db	67	;'C'
  4716  00FFBC  6F                 	db	111	;'o'
  4717  00FFBD  6E                 	db	110	;'n'
  4718  00FFBE  66                 	db	102	;'f'
  4719  00FFBF  31                 	db	49	;'1'
  4720  00FFC0  00                 	db	0
  4721  00FFC1                     STR_19:
  4722  00FFC1  43                 	db	67	;'C'
  4723  00FFC2  6F                 	db	111	;'o'
  4724  00FFC3  6E                 	db	110	;'n'
  4725  00FFC4  66                 	db	102	;'f'
  4726  00FFC5  32                 	db	50	;'2'
  4727  00FFC6  00                 	db	0
  4728  00FFC7                     STR_75:
  4729  00FFC7  52                 	db	82	;'R'
  4730  00FFC8  65                 	db	101	;'e'
  4731  00FFC9  73                 	db	115	;'s'
  4732  00FFCA  65                 	db	101	;'e'
  4733  00FFCB  74                 	db	116	;'t'
  4734  00FFCC  00                 	db	0
  4735  00FFCD                     STR_15:
  4736  00FFCD  2D                 	db	45
  4737  00FFCE  2D                 	db	45
  4738  00FFCF  2D                 	db	45
  4739  00FFD0  0D                 	db	13
  4740  00FFD1  00                 	db	0
  4741  00FFD2                     STR_145:
  4742  00FFD2  4E                 	db	78	;'N'
  4743  00FFD3  45                 	db	69	;'E'
  4744  00FFD4  43                 	db	67	;'C'
  4745  00FFD5  3F                 	db	63	;'?'
  4746  00FFD6  00                 	db	0
  4747  00FFD7                     STR_83:
  4748  00FFD7  43                 	db	67	;'C'
  4749  00FFD8  6F                 	db	111	;'o'
  4750  00FFD9  64                 	db	100	;'d'
  4751  00FFDA  65                 	db	101	;'e'
  4752  00FFDB  00                 	db	0
  4753  00FFDC                     STR_100:
  4754  00FFDC  20                 	db	32
  4755  00FFDD  4D                 	db	77	;'M'
  4756  00FFDE  48                 	db	72	;'H'
  4757  00FFDF  7A                 	db	122	;'z'
  4758  00FFE0  00                 	db	0
  4759  00FFE1                     STR_4:
  4760  00FFE1  24                 	db	36
  4761  00FFE2  24                 	db	36
  4762  00FFE3  24                 	db	36
  4763  00FFE4  00                 	db	0
  4764  00FFE5                     STR_102:
  4765  00FFE5  3F                 	db	63	;'?'
  4766  00FFE6  3F                 	db	63	;'?'
  4767  00FFE7  3F                 	db	63	;'?'
  4768  00FFE8  00                 	db	0
  4769  00FFE9                     STR_21:
  4770  00FFE9  4E                 	db	78	;'N'
  4771  00FFEA  45                 	db	69	;'E'
  4772  00FFEB  43                 	db	67	;'C'
  4773  00FFEC  00                 	db	0
  4774  00FFED                     STR_5:
  4775  00FFED  43                 	db	67	;'C'
  4776  00FFEE  4D                 	db	77	;'M'
  4777  00FFEF  44                 	db	68	;'D'
  4778  00FFF0  00                 	db	0
  4779  00FFF1                     STR_16:
  4780  00FFF1  45                 	db	69	;'E'
  4781  00FFF2  4E                 	db	78	;'N'
  4782  00FFF3  44                 	db	68	;'D'
  4783  00FFF4  00                 	db	0
  4784  00FFF5                     STR_8:
  4785  00FFF5  41                 	db	65	;'A'
  4786  00FFF6  4F                 	db	79	;'O'
  4787  00FFF7  4B                 	db	75	;'K'
  4788  00FFF8  00                 	db	0
  4789  00FFF9                     STR_13:
  4790  00FFF9  44                 	db	68	;'D'
  4791  00FFFA  0D                 	db	13
  4792  00FFFB  00                 	db	0
  4793  00FFFC                     STR_6:
  4794  00FFFC  56                 	db	86	;'V'
  4795  00FFFD  0D                 	db	13
  4796  00FFFE  00                 	db	0
  4797  0000                     
  4798                           ; #config settings
  4799  00FFFF  00                 	db	0	; dummy byte at the end
  4800  0000                     
  4801                           	psect	cinit
  4802  009020                     __pcinit:
  4803                           	opt stack 0
  4804  009020                     start_initialization:
  4805                           	opt stack 0
  4806  009020                     __initialization:
  4807                           	opt stack 0
  4808                           
  4809                           ; Clear objects allocated to BANK5 (200 bytes)
  4810  009020  EE05  F000         	lfsr	0,__pbssBANK5
  4811  009024  0EC8               	movlw	200
  4812  009026                     clear_0:
  4813  009026  6AEE               	clrf	postinc0,c
  4814  009028  06E8               	decf	wreg,f,c
  4815  00902A  E1FD               	bnz	clear_0
  4816                           
  4817                           ; Clear objects allocated to BANK4 (130 bytes)
  4818  00902C  EE04  F000         	lfsr	0,__pbssBANK4
  4819  009030  0E82               	movlw	130
  4820  009032                     clear_1:
  4821  009032  6AEE               	clrf	postinc0,c
  4822  009034  06E8               	decf	wreg,f,c
  4823  009036  E1FD               	bnz	clear_1
  4824                           
  4825                           ; Clear objects allocated to BANK3 (248 bytes)
  4826  009038  EE03  F000         	lfsr	0,__pbssBANK3
  4827  00903C  0EF8               	movlw	248
  4828  00903E                     clear_2:
  4829  00903E  6AEE               	clrf	postinc0,c
  4830  009040  06E8               	decf	wreg,f,c
  4831  009042  E1FD               	bnz	clear_2
  4832                           
  4833                           ; Clear objects allocated to BANK2 (1 bytes)
  4834  009044  0102               	movlb	2
  4835  009046  6BFF               	clrf	__pbssBANK2& (0+255),b
  4836                           
  4837                           ; Clear objects allocated to BANK1 (1 bytes)
  4838  009048  0101               	movlb	1
  4839  00904A  6BFF               	clrf	__pbssBANK1& (0+255),b
  4840                           
  4841                           ; Clear objects allocated to BANK0 (6 bytes)
  4842  00904C  0100               	movlb	0
  4843  00904E  6BFD               	clrf	(__pbssBANK0+5)& (0+255),b
  4844  009050  6BFC               	clrf	(__pbssBANK0+4)& (0+255),b
  4845  009052  6BFB               	clrf	(__pbssBANK0+3)& (0+255),b
  4846  009054  6BFA               	clrf	(__pbssBANK0+2)& (0+255),b
  4847  009056  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
  4848  009058  6BF8               	clrf	__pbssBANK0& (0+255),b
  4849                           
  4850                           ; Clear objects allocated to COMRAM (27 bytes)
  4851  00905A  EE00  F040         	lfsr	0,__pbssCOMRAM
  4852  00905E  0E1B               	movlw	27
  4853  009060                     clear_3:
  4854  009060  6AEE               	clrf	postinc0,c
  4855  009062  06E8               	decf	wreg,f,c
  4856  009064  E1FD               	bnz	clear_3
  4857                           
  4858                           ; Initialize objects allocated to BANK4 (50 bytes)
  4859                           ; load TBLPTR registers with __pidataBANK4
  4860  009066  0E20               	movlw	low __pidataBANK4
  4861  009068  6EF6               	movwf	tblptrl,c
  4862  00906A  0EA1               	movlw	high __pidataBANK4
  4863  00906C  6EF7               	movwf	tblptrh,c
  4864  00906E  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  4865  009070  6EF8               	movwf	tblptru,c
  4866  009072  EE04  F082         	lfsr	0,__pdataBANK4
  4867  009076  EE10 F032          	lfsr	1,50
  4868  00907A                     copy_data0:
  4869  00907A  0009               	tblrd		*+
  4870  00907C  CFF5 FFEE          	movff	tablat,postinc0
  4871  009080  50E5               	movf	postdec1,w,c
  4872  009082  50E1               	movf	fsr1l,w,c
  4873  009084  E1FA               	bnz	copy_data0
  4874                           
  4875                           ; Initialize objects allocated to BANK3 (4 bytes)
  4876                           ; load TBLPTR registers with __pidataBANK3
  4877  009086  0E3A               	movlw	low __pidataBANK3
  4878  009088  6EF6               	movwf	tblptrl,c
  4879  00908A  0EA5               	movlw	high __pidataBANK3
  4880  00908C  6EF7               	movwf	tblptrh,c
  4881  00908E  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  4882  009090  6EF8               	movwf	tblptru,c
  4883  009092  EE03  F0F8         	lfsr	0,__pdataBANK3
  4884  009096  EE10 F004          	lfsr	1,4
  4885  00909A                     copy_data1:
  4886  00909A  0009               	tblrd		*+
  4887  00909C  CFF5 FFEE          	movff	tablat,postinc0
  4888  0090A0  50E5               	movf	postdec1,w,c
  4889  0090A2  50E1               	movf	fsr1l,w,c
  4890  0090A4  E1FA               	bnz	copy_data1
  4891                           
  4892                           ; Initialize objects allocated to BANK0 (2 bytes)
  4893                           ; load TBLPTR registers with __pidataBANK0
  4894  0090A6  0E42               	movlw	low __pidataBANK0
  4895  0090A8  6EF6               	movwf	tblptrl,c
  4896  0090AA  0EA5               	movlw	high __pidataBANK0
  4897  0090AC  6EF7               	movwf	tblptrh,c
  4898  0090AE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  4899  0090B0  6EF8               	movwf	tblptru,c
  4900  0090B2  0009               	tblrd		*+	;fetch initializer
  4901  0090B4  CFF5 F0FE          	movff	tablat,__pdataBANK0
  4902  0090B8  0009               	tblrd		*+	;fetch initializer
  4903  0090BA  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
  4904                           
  4905                           ; Initialize objects allocated to COMRAM (4 bytes)
  4906                           ; load TBLPTR registers with __pidataCOMRAM
  4907  0090BE  0E36               	movlw	low __pidataCOMRAM
  4908  0090C0  6EF6               	movwf	tblptrl,c
  4909  0090C2  0EA5               	movlw	high __pidataCOMRAM
  4910  0090C4  6EF7               	movwf	tblptrh,c
  4911  0090C6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  4912  0090C8  6EF8               	movwf	tblptru,c
  4913  0090CA  EE00  F05B         	lfsr	0,__pdataCOMRAM
  4914  0090CE  EE10 F004          	lfsr	1,4
  4915  0090D2                     copy_data2:
  4916  0090D2  0009               	tblrd		*+
  4917  0090D4  CFF5 FFEE          	movff	tablat,postinc0
  4918  0090D8  50E5               	movf	postdec1,w,c
  4919  0090DA  50E1               	movf	fsr1l,w,c
  4920  0090DC  E1FA               	bnz	copy_data2
  4921  0090DE                     end_of_initialization:
  4922                           	opt stack 0
  4923  0090DE                     __end_of__initialization:
  4924                           	opt stack 0
  4925  0090DE  0100               	movlb	0
  4926  0090E0  EF6D  F029         	goto	_main	;jump to C main() function
  4927                           tblptru	equ	0xFF8
  4928                           tblptrh	equ	0xFF7
  4929                           tblptrl	equ	0xFF6
  4930                           tablat	equ	0xFF5
  4931                           postinc0	equ	0xFEE
  4932                           wreg	equ	0xFE8
  4933                           postdec1	equ	0xFE5
  4934                           fsr1l	equ	0xFE1
  4935                           
  4936                           	psect	bssCOMRAM
  4937  000040                     __pbssCOMRAM:
  4938                           	opt stack 0
  4939  000040                     _BatteryVoltage:
  4940                           	opt stack 0
  4941  000040                     	ds	3
  4942  000043                     _CommandStringPos:
  4943                           	opt stack 0
  4944  000043                     	ds	1
  4945  000044                     _Conf2_ChannelB_Status:
  4946                           	opt stack 0
  4947  000044                     	ds	1
  4948  000045                     _Conf2_ChannelD_Status:
  4949                           	opt stack 0
  4950  000045                     	ds	1
  4951  000046                     _Conf2_ChannelH_1_Status:
  4952                           	opt stack 0
  4953  000046                     	ds	1
  4954  000047                     _Conf2_ChannelH_2_Status:
  4955                           	opt stack 0
  4956  000047                     	ds	1
  4957  000048                     _Conf2_ChannelH_3_Status:
  4958                           	opt stack 0
  4959  000048                     	ds	1
  4960  000049                     _IRbit:
  4961                           	opt stack 0
  4962  000049                     	ds	1
  4963  00004A                     _IRcodeBit:
  4964                           	opt stack 0
  4965  00004A                     	ds	1
  4966  00004B                     _IRmod:
  4967                           	opt stack 0
  4968  00004B                     	ds	1
  4969  00004C                     _IRpinOLD:
  4970                           	opt stack 0
  4971  00004C                     	ds	1
  4972  00004D                     _IRrepeatAmount:
  4973                           	opt stack 0
  4974  00004D                     	ds	1
  4975  00004E                     _IRrepeatflag:
  4976                           	opt stack 0
  4977  00004E                     	ds	1
  4978  00004F                     _IRsendFlag:
  4979                           	opt stack 0
  4980  00004F                     	ds	1
  4981  000050                     _RFcodeBit:
  4982                           	opt stack 0
  4983  000050                     	ds	1
  4984  000051                     _Sendcount:
  4985                           	opt stack 0
  4986  000051                     	ds	1
  4987  000052                     _Timer1_Postscaler:
  4988                           	opt stack 0
  4989  000052                     	ds	1
  4990  000053                     _Timer2_Postscaler:
  4991                           	opt stack 0
  4992  000053                     	ds	1
  4993  000054                     _Timer3_Postscaler:
  4994                           	opt stack 0
  4995  000054                     	ds	1
  4996  000055                     _IR_NEC:
  4997                           	opt stack 0
  4998  000055                     	ds	4
  4999  000059                     _IRaddress:
  5000                           	opt stack 0
  5001  000059                     	ds	1
  5002  00005A                     _IRcommand:
  5003                           	opt stack 0
  5004  00005A                     	ds	1
  5005                           tblptru	equ	0xFF8
  5006                           tblptrh	equ	0xFF7
  5007                           tblptrl	equ	0xFF6
  5008                           tablat	equ	0xFF5
  5009                           postinc0	equ	0xFEE
  5010                           wreg	equ	0xFE8
  5011                           postdec1	equ	0xFE5
  5012                           fsr1l	equ	0xFE1
  5013                           
  5014                           	psect	dataCOMRAM
  5015  00005B                     __pdataCOMRAM:
  5016                           	opt stack 0
  5017  00005B                     _IRbitPosition:
  5018                           	opt stack 0
  5019  00005B                     	ds	1
  5020  00005C                     _RF_IR:
  5021                           	opt stack 0
  5022  00005C                     	ds	1
  5023  00005D                     _RF_IR_Postscaler:
  5024                           	opt stack 0
  5025  00005D                     	ds	1
  5026  00005E                     _ReceivingIR:
  5027                           	opt stack 0
  5028  00005E                     	ds	1
  5029                           tblptru	equ	0xFF8
  5030                           tblptrh	equ	0xFF7
  5031                           tblptrl	equ	0xFF6
  5032                           tablat	equ	0xFF5
  5033                           postinc0	equ	0xFEE
  5034                           wreg	equ	0xFE8
  5035                           postdec1	equ	0xFE5
  5036                           fsr1l	equ	0xFE1
  5037                           
  5038                           	psect	bssBANK0
  5039  0000F8                     __pbssBANK0:
  5040                           	opt stack 0
  5041  0000F8                     _IRrawCodeNum:
  5042                           	opt stack 0
  5043  0000F8                     	ds	1
  5044  0000F9                     _NewReceivedString:
  5045                           	opt stack 0
  5046  0000F9                     	ds	1
  5047  0000FA                     _RFConfig:
  5048                           	opt stack 0
  5049  0000FA                     	ds	1
  5050  0000FB                     _RFcodePlace:
  5051                           	opt stack 0
  5052  0000FB                     	ds	1
  5053  0000FC                     _RFsendFlag:
  5054                           	opt stack 0
  5055  0000FC                     	ds	1
  5056  0000FD                     _IR_New_Code:
  5057                           	opt stack 0
  5058  0000FD                     	ds	1
  5059                           tblptru	equ	0xFF8
  5060                           tblptrh	equ	0xFF7
  5061                           tblptrl	equ	0xFF6
  5062                           tablat	equ	0xFF5
  5063                           postinc0	equ	0xFEE
  5064                           wreg	equ	0xFE8
  5065                           postdec1	equ	0xFE5
  5066                           fsr1l	equ	0xFE1
  5067                           
  5068                           	psect	dataBANK0
  5069  0000FE                     __pdataBANK0:
  5070                           	opt stack 0
  5071  0000FE                     _IRcodePlace:
  5072                           	opt stack 0
  5073  0000FE                     	ds	1
  5074  0000FF                     _Sent:
  5075                           	opt stack 0
  5076  0000FF                     	ds	1
  5077                           tblptru	equ	0xFF8
  5078                           tblptrh	equ	0xFF7
  5079                           tblptrl	equ	0xFF6
  5080                           tablat	equ	0xFF5
  5081                           postinc0	equ	0xFEE
  5082                           wreg	equ	0xFE8
  5083                           postdec1	equ	0xFE5
  5084                           fsr1l	equ	0xFE1
  5085                           
  5086                           	psect	bssBANK1
  5087  0001FF                     __pbssBANK1:
  5088                           	opt stack 0
  5089  0001FF                     _BufferOverflow:
  5090                           	opt stack 0
  5091  0001FF                     	ds	1
  5092                           tblptru	equ	0xFF8
  5093                           tblptrh	equ	0xFF7
  5094                           tblptrl	equ	0xFF6
  5095                           tablat	equ	0xFF5
  5096                           postinc0	equ	0xFEE
  5097                           wreg	equ	0xFE8
  5098                           postdec1	equ	0xFE5
  5099                           fsr1l	equ	0xFE1
  5100                           
  5101                           	psect	bssBANK2
  5102  0002FF                     __pbssBANK2:
  5103                           	opt stack 0
  5104  0002FF                     _ReceivedStringPos:
  5105                           	opt stack 0
  5106  0002FF                     	ds	1
  5107                           tblptru	equ	0xFF8
  5108                           tblptrh	equ	0xFF7
  5109                           tblptrl	equ	0xFF6
  5110                           tablat	equ	0xFF5
  5111                           postinc0	equ	0xFEE
  5112                           wreg	equ	0xFE8
  5113                           postdec1	equ	0xFE5
  5114                           fsr1l	equ	0xFE1
  5115                           
  5116                           	psect	bssBANK3
  5117  000300                     __pbssBANK3:
  5118                           	opt stack 0
  5119  000300                     _RFsendCode:
  5120                           	opt stack 0
  5121  000300                     	ds	20
  5122  000314                     _IRsendCode:
  5123                           	opt stack 0
  5124  000314                     	ds	4
  5125  000318                     _CommandString:
  5126                           	opt stack 0
  5127  000318                     	ds	100
  5128  00037C                     _Global2:
  5129                           	opt stack 0
  5130  00037C                     	ds	64
  5131  0003BC                     _BluetoothFirmware1:
  5132                           	opt stack 0
  5133  0003BC                     	ds	30
  5134  0003DA                     _Global1:
  5135                           	opt stack 0
  5136  0003DA                     	ds	30
  5137                           tblptru	equ	0xFF8
  5138                           tblptrh	equ	0xFF7
  5139                           tblptrl	equ	0xFF6
  5140                           tablat	equ	0xFF5
  5141                           postinc0	equ	0xFEE
  5142                           wreg	equ	0xFE8
  5143                           postdec1	equ	0xFE5
  5144                           fsr1l	equ	0xFE1
  5145                           
  5146                           	psect	dataBANK3
  5147  0003F8                     __pdataBANK3:
  5148                           	opt stack 0
  5149  0003F8                     _IRtimeout:
  5150                           	opt stack 0
  5151  0003F8                     	ds	4
  5152                           tblptru	equ	0xFF8
  5153                           tblptrh	equ	0xFF7
  5154                           tblptrl	equ	0xFF6
  5155                           tablat	equ	0xFF5
  5156                           postinc0	equ	0xFEE
  5157                           wreg	equ	0xFE8
  5158                           postdec1	equ	0xFE5
  5159                           fsr1l	equ	0xFE1
  5160                           
  5161                           	psect	bssBANK4
  5162  000400                     __pbssBANK4:
  5163                           	opt stack 0
  5164  000400                     _ReceivedString:
  5165                           	opt stack 0
  5166  000400                     	ds	100
  5167  000464                     _BluetoothFirmware2:
  5168                           	opt stack 0
  5169  000464                     	ds	30
  5170                           tblptru	equ	0xFF8
  5171                           tblptrh	equ	0xFF7
  5172                           tblptrl	equ	0xFF6
  5173                           tablat	equ	0xFF5
  5174                           postinc0	equ	0xFEE
  5175                           wreg	equ	0xFE8
  5176                           postdec1	equ	0xFE5
  5177                           fsr1l	equ	0xFE1
  5178                           
  5179                           	psect	dataBANK4
  5180  000482                     __pdataBANK4:
  5181                           	opt stack 0
  5182  000482                     _ProductName:
  5183                           	opt stack 0
  5184  000482                     	ds	50
  5185                           tblptru	equ	0xFF8
  5186                           tblptrh	equ	0xFF7
  5187                           tblptrl	equ	0xFF6
  5188                           tablat	equ	0xFF5
  5189                           postinc0	equ	0xFEE
  5190                           wreg	equ	0xFE8
  5191                           postdec1	equ	0xFE5
  5192                           fsr1l	equ	0xFE1
  5193                           
  5194                           	psect	bssBANK5
  5195  000500                     __pbssBANK5:
  5196                           	opt stack 0
  5197  000500                     _IRRawCode:
  5198                           	opt stack 0
  5199  000500                     	ds	200
  5200                           tblptru	equ	0xFF8
  5201                           tblptrh	equ	0xFF7
  5202                           tblptrl	equ	0xFF6
  5203                           tablat	equ	0xFF5
  5204                           postinc0	equ	0xFEE
  5205                           wreg	equ	0xFE8
  5206                           postdec1	equ	0xFE5
  5207                           fsr1l	equ	0xFE1
  5208                           
  5209                           	psect	cstackBANK2
  5210  000200                     __pcstackBANK2:
  5211                           	opt stack 0
  5212  000200                     ??_UseBluetooth:
  5213                           
  5214                           ; 0 bytes @ 0x0
  5215  000200                     	ds	12
  5216  00020C                     UseBluetooth@buf:
  5217                           	opt stack 0
  5218                           
  5219                           ; 100 bytes @ 0xC
  5220  00020C                     	ds	100
  5221  000270                     UseBluetooth@rfchannelSTR:
  5222                           	opt stack 0
  5223                           
  5224                           ; 10 bytes @ 0x70
  5225  000270                     	ds	10
  5226  00027A                     UseBluetooth@set:
  5227                           	opt stack 0
  5228                           
  5229                           ; 1 bytes @ 0x7A
  5230  00027A                     	ds	1
  5231  00027B                     UseBluetooth@tempNec:
  5232                           	opt stack 0
  5233                           
  5234                           ; 4 bytes @ 0x7B
  5235  00027B                     	ds	4
  5236  00027F                     UseBluetooth@SerialNumberTEMP:
  5237                           	opt stack 0
  5238                           
  5239                           ; 4 bytes @ 0x7F
  5240  00027F                     	ds	4
  5241  000283                     UseBluetooth@EmptyPlace:
  5242                           	opt stack 0
  5243                           
  5244                           ; 1 bytes @ 0x83
  5245  000283                     	ds	1
  5246  000284                     UseBluetooth@device:
  5247                           	opt stack 0
  5248                           
  5249                           ; 1 bytes @ 0x84
  5250  000284                     	ds	1
  5251  000285                     UseBluetooth@timeout:
  5252                           	opt stack 0
  5253                           
  5254                           ; 1 bytes @ 0x85
  5255  000285                     	ds	1
  5256  000286                     UseBluetooth@EnteredNEC:
  5257                           	opt stack 0
  5258                           
  5259                           ; 4 bytes @ 0x86
  5260  000286                     	ds	4
  5261  00028A                     UseBluetooth@ok:
  5262                           	opt stack 0
  5263                           
  5264                           ; 1 bytes @ 0x8A
  5265  00028A                     	ds	1
  5266  00028B                     UseBluetooth@tempRFArray:
  5267                           	opt stack 0
  5268                           
  5269                           ; 1 bytes @ 0x8B
  5270  00028B                     	ds	1
  5271  00028C                     UseBluetooth@rfconf:
  5272                           	opt stack 0
  5273                           
  5274                           ; 1 bytes @ 0x8C
  5275  00028C                     	ds	1
  5276  00028D                     UseBluetooth@NecAddress:
  5277                           	opt stack 0
  5278                           
  5279                           ; 1 bytes @ 0x8D
  5280  00028D                     	ds	1
  5281  00028E                     UseBluetooth@NecCommand:
  5282                           	opt stack 0
  5283                           
  5284                           ; 1 bytes @ 0x8E
  5285  00028E                     	ds	1
  5286  00028F                     UseBluetooth@temp:
  5287                           	opt stack 0
  5288                           
  5289                           ; 4 bytes @ 0x8F
  5290  00028F                     	ds	4
  5291  000293                     UseBluetooth@i:
  5292                           	opt stack 0
  5293                           
  5294                           ; 1 bytes @ 0x93
  5295  000293                     	ds	1
  5296  000294                     main@BluetoothString:
  5297                           	opt stack 0
  5298                           
  5299                           ; 100 bytes @ 0x94
  5300  000294                     	ds	100
  5301  0002F8                     main@IRtask:
  5302                           	opt stack 0
  5303                           
  5304                           ; 1 bytes @ 0xF8
  5305  0002F8                     	ds	1
  5306  0002F9                     main@Bluetoothtask:
  5307                           	opt stack 0
  5308                           
  5309                           ; 1 bytes @ 0xF9
  5310  0002F9                     	ds	1
  5311  0002FA                     main@BluetoothStringPos:
  5312                           	opt stack 0
  5313                           
  5314                           ; 1 bytes @ 0xFA
  5315  0002FA                     	ds	1
  5316  0002FB                     main@ConnectedOLD:
  5317                           	opt stack 0
  5318                           
  5319                           ; 1 bytes @ 0xFB
  5320  0002FB                     	ds	1
  5321  0002FC                     main@VoltageStatus:
  5322                           	opt stack 0
  5323                           
  5324                           ; 1 bytes @ 0xFC
  5325  0002FC                     	ds	1
  5326  0002FD                     main@Connected:
  5327                           	opt stack 0
  5328                           
  5329                           ; 1 bytes @ 0xFD
  5330  0002FD                     	ds	1
  5331  0002FE                     main@i:
  5332                           	opt stack 0
  5333                           
  5334                           ; 1 bytes @ 0xFE
  5335  0002FE                     	ds	1
  5336                           tblptru	equ	0xFF8
  5337                           tblptrh	equ	0xFF7
  5338                           tblptrl	equ	0xFF6
  5339                           tablat	equ	0xFF5
  5340                           postinc0	equ	0xFEE
  5341                           wreg	equ	0xFE8
  5342                           postdec1	equ	0xFE5
  5343                           fsr1l	equ	0xFE1
  5344                           
  5345                           	psect	cstackBANK1
  5346  000100                     __pcstackBANK1:
  5347                           	opt stack 0
  5348  000100                     EnterCommandMode@buf:
  5349                           	opt stack 0
  5350  000100                     StringAddEqual@temp:
  5351                           	opt stack 0
  5352                           
  5353                           ; 255 bytes @ 0x0
  5354  000100                     	ds	50
  5355  000132                     EnterCommandMode@count:
  5356                           	opt stack 0
  5357                           
  5358                           ; 1 bytes @ 0x32
  5359  000132                     	ds	1
  5360  000133                     BluetoothInitialSetup@BluetoothVersionLine1:
  5361                           	opt stack 0
  5362                           
  5363                           ; 30 bytes @ 0x33
  5364  000133                     	ds	30
  5365  000151                     BluetoothInitialSetup@BluetoothVersionLine2:
  5366                           	opt stack 0
  5367                           
  5368                           ; 30 bytes @ 0x51
  5369  000151                     	ds	30
  5370  00016F                     BluetoothInitialSetup@buf:
  5371                           	opt stack 0
  5372                           
  5373                           ; 50 bytes @ 0x6F
  5374  00016F                     	ds	50
  5375  0001A1                     BluetoothInitialSetup@first:
  5376                           	opt stack 0
  5377                           
  5378                           ; 1 bytes @ 0xA1
  5379  0001A1                     	ds	1
  5380  0001A2                     BluetoothInitialSetup@j:
  5381                           	opt stack 0
  5382                           
  5383                           ; 1 bytes @ 0xA2
  5384  0001A2                     	ds	1
  5385  0001A3                     BluetoothInitialSetup@ok:
  5386                           	opt stack 0
  5387                           
  5388                           ; 1 bytes @ 0xA3
  5389  0001A3                     	ds	1
  5390  0001A4                     BluetoothInitialSetup@i:
  5391                           	opt stack 0
  5392                           
  5393                           ; 1 bytes @ 0xA4
  5394  0001A4                     	ds	1
  5395  0001A5                     Init_System@buf:
  5396                           	opt stack 0
  5397                           
  5398                           ; 50 bytes @ 0xA5
  5399  0001A5                     	ds	90
  5400                           tblptru	equ	0xFF8
  5401                           tblptrh	equ	0xFF7
  5402                           tblptrl	equ	0xFF6
  5403                           tablat	equ	0xFF5
  5404                           postinc0	equ	0xFEE
  5405                           wreg	equ	0xFE8
  5406                           postdec1	equ	0xFE5
  5407                           fsr1l	equ	0xFE1
  5408                           
  5409                           	psect	cstackBANK0
  5410  000060                     __pcstackBANK0:
  5411                           	opt stack 0
  5412  000060                     high_isr@IRpin:
  5413                           	opt stack 0
  5414                           
  5415                           ; 1 bytes @ 0x0
  5416  000060                     	ds	1
  5417  000061                     high_isr@Time0:
  5418                           	opt stack 0
  5419                           
  5420                           ; 2 bytes @ 0x1
  5421  000061                     	ds	2
  5422  000063                     ??_isdigit:
  5423  000063                     ??_Reverse_Byte:
  5424  000063                     ?_ReadEEPROM_1Byte:
  5425                           	opt stack 0
  5426  000063                     ?___awmod:
  5427                           	opt stack 0
  5428  000063                     ?___ftpack:
  5429                           	opt stack 0
  5430  000063                     ?___ftneg:
  5431                           	opt stack 0
  5432  000063                     ?__tdiv_to_l_:
  5433                           	opt stack 0
  5434  000063                     ?__div_to_l_:
  5435                           	opt stack 0
  5436  000063                     ?_Reverse_4Byte:
  5437                           	opt stack 0
  5438  000063                     ?___lmul:
  5439                           	opt stack 0
  5440  000063                     ?___lldiv:
  5441                           	opt stack 0
  5442  000063                     IsLetter@data:
  5443                           	opt stack 0
  5444  000063                     ReadUSART@data:
  5445                           	opt stack 0
  5446  000063                     cleanBuffer@data:
  5447                           	opt stack 0
  5448  000063                     cleanBuffer16bit@data:
  5449                           	opt stack 0
  5450  000063                     StringMatch@This:
  5451                           	opt stack 0
  5452  000063                     StringContains@This:
  5453                           	opt stack 0
  5454  000063                     lowercaseString@Input:
  5455                           	opt stack 0
  5456  000063                     lowercaseChar@Input:
  5457                           	opt stack 0
  5458  000063                     GetStringAfterComma@This:
  5459                           	opt stack 0
  5460  000063                     OpenUSART@spbrg:
  5461                           	opt stack 0
  5462  000063                     ReadEEPROM_1Byte@address:
  5463                           	opt stack 0
  5464  000063                     WriteEEPROM_1Byte@address:
  5465                           	opt stack 0
  5466  000063                     SendRF@Code:
  5467                           	opt stack 0
  5468  000063                     ___awmod@dividend:
  5469                           	opt stack 0
  5470  000063                     __div_to_l_@f1:
  5471                           	opt stack 0
  5472  000063                     ___ftpack@arg:
  5473                           	opt stack 0
  5474  000063                     __tdiv_to_l_@f1:
  5475                           	opt stack 0
  5476  000063                     ___ftge@ff1:
  5477                           	opt stack 0
  5478  000063                     ___ftneg@f1:
  5479                           	opt stack 0
  5480  000063                     delayUS@US:
  5481                           	opt stack 0
  5482  000063                     Reverse_4Byte@This:
  5483                           	opt stack 0
  5484  000063                     ___lmul@multiplier:
  5485                           	opt stack 0
  5486  000063                     ___lldiv@dividend:
  5487                           	opt stack 0
  5488                           
  5489                           ; 4 bytes @ 0x3
  5490  000063                     	ds	1
  5491  000064                     _isdigit$3587:
  5492                           	opt stack 0
  5493                           
  5494                           ; 1 bytes @ 0x4
  5495  000064                     	ds	1
  5496  000065                     Reverse_Byte@temp:
  5497                           	opt stack 0
  5498  000065                     GetStringAfterComma@CommaNumber:
  5499                           	opt stack 0
  5500  000065                     OpenUSART@config:
  5501                           	opt stack 0
  5502  000065                     ReadEEPROM_1Byte@GIEstatus:
  5503                           	opt stack 0
  5504  000065                     WriteEEPROM_1Byte@data:
  5505                           	opt stack 0
  5506  000065                     SendRF@Config:
  5507                           	opt stack 0
  5508  000065                     isdigit@c:
  5509                           	opt stack 0
  5510  000065                     cleanBuffer@count:
  5511                           	opt stack 0
  5512  000065                     cleanBuffer16bit@count:
  5513                           	opt stack 0
  5514  000065                     StringMatch@That:
  5515                           	opt stack 0
  5516  000065                     StringContains@That:
  5517                           	opt stack 0
  5518  000065                     ___awmod@divisor:
  5519                           	opt stack 0
  5520                           
  5521                           ; 2 bytes @ 0x5
  5522  000065                     	ds	1
  5523  000066                     Reverse_Byte@This:
  5524                           	opt stack 0
  5525  000066                     ReadEEPROM_1Byte@PEIEstatus:
  5526                           	opt stack 0
  5527  000066                     WriteEEPROM_1Byte@GIEstatus:
  5528                           	opt stack 0
  5529  000066                     SendRF@size:
  5530                           	opt stack 0
  5531  000066                     ___ftpack@exp:
  5532                           	opt stack 0
  5533  000066                     StringMatchCaseInsensitive@This:
  5534                           	opt stack 0
  5535  000066                     StringContainsCaseInsensitive@This:
  5536                           	opt stack 0
  5537  000066                     GetStringAfterComma@result:
  5538                           	opt stack 0
  5539  000066                     __div_to_l_@f2:
  5540                           	opt stack 0
  5541  000066                     __tdiv_to_l_@f2:
  5542                           	opt stack 0
  5543  000066                     ___ftge@ff2:
  5544                           	opt stack 0
  5545                           
  5546                           ; 3 bytes @ 0x6
  5547  000066                     	ds	1
  5548  000067                     ??_cleanBuffer:
  5549  000067                     ??_delayUS:
  5550  000067                     ??_cleanBuffer16bit:
  5551  000067                     ??_StringMatch:
  5552  000067                     ??_StringContains:
  5553  000067                     ??_Reverse_4Byte:
  5554  000067                     ?_GetMemoryChar:
  5555                           	opt stack 0
  5556  000067                     ?_GetMemoryLong:
  5557                           	opt stack 0
  5558  000067                     ?_EncodeNEC:
  5559                           	opt stack 0
  5560  000067                     WriteEEPROM_1Byte@PEIEstatus:
  5561                           	opt stack 0
  5562  000067                     EncodeNEC@command:
  5563                           	opt stack 0
  5564  000067                     SendRF@RepeatAmount:
  5565                           	opt stack 0
  5566  000067                     ___awmod@counter:
  5567                           	opt stack 0
  5568  000067                     ___ftpack@sign:
  5569                           	opt stack 0
  5570  000067                     DecodeNEC@Nec:
  5571                           	opt stack 0
  5572  000067                     ___lmul@multiplicand:
  5573                           	opt stack 0
  5574  000067                     ___lldiv@divisor:
  5575                           	opt stack 0
  5576                           
  5577                           ; 4 bytes @ 0x7
  5578  000067                     	ds	1
  5579  000068                     ??___ftpack:
  5580  000068                     ??_SendRF:
  5581  000068                     ___awmod@sign:
  5582                           	opt stack 0
  5583  000068                     StringMatchCaseInsensitive@That:
  5584                           	opt stack 0
  5585  000068                     StringContainsCaseInsensitive@That:
  5586                           	opt stack 0
  5587  000068                     delayUS@i:
  5588                           	opt stack 0
  5589                           
  5590                           ; 4 bytes @ 0x8
  5591  000068                     	ds	1
  5592  000069                     ??__tdiv_to_l_:
  5593  000069                     ??___ftge:
  5594  000069                     ?___awdiv:
  5595                           	opt stack 0
  5596  000069                     StringContains@MatchAmount:
  5597                           	opt stack 0
  5598  000069                     GetStringAfterComma@tempCommaNumber:
  5599                           	opt stack 0
  5600  000069                     ___awdiv@dividend:
  5601                           	opt stack 0
  5602  000069                     __div_to_l_@quot:
  5603                           	opt stack 0
  5604                           
  5605                           ; 4 bytes @ 0x9
  5606  000069                     	ds	1
  5607  00006A                     ??_StringContainsCaseInsensitive:
  5608  00006A                     cleanBuffer@i:
  5609                           	opt stack 0
  5610  00006A                     cleanBuffer16bit@i:
  5611                           	opt stack 0
  5612  00006A                     StringMatchCaseInsensitive@tempThis:
  5613                           	opt stack 0
  5614  00006A                     StringContains@MatchCount:
  5615                           	opt stack 0
  5616  00006A                     GetStringAfterComma@count:
  5617                           	opt stack 0
  5618  00006A                     SendRF@i:
  5619                           	opt stack 0
  5620                           
  5621                           ; 1 bytes @ 0xA
  5622  00006A                     	ds	1
  5623  00006B                     ??_GetMemoryLong:
  5624  00006B                     ??_EncodeNEC:
  5625  00006B                     ?___altoft:
  5626                           	opt stack 0
  5627  00006B                     ?___lltoft:
  5628                           	opt stack 0
  5629  00006B                     ?___lwtoft:
  5630                           	opt stack 0
  5631  00006B                     StringMatchCaseInsensitive@tempThat:
  5632                           	opt stack 0
  5633  00006B                     StringContains@i:
  5634                           	opt stack 0
  5635  00006B                     GetMemoryChar@AddressFirst:
  5636                           	opt stack 0
  5637  00006B                     BufferCopy@from:
  5638                           	opt stack 0
  5639  00006B                     DecodeNEC@address:
  5640                           	opt stack 0
  5641  00006B                     SendRF_wait@Code:
  5642                           	opt stack 0
  5643  00006B                     ___awdiv@divisor:
  5644                           	opt stack 0
  5645  00006B                     ___lwtoft@c:
  5646                           	opt stack 0
  5647  00006B                     ___lmul@product:
  5648                           	opt stack 0
  5649  00006B                     ___altoft@c:
  5650                           	opt stack 0
  5651  00006B                     ___lldiv@quotient:
  5652                           	opt stack 0
  5653  00006B                     ___lltoft@c:
  5654                           	opt stack 0
  5655                           
  5656                           ; 4 bytes @ 0xB
  5657  00006B                     	ds	1
  5658  00006C                     StringContainsCaseInsensitive@MatchAmount:
  5659                           	opt stack 0
  5660  00006C                     UARTchar@data:
  5661                           	opt stack 0
  5662  00006C                     UARTchar_CONST@data:
  5663                           	opt stack 0
  5664  00006C                     GetMemoryChar@H:
  5665                           	opt stack 0
  5666  00006C                     ReadCodeButtons@temp:
  5667                           	opt stack 0
  5668  00006C                     InternalADC_Read@ADCcounts:
  5669                           	opt stack 0
  5670  00006C                     __tdiv_to_l_@quot:
  5671                           	opt stack 0
  5672                           
  5673                           ; 4 bytes @ 0xC
  5674  00006C                     	ds	1
  5675  00006D                     StringContainsCaseInsensitive@MatchCount:
  5676                           	opt stack 0
  5677  00006D                     UARTchar_CONST@temp:
  5678                           	opt stack 0
  5679  00006D                     SetMemoryChar@AddressFirst:
  5680                           	opt stack 0
  5681  00006D                     SendRF_wait@Config:
  5682                           	opt stack 0
  5683  00006D                     ___awdiv@counter:
  5684                           	opt stack 0
  5685  00006D                     __div_to_l_@cntr:
  5686                           	opt stack 0
  5687  00006D                     BufferCopy@to:
  5688                           	opt stack 0
  5689  00006D                     UARTstring@data:
  5690                           	opt stack 0
  5691  00006D                     DecodeNEC@command:
  5692                           	opt stack 0
  5693                           
  5694                           ; 2 bytes @ 0xD
  5695  00006D                     	ds	1
  5696  00006E                     ??_InternalADC_Read:
  5697  00006E                     ?___ftdiv:
  5698                           	opt stack 0
  5699  00006E                     StringContainsCaseInsensitive@tempThis:
  5700                           	opt stack 0
  5701  00006E                     SetMemoryChar@Test:
  5702                           	opt stack 0
  5703  00006E                     SendRF_wait@size:
  5704                           	opt stack 0
  5705  00006E                     ___awdiv@sign:
  5706                           	opt stack 0
  5707  00006E                     __div_to_l_@exp1:
  5708                           	opt stack 0
  5709  00006E                     UARTstring_CONST@data:
  5710                           	opt stack 0
  5711  00006E                     ___ftdiv@f1:
  5712                           	opt stack 0
  5713                           
  5714                           ; 3 bytes @ 0xE
  5715  00006E                     	ds	1
  5716  00006F                     ??_DecodeNEC:
  5717  00006F                     ??___altoft:
  5718  00006F                     ??___lltoft:
  5719  00006F                     BufferCopy@count:
  5720                           	opt stack 0
  5721  00006F                     StringContainsCaseInsensitive@tempThat:
  5722                           	opt stack 0
  5723  00006F                     SetMemoryChar@Data:
  5724                           	opt stack 0
  5725  00006F                     SendRF_wait@amount:
  5726                           	opt stack 0
  5727  00006F                     ___lldiv@counter:
  5728                           	opt stack 0
  5729  00006F                     GetNumber@This:
  5730                           	opt stack 0
  5731  00006F                     GetNumberUnsigned@This:
  5732                           	opt stack 0
  5733  00006F                     ___awdiv@quotient:
  5734                           	opt stack 0
  5735  00006F                     Reverse_4Byte@temp:
  5736                           	opt stack 0
  5737                           
  5738                           ; 4 bytes @ 0xF
  5739  00006F                     	ds	1
  5740  000070                     ?___llmod:
  5741                           	opt stack 0
  5742  000070                     BufferCopy@shift:
  5743                           	opt stack 0
  5744  000070                     StringContainsCaseInsensitive@i:
  5745                           	opt stack 0
  5746  000070                     InternalADC_Read@AnaChanSel:
  5747                           	opt stack 0
  5748  000070                     SendRF_Channel@channel:
  5749                           	opt stack 0
  5750  000070                     __tdiv_to_l_@cntr:
  5751                           	opt stack 0
  5752  000070                     UARTstringCRLN@data:
  5753                           	opt stack 0
  5754  000070                     UARTstringCRLN_CONST@data:
  5755                           	opt stack 0
  5756  000070                     UARTcommandMenu@Command:
  5757                           	opt stack 0
  5758  000070                     ___llmod@dividend:
  5759                           	opt stack 0
  5760                           
  5761                           ; 4 bytes @ 0x10
  5762  000070                     	ds	1
  5763  000071                     ?___wmul:
  5764                           	opt stack 0
  5765  000071                     BufferCopy@i:
  5766                           	opt stack 0
  5767  000071                     GetNumber@CommaNumber:
  5768                           	opt stack 0
  5769  000071                     GetNumberUnsigned@CommaNumber:
  5770                           	opt stack 0
  5771  000071                     InternalADC_Read@channel:
  5772                           	opt stack 0
  5773  000071                     __tdiv_to_l_@exp1:
  5774                           	opt stack 0
  5775  000071                     ___wmul@multiplier:
  5776                           	opt stack 0
  5777  000071                     ___ftdiv@f2:
  5778                           	opt stack 0
  5779                           
  5780                           ; 3 bytes @ 0x11
  5781  000071                     	ds	1
  5782  000072                     WaitForIRsignal@timeout:
  5783                           	opt stack 0
  5784  000072                     GetNumber@result:
  5785                           	opt stack 0
  5786  000072                     GetNumberUnsigned@result:
  5787                           	opt stack 0
  5788  000072                     StringAddEqual@Input:
  5789                           	opt stack 0
  5790  000072                     UARTcommandMenu@Desc:
  5791                           	opt stack 0
  5792                           
  5793                           ; 2 bytes @ 0x12
  5794  000072                     	ds	1
  5795  000073                     DecodeNEC@temp2:
  5796                           	opt stack 0
  5797  000073                     ___altoft@exp:
  5798                           	opt stack 0
  5799  000073                     ___lltoft@exp:
  5800                           	opt stack 0
  5801  000073                     ___wmul@multiplicand:
  5802                           	opt stack 0
  5803  000073                     SendNEC_bytes@code:
  5804                           	opt stack 0
  5805                           
  5806                           ; 4 bytes @ 0x13
  5807  000073                     	ds	1
  5808  000074                     ??___ftdiv:
  5809  000074                     ??_GetNumber:
  5810  000074                     ??_GetNumberUnsigned:
  5811  000074                     ??_StringAddEqual:
  5812  000074                     ??_UARTcommandMenu:
  5813  000074                     DecodeNEC@temp3:
  5814                           	opt stack 0
  5815  000074                     ___altoft@sign:
  5816                           	opt stack 0
  5817  000074                     ___llmod@divisor:
  5818                           	opt stack 0
  5819                           
  5820                           ; 4 bytes @ 0x14
  5821  000074                     	ds	1
  5822  000075                     DecodeNEC@temp1:
  5823                           	opt stack 0
  5824  000075                     ___wmul@product:
  5825                           	opt stack 0
  5826                           
  5827                           ; 2 bytes @ 0x15
  5828  000075                     	ds	1
  5829  000076                     StringAddEqual@NullPosition:
  5830                           	opt stack 0
  5831                           
  5832                           ; 1 bytes @ 0x16
  5833  000076                     	ds	1
  5834  000077                     StringAddEqual@firstnumber:
  5835                           	opt stack 0
  5836  000077                     SendNEC_bytes@RepeatAmount:
  5837                           	opt stack 0
  5838  000077                     ___ftdiv@cntr:
  5839                           	opt stack 0
  5840                           
  5841                           ; 1 bytes @ 0x17
  5842  000077                     	ds	1
  5843  000078                     StringAddEqual@i:
  5844                           	opt stack 0
  5845  000078                     ___llmod@counter:
  5846                           	opt stack 0
  5847  000078                     ___ftdiv@f3:
  5848                           	opt stack 0
  5849  000078                     SendNEC_wait@code:
  5850                           	opt stack 0
  5851                           
  5852                           ; 4 bytes @ 0x18
  5853  000078                     	ds	1
  5854  000079                     GetNumber@tempCommaNumber:
  5855                           	opt stack 0
  5856  000079                     GetNumberUnsigned@tempCommaNumber:
  5857                           	opt stack 0
  5858  000079                     StringAddEqual@j:
  5859                           	opt stack 0
  5860  000079                     UARTcommandMenu@i:
  5861                           	opt stack 0
  5862                           
  5863                           ; 1 bytes @ 0x19
  5864  000079                     	ds	1
  5865  00007A                     GetNumber@negative:
  5866                           	opt stack 0
  5867  00007A                     GetNumberUnsigned@count:
  5868                           	opt stack 0
  5869  00007A                     UARTcommandMenu@place:
  5870                           	opt stack 0
  5871                           
  5872                           ; 1 bytes @ 0x1A
  5873  00007A                     	ds	1
  5874  00007B                     GetNumber@count:
  5875                           	opt stack 0
  5876  00007B                     GetNumberUnsigned@Hex:
  5877                           	opt stack 0
  5878  00007B                     ___ftdiv@exp:
  5879                           	opt stack 0
  5880                           
  5881                           ; 1 bytes @ 0x1B
  5882  00007B                     	ds	1
  5883  00007C                     GetNumber@Hex:
  5884                           	opt stack 0
  5885  00007C                     GetNumberUnsigned@i:
  5886                           	opt stack 0
  5887  00007C                     SendNEC_wait@RepeatAmount:
  5888                           	opt stack 0
  5889  00007C                     ___ftdiv@sign:
  5890                           	opt stack 0
  5891                           
  5892                           ; 1 bytes @ 0x1C
  5893  00007C                     	ds	1
  5894  00007D                     ?___ftmul:
  5895                           	opt stack 0
  5896  00007D                     GetNumber@i:
  5897                           	opt stack 0
  5898  00007D                     SendNEC_wait@toggle:
  5899                           	opt stack 0
  5900  00007D                     ___ftmul@f1:
  5901                           	opt stack 0
  5902  00007D                     GetNumberUnsigned@temp:
  5903                           	opt stack 0
  5904                           
  5905                           ; 4 bytes @ 0x1D
  5906  00007D                     	ds	1
  5907  00007E                     GetNumber@tempThis:
  5908                           	opt stack 0
  5909                           
  5910                           ; 1 bytes @ 0x1E
  5911  00007E                     	ds	1
  5912  00007F                     GetNumber@temp:
  5913                           	opt stack 0
  5914  00007F                     GetMemoryLong@temp:
  5915                           	opt stack 0
  5916  00007F                     EncodeNEC@temp1:
  5917                           	opt stack 0
  5918                           
  5919                           ; 4 bytes @ 0x1F
  5920  00007F                     	ds	1
  5921  000080                     ___ftmul@f2:
  5922                           	opt stack 0
  5923                           
  5924                           ; 3 bytes @ 0x20
  5925  000080                     	ds	1
  5926  000081                     GetNumberUnsigned@tempThis:
  5927                           	opt stack 0
  5928                           
  5929                           ; 1 bytes @ 0x21
  5930  000081                     	ds	2
  5931  000083                     ??___ftmul:
  5932  000083                     GetMemoryLong@H:
  5933                           	opt stack 0
  5934  000083                     EncodeNEC@temp2:
  5935                           	opt stack 0
  5936                           
  5937                           ; 4 bytes @ 0x23
  5938  000083                     	ds	1
  5939  000084                     GetMemoryLong@MH:
  5940                           	opt stack 0
  5941                           
  5942                           ; 1 bytes @ 0x24
  5943  000084                     	ds	1
  5944  000085                     GetMemoryLong@ML:
  5945                           	opt stack 0
  5946                           
  5947                           ; 1 bytes @ 0x25
  5948  000085                     	ds	1
  5949  000086                     GetMemoryLong@L:
  5950                           	opt stack 0
  5951  000086                     ___ftmul@exp:
  5952                           	opt stack 0
  5953                           
  5954                           ; 1 bytes @ 0x26
  5955  000086                     	ds	1
  5956  000087                     GetMemoryLong@AddressFirst:
  5957                           	opt stack 0
  5958  000087                     ___ftmul@f3_as_product:
  5959                           	opt stack 0
  5960  000087                     EncodeNEC@temp3:
  5961                           	opt stack 0
  5962                           
  5963                           ; 4 bytes @ 0x27
  5964  000087                     	ds	1
  5965  000088                     GetEEPROM1@Temp:
  5966                           	opt stack 0
  5967  000088                     GetEEPROM2@Temp:
  5968                           	opt stack 0
  5969  000088                     SetMemoryLong@Data:
  5970                           	opt stack 0
  5971                           
  5972                           ; 4 bytes @ 0x28
  5973  000088                     	ds	2
  5974  00008A                     ??_GetEEPROM1:
  5975  00008A                     ??_GetEEPROM2:
  5976  00008A                     ___ftmul@cntr:
  5977                           	opt stack 0
  5978                           
  5979                           ; 1 bytes @ 0x2A
  5980  00008A                     	ds	1
  5981  00008B                     ___ftmul@sign:
  5982                           	opt stack 0
  5983  00008B                     EncodeNEC@temp4:
  5984                           	opt stack 0
  5985                           
  5986                           ; 4 bytes @ 0x2B
  5987  00008B                     	ds	1
  5988  00008C                     ?_ReadVoltage:
  5989                           	opt stack 0
  5990  00008C                     ?_fround:
  5991                           	opt stack 0
  5992  00008C                     ?_scale:
  5993                           	opt stack 0
  5994  00008C                     GetEEPROM1@Arrayspot:
  5995                           	opt stack 0
  5996  00008C                     GetEEPROM2@Arrayspot:
  5997                           	opt stack 0
  5998  00008C                     SetMemoryLong@AddressFirst:
  5999                           	opt stack 0
  6000                           
  6001                           ; 1 bytes @ 0x2C
  6002  00008C                     	ds	1
  6003  00008D                     ??_SetMemoryLong:
  6004  00008D                     GetEEPROM1@i:
  6005                           	opt stack 0
  6006  00008D                     GetEEPROM2@i:
  6007                           	opt stack 0
  6008                           
  6009                           ; 1 bytes @ 0x2D
  6010  00008D                     	ds	1
  6011  00008E                     GetEEPROM1@j:
  6012                           	opt stack 0
  6013  00008E                     GetEEPROM2@j:
  6014                           	opt stack 0
  6015                           
  6016                           ; 1 bytes @ 0x2E
  6017  00008E                     	ds	1
  6018  00008F                     GetEEPROM2@k:
  6019                           	opt stack 0
  6020  00008F                     EncodeNEC@address:
  6021                           	opt stack 0
  6022  00008F                     ReadVoltage@voltage:
  6023                           	opt stack 0
  6024  00008F                     _fround$3918:
  6025                           	opt stack 0
  6026  00008F                     _scale$3919:
  6027                           	opt stack 0
  6028                           
  6029                           ; 3 bytes @ 0x2F
  6030  00008F                     	ds	1
  6031  000090                     ??_SyncEEPROMToGlobal:
  6032                           
  6033                           ; 0 bytes @ 0x30
  6034  000090                     	ds	1
  6035  000091                     SetMemoryLong@Test:
  6036                           	opt stack 0
  6037                           
  6038                           ; 4 bytes @ 0x31
  6039  000091                     	ds	1
  6040  000092                     scale@scl:
  6041                           	opt stack 0
  6042  000092                     ReadVoltage@temp:
  6043                           	opt stack 0
  6044  000092                     _fround$3917:
  6045                           	opt stack 0
  6046                           
  6047                           ; 3 bytes @ 0x32
  6048  000092                     	ds	2
  6049  000094                     SyncEEPROMToGlobal@Temp2:
  6050                           	opt stack 0
  6051                           
  6052                           ; 64 bytes @ 0x34
  6053  000094                     	ds	1
  6054  000095                     SetMemoryLong@H:
  6055                           	opt stack 0
  6056  000095                     fround@prec:
  6057                           	opt stack 0
  6058                           
  6059                           ; 1 bytes @ 0x35
  6060  000095                     	ds	1
  6061  000096                     ?___ftadd:
  6062                           	opt stack 0
  6063  000096                     SetMemoryLong@MH:
  6064                           	opt stack 0
  6065  000096                     ___ftadd@f1:
  6066                           	opt stack 0
  6067                           
  6068                           ; 3 bytes @ 0x36
  6069  000096                     	ds	1
  6070  000097                     SetMemoryLong@ML:
  6071                           	opt stack 0
  6072                           
  6073                           ; 1 bytes @ 0x37
  6074  000097                     	ds	1
  6075  000098                     SetMemoryLong@L:
  6076                           	opt stack 0
  6077                           
  6078                           ; 1 bytes @ 0x38
  6079  000098                     	ds	1
  6080  000099                     ?_SetEEPROM2:
  6081                           	opt stack 0
  6082  000099                     ?_SetEEPROM1:
  6083                           	opt stack 0
  6084  000099                     ___ftadd@f2:
  6085                           	opt stack 0
  6086  000099                     SetEEPROM1@Temp:
  6087                           	opt stack 0
  6088  000099                     SetEEPROM2@Temp:
  6089                           	opt stack 0
  6090                           
  6091                           ; 64 bytes @ 0x39
  6092  000099                     	ds	3
  6093  00009C                     ??___ftadd:
  6094                           
  6095                           ; 0 bytes @ 0x3C
  6096  00009C                     	ds	3
  6097  00009F                     ___ftadd@sign:
  6098                           	opt stack 0
  6099                           
  6100                           ; 1 bytes @ 0x3F
  6101  00009F                     	ds	1
  6102  0000A0                     ___ftadd@exp2:
  6103                           	opt stack 0
  6104                           
  6105                           ; 1 bytes @ 0x40
  6106  0000A0                     	ds	1
  6107  0000A1                     ___ftadd@exp1:
  6108                           	opt stack 0
  6109                           
  6110                           ; 1 bytes @ 0x41
  6111  0000A1                     	ds	1
  6112  0000A2                     ?___ftsub:
  6113                           	opt stack 0
  6114  0000A2                     ?___fttol:
  6115                           	opt stack 0
  6116  0000A2                     ___ftsub@f1:
  6117                           	opt stack 0
  6118  0000A2                     ___fttol@f1:
  6119                           	opt stack 0
  6120                           
  6121                           ; 3 bytes @ 0x42
  6122  0000A2                     	ds	3
  6123  0000A5                     ___ftsub@f2:
  6124                           	opt stack 0
  6125                           
  6126                           ; 3 bytes @ 0x45
  6127  0000A5                     	ds	1
  6128  0000A6                     ??___fttol:
  6129                           
  6130                           ; 0 bytes @ 0x46
  6131  0000A6                     	ds	2
  6132  0000A8                     
  6133                           ; 0 bytes @ 0x48
  6134  0000A8                     	ds	3
  6135  0000AB                     ___fttol@sign1:
  6136                           	opt stack 0
  6137                           
  6138                           ; 1 bytes @ 0x4B
  6139  0000AB                     	ds	1
  6140  0000AC                     ___fttol@lval:
  6141                           	opt stack 0
  6142                           
  6143                           ; 4 bytes @ 0x4C
  6144  0000AC                     	ds	4
  6145  0000B0                     ___fttol@exp1:
  6146                           	opt stack 0
  6147                           
  6148                           ; 1 bytes @ 0x50
  6149  0000B0                     	ds	1
  6150  0000B1                     ?_sprintf:
  6151                           	opt stack 0
  6152  0000B1                     ?_Round:
  6153                           	opt stack 0
  6154  0000B1                     sprintf@sp:
  6155                           	opt stack 0
  6156  0000B1                     Round@input:
  6157                           	opt stack 0
  6158                           
  6159                           ; 3 bytes @ 0x51
  6160  0000B1                     	ds	2
  6161  0000B3                     sprintf@f:
  6162                           	opt stack 0
  6163                           
  6164                           ; 2 bytes @ 0x53
  6165  0000B3                     	ds	1
  6166  0000B4                     Round@temp:
  6167                           	opt stack 0
  6168                           
  6169                           ; 4 bytes @ 0x54
  6170  0000B4                     	ds	3
  6171  0000B7                     SetEEPROM1@burn:
  6172                           	opt stack 0
  6173                           
  6174                           ; 4 bytes @ 0x57
  6175  0000B7                     	ds	1
  6176  0000B8                     InitUART@Baud:
  6177                           	opt stack 0
  6178                           
  6179                           ; 4 bytes @ 0x58
  6180  0000B8                     	ds	3
  6181  0000BB                     ??_SetEEPROM1:
  6182                           
  6183                           ; 0 bytes @ 0x5B
  6184  0000BB                     	ds	1
  6185  0000BC                     ??_InitUART:
  6186                           
  6187                           ; 0 bytes @ 0x5C
  6188  0000BC                     	ds	1
  6189  0000BD                     SetEEPROM1@temp:
  6190                           	opt stack 0
  6191                           
  6192                           ; 1 bytes @ 0x5D
  6193  0000BD                     	ds	1
  6194  0000BE                     SetEEPROM1@Arrayspot:
  6195                           	opt stack 0
  6196                           
  6197                           ; 1 bytes @ 0x5E
  6198  0000BE                     	ds	1
  6199  0000BF                     ??_sprintf:
  6200  0000BF                     SetEEPROM1@fail:
  6201                           	opt stack 0
  6202                           
  6203                           ; 4 bytes @ 0x5F
  6204  0000BF                     	ds	1
  6205  0000C0                     _InitUART$3916:
  6206                           	opt stack 0
  6207                           
  6208                           ; 3 bytes @ 0x60
  6209  0000C0                     	ds	3
  6210  0000C3                     SetEEPROM1@i:
  6211                           	opt stack 0
  6212  0000C3                     InitUART@spbrg:
  6213                           	opt stack 0
  6214                           
  6215                           ; 2 bytes @ 0x63
  6216  0000C3                     	ds	1
  6217  0000C4                     SetEEPROM1@j:
  6218                           	opt stack 0
  6219                           
  6220                           ; 1 bytes @ 0x64
  6221  0000C4                     	ds	1
  6222  0000C5                     InitUART@config:
  6223                           	opt stack 0
  6224  0000C5                     _sprintf$3920:
  6225                           	opt stack 0
  6226                           
  6227                           ; 3 bytes @ 0x65
  6228  0000C5                     	ds	1
  6229  0000C6                     InitUART@temp:
  6230                           	opt stack 0
  6231                           
  6232                           ; 4 bytes @ 0x66
  6233  0000C6                     	ds	2
  6234  0000C8                     sprintf@idx:
  6235                           	opt stack 0
  6236                           
  6237                           ; 1 bytes @ 0x68
  6238  0000C8                     	ds	1
  6239  0000C9                     sprintf@cp:
  6240                           	opt stack 0
  6241                           
  6242                           ; 2 bytes @ 0x69
  6243  0000C9                     	ds	2
  6244  0000CB                     sprintf@len:
  6245                           	opt stack 0
  6246                           
  6247                           ; 2 bytes @ 0x6B
  6248  0000CB                     	ds	2
  6249  0000CD                     sprintf@ap:
  6250                           	opt stack 0
  6251                           
  6252                           ; 2 bytes @ 0x6D
  6253  0000CD                     	ds	2
  6254  0000CF                     sprintf@prec:
  6255                           	opt stack 0
  6256                           
  6257                           ; 2 bytes @ 0x6F
  6258  0000CF                     	ds	2
  6259  0000D1                     sprintf@tmpval:
  6260                           	opt stack 0
  6261                           
  6262                           ; 4 bytes @ 0x71
  6263  0000D1                     	ds	3
  6264  0000D4                     SyncEEPROMToGlobal@k:
  6265                           	opt stack 0
  6266                           
  6267                           ; 1 bytes @ 0x74
  6268  0000D4                     	ds	1
  6269  0000D5                     sprintf@exp:
  6270                           	opt stack 0
  6271  0000D5                     SyncEEPROMToGlobal@Temp1:
  6272                           	opt stack 0
  6273                           
  6274                           ; 30 bytes @ 0x75
  6275  0000D5                     	ds	2
  6276  0000D7                     sprintf@val:
  6277                           	opt stack 0
  6278                           
  6279                           ; 4 bytes @ 0x77
  6280  0000D7                     	ds	2
  6281  0000D9                     SetEEPROM2@burn:
  6282                           	opt stack 0
  6283                           
  6284                           ; 4 bytes @ 0x79
  6285  0000D9                     	ds	2
  6286  0000DB                     sprintf@fval:
  6287                           	opt stack 0
  6288                           
  6289                           ; 3 bytes @ 0x7B
  6290  0000DB                     	ds	2
  6291  0000DD                     ??_SetEEPROM2:
  6292                           
  6293                           ; 0 bytes @ 0x7D
  6294  0000DD                     	ds	1
  6295  0000DE                     sprintf@width:
  6296                           	opt stack 0
  6297                           
  6298                           ; 2 bytes @ 0x7E
  6299  0000DE                     	ds	1
  6300  0000DF                     SetEEPROM2@temp:
  6301                           	opt stack 0
  6302                           
  6303                           ; 1 bytes @ 0x7F
  6304  0000DF                     	ds	1
  6305  0000E0                     sprintf@flag:
  6306                           	opt stack 0
  6307  0000E0                     SetEEPROM2@fail:
  6308                           	opt stack 0
  6309                           
  6310                           ; 4 bytes @ 0x80
  6311  0000E0                     	ds	2
  6312  0000E2                     sprintf@c:
  6313                           	opt stack 0
  6314                           
  6315                           ; 1 bytes @ 0x82
  6316  0000E2                     	ds	1
  6317  0000E3                     
  6318                           ; 0 bytes @ 0x83
  6319  0000E3                     	ds	1
  6320  0000E4                     SetEEPROM2@Arrayspot:
  6321                           	opt stack 0
  6322                           
  6323                           ; 1 bytes @ 0x84
  6324  0000E4                     	ds	1
  6325  0000E5                     SetEEPROM2@i:
  6326                           	opt stack 0
  6327                           
  6328                           ; 1 bytes @ 0x85
  6329  0000E5                     	ds	1
  6330  0000E6                     SetEEPROM2@j:
  6331                           	opt stack 0
  6332                           
  6333                           ; 1 bytes @ 0x86
  6334  0000E6                     	ds	1
  6335  0000E7                     SetEEPROM2@k:
  6336                           	opt stack 0
  6337                           
  6338                           ; 1 bytes @ 0x87
  6339  0000E7                     	ds	1
  6340  0000E8                     SyncGlobalToEEPROM@ok:
  6341                           	opt stack 0
  6342                           
  6343                           ; 1 bytes @ 0x88
  6344  0000E8                     	ds	1
  6345  0000E9                     ??_SetEEPROMdefault:
  6346  0000E9                     UseIRCode@Code:
  6347                           	opt stack 0
  6348                           
  6349                           ; 2 bytes @ 0x89
  6350  0000E9                     	ds	2
  6351  0000EB                     SetEEPROMdefault@k:
  6352                           	opt stack 0
  6353  0000EB                     UseIRCode@NEC:
  6354                           	opt stack 0
  6355                           
  6356                           ; 4 bytes @ 0x8B
  6357  0000EB                     	ds	1
  6358  0000EC                     SetEEPROMdefault@i:
  6359                           	opt stack 0
  6360                           
  6361                           ; 1 bytes @ 0x8C
  6362  0000EC                     	ds	1
  6363  0000ED                     SetEEPROMdefault@j:
  6364                           	opt stack 0
  6365                           
  6366                           ; 1 bytes @ 0x8D
  6367  0000ED                     	ds	2
  6368  0000EF                     ??_UseIRCode:
  6369                           
  6370                           ; 0 bytes @ 0x8F
  6371  0000EF                     	ds	3
  6372  0000F2                     UseIRCode@found:
  6373                           	opt stack 0
  6374                           
  6375                           ; 1 bytes @ 0x92
  6376  0000F2                     	ds	1
  6377  0000F3                     SyncEEPROMToGlobal@i:
  6378                           	opt stack 0
  6379  0000F3                     UseIRCode@j:
  6380                           	opt stack 0
  6381                           
  6382                           ; 1 bytes @ 0x93
  6383  0000F3                     	ds	1
  6384  0000F4                     SyncEEPROMToGlobal@j:
  6385                           	opt stack 0
  6386  0000F4                     UseIRCode@i:
  6387                           	opt stack 0
  6388                           
  6389                           ; 1 bytes @ 0x94
  6390  0000F4                     	ds	1
  6391  0000F5                     UseBluetooth@String:
  6392                           	opt stack 0
  6393                           
  6394                           ; 2 bytes @ 0x95
  6395  0000F5                     	ds	2
  6396  0000F7                     UseBluetooth@StringPos:
  6397                           	opt stack 0
  6398                           
  6399                           ; 1 bytes @ 0x97
  6400  0000F7                     	ds	1
  6401  0000F8                     tblptru	equ	0xFF8
  6402                           tblptrh	equ	0xFF7
  6403                           tblptrl	equ	0xFF6
  6404                           tablat	equ	0xFF5
  6405                           postinc0	equ	0xFEE
  6406                           wreg	equ	0xFE8
  6407                           postdec1	equ	0xFE5
  6408                           fsr1l	equ	0xFE1
  6409                           
  6410                           ; 0 bytes @ 0x98
  6411                           
  6412                           	psect	cstackCOMRAM
  6413  000001                     __pcstackCOMRAM:
  6414                           	opt stack 0
  6415  000001                     IsCharacter@data:
  6416                           	opt stack 0
  6417  000001                     i1ReadUSART@data:
  6418                           	opt stack 0
  6419  000001                     i1delayUS@US:
  6420                           	opt stack 0
  6421                           
  6422                           ; 4 bytes @ 0x0
  6423  000001                     	ds	4
  6424  000005                     ??i1_delayUS:
  6425                           
  6426                           ; 0 bytes @ 0x4
  6427  000005                     	ds	1
  6428  000006                     i1delayUS@i:
  6429                           	opt stack 0
  6430                           
  6431                           ; 4 bytes @ 0x5
  6432  000006                     	ds	4
  6433  00000A                     i1UARTchar@data:
  6434                           	opt stack 0
  6435  00000A                     i1UARTchar_CONST@data:
  6436                           	opt stack 0
  6437                           
  6438                           ; 1 bytes @ 0x9
  6439  00000A                     	ds	1
  6440  00000B                     EraseScreen@characters:
  6441                           	opt stack 0
  6442  00000B                     i1UARTchar_CONST@temp:
  6443                           	opt stack 0
  6444  00000B                     i1UARTstring@data:
  6445                           	opt stack 0
  6446                           
  6447                           ; 2 bytes @ 0xA
  6448  00000B                     	ds	1
  6449  00000C                     EraseScreen@i:
  6450                           	opt stack 0
  6451  00000C                     i1UARTstring_CONST@data:
  6452                           	opt stack 0
  6453                           
  6454                           ; 2 bytes @ 0xB
  6455  00000C                     	ds	1
  6456  00000D                     
  6457                           ; 0 bytes @ 0xC
  6458  00000D                     	ds	1
  6459  00000E                     ??_low_isr:
  6460  00000E                     
  6461                           ; 0 bytes @ 0xD
  6462  00000E                     	ds	17
  6463  00001F                     low_isr@data:
  6464                           	opt stack 0
  6465                           
  6466                           ; 1 bytes @ 0x1E
  6467  00001F                     	ds	1
  6468  000020                     SetTimer0@temp:
  6469                           	opt stack 0
  6470  000020                     IRrawToNEC@Raw:
  6471                           	opt stack 0
  6472  000020                     i2cleanBuffer16bit@data:
  6473                           	opt stack 0
  6474                           
  6475                           ; 2 bytes @ 0x1F
  6476  000020                     	ds	2
  6477  000022                     IRrawToNEC@NEC:
  6478                           	opt stack 0
  6479  000022                     i2cleanBuffer16bit@count:
  6480                           	opt stack 0
  6481                           
  6482                           ; 2 bytes @ 0x21
  6483  000022                     	ds	2
  6484  000024                     ??i2_cleanBuffer16bit:
  6485  000024                     IRrawToNEC@Invert:
  6486                           	opt stack 0
  6487                           
  6488                           ; 1 bytes @ 0x23
  6489  000024                     	ds	1
  6490  000025                     ??_IRrawToNEC:
  6491                           
  6492                           ; 0 bytes @ 0x24
  6493  000025                     	ds	2
  6494  000027                     i2cleanBuffer16bit@i:
  6495                           	opt stack 0
  6496  000027                     IRrawToNEC@NECtemp:
  6497                           	opt stack 0
  6498                           
  6499                           ; 4 bytes @ 0x26
  6500  000027                     	ds	4
  6501  00002B                     IRrawToNEC@first:
  6502                           	opt stack 0
  6503                           
  6504                           ; 1 bytes @ 0x2A
  6505  00002B                     	ds	1
  6506  00002C                     IRrawToNEC@i:
  6507                           	opt stack 0
  6508                           
  6509                           ; 1 bytes @ 0x2B
  6510  00002C                     	ds	1
  6511  00002D                     IRrawToNEC@StartBit:
  6512                           	opt stack 0
  6513                           
  6514                           ; 1 bytes @ 0x2C
  6515  00002D                     	ds	1
  6516  00002E                     ??_high_isr:
  6517                           
  6518                           ; 0 bytes @ 0x2D
  6519  00002E                     	ds	18
  6520                           tblptru	equ	0xFF8
  6521                           tblptrh	equ	0xFF7
  6522                           tblptrl	equ	0xFF6
  6523                           tablat	equ	0xFF5
  6524                           postinc0	equ	0xFEE
  6525                           wreg	equ	0xFE8
  6526                           postdec1	equ	0xFE5
  6527                           fsr1l	equ	0xFE1
  6528                           
  6529 ;;
  6530 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6531 ;;
  6532 ;; *************** function _main *****************
  6533 ;; Defined at:
  6534 ;;		line 84 in file "main.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;		None
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  BluetoothStr  100  148[BANK2 ] unsigned char [100]
  6539 ;;  i               1  254[BANK2 ] unsigned char 
  6540 ;;  Connected       1  253[BANK2 ] unsigned char 
  6541 ;;  VoltageStatu    1  252[BANK2 ] unsigned char 
  6542 ;;  ConnectedOLD    1  251[BANK2 ] unsigned char 
  6543 ;;  BluetoothStr    1  250[BANK2 ] unsigned char 
  6544 ;;  Bluetoothtas    1  249[BANK2 ] unsigned char 
  6545 ;;  IRtask          1  248[BANK2 ] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;		None               void
  6548 ;; Registers used:
  6549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;      Locals:         0       0       0     107       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Totals:         0       0       0     107       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;Total ram usage:      107 bytes
  6560 ;; Hardware stack levels required when called:   14
  6561 ;; This function calls:
  6562 ;;		_BlueConnected
  6563 ;;		_BufferCopy
  6564 ;;		_ClearUSART
  6565 ;;		_ConfigureOscillator
  6566 ;;		_InitApp
  6567 ;;		_Init_System
  6568 ;;		_ReadIRpin
  6569 ;;		_ReadVoltage
  6570 ;;		_UARTchar
  6571 ;;		_UARTchar_CONST
  6572 ;;		_UARTstringCRLN_CONST
  6573 ;;		_UARTstring_CONST
  6574 ;;		_UseBluetooth
  6575 ;;		_UseIRCode
  6576 ;;		___ftadd
  6577 ;;		___ftge
  6578 ;;		___ftsub
  6579 ;;		_cleanBuffer
  6580 ;;		_delayUS
  6581 ;; This function is called by:
  6582 ;;		Startup code after reset
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text0
  6587  0052DA                     __ptext0:
  6588                           	opt stack 0
  6589  0052DA                     _main:
  6590                           	opt stack 17
  6591                           
  6592                           ;main.c: 86: unsigned char i=0;
  6593                           
  6594                           ;incstack = 0
  6595  0052DA  0E00               	movlw	0
  6596  0052DC  0102               	movlb	2	; () banked
  6597  0052DE  6FFE               	movwf	main@i& (0+255),b
  6598                           
  6599                           ;main.c: 87: unsigned char IRtask = 0;
  6600  0052E0  0E00               	movlw	0
  6601  0052E2  0102               	movlb	2	; () banked
  6602  0052E4  6FF8               	movwf	main@IRtask& (0+255),b
  6603                           
  6604                           ;main.c: 88: unsigned char Bluetoothtask = 0;
  6605  0052E6  0E00               	movlw	0
  6606  0052E8  0102               	movlb	2	; () banked
  6607  0052EA  6FF9               	movwf	main@Bluetoothtask& (0+255),b
  6608                           
  6609                           ;main.c: 89: unsigned char VoltageStatus = 1;
  6610  0052EC  0E01               	movlw	1
  6611  0052EE  0102               	movlb	2	; () banked
  6612  0052F0  6FFC               	movwf	main@VoltageStatus& (0+255),b
  6613                           
  6614                           ;main.c: 90: unsigned char BluetoothString[100];
  6615                           ;main.c: 91: unsigned char BluetoothStringPos = 0;
  6616  0052F2  0E00               	movlw	0
  6617  0052F4  0102               	movlb	2	; () banked
  6618  0052F6  6FFA               	movwf	main@BluetoothStringPos& (0+255),b
  6619                           
  6620                           ; BSR set to: 2
  6621                           ;main.c: 92: unsigned char Connected, ConnectedOLD;
  6622                           ;main.c: 94: cleanBuffer(BluetoothString, 100);
  6623  0052F8  0E94               	movlw	low main@BluetoothString
  6624  0052FA  0100               	movlb	0	; () banked
  6625  0052FC  6F63               	movwf	cleanBuffer@data& (0+255),b
  6626  0052FE  0E02               	movlw	high main@BluetoothString
  6627  005300  0100               	movlb	0	; () banked
  6628  005302  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
  6629  005304  0E00               	movlw	0
  6630  005306  0100               	movlb	0	; () banked
  6631  005308  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
  6632  00530A  0E64               	movlw	100
  6633  00530C  6F65               	movwf	cleanBuffer@count& (0+255),b
  6634  00530E  EC47  F04E         	call	_cleanBuffer	;wreg free
  6635                           
  6636                           ;main.c: 96: ConfigureOscillator();
  6637  005312  ECA2  F052         	call	_ConfigureOscillator	;wreg free
  6638                           
  6639                           ;main.c: 97: InitApp();
  6640  005316  EC40  F04F         	call	_InitApp	;wreg free
  6641                           
  6642                           ;main.c: 98: Init_System();
  6643  00531A  EC48  F03B         	call	_Init_System	;wreg free
  6644                           
  6645                           ;main.c: 100: BatteryVoltage = ReadVoltage();
  6646  00531E  EC72  F048         	call	_ReadVoltage	;wreg free
  6647  005322  C08C  F040         	movff	?_ReadVoltage,_BatteryVoltage
  6648  005326  C08D  F041         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  6649  00532A  C08E  F042         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  6650                           
  6651                           ;main.c: 101: if(BatteryVoltage < 3.7 )
  6652  00532E  C040  F063         	movff	_BatteryVoltage,___ftge@ff1
  6653  005332  C041  F064         	movff	_BatteryVoltage+1,___ftge@ff1+1
  6654  005336  C042  F065         	movff	_BatteryVoltage+2,___ftge@ff1+2
  6655  00533A  0ECD               	movlw	205
  6656  00533C  0100               	movlb	0	; () banked
  6657  00533E  6F66               	movwf	___ftge@ff2& (0+255),b
  6658  005340  0E6C               	movlw	108
  6659  005342  0100               	movlb	0	; () banked
  6660  005344  6F67               	movwf	(___ftge@ff2+1)& (0+255),b
  6661  005346  0E40               	movlw	64
  6662  005348  0100               	movlb	0	; () banked
  6663  00534A  6F68               	movwf	(___ftge@ff2+2)& (0+255),b
  6664  00534C  ECE1  F046         	call	___ftge	;wreg free
  6665  005350  0100               	movlb	0	; () banked
  6666  005352  B0D8               	btfsc	status,0,c
  6667  005354  D002               	goto	l13024
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;main.c: 102: {
  6671                           ;main.c: 103: VoltageStatus = 34;
  6672  005356  0E22               	movlw	34
  6673  005358  D015               	goto	L1
  6674  00535A                     l13024:
  6675                           
  6676                           ;main.c: 105: else if (BatteryVoltage > 30.0)
  6677  00535A  0E00               	movlw	0
  6678  00535C  0100               	movlb	0	; () banked
  6679  00535E  6F63               	movwf	___ftge@ff1& (0+255),b
  6680  005360  0EF0               	movlw	240
  6681  005362  0100               	movlb	0	; () banked
  6682  005364  6F64               	movwf	(___ftge@ff1+1)& (0+255),b
  6683  005366  0E41               	movlw	65
  6684  005368  0100               	movlb	0	; () banked
  6685  00536A  6F65               	movwf	(___ftge@ff1+2)& (0+255),b
  6686  00536C  C040  F066         	movff	_BatteryVoltage,___ftge@ff2
  6687  005370  C041  F067         	movff	_BatteryVoltage+1,___ftge@ff2+1
  6688  005374  C042  F068         	movff	_BatteryVoltage+2,___ftge@ff2+2
  6689  005378  ECE1  F046         	call	___ftge	;wreg free
  6690  00537C  0100               	movlb	0	; () banked
  6691  00537E  B0D8               	btfsc	status,0,c
  6692  005380  D004               	goto	l13028
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;main.c: 106: {
  6696                           ;main.c: 107: VoltageStatus = 98;
  6697  005382  0E62               	movlw	98
  6698  005384                     L1:
  6699  005384  0102               	movlb	2	; () banked
  6700  005386  6FFC               	movwf	main@VoltageStatus& (0+255),b
  6701                           
  6702                           ; BSR set to: 2
  6703  005388  D000               	goto	l13028
  6704  00538A                     l13028:
  6705                           
  6706                           ;main.c: 108: }
  6707                           ;main.c: 109: if(VoltageStatus == 1)
  6708  00538A  0102               	movlb	2	; () banked
  6709  00538C  05FC               	decf	main@VoltageStatus& (0+255),w,b
  6710  00538E  A4D8               	btfss	status,2,c
  6711  005390  D027               	goto	l13050
  6712                           
  6713                           ; BSR set to: 2
  6714                           ;main.c: 110: {
  6715                           ;main.c: 112: for(i =0;i<10;i++)
  6716  005392  0E00               	movlw	0
  6717  005394  0102               	movlb	2	; () banked
  6718  005396  6FFE               	movwf	main@i& (0+255),b
  6719  005398                     l13032:
  6720                           
  6721                           ; BSR set to: 2
  6722  005398  0E09               	movlw	9
  6723  00539A  0102               	movlb	2	; () banked
  6724  00539C  65FE               	cpfsgt	main@i& (0+255),b
  6725  00539E  D001               	goto	l13036
  6726                           
  6727                           ; BSR set to: 2
  6728  0053A0  D01D               	goto	l13048
  6729  0053A2                     l13036:
  6730                           
  6731                           ; BSR set to: 2
  6732                           ;main.c: 113: {
  6733                           ;main.c: 114: (LATC |= 0x02);
  6734  0053A2  828B               	bsf	3979,1,c	;volatile
  6735                           
  6736                           ;main.c: 115: (LATC &= ~0x04);
  6737  0053A4  948B               	bcf	3979,2,c	;volatile
  6738                           
  6739                           ; BSR set to: 2
  6740                           ;main.c: 116: delayUS(50000);
  6741  0053A6  0E50               	movlw	80
  6742  0053A8  0100               	movlb	0	; () banked
  6743  0053AA  6F63               	movwf	delayUS@US& (0+255),b
  6744  0053AC  0EC3               	movlw	195
  6745  0053AE  6F64               	movwf	(delayUS@US+1)& (0+255),b
  6746  0053B0  0E00               	movlw	0
  6747  0053B2  6F65               	movwf	(delayUS@US+2)& (0+255),b
  6748  0053B4  0E00               	movlw	0
  6749  0053B6  6F66               	movwf	(delayUS@US+3)& (0+255),b
  6750  0053B8  ECA0  F04E         	call	_delayUS	;wreg free
  6751                           
  6752                           ;main.c: 117: (LATC &= ~0x02);
  6753  0053BC  928B               	bcf	3979,1,c	;volatile
  6754                           
  6755                           ;main.c: 118: (LATC |= 0x04);
  6756  0053BE  848B               	bsf	3979,2,c	;volatile
  6757                           
  6758                           ;main.c: 119: delayUS(50000);
  6759  0053C0  0E50               	movlw	80
  6760  0053C2  0100               	movlb	0	; () banked
  6761  0053C4  6F63               	movwf	delayUS@US& (0+255),b
  6762  0053C6  0EC3               	movlw	195
  6763  0053C8  6F64               	movwf	(delayUS@US+1)& (0+255),b
  6764  0053CA  0E00               	movlw	0
  6765  0053CC  6F65               	movwf	(delayUS@US+2)& (0+255),b
  6766  0053CE  0E00               	movlw	0
  6767  0053D0  6F66               	movwf	(delayUS@US+3)& (0+255),b
  6768  0053D2  ECA0  F04E         	call	_delayUS	;wreg free
  6769  0053D6  0102               	movlb	2	; () banked
  6770  0053D8  2BFE               	incf	main@i& (0+255),f,b
  6771  0053DA  D7DE               	goto	l13032
  6772  0053DC                     l13048:
  6773                           
  6774                           ; BSR set to: 2
  6775                           ;main.c: 120: }
  6776                           ;main.c: 121: (LATC &= ~0x04);
  6777  0053DC  948B               	bcf	3979,2,c	;volatile
  6778                           
  6779                           ;main.c: 122: }
  6780  0053DE  D024               	goto	l13066
  6781  0053E0                     l13050:
  6782                           
  6783                           ; BSR set to: 2
  6784                           ;main.c: 123: else
  6785                           ;main.c: 124: {
  6786                           ;main.c: 125: for(i =0;i<10;i++)
  6787  0053E0  0E00               	movlw	0
  6788  0053E2  0102               	movlb	2	; () banked
  6789  0053E4  6FFE               	movwf	main@i& (0+255),b
  6790  0053E6                     l13052:
  6791                           
  6792                           ; BSR set to: 2
  6793  0053E6  0E09               	movlw	9
  6794  0053E8  0102               	movlb	2	; () banked
  6795  0053EA  65FE               	cpfsgt	main@i& (0+255),b
  6796  0053EC  D001               	goto	l13056
  6797                           
  6798                           ; BSR set to: 2
  6799  0053EE  D01C               	goto	l13066
  6800  0053F0                     l13056:
  6801                           
  6802                           ; BSR set to: 2
  6803                           ;main.c: 126: {
  6804                           ;main.c: 127: (LATC |= 0x02);
  6805  0053F0  828B               	bsf	3979,1,c	;volatile
  6806                           
  6807                           ; BSR set to: 2
  6808                           ;main.c: 128: delayUS(100000);
  6809  0053F2  0EA0               	movlw	160
  6810  0053F4  0100               	movlb	0	; () banked
  6811  0053F6  6F63               	movwf	delayUS@US& (0+255),b
  6812  0053F8  0E86               	movlw	134
  6813  0053FA  6F64               	movwf	(delayUS@US+1)& (0+255),b
  6814  0053FC  0E01               	movlw	1
  6815  0053FE  6F65               	movwf	(delayUS@US+2)& (0+255),b
  6816  005400  0E00               	movlw	0
  6817  005402  6F66               	movwf	(delayUS@US+3)& (0+255),b
  6818  005404  ECA0  F04E         	call	_delayUS	;wreg free
  6819                           
  6820                           ;main.c: 129: (LATC &= ~0x02);
  6821  005408  928B               	bcf	3979,1,c	;volatile
  6822                           
  6823                           ;main.c: 130: delayUS(100000);
  6824  00540A  0EA0               	movlw	160
  6825  00540C  0100               	movlb	0	; () banked
  6826  00540E  6F63               	movwf	delayUS@US& (0+255),b
  6827  005410  0E86               	movlw	134
  6828  005412  6F64               	movwf	(delayUS@US+1)& (0+255),b
  6829  005414  0E01               	movlw	1
  6830  005416  6F65               	movwf	(delayUS@US+2)& (0+255),b
  6831  005418  0E00               	movlw	0
  6832  00541A  6F66               	movwf	(delayUS@US+3)& (0+255),b
  6833  00541C  ECA0  F04E         	call	_delayUS	;wreg free
  6834  005420  0102               	movlb	2	; () banked
  6835  005422  2BFE               	incf	main@i& (0+255),f,b
  6836  005424  D7E0               	goto	l13052
  6837                           
  6838                           ; BSR set to: 2
  6839                           
  6840                           ; BSR set to: 2
  6841  005426  D000               	goto	l13066
  6842  005428                     l13066:
  6843                           
  6844                           ; BSR set to: 2
  6845                           ;main.c: 131: }
  6846                           ;main.c: 132: }
  6847                           ;main.c: 133: Connected = BlueConnected();
  6848  005428  EC5E  F052         	call	_BlueConnected	;wreg free
  6849  00542C  0102               	movlb	2	; () banked
  6850  00542E  6FFD               	movwf	main@Connected& (0+255),b
  6851                           
  6852                           ; BSR set to: 2
  6853                           ;main.c: 134: ConnectedOLD = 0;
  6854  005430  0E00               	movlw	0
  6855  005432  0102               	movlb	2	; () banked
  6856  005434  6FFB               	movwf	main@ConnectedOLD& (0+255),b
  6857  005436  D000               	goto	l13070
  6858  005438                     l13070:
  6859                           
  6860                           ;main.c: 136: {
  6861                           ;main.c: 137: IRtask = IR_New_Code;
  6862  005438  C0FD  F2F8         	movff	_IR_New_Code,main@IRtask
  6863                           
  6864                           ;main.c: 138: Bluetoothtask = NewReceivedString;
  6865  00543C  C0F9  F2F9         	movff	_NewReceivedString,main@Bluetoothtask	;volatile
  6866                           
  6867                           ;main.c: 140: BatteryVoltage = ReadVoltage();
  6868  005440  EC72  F048         	call	_ReadVoltage	;wreg free
  6869  005444  C08C  F040         	movff	?_ReadVoltage,_BatteryVoltage
  6870  005448  C08D  F041         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  6871  00544C  C08E  F042         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  6872                           
  6873                           ;main.c: 142: if(VoltageStatus == 34)
  6874  005450  0E22               	movlw	34
  6875  005452  0102               	movlb	2	; () banked
  6876  005454  19FC               	xorwf	main@VoltageStatus& (0+255),w,b
  6877  005456  A4D8               	btfss	status,2,c
  6878  005458  D018               	goto	l13080
  6879                           
  6880                           ; BSR set to: 2
  6881                           ;main.c: 143: {
  6882                           ;main.c: 144: BatteryVoltage -= 0.5;
  6883  00545A  C040  F0A2         	movff	_BatteryVoltage,___ftsub@f1
  6884  00545E  C041  F0A3         	movff	_BatteryVoltage+1,___ftsub@f1+1
  6885  005462  C042  F0A4         	movff	_BatteryVoltage+2,___ftsub@f1+2
  6886  005466  0E00               	movlw	0
  6887  005468  0100               	movlb	0	; () banked
  6888  00546A  6FA5               	movwf	___ftsub@f2& (0+255),b
  6889  00546C  0E00               	movlw	0
  6890  00546E  0100               	movlb	0	; () banked
  6891  005470  6FA6               	movwf	(___ftsub@f2+1)& (0+255),b
  6892  005472  0E3F               	movlw	63
  6893  005474  0100               	movlb	0	; () banked
  6894  005476  6FA7               	movwf	(___ftsub@f2+2)& (0+255),b
  6895  005478  ECF5  F04E         	call	___ftsub	;wreg free
  6896  00547C  C0A2  F040         	movff	?___ftsub,_BatteryVoltage
  6897  005480  C0A3  F041         	movff	?___ftsub+1,_BatteryVoltage+1
  6898  005484  C0A4  F042         	movff	?___ftsub+2,_BatteryVoltage+2
  6899                           
  6900                           ;main.c: 145: }
  6901  005488  D01D               	goto	l150
  6902  00548A                     l13080:
  6903                           
  6904                           ;main.c: 146: else if(VoltageStatus == 98)
  6905  00548A  0E62               	movlw	98
  6906  00548C  0102               	movlb	2	; () banked
  6907  00548E  19FC               	xorwf	main@VoltageStatus& (0+255),w,b
  6908  005490  A4D8               	btfss	status,2,c
  6909  005492  D018               	goto	l150
  6910                           
  6911                           ; BSR set to: 2
  6912                           ;main.c: 147: {
  6913                           ;main.c: 148: BatteryVoltage += 0.5;
  6914  005494  C040  F096         	movff	_BatteryVoltage,___ftadd@f1
  6915  005498  C041  F097         	movff	_BatteryVoltage+1,___ftadd@f1+1
  6916  00549C  C042  F098         	movff	_BatteryVoltage+2,___ftadd@f1+2
  6917  0054A0  0E00               	movlw	0
  6918  0054A2  0100               	movlb	0	; () banked
  6919  0054A4  6F99               	movwf	___ftadd@f2& (0+255),b
  6920  0054A6  0E00               	movlw	0
  6921  0054A8  0100               	movlb	0	; () banked
  6922  0054AA  6F9A               	movwf	(___ftadd@f2+1)& (0+255),b
  6923  0054AC  0E3F               	movlw	63
  6924  0054AE  0100               	movlb	0	; () banked
  6925  0054B0  6F9B               	movwf	(___ftadd@f2+2)& (0+255),b
  6926  0054B2  EC5A  F033         	call	___ftadd	;wreg free
  6927  0054B6  C096  F040         	movff	?___ftadd,_BatteryVoltage
  6928  0054BA  C097  F041         	movff	?___ftadd+1,_BatteryVoltage+1
  6929  0054BE  C098  F042         	movff	?___ftadd+2,_BatteryVoltage+2
  6930  0054C2  D000               	goto	l150
  6931  0054C4                     l150:
  6932                           
  6933                           ;main.c: 149: }
  6934                           ;main.c: 151: if(BatteryVoltage < 3.7 )
  6935  0054C4  C040  F063         	movff	_BatteryVoltage,___ftge@ff1
  6936  0054C8  C041  F064         	movff	_BatteryVoltage+1,___ftge@ff1+1
  6937  0054CC  C042  F065         	movff	_BatteryVoltage+2,___ftge@ff1+2
  6938  0054D0  0ECD               	movlw	205
  6939  0054D2  0100               	movlb	0	; () banked
  6940  0054D4  6F66               	movwf	___ftge@ff2& (0+255),b
  6941  0054D6  0E6C               	movlw	108
  6942  0054D8  0100               	movlb	0	; () banked
  6943  0054DA  6F67               	movwf	(___ftge@ff2+1)& (0+255),b
  6944  0054DC  0E40               	movlw	64
  6945  0054DE  0100               	movlb	0	; () banked
  6946  0054E0  6F68               	movwf	(___ftge@ff2+2)& (0+255),b
  6947  0054E2  ECE1  F046         	call	___ftge	;wreg free
  6948  0054E6  0100               	movlb	0	; () banked
  6949  0054E8  B0D8               	btfsc	status,0,c
  6950  0054EA  D002               	goto	l13086
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;main.c: 152: {
  6954                           ;main.c: 153: VoltageStatus = 34;
  6955  0054EC  0E22               	movlw	34
  6956  0054EE  D017               	goto	L3
  6957  0054F0                     l13086:
  6958                           
  6959                           ;main.c: 155: else if(BatteryVoltage > 30.0)
  6960  0054F0  0E00               	movlw	0
  6961  0054F2  0100               	movlb	0	; () banked
  6962  0054F4  6F63               	movwf	___ftge@ff1& (0+255),b
  6963  0054F6  0EF0               	movlw	240
  6964  0054F8  0100               	movlb	0	; () banked
  6965  0054FA  6F64               	movwf	(___ftge@ff1+1)& (0+255),b
  6966  0054FC  0E41               	movlw	65
  6967  0054FE  0100               	movlb	0	; () banked
  6968  005500  6F65               	movwf	(___ftge@ff1+2)& (0+255),b
  6969  005502  C040  F066         	movff	_BatteryVoltage,___ftge@ff2
  6970  005506  C041  F067         	movff	_BatteryVoltage+1,___ftge@ff2+1
  6971  00550A  C042  F068         	movff	_BatteryVoltage+2,___ftge@ff2+2
  6972  00550E  ECE1  F046         	call	___ftge	;wreg free
  6973  005512  0100               	movlb	0	; () banked
  6974  005514  B0D8               	btfsc	status,0,c
  6975  005516  D002               	goto	l13090
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;main.c: 156: {
  6979                           ;main.c: 157: VoltageStatus = 98;
  6980  005518  0E62               	movlw	98
  6981  00551A  D001               	goto	L3
  6982  00551C                     l13090:
  6983                           
  6984                           ;main.c: 159: else
  6985                           ;main.c: 160: {
  6986                           ;main.c: 161: VoltageStatus = 1;
  6987  00551C  0E01               	movlw	1
  6988  00551E                     L3:
  6989  00551E  0102               	movlb	2	; () banked
  6990  005520  6FFC               	movwf	main@VoltageStatus& (0+255),b
  6991  005522  D000               	goto	l153
  6992  005524                     l153:
  6993                           
  6994                           ; BSR set to: 2
  6995                           ;main.c: 162: }
  6996                           ;main.c: 165: if(IRtask && IR_NEC)
  6997  005524  0102               	movlb	2	; () banked
  6998  005526  51F8               	movf	main@IRtask& (0+255),w,b
  6999  005528  0102               	movlb	2	; () banked
  7000  00552A  B4D8               	btfsc	status,2,c
  7001  00552C  D017               	goto	l13096
  7002                           
  7003                           ; BSR set to: 2
  7004  00552E  5055               	movf	_IR_NEC,w,c
  7005  005530  1056               	iorwf	_IR_NEC+1,w,c
  7006  005532  1057               	iorwf	_IR_NEC+2,w,c
  7007  005534  1058               	iorwf	_IR_NEC+3,w,c
  7008  005536  B4D8               	btfsc	status,2,c
  7009  005538  D011               	goto	l13096
  7010                           
  7011                           ; BSR set to: 2
  7012                           ;main.c: 166: {
  7013                           ;main.c: 167: UseIRCode(&IR_New_Code, IR_NEC);
  7014  00553A  0EFD               	movlw	low _IR_New_Code
  7015  00553C  0100               	movlb	0	; () banked
  7016  00553E  6FE9               	movwf	UseIRCode@Code& (0+255),b
  7017  005540  0E00               	movlw	high _IR_New_Code
  7018  005542  0100               	movlb	0	; () banked
  7019  005544  6FEA               	movwf	(UseIRCode@Code+1)& (0+255),b
  7020  005546  C055  F0EB         	movff	_IR_NEC,UseIRCode@NEC
  7021  00554A  C056  F0EC         	movff	_IR_NEC+1,UseIRCode@NEC+1
  7022  00554E  C057  F0ED         	movff	_IR_NEC+2,UseIRCode@NEC+2
  7023  005552  C058  F0EE         	movff	_IR_NEC+3,UseIRCode@NEC+3
  7024  005556  ECC5  F035         	call	_UseIRCode	;wreg free
  7025  00555A  D000               	goto	l13096
  7026  00555C                     l13096:
  7027                           
  7028                           ;main.c: 168: }
  7029                           ;main.c: 172: Connected = BlueConnected();
  7030  00555C  EC5E  F052         	call	_BlueConnected	;wreg free
  7031  005560  0102               	movlb	2	; () banked
  7032  005562  6FFD               	movwf	main@Connected& (0+255),b
  7033                           
  7034                           ; BSR set to: 2
  7035                           ;main.c: 174: if(Connected != ConnectedOLD)
  7036  005564  0102               	movlb	2	; () banked
  7037  005566  51FB               	movf	main@ConnectedOLD& (0+255),w,b
  7038  005568  0102               	movlb	2	; () banked
  7039  00556A  19FD               	xorwf	main@Connected& (0+255),w,b
  7040  00556C  B4D8               	btfsc	status,2,c
  7041  00556E  D039               	goto	l13120
  7042                           
  7043                           ; BSR set to: 2
  7044                           ;main.c: 175: {
  7045                           ;main.c: 176: if(Connected)
  7046  005570  0102               	movlb	2	; () banked
  7047  005572  51FD               	movf	main@Connected& (0+255),w,b
  7048  005574  0102               	movlb	2	; () banked
  7049  005576  B4D8               	btfsc	status,2,c
  7050  005578  D032               	goto	l158
  7051                           
  7052                           ; BSR set to: 2
  7053                           ;main.c: 177: {
  7054                           ;main.c: 178: cleanBuffer(ReceivedString, ReceivedStringPos);
  7055  00557A  0E00               	movlw	low _ReceivedString
  7056  00557C  0100               	movlb	0	; () banked
  7057  00557E  6F63               	movwf	cleanBuffer@data& (0+255),b
  7058  005580  0E04               	movlw	high _ReceivedString
  7059  005582  0100               	movlb	0	; () banked
  7060  005584  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
  7061  005586  C2FF  F065         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
  7062  00558A  0100               	movlb	0	; () banked
  7063  00558C  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
  7064  00558E  EC47  F04E         	call	_cleanBuffer	;wreg free
  7065                           
  7066                           ;main.c: 179: ReceivedStringPos = 0;
  7067  005592  0E00               	movlw	0
  7068  005594  0102               	movlb	2	; () banked
  7069  005596  6FFF               	movwf	_ReceivedStringPos& (0+255),b	;volatile
  7070                           
  7071                           ; BSR set to: 2
  7072                           ;main.c: 180: delayUS(1000000);
  7073  005598  0E40               	movlw	64
  7074  00559A  0100               	movlb	0	; () banked
  7075  00559C  6F63               	movwf	delayUS@US& (0+255),b
  7076  00559E  0E42               	movlw	66
  7077  0055A0  6F64               	movwf	(delayUS@US+1)& (0+255),b
  7078  0055A2  0E0F               	movlw	15
  7079  0055A4  6F65               	movwf	(delayUS@US+2)& (0+255),b
  7080  0055A6  0E00               	movlw	0
  7081  0055A8  6F66               	movwf	(delayUS@US+3)& (0+255),b
  7082  0055AA  ECA0  F04E         	call	_delayUS	;wreg free
  7083                           
  7084                           ;main.c: 181: UARTstringCRLN_CONST(ProjectName);
  7085  0055AE  0E0D               	movlw	low _ProjectName
  7086  0055B0  0100               	movlb	0	; () banked
  7087  0055B2  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  7088  0055B4  0EF0               	movlw	high _ProjectName
  7089  0055B6  0100               	movlb	0	; () banked
  7090  0055B8  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  7091  0055BA  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
  7092                           
  7093                           ;main.c: 182: UARTstring_CONST(CRLN);
  7094  0055BE  0E05               	movlw	low _CRLN
  7095  0055C0  0100               	movlb	0	; () banked
  7096  0055C2  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
  7097  0055C4  0EF2               	movlw	high _CRLN
  7098  0055C6  0100               	movlb	0	; () banked
  7099  0055C8  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  7100  0055CA  ECA9  F050         	call	_UARTstring_CONST	;wreg free
  7101                           
  7102                           ;main.c: 183: UARTchar_CONST('>');
  7103  0055CE  0E3E               	movlw	62
  7104  0055D0  EC5A  F050         	call	_UARTchar_CONST
  7105                           
  7106                           ;main.c: 184: ClearUSART();
  7107  0055D4  EC21  F052         	call	_ClearUSART	;wreg free
  7108                           
  7109                           ;main.c: 185: PIR1bits.RCIF = 0;
  7110  0055D8  9A9E               	bcf	3998,5,c	;volatile
  7111                           
  7112                           ;main.c: 186: PIE1bits.RCIE = 1;
  7113  0055DA  8A9D               	bsf	3997,5,c	;volatile
  7114                           
  7115                           ;main.c: 187: }
  7116  0055DC  D002               	goto	l13120
  7117  0055DE                     l158:
  7118                           
  7119                           ; BSR set to: 2
  7120                           ;main.c: 188: else
  7121                           ;main.c: 189: {
  7122                           ;main.c: 190: PIE1bits.RCIE = 0;
  7123  0055DE  9A9D               	bcf	3997,5,c	;volatile
  7124                           
  7125                           ; BSR set to: 2
  7126  0055E0  D000               	goto	l13120
  7127  0055E2                     l13120:
  7128                           
  7129                           ;main.c: 191: }
  7130                           ;main.c: 192: }
  7131                           ;main.c: 193: if(Bluetoothtask >= 1 && Connected)
  7132  0055E2  0102               	movlb	2	; () banked
  7133  0055E4  51F9               	movf	main@Bluetoothtask& (0+255),w,b
  7134  0055E6  0102               	movlb	2	; () banked
  7135  0055E8  B4D8               	btfsc	status,2,c
  7136  0055EA  D079               	goto	l13168
  7137                           
  7138                           ; BSR set to: 2
  7139  0055EC  0102               	movlb	2	; () banked
  7140  0055EE  51FD               	movf	main@Connected& (0+255),w,b
  7141  0055F0  0102               	movlb	2	; () banked
  7142  0055F2  B4D8               	btfsc	status,2,c
  7143  0055F4  D074               	goto	l13168
  7144                           
  7145                           ; BSR set to: 2
  7146                           ;main.c: 194: {
  7147                           ;main.c: 195: cleanBuffer(BluetoothString, 100);
  7148  0055F6  0E94               	movlw	low main@BluetoothString
  7149  0055F8  0100               	movlb	0	; () banked
  7150  0055FA  6F63               	movwf	cleanBuffer@data& (0+255),b
  7151  0055FC  0E02               	movlw	high main@BluetoothString
  7152  0055FE  0100               	movlb	0	; () banked
  7153  005600  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
  7154  005602  0E00               	movlw	0
  7155  005604  0100               	movlb	0	; () banked
  7156  005606  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
  7157  005608  0E64               	movlw	100
  7158  00560A  6F65               	movwf	cleanBuffer@count& (0+255),b
  7159  00560C  EC47  F04E         	call	_cleanBuffer	;wreg free
  7160                           
  7161                           ;main.c: 196: BufferCopy(ReceivedString,BluetoothString, ReceivedStringPos, 0);
  7162  005610  0E00               	movlw	low _ReceivedString
  7163  005612  0100               	movlb	0	; () banked
  7164  005614  6F6B               	movwf	BufferCopy@from& (0+255),b
  7165  005616  0E04               	movlw	high _ReceivedString
  7166  005618  0100               	movlb	0	; () banked
  7167  00561A  6F6C               	movwf	(BufferCopy@from+1)& (0+255),b
  7168  00561C  0E94               	movlw	low main@BluetoothString
  7169  00561E  0100               	movlb	0	; () banked
  7170  005620  6F6D               	movwf	BufferCopy@to& (0+255),b
  7171  005622  0E02               	movlw	high main@BluetoothString
  7172  005624  0100               	movlb	0	; () banked
  7173  005626  6F6E               	movwf	(BufferCopy@to+1)& (0+255),b
  7174  005628  C2FF  F06F         	movff	_ReceivedStringPos,BufferCopy@count	;volatile
  7175  00562C  0E00               	movlw	0
  7176  00562E  0100               	movlb	0	; () banked
  7177  005630  6F70               	movwf	BufferCopy@shift& (0+255),b
  7178  005632  ECFE  F04B         	call	_BufferCopy	;wreg free
  7179                           
  7180                           ;main.c: 197: BluetoothStringPos = ReceivedStringPos;
  7181  005636  C2FF  F2FA         	movff	_ReceivedStringPos,main@BluetoothStringPos	;volatile
  7182                           
  7183                           ;main.c: 198: cleanBuffer(ReceivedString, ReceivedStringPos);
  7184  00563A  0E00               	movlw	low _ReceivedString
  7185  00563C  0100               	movlb	0	; () banked
  7186  00563E  6F63               	movwf	cleanBuffer@data& (0+255),b
  7187  005640  0E04               	movlw	high _ReceivedString
  7188  005642  0100               	movlb	0	; () banked
  7189  005644  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
  7190  005646  C2FF  F065         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
  7191  00564A  0100               	movlb	0	; () banked
  7192  00564C  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
  7193  00564E  EC47  F04E         	call	_cleanBuffer	;wreg free
  7194                           
  7195                           ;main.c: 199: ReceivedStringPos = 0;
  7196  005652  0E00               	movlw	0
  7197  005654  0102               	movlb	2	; () banked
  7198  005656  6FFF               	movwf	_ReceivedStringPos& (0+255),b	;volatile
  7199                           
  7200                           ; BSR set to: 2
  7201                           ;main.c: 200: NewReceivedString = 0;
  7202  005658  0E00               	movlw	0
  7203  00565A  0100               	movlb	0	; () banked
  7204  00565C  6FF9               	movwf	_NewReceivedString& (0+255),b	;volatile
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;main.c: 201: if(BluetoothString[0] != 0)
  7208  00565E  0102               	movlb	2	; () banked
  7209  005660  5194               	movf	main@BluetoothString& (0+255),w,b
  7210  005662  0102               	movlb	2	; () banked
  7211  005664  B4D8               	btfsc	status,2,c
  7212  005666  D00B               	goto	l13140
  7213                           
  7214                           ; BSR set to: 2
  7215                           ;main.c: 202: {
  7216                           ;main.c: 203: UseBluetooth(BluetoothString, BluetoothStringPos);
  7217  005668  0E94               	movlw	low main@BluetoothString
  7218  00566A  0100               	movlb	0	; () banked
  7219  00566C  6FF5               	movwf	UseBluetooth@String& (0+255),b
  7220  00566E  0E02               	movlw	high main@BluetoothString
  7221  005670  0100               	movlb	0	; () banked
  7222  005672  6FF6               	movwf	(UseBluetooth@String+1)& (0+255),b
  7223  005674  C2FA  F0F7         	movff	main@BluetoothStringPos,UseBluetooth@StringPos
  7224  005678  ECE7  F000         	call	_UseBluetooth	;wreg free
  7225  00567C  D000               	goto	l13140
  7226  00567E                     l13140:
  7227                           
  7228                           ;main.c: 204: }
  7229                           ;main.c: 205: cleanBuffer(ReceivedString, ReceivedStringPos);
  7230  00567E  0E00               	movlw	low _ReceivedString
  7231  005680  0100               	movlb	0	; () banked
  7232  005682  6F63               	movwf	cleanBuffer@data& (0+255),b
  7233  005684  0E04               	movlw	high _ReceivedString
  7234  005686  0100               	movlb	0	; () banked
  7235  005688  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
  7236  00568A  C2FF  F065         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
  7237  00568E  0100               	movlb	0	; () banked
  7238  005690  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
  7239  005692  EC47  F04E         	call	_cleanBuffer	;wreg free
  7240                           
  7241                           ;main.c: 206: ReceivedStringPos = 0;
  7242  005696  0E00               	movlw	0
  7243  005698  0102               	movlb	2	; () banked
  7244  00569A  6FFF               	movwf	_ReceivedStringPos& (0+255),b	;volatile
  7245                           
  7246                           ; BSR set to: 2
  7247                           ;main.c: 207: NewReceivedString = 0;
  7248  00569C  0E00               	movlw	0
  7249  00569E  0100               	movlb	0	; () banked
  7250  0056A0  6FF9               	movwf	_NewReceivedString& (0+255),b	;volatile
  7251                           
  7252                           ; BSR set to: 0
  7253                           ;main.c: 208: UARTstring_CONST(CRLN);
  7254  0056A2  0E05               	movlw	low _CRLN
  7255  0056A4  0100               	movlb	0	; () banked
  7256  0056A6  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
  7257  0056A8  0EF2               	movlw	high _CRLN
  7258  0056AA  0100               	movlb	0	; () banked
  7259  0056AC  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  7260  0056AE  ECA9  F050         	call	_UARTstring_CONST	;wreg free
  7261                           
  7262                           ;main.c: 209: UARTchar_CONST('>');
  7263  0056B2  0E3E               	movlw	62
  7264  0056B4  EC5A  F050         	call	_UARTchar_CONST
  7265                           
  7266                           ;main.c: 210: if(IR_New_Code)
  7267  0056B8  0100               	movlb	0	; () banked
  7268  0056BA  51FD               	movf	_IR_New_Code& (0+255),w,b
  7269  0056BC  B4D8               	btfsc	status,2,c
  7270  0056BE  D004               	goto	l13154
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;main.c: 211: {
  7274                           ;main.c: 212: IR_New_Code = 0;
  7275  0056C0  0E00               	movlw	0
  7276  0056C2  0100               	movlb	0	; () banked
  7277  0056C4  6FFD               	movwf	_IR_New_Code& (0+255),b
  7278  0056C6  D000               	goto	l13154
  7279  0056C8                     l13154:
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;main.c: 213: }
  7283                           ;main.c: 215: IRpinOLD = ReadIRpin();
  7284  0056C8  EC57  F052         	call	_ReadIRpin	;wreg free
  7285  0056CC  6E4C               	movwf	_IRpinOLD,c
  7286                           
  7287                           ;main.c: 216: INTCONbits.RBIF = 0;
  7288  0056CE  90F2               	bcf	intcon,0,c	;volatile
  7289                           
  7290                           ;main.c: 217: (IOCBbits.IOCB4 = 1);
  7291  0056D0  887D               	bsf	3965,4,c	;volatile
  7292                           
  7293                           ;main.c: 218: INTCONbits.RBIE = 1;
  7294  0056D2  86F2               	bsf	intcon,3,c	;volatile
  7295                           
  7296                           ;main.c: 219: ClearUSART();
  7297  0056D4  EC21  F052         	call	_ClearUSART	;wreg free
  7298                           
  7299                           ;main.c: 220: PIR1bits.RCIF = 0;
  7300  0056D8  9A9E               	bcf	3998,5,c	;volatile
  7301                           
  7302                           ;main.c: 221: PIE1bits.RCIE = 1;
  7303  0056DA  8A9D               	bsf	3997,5,c	;volatile
  7304  0056DC  D000               	goto	l13168
  7305  0056DE                     l13168:
  7306                           
  7307                           ;main.c: 222: }
  7308                           ;main.c: 225: if(IRtimeout < 5000)
  7309  0056DE  0103               	movlb	3	; () banked
  7310  0056E0  51FB               	movf	(_IRtimeout+3)& (0+255),w,b
  7311  0056E2  0103               	movlb	3	; () banked
  7312  0056E4  11FA               	iorwf	(_IRtimeout+2)& (0+255),w,b
  7313  0056E6  E110               	bnz	l13172
  7314  0056E8  0E88               	movlw	136
  7315  0056EA  0103               	movlb	3	; () banked
  7316  0056EC  5DF8               	subwf	_IRtimeout& (0+255),w,b
  7317  0056EE  0E13               	movlw	19
  7318  0056F0  0103               	movlb	3	; () banked
  7319  0056F2  59F9               	subwfb	(_IRtimeout+1)& (0+255),w,b
  7320  0056F4  B0D8               	btfsc	status,0,c
  7321  0056F6  D008               	goto	l13172
  7322                           
  7323                           ; BSR set to: 3
  7324                           ;main.c: 226: {
  7325                           ;main.c: 227: IRtimeout++;
  7326  0056F8  0E01               	movlw	1
  7327  0056FA  0103               	movlb	3	; () banked
  7328  0056FC  27F8               	addwf	_IRtimeout& (0+255),f,b
  7329  0056FE  0E00               	movlw	0
  7330  005700  23F9               	addwfc	(_IRtimeout+1)& (0+255),f,b
  7331  005702  23FA               	addwfc	(_IRtimeout+2)& (0+255),f,b
  7332  005704  23FB               	addwfc	(_IRtimeout+3)& (0+255),f,b
  7333                           
  7334                           ;main.c: 228: }
  7335  005706  D026               	goto	l13188
  7336  005708                     l13172:
  7337                           
  7338                           ; BSR set to: 3
  7339                           ;main.c: 229: else if(IRtimeout == 5000)
  7340  005708  0E88               	movlw	136
  7341  00570A  0103               	movlb	3	; () banked
  7342  00570C  19F8               	xorwf	_IRtimeout& (0+255),w,b
  7343  00570E  E122               	bnz	l13188
  7344  005710  0E13               	movlw	19
  7345  005712  0103               	movlb	3	; () banked
  7346  005714  19F9               	xorwf	(_IRtimeout+1)& (0+255),w,b
  7347  005716  0103               	movlb	3	; () banked
  7348  005718  11FA               	iorwf	(_IRtimeout+2)& (0+255),w,b
  7349  00571A  0103               	movlb	3	; () banked
  7350  00571C  11FB               	iorwf	(_IRtimeout+3)& (0+255),w,b
  7351  00571E  A4D8               	btfss	status,2,c
  7352  005720  D019               	goto	l13188
  7353                           
  7354                           ; BSR set to: 3
  7355                           ;main.c: 230: {
  7356                           ;main.c: 231: IRtimeout++;
  7357  005722  0E01               	movlw	1
  7358  005724  0103               	movlb	3	; () banked
  7359  005726  27F8               	addwf	_IRtimeout& (0+255),f,b
  7360  005728  0E00               	movlw	0
  7361  00572A  23F9               	addwfc	(_IRtimeout+1)& (0+255),f,b
  7362  00572C  23FA               	addwfc	(_IRtimeout+2)& (0+255),f,b
  7363  00572E  23FB               	addwfc	(_IRtimeout+3)& (0+255),f,b
  7364                           
  7365                           ; BSR set to: 3
  7366                           ;main.c: 232: IR_NEC = 0;
  7367  005730  0E00               	movlw	0
  7368  005732  6E55               	movwf	_IR_NEC,c
  7369  005734  0E00               	movlw	0
  7370  005736  6E56               	movwf	_IR_NEC+1,c
  7371  005738  0E00               	movlw	0
  7372  00573A  6E57               	movwf	_IR_NEC+2,c
  7373  00573C  0E00               	movlw	0
  7374  00573E  6E58               	movwf	_IR_NEC+3,c
  7375                           
  7376                           ; BSR set to: 3
  7377                           ;main.c: 233: IR_New_Code = 0;
  7378  005740  0E00               	movlw	0
  7379  005742  0100               	movlb	0	; () banked
  7380  005744  6FFD               	movwf	_IR_New_Code& (0+255),b
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;main.c: 234: IRpinOLD = ReadIRpin();
  7384  005746  EC57  F052         	call	_ReadIRpin	;wreg free
  7385  00574A  6E4C               	movwf	_IRpinOLD,c
  7386                           
  7387                           ;main.c: 235: INTCONbits.RBIF = 0;
  7388  00574C  90F2               	bcf	intcon,0,c	;volatile
  7389                           
  7390                           ;main.c: 236: (IOCBbits.IOCB4 = 1);
  7391  00574E  887D               	bsf	3965,4,c	;volatile
  7392                           
  7393                           ;main.c: 237: INTCONbits.RBIE = 1;
  7394  005750  86F2               	bsf	intcon,3,c	;volatile
  7395  005752  D000               	goto	l13188
  7396  005754                     l13188:
  7397                           
  7398                           ;main.c: 238: }
  7399                           ;main.c: 239: if(BufferOverflow)
  7400  005754  0101               	movlb	1	; () banked
  7401  005756  51FF               	movf	_BufferOverflow& (0+255),w,b
  7402  005758  B4D8               	btfsc	status,2,c
  7403  00575A  D033               	goto	l13210
  7404                           
  7405                           ; BSR set to: 1
  7406                           ;main.c: 240: {
  7407                           ;main.c: 242: cleanBuffer(ReceivedString,100);
  7408  00575C  0E00               	movlw	low _ReceivedString
  7409  00575E  0100               	movlb	0	; () banked
  7410  005760  6F63               	movwf	cleanBuffer@data& (0+255),b
  7411  005762  0E04               	movlw	high _ReceivedString
  7412  005764  0100               	movlb	0	; () banked
  7413  005766  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
  7414  005768  0E00               	movlw	0
  7415  00576A  0100               	movlb	0	; () banked
  7416  00576C  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
  7417  00576E  0E64               	movlw	100
  7418  005770  6F65               	movwf	cleanBuffer@count& (0+255),b
  7419  005772  EC47  F04E         	call	_cleanBuffer	;wreg free
  7420                           
  7421                           ;main.c: 243: ReceivedStringPos = 0;
  7422  005776  0E00               	movlw	0
  7423  005778  0102               	movlb	2	; () banked
  7424  00577A  6FFF               	movwf	_ReceivedStringPos& (0+255),b	;volatile
  7425                           
  7426                           ; BSR set to: 2
  7427                           ;main.c: 244: UARTstring_CONST(CRLN);
  7428  00577C  0E05               	movlw	low _CRLN
  7429  00577E  0100               	movlb	0	; () banked
  7430  005780  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
  7431  005782  0EF2               	movlw	high _CRLN
  7432  005784  0100               	movlb	0	; () banked
  7433  005786  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  7434  005788  ECA9  F050         	call	_UARTstring_CONST	;wreg free
  7435                           
  7436                           ;main.c: 245: UARTstringCRLN_CONST("Buffer Overflow");
  7437  00578C  0E54               	movlw	low STR_1
  7438  00578E  0100               	movlb	0	; () banked
  7439  005790  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  7440  005792  0EFE               	movlw	high STR_1
  7441  005794  0100               	movlb	0	; () banked
  7442  005796  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  7443  005798  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
  7444                           
  7445                           ;main.c: 246: UARTstring_CONST(CRLN);
  7446  00579C  0E05               	movlw	low _CRLN
  7447  00579E  0100               	movlb	0	; () banked
  7448  0057A0  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
  7449  0057A2  0EF2               	movlw	high _CRLN
  7450  0057A4  0100               	movlb	0	; () banked
  7451  0057A6  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  7452  0057A8  ECA9  F050         	call	_UARTstring_CONST	;wreg free
  7453                           
  7454                           ;main.c: 247: UARTchar('>');
  7455  0057AC  0E3E               	movlw	62
  7456  0057AE  EC76  F050         	call	_UARTchar
  7457                           
  7458                           ;main.c: 248: BufferOverflow = 0;
  7459  0057B2  0E00               	movlw	0
  7460  0057B4  0101               	movlb	1	; () banked
  7461  0057B6  6FFF               	movwf	_BufferOverflow& (0+255),b
  7462                           
  7463                           ; BSR set to: 1
  7464                           ;main.c: 249: ClearUSART();
  7465  0057B8  EC21  F052         	call	_ClearUSART	;wreg free
  7466                           
  7467                           ;main.c: 250: PIR1bits.RCIF = 0;
  7468  0057BC  9A9E               	bcf	3998,5,c	;volatile
  7469                           
  7470                           ;main.c: 251: PIE1bits.RCIE = 1;
  7471  0057BE  8A9D               	bsf	3997,5,c	;volatile
  7472  0057C0  D000               	goto	l13210
  7473  0057C2                     l13210:
  7474                           
  7475                           ;main.c: 252: }
  7476                           ;main.c: 253: ConnectedOLD = Connected;
  7477  0057C2  C2FD  F2FB         	movff	main@Connected,main@ConnectedOLD
  7478  0057C6  D638               	goto	l13070
  7479  0057C8  EFE5  F000         	goto	start
  7480  0057CC                     __end_of_main:
  7481                           	opt stack 0
  7482                           tblptru	equ	0xFF8
  7483                           tblptrh	equ	0xFF7
  7484                           tblptrl	equ	0xFF6
  7485                           tablat	equ	0xFF5
  7486                           intcon	equ	0xFF2
  7487                           postinc0	equ	0xFEE
  7488                           wreg	equ	0xFE8
  7489                           postdec1	equ	0xFE5
  7490                           fsr1l	equ	0xFE1
  7491                           status	equ	0xFD8
  7492                           
  7493 ;; *************** function _UseIRCode *****************
  7494 ;; Defined at:
  7495 ;;		line 271 in file "IR.c"
  7496 ;; Parameters:    Size  Location     Type
  7497 ;;  Code            2  137[BANK0 ] PTR unsigned char 
  7498 ;;		 -> IR_New_Code(1), 
  7499 ;;  NEC             4  139[BANK0 ] unsigned long 
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;  i               1  148[BANK0 ] unsigned char 
  7502 ;;  j               1  147[BANK0 ] unsigned char 
  7503 ;;  found           1  146[BANK0 ] unsigned char 
  7504 ;; Return value:  Size  Location     Type
  7505 ;;		None               void
  7506 ;; Registers used:
  7507 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7513 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7514 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7515 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7517 ;;Total ram usage:       12 bytes
  7518 ;; Hardware stack levels used:    1
  7519 ;; Hardware stack levels required when called:   11
  7520 ;; This function calls:
  7521 ;;		_DecodeNEC
  7522 ;;		_LEDTimerON
  7523 ;;		_ReadCodeButtons
  7524 ;;		_ReadIRpin
  7525 ;;		_ReadPushButton
  7526 ;;		_SendRF_Channel
  7527 ;;		_SyncGlobalToEEPROM
  7528 ;;		_delayUS
  7529 ;; This function is called by:
  7530 ;;		_main
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text1
  7535  006B8A                     __ptext1:
  7536                           	opt stack 0
  7537  006B8A                     _UseIRCode:
  7538                           	opt stack 19
  7539                           
  7540                           ;IR.c: 273: unsigned char i,j;
  7541                           ;IR.c: 274: unsigned char found = 0;
  7542                           
  7543                           ;incstack = 0
  7544  006B8A  0E00               	movlw	0
  7545  006B8C  0100               	movlb	0	; () banked
  7546  006B8E  6FF2               	movwf	UseIRCode@found& (0+255),b
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;IR.c: 276: LEDTimerON();
  7550  006B90  EC0F  F052         	call	_LEDTimerON	;wreg free
  7551                           
  7552                           ;IR.c: 277: if(*Code == 2 || *Code == 1)
  7553  006B94  C0E9  FFD9         	movff	UseIRCode@Code,fsr2l
  7554  006B98  C0EA  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7555  006B9C  0E02               	movlw	2
  7556  006B9E  18DE               	xorwf	postinc2,w,c
  7557  006BA0  B4D8               	btfsc	status,2,c
  7558  006BA2  D007               	goto	l11836
  7559  006BA4  C0E9  FFD9         	movff	UseIRCode@Code,fsr2l
  7560  006BA8  C0EA  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7561  006BAC  04DE               	decf	postinc2,w,c
  7562  006BAE  A4D8               	btfss	status,2,c
  7563  006BB0  D107               	goto	l11922
  7564  006BB2                     l11836:
  7565                           
  7566                           ;IR.c: 278: {
  7567                           ;IR.c: 279: DecodeNEC(NEC, &IRaddress, &IRcommand);
  7568  006BB2  C0EB  F067         	movff	UseIRCode@NEC,DecodeNEC@Nec
  7569  006BB6  C0EC  F068         	movff	UseIRCode@NEC+1,DecodeNEC@Nec+1
  7570  006BBA  C0ED  F069         	movff	UseIRCode@NEC+2,DecodeNEC@Nec+2
  7571  006BBE  C0EE  F06A         	movff	UseIRCode@NEC+3,DecodeNEC@Nec+3
  7572  006BC2  0E59               	movlw	low _IRaddress
  7573  006BC4  0100               	movlb	0	; () banked
  7574  006BC6  6F6B               	movwf	DecodeNEC@address& (0+255),b
  7575  006BC8  0E00               	movlw	high _IRaddress
  7576  006BCA  0100               	movlb	0	; () banked
  7577  006BCC  6F6C               	movwf	(DecodeNEC@address+1)& (0+255),b
  7578  006BCE  0E5A               	movlw	low _IRcommand
  7579  006BD0  0100               	movlb	0	; () banked
  7580  006BD2  6F6D               	movwf	DecodeNEC@command& (0+255),b
  7581  006BD4  0E00               	movlw	high _IRcommand
  7582  006BD6  0100               	movlb	0	; () banked
  7583  006BD8  6F6E               	movwf	(DecodeNEC@command+1)& (0+255),b
  7584  006BDA  EC83  F049         	call	_DecodeNEC	;wreg free
  7585                           
  7586                           ;IR.c: 280: if(ReadPushButton())
  7587  006BDE  EC3B  F052         	call	_ReadPushButton	;wreg free
  7588  006BE2  0900               	iorlw	0
  7589  006BE4  B4D8               	btfsc	status,2,c
  7590  006BE6  D055               	goto	l11876
  7591                           
  7592                           ;IR.c: 281: {
  7593                           ;IR.c: 282: Global1.SWNECcode = NEC;
  7594  006BE8  C0EB  F3DB         	movff	UseIRCode@NEC,_Global1+1
  7595  006BEC  C0EC  F3DC         	movff	UseIRCode@NEC+1,_Global1+2
  7596  006BF0  C0ED  F3DD         	movff	UseIRCode@NEC+2,_Global1+3
  7597  006BF4  C0EE  F3DE         	movff	UseIRCode@NEC+3,_Global1+4
  7598                           
  7599                           ;IR.c: 283: if(SyncGlobalToEEPROM())
  7600  006BF8  ECCE  F04A         	call	_SyncGlobalToEEPROM	;wreg free
  7601  006BFC  0900               	iorlw	0
  7602  006BFE  B4D8               	btfsc	status,2,c
  7603  006C00  D024               	goto	l11860
  7604                           
  7605                           ;IR.c: 284: {
  7606                           ;IR.c: 286: for(i =0;i<10;i++)
  7607  006C02  0E00               	movlw	0
  7608  006C04  0100               	movlb	0	; () banked
  7609  006C06  6FF4               	movwf	UseIRCode@i& (0+255),b
  7610  006C08                     l11846:
  7611                           
  7612                           ; BSR set to: 0
  7613  006C08  0E09               	movlw	9
  7614  006C0A  0100               	movlb	0	; () banked
  7615  006C0C  65F4               	cpfsgt	UseIRCode@i& (0+255),b
  7616  006C0E  D001               	goto	l11850
  7617                           
  7618                           ; BSR set to: 0
  7619  006C10  D0D7               	goto	l11922
  7620  006C12                     l11850:
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;IR.c: 287: {
  7624                           ;IR.c: 288: (LATC |= 0x04);
  7625  006C12  848B               	bsf	3979,2,c	;volatile
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;IR.c: 289: delayUS(50000);
  7629  006C14  0E50               	movlw	80
  7630  006C16  0100               	movlb	0	; () banked
  7631  006C18  6F63               	movwf	delayUS@US& (0+255),b
  7632  006C1A  0EC3               	movlw	195
  7633  006C1C  6F64               	movwf	(delayUS@US+1)& (0+255),b
  7634  006C1E  0E00               	movlw	0
  7635  006C20  6F65               	movwf	(delayUS@US+2)& (0+255),b
  7636  006C22  0E00               	movlw	0
  7637  006C24  6F66               	movwf	(delayUS@US+3)& (0+255),b
  7638  006C26  ECA0  F04E         	call	_delayUS	;wreg free
  7639                           
  7640                           ;IR.c: 290: (LATC &= ~0x04);
  7641  006C2A  948B               	bcf	3979,2,c	;volatile
  7642                           
  7643                           ;IR.c: 291: delayUS(50000);
  7644  006C2C  0E50               	movlw	80
  7645  006C2E  0100               	movlb	0	; () banked
  7646  006C30  6F63               	movwf	delayUS@US& (0+255),b
  7647  006C32  0EC3               	movlw	195
  7648  006C34  6F64               	movwf	(delayUS@US+1)& (0+255),b
  7649  006C36  0E00               	movlw	0
  7650  006C38  6F65               	movwf	(delayUS@US+2)& (0+255),b
  7651  006C3A  0E00               	movlw	0
  7652  006C3C  6F66               	movwf	(delayUS@US+3)& (0+255),b
  7653  006C3E  ECA0  F04E         	call	_delayUS	;wreg free
  7654  006C42  0100               	movlb	0	; () banked
  7655  006C44  2BF4               	incf	UseIRCode@i& (0+255),f,b
  7656  006C46  D7E0               	goto	l11846
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;IR.c: 292: }
  7660                           ;IR.c: 293: }
  7661                           
  7662                           ; BSR set to: 0
  7663  006C48  D0BB               	goto	l11922
  7664  006C4A                     l11860:
  7665                           
  7666                           ;IR.c: 294: else
  7667                           ;IR.c: 295: {
  7668                           ;IR.c: 297: for(i =0;i<10;i++)
  7669  006C4A  0E00               	movlw	0
  7670  006C4C  0100               	movlb	0	; () banked
  7671  006C4E  6FF4               	movwf	UseIRCode@i& (0+255),b
  7672  006C50                     l11862:
  7673                           
  7674                           ; BSR set to: 0
  7675  006C50  0E09               	movlw	9
  7676  006C52  0100               	movlb	0	; () banked
  7677  006C54  65F4               	cpfsgt	UseIRCode@i& (0+255),b
  7678  006C56  D001               	goto	l11866
  7679                           
  7680                           ; BSR set to: 0
  7681  006C58  D0B3               	goto	l11922
  7682  006C5A                     l11866:
  7683                           
  7684                           ; BSR set to: 0
  7685                           ;IR.c: 298: {
  7686                           ;IR.c: 299: (LATC |= 0x02);
  7687  006C5A  828B               	bsf	3979,1,c	;volatile
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;IR.c: 300: delayUS(50000);
  7691  006C5C  0E50               	movlw	80
  7692  006C5E  0100               	movlb	0	; () banked
  7693  006C60  6F63               	movwf	delayUS@US& (0+255),b
  7694  006C62  0EC3               	movlw	195
  7695  006C64  6F64               	movwf	(delayUS@US+1)& (0+255),b
  7696  006C66  0E00               	movlw	0
  7697  006C68  6F65               	movwf	(delayUS@US+2)& (0+255),b
  7698  006C6A  0E00               	movlw	0
  7699  006C6C  6F66               	movwf	(delayUS@US+3)& (0+255),b
  7700  006C6E  ECA0  F04E         	call	_delayUS	;wreg free
  7701                           
  7702                           ;IR.c: 301: (LATC &= ~0x02);
  7703  006C72  928B               	bcf	3979,1,c	;volatile
  7704                           
  7705                           ;IR.c: 302: delayUS(50000);
  7706  006C74  0E50               	movlw	80
  7707  006C76  0100               	movlb	0	; () banked
  7708  006C78  6F63               	movwf	delayUS@US& (0+255),b
  7709  006C7A  0EC3               	movlw	195
  7710  006C7C  6F64               	movwf	(delayUS@US+1)& (0+255),b
  7711  006C7E  0E00               	movlw	0
  7712  006C80  6F65               	movwf	(delayUS@US+2)& (0+255),b
  7713  006C82  0E00               	movlw	0
  7714  006C84  6F66               	movwf	(delayUS@US+3)& (0+255),b
  7715  006C86  ECA0  F04E         	call	_delayUS	;wreg free
  7716  006C8A  0100               	movlb	0	; () banked
  7717  006C8C  2BF4               	incf	UseIRCode@i& (0+255),f,b
  7718  006C8E  D7E0               	goto	l11862
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;IR.c: 303: }
  7722                           ;IR.c: 304: }
  7723                           ;IR.c: 305: }
  7724                           
  7725                           ; BSR set to: 0
  7726                           
  7727                           ; BSR set to: 0
  7728  006C90  D097               	goto	l11922
  7729  006C92                     l11876:
  7730                           
  7731                           ;IR.c: 306: else
  7732                           ;IR.c: 307: {
  7733                           ;IR.c: 308: if(NEC == Global1.SWNECcode)
  7734  006C92  0100               	movlb	0	; () banked
  7735  006C94  51EB               	movf	UseIRCode@NEC& (0+255),w,b
  7736  006C96  0103               	movlb	3	; () banked
  7737  006C98  19DB               	xorwf	(_Global1+1)& (0+255),w,b
  7738  006C9A  E121               	bnz	l11886
  7739  006C9C  0100               	movlb	0	; () banked
  7740  006C9E  51EC               	movf	(UseIRCode@NEC+1)& (0+255),w,b
  7741  006CA0  0103               	movlb	3	; () banked
  7742  006CA2  19DC               	xorwf	(_Global1+2)& (0+255),w,b
  7743  006CA4  E11C               	bnz	l11886
  7744  006CA6  0100               	movlb	0	; () banked
  7745  006CA8  51ED               	movf	(UseIRCode@NEC+2)& (0+255),w,b
  7746  006CAA  0103               	movlb	3	; () banked
  7747  006CAC  19DD               	xorwf	(_Global1+3)& (0+255),w,b
  7748  006CAE  E117               	bnz	l11886
  7749  006CB0  0100               	movlb	0	; () banked
  7750  006CB2  51EE               	movf	(UseIRCode@NEC+3)& (0+255),w,b
  7751  006CB4  0103               	movlb	3	; () banked
  7752  006CB6  19DE               	xorwf	(_Global1+4)& (0+255),w,b
  7753  006CB8  A4D8               	btfss	status,2,c
  7754  006CBA  D011               	goto	l11886
  7755                           
  7756                           ; BSR set to: 3
  7757                           ;IR.c: 309: {
  7758                           ;IR.c: 310: if(*Code == 2)
  7759  006CBC  C0E9  FFD9         	movff	UseIRCode@Code,fsr2l
  7760  006CC0  C0EA  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7761  006CC4  0E02               	movlw	2
  7762  006CC6  18DE               	xorwf	postinc2,w,c
  7763  006CC8  B4D8               	btfsc	status,2,c
  7764                           
  7765                           ; BSR set to: 3
  7766                           ;IR.c: 311: {
  7767                           ;IR.c: 312: (LATC |= 0x02);
  7768  006CCA  828B               	bsf	3979,1,c	;volatile
  7769                           
  7770                           ; BSR set to: 3
  7771                           ;IR.c: 313: }
  7772                           ;IR.c: 314: (LATC |= 0x04);
  7773  006CCC  848B               	bsf	3979,2,c	;volatile
  7774                           
  7775                           ; BSR set to: 3
  7776                           ;IR.c: 315: SendRF_Channel(ReadCodeButtons());
  7777  006CCE  ECCB  F04E         	call	_ReadCodeButtons	;wreg free
  7778  006CD2  EC99  F034         	call	_SendRF_Channel
  7779                           
  7780                           ;IR.c: 316: found = 1;
  7781  006CD6  0E01               	movlw	1
  7782  006CD8  0100               	movlb	0	; () banked
  7783  006CDA  6FF2               	movwf	UseIRCode@found& (0+255),b
  7784  006CDC  D000               	goto	l11886
  7785  006CDE                     l11886:
  7786                           
  7787                           ;IR.c: 317: }
  7788                           ;IR.c: 319: for(j=0; j < 3; j++)
  7789  006CDE  0E00               	movlw	0
  7790  006CE0  0100               	movlb	0	; () banked
  7791  006CE2  6FF3               	movwf	UseIRCode@j& (0+255),b
  7792  006CE4                     l11888:
  7793                           
  7794                           ; BSR set to: 0
  7795  006CE4  0E02               	movlw	2
  7796  006CE6  0100               	movlb	0	; () banked
  7797  006CE8  65F3               	cpfsgt	UseIRCode@j& (0+255),b
  7798  006CEA  D001               	goto	l11892
  7799                           
  7800                           ; BSR set to: 0
  7801  006CEC  D062               	goto	l11918
  7802  006CEE                     l11892:
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;IR.c: 320: {
  7806                           ;IR.c: 321: for(i=0; i < 10; i++)
  7807  006CEE  0E00               	movlw	0
  7808  006CF0  0100               	movlb	0	; () banked
  7809  006CF2  6FF4               	movwf	UseIRCode@i& (0+255),b
  7810  006CF4                     l11894:
  7811                           
  7812                           ; BSR set to: 0
  7813  006CF4  0E09               	movlw	9
  7814  006CF6  0100               	movlb	0	; () banked
  7815  006CF8  65F4               	cpfsgt	UseIRCode@i& (0+255),b
  7816  006CFA  D001               	goto	l11898
  7817                           
  7818                           ; BSR set to: 0
  7819  006CFC  D057               	goto	l11914
  7820  006CFE                     l11898:
  7821                           
  7822                           ; BSR set to: 0
  7823                           ;IR.c: 322: {
  7824                           ;IR.c: 324: if(IRaddress == Global2.RemoteButtonRF[i][j][0])
  7825  006CFE  0100               	movlb	0	; () banked
  7826  006D00  51F4               	movf	UseIRCode@i& (0+255),w,b
  7827  006D02  0D06               	mullw	6
  7828  006D04  0E7C               	movlw	low _Global2
  7829  006D06  0100               	movlb	0	; () banked
  7830  006D08  6FEF               	movwf	??_UseIRCode& (0+255),b
  7831  006D0A  0E03               	movlw	high _Global2
  7832  006D0C  0100               	movlb	0	; () banked
  7833  006D0E  6FF0               	movwf	(??_UseIRCode+1)& (0+255),b
  7834  006D10  50F3               	movf	prodl,w,c
  7835  006D12  0100               	movlb	0	; () banked
  7836  006D14  27EF               	addwf	??_UseIRCode& (0+255),f,b
  7837  006D16  50F4               	movf	prodh,w,c
  7838  006D18  0100               	movlb	0	; () banked
  7839  006D1A  23F0               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  7840  006D1C  0100               	movlb	0	; () banked
  7841  006D1E  51F3               	movf	UseIRCode@j& (0+255),w,b
  7842  006D20  0D02               	mullw	2
  7843  006D22  50F3               	movf	prodl,w,c
  7844  006D24  0100               	movlb	0	; () banked
  7845  006D26  25EF               	addwf	??_UseIRCode& (0+255),w,b
  7846  006D28  6ED9               	movwf	fsr2l,c
  7847  006D2A  50F4               	movf	prodh,w,c
  7848  006D2C  0100               	movlb	0	; () banked
  7849  006D2E  21F0               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  7850  006D30  6EDA               	movwf	fsr2h,c
  7851  006D32  5059               	movf	_IRaddress,w,c
  7852  006D34  18DE               	xorwf	postinc2,w,c
  7853  006D36  A4D8               	btfss	status,2,c
  7854  006D38  D036               	goto	l11910
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;IR.c: 325: {
  7858                           ;IR.c: 326: if(IRcommand == Global2.RemoteButtonRF[i][j][1])
  7859  006D3A  0100               	movlb	0	; () banked
  7860  006D3C  51F4               	movf	UseIRCode@i& (0+255),w,b
  7861  006D3E  0D06               	mullw	6
  7862  006D40  0E7C               	movlw	low _Global2
  7863  006D42  0100               	movlb	0	; () banked
  7864  006D44  6FEF               	movwf	??_UseIRCode& (0+255),b
  7865  006D46  0E03               	movlw	high _Global2
  7866  006D48  0100               	movlb	0	; () banked
  7867  006D4A  6FF0               	movwf	(??_UseIRCode+1)& (0+255),b
  7868  006D4C  50F3               	movf	prodl,w,c
  7869  006D4E  0100               	movlb	0	; () banked
  7870  006D50  27EF               	addwf	??_UseIRCode& (0+255),f,b
  7871  006D52  50F4               	movf	prodh,w,c
  7872  006D54  0100               	movlb	0	; () banked
  7873  006D56  23F0               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  7874  006D58  0100               	movlb	0	; () banked
  7875  006D5A  51F3               	movf	UseIRCode@j& (0+255),w,b
  7876  006D5C  0D02               	mullw	2
  7877  006D5E  50F3               	movf	prodl,w,c
  7878  006D60  0100               	movlb	0	; () banked
  7879  006D62  27EF               	addwf	??_UseIRCode& (0+255),f,b
  7880  006D64  50F4               	movf	prodh,w,c
  7881  006D66  0100               	movlb	0	; () banked
  7882  006D68  23F0               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  7883  006D6A  0E01               	movlw	1
  7884  006D6C  0100               	movlb	0	; () banked
  7885  006D6E  25EF               	addwf	??_UseIRCode& (0+255),w,b
  7886  006D70  6ED9               	movwf	fsr2l,c
  7887  006D72  0E00               	movlw	0
  7888  006D74  0100               	movlb	0	; () banked
  7889  006D76  21F0               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  7890  006D78  6EDA               	movwf	fsr2h,c
  7891  006D7A  505A               	movf	_IRcommand,w,c
  7892  006D7C  18DE               	xorwf	postinc2,w,c
  7893  006D7E  A4D8               	btfss	status,2,c
  7894  006D80  D012               	goto	l11910
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;IR.c: 327: {
  7898                           ;IR.c: 328: if(*Code == 2)
  7899  006D82  C0E9  FFD9         	movff	UseIRCode@Code,fsr2l
  7900  006D86  C0EA  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7901  006D8A  0E02               	movlw	2
  7902  006D8C  18DE               	xorwf	postinc2,w,c
  7903  006D8E  A4D8               	btfss	status,2,c
  7904  006D90  D002               	goto	l11906
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;IR.c: 329: {
  7908                           ;IR.c: 330: (LATC |= 0x02);
  7909  006D92  828B               	bsf	3979,1,c	;volatile
  7910  006D94  D000               	goto	l11906
  7911  006D96                     l11906:
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;IR.c: 331: }
  7915                           ;IR.c: 332: SendRF_Channel(i);
  7916  006D96  0100               	movlb	0	; () banked
  7917  006D98  51F4               	movf	UseIRCode@i& (0+255),w,b
  7918  006D9A  EC99  F034         	call	_SendRF_Channel
  7919                           
  7920                           ;IR.c: 333: found = 1;
  7921  006D9E  0E01               	movlw	1
  7922  006DA0  0100               	movlb	0	; () banked
  7923  006DA2  6FF2               	movwf	UseIRCode@found& (0+255),b
  7924                           
  7925                           ; BSR set to: 0
  7926  006DA4  D000               	goto	l11910
  7927  006DA6                     l11910:
  7928                           
  7929                           ; BSR set to: 0
  7930  006DA6  0100               	movlb	0	; () banked
  7931  006DA8  2BF4               	incf	UseIRCode@i& (0+255),f,b
  7932  006DAA  D7A4               	goto	l11894
  7933  006DAC                     l11914:
  7934                           
  7935                           ; BSR set to: 0
  7936  006DAC  0100               	movlb	0	; () banked
  7937  006DAE  2BF3               	incf	UseIRCode@j& (0+255),f,b
  7938  006DB0  D799               	goto	l11888
  7939  006DB2                     l11918:
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;IR.c: 334: }
  7943                           ;IR.c: 335: }
  7944                           ;IR.c: 336: }
  7945                           ;IR.c: 337: }
  7946                           ;IR.c: 339: if(found == 0)
  7947  006DB2  0100               	movlb	0	; () banked
  7948  006DB4  51F2               	movf	UseIRCode@found& (0+255),w,b
  7949  006DB6  0100               	movlb	0	; () banked
  7950  006DB8  A4D8               	btfss	status,2,c
  7951  006DBA  D002               	goto	l11922
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;IR.c: 340: {
  7955                           ;IR.c: 341: (LATC |= 0x02);
  7956  006DBC  828B               	bsf	3979,1,c	;volatile
  7957                           
  7958                           ; BSR set to: 0
  7959                           
  7960                           ; BSR set to: 0
  7961  006DBE  D000               	goto	l11922
  7962  006DC0                     l11922:
  7963                           
  7964                           ;IR.c: 342: }
  7965                           ;IR.c: 343: }
  7966                           ;IR.c: 344: }
  7967                           ;IR.c: 345: *Code = 0;
  7968  006DC0  C0E9  FFD9         	movff	UseIRCode@Code,fsr2l
  7969  006DC4  C0EA  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7970  006DC8  0E00               	movlw	0
  7971  006DCA  6EDF               	movwf	indf2,c
  7972                           
  7973                           ;IR.c: 346: IRpinOLD = ReadIRpin();
  7974  006DCC  EC57  F052         	call	_ReadIRpin	;wreg free
  7975  006DD0  6E4C               	movwf	_IRpinOLD,c
  7976                           
  7977                           ;IR.c: 347: INTCONbits.RBIF = 0;
  7978  006DD2  90F2               	bcf	intcon,0,c	;volatile
  7979                           
  7980                           ;IR.c: 348: (IOCBbits.IOCB4 = 1);
  7981  006DD4  887D               	bsf	3965,4,c	;volatile
  7982                           
  7983                           ;IR.c: 349: INTCONbits.RBIE = 1;
  7984  006DD6  86F2               	bsf	intcon,3,c	;volatile
  7985  006DD8  0012               	return		;funcret
  7986  006DDA                     __end_of_UseIRCode:
  7987                           	opt stack 0
  7988                           tblptru	equ	0xFF8
  7989                           tblptrh	equ	0xFF7
  7990                           tblptrl	equ	0xFF6
  7991                           tablat	equ	0xFF5
  7992                           prodh	equ	0xFF4
  7993                           prodl	equ	0xFF3
  7994                           intcon	equ	0xFF2
  7995                           postinc0	equ	0xFEE
  7996                           wreg	equ	0xFE8
  7997                           postdec1	equ	0xFE5
  7998                           fsr1l	equ	0xFE1
  7999                           indf2	equ	0xFDF
  8000                           postinc2	equ	0xFDE
  8001                           fsr2h	equ	0xFDA
  8002                           fsr2l	equ	0xFD9
  8003                           status	equ	0xFD8
  8004                           
  8005 ;; *************** function _SendRF_Channel *****************
  8006 ;; Defined at:
  8007 ;;		line 165 in file "RF.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  channel         1    wreg     unsigned char 
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;  channel         1   16[BANK0 ] unsigned char 
  8012 ;; Return value:  Size  Location     Type
  8013 ;;		None               void
  8014 ;; Registers used:
  8015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8016 ;; Tracked objects:
  8017 ;;		On entry : 0/0
  8018 ;;		On exit  : 0/0
  8019 ;;		Unchanged: 0/0
  8020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8022 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8024 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8025 ;;Total ram usage:        1 bytes
  8026 ;; Hardware stack levels used:    1
  8027 ;; Hardware stack levels required when called:    9
  8028 ;; This function calls:
  8029 ;;		_SendRF_wait
  8030 ;; This function is called by:
  8031 ;;		_UseIRCode
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035                           	psect	text2
  8036  006932                     __ptext2:
  8037                           	opt stack 0
  8038  006932                     _SendRF_Channel:
  8039                           	opt stack 20
  8040                           
  8041                           ;incstack = 0
  8042                           ;SendRF_Channel@channel stored from wreg
  8043  006932  0100               	movlb	0	; () banked
  8044  006934  6F70               	movwf	SendRF_Channel@channel& (0+255),b
  8045                           
  8046                           ; BSR set to: 0
  8047                           ;RF.c: 167: switch (channel)
  8048  006936  D10D               	goto	l11626
  8049  006938                     l11568:
  8050                           
  8051                           ; BSR set to: 0
  8052                           ;RF.c: 171: SendRF_wait(Conf1_ChannelD,1,12,5);
  8053  006938  0EC7               	movlw	low _Conf1_ChannelD
  8054  00693A  0100               	movlb	0	; () banked
  8055  00693C  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8056  00693E  0EF1               	movlw	high _Conf1_ChannelD
  8057  006940  0100               	movlb	0	; () banked
  8058  006942  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8059  006944  0E01               	movlw	1
  8060  006946  0100               	movlb	0	; () banked
  8061  006948  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8062  00694A  0E0C               	movlw	12
  8063  00694C  0100               	movlb	0	; () banked
  8064  00694E  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8065  006950  0E05               	movlw	5
  8066  006952  0100               	movlb	0	; () banked
  8067  006954  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8068  006956  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8069                           
  8070                           ;RF.c: 172: break;
  8071  00695A  0012               	return	
  8072  00695C                     l11570:
  8073                           
  8074                           ;RF.c: 175: SendRF_wait(Conf1_ChannelE,1,12,5);
  8075  00695C  0ED3               	movlw	low _Conf1_ChannelE
  8076  00695E  0100               	movlb	0	; () banked
  8077  006960  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8078  006962  0EF1               	movlw	high _Conf1_ChannelE
  8079  006964  0100               	movlb	0	; () banked
  8080  006966  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8081  006968  0E01               	movlw	1
  8082  00696A  0100               	movlb	0	; () banked
  8083  00696C  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8084  00696E  0E0C               	movlw	12
  8085  006970  0100               	movlb	0	; () banked
  8086  006972  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8087  006974  0E05               	movlw	5
  8088  006976  0100               	movlb	0	; () banked
  8089  006978  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8090  00697A  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8091                           
  8092                           ;RF.c: 176: break;
  8093  00697E  0012               	return	
  8094  006980                     l11572:
  8095                           
  8096                           ;RF.c: 179: SendRF_wait(Conf1_ChannelF,1,12,5);
  8097  006980  0EDF               	movlw	low _Conf1_ChannelF
  8098  006982  0100               	movlb	0	; () banked
  8099  006984  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8100  006986  0EF1               	movlw	high _Conf1_ChannelF
  8101  006988  0100               	movlb	0	; () banked
  8102  00698A  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8103  00698C  0E01               	movlw	1
  8104  00698E  0100               	movlb	0	; () banked
  8105  006990  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8106  006992  0E0C               	movlw	12
  8107  006994  0100               	movlb	0	; () banked
  8108  006996  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8109  006998  0E05               	movlw	5
  8110  00699A  0100               	movlb	0	; () banked
  8111  00699C  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8112  00699E  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8113                           
  8114                           ;RF.c: 180: break;
  8115  0069A2  0012               	return	
  8116  0069A4                     l11574:
  8117                           
  8118                           ;RF.c: 183: if(Conf2_ChannelB_Status)
  8119  0069A4  5044               	movf	_Conf2_ChannelB_Status,w,c
  8120  0069A6  B4D8               	btfsc	status,2,c
  8121  0069A8  D014               	goto	l11580
  8122                           
  8123                           ;RF.c: 184: {
  8124                           ;RF.c: 185: SendRF_wait(Conf2_ChannelB_OFF,2,16,5);
  8125  0069AA  0EEC               	movlw	low _Conf2_ChannelB_OFF
  8126  0069AC  0100               	movlb	0	; () banked
  8127  0069AE  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8128  0069B0  0EF0               	movlw	high _Conf2_ChannelB_OFF
  8129  0069B2  0100               	movlb	0	; () banked
  8130  0069B4  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8131  0069B6  0E02               	movlw	2
  8132  0069B8  0100               	movlb	0	; () banked
  8133  0069BA  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8134  0069BC  0E10               	movlw	16
  8135  0069BE  0100               	movlb	0	; () banked
  8136  0069C0  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8137  0069C2  0E05               	movlw	5
  8138  0069C4  0100               	movlb	0	; () banked
  8139  0069C6  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8140  0069C8  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8141                           
  8142                           ;RF.c: 186: Conf2_ChannelB_Status = 0;
  8143  0069CC  0E00               	movlw	0
  8144  0069CE  6E44               	movwf	_Conf2_ChannelB_Status,c
  8145                           
  8146                           ;RF.c: 187: }
  8147  0069D0  0012               	return	
  8148  0069D2                     l11580:
  8149                           
  8150                           ;RF.c: 188: else
  8151                           ;RF.c: 189: {
  8152                           ;RF.c: 190: SendRF_wait(Conf2_ChannelB_ON,2,16,5);
  8153  0069D2  0EFC               	movlw	low _Conf2_ChannelB_ON
  8154  0069D4  0100               	movlb	0	; () banked
  8155  0069D6  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8156  0069D8  0EF0               	movlw	high _Conf2_ChannelB_ON
  8157  0069DA  0100               	movlb	0	; () banked
  8158  0069DC  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8159  0069DE  0E02               	movlw	2
  8160  0069E0  0100               	movlb	0	; () banked
  8161  0069E2  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8162  0069E4  0E10               	movlw	16
  8163  0069E6  0100               	movlb	0	; () banked
  8164  0069E8  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8165  0069EA  0E05               	movlw	5
  8166  0069EC  0100               	movlb	0	; () banked
  8167  0069EE  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8168  0069F0  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8169                           
  8170                           ;RF.c: 191: Conf2_ChannelB_Status = 1;
  8171  0069F4  0E01               	movlw	1
  8172  0069F6  6E44               	movwf	_Conf2_ChannelB_Status,c
  8173                           
  8174                           ;RF.c: 192: }
  8175                           ;RF.c: 193: break;
  8176  0069F8  0012               	return	
  8177  0069FA                     l11584:
  8178                           
  8179                           ;RF.c: 196: if(Conf2_ChannelD_Status)
  8180  0069FA  5045               	movf	_Conf2_ChannelD_Status,w,c
  8181  0069FC  B4D8               	btfsc	status,2,c
  8182  0069FE  D014               	goto	l11590
  8183                           
  8184                           ;RF.c: 197: {
  8185                           ;RF.c: 198: SendRF_wait(Conf2_ChannelD_OFF,2,16,5);
  8186  006A00  0E0C               	movlw	low _Conf2_ChannelD_OFF
  8187  006A02  0100               	movlb	0	; () banked
  8188  006A04  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8189  006A06  0EF1               	movlw	high _Conf2_ChannelD_OFF
  8190  006A08  0100               	movlb	0	; () banked
  8191  006A0A  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8192  006A0C  0E02               	movlw	2
  8193  006A0E  0100               	movlb	0	; () banked
  8194  006A10  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8195  006A12  0E10               	movlw	16
  8196  006A14  0100               	movlb	0	; () banked
  8197  006A16  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8198  006A18  0E05               	movlw	5
  8199  006A1A  0100               	movlb	0	; () banked
  8200  006A1C  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8201  006A1E  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8202                           
  8203                           ;RF.c: 199: Conf2_ChannelD_Status = 0;
  8204  006A22  0E00               	movlw	0
  8205  006A24  6E45               	movwf	_Conf2_ChannelD_Status,c
  8206                           
  8207                           ;RF.c: 200: }
  8208  006A26  0012               	return	
  8209  006A28                     l11590:
  8210                           
  8211                           ;RF.c: 201: else
  8212                           ;RF.c: 202: {
  8213                           ;RF.c: 203: SendRF_wait(Conf2_ChannelD_ON,2,16,5);
  8214  006A28  0E1C               	movlw	low _Conf2_ChannelD_ON
  8215  006A2A  0100               	movlb	0	; () banked
  8216  006A2C  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8217  006A2E  0EF1               	movlw	high _Conf2_ChannelD_ON
  8218  006A30  0100               	movlb	0	; () banked
  8219  006A32  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8220  006A34  0E02               	movlw	2
  8221  006A36  0100               	movlb	0	; () banked
  8222  006A38  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8223  006A3A  0E10               	movlw	16
  8224  006A3C  0100               	movlb	0	; () banked
  8225  006A3E  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8226  006A40  0E05               	movlw	5
  8227  006A42  0100               	movlb	0	; () banked
  8228  006A44  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8229  006A46  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8230                           
  8231                           ;RF.c: 204: Conf2_ChannelD_Status = 1;
  8232  006A4A  0E01               	movlw	1
  8233  006A4C  6E45               	movwf	_Conf2_ChannelD_Status,c
  8234                           
  8235                           ;RF.c: 205: }
  8236                           ;RF.c: 206: break;
  8237  006A4E  0012               	return	
  8238  006A50                     l11594:
  8239                           
  8240                           ;RF.c: 209: if(Conf2_ChannelH_1_Status)
  8241  006A50  5046               	movf	_Conf2_ChannelH_1_Status,w,c
  8242  006A52  B4D8               	btfsc	status,2,c
  8243  006A54  D014               	goto	l11600
  8244                           
  8245                           ;RF.c: 210: {
  8246                           ;RF.c: 211: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,5);
  8247  006A56  0E2C               	movlw	low _Conf2_ChannelH_1_OFF
  8248  006A58  0100               	movlb	0	; () banked
  8249  006A5A  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8250  006A5C  0EF1               	movlw	high _Conf2_ChannelH_1_OFF
  8251  006A5E  0100               	movlb	0	; () banked
  8252  006A60  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8253  006A62  0E02               	movlw	2
  8254  006A64  0100               	movlb	0	; () banked
  8255  006A66  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8256  006A68  0E10               	movlw	16
  8257  006A6A  0100               	movlb	0	; () banked
  8258  006A6C  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8259  006A6E  0E05               	movlw	5
  8260  006A70  0100               	movlb	0	; () banked
  8261  006A72  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8262  006A74  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8263                           
  8264                           ;RF.c: 212: Conf2_ChannelH_1_Status = 0;
  8265  006A78  0E00               	movlw	0
  8266  006A7A  6E46               	movwf	_Conf2_ChannelH_1_Status,c
  8267                           
  8268                           ;RF.c: 213: }
  8269  006A7C  0012               	return	
  8270  006A7E                     l11600:
  8271                           
  8272                           ;RF.c: 214: else
  8273                           ;RF.c: 215: {
  8274                           ;RF.c: 216: SendRF_wait(Conf2_ChannelH_1_ON,2,16,5);
  8275  006A7E  0E3C               	movlw	low _Conf2_ChannelH_1_ON
  8276  006A80  0100               	movlb	0	; () banked
  8277  006A82  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8278  006A84  0EF1               	movlw	high _Conf2_ChannelH_1_ON
  8279  006A86  0100               	movlb	0	; () banked
  8280  006A88  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8281  006A8A  0E02               	movlw	2
  8282  006A8C  0100               	movlb	0	; () banked
  8283  006A8E  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8284  006A90  0E10               	movlw	16
  8285  006A92  0100               	movlb	0	; () banked
  8286  006A94  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8287  006A96  0E05               	movlw	5
  8288  006A98  0100               	movlb	0	; () banked
  8289  006A9A  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8290  006A9C  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8291                           
  8292                           ;RF.c: 217: Conf2_ChannelH_1_Status = 1;
  8293  006AA0  0E01               	movlw	1
  8294  006AA2  6E46               	movwf	_Conf2_ChannelH_1_Status,c
  8295                           
  8296                           ;RF.c: 218: }
  8297                           ;RF.c: 219: break;
  8298  006AA4  0012               	return	
  8299  006AA6                     l11604:
  8300                           
  8301                           ;RF.c: 222: if(Conf2_ChannelH_2_Status)
  8302  006AA6  5047               	movf	_Conf2_ChannelH_2_Status,w,c
  8303  006AA8  B4D8               	btfsc	status,2,c
  8304  006AAA  D014               	goto	l11610
  8305                           
  8306                           ;RF.c: 223: {
  8307                           ;RF.c: 224: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,5);
  8308  006AAC  0E4C               	movlw	low _Conf2_ChannelH_2_OFF
  8309  006AAE  0100               	movlb	0	; () banked
  8310  006AB0  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8311  006AB2  0EF1               	movlw	high _Conf2_ChannelH_2_OFF
  8312  006AB4  0100               	movlb	0	; () banked
  8313  006AB6  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8314  006AB8  0E02               	movlw	2
  8315  006ABA  0100               	movlb	0	; () banked
  8316  006ABC  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8317  006ABE  0E10               	movlw	16
  8318  006AC0  0100               	movlb	0	; () banked
  8319  006AC2  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8320  006AC4  0E05               	movlw	5
  8321  006AC6  0100               	movlb	0	; () banked
  8322  006AC8  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8323  006ACA  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8324                           
  8325                           ;RF.c: 225: Conf2_ChannelH_2_Status = 0;
  8326  006ACE  0E00               	movlw	0
  8327  006AD0  6E47               	movwf	_Conf2_ChannelH_2_Status,c
  8328                           
  8329                           ;RF.c: 226: }
  8330  006AD2  0012               	return	
  8331  006AD4                     l11610:
  8332                           
  8333                           ;RF.c: 227: else
  8334                           ;RF.c: 228: {
  8335                           ;RF.c: 229: SendRF_wait(Conf2_ChannelH_2_ON,2,16,5);
  8336  006AD4  0E5C               	movlw	low _Conf2_ChannelH_2_ON
  8337  006AD6  0100               	movlb	0	; () banked
  8338  006AD8  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8339  006ADA  0EF1               	movlw	high _Conf2_ChannelH_2_ON
  8340  006ADC  0100               	movlb	0	; () banked
  8341  006ADE  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8342  006AE0  0E02               	movlw	2
  8343  006AE2  0100               	movlb	0	; () banked
  8344  006AE4  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8345  006AE6  0E10               	movlw	16
  8346  006AE8  0100               	movlb	0	; () banked
  8347  006AEA  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8348  006AEC  0E05               	movlw	5
  8349  006AEE  0100               	movlb	0	; () banked
  8350  006AF0  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8351  006AF2  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8352                           
  8353                           ;RF.c: 230: Conf2_ChannelH_2_Status = 1;
  8354  006AF6  0E01               	movlw	1
  8355  006AF8  6E47               	movwf	_Conf2_ChannelH_2_Status,c
  8356                           
  8357                           ;RF.c: 231: }
  8358                           ;RF.c: 232: break;
  8359  006AFA  0012               	return	
  8360  006AFC                     l11614:
  8361                           
  8362                           ;RF.c: 235: if(Conf2_ChannelH_3_Status)
  8363  006AFC  5048               	movf	_Conf2_ChannelH_3_Status,w,c
  8364  006AFE  B4D8               	btfsc	status,2,c
  8365  006B00  D014               	goto	l11620
  8366                           
  8367                           ;RF.c: 236: {
  8368                           ;RF.c: 237: SendRF_wait(Conf2_ChannelH_3_OFF,2,16,5);
  8369  006B02  0E6C               	movlw	low _Conf2_ChannelH_3_OFF
  8370  006B04  0100               	movlb	0	; () banked
  8371  006B06  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8372  006B08  0EF1               	movlw	high _Conf2_ChannelH_3_OFF
  8373  006B0A  0100               	movlb	0	; () banked
  8374  006B0C  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8375  006B0E  0E02               	movlw	2
  8376  006B10  0100               	movlb	0	; () banked
  8377  006B12  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8378  006B14  0E10               	movlw	16
  8379  006B16  0100               	movlb	0	; () banked
  8380  006B18  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8381  006B1A  0E05               	movlw	5
  8382  006B1C  0100               	movlb	0	; () banked
  8383  006B1E  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8384  006B20  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8385                           
  8386                           ;RF.c: 238: Conf2_ChannelH_3_Status = 0;
  8387  006B24  0E00               	movlw	0
  8388  006B26  6E48               	movwf	_Conf2_ChannelH_3_Status,c
  8389                           
  8390                           ;RF.c: 239: }
  8391  006B28  0012               	return	
  8392  006B2A                     l11620:
  8393                           
  8394                           ;RF.c: 240: else
  8395                           ;RF.c: 241: {
  8396                           ;RF.c: 242: SendRF_wait(Conf2_ChannelH_3_ON,2,16,5);
  8397  006B2A  0E7C               	movlw	low _Conf2_ChannelH_3_ON
  8398  006B2C  0100               	movlb	0	; () banked
  8399  006B2E  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8400  006B30  0EF1               	movlw	high _Conf2_ChannelH_3_ON
  8401  006B32  0100               	movlb	0	; () banked
  8402  006B34  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8403  006B36  0E02               	movlw	2
  8404  006B38  0100               	movlb	0	; () banked
  8405  006B3A  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8406  006B3C  0E10               	movlw	16
  8407  006B3E  0100               	movlb	0	; () banked
  8408  006B40  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8409  006B42  0E05               	movlw	5
  8410  006B44  0100               	movlb	0	; () banked
  8411  006B46  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8412  006B48  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8413                           
  8414                           ;RF.c: 243: Conf2_ChannelH_3_Status = 1;
  8415  006B4C  0E01               	movlw	1
  8416  006B4E  6E48               	movwf	_Conf2_ChannelH_3_Status,c
  8417                           
  8418                           ;RF.c: 248: }
  8419                           
  8420                           ;RF.c: 247: break;
  8421                           
  8422                           ;RF.c: 246: default:
  8423                           
  8424                           ;RF.c: 244: }
  8425                           ;RF.c: 245: break;
  8426  006B50  0012               	return	
  8427  006B52                     l11626:
  8428  006B52  0100               	movlb	0	; () banked
  8429  006B54  5170               	movf	SendRF_Channel@channel& (0+255),w,b
  8430                           
  8431                           ; Switch size 1, requested type "space"
  8432                           ; Number of cases is 8, Range of values is 0 to 7
  8433                           ; switch strategies available:
  8434                           ; Name         Instructions Cycles
  8435                           ; simple_byte           25    13 (average)
  8436                           ;	Chosen strategy is simple_byte
  8437  006B56  0A00               	xorlw	0	; case 0
  8438  006B58  B4D8               	btfsc	status,2,c
  8439  006B5A  D6EE               	goto	l11568
  8440  006B5C  0A01               	xorlw	1	; case 1
  8441  006B5E  B4D8               	btfsc	status,2,c
  8442  006B60  D6FD               	goto	l11570
  8443  006B62  0A03               	xorlw	3	; case 2
  8444  006B64  B4D8               	btfsc	status,2,c
  8445  006B66  D70C               	goto	l11572
  8446  006B68  0A01               	xorlw	1	; case 3
  8447  006B6A  B4D8               	btfsc	status,2,c
  8448  006B6C  D71B               	goto	l11574
  8449  006B6E  0A07               	xorlw	7	; case 4
  8450  006B70  B4D8               	btfsc	status,2,c
  8451  006B72  D743               	goto	l11584
  8452  006B74  0A01               	xorlw	1	; case 5
  8453  006B76  B4D8               	btfsc	status,2,c
  8454  006B78  D76B               	goto	l11594
  8455  006B7A  0A03               	xorlw	3	; case 6
  8456  006B7C  B4D8               	btfsc	status,2,c
  8457  006B7E  D793               	goto	l11604
  8458  006B80  0A01               	xorlw	1	; case 7
  8459  006B82  A4D8               	btfss	status,2,c
  8460  006B84  0012               	return	
  8461  006B86  D7BA               	goto	l11614
  8462                           
  8463                           ; BSR set to: 0
  8464  006B88  0012               	return		;funcret
  8465  006B8A                     __end_of_SendRF_Channel:
  8466                           	opt stack 0
  8467                           tblptru	equ	0xFF8
  8468                           tblptrh	equ	0xFF7
  8469                           tblptrl	equ	0xFF6
  8470                           tablat	equ	0xFF5
  8471                           prodh	equ	0xFF4
  8472                           prodl	equ	0xFF3
  8473                           intcon	equ	0xFF2
  8474                           postinc0	equ	0xFEE
  8475                           wreg	equ	0xFE8
  8476                           postdec1	equ	0xFE5
  8477                           fsr1l	equ	0xFE1
  8478                           indf2	equ	0xFDF
  8479                           postinc2	equ	0xFDE
  8480                           fsr2h	equ	0xFDA
  8481                           fsr2l	equ	0xFD9
  8482                           status	equ	0xFD8
  8483                           
  8484 ;; *************** function _ReadPushButton *****************
  8485 ;; Defined at:
  8486 ;;		line 52 in file "Button.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;		None
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;		None
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      unsigned char 
  8493 ;; Registers used:
  8494 ;;		wreg
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8504 ;;Total ram usage:        0 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    6
  8507 ;; This function calls:
  8508 ;;		Nothing
  8509 ;; This function is called by:
  8510 ;;		_UseIRCode
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           	psect	text3
  8515  00A476                     __ptext3:
  8516                           	opt stack 0
  8517  00A476                     _ReadPushButton:
  8518                           	opt stack 23
  8519                           
  8520                           ;Button.c: 55: if((PORTC & 0x01) != 0x01)
  8521                           
  8522                           ;incstack = 0
  8523  00A476  B082               	btfsc	3970,0,c	;volatile
  8524  00A478  D002               	goto	l11536
  8525                           
  8526                           ;Button.c: 56: {
  8527                           ;Button.c: 57: return 1;
  8528  00A47A  0E01               	movlw	1
  8529  00A47C  0012               	return	
  8530  00A47E                     l11536:
  8531                           
  8532                           ;Button.c: 58: }
  8533                           ;Button.c: 59: return 0;
  8534  00A47E  0E00               	movlw	0
  8535  00A480  0012               	return	
  8536  00A482  0012               	return		;funcret
  8537  00A484                     __end_of_ReadPushButton:
  8538                           	opt stack 0
  8539                           tblptru	equ	0xFF8
  8540                           tblptrh	equ	0xFF7
  8541                           tblptrl	equ	0xFF6
  8542                           tablat	equ	0xFF5
  8543                           prodh	equ	0xFF4
  8544                           prodl	equ	0xFF3
  8545                           intcon	equ	0xFF2
  8546                           postinc0	equ	0xFEE
  8547                           wreg	equ	0xFE8
  8548                           postdec1	equ	0xFE5
  8549                           fsr1l	equ	0xFE1
  8550                           indf2	equ	0xFDF
  8551                           postinc2	equ	0xFDE
  8552                           fsr2h	equ	0xFDA
  8553                           fsr2l	equ	0xFD9
  8554                           status	equ	0xFD8
  8555                           
  8556 ;; *************** function _ReadCodeButtons *****************
  8557 ;; Defined at:
  8558 ;;		line 67 in file "Button.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;		None
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;  temp            1   12[BANK0 ] unsigned char 
  8563 ;; Return value:  Size  Location     Type
  8564 ;;                  1    wreg      unsigned char 
  8565 ;; Registers used:
  8566 ;;		wreg, status,2, status,0, cstack
  8567 ;; Tracked objects:
  8568 ;;		On entry : 0/0
  8569 ;;		On exit  : 0/0
  8570 ;;		Unchanged: 0/0
  8571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8573 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8575 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8576 ;;Total ram usage:        1 bytes
  8577 ;; Hardware stack levels used:    1
  8578 ;; Hardware stack levels required when called:    7
  8579 ;; This function calls:
  8580 ;;		_delayUS
  8581 ;; This function is called by:
  8582 ;;		_UseIRCode
  8583 ;; This function uses a non-reentrant model
  8584 ;;
  8585                           
  8586                           	psect	text4
  8587  009D96                     __ptext4:
  8588                           	opt stack 0
  8589  009D96                     _ReadCodeButtons:
  8590                           	opt stack 22
  8591                           
  8592                           ;Button.c: 69: unsigned char temp = 0;
  8593                           
  8594                           ;incstack = 0
  8595  009D96  0E00               	movlw	0
  8596  009D98  0100               	movlb	0	; () banked
  8597  009D9A  6F6C               	movwf	ReadCodeButtons@temp& (0+255),b
  8598                           
  8599                           ; BSR set to: 0
  8600                           ;Button.c: 71: (LATC &= ~0x10);
  8601  009D9C  988B               	bcf	3979,4,c	;volatile
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;Button.c: 72: delayUS(5);
  8605  009D9E  0E05               	movlw	5
  8606  009DA0  0100               	movlb	0	; () banked
  8607  009DA2  6F63               	movwf	delayUS@US& (0+255),b
  8608  009DA4  0E00               	movlw	0
  8609  009DA6  6F64               	movwf	(delayUS@US+1)& (0+255),b
  8610  009DA8  0E00               	movlw	0
  8611  009DAA  6F65               	movwf	(delayUS@US+2)& (0+255),b
  8612  009DAC  0E00               	movlw	0
  8613  009DAE  6F66               	movwf	(delayUS@US+3)& (0+255),b
  8614  009DB0  ECA0  F04E         	call	_delayUS	;wreg free
  8615                           
  8616                           ;Button.c: 75: if((PORTB & 0x01) != 0x01)
  8617  009DB4  B081               	btfsc	3969,0,c	;volatile
  8618  009DB6  D004               	goto	l11550
  8619                           
  8620                           ;Button.c: 76: {
  8621                           ;Button.c: 77: temp +=8;
  8622  009DB8  0E08               	movlw	8
  8623  009DBA  0100               	movlb	0	; () banked
  8624  009DBC  276C               	addwf	ReadCodeButtons@temp& (0+255),f,b
  8625  009DBE  D000               	goto	l11550
  8626  009DC0                     l11550:
  8627                           
  8628                           ;Button.c: 78: }
  8629                           ;Button.c: 79: if((PORTB & 0x02) != 0x02)
  8630  009DC0  B281               	btfsc	3969,1,c	;volatile
  8631  009DC2  D004               	goto	l11554
  8632                           
  8633                           ;Button.c: 80: {
  8634                           ;Button.c: 81: temp +=4;
  8635  009DC4  0E04               	movlw	4
  8636  009DC6  0100               	movlb	0	; () banked
  8637  009DC8  276C               	addwf	ReadCodeButtons@temp& (0+255),f,b
  8638  009DCA  D000               	goto	l11554
  8639  009DCC                     l11554:
  8640                           
  8641                           ;Button.c: 82: }
  8642                           ;Button.c: 83: if((PORTB & 0x04) != 0x04)
  8643  009DCC  B481               	btfsc	3969,2,c	;volatile
  8644  009DCE  D004               	goto	l11558
  8645                           
  8646                           ;Button.c: 84: {
  8647                           ;Button.c: 85: temp +=2;
  8648  009DD0  0E02               	movlw	2
  8649  009DD2  0100               	movlb	0	; () banked
  8650  009DD4  276C               	addwf	ReadCodeButtons@temp& (0+255),f,b
  8651  009DD6  D000               	goto	l11558
  8652  009DD8                     l11558:
  8653                           
  8654                           ;Button.c: 86: }
  8655                           ;Button.c: 87: if((PORTB & 0x08) != 0x08)
  8656  009DD8  B681               	btfsc	3969,3,c	;volatile
  8657  009DDA  D002               	goto	l1761
  8658                           
  8659                           ;Button.c: 88: {
  8660                           ;Button.c: 89: temp +=1;
  8661  009DDC  0100               	movlb	0	; () banked
  8662  009DDE  2B6C               	incf	ReadCodeButtons@temp& (0+255),f,b
  8663  009DE0                     l1761:
  8664                           
  8665                           ;Button.c: 90: }
  8666                           ;Button.c: 91: (LATC |= 0x10);
  8667  009DE0  888B               	bsf	3979,4,c	;volatile
  8668                           
  8669                           ;Button.c: 92: return temp;
  8670  009DE2  0100               	movlb	0	; () banked
  8671  009DE4  516C               	movf	ReadCodeButtons@temp& (0+255),w,b
  8672  009DE6  0012               	return	
  8673                           
  8674                           ; BSR set to: 0
  8675                           
  8676                           ; BSR set to: 0
  8677  009DE8  0012               	return		;funcret
  8678  009DEA                     __end_of_ReadCodeButtons:
  8679                           	opt stack 0
  8680                           tblptru	equ	0xFF8
  8681                           tblptrh	equ	0xFF7
  8682                           tblptrl	equ	0xFF6
  8683                           tablat	equ	0xFF5
  8684                           prodh	equ	0xFF4
  8685                           prodl	equ	0xFF3
  8686                           intcon	equ	0xFF2
  8687                           postinc0	equ	0xFEE
  8688                           wreg	equ	0xFE8
  8689                           postdec1	equ	0xFE5
  8690                           fsr1l	equ	0xFE1
  8691                           indf2	equ	0xFDF
  8692                           postinc2	equ	0xFDE
  8693                           fsr2h	equ	0xFDA
  8694                           fsr2l	equ	0xFD9
  8695                           status	equ	0xFD8
  8696                           
  8697 ;; *************** function _UseBluetooth *****************
  8698 ;; Defined at:
  8699 ;;		line 401 in file "Bluetooth.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;  String          2  149[BANK0 ] PTR unsigned char 
  8702 ;;		 -> main@BluetoothString(100), 
  8703 ;;  StringPos       1  151[BANK0 ] unsigned char 
  8704 ;; Auto vars:     Size  Location     Type
  8705 ;;  buf           100   12[BANK2 ] unsigned char [100]
  8706 ;;  rfchannelSTR   10  112[BANK2 ] unsigned char [10]
  8707 ;;  temp            4  143[BANK2 ] unsigned long 
  8708 ;;  EnteredNEC      4  134[BANK2 ] unsigned long 
  8709 ;;  SerialNumber    4  127[BANK2 ] long 
  8710 ;;  tempNec         4  123[BANK2 ] unsigned long 
  8711 ;;  i               1  147[BANK2 ] unsigned char 
  8712 ;;  NecCommand      1  142[BANK2 ] unsigned char 
  8713 ;;  NecAddress      1  141[BANK2 ] unsigned char 
  8714 ;;  rfconf          1  140[BANK2 ] unsigned char 
  8715 ;;  tempRFArray     1  139[BANK2 ] unsigned char 
  8716 ;;  ok              1  138[BANK2 ] unsigned char 
  8717 ;;  timeout         1  133[BANK2 ] unsigned char 
  8718 ;;  device          1  132[BANK2 ] unsigned char 
  8719 ;;  EmptyPlace      1  131[BANK2 ] unsigned char 
  8720 ;;  set             1  122[BANK2 ] unsigned char 
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  1    wreg      unsigned char 
  8723 ;; Registers used:
  8724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8730 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8731 ;;      Locals:         0       0       0     136       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8732 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8733 ;;      Totals:         0       3       0     148       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8734 ;;Total ram usage:      151 bytes
  8735 ;; Hardware stack levels used:    1
  8736 ;; Hardware stack levels required when called:   11
  8737 ;; This function calls:
  8738 ;;		_ClearUSART
  8739 ;;		_DecodeNEC
  8740 ;;		_EncodeNEC
  8741 ;;		_GetNumber
  8742 ;;		_GetNumberUnsigned
  8743 ;;		_GetStringAfterComma
  8744 ;;		_ReadVoltage
  8745 ;;		_SendNEC_wait
  8746 ;;		_SendRF_wait
  8747 ;;		_SetEEPROM2
  8748 ;;		_StringAddEqual
  8749 ;;		_StringContains
  8750 ;;		_StringContainsCaseInsensitive
  8751 ;;		_StringMatch
  8752 ;;		_StringMatchCaseInsensitive
  8753 ;;		_SyncEEPROMToGlobal
  8754 ;;		_SyncGlobalToEEPROM
  8755 ;;		_UARTchar
  8756 ;;		_UARTchar_CONST
  8757 ;;		_UARTcommandMenu
  8758 ;;		_UARTstring
  8759 ;;		_UARTstringCRLN
  8760 ;;		_UARTstringCRLN_CONST
  8761 ;;		_UARTstring_CONST
  8762 ;;		_WaitForIRsignal
  8763 ;;		_cleanBuffer
  8764 ;;		_delayUS
  8765 ;;		_lowercaseString
  8766 ;;		_sprintf
  8767 ;; This function is called by:
  8768 ;;		_main
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772                           	psect	text5
  8773  0001CE                     __ptext5:
  8774                           	opt stack 0
  8775  0001CE                     _UseBluetooth:
  8776                           	opt stack 19
  8777                           
  8778                           ;Bluetooth.c: 403: unsigned char ok = 1;
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;incstack = 0
  8782  0001CE  0E01               	movlw	1
  8783  0001D0  0102               	movlb	2	; () banked
  8784  0001D2  6F8A               	movwf	UseBluetooth@ok& (0+255),b
  8785                           
  8786                           ;Bluetooth.c: 405: unsigned long EnteredNEC = 0;
  8787  0001D4  0E00               	movlw	0
  8788  0001D6  0102               	movlb	2	; () banked
  8789  0001D8  6F86               	movwf	UseBluetooth@EnteredNEC& (0+255),b
  8790  0001DA  0E00               	movlw	0
  8791  0001DC  6F87               	movwf	(UseBluetooth@EnteredNEC+1)& (0+255),b
  8792  0001DE  0E00               	movlw	0
  8793  0001E0  6F88               	movwf	(UseBluetooth@EnteredNEC+2)& (0+255),b
  8794  0001E2  0E00               	movlw	0
  8795  0001E4  6F89               	movwf	(UseBluetooth@EnteredNEC+3)& (0+255),b
  8796                           
  8797                           ;Bluetooth.c: 406: unsigned char NecAddress = 0;
  8798  0001E6  0E00               	movlw	0
  8799  0001E8  0102               	movlb	2	; () banked
  8800  0001EA  6F8D               	movwf	UseBluetooth@NecAddress& (0+255),b
  8801                           
  8802                           ;Bluetooth.c: 407: unsigned char NecCommand = 0;
  8803  0001EC  0E00               	movlw	0
  8804  0001EE  0102               	movlb	2	; () banked
  8805  0001F0  6F8E               	movwf	UseBluetooth@NecCommand& (0+255),b
  8806                           
  8807                           ;Bluetooth.c: 408: unsigned long temp = 0;
  8808  0001F2  0E00               	movlw	0
  8809  0001F4  0102               	movlb	2	; () banked
  8810  0001F6  6F8F               	movwf	UseBluetooth@temp& (0+255),b
  8811  0001F8  0E00               	movlw	0
  8812  0001FA  6F90               	movwf	(UseBluetooth@temp+1)& (0+255),b
  8813  0001FC  0E00               	movlw	0
  8814  0001FE  6F91               	movwf	(UseBluetooth@temp+2)& (0+255),b
  8815  000200  0E00               	movlw	0
  8816  000202  6F92               	movwf	(UseBluetooth@temp+3)& (0+255),b
  8817                           
  8818                           ;Bluetooth.c: 409: unsigned long tempNec = 0;
  8819  000204  0E00               	movlw	0
  8820  000206  0102               	movlb	2	; () banked
  8821  000208  6F7B               	movwf	UseBluetooth@tempNec& (0+255),b
  8822  00020A  0E00               	movlw	0
  8823  00020C  6F7C               	movwf	(UseBluetooth@tempNec+1)& (0+255),b
  8824  00020E  0E00               	movlw	0
  8825  000210  6F7D               	movwf	(UseBluetooth@tempNec+2)& (0+255),b
  8826  000212  0E00               	movlw	0
  8827  000214  6F7E               	movwf	(UseBluetooth@tempNec+3)& (0+255),b
  8828                           
  8829                           ;Bluetooth.c: 410: unsigned char buf[100];
  8830                           ;Bluetooth.c: 411: unsigned char timeout =0;
  8831  000216  0E00               	movlw	0
  8832  000218  0102               	movlb	2	; () banked
  8833  00021A  6F85               	movwf	UseBluetooth@timeout& (0+255),b
  8834                           
  8835                           ;Bluetooth.c: 412: unsigned char rfchannelSTR[10];
  8836                           ;Bluetooth.c: 413: unsigned char rfconf, i, tempRFArray;
  8837                           ;Bluetooth.c: 414: unsigned char device = 0;
  8838  00021C  0E00               	movlw	0
  8839  00021E  0102               	movlb	2	; () banked
  8840  000220  6F84               	movwf	UseBluetooth@device& (0+255),b
  8841                           
  8842                           ;Bluetooth.c: 415: unsigned char EmptyPlace = 0;
  8843  000222  0E00               	movlw	0
  8844  000224  0102               	movlb	2	; () banked
  8845  000226  6F83               	movwf	UseBluetooth@EmptyPlace& (0+255),b
  8846                           
  8847                           ;Bluetooth.c: 416: unsigned char set = 0;
  8848  000228  0E00               	movlw	0
  8849  00022A  0102               	movlb	2	; () banked
  8850  00022C  6F7A               	movwf	UseBluetooth@set& (0+255),b
  8851                           
  8852                           ;Bluetooth.c: 417: long SerialNumberTEMP = 0;
  8853  00022E  0E00               	movlw	0
  8854  000230  0102               	movlb	2	; () banked
  8855  000232  6F7F               	movwf	UseBluetooth@SerialNumberTEMP& (0+255),b
  8856  000234  0E00               	movlw	0
  8857  000236  6F80               	movwf	(UseBluetooth@SerialNumberTEMP+1)& (0+255),b
  8858  000238  0E00               	movlw	0
  8859  00023A  6F81               	movwf	(UseBluetooth@SerialNumberTEMP+2)& (0+255),b
  8860  00023C  0E00               	movlw	0
  8861  00023E  6F82               	movwf	(UseBluetooth@SerialNumberTEMP+3)& (0+255),b
  8862                           
  8863                           ; BSR set to: 2
  8864                           ;Bluetooth.c: 419: cleanBuffer(buf,100);
  8865  000240  0E0C               	movlw	low UseBluetooth@buf
  8866  000242  0100               	movlb	0	; () banked
  8867  000244  6F63               	movwf	cleanBuffer@data& (0+255),b
  8868  000246  0E02               	movlw	high UseBluetooth@buf
  8869  000248  0100               	movlb	0	; () banked
  8870  00024A  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
  8871  00024C  0E00               	movlw	0
  8872  00024E  0100               	movlb	0	; () banked
  8873  000250  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
  8874  000252  0E64               	movlw	100
  8875  000254  6F65               	movwf	cleanBuffer@count& (0+255),b
  8876  000256  EC47  F04E         	call	_cleanBuffer	;wreg free
  8877                           
  8878                           ;Bluetooth.c: 420: cleanBuffer(rfchannelSTR,10);
  8879  00025A  0E70               	movlw	low UseBluetooth@rfchannelSTR
  8880  00025C  0100               	movlb	0	; () banked
  8881  00025E  6F63               	movwf	cleanBuffer@data& (0+255),b
  8882  000260  0E02               	movlw	high UseBluetooth@rfchannelSTR
  8883  000262  0100               	movlb	0	; () banked
  8884  000264  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
  8885  000266  0E00               	movlw	0
  8886  000268  0100               	movlb	0	; () banked
  8887  00026A  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
  8888  00026C  0E0A               	movlw	10
  8889  00026E  6F65               	movwf	cleanBuffer@count& (0+255),b
  8890  000270  EC47  F04E         	call	_cleanBuffer	;wreg free
  8891                           
  8892                           ;Bluetooth.c: 422: if(StringContainsCaseInsensitive(String,"Conf1"))
  8893  000274  C0F5  F066         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  8894  000278  C0F6  F067         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  8895  00027C  0EBB               	movlw	low STR_17
  8896  00027E  0100               	movlb	0	; () banked
  8897  000280  6F68               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8898  000282  0EFF               	movlw	high STR_17
  8899  000284  0100               	movlb	0	; () banked
  8900  000286  6F69               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8901  000288  ECD4  F038         	call	_StringContainsCaseInsensitive	;wreg free
  8902  00028C  0900               	iorlw	0
  8903  00028E  B4D8               	btfsc	status,2,c
  8904  000290  D083               	goto	l11962
  8905                           
  8906                           ;Bluetooth.c: 423: {
  8907                           ;Bluetooth.c: 424: if(StringMatchCaseInsensitive(String,Conf1_ChannelD_STR))
  8908  000292  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8909  000296  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8910  00029A  0E8C               	movlw	low _Conf1_ChannelD_STR
  8911  00029C  0100               	movlb	0	; () banked
  8912  00029E  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8913  0002A0  0EF1               	movlw	high _Conf1_ChannelD_STR
  8914  0002A2  0100               	movlb	0	; () banked
  8915  0002A4  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8916  0002A6  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
  8917  0002AA  0900               	iorlw	0
  8918  0002AC  B4D8               	btfsc	status,2,c
  8919  0002AE  D012               	goto	l11944
  8920                           
  8921                           ;Bluetooth.c: 425: {
  8922                           ;Bluetooth.c: 427: SendRF_wait(Conf1_ChannelD,1,12,8);
  8923  0002B0  0EC7               	movlw	low _Conf1_ChannelD
  8924  0002B2  0100               	movlb	0	; () banked
  8925  0002B4  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8926  0002B6  0EF1               	movlw	high _Conf1_ChannelD
  8927  0002B8  0100               	movlb	0	; () banked
  8928  0002BA  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8929  0002BC  0E01               	movlw	1
  8930  0002BE  0100               	movlb	0	; () banked
  8931  0002C0  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8932  0002C2  0E0C               	movlw	12
  8933  0002C4  0100               	movlb	0	; () banked
  8934  0002C6  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8935  0002C8  0E08               	movlw	8
  8936  0002CA  0100               	movlb	0	; () banked
  8937  0002CC  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8938  0002CE  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8939                           
  8940                           ;Bluetooth.c: 428: }
  8941  0002D2  D054               	goto	l11956
  8942  0002D4                     l11944:
  8943                           
  8944                           ;Bluetooth.c: 429: else if(StringMatchCaseInsensitive(String,Conf1_ChannelE_STR))
  8945  0002D4  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8946  0002D8  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8947  0002DC  0E9B               	movlw	low _Conf1_ChannelE_STR
  8948  0002DE  0100               	movlb	0	; () banked
  8949  0002E0  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8950  0002E2  0EF1               	movlw	high _Conf1_ChannelE_STR
  8951  0002E4  0100               	movlb	0	; () banked
  8952  0002E6  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8953  0002E8  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
  8954  0002EC  0900               	iorlw	0
  8955  0002EE  B4D8               	btfsc	status,2,c
  8956  0002F0  D012               	goto	l11948
  8957                           
  8958                           ;Bluetooth.c: 430: {
  8959                           ;Bluetooth.c: 432: SendRF_wait(Conf1_ChannelE,1,12,8);
  8960  0002F2  0ED3               	movlw	low _Conf1_ChannelE
  8961  0002F4  0100               	movlb	0	; () banked
  8962  0002F6  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  8963  0002F8  0EF1               	movlw	high _Conf1_ChannelE
  8964  0002FA  0100               	movlb	0	; () banked
  8965  0002FC  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8966  0002FE  0E01               	movlw	1
  8967  000300  0100               	movlb	0	; () banked
  8968  000302  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  8969  000304  0E0C               	movlw	12
  8970  000306  0100               	movlb	0	; () banked
  8971  000308  6F6E               	movwf	SendRF_wait@size& (0+255),b
  8972  00030A  0E08               	movlw	8
  8973  00030C  0100               	movlb	0	; () banked
  8974  00030E  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  8975  000310  ECC7  F04F         	call	_SendRF_wait	;wreg free
  8976                           
  8977                           ;Bluetooth.c: 433: }
  8978  000314  D033               	goto	l11956
  8979  000316                     l11948:
  8980                           
  8981                           ;Bluetooth.c: 434: else if(StringMatchCaseInsensitive(String,Conf1_ChannelF_STR))
  8982  000316  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8983  00031A  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8984  00031E  0EAA               	movlw	low _Conf1_ChannelF_STR
  8985  000320  0100               	movlb	0	; () banked
  8986  000322  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8987  000324  0EF1               	movlw	high _Conf1_ChannelF_STR
  8988  000326  0100               	movlb	0	; () banked
  8989  000328  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8990  00032A  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
  8991  00032E  0900               	iorlw	0
  8992  000330  B4D8               	btfsc	status,2,c
  8993  000332  D012               	goto	l11952
  8994                           
  8995                           ;Bluetooth.c: 435: {
  8996                           ;Bluetooth.c: 437: SendRF_wait(Conf1_ChannelF,1,12,8);
  8997  000334  0EDF               	movlw	low _Conf1_ChannelF
  8998  000336  0100               	movlb	0	; () banked
  8999  000338  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  9000  00033A  0EF1               	movlw	high _Conf1_ChannelF
  9001  00033C  0100               	movlb	0	; () banked
  9002  00033E  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9003  000340  0E01               	movlw	1
  9004  000342  0100               	movlb	0	; () banked
  9005  000344  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  9006  000346  0E0C               	movlw	12
  9007  000348  0100               	movlb	0	; () banked
  9008  00034A  6F6E               	movwf	SendRF_wait@size& (0+255),b
  9009  00034C  0E08               	movlw	8
  9010  00034E  0100               	movlb	0	; () banked
  9011  000350  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  9012  000352  ECC7  F04F         	call	_SendRF_wait	;wreg free
  9013                           
  9014                           ;Bluetooth.c: 438: }
  9015  000356  D012               	goto	l11956
  9016  000358                     l11952:
  9017                           
  9018                           ;Bluetooth.c: 439: else
  9019                           ;Bluetooth.c: 440: {
  9020                           ;Bluetooth.c: 442: UARTstring_CONST(SYNTAX_ERR);
  9021  000358  0EB9               	movlw	low _SYNTAX_ERR
  9022  00035A  0100               	movlb	0	; () banked
  9023  00035C  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
  9024  00035E  0EF1               	movlw	high _SYNTAX_ERR
  9025  000360  0100               	movlb	0	; () banked
  9026  000362  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9027  000364  ECA9  F050         	call	_UARTstring_CONST	;wreg free
  9028                           
  9029                           ;Bluetooth.c: 443: UARTstring_CONST(CRLN);
  9030  000368  0E05               	movlw	low _CRLN
  9031  00036A  0100               	movlb	0	; () banked
  9032  00036C  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
  9033  00036E  0EF2               	movlw	high _CRLN
  9034  000370  0100               	movlb	0	; () banked
  9035  000372  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9036  000374  ECA9  F050         	call	_UARTstring_CONST	;wreg free
  9037                           
  9038                           ;Bluetooth.c: 444: return 0;
  9039                           ;	Return value of _UseBluetooth is never used
  9040  000378  0012               	return	
  9041  00037A  D000               	goto	l11956
  9042  00037C                     l11956:
  9043                           
  9044                           ;Bluetooth.c: 445: }
  9045                           ;Bluetooth.c: 446: if(ok)
  9046  00037C  0102               	movlb	2	; () banked
  9047  00037E  518A               	movf	UseBluetooth@ok& (0+255),w,b
  9048  000380  0102               	movlb	2	; () banked
  9049  000382  B4D8               	btfsc	status,2,c
  9050  000384  0012               	return	
  9051                           
  9052                           ; BSR set to: 2
  9053                           ;Bluetooth.c: 447: {
  9054                           ;Bluetooth.c: 448: UARTstringCRLN_CONST("Configuration 1 RF code sent");
  9055  000386  0E65               	movlw	low STR_18
  9056  000388  0100               	movlb	0	; () banked
  9057  00038A  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  9058  00038C  0EFA               	movlw	high STR_18
  9059  00038E  0100               	movlb	0	; () banked
  9060  000390  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  9061  000392  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
  9062                           
  9063                           ;Bluetooth.c: 450: }
  9064                           ;Bluetooth.c: 451: }
  9065                           
  9066                           ;Bluetooth.c: 449: return 1;
  9067                           ;	Return value of _UseBluetooth is never used
  9068  000396  0012               	return	
  9069  000398                     l11962:
  9070                           
  9071                           ;Bluetooth.c: 452: else if(StringContainsCaseInsensitive(String,"Conf2"))
  9072  000398  C0F5  F066         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9073  00039C  C0F6  F067         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9074  0003A0  0EC1               	movlw	low STR_19
  9075  0003A2  0100               	movlb	0	; () banked
  9076  0003A4  6F68               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9077  0003A6  0EFF               	movlw	high STR_19
  9078  0003A8  0100               	movlb	0	; () banked
  9079  0003AA  6F69               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9080  0003AC  ECD4  F038         	call	_StringContainsCaseInsensitive	;wreg free
  9081  0003B0  0900               	iorlw	0
  9082  0003B2  B4D8               	btfsc	status,2,c
  9083  0003B4  D16A               	goto	l12014
  9084                           
  9085                           ;Bluetooth.c: 453: {
  9086                           ;Bluetooth.c: 454: if(StringMatchCaseInsensitive(String,Conf2_ChannelB_ON_STR))
  9087  0003B6  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9088  0003BA  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9089  0003BE  0EC8               	movlw	low _Conf2_ChannelB_ON_STR
  9090  0003C0  0100               	movlb	0	; () banked
  9091  0003C2  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9092  0003C4  0EF0               	movlw	high _Conf2_ChannelB_ON_STR
  9093  0003C6  0100               	movlb	0	; () banked
  9094  0003C8  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9095  0003CA  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
  9096  0003CE  0900               	iorlw	0
  9097  0003D0  B4D8               	btfsc	status,2,c
  9098  0003D2  D012               	goto	l11968
  9099                           
  9100                           ;Bluetooth.c: 455: {
  9101                           ;Bluetooth.c: 457: SendRF_wait(Conf2_ChannelB_ON,2,16,8);
  9102  0003D4  0EFC               	movlw	low _Conf2_ChannelB_ON
  9103  0003D6  0100               	movlb	0	; () banked
  9104  0003D8  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  9105  0003DA  0EF0               	movlw	high _Conf2_ChannelB_ON
  9106  0003DC  0100               	movlb	0	; () banked
  9107  0003DE  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9108  0003E0  0E02               	movlw	2
  9109  0003E2  0100               	movlb	0	; () banked
  9110  0003E4  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  9111  0003E6  0E10               	movlw	16
  9112  0003E8  0100               	movlb	0	; () banked
  9113  0003EA  6F6E               	movwf	SendRF_wait@size& (0+255),b
  9114  0003EC  0E08               	movlw	8
  9115  0003EE  0100               	movlb	0	; () banked
  9116  0003F0  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  9117  0003F2  ECC7  F04F         	call	_SendRF_wait	;wreg free
  9118                           
  9119                           ;Bluetooth.c: 458: }
  9120  0003F6  D13B               	goto	l12008
  9121  0003F8                     l11968:
  9122                           
  9123                           ;Bluetooth.c: 459: else if(StringMatchCaseInsensitive(String,Conf2_ChannelB_OFF_STR))
  9124  0003F8  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9125  0003FC  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9126  000400  0EA2               	movlw	low _Conf2_ChannelB_OFF_STR
  9127  000402  0100               	movlb	0	; () banked
  9128  000404  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9129  000406  0EF0               	movlw	high _Conf2_ChannelB_OFF_STR
  9130  000408  0100               	movlb	0	; () banked
  9131  00040A  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9132  00040C  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
  9133  000410  0900               	iorlw	0
  9134  000412  B4D8               	btfsc	status,2,c
  9135  000414  D012               	goto	l11972
  9136                           
  9137                           ;Bluetooth.c: 460: {
  9138                           ;Bluetooth.c: 462: SendRF_wait(Conf2_ChannelB_OFF,2,16,8);
  9139  000416  0EEC               	movlw	low _Conf2_ChannelB_OFF
  9140  000418  0100               	movlb	0	; () banked
  9141  00041A  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  9142  00041C  0EF0               	movlw	high _Conf2_ChannelB_OFF
  9143  00041E  0100               	movlb	0	; () banked
  9144  000420  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9145  000422  0E02               	movlw	2
  9146  000424  0100               	movlb	0	; () banked
  9147  000426  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  9148  000428  0E10               	movlw	16
  9149  00042A  0100               	movlb	0	; () banked
  9150  00042C  6F6E               	movwf	SendRF_wait@size& (0+255),b
  9151  00042E  0E08               	movlw	8
  9152  000430  0100               	movlb	0	; () banked
  9153  000432  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  9154  000434  ECC7  F04F         	call	_SendRF_wait	;wreg free
  9155                           
  9156                           ;Bluetooth.c: 463: }
  9157  000438  D11A               	goto	l12008
  9158  00043A                     l11972:
  9159                           
  9160                           ;Bluetooth.c: 464: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_ON_STR))
  9161  00043A  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9162  00043E  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9163  000442  0EDA               	movlw	low _Conf2_ChannelD_ON_STR
  9164  000444  0100               	movlb	0	; () banked
  9165  000446  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9166  000448  0EF0               	movlw	high _Conf2_ChannelD_ON_STR
  9167  00044A  0100               	movlb	0	; () banked
  9168  00044C  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9169  00044E  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
  9170  000452  0900               	iorlw	0
  9171  000454  B4D8               	btfsc	status,2,c
  9172  000456  D012               	goto	l11976
  9173                           
  9174                           ;Bluetooth.c: 465: {
  9175                           ;Bluetooth.c: 467: SendRF_wait(Conf2_ChannelD_ON,2,16,8);
  9176  000458  0E1C               	movlw	low _Conf2_ChannelD_ON
  9177  00045A  0100               	movlb	0	; () banked
  9178  00045C  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  9179  00045E  0EF1               	movlw	high _Conf2_ChannelD_ON
  9180  000460  0100               	movlb	0	; () banked
  9181  000462  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9182  000464  0E02               	movlw	2
  9183  000466  0100               	movlb	0	; () banked
  9184  000468  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  9185  00046A  0E10               	movlw	16
  9186  00046C  0100               	movlb	0	; () banked
  9187  00046E  6F6E               	movwf	SendRF_wait@size& (0+255),b
  9188  000470  0E08               	movlw	8
  9189  000472  0100               	movlb	0	; () banked
  9190  000474  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  9191  000476  ECC7  F04F         	call	_SendRF_wait	;wreg free
  9192                           
  9193                           ;Bluetooth.c: 468: }
  9194  00047A  D0F9               	goto	l12008
  9195  00047C                     l11976:
  9196                           
  9197                           ;Bluetooth.c: 469: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_OFF_STR))
  9198  00047C  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9199  000480  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9200  000484  0EB5               	movlw	low _Conf2_ChannelD_OFF_STR
  9201  000486  0100               	movlb	0	; () banked
  9202  000488  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9203  00048A  0EF0               	movlw	high _Conf2_ChannelD_OFF_STR
  9204  00048C  0100               	movlb	0	; () banked
  9205  00048E  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9206  000490  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
  9207  000494  0900               	iorlw	0
  9208  000496  B4D8               	btfsc	status,2,c
  9209  000498  D012               	goto	l11980
  9210                           
  9211                           ;Bluetooth.c: 470: {
  9212                           ;Bluetooth.c: 472: SendRF_wait(Conf2_ChannelD_OFF,2,16,8);
  9213  00049A  0E0C               	movlw	low _Conf2_ChannelD_OFF
  9214  00049C  0100               	movlb	0	; () banked
  9215  00049E  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  9216  0004A0  0EF1               	movlw	high _Conf2_ChannelD_OFF
  9217  0004A2  0100               	movlb	0	; () banked
  9218  0004A4  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9219  0004A6  0E02               	movlw	2
  9220  0004A8  0100               	movlb	0	; () banked
  9221  0004AA  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  9222  0004AC  0E10               	movlw	16
  9223  0004AE  0100               	movlb	0	; () banked
  9224  0004B0  6F6E               	movwf	SendRF_wait@size& (0+255),b
  9225  0004B2  0E08               	movlw	8
  9226  0004B4  0100               	movlb	0	; () banked
  9227  0004B6  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  9228  0004B8  ECC7  F04F         	call	_SendRF_wait	;wreg free
  9229                           
  9230                           ;Bluetooth.c: 473: }
  9231  0004BC  D0D8               	goto	l12008
  9232  0004BE                     l11980:
  9233                           
  9234                           ;Bluetooth.c: 474: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_ON_STR))
  9235  0004BE  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9236  0004C2  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9237  0004C6  0E66               	movlw	low _Conf2_ChannelH_1_ON_STR
  9238  0004C8  0100               	movlb	0	; () banked
  9239  0004CA  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9240  0004CC  0EF0               	movlw	high _Conf2_ChannelH_1_ON_STR
  9241  0004CE  0100               	movlb	0	; () banked
  9242  0004D0  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9243  0004D2  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
  9244  0004D6  0900               	iorlw	0
  9245  0004D8  B4D8               	btfsc	status,2,c
  9246  0004DA  D012               	goto	l11984
  9247                           
  9248                           ;Bluetooth.c: 475: {
  9249                           ;Bluetooth.c: 477: SendRF_wait(Conf2_ChannelH_1_ON,2,16,8);
  9250  0004DC  0E3C               	movlw	low _Conf2_ChannelH_1_ON
  9251  0004DE  0100               	movlb	0	; () banked
  9252  0004E0  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  9253  0004E2  0EF1               	movlw	high _Conf2_ChannelH_1_ON
  9254  0004E4  0100               	movlb	0	; () banked
  9255  0004E6  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9256  0004E8  0E02               	movlw	2
  9257  0004EA  0100               	movlb	0	; () banked
  9258  0004EC  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  9259  0004EE  0E10               	movlw	16
  9260  0004F0  0100               	movlb	0	; () banked
  9261  0004F2  6F6E               	movwf	SendRF_wait@size& (0+255),b
  9262  0004F4  0E08               	movlw	8
  9263  0004F6  0100               	movlb	0	; () banked
  9264  0004F8  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  9265  0004FA  ECC7  F04F         	call	_SendRF_wait	;wreg free
  9266                           
  9267                           ;Bluetooth.c: 478: }
  9268  0004FE  D0B7               	goto	l12008
  9269  000500                     l11984:
  9270                           
  9271                           ;Bluetooth.c: 479: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_OFF_STR))
  9272  000500  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9273  000504  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9274  000508  0E27               	movlw	low _Conf2_ChannelH_1_OFF_STR
  9275  00050A  0100               	movlb	0	; () banked
  9276  00050C  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9277  00050E  0EF0               	movlw	high _Conf2_ChannelH_1_OFF_STR
  9278  000510  0100               	movlb	0	; () banked
  9279  000512  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9280  000514  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
  9281  000518  0900               	iorlw	0
  9282  00051A  B4D8               	btfsc	status,2,c
  9283  00051C  D012               	goto	l11988
  9284                           
  9285                           ;Bluetooth.c: 480: {
  9286                           ;Bluetooth.c: 482: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,8);
  9287  00051E  0E2C               	movlw	low _Conf2_ChannelH_1_OFF
  9288  000520  0100               	movlb	0	; () banked
  9289  000522  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  9290  000524  0EF1               	movlw	high _Conf2_ChannelH_1_OFF
  9291  000526  0100               	movlb	0	; () banked
  9292  000528  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9293  00052A  0E02               	movlw	2
  9294  00052C  0100               	movlb	0	; () banked
  9295  00052E  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  9296  000530  0E10               	movlw	16
  9297  000532  0100               	movlb	0	; () banked
  9298  000534  6F6E               	movwf	SendRF_wait@size& (0+255),b
  9299  000536  0E08               	movlw	8
  9300  000538  0100               	movlb	0	; () banked
  9301  00053A  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  9302  00053C  ECC7  F04F         	call	_SendRF_wait	;wreg free
  9303                           
  9304                           ;Bluetooth.c: 483: }
  9305  000540  D096               	goto	l12008
  9306  000542                     l11988:
  9307                           
  9308                           ;Bluetooth.c: 484: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_ON_STR))
  9309  000542  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9310  000546  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9311  00054A  0E7A               	movlw	low _Conf2_ChannelH_2_ON_STR
  9312  00054C  0100               	movlb	0	; () banked
  9313  00054E  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9314  000550  0EF0               	movlw	high _Conf2_ChannelH_2_ON_STR
  9315  000552  0100               	movlb	0	; () banked
  9316  000554  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9317  000556  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
  9318  00055A  0900               	iorlw	0
  9319  00055C  B4D8               	btfsc	status,2,c
  9320  00055E  D012               	goto	l11992
  9321                           
  9322                           ;Bluetooth.c: 485: {
  9323                           ;Bluetooth.c: 487: SendRF_wait(Conf2_ChannelH_2_ON,2,16,8);
  9324  000560  0E5C               	movlw	low _Conf2_ChannelH_2_ON
  9325  000562  0100               	movlb	0	; () banked
  9326  000564  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  9327  000566  0EF1               	movlw	high _Conf2_ChannelH_2_ON
  9328  000568  0100               	movlb	0	; () banked
  9329  00056A  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9330  00056C  0E02               	movlw	2
  9331  00056E  0100               	movlb	0	; () banked
  9332  000570  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  9333  000572  0E10               	movlw	16
  9334  000574  0100               	movlb	0	; () banked
  9335  000576  6F6E               	movwf	SendRF_wait@size& (0+255),b
  9336  000578  0E08               	movlw	8
  9337  00057A  0100               	movlb	0	; () banked
  9338  00057C  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  9339  00057E  ECC7  F04F         	call	_SendRF_wait	;wreg free
  9340                           
  9341                           ;Bluetooth.c: 488: }
  9342  000582  D075               	goto	l12008
  9343  000584                     l11992:
  9344                           
  9345                           ;Bluetooth.c: 489: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_OFF_STR))
  9346  000584  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9347  000588  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9348  00058C  0E3C               	movlw	low _Conf2_ChannelH_2_OFF_STR
  9349  00058E  0100               	movlb	0	; () banked
  9350  000590  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9351  000592  0EF0               	movlw	high _Conf2_ChannelH_2_OFF_STR
  9352  000594  0100               	movlb	0	; () banked
  9353  000596  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9354  000598  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
  9355  00059C  0900               	iorlw	0
  9356  00059E  B4D8               	btfsc	status,2,c
  9357  0005A0  D012               	goto	l11996
  9358                           
  9359                           ;Bluetooth.c: 490: {
  9360                           ;Bluetooth.c: 492: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,8);
  9361  0005A2  0E4C               	movlw	low _Conf2_ChannelH_2_OFF
  9362  0005A4  0100               	movlb	0	; () banked
  9363  0005A6  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  9364  0005A8  0EF1               	movlw	high _Conf2_ChannelH_2_OFF
  9365  0005AA  0100               	movlb	0	; () banked
  9366  0005AC  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9367  0005AE  0E02               	movlw	2
  9368  0005B0  0100               	movlb	0	; () banked
  9369  0005B2  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  9370  0005B4  0E10               	movlw	16
  9371  0005B6  0100               	movlb	0	; () banked
  9372  0005B8  6F6E               	movwf	SendRF_wait@size& (0+255),b
  9373  0005BA  0E08               	movlw	8
  9374  0005BC  0100               	movlb	0	; () banked
  9375  0005BE  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  9376  0005C0  ECC7  F04F         	call	_SendRF_wait	;wreg free
  9377                           
  9378                           ;Bluetooth.c: 493: }
  9379  0005C4  D054               	goto	l12008
  9380  0005C6                     l11996:
  9381                           
  9382                           ;Bluetooth.c: 494: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_ON_STR))
  9383  0005C6  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9384  0005CA  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9385  0005CE  0E8E               	movlw	low _Conf2_ChannelH_3_ON_STR
  9386  0005D0  0100               	movlb	0	; () banked
  9387  0005D2  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9388  0005D4  0EF0               	movlw	high _Conf2_ChannelH_3_ON_STR
  9389  0005D6  0100               	movlb	0	; () banked
  9390  0005D8  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9391  0005DA  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
  9392  0005DE  0900               	iorlw	0
  9393  0005E0  B4D8               	btfsc	status,2,c
  9394  0005E2  D012               	goto	l12000
  9395                           
  9396                           ;Bluetooth.c: 495: {
  9397                           ;Bluetooth.c: 497: SendRF_wait(Conf2_ChannelH_3_ON,2,16,8);
  9398  0005E4  0E7C               	movlw	low _Conf2_ChannelH_3_ON
  9399  0005E6  0100               	movlb	0	; () banked
  9400  0005E8  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  9401  0005EA  0EF1               	movlw	high _Conf2_ChannelH_3_ON
  9402  0005EC  0100               	movlb	0	; () banked
  9403  0005EE  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9404  0005F0  0E02               	movlw	2
  9405  0005F2  0100               	movlb	0	; () banked
  9406  0005F4  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  9407  0005F6  0E10               	movlw	16
  9408  0005F8  0100               	movlb	0	; () banked
  9409  0005FA  6F6E               	movwf	SendRF_wait@size& (0+255),b
  9410  0005FC  0E08               	movlw	8
  9411  0005FE  0100               	movlb	0	; () banked
  9412  000600  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  9413  000602  ECC7  F04F         	call	_SendRF_wait	;wreg free
  9414                           
  9415                           ;Bluetooth.c: 498: }
  9416  000606  D033               	goto	l12008
  9417  000608                     l12000:
  9418                           
  9419                           ;Bluetooth.c: 499: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_OFF_STR))
  9420  000608  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  9421  00060C  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  9422  000610  0E51               	movlw	low _Conf2_ChannelH_3_OFF_STR
  9423  000612  0100               	movlb	0	; () banked
  9424  000614  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  9425  000616  0EF0               	movlw	high _Conf2_ChannelH_3_OFF_STR
  9426  000618  0100               	movlb	0	; () banked
  9427  00061A  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  9428  00061C  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
  9429  000620  0900               	iorlw	0
  9430  000622  B4D8               	btfsc	status,2,c
  9431  000624  D012               	goto	l12004
  9432                           
  9433                           ;Bluetooth.c: 500: {
  9434                           ;Bluetooth.c: 502: SendRF_wait(Conf2_ChannelH_2_OFF,3,16,8);
  9435  000626  0E4C               	movlw	low _Conf2_ChannelH_2_OFF
  9436  000628  0100               	movlb	0	; () banked
  9437  00062A  6F6B               	movwf	SendRF_wait@Code& (0+255),b
  9438  00062C  0EF1               	movlw	high _Conf2_ChannelH_2_OFF
  9439  00062E  0100               	movlb	0	; () banked
  9440  000630  6F6C               	movwf	(SendRF_wait@Code+1)& (0+255),b
  9441  000632  0E03               	movlw	3
  9442  000634  0100               	movlb	0	; () banked
  9443  000636  6F6D               	movwf	SendRF_wait@Config& (0+255),b
  9444  000638  0E10               	movlw	16
  9445  00063A  0100               	movlb	0	; () banked
  9446  00063C  6F6E               	movwf	SendRF_wait@size& (0+255),b
  9447  00063E  0E08               	movlw	8
  9448  000640  0100               	movlb	0	; () banked
  9449  000642  6F6F               	movwf	SendRF_wait@amount& (0+255),b
  9450  000644  ECC7  F04F         	call	_SendRF_wait	;wreg free
  9451                           
  9452                           ;Bluetooth.c: 503: }
  9453  000648  D012               	goto	l12008
  9454  00064A                     l12004:
  9455                           
  9456                           ;Bluetooth.c: 504: else
  9457                           ;Bluetooth.c: 505: {
  9458                           ;Bluetooth.c: 507: UARTstring_CONST(SYNTAX_ERR);
  9459  00064A  0EB9               	movlw	low _SYNTAX_ERR
  9460  00064C  0100               	movlb	0	; () banked
  9461  00064E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
  9462  000650  0EF1               	movlw	high _SYNTAX_ERR
  9463  000652  0100               	movlb	0	; () banked
  9464  000654  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9465  000656  ECA9  F050         	call	_UARTstring_CONST	;wreg free
  9466                           
  9467                           ;Bluetooth.c: 508: UARTstring_CONST(CRLN);
  9468  00065A  0E05               	movlw	low _CRLN
  9469  00065C  0100               	movlb	0	; () banked
  9470  00065E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
  9471  000660  0EF2               	movlw	high _CRLN
  9472  000662  0100               	movlb	0	; () banked
  9473  000664  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9474  000666  ECA9  F050         	call	_UARTstring_CONST	;wreg free
  9475                           
  9476                           ;Bluetooth.c: 509: return 0;
  9477                           ;	Return value of _UseBluetooth is never used
  9478  00066A  0012               	return	
  9479  00066C  D000               	goto	l12008
  9480  00066E                     l12008:
  9481                           
  9482                           ;Bluetooth.c: 510: }
  9483                           ;Bluetooth.c: 511: if(ok)
  9484  00066E  0102               	movlb	2	; () banked
  9485  000670  518A               	movf	UseBluetooth@ok& (0+255),w,b
  9486  000672  0102               	movlb	2	; () banked
  9487  000674  B4D8               	btfsc	status,2,c
  9488  000676  0012               	return	
  9489                           
  9490                           ; BSR set to: 2
  9491                           ;Bluetooth.c: 512: {
  9492                           ;Bluetooth.c: 513: UARTstringCRLN_CONST("Configuration 2 RF code sent");
  9493  000678  0E82               	movlw	low STR_20
  9494  00067A  0100               	movlb	0	; () banked
  9495  00067C  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  9496  00067E  0EFA               	movlw	high STR_20
  9497  000680  0100               	movlb	0	; () banked
  9498  000682  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  9499  000684  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
  9500                           
  9501                           ;Bluetooth.c: 515: }
  9502                           ;Bluetooth.c: 516: }
  9503                           
  9504                           ;Bluetooth.c: 514: return 1;
  9505                           ;	Return value of _UseBluetooth is never used
  9506  000688  0012               	return	
  9507  00068A                     l12014:
  9508                           
  9509                           ;Bluetooth.c: 517: else if(StringContainsCaseInsensitive(String,"NEC"))
  9510  00068A  C0F5  F066         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9511  00068E  C0F6  F067         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9512  000692  0EE9               	movlw	low STR_21
  9513  000694  0100               	movlb	0	; () banked
  9514  000696  6F68               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9515  000698  0EFF               	movlw	high STR_21
  9516  00069A  0100               	movlb	0	; () banked
  9517  00069C  6F69               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9518  00069E  ECD4  F038         	call	_StringContainsCaseInsensitive	;wreg free
  9519  0006A2  0900               	iorlw	0
  9520  0006A4  B4D8               	btfsc	status,2,c
  9521  0006A6  D1EF               	goto	l12078
  9522                           
  9523                           ;Bluetooth.c: 518: {
  9524                           ;Bluetooth.c: 519: if(!GetNumberUnsigned(String, 2, &temp))
  9525  0006A8  C0F5  F06F         	movff	UseBluetooth@String,GetNumberUnsigned@This
  9526  0006AC  C0F6  F070         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
  9527  0006B0  0E02               	movlw	2
  9528  0006B2  0100               	movlb	0	; () banked
  9529  0006B4  6F71               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
  9530  0006B6  0E8F               	movlw	low UseBluetooth@temp
  9531  0006B8  0100               	movlb	0	; () banked
  9532  0006BA  6F72               	movwf	GetNumberUnsigned@result& (0+255),b
  9533  0006BC  0E02               	movlw	high UseBluetooth@temp
  9534  0006BE  0100               	movlb	0	; () banked
  9535  0006C0  6F73               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
  9536  0006C2  EC29  F02E         	call	_GetNumberUnsigned	;wreg free
  9537  0006C6  0900               	iorlw	0
  9538  0006C8  A4D8               	btfss	status,2,c
  9539  0006CA  D0C9               	goto	l12050
  9540                           
  9541                           ;Bluetooth.c: 520: {
  9542                           ;Bluetooth.c: 521: if(temp > 0xFF)
  9543  0006CC  0102               	movlb	2	; () banked
  9544  0006CE  5192               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  9545  0006D0  0102               	movlb	2	; () banked
  9546  0006D2  1191               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  9547  0006D4  E104               	bnz	u13650
  9548  0006D6  0102               	movlb	2	; () banked
  9549  0006D8  0590               	decf	(UseBluetooth@temp+1)& (0+255),w,b
  9550  0006DA  A0D8               	btfss	status,0,c
  9551  0006DC  D011               	goto	l2032
  9552  0006DE                     u13650:
  9553                           
  9554                           ; BSR set to: 2
  9555                           ;Bluetooth.c: 522: {
  9556                           ;Bluetooth.c: 523: UARTstringCRLN_CONST("Error: Command larger that 255");
  9557  0006DE  0E50               	movlw	low STR_22
  9558  0006E0  0100               	movlb	0	; () banked
  9559  0006E2  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  9560  0006E4  0EF9               	movlw	high STR_22
  9561  0006E6  0100               	movlb	0	; () banked
  9562  0006E8  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  9563  0006EA  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
  9564                           
  9565                           ;Bluetooth.c: 524: UARTstring_CONST(CRLN);
  9566  0006EE  0E05               	movlw	low _CRLN
  9567  0006F0  0100               	movlb	0	; () banked
  9568  0006F2  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
  9569  0006F4  0EF2               	movlw	high _CRLN
  9570  0006F6  0100               	movlb	0	; () banked
  9571  0006F8  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9572  0006FA  ECA9  F050         	call	_UARTstring_CONST	;wreg free
  9573                           
  9574                           ;Bluetooth.c: 525: return 0;
  9575                           ;	Return value of _UseBluetooth is never used
  9576  0006FE  0012               	return	
  9577  000700                     l2032:
  9578                           
  9579                           ; BSR set to: 2
  9580                           ;Bluetooth.c: 526: }
  9581                           ;Bluetooth.c: 527: NecCommand = (unsigned char)temp;
  9582  000700  C28F  F28E         	movff	UseBluetooth@temp,UseBluetooth@NecCommand
  9583                           
  9584                           ; BSR set to: 2
  9585                           ;Bluetooth.c: 528: if(!GetNumberUnsigned(String, 1, &temp))
  9586  000704  C0F5  F06F         	movff	UseBluetooth@String,GetNumberUnsigned@This
  9587  000708  C0F6  F070         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
  9588  00070C  0E01               	movlw	1
  9589  00070E  0100               	movlb	0	; () banked
  9590  000710  6F71               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
  9591  000712  0E8F               	movlw	low UseBluetooth@temp
  9592  000714  0100               	movlb	0	; () banked
  9593  000716  6F72               	movwf	GetNumberUnsigned@result& (0+255),b
  9594  000718  0E02               	movlw	high UseBluetooth@temp
  9595  00071A  0100               	movlb	0	; () banked
  9596  00071C  6F73               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
  9597  00071E  EC29  F02E         	call	_GetNumberUnsigned	;wreg free
  9598  000722  0900               	iorlw	0
  9599  000724  A4D8               	btfss	status,2,c
  9600  000726  D092               	goto	l12048
  9601                           
  9602                           ;Bluetooth.c: 529: {
  9603                           ;Bluetooth.c: 530: if(temp > 0xFF)
  9604  000728  0102               	movlb	2	; () banked
  9605  00072A  5192               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  9606  00072C  0102               	movlb	2	; () banked
  9607  00072E  1191               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  9608  000730  E104               	bnz	u13670
  9609  000732  0102               	movlb	2	; () banked
  9610  000734  0590               	decf	(UseBluetooth@temp+1)& (0+255),w,b
  9611  000736  A0D8               	btfss	status,0,c
  9612  000738  D011               	goto	l2034
  9613  00073A                     u13670:
  9614                           
  9615                           ; BSR set to: 2
  9616                           ;Bluetooth.c: 531: {
  9617                           ;Bluetooth.c: 532: UARTstringCRLN_CONST("Error: Address larger that 255");
  9618  00073A  0E6F               	movlw	low STR_23
  9619  00073C  0100               	movlb	0	; () banked
  9620  00073E  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  9621  000740  0EF9               	movlw	high STR_23
  9622  000742  0100               	movlb	0	; () banked
  9623  000744  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  9624  000746  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
  9625                           
  9626                           ;Bluetooth.c: 533: UARTstring_CONST(CRLN);
  9627  00074A  0E05               	movlw	low _CRLN
  9628  00074C  0100               	movlb	0	; () banked
  9629  00074E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
  9630  000750  0EF2               	movlw	high _CRLN
  9631  000752  0100               	movlb	0	; () banked
  9632  000754  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9633  000756  ECA9  F050         	call	_UARTstring_CONST	;wreg free
  9634                           
  9635                           ;Bluetooth.c: 534: return 0;
  9636                           ;	Return value of _UseBluetooth is never used
  9637  00075A  0012               	return	
  9638  00075C                     l2034:
  9639                           
  9640                           ; BSR set to: 2
  9641                           ;Bluetooth.c: 535: }
  9642                           ;Bluetooth.c: 536: NecAddress = (unsigned char) temp;
  9643  00075C  C28F  F28D         	movff	UseBluetooth@temp,UseBluetooth@NecAddress
  9644                           
  9645                           ; BSR set to: 2
  9646                           ;Bluetooth.c: 537: sprintf(buf,"NEC address: 0x%02X ", NecAddress);
  9647  000760  0E0C               	movlw	low UseBluetooth@buf
  9648  000762  0100               	movlb	0	; () banked
  9649  000764  6FB1               	movwf	sprintf@sp& (0+255),b
  9650  000766  0E02               	movlw	high UseBluetooth@buf
  9651  000768  0100               	movlb	0	; () banked
  9652  00076A  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
  9653  00076C  0E8D               	movlw	low STR_24
  9654  00076E  0100               	movlb	0	; () banked
  9655  000770  6FB3               	movwf	sprintf@f& (0+255),b
  9656  000772  0EFC               	movlw	high STR_24
  9657  000774  0100               	movlb	0	; () banked
  9658  000776  6FB4               	movwf	(sprintf@f+1)& (0+255),b
  9659  000778  C28D  F0B5         	movff	UseBluetooth@NecAddress,?_sprintf+4
  9660  00077C  0100               	movlb	0	; () banked
  9661  00077E  6BB6               	clrf	(?_sprintf+5)& (0+255),b
  9662  000780  EC9C  F012         	call	_sprintf	;wreg free
  9663                           
  9664                           ;Bluetooth.c: 538: UARTstringCRLN(buf);
  9665  000784  0E0C               	movlw	low UseBluetooth@buf
  9666  000786  0100               	movlb	0	; () banked
  9667  000788  6F70               	movwf	UARTstringCRLN@data& (0+255),b
  9668  00078A  0E02               	movlw	high UseBluetooth@buf
  9669  00078C  0100               	movlb	0	; () banked
  9670  00078E  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9671  000790  EC22  F050         	call	_UARTstringCRLN	;wreg free
  9672                           
  9673                           ;Bluetooth.c: 539: sprintf(buf,"NEC command: 0x%02X ", NecCommand);
  9674  000794  0E0C               	movlw	low UseBluetooth@buf
  9675  000796  0100               	movlb	0	; () banked
  9676  000798  6FB1               	movwf	sprintf@sp& (0+255),b
  9677  00079A  0E02               	movlw	high UseBluetooth@buf
  9678  00079C  0100               	movlb	0	; () banked
  9679  00079E  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
  9680  0007A0  0E78               	movlw	low STR_25
  9681  0007A2  0100               	movlb	0	; () banked
  9682  0007A4  6FB3               	movwf	sprintf@f& (0+255),b
  9683  0007A6  0EFC               	movlw	high STR_25
  9684  0007A8  0100               	movlb	0	; () banked
  9685  0007AA  6FB4               	movwf	(sprintf@f+1)& (0+255),b
  9686  0007AC  C28E  F0B5         	movff	UseBluetooth@NecCommand,?_sprintf+4
  9687  0007B0  0100               	movlb	0	; () banked
  9688  0007B2  6BB6               	clrf	(?_sprintf+5)& (0+255),b
  9689  0007B4  EC9C  F012         	call	_sprintf	;wreg free
  9690                           
  9691                           ;Bluetooth.c: 540: UARTstringCRLN(buf);
  9692  0007B8  0E0C               	movlw	low UseBluetooth@buf
  9693  0007BA  0100               	movlb	0	; () banked
  9694  0007BC  6F70               	movwf	UARTstringCRLN@data& (0+255),b
  9695  0007BE  0E02               	movlw	high UseBluetooth@buf
  9696  0007C0  0100               	movlb	0	; () banked
  9697  0007C2  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9698  0007C4  EC22  F050         	call	_UARTstringCRLN	;wreg free
  9699                           
  9700                           ;Bluetooth.c: 541: EnteredNEC = EncodeNEC(NecAddress, NecCommand);
  9701  0007C8  C28E  F067         	movff	UseBluetooth@NecCommand,EncodeNEC@command
  9702  0007CC  0102               	movlb	2	; () banked
  9703  0007CE  518D               	movf	UseBluetooth@NecAddress& (0+255),w,b
  9704  0007D0  EC7A  F03F         	call	_EncodeNEC
  9705  0007D4  C067  F286         	movff	?_EncodeNEC,UseBluetooth@EnteredNEC
  9706  0007D8  C068  F287         	movff	?_EncodeNEC+1,UseBluetooth@EnteredNEC+1
  9707  0007DC  C069  F288         	movff	?_EncodeNEC+2,UseBluetooth@EnteredNEC+2
  9708  0007E0  C06A  F289         	movff	?_EncodeNEC+3,UseBluetooth@EnteredNEC+3
  9709                           
  9710                           ;Bluetooth.c: 542: SendNEC_wait(EnteredNEC,0);
  9711  0007E4  C286  F078         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  9712  0007E8  C287  F079         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  9713  0007EC  C288  F07A         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  9714  0007F0  C289  F07B         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  9715  0007F4  0E00               	movlw	0
  9716  0007F6  0100               	movlb	0	; () banked
  9717  0007F8  6F7C               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  9718  0007FA  EC1E  F04B         	call	_SendNEC_wait	;wreg free
  9719                           
  9720                           ;Bluetooth.c: 543: sprintf(buf,"Sent NEC code = 0x%lX ", EnteredNEC);
  9721  0007FE  0E0C               	movlw	low UseBluetooth@buf
  9722  000800  0100               	movlb	0	; () banked
  9723  000802  6FB1               	movwf	sprintf@sp& (0+255),b
  9724  000804  0E02               	movlw	high UseBluetooth@buf
  9725  000806  0100               	movlb	0	; () banked
  9726  000808  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
  9727  00080A  0EDA               	movlw	low STR_26
  9728  00080C  0100               	movlb	0	; () banked
  9729  00080E  6FB3               	movwf	sprintf@f& (0+255),b
  9730  000810  0EFB               	movlw	high STR_26
  9731  000812  0100               	movlb	0	; () banked
  9732  000814  6FB4               	movwf	(sprintf@f+1)& (0+255),b
  9733  000816  C286  F0B5         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  9734  00081A  C287  F0B6         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  9735  00081E  C288  F0B7         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  9736  000822  C289  F0B8         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  9737  000826  EC9C  F012         	call	_sprintf	;wreg free
  9738                           
  9739                           ;Bluetooth.c: 544: UARTstringCRLN(buf);
  9740  00082A  0E0C               	movlw	low UseBluetooth@buf
  9741  00082C  0100               	movlb	0	; () banked
  9742  00082E  6F70               	movwf	UARTstringCRLN@data& (0+255),b
  9743  000830  0E02               	movlw	high UseBluetooth@buf
  9744  000832  0100               	movlb	0	; () banked
  9745  000834  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9746  000836  EC22  F050         	call	_UARTstringCRLN	;wreg free
  9747                           
  9748                           ;Bluetooth.c: 545: UARTstring_CONST(CRLN);
  9749  00083A  0E05               	movlw	low _CRLN
  9750  00083C  0100               	movlb	0	; () banked
  9751  00083E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
  9752  000840  0EF2               	movlw	high _CRLN
  9753  000842  0100               	movlb	0	; () banked
  9754  000844  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9755  000846  ECA9  F050         	call	_UARTstring_CONST	;wreg free
  9756                           
  9757                           ;Bluetooth.c: 546: }
  9758  00084A  0012               	return	
  9759  00084C                     l12048:
  9760                           
  9761                           ;Bluetooth.c: 547: else
  9762                           ;Bluetooth.c: 548: {
  9763                           ;Bluetooth.c: 549: UARTstringCRLN_CONST("Error: could not decode Address");
  9764  00084C  0E30               	movlw	low STR_27
  9765  00084E  0100               	movlb	0	; () banked
  9766  000850  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  9767  000852  0EF9               	movlw	high STR_27
  9768  000854  0100               	movlb	0	; () banked
  9769  000856  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  9770  000858  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
  9771                           
  9772                           ;Bluetooth.c: 550: }
  9773                           ;Bluetooth.c: 551: }
  9774  00085C  0012               	return	
  9775  00085E                     l12050:
  9776                           
  9777                           ;Bluetooth.c: 552: else if(!GetNumberUnsigned(String, 1, &EnteredNEC))
  9778  00085E  C0F5  F06F         	movff	UseBluetooth@String,GetNumberUnsigned@This
  9779  000862  C0F6  F070         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
  9780  000866  0E01               	movlw	1
  9781  000868  0100               	movlb	0	; () banked
  9782  00086A  6F71               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
  9783  00086C  0E86               	movlw	low UseBluetooth@EnteredNEC
  9784  00086E  0100               	movlb	0	; () banked
  9785  000870  6F72               	movwf	GetNumberUnsigned@result& (0+255),b
  9786  000872  0E02               	movlw	high UseBluetooth@EnteredNEC
  9787  000874  0100               	movlb	0	; () banked
  9788  000876  6F73               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
  9789  000878  EC29  F02E         	call	_GetNumberUnsigned	;wreg free
  9790  00087C  0900               	iorlw	0
  9791  00087E  A4D8               	btfss	status,2,c
  9792  000880  D08A               	goto	l12072
  9793                           
  9794                           ;Bluetooth.c: 553: {
  9795                           ;Bluetooth.c: 554: SendNEC_wait(EnteredNEC,0);
  9796  000882  C286  F078         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  9797  000886  C287  F079         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  9798  00088A  C288  F07A         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  9799  00088E  C289  F07B         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  9800  000892  0E00               	movlw	0
  9801  000894  0100               	movlb	0	; () banked
  9802  000896  6F7C               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  9803  000898  EC1E  F04B         	call	_SendNEC_wait	;wreg free
  9804                           
  9805                           ;Bluetooth.c: 555: sprintf(buf,"sent NEC code 0x%lX", EnteredNEC);
  9806  00089C  0E0C               	movlw	low UseBluetooth@buf
  9807  00089E  0100               	movlb	0	; () banked
  9808  0008A0  6FB1               	movwf	sprintf@sp& (0+255),b
  9809  0008A2  0E02               	movlw	high UseBluetooth@buf
  9810  0008A4  0100               	movlb	0	; () banked
  9811  0008A6  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
  9812  0008A8  0E1D               	movlw	low STR_28
  9813  0008AA  0100               	movlb	0	; () banked
  9814  0008AC  6FB3               	movwf	sprintf@f& (0+255),b
  9815  0008AE  0EFD               	movlw	high STR_28
  9816  0008B0  0100               	movlb	0	; () banked
  9817  0008B2  6FB4               	movwf	(sprintf@f+1)& (0+255),b
  9818  0008B4  C286  F0B5         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  9819  0008B8  C287  F0B6         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  9820  0008BC  C288  F0B7         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  9821  0008C0  C289  F0B8         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  9822  0008C4  EC9C  F012         	call	_sprintf	;wreg free
  9823                           
  9824                           ;Bluetooth.c: 556: UARTstringCRLN(buf);
  9825  0008C8  0E0C               	movlw	low UseBluetooth@buf
  9826  0008CA  0100               	movlb	0	; () banked
  9827  0008CC  6F70               	movwf	UARTstringCRLN@data& (0+255),b
  9828  0008CE  0E02               	movlw	high UseBluetooth@buf
  9829  0008D0  0100               	movlb	0	; () banked
  9830  0008D2  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9831  0008D4  EC22  F050         	call	_UARTstringCRLN	;wreg free
  9832                           
  9833                           ;Bluetooth.c: 557: if(DecodeNEC(EnteredNEC, &NecAddress, &NecCommand))
  9834  0008D8  C286  F067         	movff	UseBluetooth@EnteredNEC,DecodeNEC@Nec
  9835  0008DC  C287  F068         	movff	UseBluetooth@EnteredNEC+1,DecodeNEC@Nec+1
  9836  0008E0  C288  F069         	movff	UseBluetooth@EnteredNEC+2,DecodeNEC@Nec+2
  9837  0008E4  C289  F06A         	movff	UseBluetooth@EnteredNEC+3,DecodeNEC@Nec+3
  9838  0008E8  0E8D               	movlw	low UseBluetooth@NecAddress
  9839  0008EA  0100               	movlb	0	; () banked
  9840  0008EC  6F6B               	movwf	DecodeNEC@address& (0+255),b
  9841  0008EE  0E02               	movlw	high UseBluetooth@NecAddress
  9842  0008F0  0100               	movlb	0	; () banked
  9843  0008F2  6F6C               	movwf	(DecodeNEC@address+1)& (0+255),b
  9844  0008F4  0E8E               	movlw	low UseBluetooth@NecCommand
  9845  0008F6  0100               	movlb	0	; () banked
  9846  0008F8  6F6D               	movwf	DecodeNEC@command& (0+255),b
  9847  0008FA  0E02               	movlw	high UseBluetooth@NecCommand
  9848  0008FC  0100               	movlb	0	; () banked
  9849  0008FE  6F6E               	movwf	(DecodeNEC@command+1)& (0+255),b
  9850  000900  EC83  F049         	call	_DecodeNEC	;wreg free
  9851  000904  0900               	iorlw	0
  9852  000906  B4D8               	btfsc	status,2,c
  9853  000908  D035               	goto	l12066
  9854                           
  9855                           ;Bluetooth.c: 558: {
  9856                           ;Bluetooth.c: 559: sprintf(buf,"address: 0x%02X ", NecAddress);
  9857  00090A  0E0C               	movlw	low UseBluetooth@buf
  9858  00090C  0100               	movlb	0	; () banked
  9859  00090E  6FB1               	movwf	sprintf@sp& (0+255),b
  9860  000910  0E02               	movlw	high UseBluetooth@buf
  9861  000912  0100               	movlb	0	; () banked
  9862  000914  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
  9863  000916  0E91               	movlw	low (STR_24+4)
  9864  000918  0100               	movlb	0	; () banked
  9865  00091A  6FB3               	movwf	sprintf@f& (0+255),b
  9866  00091C  0EFC               	movlw	high (STR_24+4)
  9867  00091E  0100               	movlb	0	; () banked
  9868  000920  6FB4               	movwf	(sprintf@f+1)& (0+255),b
  9869  000922  C28D  F0B5         	movff	UseBluetooth@NecAddress,?_sprintf+4
  9870  000926  0100               	movlb	0	; () banked
  9871  000928  6BB6               	clrf	(?_sprintf+5)& (0+255),b
  9872  00092A  EC9C  F012         	call	_sprintf	;wreg free
  9873                           
  9874                           ;Bluetooth.c: 560: UARTstringCRLN(buf);
  9875  00092E  0E0C               	movlw	low UseBluetooth@buf
  9876  000930  0100               	movlb	0	; () banked
  9877  000932  6F70               	movwf	UARTstringCRLN@data& (0+255),b
  9878  000934  0E02               	movlw	high UseBluetooth@buf
  9879  000936  0100               	movlb	0	; () banked
  9880  000938  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9881  00093A  EC22  F050         	call	_UARTstringCRLN	;wreg free
  9882                           
  9883                           ;Bluetooth.c: 561: sprintf(buf,"command: 0x%02X ", NecCommand);
  9884  00093E  0E0C               	movlw	low UseBluetooth@buf
  9885  000940  0100               	movlb	0	; () banked
  9886  000942  6FB1               	movwf	sprintf@sp& (0+255),b
  9887  000944  0E02               	movlw	high UseBluetooth@buf
  9888  000946  0100               	movlb	0	; () banked
  9889  000948  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
  9890  00094A  0E61               	movlw	low (STR_45+27)
  9891  00094C  0100               	movlb	0	; () banked
  9892  00094E  6FB3               	movwf	sprintf@f& (0+255),b
  9893  000950  0EF6               	movlw	high (STR_45+27)
  9894  000952  0100               	movlb	0	; () banked
  9895  000954  6FB4               	movwf	(sprintf@f+1)& (0+255),b
  9896  000956  C28E  F0B5         	movff	UseBluetooth@NecCommand,?_sprintf+4
  9897  00095A  0100               	movlb	0	; () banked
  9898  00095C  6BB6               	clrf	(?_sprintf+5)& (0+255),b
  9899  00095E  EC9C  F012         	call	_sprintf	;wreg free
  9900                           
  9901                           ;Bluetooth.c: 562: UARTstringCRLN(buf);
  9902  000962  0E0C               	movlw	low UseBluetooth@buf
  9903  000964  0100               	movlb	0	; () banked
  9904  000966  6F70               	movwf	UARTstringCRLN@data& (0+255),b
  9905  000968  0E02               	movlw	high UseBluetooth@buf
  9906  00096A  0100               	movlb	0	; () banked
  9907  00096C  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9908  00096E  EC22  F050         	call	_UARTstringCRLN	;wreg free
  9909                           
  9910                           ;Bluetooth.c: 563: }
  9911  000972  D008               	goto	l2039
  9912  000974                     l12066:
  9913                           
  9914                           ;Bluetooth.c: 564: else
  9915                           ;Bluetooth.c: 565: {
  9916                           ;Bluetooth.c: 566: UARTstringCRLN_CONST("Error: could not decode NEC code");
  9917  000974  0E6F               	movlw	low STR_31
  9918  000976  0100               	movlb	0	; () banked
  9919  000978  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  9920  00097A  0EF8               	movlw	high STR_31
  9921  00097C  0100               	movlb	0	; () banked
  9922  00097E  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  9923  000980  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
  9924  000984                     l2039:
  9925                           
  9926                           ;Bluetooth.c: 567: }
  9927                           ;Bluetooth.c: 568: UARTstring_CONST(CRLN);
  9928  000984  0E05               	movlw	low _CRLN
  9929  000986  0100               	movlb	0	; () banked
  9930  000988  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
  9931  00098A  0EF2               	movlw	high _CRLN
  9932  00098C  0100               	movlb	0	; () banked
  9933  00098E  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9934  000990  ECA9  F050         	call	_UARTstring_CONST	;wreg free
  9935                           
  9936                           ;Bluetooth.c: 570: }
  9937                           
  9938                           ;Bluetooth.c: 569: return 1;
  9939                           ;	Return value of _UseBluetooth is never used
  9940  000994  0012               	return	
  9941  000996                     l12072:
  9942                           
  9943                           ;Bluetooth.c: 571: else
  9944                           ;Bluetooth.c: 572: {
  9945                           ;Bluetooth.c: 573: if(!StringContains(String,"?"))
  9946  000996  C0F5  F063         	movff	UseBluetooth@String,StringContains@This
  9947  00099A  C0F6  F064         	movff	UseBluetooth@String+1,StringContains@This+1
  9948  00099E  0EE7               	movlw	low (STR_102+2)
  9949  0009A0  0100               	movlb	0	; () banked
  9950  0009A2  6F65               	movwf	StringContains@That& (0+255),b
  9951  0009A4  0EFF               	movlw	high (STR_102+2)
  9952  0009A6  0100               	movlb	0	; () banked
  9953  0009A8  6F66               	movwf	(StringContains@That+1)& (0+255),b
  9954  0009AA  EC21  F040         	call	_StringContains	;wreg free
  9955  0009AE  0900               	iorlw	0
  9956  0009B0  A4D8               	btfss	status,2,c
  9957  0009B2  D010               	goto	l2041
  9958                           
  9959                           ;Bluetooth.c: 574: {
  9960                           ;Bluetooth.c: 575: UARTstring_CONST(CRLN);
  9961  0009B4  0E05               	movlw	low _CRLN
  9962  0009B6  0100               	movlb	0	; () banked
  9963  0009B8  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
  9964  0009BA  0EF2               	movlw	high _CRLN
  9965  0009BC  0100               	movlb	0	; () banked
  9966  0009BE  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9967  0009C0  ECA9  F050         	call	_UARTstring_CONST	;wreg free
  9968                           
  9969                           ;Bluetooth.c: 576: UARTstringCRLN_CONST("NEC code not entered correctly");
  9970  0009C4  0E29               	movlw	low STR_33
  9971  0009C6  0100               	movlb	0	; () banked
  9972  0009C8  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  9973  0009CA  0EFA               	movlw	high STR_33
  9974  0009CC  0100               	movlb	0	; () banked
  9975  0009CE  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  9976  0009D0  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
  9977  0009D4                     l2041:
  9978                           
  9979                           ;Bluetooth.c: 577: }
  9980                           ;Bluetooth.c: 578: UARTstring_CONST(CRLN);
  9981  0009D4  0E05               	movlw	low _CRLN
  9982  0009D6  0100               	movlb	0	; () banked
  9983  0009D8  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
  9984  0009DA  0EF2               	movlw	high _CRLN
  9985  0009DC  0100               	movlb	0	; () banked
  9986  0009DE  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
  9987  0009E0  ECA9  F050         	call	_UARTstring_CONST	;wreg free
  9988                           
  9989                           ;Bluetooth.c: 579: UARTstringCRLN_CONST("Usage:");
  9990  0009E4  0EA7               	movlw	low STR_34
  9991  0009E6  0100               	movlb	0	; () banked
  9992  0009E8  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
  9993  0009EA  0EFF               	movlw	high STR_34
  9994  0009EC  0100               	movlb	0	; () banked
  9995  0009EE  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
  9996  0009F0  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
  9997                           
  9998                           ;Bluetooth.c: 580: UARTstringCRLN_CONST("NEC = (32 bit code)");
  9999  0009F4  0EF5               	movlw	low STR_35
 10000  0009F6  0100               	movlb	0	; () banked
 10001  0009F8  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10002  0009FA  0EFC               	movlw	high STR_35
 10003  0009FC  0100               	movlb	0	; () banked
 10004  0009FE  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10005  000A00  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10006                           
 10007                           ;Bluetooth.c: 581: UARTstringCRLN_CONST("        or");
 10008  000A04  0E55               	movlw	low STR_36
 10009  000A06  0100               	movlb	0	; () banked
 10010  000A08  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10011  000A0A  0EFF               	movlw	high STR_36
 10012  000A0C  0100               	movlb	0	; () banked
 10013  000A0E  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10014  000A10  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10015                           
 10016                           ;Bluetooth.c: 582: UARTstringCRLN_CONST("NEC = address,command");
 10017  000A14  0E4C               	movlw	low STR_37
 10018  000A16  0100               	movlb	0	; () banked
 10019  000A18  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10020  000A1A  0EFC               	movlw	high STR_37
 10021  000A1C  0100               	movlb	0	; () banked
 10022  000A1E  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10023  000A20  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10024                           
 10025                           ;Bluetooth.c: 583: UARTstring_CONST(CRLN);
 10026  000A24  0E05               	movlw	low _CRLN
 10027  000A26  0100               	movlb	0	; () banked
 10028  000A28  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 10029  000A2A  0EF2               	movlw	high _CRLN
 10030  000A2C  0100               	movlb	0	; () banked
 10031  000A2E  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10032  000A30  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 10033                           
 10034                           ;Bluetooth.c: 584: UARTstringCRLN_CONST("Example:");
 10035  000A34  0E86               	movlw	low STR_38
 10036  000A36  0100               	movlb	0	; () banked
 10037  000A38  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10038  000A3A  0EFF               	movlw	high STR_38
 10039  000A3C  0100               	movlb	0	; () banked
 10040  000A3E  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10041  000A40  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10042                           
 10043                           ;Bluetooth.c: 585: UARTstringCRLN_CONST("NEC = 0x1CE350AF ");
 10044  000A44  0ECB               	movlw	low STR_39
 10045  000A46  0100               	movlb	0	; () banked
 10046  000A48  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10047  000A4A  0EFD               	movlw	high STR_39
 10048  000A4C  0100               	movlb	0	; () banked
 10049  000A4E  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10050  000A50  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10051                           
 10052                           ;Bluetooth.c: 586: UARTstringCRLN_CONST("      or");
 10053  000A54  0E57               	movlw	low (STR_36+2)
 10054  000A56  0100               	movlb	0	; () banked
 10055  000A58  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10056  000A5A  0EFF               	movlw	high (STR_36+2)
 10057  000A5C  0100               	movlb	0	; () banked
 10058  000A5E  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10059  000A60  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10060                           
 10061                           ;Bluetooth.c: 587: UARTstringCRLN_CONST("NEC = 0x38, 0x0A");
 10062  000A64  0E23               	movlw	low STR_41
 10063  000A66  0100               	movlb	0	; () banked
 10064  000A68  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10065  000A6A  0EFE               	movlw	high STR_41
 10066  000A6C  0100               	movlb	0	; () banked
 10067  000A6E  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10068  000A70  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10069                           
 10070                           ;Bluetooth.c: 588: UARTstring_CONST(CRLN);
 10071  000A74  0E05               	movlw	low _CRLN
 10072  000A76  0100               	movlb	0	; () banked
 10073  000A78  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 10074  000A7A  0EF2               	movlw	high _CRLN
 10075  000A7C  0100               	movlb	0	; () banked
 10076  000A7E  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10077  000A80  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 10078                           
 10079                           ;Bluetooth.c: 590: }
 10080                           ;Bluetooth.c: 591: }
 10081                           
 10082                           ;Bluetooth.c: 589: return 0;
 10083                           ;	Return value of _UseBluetooth is never used
 10084  000A84  0012               	return	
 10085  000A86                     l12078:
 10086                           
 10087                           ;Bluetooth.c: 592: else if(StringContainsCaseInsensitive(String,"RemoteButton"))
 10088  000A86  C0F5  F066         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10089  000A8A  C0F6  F067         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10090  000A8E  0E06               	movlw	low STR_42
 10091  000A90  0100               	movlb	0	; () banked
 10092  000A92  6F68               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10093  000A94  0EFF               	movlw	high STR_42
 10094  000A96  0100               	movlb	0	; () banked
 10095  000A98  6F69               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10096  000A9A  ECD4  F038         	call	_StringContainsCaseInsensitive	;wreg free
 10097  000A9E  0900               	iorlw	0
 10098  000AA0  B4D8               	btfsc	status,2,c
 10099  000AA2  D2C8               	goto	l12166
 10100                           
 10101                           ;Bluetooth.c: 593: {
 10102                           ;Bluetooth.c: 594: if(StringAddEqual(String))
 10103  000AA4  C0F5  F072         	movff	UseBluetooth@String,StringAddEqual@Input
 10104  000AA8  C0F6  F073         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
 10105  000AAC  ECED  F036         	call	_StringAddEqual	;wreg free
 10106  000AB0  0900               	iorlw	0
 10107  000AB2  B4D8               	btfsc	status,2,c
 10108  000AB4  D266               	goto	l12160
 10109                           
 10110                           ;Bluetooth.c: 595: {
 10111                           ;Bluetooth.c: 596: StringPos++;
 10112  000AB6  0100               	movlb	0	; () banked
 10113  000AB8  2BF7               	incf	UseBluetooth@StringPos& (0+255),f,b
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;Bluetooth.c: 597: if(!GetNumberUnsigned(String, 1, &temp))
 10117  000ABA  C0F5  F06F         	movff	UseBluetooth@String,GetNumberUnsigned@This
 10118  000ABE  C0F6  F070         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
 10119  000AC2  0E01               	movlw	1
 10120  000AC4  0100               	movlb	0	; () banked
 10121  000AC6  6F71               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
 10122  000AC8  0E8F               	movlw	low UseBluetooth@temp
 10123  000ACA  0100               	movlb	0	; () banked
 10124  000ACC  6F72               	movwf	GetNumberUnsigned@result& (0+255),b
 10125  000ACE  0E02               	movlw	high UseBluetooth@temp
 10126  000AD0  0100               	movlb	0	; () banked
 10127  000AD2  6F73               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
 10128  000AD4  EC29  F02E         	call	_GetNumberUnsigned	;wreg free
 10129  000AD8  0900               	iorlw	0
 10130  000ADA  A4D8               	btfss	status,2,c
 10131  000ADC  D252               	goto	l12160
 10132                           
 10133                           ;Bluetooth.c: 598: {
 10134                           ;Bluetooth.c: 599: if(temp <= 12 && temp > 0)
 10135  000ADE  0102               	movlb	2	; () banked
 10136  000AE0  5192               	movf	(UseBluetooth@temp+3)& (0+255),w,b
 10137  000AE2  0102               	movlb	2	; () banked
 10138  000AE4  1191               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
 10139  000AE6  0102               	movlb	2	; () banked
 10140  000AE8  1190               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
 10141  000AEA  E104               	bnz	u13741
 10142  000AEC  0E0D               	movlw	13
 10143  000AEE  0102               	movlb	2	; () banked
 10144  000AF0  5D8F               	subwf	UseBluetooth@temp& (0+255),w,b
 10145  000AF2  B0D8               	btfsc	status,0,c
 10146  000AF4                     u13741:
 10147  000AF4  D22C               	goto	l12156
 10148                           
 10149                           ; BSR set to: 2
 10150  000AF6  0102               	movlb	2	; () banked
 10151  000AF8  518F               	movf	UseBluetooth@temp& (0+255),w,b
 10152  000AFA  0102               	movlb	2	; () banked
 10153  000AFC  1190               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
 10154  000AFE  0102               	movlb	2	; () banked
 10155  000B00  1191               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
 10156  000B02  0102               	movlb	2	; () banked
 10157  000B04  1192               	iorwf	(UseBluetooth@temp+3)& (0+255),w,b
 10158  000B06  B4D8               	btfsc	status,2,c
 10159  000B08  D222               	goto	l12156
 10160                           
 10161                           ; BSR set to: 2
 10162                           ;Bluetooth.c: 600: {
 10163                           ;Bluetooth.c: 601: if(!StringContainsCaseInsensitive(String,"set"))
 10164  000B0A  C0F5  F066         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10165  000B0E  C0F6  F067         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10166  000B12  0E55               	movlw	low (STR_53+16)
 10167  000B14  0100               	movlb	0	; () banked
 10168  000B16  6F68               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10169  000B18  0EFD               	movlw	high (STR_53+16)
 10170  000B1A  0100               	movlb	0	; () banked
 10171  000B1C  6F69               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10172  000B1E  ECD4  F038         	call	_StringContainsCaseInsensitive	;wreg free
 10173  000B22  0900               	iorlw	0
 10174  000B24  A4D8               	btfss	status,2,c
 10175  000B26  D123               	goto	l12116
 10176                           
 10177                           ;Bluetooth.c: 602: {
 10178                           ;Bluetooth.c: 603: tempNec = EncodeNEC(Global1.RemoteButtonNEC[temp-1][0], Global1.Remot
      +                          eButtonNEC[temp-1][1]);
 10179  000B28  0EFE               	movlw	254
 10180  000B2A  0102               	movlb	2	; () banked
 10181  000B2C  6F00               	movwf	??_UseBluetooth& (0+255),b
 10182  000B2E  0EFF               	movlw	255
 10183  000B30  0102               	movlb	2	; () banked
 10184  000B32  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 10185  000B34  C28F  F202         	movff	UseBluetooth@temp,??_UseBluetooth+2
 10186  000B38  C290  F203         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
 10187  000B3C  90D8               	bcf	status,0,c
 10188  000B3E  0102               	movlb	2	; () banked
 10189  000B40  3702               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
 10190  000B42  3703               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
 10191  000B44  0102               	movlb	2	; () banked
 10192  000B46  5100               	movf	??_UseBluetooth& (0+255),w,b
 10193  000B48  0102               	movlb	2	; () banked
 10194  000B4A  2702               	addwf	(??_UseBluetooth+2)& (0+255),f,b
 10195  000B4C  0102               	movlb	2	; () banked
 10196  000B4E  5101               	movf	(??_UseBluetooth+1)& (0+255),w,b
 10197  000B50  0102               	movlb	2	; () banked
 10198  000B52  2303               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
 10199  000B54  0EDA               	movlw	low _Global1
 10200  000B56  0102               	movlb	2	; () banked
 10201  000B58  6F04               	movwf	(??_UseBluetooth+4)& (0+255),b
 10202  000B5A  0E03               	movlw	high _Global1
 10203  000B5C  0102               	movlb	2	; () banked
 10204  000B5E  6F05               	movwf	(??_UseBluetooth+5)& (0+255),b
 10205  000B60  0E05               	movlw	5
 10206  000B62  0102               	movlb	2	; () banked
 10207  000B64  2704               	addwf	(??_UseBluetooth+4)& (0+255),f,b
 10208  000B66  0E00               	movlw	0
 10209  000B68  2305               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
 10210  000B6A  0102               	movlb	2	; () banked
 10211  000B6C  5102               	movf	(??_UseBluetooth+2)& (0+255),w,b
 10212  000B6E  0102               	movlb	2	; () banked
 10213  000B70  2704               	addwf	(??_UseBluetooth+4)& (0+255),f,b
 10214  000B72  0102               	movlb	2	; () banked
 10215  000B74  5103               	movf	(??_UseBluetooth+3)& (0+255),w,b
 10216  000B76  0102               	movlb	2	; () banked
 10217  000B78  2305               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
 10218  000B7A  0E01               	movlw	1
 10219  000B7C  0102               	movlb	2	; () banked
 10220  000B7E  2504               	addwf	(??_UseBluetooth+4)& (0+255),w,b
 10221  000B80  6ED9               	movwf	fsr2l,c
 10222  000B82  0E00               	movlw	0
 10223  000B84  0102               	movlb	2	; () banked
 10224  000B86  2105               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
 10225  000B88  6EDA               	movwf	fsr2h,c
 10226  000B8A  50DF               	movf	indf2,w,c
 10227  000B8C  0100               	movlb	0	; () banked
 10228  000B8E  6F67               	movwf	EncodeNEC@command& (0+255),b
 10229  000B90  0EFE               	movlw	254
 10230  000B92  0102               	movlb	2	; () banked
 10231  000B94  6F06               	movwf	(??_UseBluetooth+6)& (0+255),b
 10232  000B96  0EFF               	movlw	255
 10233  000B98  0102               	movlb	2	; () banked
 10234  000B9A  6F07               	movwf	(??_UseBluetooth+7)& (0+255),b
 10235  000B9C  C28F  F208         	movff	UseBluetooth@temp,??_UseBluetooth+8
 10236  000BA0  C290  F209         	movff	UseBluetooth@temp+1,??_UseBluetooth+9
 10237  000BA4  90D8               	bcf	status,0,c
 10238  000BA6  0102               	movlb	2	; () banked
 10239  000BA8  3708               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
 10240  000BAA  3709               	rlcf	(??_UseBluetooth+9)& (0+255),f,b
 10241  000BAC  0102               	movlb	2	; () banked
 10242  000BAE  5106               	movf	(??_UseBluetooth+6)& (0+255),w,b
 10243  000BB0  0102               	movlb	2	; () banked
 10244  000BB2  2708               	addwf	(??_UseBluetooth+8)& (0+255),f,b
 10245  000BB4  0102               	movlb	2	; () banked
 10246  000BB6  5107               	movf	(??_UseBluetooth+7)& (0+255),w,b
 10247  000BB8  0102               	movlb	2	; () banked
 10248  000BBA  2309               	addwfc	(??_UseBluetooth+9)& (0+255),f,b
 10249  000BBC  0EDF               	movlw	low (_Global1+5)
 10250  000BBE  0102               	movlb	2	; () banked
 10251  000BC0  2508               	addwf	(??_UseBluetooth+8)& (0+255),w,b
 10252  000BC2  6ED9               	movwf	fsr2l,c
 10253  000BC4  0E03               	movlw	high (_Global1+5)
 10254  000BC6  0102               	movlb	2	; () banked
 10255  000BC8  2109               	addwfc	(??_UseBluetooth+9)& (0+255),w,b
 10256  000BCA  6EDA               	movwf	fsr2h,c
 10257  000BCC  50DF               	movf	indf2,w,c
 10258  000BCE  EC7A  F03F         	call	_EncodeNEC
 10259  000BD2  C067  F27B         	movff	?_EncodeNEC,UseBluetooth@tempNec
 10260  000BD6  C068  F27C         	movff	?_EncodeNEC+1,UseBluetooth@tempNec+1
 10261  000BDA  C069  F27D         	movff	?_EncodeNEC+2,UseBluetooth@tempNec+2
 10262  000BDE  C06A  F27E         	movff	?_EncodeNEC+3,UseBluetooth@tempNec+3
 10263                           
 10264                           ;Bluetooth.c: 604: if(tempNec != 0x00FF00FF)
 10265  000BE2  0102               	movlb	2	; () banked
 10266  000BE4  297B               	incf	UseBluetooth@tempNec& (0+255),w,b
 10267  000BE6  E108               	bnz	u13770
 10268  000BE8  0102               	movlb	2	; () banked
 10269  000BEA  297D               	incf	(UseBluetooth@tempNec+2)& (0+255),w,b
 10270  000BEC  0102               	movlb	2	; () banked
 10271  000BEE  117C               	iorwf	(UseBluetooth@tempNec+1)& (0+255),w,b
 10272  000BF0  0102               	movlb	2	; () banked
 10273  000BF2  117E               	iorwf	(UseBluetooth@tempNec+3)& (0+255),w,b
 10274  000BF4  B4D8               	btfsc	status,2,c
 10275  000BF6  D0A9               	goto	l12110
 10276  000BF8                     u13770:
 10277                           
 10278                           ; BSR set to: 2
 10279                           ;Bluetooth.c: 605: {
 10280                           ;Bluetooth.c: 606: SendNEC_wait(tempNec,0);
 10281  000BF8  C27B  F078         	movff	UseBluetooth@tempNec,SendNEC_wait@code
 10282  000BFC  C27C  F079         	movff	UseBluetooth@tempNec+1,SendNEC_wait@code+1
 10283  000C00  C27D  F07A         	movff	UseBluetooth@tempNec+2,SendNEC_wait@code+2
 10284  000C04  C27E  F07B         	movff	UseBluetooth@tempNec+3,SendNEC_wait@code+3
 10285  000C08  0E00               	movlw	0
 10286  000C0A  0100               	movlb	0	; () banked
 10287  000C0C  6F7C               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
 10288  000C0E  EC1E  F04B         	call	_SendNEC_wait	;wreg free
 10289                           
 10290                           ;Bluetooth.c: 607: sprintf(buf,"Sent NEC code 0x%lX ", tempNec);
 10291  000C12  0E0C               	movlw	low UseBluetooth@buf
 10292  000C14  0100               	movlb	0	; () banked
 10293  000C16  6FB1               	movwf	sprintf@sp& (0+255),b
 10294  000C18  0E02               	movlw	high UseBluetooth@buf
 10295  000C1A  0100               	movlb	0	; () banked
 10296  000C1C  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 10297  000C1E  0EA2               	movlw	low STR_44
 10298  000C20  0100               	movlb	0	; () banked
 10299  000C22  6FB3               	movwf	sprintf@f& (0+255),b
 10300  000C24  0EFC               	movlw	high STR_44
 10301  000C26  0100               	movlb	0	; () banked
 10302  000C28  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 10303  000C2A  C27B  F0B5         	movff	UseBluetooth@tempNec,?_sprintf+4
 10304  000C2E  C27C  F0B6         	movff	UseBluetooth@tempNec+1,?_sprintf+5
 10305  000C32  C27D  F0B7         	movff	UseBluetooth@tempNec+2,?_sprintf+6
 10306  000C36  C27E  F0B8         	movff	UseBluetooth@tempNec+3,?_sprintf+7
 10307  000C3A  EC9C  F012         	call	_sprintf	;wreg free
 10308                           
 10309                           ;Bluetooth.c: 608: UARTstringCRLN(buf);
 10310  000C3E  0E0C               	movlw	low UseBluetooth@buf
 10311  000C40  0100               	movlb	0	; () banked
 10312  000C42  6F70               	movwf	UARTstringCRLN@data& (0+255),b
 10313  000C44  0E02               	movlw	high UseBluetooth@buf
 10314  000C46  0100               	movlb	0	; () banked
 10315  000C48  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10316  000C4A  EC22  F050         	call	_UARTstringCRLN	;wreg free
 10317                           
 10318                           ;Bluetooth.c: 609: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",Global1.Rem
      +                          oteButtonNEC[temp-1][0], Global1.RemoteButtonNEC[temp-1][1]);
 10319  000C4E  0E0C               	movlw	low UseBluetooth@buf
 10320  000C50  0100               	movlb	0	; () banked
 10321  000C52  6FB1               	movwf	sprintf@sp& (0+255),b
 10322  000C54  0E02               	movlw	high UseBluetooth@buf
 10323  000C56  0100               	movlb	0	; () banked
 10324  000C58  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 10325  000C5A  0E46               	movlw	low STR_45
 10326  000C5C  0100               	movlb	0	; () banked
 10327  000C5E  6FB3               	movwf	sprintf@f& (0+255),b
 10328  000C60  0EF6               	movlw	high STR_45
 10329  000C62  0100               	movlb	0	; () banked
 10330  000C64  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 10331  000C66  0EFE               	movlw	254
 10332  000C68  0102               	movlb	2	; () banked
 10333  000C6A  6F00               	movwf	??_UseBluetooth& (0+255),b
 10334  000C6C  0EFF               	movlw	255
 10335  000C6E  0102               	movlb	2	; () banked
 10336  000C70  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 10337  000C72  C28F  F202         	movff	UseBluetooth@temp,??_UseBluetooth+2
 10338  000C76  C290  F203         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
 10339  000C7A  90D8               	bcf	status,0,c
 10340  000C7C  0102               	movlb	2	; () banked
 10341  000C7E  3702               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
 10342  000C80  3703               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
 10343  000C82  0102               	movlb	2	; () banked
 10344  000C84  5100               	movf	??_UseBluetooth& (0+255),w,b
 10345  000C86  0102               	movlb	2	; () banked
 10346  000C88  2702               	addwf	(??_UseBluetooth+2)& (0+255),f,b
 10347  000C8A  0102               	movlb	2	; () banked
 10348  000C8C  5101               	movf	(??_UseBluetooth+1)& (0+255),w,b
 10349  000C8E  0102               	movlb	2	; () banked
 10350  000C90  2303               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
 10351  000C92  0EDF               	movlw	low (_Global1+5)
 10352  000C94  0102               	movlb	2	; () banked
 10353  000C96  2502               	addwf	(??_UseBluetooth+2)& (0+255),w,b
 10354  000C98  6ED9               	movwf	fsr2l,c
 10355  000C9A  0E03               	movlw	high (_Global1+5)
 10356  000C9C  0102               	movlb	2	; () banked
 10357  000C9E  2103               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
 10358  000CA0  6EDA               	movwf	fsr2h,c
 10359  000CA2  50DF               	movf	indf2,w,c
 10360  000CA4  0102               	movlb	2	; () banked
 10361  000CA6  6F04               	movwf	(??_UseBluetooth+4)& (0+255),b
 10362  000CA8  0102               	movlb	2	; () banked
 10363  000CAA  5104               	movf	(??_UseBluetooth+4)& (0+255),w,b
 10364  000CAC  0100               	movlb	0	; () banked
 10365  000CAE  6FB5               	movwf	(?_sprintf+4)& (0+255),b
 10366  000CB0  6BB6               	clrf	(?_sprintf+5)& (0+255),b
 10367  000CB2  0EFE               	movlw	254
 10368  000CB4  0102               	movlb	2	; () banked
 10369  000CB6  6F05               	movwf	(??_UseBluetooth+5)& (0+255),b
 10370  000CB8  0EFF               	movlw	255
 10371  000CBA  0102               	movlb	2	; () banked
 10372  000CBC  6F06               	movwf	(??_UseBluetooth+6)& (0+255),b
 10373  000CBE  C28F  F207         	movff	UseBluetooth@temp,??_UseBluetooth+7
 10374  000CC2  C290  F208         	movff	UseBluetooth@temp+1,??_UseBluetooth+8
 10375  000CC6  90D8               	bcf	status,0,c
 10376  000CC8  0102               	movlb	2	; () banked
 10377  000CCA  3707               	rlcf	(??_UseBluetooth+7)& (0+255),f,b
 10378  000CCC  3708               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
 10379  000CCE  0102               	movlb	2	; () banked
 10380  000CD0  5105               	movf	(??_UseBluetooth+5)& (0+255),w,b
 10381  000CD2  0102               	movlb	2	; () banked
 10382  000CD4  2707               	addwf	(??_UseBluetooth+7)& (0+255),f,b
 10383  000CD6  0102               	movlb	2	; () banked
 10384  000CD8  5106               	movf	(??_UseBluetooth+6)& (0+255),w,b
 10385  000CDA  0102               	movlb	2	; () banked
 10386  000CDC  2308               	addwfc	(??_UseBluetooth+8)& (0+255),f,b
 10387  000CDE  0EDA               	movlw	low _Global1
 10388  000CE0  0102               	movlb	2	; () banked
 10389  000CE2  6F09               	movwf	(??_UseBluetooth+9)& (0+255),b
 10390  000CE4  0E03               	movlw	high _Global1
 10391  000CE6  0102               	movlb	2	; () banked
 10392  000CE8  6F0A               	movwf	(??_UseBluetooth+10)& (0+255),b
 10393  000CEA  0E05               	movlw	5
 10394  000CEC  0102               	movlb	2	; () banked
 10395  000CEE  2709               	addwf	(??_UseBluetooth+9)& (0+255),f,b
 10396  000CF0  0E00               	movlw	0
 10397  000CF2  230A               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
 10398  000CF4  0102               	movlb	2	; () banked
 10399  000CF6  5107               	movf	(??_UseBluetooth+7)& (0+255),w,b
 10400  000CF8  0102               	movlb	2	; () banked
 10401  000CFA  2709               	addwf	(??_UseBluetooth+9)& (0+255),f,b
 10402  000CFC  0102               	movlb	2	; () banked
 10403  000CFE  5108               	movf	(??_UseBluetooth+8)& (0+255),w,b
 10404  000D00  0102               	movlb	2	; () banked
 10405  000D02  230A               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
 10406  000D04  0E01               	movlw	1
 10407  000D06  0102               	movlb	2	; () banked
 10408  000D08  2509               	addwf	(??_UseBluetooth+9)& (0+255),w,b
 10409  000D0A  6ED9               	movwf	fsr2l,c
 10410  000D0C  0E00               	movlw	0
 10411  000D0E  0102               	movlb	2	; () banked
 10412  000D10  210A               	addwfc	(??_UseBluetooth+10)& (0+255),w,b
 10413  000D12  6EDA               	movwf	fsr2h,c
 10414  000D14  50DF               	movf	indf2,w,c
 10415  000D16  0102               	movlb	2	; () banked
 10416  000D18  6F0B               	movwf	(??_UseBluetooth+11)& (0+255),b
 10417  000D1A  0102               	movlb	2	; () banked
 10418  000D1C  510B               	movf	(??_UseBluetooth+11)& (0+255),w,b
 10419  000D1E  0100               	movlb	0	; () banked
 10420  000D20  6FB7               	movwf	(?_sprintf+6)& (0+255),b
 10421  000D22  6BB8               	clrf	(?_sprintf+7)& (0+255),b
 10422  000D24  EC9C  F012         	call	_sprintf	;wreg free
 10423                           
 10424                           ;Bluetooth.c: 610: UARTstringCRLN(buf);
 10425  000D28  0E0C               	movlw	low UseBluetooth@buf
 10426  000D2A  0100               	movlb	0	; () banked
 10427  000D2C  6F70               	movwf	UARTstringCRLN@data& (0+255),b
 10428  000D2E  0E02               	movlw	high UseBluetooth@buf
 10429  000D30  0100               	movlb	0	; () banked
 10430  000D32  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10431  000D34  EC22  F050         	call	_UARTstringCRLN	;wreg free
 10432                           
 10433                           ;Bluetooth.c: 611: UARTstring_CONST(CRLN);
 10434  000D38  0E05               	movlw	low _CRLN
 10435  000D3A  0100               	movlb	0	; () banked
 10436  000D3C  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 10437  000D3E  0EF2               	movlw	high _CRLN
 10438  000D40  0100               	movlb	0	; () banked
 10439  000D42  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10440  000D44  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 10441                           
 10442                           ;Bluetooth.c: 612: return 1;
 10443                           ;	Return value of _UseBluetooth is never used
 10444  000D48  0012               	return	
 10445  000D4A                     l12110:
 10446                           
 10447                           ;Bluetooth.c: 613: }
 10448                           ;Bluetooth.c: 614: UARTstring_CONST(CRLN);
 10449  000D4A  0E05               	movlw	low _CRLN
 10450  000D4C  0100               	movlb	0	; () banked
 10451  000D4E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 10452  000D50  0EF2               	movlw	high _CRLN
 10453  000D52  0100               	movlb	0	; () banked
 10454  000D54  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10455  000D56  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 10456                           
 10457                           ;Bluetooth.c: 615: UARTstringCRLN_CONST("Error: No NEC code saved for specified command"
      +                          );
 10458  000D5A  0E79               	movlw	low STR_46
 10459  000D5C  0100               	movlb	0	; () banked
 10460  000D5E  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10461  000D60  0EF4               	movlw	high STR_46
 10462  000D62  0100               	movlb	0	; () banked
 10463  000D64  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10464  000D66  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10465                           
 10466                           ;Bluetooth.c: 616: return 0;
 10467                           ;	Return value of _UseBluetooth is never used
 10468  000D6A  0012               	return	
 10469                           
 10470                           ;Bluetooth.c: 617: }
 10471  000D6C  D10A               	goto	l12160
 10472  000D6E                     l12116:
 10473                           
 10474                           ;Bluetooth.c: 618: else
 10475                           ;Bluetooth.c: 619: {
 10476                           ;Bluetooth.c: 620: if(!WaitForIRsignal())
 10477  000D6E  ECB6  F04B         	call	_WaitForIRsignal	;wreg free
 10478  000D72  0900               	iorlw	0
 10479  000D74  B4D8               	btfsc	status,2,c
 10480  000D76  0012               	return	
 10481  000D78  D001               	goto	l12120
 10482                           
 10483                           ;Bluetooth.c: 621: {
 10484                           ;Bluetooth.c: 622: return 0;
 10485                           ;	Return value of _UseBluetooth is never used
 10486  000D7A  0012               	return	
 10487  000D7C                     l12120:
 10488                           
 10489                           ;Bluetooth.c: 623: }
 10490                           ;Bluetooth.c: 626: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
 10491  000D7C  C055  F067         	movff	_IR_NEC,DecodeNEC@Nec
 10492  000D80  C056  F068         	movff	_IR_NEC+1,DecodeNEC@Nec+1
 10493  000D84  C057  F069         	movff	_IR_NEC+2,DecodeNEC@Nec+2
 10494  000D88  C058  F06A         	movff	_IR_NEC+3,DecodeNEC@Nec+3
 10495  000D8C  0E8D               	movlw	low UseBluetooth@NecAddress
 10496  000D8E  0100               	movlb	0	; () banked
 10497  000D90  6F6B               	movwf	DecodeNEC@address& (0+255),b
 10498  000D92  0E02               	movlw	high UseBluetooth@NecAddress
 10499  000D94  0100               	movlb	0	; () banked
 10500  000D96  6F6C               	movwf	(DecodeNEC@address+1)& (0+255),b
 10501  000D98  0E8E               	movlw	low UseBluetooth@NecCommand
 10502  000D9A  0100               	movlb	0	; () banked
 10503  000D9C  6F6D               	movwf	DecodeNEC@command& (0+255),b
 10504  000D9E  0E02               	movlw	high UseBluetooth@NecCommand
 10505  000DA0  0100               	movlb	0	; () banked
 10506  000DA2  6F6E               	movwf	(DecodeNEC@command+1)& (0+255),b
 10507  000DA4  EC83  F049         	call	_DecodeNEC	;wreg free
 10508                           
 10509                           ;Bluetooth.c: 627: Global1.RemoteButtonNEC[temp - 1][0] = NecAddress;
 10510  000DA8  0EFE               	movlw	254
 10511  000DAA  0102               	movlb	2	; () banked
 10512  000DAC  6F00               	movwf	??_UseBluetooth& (0+255),b
 10513  000DAE  0EFF               	movlw	255
 10514  000DB0  0102               	movlb	2	; () banked
 10515  000DB2  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 10516  000DB4  C28F  F202         	movff	UseBluetooth@temp,??_UseBluetooth+2
 10517  000DB8  C290  F203         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
 10518  000DBC  90D8               	bcf	status,0,c
 10519  000DBE  0102               	movlb	2	; () banked
 10520  000DC0  3702               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
 10521  000DC2  3703               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
 10522  000DC4  0102               	movlb	2	; () banked
 10523  000DC6  5100               	movf	??_UseBluetooth& (0+255),w,b
 10524  000DC8  0102               	movlb	2	; () banked
 10525  000DCA  2702               	addwf	(??_UseBluetooth+2)& (0+255),f,b
 10526  000DCC  0102               	movlb	2	; () banked
 10527  000DCE  5101               	movf	(??_UseBluetooth+1)& (0+255),w,b
 10528  000DD0  0102               	movlb	2	; () banked
 10529  000DD2  2303               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
 10530  000DD4  0EDF               	movlw	low (_Global1+5)
 10531  000DD6  0102               	movlb	2	; () banked
 10532  000DD8  2502               	addwf	(??_UseBluetooth+2)& (0+255),w,b
 10533  000DDA  6ED9               	movwf	fsr2l,c
 10534  000DDC  0E03               	movlw	high (_Global1+5)
 10535  000DDE  0102               	movlb	2	; () banked
 10536  000DE0  2103               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
 10537  000DE2  6EDA               	movwf	fsr2h,c
 10538  000DE4  C28D  FFDF         	movff	UseBluetooth@NecAddress,indf2
 10539                           
 10540                           ; BSR set to: 2
 10541                           ;Bluetooth.c: 628: Global1.RemoteButtonNEC[temp - 1][1] = NecCommand;
 10542  000DE8  0EFE               	movlw	254
 10543  000DEA  0102               	movlb	2	; () banked
 10544  000DEC  6F00               	movwf	??_UseBluetooth& (0+255),b
 10545  000DEE  0EFF               	movlw	255
 10546  000DF0  0102               	movlb	2	; () banked
 10547  000DF2  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 10548  000DF4  C28F  F202         	movff	UseBluetooth@temp,??_UseBluetooth+2
 10549  000DF8  C290  F203         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
 10550  000DFC  90D8               	bcf	status,0,c
 10551  000DFE  0102               	movlb	2	; () banked
 10552  000E00  3702               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
 10553  000E02  3703               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
 10554  000E04  0102               	movlb	2	; () banked
 10555  000E06  5100               	movf	??_UseBluetooth& (0+255),w,b
 10556  000E08  0102               	movlb	2	; () banked
 10557  000E0A  2702               	addwf	(??_UseBluetooth+2)& (0+255),f,b
 10558  000E0C  0102               	movlb	2	; () banked
 10559  000E0E  5101               	movf	(??_UseBluetooth+1)& (0+255),w,b
 10560  000E10  0102               	movlb	2	; () banked
 10561  000E12  2303               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
 10562  000E14  0EDA               	movlw	low _Global1
 10563  000E16  0102               	movlb	2	; () banked
 10564  000E18  6F04               	movwf	(??_UseBluetooth+4)& (0+255),b
 10565  000E1A  0E03               	movlw	high _Global1
 10566  000E1C  0102               	movlb	2	; () banked
 10567  000E1E  6F05               	movwf	(??_UseBluetooth+5)& (0+255),b
 10568  000E20  0E05               	movlw	5
 10569  000E22  0102               	movlb	2	; () banked
 10570  000E24  2704               	addwf	(??_UseBluetooth+4)& (0+255),f,b
 10571  000E26  0E00               	movlw	0
 10572  000E28  2305               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
 10573  000E2A  0102               	movlb	2	; () banked
 10574  000E2C  5102               	movf	(??_UseBluetooth+2)& (0+255),w,b
 10575  000E2E  0102               	movlb	2	; () banked
 10576  000E30  2704               	addwf	(??_UseBluetooth+4)& (0+255),f,b
 10577  000E32  0102               	movlb	2	; () banked
 10578  000E34  5103               	movf	(??_UseBluetooth+3)& (0+255),w,b
 10579  000E36  0102               	movlb	2	; () banked
 10580  000E38  2305               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
 10581  000E3A  0E01               	movlw	1
 10582  000E3C  0102               	movlb	2	; () banked
 10583  000E3E  2504               	addwf	(??_UseBluetooth+4)& (0+255),w,b
 10584  000E40  6ED9               	movwf	fsr2l,c
 10585  000E42  0E00               	movlw	0
 10586  000E44  0102               	movlb	2	; () banked
 10587  000E46  2105               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
 10588  000E48  6EDA               	movwf	fsr2h,c
 10589  000E4A  C28E  FFDF         	movff	UseBluetooth@NecCommand,indf2
 10590                           
 10591                           ; BSR set to: 2
 10592                           ;Bluetooth.c: 629: SyncGlobalToEEPROM();
 10593  000E4E  ECCE  F04A         	call	_SyncGlobalToEEPROM	;wreg free
 10594                           
 10595                           ;Bluetooth.c: 630: UARTstring_CONST(CRLN);
 10596  000E52  0E05               	movlw	low _CRLN
 10597  000E54  0100               	movlb	0	; () banked
 10598  000E56  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 10599  000E58  0EF2               	movlw	high _CRLN
 10600  000E5A  0100               	movlb	0	; () banked
 10601  000E5C  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10602  000E5E  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 10603                           
 10604                           ;Bluetooth.c: 631: sprintf(buf,"RemoteButton%lu now transmits NEC code 0x%lX ",temp, IR_
      +                          NEC);
 10605  000E62  0E0C               	movlw	low UseBluetooth@buf
 10606  000E64  0100               	movlb	0	; () banked
 10607  000E66  6FB1               	movwf	sprintf@sp& (0+255),b
 10608  000E68  0E02               	movlw	high UseBluetooth@buf
 10609  000E6A  0100               	movlb	0	; () banked
 10610  000E6C  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 10611  000E6E  0EA8               	movlw	low STR_47
 10612  000E70  0100               	movlb	0	; () banked
 10613  000E72  6FB3               	movwf	sprintf@f& (0+255),b
 10614  000E74  0EF4               	movlw	high STR_47
 10615  000E76  0100               	movlb	0	; () banked
 10616  000E78  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 10617  000E7A  C28F  F0B5         	movff	UseBluetooth@temp,?_sprintf+4
 10618  000E7E  C290  F0B6         	movff	UseBluetooth@temp+1,?_sprintf+5
 10619  000E82  C291  F0B7         	movff	UseBluetooth@temp+2,?_sprintf+6
 10620  000E86  C292  F0B8         	movff	UseBluetooth@temp+3,?_sprintf+7
 10621  000E8A  C055  F0B9         	movff	_IR_NEC,?_sprintf+8
 10622  000E8E  C056  F0BA         	movff	_IR_NEC+1,?_sprintf+9
 10623  000E92  C057  F0BB         	movff	_IR_NEC+2,?_sprintf+10
 10624  000E96  C058  F0BC         	movff	_IR_NEC+3,?_sprintf+11
 10625  000E9A  EC9C  F012         	call	_sprintf	;wreg free
 10626                           
 10627                           ;Bluetooth.c: 632: UARTstringCRLN(buf);
 10628  000E9E  0E0C               	movlw	low UseBluetooth@buf
 10629  000EA0  0100               	movlb	0	; () banked
 10630  000EA2  6F70               	movwf	UARTstringCRLN@data& (0+255),b
 10631  000EA4  0E02               	movlw	high UseBluetooth@buf
 10632  000EA6  0100               	movlb	0	; () banked
 10633  000EA8  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10634  000EAA  EC22  F050         	call	_UARTstringCRLN	;wreg free
 10635                           
 10636                           ;Bluetooth.c: 633: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",NecAddress,
      +                           NecCommand);
 10637  000EAE  0E0C               	movlw	low UseBluetooth@buf
 10638  000EB0  0100               	movlb	0	; () banked
 10639  000EB2  6FB1               	movwf	sprintf@sp& (0+255),b
 10640  000EB4  0E02               	movlw	high UseBluetooth@buf
 10641  000EB6  0100               	movlb	0	; () banked
 10642  000EB8  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 10643  000EBA  0E46               	movlw	low STR_45
 10644  000EBC  0100               	movlb	0	; () banked
 10645  000EBE  6FB3               	movwf	sprintf@f& (0+255),b
 10646  000EC0  0EF6               	movlw	high STR_45
 10647  000EC2  0100               	movlb	0	; () banked
 10648  000EC4  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 10649  000EC6  C28D  F0B5         	movff	UseBluetooth@NecAddress,?_sprintf+4
 10650  000ECA  0100               	movlb	0	; () banked
 10651  000ECC  6BB6               	clrf	(?_sprintf+5)& (0+255),b
 10652  000ECE  C28E  F0B7         	movff	UseBluetooth@NecCommand,?_sprintf+6
 10653  000ED2  0100               	movlb	0	; () banked
 10654  000ED4  6BB8               	clrf	(?_sprintf+7)& (0+255),b
 10655  000ED6  EC9C  F012         	call	_sprintf	;wreg free
 10656                           
 10657                           ;Bluetooth.c: 634: UARTstringCRLN(buf);
 10658  000EDA  0E0C               	movlw	low UseBluetooth@buf
 10659  000EDC  0100               	movlb	0	; () banked
 10660  000EDE  6F70               	movwf	UARTstringCRLN@data& (0+255),b
 10661  000EE0  0E02               	movlw	high UseBluetooth@buf
 10662  000EE2  0100               	movlb	0	; () banked
 10663  000EE4  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10664  000EE6  EC22  F050         	call	_UARTstringCRLN	;wreg free
 10665                           
 10666                           ;Bluetooth.c: 635: UARTstring_CONST(CRLN);
 10667  000EEA  0E05               	movlw	low _CRLN
 10668  000EEC  0100               	movlb	0	; () banked
 10669  000EEE  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 10670  000EF0  0EF2               	movlw	high _CRLN
 10671  000EF2  0100               	movlb	0	; () banked
 10672  000EF4  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10673  000EF6  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 10674                           
 10675                           ;Bluetooth.c: 637: for(i =0;i<10;i++)
 10676  000EFA  0E00               	movlw	0
 10677  000EFC  0102               	movlb	2	; () banked
 10678  000EFE  6F93               	movwf	UseBluetooth@i& (0+255),b
 10679                           
 10680                           ; BSR set to: 2
 10681  000F00  0E09               	movlw	9
 10682  000F02  0102               	movlb	2	; () banked
 10683  000F04  6593               	cpfsgt	UseBluetooth@i& (0+255),b
 10684  000F06  D002               	goto	l12146
 10685  000F08  0012               	return	
 10686                           
 10687                           ; BSR set to: 2
 10688  000F0A  0012               	return	
 10689  000F0C                     l12146:
 10690                           
 10691                           ; BSR set to: 2
 10692                           ;Bluetooth.c: 638: {
 10693                           ;Bluetooth.c: 639: (LATC |= 0x04);
 10694  000F0C  848B               	bsf	3979,2,c	;volatile
 10695                           
 10696                           ; BSR set to: 2
 10697                           ;Bluetooth.c: 640: delayUS(50000);
 10698  000F0E  0E50               	movlw	80
 10699  000F10  0100               	movlb	0	; () banked
 10700  000F12  6F63               	movwf	delayUS@US& (0+255),b
 10701  000F14  0EC3               	movlw	195
 10702  000F16  6F64               	movwf	(delayUS@US+1)& (0+255),b
 10703  000F18  0E00               	movlw	0
 10704  000F1A  6F65               	movwf	(delayUS@US+2)& (0+255),b
 10705  000F1C  0E00               	movlw	0
 10706  000F1E  6F66               	movwf	(delayUS@US+3)& (0+255),b
 10707  000F20  ECA0  F04E         	call	_delayUS	;wreg free
 10708                           
 10709                           ;Bluetooth.c: 641: (LATC &= ~0x04);
 10710  000F24  948B               	bcf	3979,2,c	;volatile
 10711                           
 10712                           ;Bluetooth.c: 642: delayUS(50000);
 10713  000F26  0E50               	movlw	80
 10714  000F28  0100               	movlb	0	; () banked
 10715  000F2A  6F63               	movwf	delayUS@US& (0+255),b
 10716  000F2C  0EC3               	movlw	195
 10717  000F2E  6F64               	movwf	(delayUS@US+1)& (0+255),b
 10718  000F30  0E00               	movlw	0
 10719  000F32  6F65               	movwf	(delayUS@US+2)& (0+255),b
 10720  000F34  0E00               	movlw	0
 10721  000F36  6F66               	movwf	(delayUS@US+3)& (0+255),b
 10722  000F38  ECA0  F04E         	call	_delayUS	;wreg free
 10723  000F3C  0102               	movlb	2	; () banked
 10724  000F3E  2B93               	incf	UseBluetooth@i& (0+255),f,b
 10725                           
 10726                           ; BSR set to: 2
 10727  000F40  0E09               	movlw	9
 10728  000F42  0102               	movlb	2	; () banked
 10729  000F44  6593               	cpfsgt	UseBluetooth@i& (0+255),b
 10730  000F46  D7E2               	goto	l12146
 10731  000F48  0012               	return	
 10732                           
 10733                           ; BSR set to: 2
 10734                           ;Bluetooth.c: 643: }
 10735                           ;Bluetooth.c: 644: return 1;
 10736                           ;	Return value of _UseBluetooth is never used
 10737  000F4A  0012               	return	
 10738                           
 10739                           ; BSR set to: 2
 10740                           ;Bluetooth.c: 645: }
 10741                           ;Bluetooth.c: 646: }
 10742  000F4C  D01A               	goto	l12160
 10743  000F4E                     l12156:
 10744                           
 10745                           ; BSR set to: 2
 10746                           ;Bluetooth.c: 647: else
 10747                           ;Bluetooth.c: 648: {
 10748                           ;Bluetooth.c: 649: UARTstring_CONST(CRLN);
 10749  000F4E  0E05               	movlw	low _CRLN
 10750  000F50  0100               	movlb	0	; () banked
 10751  000F52  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 10752  000F54  0EF2               	movlw	high _CRLN
 10753  000F56  0100               	movlb	0	; () banked
 10754  000F58  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10755  000F5A  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 10756                           
 10757                           ;Bluetooth.c: 650: UARTstringCRLN_CONST("Error: Remote button number too high");
 10758  000F5E  0EBE               	movlw	low STR_49
 10759  000F60  0100               	movlb	0	; () banked
 10760  000F62  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10761  000F64  0EF7               	movlw	high STR_49
 10762  000F66  0100               	movlb	0	; () banked
 10763  000F68  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10764  000F6A  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10765                           
 10766                           ;Bluetooth.c: 651: UARTstring_CONST(CRLN);
 10767  000F6E  0E05               	movlw	low _CRLN
 10768  000F70  0100               	movlb	0	; () banked
 10769  000F72  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 10770  000F74  0EF2               	movlw	high _CRLN
 10771  000F76  0100               	movlb	0	; () banked
 10772  000F78  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10773  000F7A  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 10774                           
 10775                           ;Bluetooth.c: 652: return 0;
 10776                           ;	Return value of _UseBluetooth is never used
 10777  000F7E  0012               	return	
 10778  000F80  D000               	goto	l12160
 10779  000F82                     l12160:
 10780                           
 10781                           ;Bluetooth.c: 653: }
 10782                           ;Bluetooth.c: 654: }
 10783                           ;Bluetooth.c: 655: }
 10784                           ;Bluetooth.c: 656: UARTstring_CONST(CRLN);
 10785  000F82  0E05               	movlw	low _CRLN
 10786  000F84  0100               	movlb	0	; () banked
 10787  000F86  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 10788  000F88  0EF2               	movlw	high _CRLN
 10789  000F8A  0100               	movlb	0	; () banked
 10790  000F8C  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10791  000F8E  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 10792                           
 10793                           ;Bluetooth.c: 657: UARTstringCRLN_CONST("Error: Remote button not specified");
 10794  000F92  0E07               	movlw	low STR_50
 10795  000F94  0100               	movlb	0	; () banked
 10796  000F96  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10797  000F98  0EF8               	movlw	high STR_50
 10798  000F9A  0100               	movlb	0	; () banked
 10799  000F9C  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10800  000F9E  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10801                           
 10802                           ;Bluetooth.c: 658: UARTstring_CONST(CRLN);
 10803  000FA2  0E05               	movlw	low _CRLN
 10804  000FA4  0100               	movlb	0	; () banked
 10805  000FA6  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 10806  000FA8  0EF2               	movlw	high _CRLN
 10807  000FAA  0100               	movlb	0	; () banked
 10808  000FAC  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10809  000FAE  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 10810                           
 10811                           ;Bluetooth.c: 659: UARTstringCRLN_CONST("Usage:");
 10812  000FB2  0EA7               	movlw	low STR_34
 10813  000FB4  0100               	movlb	0	; () banked
 10814  000FB6  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10815  000FB8  0EFF               	movlw	high STR_34
 10816  000FBA  0100               	movlb	0	; () banked
 10817  000FBC  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10818  000FBE  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10819                           
 10820                           ;Bluetooth.c: 660: UARTstringCRLN_CONST("RemoteButton'x'");
 10821  000FC2  0E34               	movlw	low STR_52
 10822  000FC4  0100               	movlb	0	; () banked
 10823  000FC6  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10824  000FC8  0EFE               	movlw	high STR_52
 10825  000FCA  0100               	movlb	0	; () banked
 10826  000FCC  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10827  000FCE  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10828                           
 10829                           ;Bluetooth.c: 661: UARTstringCRLN_CONST("RemoteButton'x' set");
 10830  000FD2  0E45               	movlw	low STR_53
 10831  000FD4  0100               	movlb	0	; () banked
 10832  000FD6  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10833  000FD8  0EFD               	movlw	high STR_53
 10834  000FDA  0100               	movlb	0	; () banked
 10835  000FDC  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10836  000FDE  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10837                           
 10838                           ;Bluetooth.c: 662: UARTstring_CONST(CRLN);
 10839  000FE2  0E05               	movlw	low _CRLN
 10840  000FE4  0100               	movlb	0	; () banked
 10841  000FE6  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 10842  000FE8  0EF2               	movlw	high _CRLN
 10843  000FEA  0100               	movlb	0	; () banked
 10844  000FEC  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10845  000FEE  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 10846                           
 10847                           ;Bluetooth.c: 663: UARTstringCRLN_CONST("Example:");
 10848  000FF2  0E86               	movlw	low STR_38
 10849  000FF4  0100               	movlb	0	; () banked
 10850  000FF6  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10851  000FF8  0EFF               	movlw	high STR_38
 10852  000FFA  0100               	movlb	0	; () banked
 10853  000FFC  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10854  000FFE  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10855                           
 10856                           ;Bluetooth.c: 664: UARTstringCRLN_CONST("RemoteButton1");
 10857  001002  0E82               	movlw	low STR_55
 10858  001004  0100               	movlb	0	; () banked
 10859  001006  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10860  001008  0EFE               	movlw	high STR_55
 10861  00100A  0100               	movlb	0	; () banked
 10862  00100C  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10863  00100E  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10864                           
 10865                           ;Bluetooth.c: 665: UARTstringCRLN_CONST("RemoteButton1 set");
 10866  001012  0EDD               	movlw	low STR_56
 10867  001014  0100               	movlb	0	; () banked
 10868  001016  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10869  001018  0EFD               	movlw	high STR_56
 10870  00101A  0100               	movlb	0	; () banked
 10871  00101C  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10872  00101E  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10873                           
 10874                           ;Bluetooth.c: 666: UARTstring_CONST(CRLN);
 10875  001022  0E05               	movlw	low _CRLN
 10876  001024  0100               	movlb	0	; () banked
 10877  001026  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 10878  001028  0EF2               	movlw	high _CRLN
 10879  00102A  0100               	movlb	0	; () banked
 10880  00102C  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10881  00102E  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 10882                           
 10883                           ;Bluetooth.c: 668: }
 10884                           
 10885                           ;Bluetooth.c: 667: return 0;
 10886                           ;	Return value of _UseBluetooth is never used
 10887  001032  0012               	return	
 10888  001034                     l12166:
 10889                           
 10890                           ;Bluetooth.c: 669: else if(StringContainsCaseInsensitive(String,"RF set") || StringConta
      +                          insCaseInsensitive(String,"RF clear"))
 10891  001034  C0F5  F066         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10892  001038  C0F6  F067         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10893  00103C  0EAE               	movlw	low STR_57
 10894  00103E  0100               	movlb	0	; () banked
 10895  001040  6F68               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10896  001042  0EFF               	movlw	high STR_57
 10897  001044  0100               	movlb	0	; () banked
 10898  001046  6F69               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10899  001048  ECD4  F038         	call	_StringContainsCaseInsensitive	;wreg free
 10900  00104C  0900               	iorlw	0
 10901  00104E  A4D8               	btfss	status,2,c
 10902  001050  D010               	goto	l12170
 10903  001052  C0F5  F066         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10904  001056  C0F6  F067         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10905  00105A  0E8F               	movlw	low STR_58
 10906  00105C  0100               	movlb	0	; () banked
 10907  00105E  6F68               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10908  001060  0EFF               	movlw	high STR_58
 10909  001062  0100               	movlb	0	; () banked
 10910  001064  6F69               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10911  001066  ECD4  F038         	call	_StringContainsCaseInsensitive	;wreg free
 10912  00106A  0900               	iorlw	0
 10913  00106C  B4D8               	btfsc	status,2,c
 10914  00106E  EF7C  F00C         	goto	l12448
 10915  001072                     l12170:
 10916                           
 10917                           ;Bluetooth.c: 670: {
 10918                           ;Bluetooth.c: 671: if(StringContainsCaseInsensitive(String,"RF set"))
 10919  001072  C0F5  F066         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10920  001076  C0F6  F067         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10921  00107A  0EAE               	movlw	low STR_57
 10922  00107C  0100               	movlb	0	; () banked
 10923  00107E  6F68               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10924  001080  0EFF               	movlw	high STR_57
 10925  001082  0100               	movlb	0	; () banked
 10926  001084  6F69               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10927  001086  ECD4  F038         	call	_StringContainsCaseInsensitive	;wreg free
 10928  00108A  0900               	iorlw	0
 10929  00108C  B4D8               	btfsc	status,2,c
 10930  00108E  D002               	goto	l12174
 10931                           
 10932                           ;Bluetooth.c: 672: {
 10933                           ;Bluetooth.c: 673: set = 1;
 10934  001090  0E01               	movlw	1
 10935  001092  D001               	goto	L4
 10936  001094                     l12174:
 10937                           
 10938                           ;Bluetooth.c: 675: else
 10939                           ;Bluetooth.c: 676: {
 10940                           ;Bluetooth.c: 677: set = 0;
 10941  001094  0E00               	movlw	0
 10942  001096                     L4:
 10943  001096  0102               	movlb	2	; () banked
 10944  001098  6F7A               	movwf	UseBluetooth@set& (0+255),b
 10945  00109A  D000               	goto	l12176
 10946  00109C                     l12176:
 10947                           
 10948                           ; BSR set to: 2
 10949                           ;Bluetooth.c: 678: }
 10950                           ;Bluetooth.c: 679: if(!StringAddEqual(String))
 10951  00109C  C0F5  F072         	movff	UseBluetooth@String,StringAddEqual@Input
 10952  0010A0  C0F6  F073         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
 10953  0010A4  ECED  F036         	call	_StringAddEqual	;wreg free
 10954  0010A8  0900               	iorlw	0
 10955  0010AA  A4D8               	btfss	status,2,c
 10956  0010AC  D011               	goto	l12182
 10957                           
 10958                           ;Bluetooth.c: 680: {
 10959                           ;Bluetooth.c: 681: UARTstringCRLN_CONST("Error: No RF configuration specified");
 10960  0010AE  0E74               	movlw	low STR_60
 10961  0010B0  0100               	movlb	0	; () banked
 10962  0010B2  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 10963  0010B4  0EF7               	movlw	high STR_60
 10964  0010B6  0100               	movlb	0	; () banked
 10965  0010B8  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 10966  0010BA  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 10967                           
 10968                           ;Bluetooth.c: 682: UARTstring_CONST(CRLN);
 10969  0010BE  0E05               	movlw	low _CRLN
 10970  0010C0  0100               	movlb	0	; () banked
 10971  0010C2  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 10972  0010C4  0EF2               	movlw	high _CRLN
 10973  0010C6  0100               	movlb	0	; () banked
 10974  0010C8  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10975  0010CA  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 10976                           
 10977                           ;Bluetooth.c: 683: return 0;
 10978                           ;	Return value of _UseBluetooth is never used
 10979  0010CE  0012               	return	
 10980  0010D0                     l12182:
 10981                           
 10982                           ;Bluetooth.c: 684: }
 10983                           ;Bluetooth.c: 685: StringPos++;
 10984  0010D0  0100               	movlb	0	; () banked
 10985  0010D2  2BF7               	incf	UseBluetooth@StringPos& (0+255),f,b
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;Bluetooth.c: 686: UARTstring_CONST(CRLN);
 10989  0010D4  0E05               	movlw	low _CRLN
 10990  0010D6  0100               	movlb	0	; () banked
 10991  0010D8  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 10992  0010DA  0EF2               	movlw	high _CRLN
 10993  0010DC  0100               	movlb	0	; () banked
 10994  0010DE  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 10995  0010E0  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 10996                           
 10997                           ;Bluetooth.c: 687: if(!GetNumberUnsigned(String, 1, &temp))
 10998  0010E4  C0F5  F06F         	movff	UseBluetooth@String,GetNumberUnsigned@This
 10999  0010E8  C0F6  F070         	movff	UseBluetooth@String+1,GetNumberUnsigned@This+1
 11000  0010EC  0E01               	movlw	1
 11001  0010EE  0100               	movlb	0	; () banked
 11002  0010F0  6F71               	movwf	GetNumberUnsigned@CommaNumber& (0+255),b
 11003  0010F2  0E8F               	movlw	low UseBluetooth@temp
 11004  0010F4  0100               	movlb	0	; () banked
 11005  0010F6  6F72               	movwf	GetNumberUnsigned@result& (0+255),b
 11006  0010F8  0E02               	movlw	high UseBluetooth@temp
 11007  0010FA  0100               	movlb	0	; () banked
 11008  0010FC  6F73               	movwf	(GetNumberUnsigned@result+1)& (0+255),b
 11009  0010FE  EC29  F02E         	call	_GetNumberUnsigned	;wreg free
 11010  001102  0900               	iorlw	0
 11011  001104  A4D8               	btfss	status,2,c
 11012  001106  D003               	goto	l12190
 11013                           
 11014                           ;Bluetooth.c: 688: {
 11015                           ;Bluetooth.c: 689: rfconf = (unsigned char) temp;
 11016  001108  C28F  F28C         	movff	UseBluetooth@temp,UseBluetooth@rfconf
 11017                           
 11018                           ;Bluetooth.c: 690: }
 11019  00110C  D011               	goto	l12194
 11020  00110E                     l12190:
 11021                           
 11022                           ;Bluetooth.c: 691: else
 11023                           ;Bluetooth.c: 692: {
 11024                           ;Bluetooth.c: 693: UARTstringCRLN_CONST("Error: No RF configuration specified");
 11025  00110E  0E74               	movlw	low STR_60
 11026  001110  0100               	movlb	0	; () banked
 11027  001112  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11028  001114  0EF7               	movlw	high STR_60
 11029  001116  0100               	movlb	0	; () banked
 11030  001118  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11031  00111A  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 11032                           
 11033                           ;Bluetooth.c: 694: UARTstring_CONST(CRLN);
 11034  00111E  0E05               	movlw	low _CRLN
 11035  001120  0100               	movlb	0	; () banked
 11036  001122  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 11037  001124  0EF2               	movlw	high _CRLN
 11038  001126  0100               	movlb	0	; () banked
 11039  001128  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11040  00112A  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 11041                           
 11042                           ;Bluetooth.c: 695: return 0;
 11043                           ;	Return value of _UseBluetooth is never used
 11044  00112E  0012               	return	
 11045  001130                     l12194:
 11046                           
 11047                           ;Bluetooth.c: 696: }
 11048                           ;Bluetooth.c: 697: if(rfconf <= 0 || rfconf > 2)
 11049  001130  0102               	movlb	2	; () banked
 11050  001132  518C               	movf	UseBluetooth@rfconf& (0+255),w,b
 11051  001134  0102               	movlb	2	; () banked
 11052  001136  B4D8               	btfsc	status,2,c
 11053  001138  D005               	goto	l12198
 11054                           
 11055                           ; BSR set to: 2
 11056  00113A  0E02               	movlw	2
 11057  00113C  0102               	movlb	2	; () banked
 11058  00113E  658C               	cpfsgt	UseBluetooth@rfconf& (0+255),b
 11059  001140  D012               	goto	l12202
 11060  001142  D000               	goto	l12198
 11061  001144                     l12198:
 11062                           
 11063                           ; BSR set to: 2
 11064                           ;Bluetooth.c: 698: {
 11065                           ;Bluetooth.c: 699: UARTstringCRLN_CONST("Error: RF configuration out of range");
 11066  001144  0E99               	movlw	low STR_62
 11067  001146  0100               	movlb	0	; () banked
 11068  001148  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11069  00114A  0EF7               	movlw	high STR_62
 11070  00114C  0100               	movlb	0	; () banked
 11071  00114E  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11072  001150  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 11073                           
 11074                           ;Bluetooth.c: 700: UARTstring_CONST(CRLN);
 11075  001154  0E05               	movlw	low _CRLN
 11076  001156  0100               	movlb	0	; () banked
 11077  001158  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 11078  00115A  0EF2               	movlw	high _CRLN
 11079  00115C  0100               	movlb	0	; () banked
 11080  00115E  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11081  001160  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 11082                           
 11083                           ;Bluetooth.c: 701: return 0;
 11084                           ;	Return value of _UseBluetooth is never used
 11085  001164  0012               	return	
 11086  001166                     l12202:
 11087                           
 11088                           ;Bluetooth.c: 702: }
 11089                           ;Bluetooth.c: 703: if(GetStringAfterComma(String, 1, rfchannelSTR))
 11090  001166  C0F5  F063         	movff	UseBluetooth@String,GetStringAfterComma@This
 11091  00116A  C0F6  F064         	movff	UseBluetooth@String+1,GetStringAfterComma@This+1
 11092  00116E  0E01               	movlw	1
 11093  001170  0100               	movlb	0	; () banked
 11094  001172  6F65               	movwf	GetStringAfterComma@CommaNumber& (0+255),b
 11095  001174  0E70               	movlw	low UseBluetooth@rfchannelSTR
 11096  001176  0100               	movlb	0	; () banked
 11097  001178  6F66               	movwf	GetStringAfterComma@result& (0+255),b
 11098  00117A  0E02               	movlw	high UseBluetooth@rfchannelSTR
 11099  00117C  0100               	movlb	0	; () banked
 11100  00117E  6F67               	movwf	(GetStringAfterComma@result+1)& (0+255),b
 11101  001180  EC73  F042         	call	_GetStringAfterComma	;wreg free
 11102  001184  0900               	iorlw	0
 11103  001186  B4D8               	btfsc	status,2,c
 11104  001188  D011               	goto	l12210
 11105                           
 11106                           ;Bluetooth.c: 704: {
 11107                           ;Bluetooth.c: 705: UARTstringCRLN_CONST("Error: No RF channel specified");
 11108  00118A  0EEB               	movlw	low STR_63
 11109  00118C  0100               	movlb	0	; () banked
 11110  00118E  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11111  001190  0EF9               	movlw	high STR_63
 11112  001192  0100               	movlb	0	; () banked
 11113  001194  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11114  001196  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 11115                           
 11116                           ;Bluetooth.c: 706: UARTstring_CONST(CRLN);
 11117  00119A  0E05               	movlw	low _CRLN
 11118  00119C  0100               	movlb	0	; () banked
 11119  00119E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 11120  0011A0  0EF2               	movlw	high _CRLN
 11121  0011A2  0100               	movlb	0	; () banked
 11122  0011A4  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11123  0011A6  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 11124                           
 11125                           ;Bluetooth.c: 708: }
 11126                           
 11127                           ;Bluetooth.c: 707: return 0;
 11128                           ;	Return value of _UseBluetooth is never used
 11129  0011AA  0012               	return	
 11130  0011AC                     l12210:
 11131                           
 11132                           ;Bluetooth.c: 709: else
 11133                           ;Bluetooth.c: 710: {
 11134                           ;Bluetooth.c: 711: lowercaseString(rfchannelSTR);
 11135  0011AC  0E70               	movlw	low UseBluetooth@rfchannelSTR
 11136  0011AE  0100               	movlb	0	; () banked
 11137  0011B0  6F63               	movwf	lowercaseString@Input& (0+255),b
 11138  0011B2  0E02               	movlw	high UseBluetooth@rfchannelSTR
 11139  0011B4  0100               	movlb	0	; () banked
 11140  0011B6  6F64               	movwf	(lowercaseString@Input+1)& (0+255),b
 11141  0011B8  EC63  F04F         	call	_lowercaseString	;wreg free
 11142                           
 11143                           ;Bluetooth.c: 712: if(rfchannelSTR[1] == 0 || rfchannelSTR[1] == ' ')
 11144  0011BC  0102               	movlb	2	; () banked
 11145  0011BE  5171               	movf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 11146  0011C0  B4D8               	btfsc	status,2,c
 11147  0011C2  D005               	goto	l12216
 11148                           
 11149                           ; BSR set to: 2
 11150  0011C4  0E20               	movlw	32
 11151  0011C6  0102               	movlb	2	; () banked
 11152  0011C8  1971               	xorwf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 11153  0011CA  A4D8               	btfss	status,2,c
 11154  0011CC  D384               	goto	l12444
 11155  0011CE                     l12216:
 11156                           
 11157                           ; BSR set to: 2
 11158                           ;Bluetooth.c: 713: {
 11159                           ;Bluetooth.c: 714: rfchannelSTR[1] = 0;
 11160  0011CE  0E00               	movlw	0
 11161  0011D0  0102               	movlb	2	; () banked
 11162  0011D2  6F71               	movwf	(UseBluetooth@rfchannelSTR+1)& (0+255),b
 11163                           
 11164                           ; BSR set to: 2
 11165                           ;Bluetooth.c: 715: if(rfconf == 1)
 11166  0011D4  0102               	movlb	2	; () banked
 11167  0011D6  058C               	decf	UseBluetooth@rfconf& (0+255),w,b
 11168  0011D8  A4D8               	btfss	status,2,c
 11169  0011DA  D015               	goto	l12224
 11170                           
 11171                           ; BSR set to: 2
 11172                           ;Bluetooth.c: 716: {
 11173                           ;Bluetooth.c: 717: if(!StringContainsCaseInsensitive(Conf1_Channels, rfchannelSTR))
 11174  0011DC  0EF9               	movlw	low _Conf1_Channels
 11175  0011DE  0100               	movlb	0	; () banked
 11176  0011E0  6F66               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 11177  0011E2  0EF1               	movlw	high _Conf1_Channels
 11178  0011E4  0100               	movlb	0	; () banked
 11179  0011E6  6F67               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 11180  0011E8  0E70               	movlw	low UseBluetooth@rfchannelSTR
 11181  0011EA  0100               	movlb	0	; () banked
 11182  0011EC  6F68               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 11183  0011EE  0E02               	movlw	high UseBluetooth@rfchannelSTR
 11184  0011F0  0100               	movlb	0	; () banked
 11185  0011F2  6F69               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 11186  0011F4  ECD4  F038         	call	_StringContainsCaseInsensitive	;wreg free
 11187  0011F8  0900               	iorlw	0
 11188  0011FA  A4D8               	btfss	status,2,c
 11189  0011FC  D019               	goto	l2073
 11190                           
 11191                           ;Bluetooth.c: 718: {
 11192                           ;Bluetooth.c: 719: ok = 0;
 11193  0011FE  0E00               	movlw	0
 11194  001200  0102               	movlb	2	; () banked
 11195  001202  6F8A               	movwf	UseBluetooth@ok& (0+255),b
 11196                           
 11197                           ; BSR set to: 2
 11198                           ;Bluetooth.c: 720: }
 11199                           ;Bluetooth.c: 721: }
 11200  001204  D015               	goto	l2073
 11201  001206                     l12224:
 11202                           
 11203                           ; BSR set to: 2
 11204                           ;Bluetooth.c: 722: else if(rfconf == 2)
 11205  001206  0E02               	movlw	2
 11206  001208  0102               	movlb	2	; () banked
 11207  00120A  198C               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 11208  00120C  A4D8               	btfss	status,2,c
 11209  00120E  D010               	goto	l2073
 11210                           
 11211                           ; BSR set to: 2
 11212                           ;Bluetooth.c: 723: {
 11213                           ;Bluetooth.c: 724: if(!StringContainsCaseInsensitive(Conf2_Channels, rfchannelSTR))
 11214  001210  0EFD               	movlw	low _Conf2_Channels
 11215  001212  0100               	movlb	0	; () banked
 11216  001214  6F66               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 11217  001216  0EF1               	movlw	high _Conf2_Channels
 11218  001218  0100               	movlb	0	; () banked
 11219  00121A  6F67               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 11220  00121C  0E70               	movlw	low UseBluetooth@rfchannelSTR
 11221  00121E  0100               	movlb	0	; () banked
 11222  001220  6F68               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 11223  001222  0E02               	movlw	high UseBluetooth@rfchannelSTR
 11224  001224  0100               	movlb	0	; () banked
 11225  001226  6F69               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 11226  001228  ECD4  F038         	call	_StringContainsCaseInsensitive	;wreg free
 11227  00122C  D7E5               	goto	L9
 11228                           
 11229                           ; BSR set to: 2
 11230                           
 11231                           ;Bluetooth.c: 725: {
 11232                           ;Bluetooth.c: 726: ok = 0;
 11233  00122E  D000               	goto	l2073
 11234  001230                     l2073:
 11235                           
 11236                           ;Bluetooth.c: 727: }
 11237                           ;Bluetooth.c: 728: }
 11238                           ;Bluetooth.c: 729: if(!ok)
 11239  001230  0102               	movlb	2	; () banked
 11240  001232  518A               	movf	UseBluetooth@ok& (0+255),w,b
 11241  001234  0102               	movlb	2	; () banked
 11242  001236  A4D8               	btfss	status,2,c
 11243  001238  D011               	goto	l12234
 11244                           
 11245                           ; BSR set to: 2
 11246                           ;Bluetooth.c: 730: {
 11247                           ;Bluetooth.c: 731: UARTstringCRLN_CONST("Error: RF channel out of range");
 11248  00123A  0E0A               	movlw	low STR_64
 11249  00123C  0100               	movlb	0	; () banked
 11250  00123E  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11251  001240  0EFA               	movlw	high STR_64
 11252  001242  0100               	movlb	0	; () banked
 11253  001244  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11254  001246  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 11255                           
 11256                           ;Bluetooth.c: 732: UARTstring_CONST(CRLN);
 11257  00124A  0E05               	movlw	low _CRLN
 11258  00124C  0100               	movlb	0	; () banked
 11259  00124E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 11260  001250  0EF2               	movlw	high _CRLN
 11261  001252  0100               	movlb	0	; () banked
 11262  001254  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11263  001256  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 11264                           
 11265                           ;Bluetooth.c: 733: return 0;
 11266                           ;	Return value of _UseBluetooth is never used
 11267  00125A  0012               	return	
 11268  00125C                     l12234:
 11269                           
 11270                           ;Bluetooth.c: 734: }
 11271                           ;Bluetooth.c: 736: if(rfconf == 1)
 11272  00125C  0102               	movlb	2	; () banked
 11273  00125E  058C               	decf	UseBluetooth@rfconf& (0+255),w,b
 11274  001260  A4D8               	btfss	status,2,c
 11275  001262  D017               	goto	l12248
 11276                           
 11277                           ; BSR set to: 2
 11278                           ;Bluetooth.c: 737: {
 11279                           ;Bluetooth.c: 738: if(rfchannelSTR[0] == 'd')
 11280  001264  0E64               	movlw	100
 11281  001266  0102               	movlb	2	; () banked
 11282  001268  1970               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 11283  00126A  A4D8               	btfss	status,2,c
 11284  00126C  D002               	goto	l12240
 11285                           
 11286                           ; BSR set to: 2
 11287                           ;Bluetooth.c: 739: {
 11288                           ;Bluetooth.c: 740: tempRFArray = 0;
 11289  00126E  0E00               	movlw	0
 11290  001270  D022               	goto	L8
 11291  001272                     l12240:
 11292                           
 11293                           ; BSR set to: 2
 11294                           ;Bluetooth.c: 742: else if(rfchannelSTR[0] == 'e')
 11295  001272  0E65               	movlw	101
 11296  001274  0102               	movlb	2	; () banked
 11297  001276  1970               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 11298  001278  A4D8               	btfss	status,2,c
 11299  00127A  D002               	goto	l12244
 11300                           
 11301                           ; BSR set to: 2
 11302                           ;Bluetooth.c: 743: {
 11303                           ;Bluetooth.c: 744: tempRFArray = 1;
 11304  00127C  0E01               	movlw	1
 11305  00127E  D01B               	goto	L8
 11306  001280                     l12244:
 11307                           
 11308                           ; BSR set to: 2
 11309                           ;Bluetooth.c: 746: else if(rfchannelSTR[0] == 'f')
 11310  001280  0E66               	movlw	102
 11311  001282  0102               	movlb	2	; () banked
 11312  001284  1970               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 11313  001286  A4D8               	btfss	status,2,c
 11314  001288  0012               	return	
 11315                           
 11316                           ; BSR set to: 2
 11317                           ;Bluetooth.c: 747: {
 11318                           ;Bluetooth.c: 748: tempRFArray = 2;
 11319  00128A  0E02               	movlw	2
 11320  00128C  D014               	goto	L8
 11321                           
 11322                           ; BSR set to: 2
 11323                           ;Bluetooth.c: 750: else
 11324                           ;Bluetooth.c: 751: {
 11325                           ;Bluetooth.c: 753: return 0;
 11326                           ;	Return value of _UseBluetooth is never used
 11327                           
 11328                           ;Bluetooth.c: 749: }
 11329  00128E  0012               	return	
 11330                           
 11331                           ; BSR set to: 2
 11332                           ;Bluetooth.c: 754: }
 11333                           ;Bluetooth.c: 755: }
 11334                           
 11335                           ; BSR set to: 2
 11336                           
 11337                           ; BSR set to: 2
 11338  001290  D0AD               	goto	l12316
 11339  001292                     l12248:
 11340                           
 11341                           ; BSR set to: 2
 11342                           ;Bluetooth.c: 756: else if(rfconf ==2)
 11343  001292  0E02               	movlw	2
 11344  001294  0102               	movlb	2	; () banked
 11345  001296  198C               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 11346  001298  A4D8               	btfss	status,2,c
 11347  00129A  D0A8               	goto	l12316
 11348                           
 11349                           ; BSR set to: 2
 11350                           ;Bluetooth.c: 757: {
 11351                           ;Bluetooth.c: 758: if(rfchannelSTR[0] == 'b')
 11352  00129C  0E62               	movlw	98
 11353  00129E  0102               	movlb	2	; () banked
 11354  0012A0  1970               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 11355  0012A2  A4D8               	btfss	status,2,c
 11356  0012A4  D002               	goto	l12254
 11357                           
 11358                           ; BSR set to: 2
 11359                           ;Bluetooth.c: 759: {
 11360                           ;Bluetooth.c: 760: tempRFArray = 3;
 11361  0012A6  0E03               	movlw	3
 11362  0012A8  D006               	goto	L8
 11363  0012AA                     l12254:
 11364                           
 11365                           ; BSR set to: 2
 11366                           ;Bluetooth.c: 762: else if(rfchannelSTR[0] == 'd')
 11367  0012AA  0E64               	movlw	100
 11368  0012AC  0102               	movlb	2	; () banked
 11369  0012AE  1970               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 11370  0012B0  A4D8               	btfss	status,2,c
 11371  0012B2  D004               	goto	l12258
 11372                           
 11373                           ; BSR set to: 2
 11374                           ;Bluetooth.c: 763: {
 11375                           ;Bluetooth.c: 764: tempRFArray = 4;
 11376  0012B4  0E04               	movlw	4
 11377  0012B6                     L8:
 11378  0012B6  0102               	movlb	2	; () banked
 11379  0012B8  6F8B               	movwf	UseBluetooth@tempRFArray& (0+255),b
 11380                           
 11381                           ;Bluetooth.c: 765: }
 11382  0012BA  D098               	goto	l12316
 11383  0012BC                     l12258:
 11384                           
 11385                           ; BSR set to: 2
 11386                           ;Bluetooth.c: 766: else if(rfchannelSTR[0] == 'h')
 11387  0012BC  0E68               	movlw	104
 11388  0012BE  0102               	movlb	2	; () banked
 11389  0012C0  1970               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 11390  0012C2  A4D8               	btfss	status,2,c
 11391  0012C4  0012               	return	
 11392                           
 11393                           ; BSR set to: 2
 11394                           ;Bluetooth.c: 767: {
 11395                           ;Bluetooth.c: 768: cleanBuffer(ReceivedString, ReceivedStringPos);
 11396  0012C6  0E00               	movlw	low _ReceivedString
 11397  0012C8  0100               	movlb	0	; () banked
 11398  0012CA  6F63               	movwf	cleanBuffer@data& (0+255),b
 11399  0012CC  0E04               	movlw	high _ReceivedString
 11400  0012CE  0100               	movlb	0	; () banked
 11401  0012D0  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 11402  0012D2  C2FF  F065         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 11403  0012D6  0100               	movlb	0	; () banked
 11404  0012D8  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 11405  0012DA  EC47  F04E         	call	_cleanBuffer	;wreg free
 11406                           
 11407                           ;Bluetooth.c: 769: ReceivedStringPos = 0;
 11408  0012DE  0E00               	movlw	0
 11409  0012E0  0102               	movlb	2	; () banked
 11410  0012E2  6FFF               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 11411                           
 11412                           ; BSR set to: 2
 11413                           ;Bluetooth.c: 770: NewReceivedString = 0;
 11414  0012E4  0E00               	movlw	0
 11415  0012E6  0100               	movlb	0	; () banked
 11416  0012E8  6FF9               	movwf	_NewReceivedString& (0+255),b	;volatile
 11417                           
 11418                           ; BSR set to: 0
 11419                           ;Bluetooth.c: 771: UARTstring_CONST("Which device?");
 11420  0012EA  0E90               	movlw	low STR_65
 11421  0012EC  0100               	movlb	0	; () banked
 11422  0012EE  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 11423  0012F0  0EFE               	movlw	high STR_65
 11424  0012F2  0100               	movlb	0	; () banked
 11425  0012F4  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11426  0012F6  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 11427                           
 11428                           ;Bluetooth.c: 772: UARTstring_CONST(CRLN);
 11429  0012FA  0E05               	movlw	low _CRLN
 11430  0012FC  0100               	movlb	0	; () banked
 11431  0012FE  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 11432  001300  0EF2               	movlw	high _CRLN
 11433  001302  0100               	movlb	0	; () banked
 11434  001304  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11435  001306  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 11436                           
 11437                           ;Bluetooth.c: 773: UARTchar('>');
 11438  00130A  0E3E               	movlw	62
 11439  00130C  EC76  F050         	call	_UARTchar
 11440                           
 11441                           ;Bluetooth.c: 774: timeout = 0;
 11442  001310  0E00               	movlw	0
 11443  001312  0102               	movlb	2	; () banked
 11444  001314  6F85               	movwf	UseBluetooth@timeout& (0+255),b
 11445                           
 11446                           ; BSR set to: 2
 11447                           ;Bluetooth.c: 775: ClearUSART();
 11448  001316  EC21  F052         	call	_ClearUSART	;wreg free
 11449                           
 11450                           ;Bluetooth.c: 776: PIR1bits.RCIF = 0;
 11451  00131A  9A9E               	bcf	3998,5,c	;volatile
 11452                           
 11453                           ;Bluetooth.c: 777: PIE1bits.RCIE = 1;
 11454  00131C  8A9D               	bsf	3997,5,c	;volatile
 11455                           
 11456                           ;Bluetooth.c: 778: while(!NewReceivedString)
 11457  00131E  D023               	goto	l12290
 11458  001320                     l12280:
 11459                           
 11460                           ;Bluetooth.c: 779: {
 11461                           ;Bluetooth.c: 780: delayUS(300000);
 11462  001320  0EE0               	movlw	224
 11463  001322  0100               	movlb	0	; () banked
 11464  001324  6F63               	movwf	delayUS@US& (0+255),b
 11465  001326  0E93               	movlw	147
 11466  001328  6F64               	movwf	(delayUS@US+1)& (0+255),b
 11467  00132A  0E04               	movlw	4
 11468  00132C  6F65               	movwf	(delayUS@US+2)& (0+255),b
 11469  00132E  0E00               	movlw	0
 11470  001330  6F66               	movwf	(delayUS@US+3)& (0+255),b
 11471  001332  ECA0  F04E         	call	_delayUS	;wreg free
 11472                           
 11473                           ;Bluetooth.c: 781: timeout++;
 11474  001336  0102               	movlb	2	; () banked
 11475  001338  2B85               	incf	UseBluetooth@timeout& (0+255),f,b
 11476                           
 11477                           ; BSR set to: 2
 11478                           ;Bluetooth.c: 782: if(timeout > 25)
 11479  00133A  0E19               	movlw	25
 11480  00133C  0102               	movlb	2	; () banked
 11481  00133E  6585               	cpfsgt	UseBluetooth@timeout& (0+255),b
 11482  001340  D012               	goto	l12290
 11483                           
 11484                           ; BSR set to: 2
 11485                           ;Bluetooth.c: 783: {
 11486                           ;Bluetooth.c: 784: UARTstring_CONST(CRLN);
 11487  001342  0E05               	movlw	low _CRLN
 11488  001344  0100               	movlb	0	; () banked
 11489  001346  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 11490  001348  0EF2               	movlw	high _CRLN
 11491  00134A  0100               	movlb	0	; () banked
 11492  00134C  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11493  00134E  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 11494                           
 11495                           ;Bluetooth.c: 785: UARTstringCRLN_CONST("Error: No RF config 2, channel H device specifi
      +                          ed");
 11496  001352  0EEF               	movlw	low STR_66
 11497  001354  0100               	movlb	0	; () banked
 11498  001356  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11499  001358  0EF2               	movlw	high STR_66
 11500  00135A  0100               	movlb	0	; () banked
 11501  00135C  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11502  00135E  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 11503                           
 11504                           ;Bluetooth.c: 786: return 0;
 11505                           ;	Return value of _UseBluetooth is never used
 11506  001362  0012               	return	
 11507  001364  D000               	goto	l12290
 11508  001366                     l12290:
 11509  001366  0100               	movlb	0	; () banked
 11510  001368  51F9               	movf	_NewReceivedString& (0+255),w,b	;volatile
 11511  00136A  B4D8               	btfsc	status,2,c
 11512  00136C  D7D9               	goto	l12280
 11513                           
 11514                           ; BSR set to: 0
 11515                           ;Bluetooth.c: 787: }
 11516                           ;Bluetooth.c: 788: }
 11517                           ;Bluetooth.c: 789: PIE1bits.RCIE = 0;
 11518  00136E  9A9D               	bcf	3997,5,c	;volatile
 11519                           
 11520                           ; BSR set to: 0
 11521                           ;Bluetooth.c: 790: ok = 1;
 11522  001370  0E01               	movlw	1
 11523  001372  0102               	movlb	2	; () banked
 11524  001374  6F8A               	movwf	UseBluetooth@ok& (0+255),b
 11525                           
 11526                           ; BSR set to: 2
 11527                           ;Bluetooth.c: 791: if(ReceivedString[0] < '1' || ReceivedString[0] > '3')
 11528  001376  0E30               	movlw	48
 11529  001378  0104               	movlb	4	; () banked
 11530  00137A  6500               	cpfsgt	_ReceivedString& (0+255),b	;volatile
 11531  00137C  D005               	goto	l12298
 11532                           
 11533                           ; BSR set to: 4
 11534  00137E  0E33               	movlw	51
 11535  001380  0104               	movlb	4	; () banked
 11536  001382  6500               	cpfsgt	_ReceivedString& (0+255),b	;volatile
 11537  001384  D00D               	goto	l12302
 11538  001386  D000               	goto	l12298
 11539  001388                     l12298:
 11540                           
 11541                           ; BSR set to: 4
 11542                           ;Bluetooth.c: 792: {
 11543                           ;Bluetooth.c: 793: UARTstringCRLN_CONST("Error: RF config 2, channel H device out of ran
      +                          ge");
 11544  001388  0E21               	movlw	low STR_67
 11545  00138A  0100               	movlb	0	; () banked
 11546  00138C  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11547  00138E  0EF3               	movlw	high STR_67
 11548  001390  0100               	movlb	0	; () banked
 11549  001392  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11550  001394  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 11551                           
 11552                           ;Bluetooth.c: 794: ok = 0;
 11553  001398  0E00               	movlw	0
 11554  00139A  0102               	movlb	2	; () banked
 11555  00139C  6F8A               	movwf	UseBluetooth@ok& (0+255),b
 11556  00139E  D000               	goto	l12302
 11557  0013A0                     l12302:
 11558                           
 11559                           ;Bluetooth.c: 795: }
 11560                           ;Bluetooth.c: 796: device = ReceivedString[0] - '0';
 11561  0013A0  0104               	movlb	4	; () banked
 11562  0013A2  5100               	movf	_ReceivedString& (0+255),w,b
 11563  0013A4  0FD0               	addlw	208
 11564  0013A6  0102               	movlb	2	; () banked
 11565  0013A8  6F84               	movwf	UseBluetooth@device& (0+255),b
 11566                           
 11567                           ; BSR set to: 2
 11568                           ;Bluetooth.c: 797: tempRFArray = device + 4;
 11569  0013AA  0102               	movlb	2	; () banked
 11570  0013AC  5184               	movf	UseBluetooth@device& (0+255),w,b
 11571  0013AE  0F04               	addlw	4
 11572  0013B0  0102               	movlb	2	; () banked
 11573  0013B2  6F8B               	movwf	UseBluetooth@tempRFArray& (0+255),b
 11574                           
 11575                           ; BSR set to: 2
 11576                           ;Bluetooth.c: 798: cleanBuffer(ReceivedString, ReceivedStringPos);
 11577  0013B4  0E00               	movlw	low _ReceivedString
 11578  0013B6  0100               	movlb	0	; () banked
 11579  0013B8  6F63               	movwf	cleanBuffer@data& (0+255),b
 11580  0013BA  0E04               	movlw	high _ReceivedString
 11581  0013BC  0100               	movlb	0	; () banked
 11582  0013BE  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 11583  0013C0  C2FF  F065         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 11584  0013C4  0100               	movlb	0	; () banked
 11585  0013C6  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 11586  0013C8  EC47  F04E         	call	_cleanBuffer	;wreg free
 11587                           
 11588                           ;Bluetooth.c: 799: ReceivedStringPos = 0;
 11589  0013CC  0E00               	movlw	0
 11590  0013CE  0102               	movlb	2	; () banked
 11591  0013D0  6FFF               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 11592                           
 11593                           ; BSR set to: 2
 11594                           ;Bluetooth.c: 800: NewReceivedString = 0;
 11595  0013D2  0E00               	movlw	0
 11596  0013D4  0100               	movlb	0	; () banked
 11597  0013D6  6FF9               	movwf	_NewReceivedString& (0+255),b	;volatile
 11598                           
 11599                           ; BSR set to: 0
 11600                           ;Bluetooth.c: 801: if(!ok)
 11601  0013D8  0102               	movlb	2	; () banked
 11602  0013DA  518A               	movf	UseBluetooth@ok& (0+255),w,b
 11603  0013DC  0102               	movlb	2	; () banked
 11604  0013DE  B4D8               	btfsc	status,2,c
 11605  0013E0  0012               	return	
 11606  0013E2  D004               	goto	l12316
 11607                           
 11608                           ; BSR set to: 2
 11609                           ;Bluetooth.c: 802: {
 11610                           ;Bluetooth.c: 803: return 0;
 11611                           ;	Return value of _UseBluetooth is never used
 11612  0013E4  0012               	return	
 11613                           
 11614                           ; BSR set to: 2
 11615                           ;Bluetooth.c: 804: }
 11616                           ;Bluetooth.c: 805: }
 11617  0013E6  D002               	goto	l12316
 11618                           
 11619                           ; BSR set to: 2
 11620                           ;Bluetooth.c: 806: else
 11621                           ;Bluetooth.c: 807: {
 11622                           ;Bluetooth.c: 809: return 0;
 11623                           ;	Return value of _UseBluetooth is never used
 11624  0013E8  0012               	return	
 11625                           
 11626                           ; BSR set to: 2
 11627                           
 11628                           ; BSR set to: 2
 11629                           
 11630                           ; BSR set to: 2
 11631                           
 11632                           ; BSR set to: 2
 11633  0013EA  D000               	goto	l12316
 11634  0013EC                     l12316:
 11635                           
 11636                           ; BSR set to: 2
 11637                           ;Bluetooth.c: 810: }
 11638                           ;Bluetooth.c: 811: }
 11639                           ;Bluetooth.c: 812: if(set)
 11640  0013EC  0102               	movlb	2	; () banked
 11641  0013EE  517A               	movf	UseBluetooth@set& (0+255),w,b
 11642  0013F0  0102               	movlb	2	; () banked
 11643  0013F2  B4D8               	btfsc	status,2,c
 11644  0013F4  D1B5               	goto	l12404
 11645                           
 11646                           ; BSR set to: 2
 11647                           ;Bluetooth.c: 813: {
 11648                           ;Bluetooth.c: 814: if(!WaitForIRsignal())
 11649  0013F6  ECB6  F04B         	call	_WaitForIRsignal	;wreg free
 11650  0013FA  0900               	iorlw	0
 11651  0013FC  B4D8               	btfsc	status,2,c
 11652  0013FE  0012               	return	
 11653  001400  D001               	goto	l12322
 11654                           
 11655                           ;Bluetooth.c: 815: {
 11656                           ;Bluetooth.c: 816: return 0;
 11657                           ;	Return value of _UseBluetooth is never used
 11658  001402  0012               	return	
 11659  001404                     l12322:
 11660                           
 11661                           ;Bluetooth.c: 817: }
 11662                           ;Bluetooth.c: 818: UARTstring_CONST(CRLN);
 11663  001404  0E05               	movlw	low _CRLN
 11664  001406  0100               	movlb	0	; () banked
 11665  001408  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 11666  00140A  0EF2               	movlw	high _CRLN
 11667  00140C  0100               	movlb	0	; () banked
 11668  00140E  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 11669  001410  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 11670                           
 11671                           ;Bluetooth.c: 819: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
 11672  001414  C055  F067         	movff	_IR_NEC,DecodeNEC@Nec
 11673  001418  C056  F068         	movff	_IR_NEC+1,DecodeNEC@Nec+1
 11674  00141C  C057  F069         	movff	_IR_NEC+2,DecodeNEC@Nec+2
 11675  001420  C058  F06A         	movff	_IR_NEC+3,DecodeNEC@Nec+3
 11676  001424  0E8D               	movlw	low UseBluetooth@NecAddress
 11677  001426  0100               	movlb	0	; () banked
 11678  001428  6F6B               	movwf	DecodeNEC@address& (0+255),b
 11679  00142A  0E02               	movlw	high UseBluetooth@NecAddress
 11680  00142C  0100               	movlb	0	; () banked
 11681  00142E  6F6C               	movwf	(DecodeNEC@address+1)& (0+255),b
 11682  001430  0E8E               	movlw	low UseBluetooth@NecCommand
 11683  001432  0100               	movlb	0	; () banked
 11684  001434  6F6D               	movwf	DecodeNEC@command& (0+255),b
 11685  001436  0E02               	movlw	high UseBluetooth@NecCommand
 11686  001438  0100               	movlb	0	; () banked
 11687  00143A  6F6E               	movwf	(DecodeNEC@command+1)& (0+255),b
 11688  00143C  EC83  F049         	call	_DecodeNEC	;wreg free
 11689                           
 11690                           ;Bluetooth.c: 820: ok = 0;
 11691  001440  0E00               	movlw	0
 11692  001442  0102               	movlb	2	; () banked
 11693  001444  6F8A               	movwf	UseBluetooth@ok& (0+255),b
 11694                           
 11695                           ; BSR set to: 2
 11696                           ;Bluetooth.c: 821: for(i=0; i < 3; i++)
 11697  001446  0E00               	movlw	0
 11698  001448  0102               	movlb	2	; () banked
 11699  00144A  6F93               	movwf	UseBluetooth@i& (0+255),b
 11700  00144C                     l12330:
 11701                           
 11702                           ; BSR set to: 2
 11703  00144C  0E02               	movlw	2
 11704  00144E  0102               	movlb	2	; () banked
 11705  001450  6593               	cpfsgt	UseBluetooth@i& (0+255),b
 11706  001452  D001               	goto	l12334
 11707                           
 11708                           ; BSR set to: 2
 11709  001454  D049               	goto	l12346
 11710  001456                     l12334:
 11711                           
 11712                           ; BSR set to: 2
 11713                           ;Bluetooth.c: 822: {
 11714                           ;Bluetooth.c: 823: if(Global2.RemoteButtonRF[tempRFArray][i][0] == 0 && Global2.RemoteBu
      +                          ttonRF[tempRFArray][i][1] == 0)
 11715  001456  0102               	movlb	2	; () banked
 11716  001458  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11717  00145A  0D06               	mullw	6
 11718  00145C  0E7C               	movlw	low _Global2
 11719  00145E  0102               	movlb	2	; () banked
 11720  001460  6F00               	movwf	??_UseBluetooth& (0+255),b
 11721  001462  0E03               	movlw	high _Global2
 11722  001464  0102               	movlb	2	; () banked
 11723  001466  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 11724  001468  50F3               	movf	prodl,w,c
 11725  00146A  0102               	movlb	2	; () banked
 11726  00146C  2700               	addwf	??_UseBluetooth& (0+255),f,b
 11727  00146E  50F4               	movf	prodh,w,c
 11728  001470  0102               	movlb	2	; () banked
 11729  001472  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11730  001474  0102               	movlb	2	; () banked
 11731  001476  5193               	movf	UseBluetooth@i& (0+255),w,b
 11732  001478  0D02               	mullw	2
 11733  00147A  50F3               	movf	prodl,w,c
 11734  00147C  0102               	movlb	2	; () banked
 11735  00147E  2500               	addwf	??_UseBluetooth& (0+255),w,b
 11736  001480  6ED9               	movwf	fsr2l,c
 11737  001482  50F4               	movf	prodh,w,c
 11738  001484  0102               	movlb	2	; () banked
 11739  001486  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11740  001488  6EDA               	movwf	fsr2h,c
 11741  00148A  50DF               	movf	indf2,w,c
 11742  00148C  A4D8               	btfss	status,2,c
 11743  00148E  D029               	goto	l12342
 11744                           
 11745                           ; BSR set to: 2
 11746  001490  0102               	movlb	2	; () banked
 11747  001492  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11748  001494  0D06               	mullw	6
 11749  001496  0E7C               	movlw	low _Global2
 11750  001498  0102               	movlb	2	; () banked
 11751  00149A  6F00               	movwf	??_UseBluetooth& (0+255),b
 11752  00149C  0E03               	movlw	high _Global2
 11753  00149E  0102               	movlb	2	; () banked
 11754  0014A0  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 11755  0014A2  50F3               	movf	prodl,w,c
 11756  0014A4  0102               	movlb	2	; () banked
 11757  0014A6  2700               	addwf	??_UseBluetooth& (0+255),f,b
 11758  0014A8  50F4               	movf	prodh,w,c
 11759  0014AA  0102               	movlb	2	; () banked
 11760  0014AC  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11761  0014AE  0102               	movlb	2	; () banked
 11762  0014B0  5193               	movf	UseBluetooth@i& (0+255),w,b
 11763  0014B2  0D02               	mullw	2
 11764  0014B4  50F3               	movf	prodl,w,c
 11765  0014B6  0102               	movlb	2	; () banked
 11766  0014B8  2700               	addwf	??_UseBluetooth& (0+255),f,b
 11767  0014BA  50F4               	movf	prodh,w,c
 11768  0014BC  0102               	movlb	2	; () banked
 11769  0014BE  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11770  0014C0  0E01               	movlw	1
 11771  0014C2  0102               	movlb	2	; () banked
 11772  0014C4  2500               	addwf	??_UseBluetooth& (0+255),w,b
 11773  0014C6  6ED9               	movwf	fsr2l,c
 11774  0014C8  0E00               	movlw	0
 11775  0014CA  0102               	movlb	2	; () banked
 11776  0014CC  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11777  0014CE  6EDA               	movwf	fsr2h,c
 11778  0014D0  50DF               	movf	indf2,w,c
 11779  0014D2  A4D8               	btfss	status,2,c
 11780  0014D4  D006               	goto	l12342
 11781                           
 11782                           ; BSR set to: 2
 11783                           ;Bluetooth.c: 824: {
 11784                           ;Bluetooth.c: 825: EmptyPlace = i;
 11785  0014D6  C293  F283         	movff	UseBluetooth@i,UseBluetooth@EmptyPlace
 11786                           
 11787                           ; BSR set to: 2
 11788                           ;Bluetooth.c: 826: ok = 1;
 11789  0014DA  0E01               	movlw	1
 11790  0014DC  0102               	movlb	2	; () banked
 11791  0014DE  6F8A               	movwf	UseBluetooth@ok& (0+255),b
 11792                           
 11793                           ;Bluetooth.c: 827: break;
 11794  0014E0  D003               	goto	l12346
 11795  0014E2                     l12342:
 11796                           
 11797                           ; BSR set to: 2
 11798  0014E2  0102               	movlb	2	; () banked
 11799  0014E4  2B93               	incf	UseBluetooth@i& (0+255),f,b
 11800  0014E6  D7B2               	goto	l12330
 11801  0014E8                     l12346:
 11802                           
 11803                           ; BSR set to: 2
 11804                           ;Bluetooth.c: 828: }
 11805                           ;Bluetooth.c: 829: }
 11806                           ;Bluetooth.c: 830: if(!ok)
 11807  0014E8  0102               	movlb	2	; () banked
 11808  0014EA  518A               	movf	UseBluetooth@ok& (0+255),w,b
 11809  0014EC  0102               	movlb	2	; () banked
 11810  0014EE  A4D8               	btfss	status,2,c
 11811  0014F0  D009               	goto	l12352
 11812                           
 11813                           ; BSR set to: 2
 11814                           ;Bluetooth.c: 831: {
 11815                           ;Bluetooth.c: 832: UARTstringCRLN_CONST("Error: No space available to this RF code");
 11816  0014F2  0E22               	movlw	low STR_68
 11817  0014F4  0100               	movlb	0	; () banked
 11818  0014F6  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11819  0014F8  0EF7               	movlw	high STR_68
 11820  0014FA  0100               	movlb	0	; () banked
 11821  0014FC  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11822  0014FE  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 11823                           
 11824                           ;Bluetooth.c: 833: return 0;
 11825                           ;	Return value of _UseBluetooth is never used
 11826  001502  0012               	return	
 11827  001504                     l12352:
 11828                           
 11829                           ;Bluetooth.c: 834: }
 11830                           ;Bluetooth.c: 835: ok = 1;
 11831  001504  0E01               	movlw	1
 11832  001506  0102               	movlb	2	; () banked
 11833  001508  6F8A               	movwf	UseBluetooth@ok& (0+255),b
 11834                           
 11835                           ;Bluetooth.c: 836: if(EmptyPlace)
 11836  00150A  0102               	movlb	2	; () banked
 11837  00150C  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11838  00150E  0102               	movlb	2	; () banked
 11839  001510  B4D8               	btfsc	status,2,c
 11840  001512  D058               	goto	l12366
 11841                           
 11842                           ; BSR set to: 2
 11843                           ;Bluetooth.c: 837: {
 11844                           ;Bluetooth.c: 839: for(i=0; i < EmptyPlace; i++)
 11845  001514  0E00               	movlw	0
 11846  001516  0102               	movlb	2	; () banked
 11847  001518  6F93               	movwf	UseBluetooth@i& (0+255),b
 11848  00151A  D04C               	goto	l12364
 11849  00151C                     l12356:
 11850                           
 11851                           ; BSR set to: 2
 11852                           ;Bluetooth.c: 840: {
 11853                           ;Bluetooth.c: 841: if(NecAddress == Global2.RemoteButtonRF[tempRFArray][i][0])
 11854  00151C  0102               	movlb	2	; () banked
 11855  00151E  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11856  001520  0D06               	mullw	6
 11857  001522  0E7C               	movlw	low _Global2
 11858  001524  0102               	movlb	2	; () banked
 11859  001526  6F00               	movwf	??_UseBluetooth& (0+255),b
 11860  001528  0E03               	movlw	high _Global2
 11861  00152A  0102               	movlb	2	; () banked
 11862  00152C  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 11863  00152E  50F3               	movf	prodl,w,c
 11864  001530  0102               	movlb	2	; () banked
 11865  001532  2700               	addwf	??_UseBluetooth& (0+255),f,b
 11866  001534  50F4               	movf	prodh,w,c
 11867  001536  0102               	movlb	2	; () banked
 11868  001538  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11869  00153A  0102               	movlb	2	; () banked
 11870  00153C  5193               	movf	UseBluetooth@i& (0+255),w,b
 11871  00153E  0D02               	mullw	2
 11872  001540  50F3               	movf	prodl,w,c
 11873  001542  0102               	movlb	2	; () banked
 11874  001544  2500               	addwf	??_UseBluetooth& (0+255),w,b
 11875  001546  6ED9               	movwf	fsr2l,c
 11876  001548  50F4               	movf	prodh,w,c
 11877  00154A  0102               	movlb	2	; () banked
 11878  00154C  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11879  00154E  6EDA               	movwf	fsr2h,c
 11880  001550  0102               	movlb	2	; () banked
 11881  001552  518D               	movf	UseBluetooth@NecAddress& (0+255),w,b
 11882  001554  18DE               	xorwf	postinc2,w,c
 11883  001556  A4D8               	btfss	status,2,c
 11884  001558  D02A               	goto	l12362
 11885                           
 11886                           ; BSR set to: 2
 11887                           ;Bluetooth.c: 842: {
 11888                           ;Bluetooth.c: 843: if(NecCommand == Global2.RemoteButtonRF[tempRFArray][i][1])
 11889  00155A  0102               	movlb	2	; () banked
 11890  00155C  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11891  00155E  0D06               	mullw	6
 11892  001560  0E7C               	movlw	low _Global2
 11893  001562  0102               	movlb	2	; () banked
 11894  001564  6F00               	movwf	??_UseBluetooth& (0+255),b
 11895  001566  0E03               	movlw	high _Global2
 11896  001568  0102               	movlb	2	; () banked
 11897  00156A  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 11898  00156C  50F3               	movf	prodl,w,c
 11899  00156E  0102               	movlb	2	; () banked
 11900  001570  2700               	addwf	??_UseBluetooth& (0+255),f,b
 11901  001572  50F4               	movf	prodh,w,c
 11902  001574  0102               	movlb	2	; () banked
 11903  001576  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11904  001578  0102               	movlb	2	; () banked
 11905  00157A  5193               	movf	UseBluetooth@i& (0+255),w,b
 11906  00157C  0D02               	mullw	2
 11907  00157E  50F3               	movf	prodl,w,c
 11908  001580  0102               	movlb	2	; () banked
 11909  001582  2700               	addwf	??_UseBluetooth& (0+255),f,b
 11910  001584  50F4               	movf	prodh,w,c
 11911  001586  0102               	movlb	2	; () banked
 11912  001588  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11913  00158A  0E01               	movlw	1
 11914  00158C  0102               	movlb	2	; () banked
 11915  00158E  2500               	addwf	??_UseBluetooth& (0+255),w,b
 11916  001590  6ED9               	movwf	fsr2l,c
 11917  001592  0E00               	movlw	0
 11918  001594  0102               	movlb	2	; () banked
 11919  001596  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11920  001598  6EDA               	movwf	fsr2h,c
 11921  00159A  0102               	movlb	2	; () banked
 11922  00159C  518E               	movf	UseBluetooth@NecCommand& (0+255),w,b
 11923  00159E  18DE               	xorwf	postinc2,w,c
 11924  0015A0  A4D8               	btfss	status,2,c
 11925  0015A2  D005               	goto	l12362
 11926                           
 11927                           ; BSR set to: 2
 11928                           ;Bluetooth.c: 844: {
 11929                           ;Bluetooth.c: 845: ok = 0;
 11930  0015A4  0E00               	movlw	0
 11931  0015A6  0102               	movlb	2	; () banked
 11932  0015A8  6F8A               	movwf	UseBluetooth@ok& (0+255),b
 11933                           
 11934                           ;Bluetooth.c: 846: break;
 11935  0015AA  D00C               	goto	l12366
 11936                           
 11937                           ; BSR set to: 2
 11938  0015AC  D000               	goto	l12362
 11939  0015AE                     l12362:
 11940                           
 11941                           ; BSR set to: 2
 11942  0015AE  0102               	movlb	2	; () banked
 11943  0015B0  2B93               	incf	UseBluetooth@i& (0+255),f,b
 11944  0015B2  D000               	goto	l12364
 11945  0015B4                     l12364:
 11946                           
 11947                           ; BSR set to: 2
 11948  0015B4  0102               	movlb	2	; () banked
 11949  0015B6  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11950  0015B8  0102               	movlb	2	; () banked
 11951  0015BA  5D93               	subwf	UseBluetooth@i& (0+255),w,b
 11952  0015BC  B0D8               	btfsc	status,0,c
 11953  0015BE  D002               	goto	l12366
 11954  0015C0  D7AD               	goto	l12356
 11955                           
 11956                           ; BSR set to: 2
 11957  0015C2  D000               	goto	l12366
 11958  0015C4                     l12366:
 11959                           
 11960                           ; BSR set to: 2
 11961                           ;Bluetooth.c: 847: }
 11962                           ;Bluetooth.c: 848: }
 11963                           ;Bluetooth.c: 849: }
 11964                           ;Bluetooth.c: 850: }
 11965                           ;Bluetooth.c: 851: if(!ok)
 11966  0015C4  0102               	movlb	2	; () banked
 11967  0015C6  518A               	movf	UseBluetooth@ok& (0+255),w,b
 11968  0015C8  0102               	movlb	2	; () banked
 11969  0015CA  A4D8               	btfss	status,2,c
 11970  0015CC  D009               	goto	l12372
 11971                           
 11972                           ; BSR set to: 2
 11973                           ;Bluetooth.c: 852: {
 11974                           ;Bluetooth.c: 853: UARTstringCRLN_CONST("Error: NEC code already saved to this RF code")
      +                          ;
 11975  0015CE  0EEA               	movlw	low STR_69
 11976  0015D0  0100               	movlb	0	; () banked
 11977  0015D2  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 11978  0015D4  0EF5               	movlw	high STR_69
 11979  0015D6  0100               	movlb	0	; () banked
 11980  0015D8  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 11981  0015DA  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 11982                           
 11983                           ;Bluetooth.c: 854: return 0;
 11984                           ;	Return value of _UseBluetooth is never used
 11985  0015DE  0012               	return	
 11986  0015E0                     l12372:
 11987                           
 11988                           ;Bluetooth.c: 855: }
 11989                           ;Bluetooth.c: 858: Global2.RemoteButtonRF[tempRFArray][EmptyPlace][0] = NecAddress;
 11990  0015E0  0102               	movlb	2	; () banked
 11991  0015E2  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11992  0015E4  0D06               	mullw	6
 11993  0015E6  0E7C               	movlw	low _Global2
 11994  0015E8  0102               	movlb	2	; () banked
 11995  0015EA  6F00               	movwf	??_UseBluetooth& (0+255),b
 11996  0015EC  0E03               	movlw	high _Global2
 11997  0015EE  0102               	movlb	2	; () banked
 11998  0015F0  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 11999  0015F2  50F3               	movf	prodl,w,c
 12000  0015F4  0102               	movlb	2	; () banked
 12001  0015F6  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12002  0015F8  50F4               	movf	prodh,w,c
 12003  0015FA  0102               	movlb	2	; () banked
 12004  0015FC  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12005  0015FE  0102               	movlb	2	; () banked
 12006  001600  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 12007  001602  0D02               	mullw	2
 12008  001604  50F3               	movf	prodl,w,c
 12009  001606  0102               	movlb	2	; () banked
 12010  001608  2500               	addwf	??_UseBluetooth& (0+255),w,b
 12011  00160A  6ED9               	movwf	fsr2l,c
 12012  00160C  50F4               	movf	prodh,w,c
 12013  00160E  0102               	movlb	2	; () banked
 12014  001610  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 12015  001612  6EDA               	movwf	fsr2h,c
 12016  001614  C28D  FFDF         	movff	UseBluetooth@NecAddress,indf2
 12017                           
 12018                           ;Bluetooth.c: 859: Global2.RemoteButtonRF[tempRFArray][EmptyPlace][1] = NecCommand;
 12019  001618  0102               	movlb	2	; () banked
 12020  00161A  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 12021  00161C  0D06               	mullw	6
 12022  00161E  0E7C               	movlw	low _Global2
 12023  001620  0102               	movlb	2	; () banked
 12024  001622  6F00               	movwf	??_UseBluetooth& (0+255),b
 12025  001624  0E03               	movlw	high _Global2
 12026  001626  0102               	movlb	2	; () banked
 12027  001628  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 12028  00162A  50F3               	movf	prodl,w,c
 12029  00162C  0102               	movlb	2	; () banked
 12030  00162E  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12031  001630  50F4               	movf	prodh,w,c
 12032  001632  0102               	movlb	2	; () banked
 12033  001634  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12034  001636  0102               	movlb	2	; () banked
 12035  001638  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 12036  00163A  0D02               	mullw	2
 12037  00163C  50F3               	movf	prodl,w,c
 12038  00163E  0102               	movlb	2	; () banked
 12039  001640  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12040  001642  50F4               	movf	prodh,w,c
 12041  001644  0102               	movlb	2	; () banked
 12042  001646  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12043  001648  0E01               	movlw	1
 12044  00164A  0102               	movlb	2	; () banked
 12045  00164C  2500               	addwf	??_UseBluetooth& (0+255),w,b
 12046  00164E  6ED9               	movwf	fsr2l,c
 12047  001650  0E00               	movlw	0
 12048  001652  0102               	movlb	2	; () banked
 12049  001654  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 12050  001656  6EDA               	movwf	fsr2h,c
 12051  001658  C28E  FFDF         	movff	UseBluetooth@NecCommand,indf2
 12052                           
 12053                           ; BSR set to: 2
 12054                           ;Bluetooth.c: 860: SyncGlobalToEEPROM();
 12055  00165C  ECCE  F04A         	call	_SyncGlobalToEEPROM	;wreg free
 12056                           
 12057                           ;Bluetooth.c: 862: if(device)
 12058  001660  0102               	movlb	2	; () banked
 12059  001662  5184               	movf	UseBluetooth@device& (0+255),w,b
 12060  001664  0102               	movlb	2	; () banked
 12061  001666  B4D8               	btfsc	status,2,c
 12062  001668  D023               	goto	l12380
 12063                           
 12064                           ; BSR set to: 2
 12065                           ;Bluetooth.c: 863: {
 12066                           ;Bluetooth.c: 864: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c dev
      +                          ice %d",IR_NEC, rfconf, rfchannelSTR[0], device);
 12067  00166A  0E0C               	movlw	low UseBluetooth@buf
 12068  00166C  0100               	movlb	0	; () banked
 12069  00166E  6FB1               	movwf	sprintf@sp& (0+255),b
 12070  001670  0E02               	movlw	high UseBluetooth@buf
 12071  001672  0100               	movlb	0	; () banked
 12072  001674  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 12073  001676  0E08               	movlw	low STR_70
 12074  001678  0100               	movlb	0	; () banked
 12075  00167A  6FB3               	movwf	sprintf@f& (0+255),b
 12076  00167C  0EF2               	movlw	high STR_70
 12077  00167E  0100               	movlb	0	; () banked
 12078  001680  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 12079  001682  C055  F0B5         	movff	_IR_NEC,?_sprintf+4
 12080  001686  C056  F0B6         	movff	_IR_NEC+1,?_sprintf+5
 12081  00168A  C057  F0B7         	movff	_IR_NEC+2,?_sprintf+6
 12082  00168E  C058  F0B8         	movff	_IR_NEC+3,?_sprintf+7
 12083  001692  C28C  F0B9         	movff	UseBluetooth@rfconf,?_sprintf+8
 12084  001696  0100               	movlb	0	; () banked
 12085  001698  6BBA               	clrf	(?_sprintf+9)& (0+255),b
 12086  00169A  C270  F0BB         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 12087  00169E  0100               	movlb	0	; () banked
 12088  0016A0  6BBC               	clrf	(?_sprintf+11)& (0+255),b
 12089  0016A2  C284  F0BD         	movff	UseBluetooth@device,?_sprintf+12
 12090  0016A6  0100               	movlb	0	; () banked
 12091  0016A8  6BBE               	clrf	(?_sprintf+13)& (0+255),b
 12092  0016AA  EC9C  F012         	call	_sprintf	;wreg free
 12093                           
 12094                           ;Bluetooth.c: 865: }
 12095  0016AE  D01F               	goto	l12382
 12096  0016B0                     l12380:
 12097                           
 12098                           ;Bluetooth.c: 866: else
 12099                           ;Bluetooth.c: 867: {
 12100                           ;Bluetooth.c: 868: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c ",I
      +                          R_NEC, rfconf, rfchannelSTR[0]);
 12101  0016B0  0E0C               	movlw	low UseBluetooth@buf
 12102  0016B2  0100               	movlb	0	; () banked
 12103  0016B4  6FB1               	movwf	sprintf@sp& (0+255),b
 12104  0016B6  0E02               	movlw	high UseBluetooth@buf
 12105  0016B8  0100               	movlb	0	; () banked
 12106  0016BA  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 12107  0016BC  0E83               	movlw	low STR_71
 12108  0016BE  0100               	movlb	0	; () banked
 12109  0016C0  6FB3               	movwf	sprintf@f& (0+255),b
 12110  0016C2  0EF2               	movlw	high STR_71
 12111  0016C4  0100               	movlb	0	; () banked
 12112  0016C6  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 12113  0016C8  C055  F0B5         	movff	_IR_NEC,?_sprintf+4
 12114  0016CC  C056  F0B6         	movff	_IR_NEC+1,?_sprintf+5
 12115  0016D0  C057  F0B7         	movff	_IR_NEC+2,?_sprintf+6
 12116  0016D4  C058  F0B8         	movff	_IR_NEC+3,?_sprintf+7
 12117  0016D8  C28C  F0B9         	movff	UseBluetooth@rfconf,?_sprintf+8
 12118  0016DC  0100               	movlb	0	; () banked
 12119  0016DE  6BBA               	clrf	(?_sprintf+9)& (0+255),b
 12120  0016E0  C270  F0BB         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 12121  0016E4  0100               	movlb	0	; () banked
 12122  0016E6  6BBC               	clrf	(?_sprintf+11)& (0+255),b
 12123  0016E8  EC9C  F012         	call	_sprintf	;wreg free
 12124  0016EC  D000               	goto	l12382
 12125  0016EE                     l12382:
 12126                           
 12127                           ;Bluetooth.c: 869: }
 12128                           ;Bluetooth.c: 870: UARTstringCRLN(buf);
 12129  0016EE  0E0C               	movlw	low UseBluetooth@buf
 12130  0016F0  0100               	movlb	0	; () banked
 12131  0016F2  6F70               	movwf	UARTstringCRLN@data& (0+255),b
 12132  0016F4  0E02               	movlw	high UseBluetooth@buf
 12133  0016F6  0100               	movlb	0	; () banked
 12134  0016F8  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12135  0016FA  EC22  F050         	call	_UARTstringCRLN	;wreg free
 12136                           
 12137                           ;Bluetooth.c: 871: UARTstring_CONST(CRLN);
 12138  0016FE  0E05               	movlw	low _CRLN
 12139  001700  0100               	movlb	0	; () banked
 12140  001702  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 12141  001704  0EF2               	movlw	high _CRLN
 12142  001706  0100               	movlb	0	; () banked
 12143  001708  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12144  00170A  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 12145                           
 12146                           ;Bluetooth.c: 873: for(i =0;i<10;i++)
 12147  00170E  0E00               	movlw	0
 12148  001710  0102               	movlb	2	; () banked
 12149  001712  6F93               	movwf	UseBluetooth@i& (0+255),b
 12150                           
 12151                           ; BSR set to: 2
 12152  001714  0E09               	movlw	9
 12153  001716  0102               	movlb	2	; () banked
 12154  001718  6593               	cpfsgt	UseBluetooth@i& (0+255),b
 12155  00171A  D002               	goto	l12392
 12156  00171C  0012               	return	
 12157                           
 12158                           ; BSR set to: 2
 12159  00171E  0012               	return	
 12160  001720                     l12392:
 12161                           
 12162                           ; BSR set to: 2
 12163                           ;Bluetooth.c: 874: {
 12164                           ;Bluetooth.c: 875: (LATC |= 0x04);
 12165  001720  848B               	bsf	3979,2,c	;volatile
 12166                           
 12167                           ; BSR set to: 2
 12168                           ;Bluetooth.c: 876: delayUS(50000);
 12169  001722  0E50               	movlw	80
 12170  001724  0100               	movlb	0	; () banked
 12171  001726  6F63               	movwf	delayUS@US& (0+255),b
 12172  001728  0EC3               	movlw	195
 12173  00172A  6F64               	movwf	(delayUS@US+1)& (0+255),b
 12174  00172C  0E00               	movlw	0
 12175  00172E  6F65               	movwf	(delayUS@US+2)& (0+255),b
 12176  001730  0E00               	movlw	0
 12177  001732  6F66               	movwf	(delayUS@US+3)& (0+255),b
 12178  001734  ECA0  F04E         	call	_delayUS	;wreg free
 12179                           
 12180                           ;Bluetooth.c: 877: (LATC &= ~0x04);
 12181  001738  948B               	bcf	3979,2,c	;volatile
 12182                           
 12183                           ;Bluetooth.c: 878: delayUS(50000);
 12184  00173A  0E50               	movlw	80
 12185  00173C  0100               	movlb	0	; () banked
 12186  00173E  6F63               	movwf	delayUS@US& (0+255),b
 12187  001740  0EC3               	movlw	195
 12188  001742  6F64               	movwf	(delayUS@US+1)& (0+255),b
 12189  001744  0E00               	movlw	0
 12190  001746  6F65               	movwf	(delayUS@US+2)& (0+255),b
 12191  001748  0E00               	movlw	0
 12192  00174A  6F66               	movwf	(delayUS@US+3)& (0+255),b
 12193  00174C  ECA0  F04E         	call	_delayUS	;wreg free
 12194  001750  0102               	movlb	2	; () banked
 12195  001752  2B93               	incf	UseBluetooth@i& (0+255),f,b
 12196                           
 12197                           ; BSR set to: 2
 12198  001754  0E09               	movlw	9
 12199  001756  0102               	movlb	2	; () banked
 12200  001758  6593               	cpfsgt	UseBluetooth@i& (0+255),b
 12201  00175A  D7E2               	goto	l12392
 12202  00175C  0012               	return	
 12203                           
 12204                           ; BSR set to: 2
 12205                           ;Bluetooth.c: 881: }
 12206                           
 12207                           ; BSR set to: 2
 12208                           ;Bluetooth.c: 879: }
 12209                           ;Bluetooth.c: 880: return 1;
 12210                           ;	Return value of _UseBluetooth is never used
 12211  00175E  0012               	return	
 12212  001760                     l12404:
 12213                           
 12214                           ; BSR set to: 2
 12215                           ;Bluetooth.c: 882: else
 12216                           ;Bluetooth.c: 883: {
 12217                           ;Bluetooth.c: 885: for(i=0; i < 3; i++)
 12218  001760  0E00               	movlw	0
 12219  001762  0102               	movlb	2	; () banked
 12220  001764  6F93               	movwf	UseBluetooth@i& (0+255),b
 12221  001766                     l12406:
 12222                           
 12223                           ; BSR set to: 2
 12224  001766  0E02               	movlw	2
 12225  001768  0102               	movlb	2	; () banked
 12226  00176A  6593               	cpfsgt	UseBluetooth@i& (0+255),b
 12227  00176C  D001               	goto	l12410
 12228                           
 12229                           ; BSR set to: 2
 12230  00176E  D041               	goto	l12416
 12231  001770                     l12410:
 12232                           
 12233                           ; BSR set to: 2
 12234                           ;Bluetooth.c: 886: {
 12235                           ;Bluetooth.c: 888: Global2.RemoteButtonRF[tempRFArray][i][0] = 0;
 12236  001770  0102               	movlb	2	; () banked
 12237  001772  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 12238  001774  0D06               	mullw	6
 12239  001776  0E7C               	movlw	low _Global2
 12240  001778  0102               	movlb	2	; () banked
 12241  00177A  6F00               	movwf	??_UseBluetooth& (0+255),b
 12242  00177C  0E03               	movlw	high _Global2
 12243  00177E  0102               	movlb	2	; () banked
 12244  001780  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 12245  001782  50F3               	movf	prodl,w,c
 12246  001784  0102               	movlb	2	; () banked
 12247  001786  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12248  001788  50F4               	movf	prodh,w,c
 12249  00178A  0102               	movlb	2	; () banked
 12250  00178C  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12251  00178E  0102               	movlb	2	; () banked
 12252  001790  5193               	movf	UseBluetooth@i& (0+255),w,b
 12253  001792  0D02               	mullw	2
 12254  001794  50F3               	movf	prodl,w,c
 12255  001796  0102               	movlb	2	; () banked
 12256  001798  2500               	addwf	??_UseBluetooth& (0+255),w,b
 12257  00179A  6ED9               	movwf	fsr2l,c
 12258  00179C  50F4               	movf	prodh,w,c
 12259  00179E  0102               	movlb	2	; () banked
 12260  0017A0  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 12261  0017A2  6EDA               	movwf	fsr2h,c
 12262  0017A4  0E00               	movlw	0
 12263  0017A6  6EDF               	movwf	indf2,c
 12264                           
 12265                           ;Bluetooth.c: 889: Global2.RemoteButtonRF[tempRFArray][i][1] = 0;
 12266  0017A8  0102               	movlb	2	; () banked
 12267  0017AA  518B               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 12268  0017AC  0D06               	mullw	6
 12269  0017AE  0E7C               	movlw	low _Global2
 12270  0017B0  0102               	movlb	2	; () banked
 12271  0017B2  6F00               	movwf	??_UseBluetooth& (0+255),b
 12272  0017B4  0E03               	movlw	high _Global2
 12273  0017B6  0102               	movlb	2	; () banked
 12274  0017B8  6F01               	movwf	(??_UseBluetooth+1)& (0+255),b
 12275  0017BA  50F3               	movf	prodl,w,c
 12276  0017BC  0102               	movlb	2	; () banked
 12277  0017BE  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12278  0017C0  50F4               	movf	prodh,w,c
 12279  0017C2  0102               	movlb	2	; () banked
 12280  0017C4  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12281  0017C6  0102               	movlb	2	; () banked
 12282  0017C8  5193               	movf	UseBluetooth@i& (0+255),w,b
 12283  0017CA  0D02               	mullw	2
 12284  0017CC  50F3               	movf	prodl,w,c
 12285  0017CE  0102               	movlb	2	; () banked
 12286  0017D0  2700               	addwf	??_UseBluetooth& (0+255),f,b
 12287  0017D2  50F4               	movf	prodh,w,c
 12288  0017D4  0102               	movlb	2	; () banked
 12289  0017D6  2301               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 12290  0017D8  0E01               	movlw	1
 12291  0017DA  0102               	movlb	2	; () banked
 12292  0017DC  2500               	addwf	??_UseBluetooth& (0+255),w,b
 12293  0017DE  6ED9               	movwf	fsr2l,c
 12294  0017E0  0E00               	movlw	0
 12295  0017E2  0102               	movlb	2	; () banked
 12296  0017E4  2101               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 12297  0017E6  6EDA               	movwf	fsr2h,c
 12298  0017E8  0E00               	movlw	0
 12299  0017EA  6EDF               	movwf	indf2,c
 12300                           
 12301                           ; BSR set to: 2
 12302  0017EC  0102               	movlb	2	; () banked
 12303  0017EE  2B93               	incf	UseBluetooth@i& (0+255),f,b
 12304  0017F0  D7BA               	goto	l12406
 12305  0017F2                     l12416:
 12306                           
 12307                           ; BSR set to: 2
 12308                           ;Bluetooth.c: 890: }
 12309                           ;Bluetooth.c: 891: SyncGlobalToEEPROM();
 12310  0017F2  ECCE  F04A         	call	_SyncGlobalToEEPROM	;wreg free
 12311                           
 12312                           ;Bluetooth.c: 892: if(device)
 12313  0017F6  0102               	movlb	2	; () banked
 12314  0017F8  5184               	movf	UseBluetooth@device& (0+255),w,b
 12315  0017FA  0102               	movlb	2	; () banked
 12316  0017FC  B4D8               	btfsc	status,2,c
 12317  0017FE  D01B               	goto	l12422
 12318                           
 12319                           ; BSR set to: 2
 12320                           ;Bluetooth.c: 893: {
 12321                           ;Bluetooth.c: 894: sprintf(buf,"RF config %d channel %c device %d successfully erased",r
      +                          fconf, rfchannelSTR[0], device);
 12322  001800  0E0C               	movlw	low UseBluetooth@buf
 12323  001802  0100               	movlb	0	; () banked
 12324  001804  6FB1               	movwf	sprintf@sp& (0+255),b
 12325  001806  0E02               	movlw	high UseBluetooth@buf
 12326  001808  0100               	movlb	0	; () banked
 12327  00180A  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 12328  00180C  0EB9               	movlw	low STR_72
 12329  00180E  0100               	movlb	0	; () banked
 12330  001810  6FB3               	movwf	sprintf@f& (0+255),b
 12331  001812  0EF2               	movlw	high STR_72
 12332  001814  0100               	movlb	0	; () banked
 12333  001816  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 12334  001818  C28C  F0B5         	movff	UseBluetooth@rfconf,?_sprintf+4
 12335  00181C  0100               	movlb	0	; () banked
 12336  00181E  6BB6               	clrf	(?_sprintf+5)& (0+255),b
 12337  001820  C270  F0B7         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 12338  001824  0100               	movlb	0	; () banked
 12339  001826  6BB8               	clrf	(?_sprintf+7)& (0+255),b
 12340  001828  C284  F0B9         	movff	UseBluetooth@device,?_sprintf+8
 12341  00182C  0100               	movlb	0	; () banked
 12342  00182E  6BBA               	clrf	(?_sprintf+9)& (0+255),b
 12343  001830  EC9C  F012         	call	_sprintf	;wreg free
 12344                           
 12345                           ;Bluetooth.c: 895: }
 12346  001834  D017               	goto	l12424
 12347  001836                     l12422:
 12348                           
 12349                           ;Bluetooth.c: 896: else
 12350                           ;Bluetooth.c: 897: {
 12351                           ;Bluetooth.c: 898: sprintf(buf,"RF config %d channel %c successfully erased",rfconf, rfc
      +                          hannelSTR[0]);
 12352  001836  0E0C               	movlw	low UseBluetooth@buf
 12353  001838  0100               	movlb	0	; () banked
 12354  00183A  6FB1               	movwf	sprintf@sp& (0+255),b
 12355  00183C  0E02               	movlw	high UseBluetooth@buf
 12356  00183E  0100               	movlb	0	; () banked
 12357  001840  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 12358  001842  0ECA               	movlw	low STR_73
 12359  001844  0100               	movlb	0	; () banked
 12360  001846  6FB3               	movwf	sprintf@f& (0+255),b
 12361  001848  0EF6               	movlw	high STR_73
 12362  00184A  0100               	movlb	0	; () banked
 12363  00184C  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 12364  00184E  C28C  F0B5         	movff	UseBluetooth@rfconf,?_sprintf+4
 12365  001852  0100               	movlb	0	; () banked
 12366  001854  6BB6               	clrf	(?_sprintf+5)& (0+255),b
 12367  001856  C270  F0B7         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 12368  00185A  0100               	movlb	0	; () banked
 12369  00185C  6BB8               	clrf	(?_sprintf+7)& (0+255),b
 12370  00185E  EC9C  F012         	call	_sprintf	;wreg free
 12371  001862  D000               	goto	l12424
 12372  001864                     l12424:
 12373                           
 12374                           ;Bluetooth.c: 899: }
 12375                           ;Bluetooth.c: 900: UARTstringCRLN(buf);
 12376  001864  0E0C               	movlw	low UseBluetooth@buf
 12377  001866  0100               	movlb	0	; () banked
 12378  001868  6F70               	movwf	UARTstringCRLN@data& (0+255),b
 12379  00186A  0E02               	movlw	high UseBluetooth@buf
 12380  00186C  0100               	movlb	0	; () banked
 12381  00186E  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12382  001870  EC22  F050         	call	_UARTstringCRLN	;wreg free
 12383                           
 12384                           ;Bluetooth.c: 901: UARTstring_CONST(CRLN);
 12385  001874  0E05               	movlw	low _CRLN
 12386  001876  0100               	movlb	0	; () banked
 12387  001878  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 12388  00187A  0EF2               	movlw	high _CRLN
 12389  00187C  0100               	movlb	0	; () banked
 12390  00187E  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12391  001880  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 12392                           
 12393                           ;Bluetooth.c: 903: for(i =0;i<10;i++)
 12394  001884  0E00               	movlw	0
 12395  001886  0102               	movlb	2	; () banked
 12396  001888  6F93               	movwf	UseBluetooth@i& (0+255),b
 12397                           
 12398                           ; BSR set to: 2
 12399  00188A  0E09               	movlw	9
 12400  00188C  0102               	movlb	2	; () banked
 12401  00188E  6593               	cpfsgt	UseBluetooth@i& (0+255),b
 12402  001890  D002               	goto	l12434
 12403  001892  0012               	return	
 12404                           
 12405                           ; BSR set to: 2
 12406  001894  0012               	return	
 12407  001896                     l12434:
 12408                           
 12409                           ; BSR set to: 2
 12410                           ;Bluetooth.c: 904: {
 12411                           ;Bluetooth.c: 905: (LATC |= 0x04);
 12412  001896  848B               	bsf	3979,2,c	;volatile
 12413                           
 12414                           ; BSR set to: 2
 12415                           ;Bluetooth.c: 906: delayUS(50000);
 12416  001898  0E50               	movlw	80
 12417  00189A  0100               	movlb	0	; () banked
 12418  00189C  6F63               	movwf	delayUS@US& (0+255),b
 12419  00189E  0EC3               	movlw	195
 12420  0018A0  6F64               	movwf	(delayUS@US+1)& (0+255),b
 12421  0018A2  0E00               	movlw	0
 12422  0018A4  6F65               	movwf	(delayUS@US+2)& (0+255),b
 12423  0018A6  0E00               	movlw	0
 12424  0018A8  6F66               	movwf	(delayUS@US+3)& (0+255),b
 12425  0018AA  ECA0  F04E         	call	_delayUS	;wreg free
 12426                           
 12427                           ;Bluetooth.c: 907: (LATC &= ~0x04);
 12428  0018AE  948B               	bcf	3979,2,c	;volatile
 12429                           
 12430                           ;Bluetooth.c: 908: delayUS(50000);
 12431  0018B0  0E50               	movlw	80
 12432  0018B2  0100               	movlb	0	; () banked
 12433  0018B4  6F63               	movwf	delayUS@US& (0+255),b
 12434  0018B6  0EC3               	movlw	195
 12435  0018B8  6F64               	movwf	(delayUS@US+1)& (0+255),b
 12436  0018BA  0E00               	movlw	0
 12437  0018BC  6F65               	movwf	(delayUS@US+2)& (0+255),b
 12438  0018BE  0E00               	movlw	0
 12439  0018C0  6F66               	movwf	(delayUS@US+3)& (0+255),b
 12440  0018C2  ECA0  F04E         	call	_delayUS	;wreg free
 12441  0018C6  0102               	movlb	2	; () banked
 12442  0018C8  2B93               	incf	UseBluetooth@i& (0+255),f,b
 12443                           
 12444                           ; BSR set to: 2
 12445  0018CA  0E09               	movlw	9
 12446  0018CC  0102               	movlb	2	; () banked
 12447  0018CE  6593               	cpfsgt	UseBluetooth@i& (0+255),b
 12448  0018D0  D7E2               	goto	l12434
 12449  0018D2  0012               	return	
 12450                           
 12451                           ; BSR set to: 2
 12452                           ;Bluetooth.c: 911: }
 12453                           ;Bluetooth.c: 912: }
 12454                           
 12455                           ; BSR set to: 2
 12456                           ;Bluetooth.c: 909: }
 12457                           ;Bluetooth.c: 910: return 1;
 12458                           ;	Return value of _UseBluetooth is never used
 12459  0018D4  0012               	return	
 12460  0018D6                     l12444:
 12461                           
 12462                           ; BSR set to: 2
 12463                           ;Bluetooth.c: 913: else
 12464                           ;Bluetooth.c: 914: {
 12465                           ;Bluetooth.c: 915: UARTstringCRLN_CONST("Error: RF channel needs to be one character");
 12466  0018D6  0EF6               	movlw	low STR_74
 12467  0018D8  0100               	movlb	0	; () banked
 12468  0018DA  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12469  0018DC  0EF6               	movlw	high STR_74
 12470  0018DE  0100               	movlb	0	; () banked
 12471  0018E0  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12472  0018E2  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 12473                           
 12474                           ;Bluetooth.c: 916: UARTstring_CONST(CRLN);
 12475  0018E6  0E05               	movlw	low _CRLN
 12476  0018E8  0100               	movlb	0	; () banked
 12477  0018EA  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 12478  0018EC  0EF2               	movlw	high _CRLN
 12479  0018EE  0100               	movlb	0	; () banked
 12480  0018F0  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12481  0018F2  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 12482                           
 12483                           ;Bluetooth.c: 918: }
 12484                           ;Bluetooth.c: 919: }
 12485                           ;Bluetooth.c: 920: }
 12486                           
 12487                           ;Bluetooth.c: 917: return 0;
 12488                           ;	Return value of _UseBluetooth is never used
 12489  0018F6  0012               	return	
 12490  0018F8                     l12448:
 12491                           
 12492                           ;Bluetooth.c: 921: else if(StringMatchCaseInsensitive(String,"Reset"))
 12493  0018F8  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 12494  0018FC  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 12495  001900  0EC7               	movlw	low STR_75
 12496  001902  0100               	movlb	0	; () banked
 12497  001904  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 12498  001906  0EFF               	movlw	high STR_75
 12499  001908  0100               	movlb	0	; () banked
 12500  00190A  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 12501  00190C  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
 12502  001910  0900               	iorlw	0
 12503  001912  B4D8               	btfsc	status,2,c
 12504  001914  D097               	goto	l12510
 12505                           
 12506                           ;Bluetooth.c: 922: {
 12507                           ;Bluetooth.c: 923: cleanBuffer(ReceivedString, ReceivedStringPos);
 12508  001916  0E00               	movlw	low _ReceivedString
 12509  001918  0100               	movlb	0	; () banked
 12510  00191A  6F63               	movwf	cleanBuffer@data& (0+255),b
 12511  00191C  0E04               	movlw	high _ReceivedString
 12512  00191E  0100               	movlb	0	; () banked
 12513  001920  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 12514  001922  C2FF  F065         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 12515  001926  0100               	movlb	0	; () banked
 12516  001928  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 12517  00192A  EC47  F04E         	call	_cleanBuffer	;wreg free
 12518                           
 12519                           ;Bluetooth.c: 924: ReceivedStringPos = 0;
 12520  00192E  0E00               	movlw	0
 12521  001930  0102               	movlb	2	; () banked
 12522  001932  6FFF               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 12523                           
 12524                           ; BSR set to: 2
 12525                           ;Bluetooth.c: 925: NewReceivedString = 0;
 12526  001934  0E00               	movlw	0
 12527  001936  0100               	movlb	0	; () banked
 12528  001938  6FF9               	movwf	_NewReceivedString& (0+255),b	;volatile
 12529                           
 12530                           ; BSR set to: 0
 12531                           ;Bluetooth.c: 926: UARTstring_CONST("Enter Y to reset or N to cancel");
 12532  00193A  0E10               	movlw	low STR_76
 12533  00193C  0100               	movlb	0	; () banked
 12534  00193E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 12535  001940  0EF9               	movlw	high STR_76
 12536  001942  0100               	movlb	0	; () banked
 12537  001944  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12538  001946  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 12539                           
 12540                           ;Bluetooth.c: 927: UARTstring_CONST(CRLN);
 12541  00194A  0E05               	movlw	low _CRLN
 12542  00194C  0100               	movlb	0	; () banked
 12543  00194E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 12544  001950  0EF2               	movlw	high _CRLN
 12545  001952  0100               	movlb	0	; () banked
 12546  001954  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12547  001956  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 12548                           
 12549                           ;Bluetooth.c: 928: UARTchar_CONST('>');
 12550  00195A  0E3E               	movlw	62
 12551  00195C  EC5A  F050         	call	_UARTchar_CONST
 12552                           
 12553                           ;Bluetooth.c: 929: timeout = 0;
 12554  001960  0E00               	movlw	0
 12555  001962  0102               	movlb	2	; () banked
 12556  001964  6F85               	movwf	UseBluetooth@timeout& (0+255),b
 12557                           
 12558                           ; BSR set to: 2
 12559                           ;Bluetooth.c: 930: ClearUSART();
 12560  001966  EC21  F052         	call	_ClearUSART	;wreg free
 12561                           
 12562                           ;Bluetooth.c: 931: PIR1bits.RCIF = 0;
 12563  00196A  9A9E               	bcf	3998,5,c	;volatile
 12564                           
 12565                           ;Bluetooth.c: 932: PIE1bits.RCIE = 1;
 12566  00196C  8A9D               	bsf	3997,5,c	;volatile
 12567                           
 12568                           ;Bluetooth.c: 933: while(!NewReceivedString)
 12569  00196E  D023               	goto	l12480
 12570  001970                     l12470:
 12571                           
 12572                           ;Bluetooth.c: 934: {
 12573                           ;Bluetooth.c: 935: delayUS(300000);
 12574  001970  0EE0               	movlw	224
 12575  001972  0100               	movlb	0	; () banked
 12576  001974  6F63               	movwf	delayUS@US& (0+255),b
 12577  001976  0E93               	movlw	147
 12578  001978  6F64               	movwf	(delayUS@US+1)& (0+255),b
 12579  00197A  0E04               	movlw	4
 12580  00197C  6F65               	movwf	(delayUS@US+2)& (0+255),b
 12581  00197E  0E00               	movlw	0
 12582  001980  6F66               	movwf	(delayUS@US+3)& (0+255),b
 12583  001982  ECA0  F04E         	call	_delayUS	;wreg free
 12584                           
 12585                           ;Bluetooth.c: 936: timeout++;
 12586  001986  0102               	movlb	2	; () banked
 12587  001988  2B85               	incf	UseBluetooth@timeout& (0+255),f,b
 12588                           
 12589                           ; BSR set to: 2
 12590                           ;Bluetooth.c: 937: if(timeout > 25)
 12591  00198A  0E19               	movlw	25
 12592  00198C  0102               	movlb	2	; () banked
 12593  00198E  6585               	cpfsgt	UseBluetooth@timeout& (0+255),b
 12594  001990  D012               	goto	l12480
 12595                           
 12596                           ; BSR set to: 2
 12597                           ;Bluetooth.c: 938: {
 12598                           ;Bluetooth.c: 939: UARTstring_CONST(CRLN);
 12599  001992  0E05               	movlw	low _CRLN
 12600  001994  0100               	movlb	0	; () banked
 12601  001996  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 12602  001998  0EF2               	movlw	high _CRLN
 12603  00199A  0100               	movlb	0	; () banked
 12604  00199C  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12605  00199E  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 12606                           
 12607                           ;Bluetooth.c: 940: UARTstringCRLN_CONST("Device resumes without reset");
 12608  0019A2  0E48               	movlw	low STR_77
 12609  0019A4  0100               	movlb	0	; () banked
 12610  0019A6  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12611  0019A8  0EFA               	movlw	high STR_77
 12612  0019AA  0100               	movlb	0	; () banked
 12613  0019AC  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12614  0019AE  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 12615                           
 12616                           ;Bluetooth.c: 941: return 0;
 12617                           ;	Return value of _UseBluetooth is never used
 12618  0019B2  0012               	return	
 12619  0019B4  D000               	goto	l12480
 12620  0019B6                     l12480:
 12621  0019B6  0100               	movlb	0	; () banked
 12622  0019B8  51F9               	movf	_NewReceivedString& (0+255),w,b	;volatile
 12623  0019BA  B4D8               	btfsc	status,2,c
 12624  0019BC  D7D9               	goto	l12470
 12625                           
 12626                           ; BSR set to: 0
 12627                           ;Bluetooth.c: 942: }
 12628                           ;Bluetooth.c: 943: }
 12629                           ;Bluetooth.c: 944: PIE1bits.RCIE = 0;
 12630  0019BE  9A9D               	bcf	3997,5,c	;volatile
 12631                           
 12632                           ; BSR set to: 0
 12633                           ;Bluetooth.c: 945: if(ReceivedString[0] == 'Y' || ReceivedString[0] == 'y' && ReceivedSt
      +                          ring[1] == 0)
 12634  0019C0  0E59               	movlw	89
 12635  0019C2  0104               	movlb	4	; () banked
 12636  0019C4  1900               	xorwf	_ReceivedString& (0+255),w,b	;volatile
 12637  0019C6  B4D8               	btfsc	status,2,c
 12638  0019C8  D009               	goto	l12488
 12639                           
 12640                           ; BSR set to: 4
 12641  0019CA  0E79               	movlw	121
 12642  0019CC  0104               	movlb	4	; () banked
 12643  0019CE  1900               	xorwf	_ReceivedString& (0+255),w,b	;volatile
 12644  0019D0  A4D8               	btfss	status,2,c
 12645  0019D2  D014               	goto	l12498
 12646                           
 12647                           ; BSR set to: 4
 12648  0019D4  0104               	movlb	4	; () banked
 12649  0019D6  5101               	movf	(_ReceivedString+1)& (0+255),w,b	;volatile
 12650  0019D8  A4D8               	btfss	status,2,c
 12651  0019DA  D010               	goto	l12498
 12652  0019DC                     l12488:
 12653                           
 12654                           ; BSR set to: 4
 12655                           ;Bluetooth.c: 946: {
 12656                           ;Bluetooth.c: 948: UARTstringCRLN_CONST("System will reset");
 12657  0019DC  0EEF               	movlw	low STR_78
 12658  0019DE  0100               	movlb	0	; () banked
 12659  0019E0  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12660  0019E2  0EFD               	movlw	high STR_78
 12661  0019E4  0100               	movlb	0	; () banked
 12662  0019E6  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12663  0019E8  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 12664                           
 12665                           ;Bluetooth.c: 949: Global1.EEPROMinitFlag = 0;
 12666  0019EC  0E00               	movlw	0
 12667  0019EE  0103               	movlb	3	; () banked
 12668  0019F0  6FF7               	movwf	(_Global1+29)& (0+255),b
 12669                           
 12670                           ; BSR set to: 3
 12671                           ;Bluetooth.c: 950: SyncGlobalToEEPROM();
 12672  0019F2  ECCE  F04A         	call	_SyncGlobalToEEPROM	;wreg free
 12673  0019F6  00FF               	reset		;# 
 12674                           
 12675                           ;Bluetooth.c: 952: return 1;
 12676                           ;	Return value of _UseBluetooth is never used
 12677  0019F8  0012               	return	
 12678                           
 12679                           ;Bluetooth.c: 953: }
 12680  0019FA  D011               	goto	l12500
 12681  0019FC                     l12498:
 12682                           
 12683                           ;Bluetooth.c: 954: else
 12684                           ;Bluetooth.c: 955: {
 12685                           ;Bluetooth.c: 956: UARTstring_CONST(CRLN);
 12686  0019FC  0E05               	movlw	low _CRLN
 12687  0019FE  0100               	movlb	0	; () banked
 12688  001A00  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 12689  001A02  0EF2               	movlw	high _CRLN
 12690  001A04  0100               	movlb	0	; () banked
 12691  001A06  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12692  001A08  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 12693                           
 12694                           ;Bluetooth.c: 957: UARTstringCRLN_CONST("Device resumes without reset");
 12695  001A0C  0E48               	movlw	low STR_77
 12696  001A0E  0100               	movlb	0	; () banked
 12697  001A10  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12698  001A12  0EFA               	movlw	high STR_77
 12699  001A14  0100               	movlb	0	; () banked
 12700  001A16  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12701  001A18  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 12702  001A1C  D000               	goto	l12500
 12703  001A1E                     l12500:
 12704                           
 12705                           ;Bluetooth.c: 958: }
 12706                           ;Bluetooth.c: 959: cleanBuffer(ReceivedString, ReceivedStringPos);
 12707  001A1E  0E00               	movlw	low _ReceivedString
 12708  001A20  0100               	movlb	0	; () banked
 12709  001A22  6F63               	movwf	cleanBuffer@data& (0+255),b
 12710  001A24  0E04               	movlw	high _ReceivedString
 12711  001A26  0100               	movlb	0	; () banked
 12712  001A28  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 12713  001A2A  C2FF  F065         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 12714  001A2E  0100               	movlb	0	; () banked
 12715  001A30  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 12716  001A32  EC47  F04E         	call	_cleanBuffer	;wreg free
 12717                           
 12718                           ;Bluetooth.c: 960: ReceivedStringPos = 0;
 12719  001A36  0E00               	movlw	0
 12720  001A38  0102               	movlb	2	; () banked
 12721  001A3A  6FFF               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 12722                           
 12723                           ; BSR set to: 2
 12724                           ;Bluetooth.c: 961: NewReceivedString = 0;
 12725  001A3C  0E00               	movlw	0
 12726  001A3E  0100               	movlb	0	; () banked
 12727  001A40  6FF9               	movwf	_NewReceivedString& (0+255),b	;volatile
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;Bluetooth.c: 963: }
 12731                           
 12732                           ; BSR set to: 0
 12733                           ;Bluetooth.c: 962: return 0;
 12734                           ;	Return value of _UseBluetooth is never used
 12735  001A42  0012               	return	
 12736  001A44                     l12510:
 12737                           
 12738                           ;Bluetooth.c: 964: else if(StringMatchCaseInsensitive(String,"Change SN"))
 12739  001A44  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 12740  001A48  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 12741  001A4C  0E60               	movlw	low STR_80
 12742  001A4E  0100               	movlb	0	; () banked
 12743  001A50  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 12744  001A52  0EFF               	movlw	high STR_80
 12745  001A54  0100               	movlb	0	; () banked
 12746  001A56  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 12747  001A58  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
 12748  001A5C  0900               	iorlw	0
 12749  001A5E  B4D8               	btfsc	status,2,c
 12750  001A60  D18B               	goto	l12628
 12751                           
 12752                           ;Bluetooth.c: 965: {
 12753                           ;Bluetooth.c: 966: cleanBuffer(ReceivedString, ReceivedStringPos);
 12754  001A62  0E00               	movlw	low _ReceivedString
 12755  001A64  0100               	movlb	0	; () banked
 12756  001A66  6F63               	movwf	cleanBuffer@data& (0+255),b
 12757  001A68  0E04               	movlw	high _ReceivedString
 12758  001A6A  0100               	movlb	0	; () banked
 12759  001A6C  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 12760  001A6E  C2FF  F065         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 12761  001A72  0100               	movlb	0	; () banked
 12762  001A74  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 12763  001A76  EC47  F04E         	call	_cleanBuffer	;wreg free
 12764                           
 12765                           ;Bluetooth.c: 967: ReceivedStringPos = 0;
 12766  001A7A  0E00               	movlw	0
 12767  001A7C  0102               	movlb	2	; () banked
 12768  001A7E  6FFF               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 12769                           
 12770                           ; BSR set to: 2
 12771                           ;Bluetooth.c: 968: NewReceivedString = 0;
 12772  001A80  0E00               	movlw	0
 12773  001A82  0100               	movlb	0	; () banked
 12774  001A84  6FF9               	movwf	_NewReceivedString& (0+255),b	;volatile
 12775                           
 12776                           ; BSR set to: 0
 12777                           ;Bluetooth.c: 969: UARTstring_CONST("Enter special 'Code' to change serial number or N t
      +                          o cancel");
 12778  001A86  0E47               	movlw	low STR_81
 12779  001A88  0100               	movlb	0	; () banked
 12780  001A8A  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 12781  001A8C  0EF2               	movlw	high STR_81
 12782  001A8E  0100               	movlb	0	; () banked
 12783  001A90  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12784  001A92  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 12785                           
 12786                           ;Bluetooth.c: 970: UARTstring_CONST(CRLN);
 12787  001A96  0E05               	movlw	low _CRLN
 12788  001A98  0100               	movlb	0	; () banked
 12789  001A9A  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 12790  001A9C  0EF2               	movlw	high _CRLN
 12791  001A9E  0100               	movlb	0	; () banked
 12792  001AA0  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12793  001AA2  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 12794                           
 12795                           ;Bluetooth.c: 971: UARTchar('>');
 12796  001AA6  0E3E               	movlw	62
 12797  001AA8  EC76  F050         	call	_UARTchar
 12798                           
 12799                           ;Bluetooth.c: 972: timeout = 0;
 12800  001AAC  0E00               	movlw	0
 12801  001AAE  0102               	movlb	2	; () banked
 12802  001AB0  6F85               	movwf	UseBluetooth@timeout& (0+255),b
 12803                           
 12804                           ; BSR set to: 2
 12805                           ;Bluetooth.c: 973: ClearUSART();
 12806  001AB2  EC21  F052         	call	_ClearUSART	;wreg free
 12807                           
 12808                           ;Bluetooth.c: 974: PIR1bits.RCIF = 0;
 12809  001AB6  9A9E               	bcf	3998,5,c	;volatile
 12810                           
 12811                           ;Bluetooth.c: 975: PIE1bits.RCIE = 1;
 12812  001AB8  8A9D               	bsf	3997,5,c	;volatile
 12813                           
 12814                           ;Bluetooth.c: 976: while(!NewReceivedString)
 12815  001ABA  D023               	goto	l12542
 12816  001ABC                     l12532:
 12817                           
 12818                           ;Bluetooth.c: 977: {
 12819                           ;Bluetooth.c: 978: delayUS(300000);
 12820  001ABC  0EE0               	movlw	224
 12821  001ABE  0100               	movlb	0	; () banked
 12822  001AC0  6F63               	movwf	delayUS@US& (0+255),b
 12823  001AC2  0E93               	movlw	147
 12824  001AC4  6F64               	movwf	(delayUS@US+1)& (0+255),b
 12825  001AC6  0E04               	movlw	4
 12826  001AC8  6F65               	movwf	(delayUS@US+2)& (0+255),b
 12827  001ACA  0E00               	movlw	0
 12828  001ACC  6F66               	movwf	(delayUS@US+3)& (0+255),b
 12829  001ACE  ECA0  F04E         	call	_delayUS	;wreg free
 12830                           
 12831                           ;Bluetooth.c: 979: timeout++;
 12832  001AD2  0102               	movlb	2	; () banked
 12833  001AD4  2B85               	incf	UseBluetooth@timeout& (0+255),f,b
 12834                           
 12835                           ; BSR set to: 2
 12836                           ;Bluetooth.c: 980: if(timeout > 25)
 12837  001AD6  0E19               	movlw	25
 12838  001AD8  0102               	movlb	2	; () banked
 12839  001ADA  6585               	cpfsgt	UseBluetooth@timeout& (0+255),b
 12840  001ADC  D012               	goto	l12542
 12841                           
 12842                           ; BSR set to: 2
 12843                           ;Bluetooth.c: 981: {
 12844                           ;Bluetooth.c: 982: UARTstring_CONST(CRLN);
 12845  001ADE  0E05               	movlw	low _CRLN
 12846  001AE0  0100               	movlb	0	; () banked
 12847  001AE2  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 12848  001AE4  0EF2               	movlw	high _CRLN
 12849  001AE6  0100               	movlb	0	; () banked
 12850  001AE8  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12851  001AEA  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 12852                           
 12853                           ;Bluetooth.c: 983: UARTstringCRLN_CONST("Device resumes without changing serial number")
      +                          ;
 12854  001AEE  0E18               	movlw	low STR_82
 12855  001AF0  0100               	movlb	0	; () banked
 12856  001AF2  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 12857  001AF4  0EF6               	movlw	high STR_82
 12858  001AF6  0100               	movlb	0	; () banked
 12859  001AF8  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 12860  001AFA  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 12861                           
 12862                           ;Bluetooth.c: 984: return 0;
 12863                           ;	Return value of _UseBluetooth is never used
 12864  001AFE  0012               	return	
 12865  001B00  D000               	goto	l12542
 12866  001B02                     l12542:
 12867  001B02  0100               	movlb	0	; () banked
 12868  001B04  51F9               	movf	_NewReceivedString& (0+255),w,b	;volatile
 12869  001B06  B4D8               	btfsc	status,2,c
 12870  001B08  D7D9               	goto	l12532
 12871                           
 12872                           ; BSR set to: 0
 12873                           ;Bluetooth.c: 985: }
 12874                           ;Bluetooth.c: 986: }
 12875                           ;Bluetooth.c: 987: PIE1bits.RCIE = 0;
 12876  001B0A  9A9D               	bcf	3997,5,c	;volatile
 12877                           
 12878                           ; BSR set to: 0
 12879                           ;Bluetooth.c: 988: if(StringMatch(ReceivedString,"Code"))
 12880  001B0C  0E00               	movlw	low _ReceivedString
 12881  001B0E  0100               	movlb	0	; () banked
 12882  001B10  6F63               	movwf	StringMatch@This& (0+255),b
 12883  001B12  0E04               	movlw	high _ReceivedString
 12884  001B14  0100               	movlb	0	; () banked
 12885  001B16  6F64               	movwf	(StringMatch@This+1)& (0+255),b
 12886  001B18  0ED7               	movlw	low STR_83
 12887  001B1A  0100               	movlb	0	; () banked
 12888  001B1C  6F65               	movwf	StringMatch@That& (0+255),b
 12889  001B1E  0EFF               	movlw	high STR_83
 12890  001B20  0100               	movlb	0	; () banked
 12891  001B22  6F66               	movwf	(StringMatch@That+1)& (0+255),b
 12892  001B24  EC41  F04D         	call	_StringMatch	;wreg free
 12893  001B28  0900               	iorlw	0
 12894  001B2A  B4D8               	btfsc	status,2,c
 12895  001B2C  D114               	goto	l12622
 12896                           
 12897                           ;Bluetooth.c: 989: {
 12898                           ;Bluetooth.c: 990: cleanBuffer(ReceivedString, ReceivedStringPos);
 12899  001B2E  0E00               	movlw	low _ReceivedString
 12900  001B30  0100               	movlb	0	; () banked
 12901  001B32  6F63               	movwf	cleanBuffer@data& (0+255),b
 12902  001B34  0E04               	movlw	high _ReceivedString
 12903  001B36  0100               	movlb	0	; () banked
 12904  001B38  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 12905  001B3A  C2FF  F065         	movff	_ReceivedStringPos,cleanBuffer@count	;volatile
 12906  001B3E  0100               	movlb	0	; () banked
 12907  001B40  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 12908  001B42  EC47  F04E         	call	_cleanBuffer	;wreg free
 12909                           
 12910                           ;Bluetooth.c: 991: ReceivedStringPos = 0;
 12911  001B46  0E00               	movlw	0
 12912  001B48  0102               	movlb	2	; () banked
 12913  001B4A  6FFF               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 12914                           
 12915                           ; BSR set to: 2
 12916                           ;Bluetooth.c: 992: NewReceivedString = 0;
 12917  001B4C  0E00               	movlw	0
 12918  001B4E  0100               	movlb	0	; () banked
 12919  001B50  6FF9               	movwf	_NewReceivedString& (0+255),b	;volatile
 12920                           
 12921                           ; BSR set to: 0
 12922                           ;Bluetooth.c: 993: UARTstring_CONST("Enter new Serial Number");
 12923  001B52  0EAA               	movlw	low STR_84
 12924  001B54  0100               	movlb	0	; () banked
 12925  001B56  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 12926  001B58  0EFB               	movlw	high STR_84
 12927  001B5A  0100               	movlb	0	; () banked
 12928  001B5C  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12929  001B5E  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 12930                           
 12931                           ;Bluetooth.c: 994: UARTstring_CONST(CRLN);
 12932  001B62  0E05               	movlw	low _CRLN
 12933  001B64  0100               	movlb	0	; () banked
 12934  001B66  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 12935  001B68  0EF2               	movlw	high _CRLN
 12936  001B6A  0100               	movlb	0	; () banked
 12937  001B6C  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12938  001B6E  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 12939                           
 12940                           ;Bluetooth.c: 995: UARTchar_CONST('>');
 12941  001B72  0E3E               	movlw	62
 12942  001B74  EC5A  F050         	call	_UARTchar_CONST
 12943                           
 12944                           ;Bluetooth.c: 996: timeout = 0;
 12945  001B78  0E00               	movlw	0
 12946  001B7A  0102               	movlb	2	; () banked
 12947  001B7C  6F85               	movwf	UseBluetooth@timeout& (0+255),b
 12948                           
 12949                           ; BSR set to: 2
 12950                           ;Bluetooth.c: 997: ClearUSART();
 12951  001B7E  EC21  F052         	call	_ClearUSART	;wreg free
 12952                           
 12953                           ;Bluetooth.c: 998: PIR1bits.RCIF = 0;
 12954  001B82  9A9E               	bcf	3998,5,c	;volatile
 12955                           
 12956                           ;Bluetooth.c: 999: PIE1bits.RCIE = 1;
 12957  001B84  8A9D               	bsf	3997,5,c	;volatile
 12958                           
 12959                           ;Bluetooth.c: 1000: while(!NewReceivedString)
 12960  001B86  D023               	goto	l12576
 12961  001B88                     l12566:
 12962                           
 12963                           ;Bluetooth.c: 1001: {
 12964                           ;Bluetooth.c: 1002: delayUS(300000);
 12965  001B88  0EE0               	movlw	224
 12966  001B8A  0100               	movlb	0	; () banked
 12967  001B8C  6F63               	movwf	delayUS@US& (0+255),b
 12968  001B8E  0E93               	movlw	147
 12969  001B90  6F64               	movwf	(delayUS@US+1)& (0+255),b
 12970  001B92  0E04               	movlw	4
 12971  001B94  6F65               	movwf	(delayUS@US+2)& (0+255),b
 12972  001B96  0E00               	movlw	0
 12973  001B98  6F66               	movwf	(delayUS@US+3)& (0+255),b
 12974  001B9A  ECA0  F04E         	call	_delayUS	;wreg free
 12975                           
 12976                           ;Bluetooth.c: 1003: timeout++;
 12977  001B9E  0102               	movlb	2	; () banked
 12978  001BA0  2B85               	incf	UseBluetooth@timeout& (0+255),f,b
 12979                           
 12980                           ; BSR set to: 2
 12981                           ;Bluetooth.c: 1004: if(timeout > 25)
 12982  001BA2  0E19               	movlw	25
 12983  001BA4  0102               	movlb	2	; () banked
 12984  001BA6  6585               	cpfsgt	UseBluetooth@timeout& (0+255),b
 12985  001BA8  D012               	goto	l12576
 12986                           
 12987                           ; BSR set to: 2
 12988                           ;Bluetooth.c: 1005: {
 12989                           ;Bluetooth.c: 1006: UARTstring_CONST(CRLN);
 12990  001BAA  0E05               	movlw	low _CRLN
 12991  001BAC  0100               	movlb	0	; () banked
 12992  001BAE  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 12993  001BB0  0EF2               	movlw	high _CRLN
 12994  001BB2  0100               	movlb	0	; () banked
 12995  001BB4  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 12996  001BB6  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 12997                           
 12998                           ;Bluetooth.c: 1007: UARTstringCRLN_CONST("Device resumes without changing serial number"
      +                          );
 12999  001BBA  0E18               	movlw	low STR_82
 13000  001BBC  0100               	movlb	0	; () banked
 13001  001BBE  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13002  001BC0  0EF6               	movlw	high STR_82
 13003  001BC2  0100               	movlb	0	; () banked
 13004  001BC4  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13005  001BC6  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 13006                           
 13007                           ;Bluetooth.c: 1008: return 0;
 13008                           ;	Return value of _UseBluetooth is never used
 13009  001BCA  0012               	return	
 13010  001BCC  D000               	goto	l12576
 13011  001BCE                     l12576:
 13012  001BCE  0100               	movlb	0	; () banked
 13013  001BD0  51F9               	movf	_NewReceivedString& (0+255),w,b	;volatile
 13014  001BD2  B4D8               	btfsc	status,2,c
 13015  001BD4  D7D9               	goto	l12566
 13016                           
 13017                           ; BSR set to: 0
 13018                           ;Bluetooth.c: 1009: }
 13019                           ;Bluetooth.c: 1010: }
 13020                           ;Bluetooth.c: 1011: if(StringAddEqual(ReceivedString))
 13021                           
 13022                           ; BSR set to: 0
 13023  001BD6  0E00               	movlw	low _ReceivedString
 13024  001BD8  0100               	movlb	0	; () banked
 13025  001BDA  6F72               	movwf	StringAddEqual@Input& (0+255),b
 13026  001BDC  0E04               	movlw	high _ReceivedString
 13027  001BDE  0100               	movlb	0	; () banked
 13028  001BE0  6F73               	movwf	(StringAddEqual@Input+1)& (0+255),b
 13029  001BE2  ECED  F036         	call	_StringAddEqual	;wreg free
 13030  001BE6  0900               	iorlw	0
 13031  001BE8  B4D8               	btfsc	status,2,c
 13032  001BEA  D0A4               	goto	l12616
 13033                           
 13034                           ;Bluetooth.c: 1012: {
 13035                           ;Bluetooth.c: 1013: ReceivedStringPos++;
 13036  001BEC  0102               	movlb	2	; () banked
 13037  001BEE  2BFF               	incf	_ReceivedStringPos& (0+255),f,b	;volatile
 13038                           
 13039                           ; BSR set to: 2
 13040                           ;Bluetooth.c: 1014: if(!GetNumber(ReceivedString, 1, &SerialNumberTEMP))
 13041  001BF0  0E00               	movlw	low _ReceivedString
 13042  001BF2  0100               	movlb	0	; () banked
 13043  001BF4  6F6F               	movwf	GetNumber@This& (0+255),b
 13044  001BF6  0E04               	movlw	high _ReceivedString
 13045  001BF8  0100               	movlb	0	; () banked
 13046  001BFA  6F70               	movwf	(GetNumber@This+1)& (0+255),b
 13047  001BFC  0E01               	movlw	1
 13048  001BFE  0100               	movlb	0	; () banked
 13049  001C00  6F71               	movwf	GetNumber@CommaNumber& (0+255),b
 13050  001C02  0E7F               	movlw	low UseBluetooth@SerialNumberTEMP
 13051  001C04  0100               	movlb	0	; () banked
 13052  001C06  6F72               	movwf	GetNumber@result& (0+255),b
 13053  001C08  0E02               	movlw	high UseBluetooth@SerialNumberTEMP
 13054  001C0A  0100               	movlb	0	; () banked
 13055  001C0C  6F73               	movwf	(GetNumber@result+1)& (0+255),b
 13056  001C0E  ECE6  F02B         	call	_GetNumber	;wreg free
 13057  001C12  0900               	iorlw	0
 13058  001C14  A4D8               	btfss	status,2,c
 13059  001C16  D08E               	goto	l12616
 13060                           
 13061                           ;Bluetooth.c: 1015: {
 13062                           ;Bluetooth.c: 1016: if(SerialNumberTEMP > 0)
 13063  001C18  0102               	movlb	2	; () banked
 13064  001C1A  BF82               	btfsc	(UseBluetooth@SerialNumberTEMP+3)& (0+255),7,b
 13065  001C1C  D08B               	goto	l12616
 13066  001C1E  0102               	movlb	2	; () banked
 13067  001C20  5182               	movf	(UseBluetooth@SerialNumberTEMP+3)& (0+255),w,b
 13068  001C22  0102               	movlb	2	; () banked
 13069  001C24  1181               	iorwf	(UseBluetooth@SerialNumberTEMP+2)& (0+255),w,b
 13070  001C26  0102               	movlb	2	; () banked
 13071  001C28  1180               	iorwf	(UseBluetooth@SerialNumberTEMP+1)& (0+255),w,b
 13072  001C2A  E104               	bnz	u14430
 13073  001C2C  0102               	movlb	2	; () banked
 13074  001C2E  057F               	decf	UseBluetooth@SerialNumberTEMP& (0+255),w,b
 13075  001C30  A0D8               	btfss	status,0,c
 13076  001C32  D080               	goto	l12616
 13077  001C34                     u14430:
 13078                           
 13079                           ; BSR set to: 2
 13080                           ;Bluetooth.c: 1017: {
 13081                           ;Bluetooth.c: 1018: Global2.SerialNumber = (unsigned long) SerialNumberTEMP;
 13082  001C34  C27F  F3B8         	movff	UseBluetooth@SerialNumberTEMP,_Global2+60
 13083  001C38  C280  F3B9         	movff	UseBluetooth@SerialNumberTEMP+1,_Global2+61
 13084  001C3C  C281  F3BA         	movff	UseBluetooth@SerialNumberTEMP+2,_Global2+62
 13085  001C40  C282  F3BB         	movff	UseBluetooth@SerialNumberTEMP+3,_Global2+63
 13086                           
 13087                           ; BSR set to: 2
 13088                           ;Bluetooth.c: 1019: if(!SetEEPROM2(Global2,0x00000002))
 13089  001C44  EE23  F07C         	lfsr	2,_Global2
 13090  001C48  EE00  F099         	lfsr	0,SetEEPROM2@Temp
 13091  001C4C  0E3F               	movlw	63
 13092  001C4E                     u14441:
 13093  001C4E  CFDB FFEB          	movff	plusw2,plusw0
 13094  001C52  06E8               	decf	wreg,f,c
 13095  001C54  E2FC               	bc	u14441
 13096  001C56  0E02               	movlw	2
 13097  001C58  0100               	movlb	0	; () banked
 13098  001C5A  6FD9               	movwf	SetEEPROM2@burn& (0+255),b
 13099  001C5C  0E00               	movlw	0
 13100  001C5E  6FDA               	movwf	(SetEEPROM2@burn+1)& (0+255),b
 13101  001C60  0E00               	movlw	0
 13102  001C62  6FDB               	movwf	(SetEEPROM2@burn+2)& (0+255),b
 13103  001C64  0E00               	movlw	0
 13104  001C66  6FDC               	movwf	(SetEEPROM2@burn+3)& (0+255),b
 13105  001C68  EC1C  F044         	call	_SetEEPROM2	;wreg free
 13106  001C6C  0100               	movlb	0	; () banked
 13107  001C6E  5199               	movf	?_SetEEPROM2& (0+255),w,b
 13108  001C70  0100               	movlb	0	; () banked
 13109  001C72  119A               	iorwf	(?_SetEEPROM2+1)& (0+255),w,b
 13110  001C74  0100               	movlb	0	; () banked
 13111  001C76  119B               	iorwf	(?_SetEEPROM2+2)& (0+255),w,b
 13112  001C78  0100               	movlb	0	; () banked
 13113  001C7A  119C               	iorwf	(?_SetEEPROM2+3)& (0+255),w,b
 13114  001C7C  A4D8               	btfss	status,2,c
 13115  001C7E  D048               	goto	l12612
 13116                           
 13117                           ; BSR set to: 0
 13118                           ;Bluetooth.c: 1020: {
 13119                           ;Bluetooth.c: 1021: SyncEEPROMToGlobal();
 13120  001C80  ECED  F037         	call	_SyncEEPROMToGlobal	;wreg free
 13121                           
 13122                           ;Bluetooth.c: 1022: UARTstringCRLN_CONST("Serial Number successfully burned to EEPROM");
 13123  001C84  0E9E               	movlw	low STR_86
 13124  001C86  0100               	movlb	0	; () banked
 13125  001C88  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13126  001C8A  0EF6               	movlw	high STR_86
 13127  001C8C  0100               	movlb	0	; () banked
 13128  001C8E  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13129  001C90  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 13130                           
 13131                           ;Bluetooth.c: 1023: sprintf(buf,"Serial Number is now: %lu ",Global2.SerialNumber);
 13132  001C94  0E0C               	movlw	low UseBluetooth@buf
 13133  001C96  0100               	movlb	0	; () banked
 13134  001C98  6FB1               	movwf	sprintf@sp& (0+255),b
 13135  001C9A  0E02               	movlw	high UseBluetooth@buf
 13136  001C9C  0100               	movlb	0	; () banked
 13137  001C9E  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 13138  001CA0  0E10               	movlw	low STR_87
 13139  001CA2  0100               	movlb	0	; () banked
 13140  001CA4  6FB3               	movwf	sprintf@f& (0+255),b
 13141  001CA6  0EFB               	movlw	high STR_87
 13142  001CA8  0100               	movlb	0	; () banked
 13143  001CAA  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 13144  001CAC  C3B8  F0B5         	movff	_Global2+60,?_sprintf+4
 13145  001CB0  C3B9  F0B6         	movff	_Global2+61,?_sprintf+5
 13146  001CB4  C3BA  F0B7         	movff	_Global2+62,?_sprintf+6
 13147  001CB8  C3BB  F0B8         	movff	_Global2+63,?_sprintf+7
 13148  001CBC  EC9C  F012         	call	_sprintf	;wreg free
 13149                           
 13150                           ;Bluetooth.c: 1024: UARTstringCRLN(buf);
 13151  001CC0  0E0C               	movlw	low UseBluetooth@buf
 13152  001CC2  0100               	movlb	0	; () banked
 13153  001CC4  6F70               	movwf	UARTstringCRLN@data& (0+255),b
 13154  001CC6  0E02               	movlw	high UseBluetooth@buf
 13155  001CC8  0100               	movlb	0	; () banked
 13156  001CCA  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13157  001CCC  EC22  F050         	call	_UARTstringCRLN	;wreg free
 13158                           
 13159                           ;Bluetooth.c: 1025: UARTstring_CONST(CRLN);
 13160  001CD0  0E05               	movlw	low _CRLN
 13161  001CD2  0100               	movlb	0	; () banked
 13162  001CD4  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13163  001CD6  0EF2               	movlw	high _CRLN
 13164  001CD8  0100               	movlb	0	; () banked
 13165  001CDA  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13166  001CDC  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13167                           
 13168                           ;Bluetooth.c: 1027: UARTstringCRLN_CONST("System will reset");
 13169  001CE0  0EEF               	movlw	low STR_78
 13170  001CE2  0100               	movlb	0	; () banked
 13171  001CE4  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13172  001CE6  0EFD               	movlw	high STR_78
 13173  001CE8  0100               	movlb	0	; () banked
 13174  001CEA  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13175  001CEC  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 13176                           
 13177                           ;Bluetooth.c: 1028: Global1.EEPROMinitFlag = 0;
 13178  001CF0  0E00               	movlw	0
 13179  001CF2  0103               	movlb	3	; () banked
 13180  001CF4  6FF7               	movwf	(_Global1+29)& (0+255),b
 13181                           
 13182                           ; BSR set to: 3
 13183                           ;Bluetooth.c: 1029: SyncGlobalToEEPROM();
 13184  001CF6  ECCE  F04A         	call	_SyncGlobalToEEPROM	;wreg free
 13185                           
 13186                           ;Bluetooth.c: 1030: UARTstring_CONST(CRLN);
 13187  001CFA  0E05               	movlw	low _CRLN
 13188  001CFC  0100               	movlb	0	; () banked
 13189  001CFE  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13190  001D00  0EF2               	movlw	high _CRLN
 13191  001D02  0100               	movlb	0	; () banked
 13192  001D04  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13193  001D06  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13194  001D0A  00FF               	reset		;# 
 13195                           
 13196                           ;Bluetooth.c: 1032: return 1;
 13197                           ;	Return value of _UseBluetooth is never used
 13198  001D0C  0012               	return	
 13199                           
 13200                           ;Bluetooth.c: 1033: }
 13201  001D0E  D012               	goto	l12616
 13202  001D10                     l12612:
 13203                           
 13204                           ;Bluetooth.c: 1034: else
 13205                           ;Bluetooth.c: 1035: {
 13206                           ;Bluetooth.c: 1036: UARTstringCRLN_CONST("Serial Number could not be burned to EEPROM");
 13207  001D10  0E72               	movlw	low STR_89
 13208  001D12  0100               	movlb	0	; () banked
 13209  001D14  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13210  001D16  0EF6               	movlw	high STR_89
 13211  001D18  0100               	movlb	0	; () banked
 13212  001D1A  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13213  001D1C  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 13214                           
 13215                           ;Bluetooth.c: 1037: UARTstring_CONST(CRLN);
 13216  001D20  0E05               	movlw	low _CRLN
 13217  001D22  0100               	movlb	0	; () banked
 13218  001D24  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13219  001D26  0EF2               	movlw	high _CRLN
 13220  001D28  0100               	movlb	0	; () banked
 13221  001D2A  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13222  001D2C  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13223                           
 13224                           ;Bluetooth.c: 1038: return 0;
 13225                           ;	Return value of _UseBluetooth is never used
 13226  001D30  0012               	return	
 13227  001D32  D000               	goto	l12616
 13228  001D34                     l12616:
 13229                           
 13230                           ;Bluetooth.c: 1039: }
 13231                           ;Bluetooth.c: 1041: }
 13232                           ;Bluetooth.c: 1042: }
 13233                           ;Bluetooth.c: 1043: }
 13234                           ;Bluetooth.c: 1044: UARTstringCRLN_CONST("Serial Number entered incorrectly");
 13235  001D34  0E4D               	movlw	low STR_90
 13236  001D36  0100               	movlb	0	; () banked
 13237  001D38  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13238  001D3A  0EF8               	movlw	high STR_90
 13239  001D3C  0100               	movlb	0	; () banked
 13240  001D3E  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13241  001D40  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 13242                           
 13243                           ;Bluetooth.c: 1045: UARTstring_CONST(CRLN);
 13244  001D44  0E05               	movlw	low _CRLN
 13245  001D46  0100               	movlb	0	; () banked
 13246  001D48  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13247  001D4A  0EF2               	movlw	high _CRLN
 13248  001D4C  0100               	movlb	0	; () banked
 13249  001D4E  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13250  001D50  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13251                           
 13252                           ;Bluetooth.c: 1047: }
 13253                           
 13254                           ;Bluetooth.c: 1046: return 0;
 13255                           ;	Return value of _UseBluetooth is never used
 13256  001D54  0012               	return	
 13257  001D56                     l12622:
 13258                           
 13259                           ;Bluetooth.c: 1048: else
 13260                           ;Bluetooth.c: 1049: {
 13261                           ;Bluetooth.c: 1050: UARTstringCRLN_CONST("The 'Code' was wrong!!!");
 13262  001D56  0E92               	movlw	low STR_91
 13263  001D58  0100               	movlb	0	; () banked
 13264  001D5A  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13265  001D5C  0EFB               	movlw	high STR_91
 13266  001D5E  0100               	movlb	0	; () banked
 13267  001D60  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13268  001D62  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 13269                           
 13270                           ;Bluetooth.c: 1051: UARTstring_CONST(CRLN);
 13271  001D66  0E05               	movlw	low _CRLN
 13272  001D68  0100               	movlb	0	; () banked
 13273  001D6A  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13274  001D6C  0EF2               	movlw	high _CRLN
 13275  001D6E  0100               	movlb	0	; () banked
 13276  001D70  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13277  001D72  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13278                           
 13279                           ;Bluetooth.c: 1054: }
 13280                           
 13281                           ;Bluetooth.c: 1052: }
 13282                           ;Bluetooth.c: 1053: return 0;
 13283                           ;	Return value of _UseBluetooth is never used
 13284  001D76  0012               	return	
 13285  001D78                     l12628:
 13286                           
 13287                           ;Bluetooth.c: 1055: else if(StringMatchCaseInsensitive(String,"Voltage"))
 13288  001D78  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 13289  001D7C  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 13290  001D80  0E98               	movlw	low STR_92
 13291  001D82  0100               	movlb	0	; () banked
 13292  001D84  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 13293  001D86  0EFF               	movlw	high STR_92
 13294  001D88  0100               	movlb	0	; () banked
 13295  001D8A  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 13296  001D8C  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
 13297  001D90  0900               	iorlw	0
 13298  001D92  B4D8               	btfsc	status,2,c
 13299  001D94  D02F               	goto	l12638
 13300                           
 13301                           ;Bluetooth.c: 1056: {
 13302                           ;Bluetooth.c: 1057: UARTstring_CONST(CRLN);
 13303  001D96  0E05               	movlw	low _CRLN
 13304  001D98  0100               	movlb	0	; () banked
 13305  001D9A  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13306  001D9C  0EF2               	movlw	high _CRLN
 13307  001D9E  0100               	movlb	0	; () banked
 13308  001DA0  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13309  001DA2  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13310                           
 13311                           ;Bluetooth.c: 1058: sprintf(buf,"Supply Voltage = %f", (double) ReadVoltage());
 13312  001DA6  0E0C               	movlw	low UseBluetooth@buf
 13313  001DA8  0100               	movlb	0	; () banked
 13314  001DAA  6FB1               	movwf	sprintf@sp& (0+255),b
 13315  001DAC  0E02               	movlw	high UseBluetooth@buf
 13316  001DAE  0100               	movlb	0	; () banked
 13317  001DB0  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 13318  001DB2  0E31               	movlw	low STR_93
 13319  001DB4  0100               	movlb	0	; () banked
 13320  001DB6  6FB3               	movwf	sprintf@f& (0+255),b
 13321  001DB8  0EFD               	movlw	high STR_93
 13322  001DBA  0100               	movlb	0	; () banked
 13323  001DBC  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 13324  001DBE  EC72  F048         	call	_ReadVoltage	;wreg free
 13325  001DC2  C08C  F0B5         	movff	?_ReadVoltage,?_sprintf+4
 13326  001DC6  C08D  F0B6         	movff	?_ReadVoltage+1,?_sprintf+5
 13327  001DCA  C08E  F0B7         	movff	?_ReadVoltage+2,?_sprintf+6
 13328  001DCE  EC9C  F012         	call	_sprintf	;wreg free
 13329                           
 13330                           ;Bluetooth.c: 1059: UARTstringCRLN(buf);
 13331  001DD2  0E0C               	movlw	low UseBluetooth@buf
 13332  001DD4  0100               	movlb	0	; () banked
 13333  001DD6  6F70               	movwf	UARTstringCRLN@data& (0+255),b
 13334  001DD8  0E02               	movlw	high UseBluetooth@buf
 13335  001DDA  0100               	movlb	0	; () banked
 13336  001DDC  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13337  001DDE  EC22  F050         	call	_UARTstringCRLN	;wreg free
 13338                           
 13339                           ;Bluetooth.c: 1060: UARTstring_CONST(CRLN);
 13340  001DE2  0E05               	movlw	low _CRLN
 13341  001DE4  0100               	movlb	0	; () banked
 13342  001DE6  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13343  001DE8  0EF2               	movlw	high _CRLN
 13344  001DEA  0100               	movlb	0	; () banked
 13345  001DEC  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13346  001DEE  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13347                           
 13348                           ;Bluetooth.c: 1061: }
 13349  001DF2  0012               	return	
 13350  001DF4                     l12638:
 13351                           
 13352                           ;Bluetooth.c: 1062: else if(StringMatchCaseInsensitive(String,"Version"))
 13353  001DF4  C0F5  F066         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 13354  001DF8  C0F6  F067         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 13355  001DFC  0E45               	movlw	low (STR_110+27)
 13356  001DFE  0100               	movlb	0	; () banked
 13357  001E00  6F68               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 13358  001E02  0EF8               	movlw	high (STR_110+27)
 13359  001E04  0100               	movlb	0	; () banked
 13360  001E06  6F69               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 13361  001E08  EC6C  F04B         	call	_StringMatchCaseInsensitive	;wreg free
 13362  001E0C  0900               	iorlw	0
 13363  001E0E  B4D8               	btfsc	status,2,c
 13364  001E10  D0CB               	goto	l12676
 13365                           
 13366                           ;Bluetooth.c: 1063: {
 13367                           ;Bluetooth.c: 1064: UARTstring_CONST(CRLN);
 13368  001E12  0E05               	movlw	low _CRLN
 13369  001E14  0100               	movlb	0	; () banked
 13370  001E16  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13371  001E18  0EF2               	movlw	high _CRLN
 13372  001E1A  0100               	movlb	0	; () banked
 13373  001E1C  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13374  001E1E  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13375                           
 13376                           ;Bluetooth.c: 1065: sprintf(buf,"Firmware Version: %s", FirmVersion);
 13377  001E22  0E0C               	movlw	low UseBluetooth@buf
 13378  001E24  0100               	movlb	0	; () banked
 13379  001E26  6FB1               	movwf	sprintf@sp& (0+255),b
 13380  001E28  0E02               	movlw	high UseBluetooth@buf
 13381  001E2A  0100               	movlb	0	; () banked
 13382  001E2C  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 13383  001E2E  0ECC               	movlw	low STR_95
 13384  001E30  0100               	movlb	0	; () banked
 13385  001E32  6FB3               	movwf	sprintf@f& (0+255),b
 13386  001E34  0EFC               	movlw	high STR_95
 13387  001E36  0100               	movlb	0	; () banked
 13388  001E38  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 13389  001E3A  0EEB               	movlw	low _FirmVersion
 13390  001E3C  0100               	movlb	0	; () banked
 13391  001E3E  6FB5               	movwf	(?_sprintf+4)& (0+255),b
 13392  001E40  0EF1               	movlw	high _FirmVersion
 13393  001E42  0100               	movlb	0	; () banked
 13394  001E44  6FB6               	movwf	(?_sprintf+5)& (0+255),b
 13395  001E46  EC9C  F012         	call	_sprintf	;wreg free
 13396                           
 13397                           ;Bluetooth.c: 1066: UARTstringCRLN(buf);
 13398  001E4A  0E0C               	movlw	low UseBluetooth@buf
 13399  001E4C  0100               	movlb	0	; () banked
 13400  001E4E  6F70               	movwf	UARTstringCRLN@data& (0+255),b
 13401  001E50  0E02               	movlw	high UseBluetooth@buf
 13402  001E52  0100               	movlb	0	; () banked
 13403  001E54  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13404  001E56  EC22  F050         	call	_UARTstringCRLN	;wreg free
 13405                           
 13406                           ;Bluetooth.c: 1067: UARTstring_CONST(CRLN);
 13407  001E5A  0E05               	movlw	low _CRLN
 13408  001E5C  0100               	movlb	0	; () banked
 13409  001E5E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13410  001E60  0EF2               	movlw	high _CRLN
 13411  001E62  0100               	movlb	0	; () banked
 13412  001E64  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13413  001E66  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13414                           
 13415                           ;Bluetooth.c: 1069: UARTstringCRLN_CONST("PCB has Bluetooth capability");
 13416  001E6A  0E9F               	movlw	low STR_96
 13417  001E6C  0100               	movlb	0	; () banked
 13418  001E6E  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13419  001E70  0EFA               	movlw	high STR_96
 13420  001E72  0100               	movlb	0	; () banked
 13421  001E74  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13422  001E76  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 13423                           
 13424                           ;Bluetooth.c: 1070: UARTstring_CONST(CRLN);
 13425  001E7A  0E05               	movlw	low _CRLN
 13426  001E7C  0100               	movlb	0	; () banked
 13427  001E7E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13428  001E80  0EF2               	movlw	high _CRLN
 13429  001E82  0100               	movlb	0	; () banked
 13430  001E84  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13431  001E86  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13432                           
 13433                           ;Bluetooth.c: 1071: UARTstringCRLN_CONST("Bluetooth firmware is:");
 13434  001E8A  0EF1               	movlw	low STR_97
 13435  001E8C  0100               	movlb	0	; () banked
 13436  001E8E  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13437  001E90  0EFB               	movlw	high STR_97
 13438  001E92  0100               	movlb	0	; () banked
 13439  001E94  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13440  001E96  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 13441                           
 13442                           ;Bluetooth.c: 1072: UARTstringCRLN(BluetoothFirmware1);
 13443  001E9A  0EBC               	movlw	low _BluetoothFirmware1
 13444  001E9C  0100               	movlb	0	; () banked
 13445  001E9E  6F70               	movwf	UARTstringCRLN@data& (0+255),b
 13446  001EA0  0E03               	movlw	high _BluetoothFirmware1
 13447  001EA2  0100               	movlb	0	; () banked
 13448  001EA4  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13449  001EA6  EC22  F050         	call	_UARTstringCRLN	;wreg free
 13450                           
 13451                           ;Bluetooth.c: 1073: UARTstringCRLN(BluetoothFirmware2);
 13452  001EAA  0E64               	movlw	low _BluetoothFirmware2
 13453  001EAC  0100               	movlb	0	; () banked
 13454  001EAE  6F70               	movwf	UARTstringCRLN@data& (0+255),b
 13455  001EB0  0E04               	movlw	high _BluetoothFirmware2
 13456  001EB2  0100               	movlb	0	; () banked
 13457  001EB4  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13458  001EB6  EC22  F050         	call	_UARTstringCRLN	;wreg free
 13459                           
 13460                           ;Bluetooth.c: 1074: UARTstring_CONST(CRLN);
 13461  001EBA  0E05               	movlw	low _CRLN
 13462  001EBC  0100               	movlb	0	; () banked
 13463  001EBE  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13464  001EC0  0EF2               	movlw	high _CRLN
 13465  001EC2  0100               	movlb	0	; () banked
 13466  001EC4  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13467  001EC6  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13468                           
 13469                           ;Bluetooth.c: 1079: sprintf(buf,"PCB Version: %s", PCBVersion);
 13470  001ECA  0E0C               	movlw	low UseBluetooth@buf
 13471  001ECC  0100               	movlb	0	; () banked
 13472  001ECE  6FB1               	movwf	sprintf@sp& (0+255),b
 13473  001ED0  0E02               	movlw	high UseBluetooth@buf
 13474  001ED2  0100               	movlb	0	; () banked
 13475  001ED4  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 13476  001ED6  0E44               	movlw	low STR_98
 13477  001ED8  0100               	movlb	0	; () banked
 13478  001EDA  6FB3               	movwf	sprintf@f& (0+255),b
 13479  001EDC  0EFE               	movlw	high STR_98
 13480  001EDE  0100               	movlb	0	; () banked
 13481  001EE0  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 13482  001EE2  0EF4               	movlw	low _PCBVersion
 13483  001EE4  0100               	movlb	0	; () banked
 13484  001EE6  6FB5               	movwf	(?_sprintf+4)& (0+255),b
 13485  001EE8  0EF1               	movlw	high _PCBVersion
 13486  001EEA  0100               	movlb	0	; () banked
 13487  001EEC  6FB6               	movwf	(?_sprintf+5)& (0+255),b
 13488  001EEE  EC9C  F012         	call	_sprintf	;wreg free
 13489                           
 13490                           ;Bluetooth.c: 1080: UARTstringCRLN(buf);
 13491  001EF2  0E0C               	movlw	low UseBluetooth@buf
 13492  001EF4  0100               	movlb	0	; () banked
 13493  001EF6  6F70               	movwf	UARTstringCRLN@data& (0+255),b
 13494  001EF8  0E02               	movlw	high UseBluetooth@buf
 13495  001EFA  0100               	movlb	0	; () banked
 13496  001EFC  6F71               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13497  001EFE  EC22  F050         	call	_UARTstringCRLN	;wreg free
 13498                           
 13499                           ;Bluetooth.c: 1081: sprintf(buf,"Transmitting Frequency: %s", Frequency);
 13500  001F02  0E0C               	movlw	low UseBluetooth@buf
 13501  001F04  0100               	movlb	0	; () banked
 13502  001F06  6FB1               	movwf	sprintf@sp& (0+255),b
 13503  001F08  0E02               	movlw	high UseBluetooth@buf
 13504  001F0A  0100               	movlb	0	; () banked
 13505  001F0C  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 13506  001F0E  0E2B               	movlw	low STR_99
 13507  001F10  0100               	movlb	0	; () banked
 13508  001F12  6FB3               	movwf	sprintf@f& (0+255),b
 13509  001F14  0EFB               	movlw	high STR_99
 13510  001F16  0100               	movlb	0	; () banked
 13511  001F18  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 13512  001F1A  0E01               	movlw	low _Frequency
 13513  001F1C  0100               	movlb	0	; () banked
 13514  001F1E  6FB5               	movwf	(?_sprintf+4)& (0+255),b
 13515  001F20  0EF2               	movlw	high _Frequency
 13516  001F22  0100               	movlb	0	; () banked
 13517  001F24  6FB6               	movwf	(?_sprintf+5)& (0+255),b
 13518  001F26  EC9C  F012         	call	_sprintf	;wreg free
 13519                           
 13520                           ;Bluetooth.c: 1082: UARTstring(buf);
 13521  001F2A  0E0C               	movlw	low UseBluetooth@buf
 13522  001F2C  0100               	movlb	0	; () banked
 13523  001F2E  6F6D               	movwf	UARTstring@data& (0+255),b
 13524  001F30  0E02               	movlw	high UseBluetooth@buf
 13525  001F32  0100               	movlb	0	; () banked
 13526  001F34  6F6E               	movwf	(UARTstring@data+1)& (0+255),b
 13527  001F36  EC78  F051         	call	_UARTstring	;wreg free
 13528                           
 13529                           ;Bluetooth.c: 1083: UARTstringCRLN_CONST(" MHz");
 13530  001F3A  0EDC               	movlw	low STR_100
 13531  001F3C  0100               	movlb	0	; () banked
 13532  001F3E  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13533  001F40  0EFF               	movlw	high STR_100
 13534  001F42  0100               	movlb	0	; () banked
 13535  001F44  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13536  001F46  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 13537                           
 13538                           ;Bluetooth.c: 1084: UARTstring_CONST(CRLN);
 13539  001F4A  0E05               	movlw	low _CRLN
 13540  001F4C  0100               	movlb	0	; () banked
 13541  001F4E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13542  001F50  0EF2               	movlw	high _CRLN
 13543  001F52  0100               	movlb	0	; () banked
 13544  001F54  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13545  001F56  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13546                           
 13547                           ;Bluetooth.c: 1085: sprintf(buf,"Serial Number: %lu", Global2.SerialNumber);
 13548  001F5A  0E0C               	movlw	low UseBluetooth@buf
 13549  001F5C  0100               	movlb	0	; () banked
 13550  001F5E  6FB1               	movwf	sprintf@sp& (0+255),b
 13551  001F60  0E02               	movlw	high UseBluetooth@buf
 13552  001F62  0100               	movlb	0	; () banked
 13553  001F64  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 13554  001F66  0EB8               	movlw	low STR_101
 13555  001F68  0100               	movlb	0	; () banked
 13556  001F6A  6FB3               	movwf	sprintf@f& (0+255),b
 13557  001F6C  0EFD               	movlw	high STR_101
 13558  001F6E  0100               	movlb	0	; () banked
 13559  001F70  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 13560  001F72  C3B8  F0B5         	movff	_Global2+60,?_sprintf+4
 13561  001F76  C3B9  F0B6         	movff	_Global2+61,?_sprintf+5
 13562  001F7A  C3BA  F0B7         	movff	_Global2+62,?_sprintf+6
 13563  001F7E  C3BB  F0B8         	movff	_Global2+63,?_sprintf+7
 13564  001F82  EC9C  F012         	call	_sprintf	;wreg free
 13565                           
 13566                           ;Bluetooth.c: 1086: UARTstring(buf);
 13567  001F86  0E0C               	movlw	low UseBluetooth@buf
 13568  001F88  0100               	movlb	0	; () banked
 13569  001F8A  6F6D               	movwf	UARTstring@data& (0+255),b
 13570  001F8C  0E02               	movlw	high UseBluetooth@buf
 13571  001F8E  0100               	movlb	0	; () banked
 13572  001F90  6F6E               	movwf	(UARTstring@data+1)& (0+255),b
 13573  001F92  EC78  F051         	call	_UARTstring	;wreg free
 13574                           
 13575                           ;Bluetooth.c: 1087: UARTstring_CONST(CRLN);
 13576  001F96  0E05               	movlw	low _CRLN
 13577  001F98  0100               	movlb	0	; () banked
 13578  001F9A  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13579  001F9C  0EF2               	movlw	high _CRLN
 13580  001F9E  0100               	movlb	0	; () banked
 13581  001FA0  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13582  001FA2  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13583                           
 13584                           ;Bluetooth.c: 1089: }
 13585  001FA6  0012               	return	
 13586  001FA8                     l12676:
 13587                           
 13588                           ;Bluetooth.c: 1090: else if(StringMatch(String,"???"))
 13589  001FA8  C0F5  F063         	movff	UseBluetooth@String,StringMatch@This
 13590  001FAC  C0F6  F064         	movff	UseBluetooth@String+1,StringMatch@This+1
 13591  001FB0  0EE5               	movlw	low STR_102
 13592  001FB2  0100               	movlb	0	; () banked
 13593  001FB4  6F65               	movwf	StringMatch@That& (0+255),b
 13594  001FB6  0EFF               	movlw	high STR_102
 13595  001FB8  0100               	movlb	0	; () banked
 13596  001FBA  6F66               	movwf	(StringMatch@That+1)& (0+255),b
 13597  001FBC  EC41  F04D         	call	_StringMatch	;wreg free
 13598  001FC0  0900               	iorlw	0
 13599  001FC2  B4D8               	btfsc	status,2,c
 13600  001FC4  D29F               	goto	l12762
 13601                           
 13602                           ;Bluetooth.c: 1091: {
 13603                           ;Bluetooth.c: 1092: UARTstring_CONST(CRLN);
 13604  001FC6  0E05               	movlw	low _CRLN
 13605  001FC8  0100               	movlb	0	; () banked
 13606  001FCA  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13607  001FCC  0EF2               	movlw	high _CRLN
 13608  001FCE  0100               	movlb	0	; () banked
 13609  001FD0  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13610  001FD2  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13611                           
 13612                           ;Bluetooth.c: 1093: for(i=0; i< 34; i++ )
 13613  001FD6  0E00               	movlw	0
 13614  001FD8  0102               	movlb	2	; () banked
 13615  001FDA  6F93               	movwf	UseBluetooth@i& (0+255),b
 13616  001FDC                     l12682:
 13617                           
 13618                           ; BSR set to: 2
 13619  001FDC  0E21               	movlw	33
 13620  001FDE  0102               	movlb	2	; () banked
 13621  001FE0  6593               	cpfsgt	UseBluetooth@i& (0+255),b
 13622  001FE2  D001               	goto	l12686
 13623                           
 13624                           ; BSR set to: 2
 13625  001FE4  D006               	goto	l12692
 13626  001FE6                     l12686:
 13627                           
 13628                           ; BSR set to: 2
 13629                           ;Bluetooth.c: 1094: {
 13630                           ;Bluetooth.c: 1095: UARTchar_CONST('~');
 13631  001FE6  0E7E               	movlw	126
 13632  001FE8  EC5A  F050         	call	_UARTchar_CONST
 13633  001FEC  0102               	movlb	2	; () banked
 13634  001FEE  2B93               	incf	UseBluetooth@i& (0+255),f,b
 13635  001FF0  D7F5               	goto	l12682
 13636  001FF2                     l12692:
 13637                           
 13638                           ; BSR set to: 2
 13639                           ;Bluetooth.c: 1096: }
 13640                           ;Bluetooth.c: 1097: UARTstring_CONST("Command Menu");
 13641  001FF2  0E54               	movlw	low (STR_161+14)
 13642  001FF4  0100               	movlb	0	; () banked
 13643  001FF6  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13644  001FF8  0EFB               	movlw	high (STR_161+14)
 13645  001FFA  0100               	movlb	0	; () banked
 13646  001FFC  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13647  001FFE  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13648                           
 13649                           ;Bluetooth.c: 1098: for(i=0; i< 34; i++ )
 13650  002002  0E00               	movlw	0
 13651  002004  0102               	movlb	2	; () banked
 13652  002006  6F93               	movwf	UseBluetooth@i& (0+255),b
 13653  002008                     l12696:
 13654                           
 13655                           ; BSR set to: 2
 13656  002008  0E21               	movlw	33
 13657  00200A  0102               	movlb	2	; () banked
 13658  00200C  6593               	cpfsgt	UseBluetooth@i& (0+255),b
 13659  00200E  D001               	goto	l12700
 13660                           
 13661                           ; BSR set to: 2
 13662  002010  D006               	goto	l12706
 13663  002012                     l12700:
 13664                           
 13665                           ; BSR set to: 2
 13666                           ;Bluetooth.c: 1099: {
 13667                           ;Bluetooth.c: 1100: UARTchar_CONST('~');
 13668  002012  0E7E               	movlw	126
 13669  002014  EC5A  F050         	call	_UARTchar_CONST
 13670  002018  0102               	movlb	2	; () banked
 13671  00201A  2B93               	incf	UseBluetooth@i& (0+255),f,b
 13672  00201C  D7F5               	goto	l12696
 13673  00201E                     l12706:
 13674                           
 13675                           ; BSR set to: 2
 13676                           ;Bluetooth.c: 1101: }
 13677                           ;Bluetooth.c: 1102: UARTstring_CONST(CRLN);
 13678  00201E  0E05               	movlw	low _CRLN
 13679  002020  0100               	movlb	0	; () banked
 13680  002022  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13681  002024  0EF2               	movlw	high _CRLN
 13682  002026  0100               	movlb	0	; () banked
 13683  002028  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13684  00202A  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13685                           
 13686                           ;Bluetooth.c: 1103: UARTstring_CONST(CRLN);
 13687  00202E  0E05               	movlw	low _CRLN
 13688  002030  0100               	movlb	0	; () banked
 13689  002032  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13690  002034  0EF2               	movlw	high _CRLN
 13691  002036  0100               	movlb	0	; () banked
 13692  002038  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13693  00203A  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13694                           
 13695                           ;Bluetooth.c: 1104: UARTstringCRLN_CONST("System commands:");
 13696  00203E  0E12               	movlw	low STR_104
 13697  002040  0100               	movlb	0	; () banked
 13698  002042  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13699  002044  0EFE               	movlw	high STR_104
 13700  002046  0100               	movlb	0	; () banked
 13701  002048  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13702  00204A  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 13703                           
 13704                           ;Bluetooth.c: 1105: UARTcommandMenu("???", "Help Menu");
 13705  00204E  0EE5               	movlw	low STR_102
 13706  002050  0100               	movlb	0	; () banked
 13707  002052  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 13708  002054  0EFF               	movlw	high STR_102
 13709  002056  0100               	movlb	0	; () banked
 13710  002058  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13711  00205A  0E6A               	movlw	low STR_106
 13712  00205C  0100               	movlb	0	; () banked
 13713  00205E  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 13714  002060  0EFF               	movlw	high STR_106
 13715  002062  0100               	movlb	0	; () banked
 13716  002064  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13717  002066  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 13718                           
 13719                           ;Bluetooth.c: 1106: UARTcommandMenu("Reset", "Clears memory and resets device");
 13720  00206A  0EC7               	movlw	low STR_75
 13721  00206C  0100               	movlb	0	; () banked
 13722  00206E  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 13723  002070  0EFF               	movlw	high STR_75
 13724  002072  0100               	movlb	0	; () banked
 13725  002074  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13726  002076  0EF0               	movlw	low STR_108
 13727  002078  0100               	movlb	0	; () banked
 13728  00207A  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 13729  00207C  0EF8               	movlw	high STR_108
 13730  00207E  0100               	movlb	0	; () banked
 13731  002080  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13732  002082  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 13733                           
 13734                           ;Bluetooth.c: 1107: UARTcommandMenu("Version", "Displays Firmware/Hardware Version");
 13735  002086  0E45               	movlw	low (STR_110+27)
 13736  002088  0100               	movlb	0	; () banked
 13737  00208A  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 13738  00208C  0EF8               	movlw	high (STR_110+27)
 13739  00208E  0100               	movlb	0	; () banked
 13740  002090  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13741  002092  0E2A               	movlw	low STR_110
 13742  002094  0100               	movlb	0	; () banked
 13743  002096  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 13744  002098  0EF8               	movlw	high STR_110
 13745  00209A  0100               	movlb	0	; () banked
 13746  00209C  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13747  00209E  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 13748                           
 13749                           ;Bluetooth.c: 1108: UARTcommandMenu("Change SN", "Changes Serial Number");
 13750  0020A2  0E60               	movlw	low STR_80
 13751  0020A4  0100               	movlb	0	; () banked
 13752  0020A6  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 13753  0020A8  0EFF               	movlw	high STR_80
 13754  0020AA  0100               	movlb	0	; () banked
 13755  0020AC  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13756  0020AE  0E62               	movlw	low STR_112
 13757  0020B0  0100               	movlb	0	; () banked
 13758  0020B2  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 13759  0020B4  0EFC               	movlw	high STR_112
 13760  0020B6  0100               	movlb	0	; () banked
 13761  0020B8  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13762  0020BA  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 13763                           
 13764                           ;Bluetooth.c: 1109: UARTstring_CONST(CRLN);
 13765  0020BE  0E05               	movlw	low _CRLN
 13766  0020C0  0100               	movlb	0	; () banked
 13767  0020C2  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13768  0020C4  0EF2               	movlw	high _CRLN
 13769  0020C6  0100               	movlb	0	; () banked
 13770  0020C8  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13771  0020CA  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13772                           
 13773                           ;Bluetooth.c: 1110: UARTstringCRLN_CONST("Diagnostic Commands:");
 13774  0020CE  0EB7               	movlw	low STR_113
 13775  0020D0  0100               	movlb	0	; () banked
 13776  0020D2  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13777  0020D4  0EFC               	movlw	high STR_113
 13778  0020D6  0100               	movlb	0	; () banked
 13779  0020D8  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13780  0020DA  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 13781                           
 13782                           ;Bluetooth.c: 1111: UARTcommandMenu("Voltage", "Displays the supply voltage");
 13783  0020DE  0E98               	movlw	low STR_92
 13784  0020E0  0100               	movlb	0	; () banked
 13785  0020E2  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 13786  0020E4  0EFF               	movlw	high STR_92
 13787  0020E6  0100               	movlb	0	; () banked
 13788  0020E8  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13789  0020EA  0ED8               	movlw	low STR_115
 13790  0020EC  0100               	movlb	0	; () banked
 13791  0020EE  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 13792  0020F0  0EFA               	movlw	high STR_115
 13793  0020F2  0100               	movlb	0	; () banked
 13794  0020F4  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13795  0020F6  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 13796                           
 13797                           ;Bluetooth.c: 1112: UARTstring_CONST(CRLN);
 13798  0020FA  0E05               	movlw	low _CRLN
 13799  0020FC  0100               	movlb	0	; () banked
 13800  0020FE  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 13801  002100  0EF2               	movlw	high _CRLN
 13802  002102  0100               	movlb	0	; () banked
 13803  002104  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 13804  002106  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 13805                           
 13806                           ;Bluetooth.c: 1113: UARTstringCRLN_CONST("IR commands:");
 13807  00210A  0EAB               	movlw	low STR_116
 13808  00210C  0100               	movlb	0	; () banked
 13809  00210E  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 13810  002110  0EFE               	movlw	high STR_116
 13811  002112  0100               	movlb	0	; () banked
 13812  002114  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 13813  002116  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 13814                           
 13815                           ;Bluetooth.c: 1114: for(i=1; i <= 12; i++)
 13816  00211A  0E01               	movlw	1
 13817  00211C  0102               	movlb	2	; () banked
 13818  00211E  6F93               	movwf	UseBluetooth@i& (0+255),b
 13819  002120                     l12724:
 13820                           
 13821                           ; BSR set to: 2
 13822  002120  0E0C               	movlw	12
 13823  002122  0102               	movlb	2	; () banked
 13824  002124  6593               	cpfsgt	UseBluetooth@i& (0+255),b
 13825  002126  D001               	goto	l12728
 13826                           
 13827                           ; BSR set to: 2
 13828  002128  D030               	goto	l12738
 13829  00212A                     l12728:
 13830                           
 13831                           ; BSR set to: 2
 13832                           ;Bluetooth.c: 1115: {
 13833                           ;Bluetooth.c: 1116: cleanBuffer(buf,50);
 13834  00212A  0E0C               	movlw	low UseBluetooth@buf
 13835  00212C  0100               	movlb	0	; () banked
 13836  00212E  6F63               	movwf	cleanBuffer@data& (0+255),b
 13837  002130  0E02               	movlw	high UseBluetooth@buf
 13838  002132  0100               	movlb	0	; () banked
 13839  002134  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 13840  002136  0E00               	movlw	0
 13841  002138  0100               	movlb	0	; () banked
 13842  00213A  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
 13843  00213C  0E32               	movlw	50
 13844  00213E  6F65               	movwf	cleanBuffer@count& (0+255),b
 13845  002140  EC47  F04E         	call	_cleanBuffer	;wreg free
 13846                           
 13847                           ;Bluetooth.c: 1117: sprintf(buf,"RemoteButton%d",i);
 13848  002144  0E0C               	movlw	low UseBluetooth@buf
 13849  002146  0100               	movlb	0	; () banked
 13850  002148  6FB1               	movwf	sprintf@sp& (0+255),b
 13851  00214A  0E02               	movlw	high UseBluetooth@buf
 13852  00214C  0100               	movlb	0	; () banked
 13853  00214E  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 13854  002150  0E64               	movlw	low STR_117
 13855  002152  0100               	movlb	0	; () banked
 13856  002154  6FB3               	movwf	sprintf@f& (0+255),b
 13857  002156  0EFE               	movlw	high STR_117
 13858  002158  0100               	movlb	0	; () banked
 13859  00215A  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 13860  00215C  C293  F0B5         	movff	UseBluetooth@i,?_sprintf+4
 13861  002160  0100               	movlb	0	; () banked
 13862  002162  6BB6               	clrf	(?_sprintf+5)& (0+255),b
 13863  002164  EC9C  F012         	call	_sprintf	;wreg free
 13864                           
 13865                           ;Bluetooth.c: 1118: UARTcommandMenu(buf, "Transmits saved NEC code");
 13866  002168  0E0C               	movlw	low UseBluetooth@buf
 13867  00216A  0100               	movlb	0	; () banked
 13868  00216C  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 13869  00216E  0E02               	movlw	high UseBluetooth@buf
 13870  002170  0100               	movlb	0	; () banked
 13871  002172  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13872  002174  0E61               	movlw	low STR_118
 13873  002176  0100               	movlb	0	; () banked
 13874  002178  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 13875  00217A  0EFB               	movlw	high STR_118
 13876  00217C  0100               	movlb	0	; () banked
 13877  00217E  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13878  002180  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 13879  002184  0102               	movlb	2	; () banked
 13880  002186  2B93               	incf	UseBluetooth@i& (0+255),f,b
 13881  002188  D7CB               	goto	l12724
 13882  00218A                     l12738:
 13883                           
 13884                           ; BSR set to: 2
 13885                           ;Bluetooth.c: 1119: }
 13886                           ;Bluetooth.c: 1120: for(i=1; i <= 12; i++)
 13887  00218A  0E01               	movlw	1
 13888  00218C  0102               	movlb	2	; () banked
 13889  00218E  6F93               	movwf	UseBluetooth@i& (0+255),b
 13890  002190                     l12740:
 13891                           
 13892                           ; BSR set to: 2
 13893  002190  0E0C               	movlw	12
 13894  002192  0102               	movlb	2	; () banked
 13895  002194  6593               	cpfsgt	UseBluetooth@i& (0+255),b
 13896  002196  D001               	goto	l12744
 13897                           
 13898                           ; BSR set to: 2
 13899  002198  D030               	goto	l12754
 13900  00219A                     l12744:
 13901                           
 13902                           ; BSR set to: 2
 13903                           ;Bluetooth.c: 1121: {
 13904                           ;Bluetooth.c: 1122: cleanBuffer(buf,50);
 13905  00219A  0E0C               	movlw	low UseBluetooth@buf
 13906  00219C  0100               	movlb	0	; () banked
 13907  00219E  6F63               	movwf	cleanBuffer@data& (0+255),b
 13908  0021A0  0E02               	movlw	high UseBluetooth@buf
 13909  0021A2  0100               	movlb	0	; () banked
 13910  0021A4  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 13911  0021A6  0E00               	movlw	0
 13912  0021A8  0100               	movlb	0	; () banked
 13913  0021AA  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
 13914  0021AC  0E32               	movlw	50
 13915  0021AE  6F65               	movwf	cleanBuffer@count& (0+255),b
 13916  0021B0  EC47  F04E         	call	_cleanBuffer	;wreg free
 13917                           
 13918                           ;Bluetooth.c: 1123: sprintf(buf,"RemoteButton%d set",i);
 13919  0021B4  0E0C               	movlw	low UseBluetooth@buf
 13920  0021B6  0100               	movlb	0	; () banked
 13921  0021B8  6FB1               	movwf	sprintf@sp& (0+255),b
 13922  0021BA  0E02               	movlw	high UseBluetooth@buf
 13923  0021BC  0100               	movlb	0	; () banked
 13924  0021BE  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 13925  0021C0  0EA5               	movlw	low STR_119
 13926  0021C2  0100               	movlb	0	; () banked
 13927  0021C4  6FB3               	movwf	sprintf@f& (0+255),b
 13928  0021C6  0EFD               	movlw	high STR_119
 13929  0021C8  0100               	movlb	0	; () banked
 13930  0021CA  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 13931  0021CC  C293  F0B5         	movff	UseBluetooth@i,?_sprintf+4
 13932  0021D0  0100               	movlb	0	; () banked
 13933  0021D2  6BB6               	clrf	(?_sprintf+5)& (0+255),b
 13934  0021D4  EC9C  F012         	call	_sprintf	;wreg free
 13935                           
 13936                           ;Bluetooth.c: 1124: UARTcommandMenu(buf,"Allows saving NEC codes");
 13937  0021D8  0E0C               	movlw	low UseBluetooth@buf
 13938  0021DA  0100               	movlb	0	; () banked
 13939  0021DC  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 13940  0021DE  0E02               	movlw	high UseBluetooth@buf
 13941  0021E0  0100               	movlb	0	; () banked
 13942  0021E2  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13943  0021E4  0EC2               	movlw	low STR_120
 13944  0021E6  0100               	movlb	0	; () banked
 13945  0021E8  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 13946  0021EA  0EFB               	movlw	high STR_120
 13947  0021EC  0100               	movlb	0	; () banked
 13948  0021EE  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13949  0021F0  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 13950  0021F4  0102               	movlb	2	; () banked
 13951  0021F6  2B93               	incf	UseBluetooth@i& (0+255),f,b
 13952  0021F8  D7CB               	goto	l12740
 13953  0021FA                     l12754:
 13954                           
 13955                           ; BSR set to: 2
 13956                           ;Bluetooth.c: 1125: }
 13957                           ;Bluetooth.c: 1126: UARTcommandMenu("RF set 1,D", "Sets Remote button to send RF Config 
      +                          1 channel D");
 13958  0021FA  0E1E               	movlw	low STR_121
 13959  0021FC  0100               	movlb	0	; () banked
 13960  0021FE  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 13961  002200  0EFF               	movlw	high STR_121
 13962  002202  0100               	movlb	0	; () banked
 13963  002204  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13964  002206  0E84               	movlw	low STR_122
 13965  002208  0100               	movlb	0	; () banked
 13966  00220A  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 13967  00220C  0EF3               	movlw	high STR_122
 13968  00220E  0100               	movlb	0	; () banked
 13969  002210  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13970  002212  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 13971                           
 13972                           ;Bluetooth.c: 1127: UARTcommandMenu("RF set 1,E", "Sets Remote button to send RF Config 
      +                          1 channel E");
 13973  002216  0E34               	movlw	low STR_123
 13974  002218  0100               	movlb	0	; () banked
 13975  00221A  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 13976  00221C  0EFF               	movlw	high STR_123
 13977  00221E  0100               	movlb	0	; () banked
 13978  002220  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13979  002222  0EE6               	movlw	low STR_124
 13980  002224  0100               	movlb	0	; () banked
 13981  002226  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 13982  002228  0EF3               	movlw	high STR_124
 13983  00222A  0100               	movlb	0	; () banked
 13984  00222C  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13985  00222E  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 13986                           
 13987                           ;Bluetooth.c: 1128: UARTcommandMenu("RF set 1,F", "Sets Remote button to send RF Config 
      +                          1 channel F");
 13988  002232  0E3F               	movlw	low STR_125
 13989  002234  0100               	movlb	0	; () banked
 13990  002236  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 13991  002238  0EFF               	movlw	high STR_125
 13992  00223A  0100               	movlb	0	; () banked
 13993  00223C  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13994  00223E  0E17               	movlw	low STR_126
 13995  002240  0100               	movlb	0	; () banked
 13996  002242  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 13997  002244  0EF4               	movlw	high STR_126
 13998  002246  0100               	movlb	0	; () banked
 13999  002248  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14000  00224A  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14001                           
 14002                           ;Bluetooth.c: 1129: UARTcommandMenu("RF set 2,B", "Sets Remote button to send RF Config 
      +                          2 channel B");
 14003  00224E  0E13               	movlw	low STR_127
 14004  002250  0100               	movlb	0	; () banked
 14005  002252  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14006  002254  0EFF               	movlw	high STR_127
 14007  002256  0100               	movlb	0	; () banked
 14008  002258  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14009  00225A  0E53               	movlw	low STR_128
 14010  00225C  0100               	movlb	0	; () banked
 14011  00225E  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14012  002260  0EF3               	movlw	high STR_128
 14013  002262  0100               	movlb	0	; () banked
 14014  002264  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14015  002266  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14016                           
 14017                           ;Bluetooth.c: 1130: UARTcommandMenu("RF set 2,D", "Sets Remote button to send RF Config 
      +                          2 channel D");
 14018  00226A  0E29               	movlw	low STR_129
 14019  00226C  0100               	movlb	0	; () banked
 14020  00226E  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14021  002270  0EFF               	movlw	high STR_129
 14022  002272  0100               	movlb	0	; () banked
 14023  002274  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14024  002276  0EB5               	movlw	low STR_130
 14025  002278  0100               	movlb	0	; () banked
 14026  00227A  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14027  00227C  0EF3               	movlw	high STR_130
 14028  00227E  0100               	movlb	0	; () banked
 14029  002280  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14030  002282  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14031                           
 14032                           ;Bluetooth.c: 1131: UARTcommandMenu("RF set 2,H", "Sets Remote button to send RF Config 
      +                          2 channel H");
 14033  002286  0E4A               	movlw	low STR_131
 14034  002288  0100               	movlb	0	; () banked
 14035  00228A  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14036  00228C  0EFF               	movlw	high STR_131
 14037  00228E  0100               	movlb	0	; () banked
 14038  002290  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14039  002292  0E48               	movlw	low STR_132
 14040  002294  0100               	movlb	0	; () banked
 14041  002296  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14042  002298  0EF4               	movlw	high STR_132
 14043  00229A  0100               	movlb	0	; () banked
 14044  00229C  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14045  00229E  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14046                           
 14047                           ;Bluetooth.c: 1132: UARTcommandMenu("RF clear 1,D", "Clears saved Button for RF Config 1
      +                           channel D");
 14048  0022A2  0EC5               	movlw	low STR_133
 14049  0022A4  0100               	movlb	0	; () banked
 14050  0022A6  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14051  0022A8  0EFE               	movlw	high STR_133
 14052  0022AA  0100               	movlb	0	; () banked
 14053  0022AC  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14054  0022AE  0E04               	movlw	low STR_134
 14055  0022B0  0100               	movlb	0	; () banked
 14056  0022B2  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14057  0022B4  0EF5               	movlw	high STR_134
 14058  0022B6  0100               	movlb	0	; () banked
 14059  0022B8  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14060  0022BA  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14061                           
 14062                           ;Bluetooth.c: 1133: UARTcommandMenu("RF clear 1,E", "Clears saved Button for RF Config 1
      +                           channel E");
 14063  0022BE  0EDF               	movlw	low STR_135
 14064  0022C0  0100               	movlb	0	; () banked
 14065  0022C2  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14066  0022C4  0EFE               	movlw	high STR_135
 14067  0022C6  0100               	movlb	0	; () banked
 14068  0022C8  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14069  0022CA  0E60               	movlw	low STR_136
 14070  0022CC  0100               	movlb	0	; () banked
 14071  0022CE  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14072  0022D0  0EF5               	movlw	high STR_136
 14073  0022D2  0100               	movlb	0	; () banked
 14074  0022D4  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14075  0022D6  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14076                           
 14077                           ;Bluetooth.c: 1134: UARTcommandMenu("RF clear 1,F", "Clears saved Button for RF Config 1
      +                           channel F");
 14078  0022DA  0EEC               	movlw	low STR_137
 14079  0022DC  0100               	movlb	0	; () banked
 14080  0022DE  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14081  0022E0  0EFE               	movlw	high STR_137
 14082  0022E2  0100               	movlb	0	; () banked
 14083  0022E4  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14084  0022E6  0E8E               	movlw	low STR_138
 14085  0022E8  0100               	movlb	0	; () banked
 14086  0022EA  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14087  0022EC  0EF5               	movlw	high STR_138
 14088  0022EE  0100               	movlb	0	; () banked
 14089  0022F0  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14090  0022F2  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14091                           
 14092                           ;Bluetooth.c: 1135: UARTcommandMenu("RF clear 2,B", "Clears saved Button for RF Config 2
      +                           channel B");
 14093  0022F6  0EB8               	movlw	low STR_139
 14094  0022F8  0100               	movlb	0	; () banked
 14095  0022FA  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14096  0022FC  0EFE               	movlw	high STR_139
 14097  0022FE  0100               	movlb	0	; () banked
 14098  002300  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14099  002302  0ED6               	movlw	low STR_140
 14100  002304  0100               	movlb	0	; () banked
 14101  002306  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14102  002308  0EF4               	movlw	high STR_140
 14103  00230A  0100               	movlb	0	; () banked
 14104  00230C  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14105  00230E  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14106                           
 14107                           ;Bluetooth.c: 1136: UARTcommandMenu("RF clear 2,D", "Clears saved Button for RF Config 2
      +                           channel D");
 14108  002312  0ED2               	movlw	low STR_141
 14109  002314  0100               	movlb	0	; () banked
 14110  002316  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14111  002318  0EFE               	movlw	high STR_141
 14112  00231A  0100               	movlb	0	; () banked
 14113  00231C  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14114  00231E  0E32               	movlw	low STR_142
 14115  002320  0100               	movlb	0	; () banked
 14116  002322  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14117  002324  0EF5               	movlw	high STR_142
 14118  002326  0100               	movlb	0	; () banked
 14119  002328  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14120  00232A  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14121                           
 14122                           ;Bluetooth.c: 1137: UARTcommandMenu("RF clear 2,H", "Clears saved Button for RF Config 2
      +                           channel H");
 14123  00232E  0EF9               	movlw	low STR_143
 14124  002330  0100               	movlb	0	; () banked
 14125  002332  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14126  002334  0EFE               	movlw	high STR_143
 14127  002336  0100               	movlb	0	; () banked
 14128  002338  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14129  00233A  0EBC               	movlw	low STR_144
 14130  00233C  0100               	movlb	0	; () banked
 14131  00233E  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14132  002340  0EF5               	movlw	high STR_144
 14133  002342  0100               	movlb	0	; () banked
 14134  002344  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14135  002346  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14136                           
 14137                           ;Bluetooth.c: 1138: UARTcommandMenu("NEC?", "NEC description for Arbitrary code send");
 14138  00234A  0ED2               	movlw	low STR_145
 14139  00234C  0100               	movlb	0	; () banked
 14140  00234E  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14141  002350  0EFF               	movlw	high STR_145
 14142  002352  0100               	movlb	0	; () banked
 14143  002354  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14144  002356  0E4C               	movlw	low STR_146
 14145  002358  0100               	movlb	0	; () banked
 14146  00235A  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14147  00235C  0EF7               	movlw	high STR_146
 14148  00235E  0100               	movlb	0	; () banked
 14149  002360  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14150  002362  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14151                           
 14152                           ;Bluetooth.c: 1139: UARTstring_CONST(CRLN);
 14153  002366  0E05               	movlw	low _CRLN
 14154  002368  0100               	movlb	0	; () banked
 14155  00236A  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 14156  00236C  0EF2               	movlw	high _CRLN
 14157  00236E  0100               	movlb	0	; () banked
 14158  002370  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14159  002372  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 14160                           
 14161                           ;Bluetooth.c: 1140: UARTstringCRLN_CONST("RF commands:");
 14162  002376  0E9E               	movlw	low STR_147
 14163  002378  0100               	movlb	0	; () banked
 14164  00237A  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14165  00237C  0EFE               	movlw	high STR_147
 14166  00237E  0100               	movlb	0	; () banked
 14167  002380  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14168  002382  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 14169                           
 14170                           ;Bluetooth.c: 1141: UARTcommandMenu(Conf1_ChannelD_STR, "RFK100LC Channel D");
 14171  002386  0E8C               	movlw	low _Conf1_ChannelD_STR
 14172  002388  0100               	movlb	0	; () banked
 14173  00238A  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14174  00238C  0EF1               	movlw	high _Conf1_ChannelD_STR
 14175  00238E  0100               	movlb	0	; () banked
 14176  002390  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14177  002392  0E59               	movlw	low STR_148
 14178  002394  0100               	movlb	0	; () banked
 14179  002396  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14180  002398  0EFD               	movlw	high STR_148
 14181  00239A  0100               	movlb	0	; () banked
 14182  00239C  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14183  00239E  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14184                           
 14185                           ;Bluetooth.c: 1142: UARTcommandMenu(Conf1_ChannelE_STR, "RFK100LC Channel E");
 14186  0023A2  0E9B               	movlw	low _Conf1_ChannelE_STR
 14187  0023A4  0100               	movlb	0	; () banked
 14188  0023A6  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14189  0023A8  0EF1               	movlw	high _Conf1_ChannelE_STR
 14190  0023AA  0100               	movlb	0	; () banked
 14191  0023AC  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14192  0023AE  0E6C               	movlw	low STR_149
 14193  0023B0  0100               	movlb	0	; () banked
 14194  0023B2  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14195  0023B4  0EFD               	movlw	high STR_149
 14196  0023B6  0100               	movlb	0	; () banked
 14197  0023B8  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14198  0023BA  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14199                           
 14200                           ;Bluetooth.c: 1143: UARTcommandMenu(Conf1_ChannelF_STR, "RFK100LC Channel F");
 14201  0023BE  0EAA               	movlw	low _Conf1_ChannelF_STR
 14202  0023C0  0100               	movlb	0	; () banked
 14203  0023C2  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14204  0023C4  0EF1               	movlw	high _Conf1_ChannelF_STR
 14205  0023C6  0100               	movlb	0	; () banked
 14206  0023C8  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14207  0023CA  0E7F               	movlw	low STR_150
 14208  0023CC  0100               	movlb	0	; () banked
 14209  0023CE  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14210  0023D0  0EFD               	movlw	high STR_150
 14211  0023D2  0100               	movlb	0	; () banked
 14212  0023D4  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14213  0023D6  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14214                           
 14215                           ;Bluetooth.c: 1144: UARTcommandMenu(Conf2_ChannelB_ON_STR, "RFK306LC Channel B ON");
 14216  0023DA  0EC8               	movlw	low _Conf2_ChannelB_ON_STR
 14217  0023DC  0100               	movlb	0	; () banked
 14218  0023DE  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14219  0023E0  0EF0               	movlw	high _Conf2_ChannelB_ON_STR
 14220  0023E2  0100               	movlb	0	; () banked
 14221  0023E4  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14222  0023E6  0E36               	movlw	low STR_151
 14223  0023E8  0100               	movlb	0	; () banked
 14224  0023EA  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14225  0023EC  0EFC               	movlw	high STR_151
 14226  0023EE  0100               	movlb	0	; () banked
 14227  0023F0  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14228  0023F2  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14229                           
 14230                           ;Bluetooth.c: 1145: UARTcommandMenu(Conf2_ChannelB_OFF_STR, "RFK306LC Channel B OFF");
 14231  0023F6  0EA2               	movlw	low _Conf2_ChannelB_OFF_STR
 14232  0023F8  0100               	movlb	0	; () banked
 14233  0023FA  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14234  0023FC  0EF0               	movlw	high _Conf2_ChannelB_OFF_STR
 14235  0023FE  0100               	movlb	0	; () banked
 14236  002400  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14237  002402  0E08               	movlw	low STR_152
 14238  002404  0100               	movlb	0	; () banked
 14239  002406  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14240  002408  0EFC               	movlw	high STR_152
 14241  00240A  0100               	movlb	0	; () banked
 14242  00240C  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14243  00240E  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14244                           
 14245                           ;Bluetooth.c: 1146: UARTcommandMenu(Conf2_ChannelD_ON_STR, "TR009 Channel D ON");
 14246  002412  0EDA               	movlw	low _Conf2_ChannelD_ON_STR
 14247  002414  0100               	movlb	0	; () banked
 14248  002416  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14249  002418  0EF0               	movlw	high _Conf2_ChannelD_ON_STR
 14250  00241A  0100               	movlb	0	; () banked
 14251  00241C  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14252  00241E  0E92               	movlw	low STR_153
 14253  002420  0100               	movlb	0	; () banked
 14254  002422  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14255  002424  0EFD               	movlw	high STR_153
 14256  002426  0100               	movlb	0	; () banked
 14257  002428  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14258  00242A  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14259                           
 14260                           ;Bluetooth.c: 1147: UARTcommandMenu(Conf2_ChannelD_OFF_STR, "TR009 Channel D OFF");
 14261  00242E  0EB5               	movlw	low _Conf2_ChannelD_OFF_STR
 14262  002430  0100               	movlb	0	; () banked
 14263  002432  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14264  002434  0EF0               	movlw	high _Conf2_ChannelD_OFF_STR
 14265  002436  0100               	movlb	0	; () banked
 14266  002438  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14267  00243A  0E09               	movlw	low STR_154
 14268  00243C  0100               	movlb	0	; () banked
 14269  00243E  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14270  002440  0EFD               	movlw	high STR_154
 14271  002442  0100               	movlb	0	; () banked
 14272  002444  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14273  002446  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14274                           
 14275                           ;Bluetooth.c: 1148: UARTcommandMenu(Conf2_ChannelH_1_ON_STR, "RC-015*3 Channel H device 
      +                          1 ON");
 14276  00244A  0E66               	movlw	low _Conf2_ChannelH_1_ON_STR
 14277  00244C  0100               	movlb	0	; () banked
 14278  00244E  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14279  002450  0EF0               	movlw	high _Conf2_ChannelH_1_ON_STR
 14280  002452  0100               	movlb	0	; () banked
 14281  002454  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14282  002456  0E8E               	movlw	low STR_155
 14283  002458  0100               	movlb	0	; () banked
 14284  00245A  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14285  00245C  0EF9               	movlw	high STR_155
 14286  00245E  0100               	movlb	0	; () banked
 14287  002460  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14288  002462  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14289                           
 14290                           ;Bluetooth.c: 1149: UARTcommandMenu(Conf2_ChannelH_1_OFF_STR, "RC-015*3 Channel H device
      +                           1 OFF");
 14291  002466  0E27               	movlw	low _Conf2_ChannelH_1_OFF_STR
 14292  002468  0100               	movlb	0	; () banked
 14293  00246A  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14294  00246C  0EF0               	movlw	high _Conf2_ChannelH_1_OFF_STR
 14295  00246E  0100               	movlb	0	; () banked
 14296  002470  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14297  002472  0E90               	movlw	low STR_156
 14298  002474  0100               	movlb	0	; () banked
 14299  002476  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14300  002478  0EF8               	movlw	high STR_156
 14301  00247A  0100               	movlb	0	; () banked
 14302  00247C  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14303  00247E  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14304                           
 14305                           ;Bluetooth.c: 1150: UARTcommandMenu(Conf2_ChannelH_2_ON_STR, "RC-015*3 Channel H device 
      +                          2 ON");
 14306  002482  0E7A               	movlw	low _Conf2_ChannelH_2_ON_STR
 14307  002484  0100               	movlb	0	; () banked
 14308  002486  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14309  002488  0EF0               	movlw	high _Conf2_ChannelH_2_ON_STR
 14310  00248A  0100               	movlb	0	; () banked
 14311  00248C  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14312  00248E  0EAD               	movlw	low STR_157
 14313  002490  0100               	movlb	0	; () banked
 14314  002492  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14315  002494  0EF9               	movlw	high STR_157
 14316  002496  0100               	movlb	0	; () banked
 14317  002498  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14318  00249A  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14319                           
 14320                           ;Bluetooth.c: 1151: UARTcommandMenu(Conf2_ChannelH_2_OFF_STR, "RC-015*3 Channel H device
      +                           2 OFF");
 14321  00249E  0E3C               	movlw	low _Conf2_ChannelH_2_OFF_STR
 14322  0024A0  0100               	movlb	0	; () banked
 14323  0024A2  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14324  0024A4  0EF0               	movlw	high _Conf2_ChannelH_2_OFF_STR
 14325  0024A6  0100               	movlb	0	; () banked
 14326  0024A8  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14327  0024AA  0EB0               	movlw	low STR_158
 14328  0024AC  0100               	movlb	0	; () banked
 14329  0024AE  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14330  0024B0  0EF8               	movlw	high STR_158
 14331  0024B2  0100               	movlb	0	; () banked
 14332  0024B4  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14333  0024B6  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14334                           
 14335                           ;Bluetooth.c: 1152: UARTcommandMenu(Conf2_ChannelH_3_ON_STR, "RC-015*3 Channel H device 
      +                          3 ON");
 14336  0024BA  0E8E               	movlw	low _Conf2_ChannelH_3_ON_STR
 14337  0024BC  0100               	movlb	0	; () banked
 14338  0024BE  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14339  0024C0  0EF0               	movlw	high _Conf2_ChannelH_3_ON_STR
 14340  0024C2  0100               	movlb	0	; () banked
 14341  0024C4  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14342  0024C6  0ECC               	movlw	low STR_159
 14343  0024C8  0100               	movlb	0	; () banked
 14344  0024CA  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14345  0024CC  0EF9               	movlw	high STR_159
 14346  0024CE  0100               	movlb	0	; () banked
 14347  0024D0  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14348  0024D2  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14349                           
 14350                           ;Bluetooth.c: 1153: UARTcommandMenu(Conf2_ChannelH_3_OFF_STR, "RC-015*3 Channel H device
      +                           3 OFF");
 14351  0024D6  0E51               	movlw	low _Conf2_ChannelH_3_OFF_STR
 14352  0024D8  0100               	movlb	0	; () banked
 14353  0024DA  6F70               	movwf	UARTcommandMenu@Command& (0+255),b
 14354  0024DC  0EF0               	movlw	high _Conf2_ChannelH_3_OFF_STR
 14355  0024DE  0100               	movlb	0	; () banked
 14356  0024E0  6F71               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 14357  0024E2  0ED0               	movlw	low STR_160
 14358  0024E4  0100               	movlb	0	; () banked
 14359  0024E6  6F72               	movwf	UARTcommandMenu@Desc& (0+255),b
 14360  0024E8  0EF8               	movlw	high STR_160
 14361  0024EA  0100               	movlb	0	; () banked
 14362  0024EC  6F73               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 14363  0024EE  ECE4  F041         	call	_UARTcommandMenu	;wreg free
 14364                           
 14365                           ;Bluetooth.c: 1154: UARTstring_CONST(CRLN);
 14366  0024F2  0E05               	movlw	low _CRLN
 14367  0024F4  0100               	movlb	0	; () banked
 14368  0024F6  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 14369  0024F8  0EF2               	movlw	high _CRLN
 14370  0024FA  0100               	movlb	0	; () banked
 14371  0024FC  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14372  0024FE  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 14373                           
 14374                           ;Bluetooth.c: 1155: }
 14375  002502  0012               	return	
 14376  002504                     l12762:
 14377                           
 14378                           ;Bluetooth.c: 1156: else
 14379                           ;Bluetooth.c: 1157: {
 14380                           ;Bluetooth.c: 1158: UARTstringCRLN_CONST(SYNTAX_ERR);
 14381  002504  0EB9               	movlw	low _SYNTAX_ERR
 14382  002506  0100               	movlb	0	; () banked
 14383  002508  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14384  00250A  0EF1               	movlw	high _SYNTAX_ERR
 14385  00250C  0100               	movlb	0	; () banked
 14386  00250E  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14387  002510  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 14388                           
 14389                           ;Bluetooth.c: 1159: UARTstringCRLN_CONST("Enter ??? for Command Menu");
 14390  002514  0E46               	movlw	low STR_161
 14391  002516  0100               	movlb	0	; () banked
 14392  002518  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14393  00251A  0EFB               	movlw	high STR_161
 14394  00251C  0100               	movlb	0	; () banked
 14395  00251E  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14396  002520  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 14397                           
 14398                           ;Bluetooth.c: 1160: UARTstring_CONST(CRLN);
 14399  002524  0E05               	movlw	low _CRLN
 14400  002526  0100               	movlb	0	; () banked
 14401  002528  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 14402  00252A  0EF2               	movlw	high _CRLN
 14403  00252C  0100               	movlb	0	; () banked
 14404  00252E  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14405  002530  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 14406                           
 14407                           ;Bluetooth.c: 1161: return 0;
 14408                           ;	Return value of _UseBluetooth is never used
 14409  002534  0012               	return	
 14410                           
 14411                           ;Bluetooth.c: 1162: }
 14412                           ;Bluetooth.c: 1164: return 0;
 14413                           ;	Return value of _UseBluetooth is never used
 14414  002536  0012               	return		;funcret
 14415  002538                     __end_of_UseBluetooth:
 14416                           	opt stack 0
 14417                           tblptru	equ	0xFF8
 14418                           tblptrh	equ	0xFF7
 14419                           tblptrl	equ	0xFF6
 14420                           tablat	equ	0xFF5
 14421                           prodh	equ	0xFF4
 14422                           prodl	equ	0xFF3
 14423                           intcon	equ	0xFF2
 14424                           postinc0	equ	0xFEE
 14425                           plusw0	equ	0xFEB
 14426                           wreg	equ	0xFE8
 14427                           postdec1	equ	0xFE5
 14428                           fsr1l	equ	0xFE1
 14429                           indf2	equ	0xFDF
 14430                           postinc2	equ	0xFDE
 14431                           plusw2	equ	0xFDB
 14432                           fsr2h	equ	0xFDA
 14433                           fsr2l	equ	0xFD9
 14434                           status	equ	0xFD8
 14435                           
 14436 ;; *************** function _lowercaseString *****************
 14437 ;; Defined at:
 14438 ;;		line 356 in file "MISC.c"
 14439 ;; Parameters:    Size  Location     Type
 14440 ;;  Input           2    3[BANK0 ] PTR unsigned char 
 14441 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 14442 ;; Auto vars:     Size  Location     Type
 14443 ;;		None
 14444 ;; Return value:  Size  Location     Type
 14445 ;;		None               void
 14446 ;; Registers used:
 14447 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14448 ;; Tracked objects:
 14449 ;;		On entry : 0/0
 14450 ;;		On exit  : 0/0
 14451 ;;		Unchanged: 0/0
 14452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14453 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14455 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14456 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14457 ;;Total ram usage:        3 bytes
 14458 ;; Hardware stack levels used:    1
 14459 ;; Hardware stack levels required when called:    6
 14460 ;; This function calls:
 14461 ;;		Nothing
 14462 ;; This function is called by:
 14463 ;;		_UseBluetooth
 14464 ;; This function uses a non-reentrant model
 14465 ;;
 14466                           
 14467                           	psect	text6
 14468  009EC6                     __ptext6:
 14469                           	opt stack 0
 14470  009EC6                     _lowercaseString:
 14471                           	opt stack 23
 14472                           
 14473                           ;MISC.c: 358: while((*Input != 0))
 14474                           
 14475                           ;incstack = 0
 14476  009EC6  D019               	goto	l10996
 14477  009EC8                     l10988:
 14478                           
 14479                           ;MISC.c: 359: {
 14480                           ;MISC.c: 360: if((*Input >= 65) && (*Input <= 90 ))
 14481  009EC8  C063  FFD9         	movff	lowercaseString@Input,fsr2l
 14482  009ECC  C064  FFDA         	movff	lowercaseString@Input+1,fsr2h
 14483  009ED0  0E40               	movlw	64
 14484  009ED2  64DF               	cpfsgt	indf2,c
 14485  009ED4  D00E               	goto	l10994
 14486  009ED6  C063  FFD9         	movff	lowercaseString@Input,fsr2l
 14487  009EDA  C064  FFDA         	movff	lowercaseString@Input+1,fsr2h
 14488  009EDE  0E5B               	movlw	91
 14489  009EE0  60DF               	cpfslt	indf2,c
 14490  009EE2  D007               	goto	l10994
 14491                           
 14492                           ;MISC.c: 361: {
 14493                           ;MISC.c: 362: *Input += 32;
 14494  009EE4  C063  FFD9         	movff	lowercaseString@Input,fsr2l
 14495  009EE8  C064  FFDA         	movff	lowercaseString@Input+1,fsr2h
 14496  009EEC  0E20               	movlw	32
 14497  009EEE  26DF               	addwf	indf2,f,c
 14498  009EF0  D000               	goto	l10994
 14499  009EF2                     l10994:
 14500                           
 14501                           ;MISC.c: 363: }
 14502                           ;MISC.c: 364: Input++;
 14503  009EF2  0100               	movlb	0	; () banked
 14504  009EF4  4B63               	infsnz	lowercaseString@Input& (0+255),f,b
 14505  009EF6  2B64               	incf	(lowercaseString@Input+1)& (0+255),f,b
 14506  009EF8  D000               	goto	l10996
 14507  009EFA                     l10996:
 14508  009EFA  C063  FFD9         	movff	lowercaseString@Input,fsr2l
 14509  009EFE  C064  FFDA         	movff	lowercaseString@Input+1,fsr2h
 14510  009F02  50DF               	movf	indf2,w,c
 14511  009F04  A4D8               	btfss	status,2,c
 14512  009F06  D7E0               	goto	l10988
 14513  009F08  0012               	return		;funcret
 14514  009F0A                     __end_of_lowercaseString:
 14515                           	opt stack 0
 14516                           tblptru	equ	0xFF8
 14517                           tblptrh	equ	0xFF7
 14518                           tblptrl	equ	0xFF6
 14519                           tablat	equ	0xFF5
 14520                           prodh	equ	0xFF4
 14521                           prodl	equ	0xFF3
 14522                           intcon	equ	0xFF2
 14523                           postinc0	equ	0xFEE
 14524                           plusw0	equ	0xFEB
 14525                           wreg	equ	0xFE8
 14526                           postdec1	equ	0xFE5
 14527                           fsr1l	equ	0xFE1
 14528                           indf2	equ	0xFDF
 14529                           postinc2	equ	0xFDE
 14530                           plusw2	equ	0xFDB
 14531                           fsr2h	equ	0xFDA
 14532                           fsr2l	equ	0xFD9
 14533                           status	equ	0xFD8
 14534                           
 14535 ;; *************** function _WaitForIRsignal *****************
 14536 ;; Defined at:
 14537 ;;		line 1172 in file "Bluetooth.c"
 14538 ;; Parameters:    Size  Location     Type
 14539 ;;		None
 14540 ;; Auto vars:     Size  Location     Type
 14541 ;;  timeout         1   18[BANK0 ] unsigned char 
 14542 ;; Return value:  Size  Location     Type
 14543 ;;                  1    wreg      unsigned char 
 14544 ;; Registers used:
 14545 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14546 ;; Tracked objects:
 14547 ;;		On entry : 0/0
 14548 ;;		On exit  : 0/0
 14549 ;;		Unchanged: 0/0
 14550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14552 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14554 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14555 ;;Total ram usage:        1 bytes
 14556 ;; Hardware stack levels used:    1
 14557 ;; Hardware stack levels required when called:   10
 14558 ;; This function calls:
 14559 ;;		_LEDTimerON
 14560 ;;		_UARTchar_CONST
 14561 ;;		_UARTstringCRLN_CONST
 14562 ;;		_UARTstring_CONST
 14563 ;;		_delayUS
 14564 ;; This function is called by:
 14565 ;;		_UseBluetooth
 14566 ;; This function uses a non-reentrant model
 14567 ;;
 14568                           
 14569                           	psect	text7
 14570  00976C                     __ptext7:
 14571                           	opt stack 0
 14572  00976C                     _WaitForIRsignal:
 14573                           	opt stack 19
 14574                           
 14575                           ;Bluetooth.c: 1174: unsigned char timeout = 0;
 14576                           
 14577                           ;incstack = 0
 14578  00976C  0E00               	movlw	0
 14579  00976E  0100               	movlb	0	; () banked
 14580  009770  6F72               	movwf	WaitForIRsignal@timeout& (0+255),b
 14581                           
 14582                           ; BSR set to: 0
 14583                           ;Bluetooth.c: 1176: UARTstring_CONST(CRLN);
 14584  009772  0E05               	movlw	low _CRLN
 14585  009774  0100               	movlb	0	; () banked
 14586  009776  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 14587  009778  0EF2               	movlw	high _CRLN
 14588  00977A  0100               	movlb	0	; () banked
 14589  00977C  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14590  00977E  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 14591                           
 14592                           ;Bluetooth.c: 1177: UARTstring_CONST("Press Remote Control button");
 14593  009782  0EF4               	movlw	low STR_162
 14594  009784  0100               	movlb	0	; () banked
 14595  009786  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 14596  009788  0EFA               	movlw	high STR_162
 14597  00978A  0100               	movlb	0	; () banked
 14598  00978C  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14599  00978E  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 14600                           
 14601                           ;Bluetooth.c: 1178: timeout = 0;
 14602  009792  0E00               	movlw	0
 14603  009794  0100               	movlb	0	; () banked
 14604  009796  6F72               	movwf	WaitForIRsignal@timeout& (0+255),b
 14605                           
 14606                           ;Bluetooth.c: 1179: while(IR_New_Code != 1)
 14607  009798  D027               	goto	l11692
 14608  00979A                     l11680:
 14609                           
 14610                           ; BSR set to: 0
 14611                           ;Bluetooth.c: 1180: {
 14612                           ;Bluetooth.c: 1181: UARTchar_CONST('.');
 14613  00979A  0E2E               	movlw	46
 14614  00979C  EC5A  F050         	call	_UARTchar_CONST
 14615                           
 14616                           ;Bluetooth.c: 1182: delayUS(300000);
 14617  0097A0  0EE0               	movlw	224
 14618  0097A2  0100               	movlb	0	; () banked
 14619  0097A4  6F63               	movwf	delayUS@US& (0+255),b
 14620  0097A6  0E93               	movlw	147
 14621  0097A8  6F64               	movwf	(delayUS@US+1)& (0+255),b
 14622  0097AA  0E04               	movlw	4
 14623  0097AC  6F65               	movwf	(delayUS@US+2)& (0+255),b
 14624  0097AE  0E00               	movlw	0
 14625  0097B0  6F66               	movwf	(delayUS@US+3)& (0+255),b
 14626  0097B2  ECA0  F04E         	call	_delayUS	;wreg free
 14627                           
 14628                           ;Bluetooth.c: 1183: timeout++;
 14629  0097B6  0100               	movlb	0	; () banked
 14630  0097B8  2B72               	incf	WaitForIRsignal@timeout& (0+255),f,b
 14631                           
 14632                           ; BSR set to: 0
 14633                           ;Bluetooth.c: 1184: if(timeout > 25)
 14634  0097BA  0E19               	movlw	25
 14635  0097BC  0100               	movlb	0	; () banked
 14636  0097BE  6572               	cpfsgt	WaitForIRsignal@timeout& (0+255),b
 14637  0097C0  D013               	goto	l11692
 14638                           
 14639                           ; BSR set to: 0
 14640                           ;Bluetooth.c: 1185: {
 14641                           ;Bluetooth.c: 1186: UARTstring_CONST(CRLN);
 14642  0097C2  0E05               	movlw	low _CRLN
 14643  0097C4  0100               	movlb	0	; () banked
 14644  0097C6  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 14645  0097C8  0EF2               	movlw	high _CRLN
 14646  0097CA  0100               	movlb	0	; () banked
 14647  0097CC  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14648  0097CE  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 14649                           
 14650                           ;Bluetooth.c: 1187: UARTstringCRLN_CONST("Error: No remote button was pressed");
 14651  0097D2  0EE3               	movlw	low STR_163
 14652  0097D4  0100               	movlb	0	; () banked
 14653  0097D6  6F70               	movwf	UARTstringCRLN_CONST@data& (0+255),b
 14654  0097D8  0EF7               	movlw	high STR_163
 14655  0097DA  0100               	movlb	0	; () banked
 14656  0097DC  6F71               	movwf	(UARTstringCRLN_CONST@data+1)& (0+255),b
 14657  0097DE  EC85  F04F         	call	_UARTstringCRLN_CONST	;wreg free
 14658                           
 14659                           ;Bluetooth.c: 1188: return 0;
 14660  0097E2  0E00               	movlw	0
 14661  0097E4  0012               	return	
 14662  0097E6  D000               	goto	l11692
 14663  0097E8                     l11692:
 14664  0097E8  0100               	movlb	0	; () banked
 14665  0097EA  05FD               	decf	_IR_New_Code& (0+255),w,b
 14666  0097EC  A4D8               	btfss	status,2,c
 14667  0097EE  D7D5               	goto	l11680
 14668                           
 14669                           ; BSR set to: 0
 14670                           ;Bluetooth.c: 1189: }
 14671                           ;Bluetooth.c: 1190: }
 14672                           ;Bluetooth.c: 1191: (LATC |= 0x04);
 14673                           
 14674                           ; BSR set to: 0
 14675  0097F0  848B               	bsf	3979,2,c	;volatile
 14676                           
 14677                           ; BSR set to: 0
 14678                           ;Bluetooth.c: 1192: LEDTimerON();
 14679  0097F2  EC0F  F052         	call	_LEDTimerON	;wreg free
 14680                           
 14681                           ;Bluetooth.c: 1193: return 1;
 14682  0097F6  0E01               	movlw	1
 14683  0097F8  0012               	return	
 14684  0097FA  0012               	return		;funcret
 14685  0097FC                     __end_of_WaitForIRsignal:
 14686                           	opt stack 0
 14687                           tblptru	equ	0xFF8
 14688                           tblptrh	equ	0xFF7
 14689                           tblptrl	equ	0xFF6
 14690                           tablat	equ	0xFF5
 14691                           prodh	equ	0xFF4
 14692                           prodl	equ	0xFF3
 14693                           intcon	equ	0xFF2
 14694                           postinc0	equ	0xFEE
 14695                           plusw0	equ	0xFEB
 14696                           wreg	equ	0xFE8
 14697                           postdec1	equ	0xFE5
 14698                           fsr1l	equ	0xFE1
 14699                           indf2	equ	0xFDF
 14700                           postinc2	equ	0xFDE
 14701                           plusw2	equ	0xFDB
 14702                           fsr2h	equ	0xFDA
 14703                           fsr2l	equ	0xFD9
 14704                           status	equ	0xFD8
 14705                           
 14706 ;; *************** function _UARTstringCRLN_CONST *****************
 14707 ;; Defined at:
 14708 ;;		line 316 in file "UART.c"
 14709 ;; Parameters:    Size  Location     Type
 14710 ;;  data            2   16[BANK0 ] PTR const unsigned char 
 14711 ;;		 -> STR_163(36), STR_161(27), STR_147(13), STR_116(13), 
 14712 ;;		 -> STR_113(21), STR_104(17), STR_100(5), STR_97(23), 
 14713 ;;		 -> STR_96(29), STR_91(24), STR_90(34), STR_89(44), 
 14714 ;;		 -> STR_88(18), STR_86(44), STR_85(46), STR_82(46), 
 14715 ;;		 -> STR_79(29), STR_78(18), STR_77(29), STR_74(44), 
 14716 ;;		 -> STR_69(46), STR_68(42), STR_67(50), STR_66(50), 
 14717 ;;		 -> STR_64(31), STR_63(31), STR_62(37), STR_61(37), 
 14718 ;;		 -> STR_60(37), STR_56(18), STR_55(14), STR_54(9), 
 14719 ;;		 -> STR_53(20), STR_52(16), STR_51(7), STR_50(35), 
 14720 ;;		 -> STR_49(37), STR_46(47), STR_41(17), STR_40(9), 
 14721 ;;		 -> STR_39(18), STR_38(9), STR_37(22), STR_36(11), 
 14722 ;;		 -> STR_35(20), STR_34(7), STR_33(31), STR_31(33), 
 14723 ;;		 -> STR_27(32), STR_23(31), STR_22(31), STR_20(29), 
 14724 ;;		 -> STR_18(29), SYNTAX_ERR(14), STR_1(16), ProjectName(26), 
 14725 ;; Auto vars:     Size  Location     Type
 14726 ;;		None
 14727 ;; Return value:  Size  Location     Type
 14728 ;;		None               void
 14729 ;; Registers used:
 14730 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14731 ;; Tracked objects:
 14732 ;;		On entry : 0/0
 14733 ;;		On exit  : 0/0
 14734 ;;		Unchanged: 0/0
 14735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14736 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14739 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14740 ;;Total ram usage:        2 bytes
 14741 ;; Hardware stack levels used:    1
 14742 ;; Hardware stack levels required when called:    9
 14743 ;; This function calls:
 14744 ;;		_UARTchar_CONST
 14745 ;;		_UARTstring_CONST
 14746 ;; This function is called by:
 14747 ;;		_main
 14748 ;;		_UseBluetooth
 14749 ;;		_WaitForIRsignal
 14750 ;; This function uses a non-reentrant model
 14751 ;;
 14752                           
 14753                           	psect	text8
 14754  009F0A                     __ptext8:
 14755                           	opt stack 0
 14756  009F0A                     _UARTstringCRLN_CONST:
 14757                           	opt stack 19
 14758                           
 14759                           ;UART.c: 318: while(*data != 0)
 14760                           
 14761                           ;incstack = 0
 14762  009F0A  D00D               	goto	l10076
 14763  009F0C                     l10072:
 14764                           
 14765                           ;UART.c: 319: {
 14766                           ;UART.c: 320: UARTchar_CONST(*data);
 14767  009F0C  C070  FFF6         	movff	UARTstringCRLN_CONST@data,tblptrl
 14768  009F10  C071  FFF7         	movff	UARTstringCRLN_CONST@data+1,tblptrh
 14769  009F14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14770  009F14  6AF8               	clrf	tblptru,c
 14771  009F16                     	endif
 14772  009F16                     	if	0	;tblptru may be non-zero
 14773  009F16                     	endif
 14774  009F16  0008               	tblrd		*
 14775  009F18  50F5               	movf	tablat,w,c
 14776  009F1A  EC5A  F050         	call	_UARTchar_CONST
 14777                           
 14778                           ;UART.c: 321: *data++;
 14779  009F1E  0100               	movlb	0	; () banked
 14780  009F20  4B70               	infsnz	UARTstringCRLN_CONST@data& (0+255),f,b
 14781  009F22  2B71               	incf	(UARTstringCRLN_CONST@data+1)& (0+255),f,b
 14782  009F24  D000               	goto	l10076
 14783  009F26                     l10076:
 14784  009F26  C070  FFF6         	movff	UARTstringCRLN_CONST@data,tblptrl
 14785  009F2A  C071  FFF7         	movff	UARTstringCRLN_CONST@data+1,tblptrh
 14786  009F2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14787  009F2E  6AF8               	clrf	tblptru,c
 14788  009F30                     	endif
 14789  009F30                     	if	0	;tblptru may be non-zero
 14790  009F30                     	endif
 14791  009F30  0008               	tblrd		*
 14792  009F32  50F5               	movf	tablat,w,c
 14793  009F34  0900               	iorlw	0
 14794  009F36  A4D8               	btfss	status,2,c
 14795  009F38  D7E9               	goto	l10072
 14796                           
 14797                           ;UART.c: 322: }
 14798                           ;UART.c: 323: UARTstring_CONST(CRLN);
 14799  009F3A  0E05               	movlw	low _CRLN
 14800  009F3C  0100               	movlb	0	; () banked
 14801  009F3E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 14802  009F40  0EF2               	movlw	high _CRLN
 14803  009F42  0100               	movlb	0	; () banked
 14804  009F44  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14805  009F46  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 14806  009F4A  0012               	return		;funcret
 14807  009F4C                     __end_of_UARTstringCRLN_CONST:
 14808                           	opt stack 0
 14809                           tblptru	equ	0xFF8
 14810                           tblptrh	equ	0xFF7
 14811                           tblptrl	equ	0xFF6
 14812                           tablat	equ	0xFF5
 14813                           prodh	equ	0xFF4
 14814                           prodl	equ	0xFF3
 14815                           intcon	equ	0xFF2
 14816                           postinc0	equ	0xFEE
 14817                           plusw0	equ	0xFEB
 14818                           wreg	equ	0xFE8
 14819                           postdec1	equ	0xFE5
 14820                           fsr1l	equ	0xFE1
 14821                           indf2	equ	0xFDF
 14822                           postinc2	equ	0xFDE
 14823                           plusw2	equ	0xFDB
 14824                           fsr2h	equ	0xFDA
 14825                           fsr2l	equ	0xFD9
 14826                           status	equ	0xFD8
 14827                           
 14828 ;; *************** function _UARTstringCRLN *****************
 14829 ;; Defined at:
 14830 ;;		line 300 in file "UART.c"
 14831 ;; Parameters:    Size  Location     Type
 14832 ;;  data            2   16[BANK0 ] PTR unsigned char 
 14833 ;;		 -> UseBluetooth@buf(100), BluetoothFirmware2(30), BluetoothFirmware1(30), 
 14834 ;; Auto vars:     Size  Location     Type
 14835 ;;		None
 14836 ;; Return value:  Size  Location     Type
 14837 ;;		None               void
 14838 ;; Registers used:
 14839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14840 ;; Tracked objects:
 14841 ;;		On entry : 0/0
 14842 ;;		On exit  : 0/0
 14843 ;;		Unchanged: 0/0
 14844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14845 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14848 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14849 ;;Total ram usage:        2 bytes
 14850 ;; Hardware stack levels used:    1
 14851 ;; Hardware stack levels required when called:    9
 14852 ;; This function calls:
 14853 ;;		_UARTchar
 14854 ;;		_UARTstring_CONST
 14855 ;; This function is called by:
 14856 ;;		_UseBluetooth
 14857 ;; This function uses a non-reentrant model
 14858 ;;
 14859                           
 14860                           	psect	text9
 14861  00A044                     __ptext9:
 14862                           	opt stack 0
 14863  00A044                     _UARTstringCRLN:
 14864                           	opt stack 20
 14865                           
 14866                           ;UART.c: 302: while(*data != 0)
 14867                           
 14868                           ;incstack = 0
 14869  00A044  D00B               	goto	l11470
 14870  00A046                     l11466:
 14871                           
 14872                           ;UART.c: 303: {
 14873                           ;UART.c: 304: UARTchar(*data);
 14874  00A046  C070  FFD9         	movff	UARTstringCRLN@data,fsr2l
 14875  00A04A  C071  FFDA         	movff	UARTstringCRLN@data+1,fsr2h
 14876  00A04E  50DF               	movf	indf2,w,c
 14877  00A050  EC76  F050         	call	_UARTchar
 14878                           
 14879                           ;UART.c: 305: *data++;
 14880  00A054  0100               	movlb	0	; () banked
 14881  00A056  4B70               	infsnz	UARTstringCRLN@data& (0+255),f,b
 14882  00A058  2B71               	incf	(UARTstringCRLN@data+1)& (0+255),f,b
 14883  00A05A  D000               	goto	l11470
 14884  00A05C                     l11470:
 14885  00A05C  C070  FFD9         	movff	UARTstringCRLN@data,fsr2l
 14886  00A060  C071  FFDA         	movff	UARTstringCRLN@data+1,fsr2h
 14887  00A064  50DF               	movf	indf2,w,c
 14888  00A066  A4D8               	btfss	status,2,c
 14889  00A068  D7EE               	goto	l11466
 14890                           
 14891                           ;UART.c: 306: }
 14892                           ;UART.c: 307: UARTstring_CONST(CRLN);
 14893  00A06A  0E05               	movlw	low _CRLN
 14894  00A06C  0100               	movlb	0	; () banked
 14895  00A06E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 14896  00A070  0EF2               	movlw	high _CRLN
 14897  00A072  0100               	movlb	0	; () banked
 14898  00A074  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 14899  00A076  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 14900  00A07A  0012               	return		;funcret
 14901  00A07C                     __end_of_UARTstringCRLN:
 14902                           	opt stack 0
 14903                           tblptru	equ	0xFF8
 14904                           tblptrh	equ	0xFF7
 14905                           tblptrl	equ	0xFF6
 14906                           tablat	equ	0xFF5
 14907                           prodh	equ	0xFF4
 14908                           prodl	equ	0xFF3
 14909                           intcon	equ	0xFF2
 14910                           postinc0	equ	0xFEE
 14911                           plusw0	equ	0xFEB
 14912                           wreg	equ	0xFE8
 14913                           postdec1	equ	0xFE5
 14914                           fsr1l	equ	0xFE1
 14915                           indf2	equ	0xFDF
 14916                           postinc2	equ	0xFDE
 14917                           plusw2	equ	0xFDB
 14918                           fsr2h	equ	0xFDA
 14919                           fsr2l	equ	0xFD9
 14920                           status	equ	0xFD8
 14921                           
 14922 ;; *************** function _UARTcommandMenu *****************
 14923 ;; Defined at:
 14924 ;;		line 332 in file "UART.c"
 14925 ;; Parameters:    Size  Location     Type
 14926 ;;  Command         2   16[BANK0 ] PTR const unsigned char 
 14927 ;;		 -> STR_145(5), STR_143(13), STR_141(13), STR_139(13), 
 14928 ;;		 -> STR_137(13), STR_135(13), STR_133(13), STR_131(11), 
 14929 ;;		 -> STR_129(11), STR_127(11), STR_125(11), STR_123(11), 
 14930 ;;		 -> STR_121(11), STR_114(8), STR_111(10), STR_109(8), 
 14931 ;;		 -> STR_107(6), STR_105(4), Conf2_ChannelH_3_OFF_STR(21), Conf2_ChannelH_3_ON_STR(20), 
 14932 ;;		 -> Conf2_ChannelH_2_OFF_STR(21), Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR(21), Conf2_ChannelH_1_ON_STR
      +(20), 
 14933 ;;		 -> Conf2_ChannelD_OFF_STR(19), Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), Conf2_ChannelB_ON_STR(18), 
 14934 ;;		 -> Conf1_ChannelF_STR(15), Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), UseBluetooth@buf(100), 
 14935 ;;  Desc            2   18[BANK0 ] PTR const unsigned char 
 14936 ;;		 -> STR_160(32), STR_159(31), STR_158(32), STR_157(31), 
 14937 ;;		 -> STR_156(32), STR_155(31), STR_154(20), STR_153(19), 
 14938 ;;		 -> STR_152(23), STR_151(22), STR_150(19), STR_149(19), 
 14939 ;;		 -> STR_148(19), STR_146(40), STR_144(46), STR_142(46), 
 14940 ;;		 -> STR_140(46), STR_138(46), STR_136(46), STR_134(46), 
 14941 ;;		 -> STR_132(49), STR_130(49), STR_128(49), STR_126(49), 
 14942 ;;		 -> STR_124(49), STR_122(49), STR_120(24), STR_118(25), 
 14943 ;;		 -> STR_115(28), STR_112(22), STR_110(35), STR_108(32), 
 14944 ;;		 -> STR_106(10), 
 14945 ;; Auto vars:     Size  Location     Type
 14946 ;;  place           1   26[BANK0 ] unsigned char 
 14947 ;;  i               1   25[BANK0 ] unsigned char 
 14948 ;; Return value:  Size  Location     Type
 14949 ;;		None               void
 14950 ;; Registers used:
 14951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14952 ;; Tracked objects:
 14953 ;;		On entry : 0/0
 14954 ;;		On exit  : 0/0
 14955 ;;		Unchanged: 0/0
 14956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14957 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14958 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14959 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14960 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14961 ;;Total ram usage:       11 bytes
 14962 ;; Hardware stack levels used:    1
 14963 ;; Hardware stack levels required when called:    9
 14964 ;; This function calls:
 14965 ;;		_UARTchar
 14966 ;;		_UARTstring_CONST
 14967 ;; This function is called by:
 14968 ;;		_UseBluetooth
 14969 ;; This function uses a non-reentrant model
 14970 ;;
 14971                           
 14972                           	psect	text10
 14973  0083C8                     __ptext10:
 14974                           	opt stack 0
 14975  0083C8                     _UARTcommandMenu:
 14976                           	opt stack 20
 14977                           
 14978                           ;UART.c: 334: unsigned char place = 0;
 14979                           
 14980                           ;incstack = 0
 14981  0083C8  0E00               	movlw	0
 14982  0083CA  0100               	movlb	0	; () banked
 14983  0083CC  6F7A               	movwf	UARTcommandMenu@place& (0+255),b
 14984                           
 14985                           ;UART.c: 335: unsigned char i;
 14986                           ;UART.c: 337: while((*Command != 0) && (place < 30))
 14987  0083CE  D019               	goto	l11482
 14988  0083D0                     l11476:
 14989                           
 14990                           ; BSR set to: 0
 14991                           ;UART.c: 338: {
 14992                           ;UART.c: 339: UARTchar(*Command);
 14993  0083D0  C070  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 14994  0083D4  C071  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 14995  0083D8  0E00               	movlw	low (__mediumconst shr (0+16))
 14996  0083DA  6EF8               	movwf	tblptru,c
 14997  0083DC  0E0F               	movlw	(high __ramtop+-1)
 14998  0083DE  64F7               	cpfsgt	tblptrh,c
 14999  0083E0  D003               	bra	u12937
 15000  0083E2  0008               	tblrd		*
 15001  0083E4  50F5               	movf	tablat,w,c
 15002  0083E6  D005               	bra	u12930
 15003  0083E8                     u12937:
 15004  0083E8  CFF6 FFE9          	movff	tblptrl,fsr0l
 15005  0083EC  CFF7 FFEA          	movff	tblptrh,fsr0h
 15006  0083F0  50EF               	movf	indf0,w,c
 15007  0083F2                     u12930:
 15008  0083F2  EC76  F050         	call	_UARTchar
 15009                           
 15010                           ;UART.c: 340: *Command++;
 15011  0083F6  0100               	movlb	0	; () banked
 15012  0083F8  4B70               	infsnz	UARTcommandMenu@Command& (0+255),f,b
 15013  0083FA  2B71               	incf	(UARTcommandMenu@Command+1)& (0+255),f,b
 15014                           
 15015                           ; BSR set to: 0
 15016                           ;UART.c: 341: place++;
 15017  0083FC  0100               	movlb	0	; () banked
 15018  0083FE  2B7A               	incf	UARTcommandMenu@place& (0+255),f,b
 15019  008400  D000               	goto	l11482
 15020  008402                     l11482:
 15021                           
 15022                           ; BSR set to: 0
 15023  008402  C070  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 15024  008406  C071  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 15025  00840A  0E00               	movlw	low (__mediumconst shr (0+16))
 15026  00840C  6EF8               	movwf	tblptru,c
 15027  00840E  0E0F               	movlw	(high __ramtop+-1)
 15028  008410  64F7               	cpfsgt	tblptrh,c
 15029  008412  D003               	bra	u12947
 15030  008414  0008               	tblrd		*
 15031  008416  50F5               	movf	tablat,w,c
 15032  008418  D005               	bra	u12940
 15033  00841A                     u12947:
 15034  00841A  CFF6 FFE9          	movff	tblptrl,fsr0l
 15035  00841E  CFF7 FFEA          	movff	tblptrh,fsr0h
 15036  008422  50EF               	movf	indf0,w,c
 15037  008424                     u12940:
 15038  008424  0900               	iorlw	0
 15039  008426  B4D8               	btfsc	status,2,c
 15040  008428  D005               	goto	l11486
 15041  00842A  0E1D               	movlw	29
 15042  00842C  0100               	movlb	0	; () banked
 15043  00842E  657A               	cpfsgt	UARTcommandMenu@place& (0+255),b
 15044  008430  D7CF               	goto	l11476
 15045                           
 15046                           ; BSR set to: 0
 15047  008432  D000               	goto	l11486
 15048  008434                     l11486:
 15049                           
 15050                           ;UART.c: 342: }
 15051                           ;UART.c: 343: for(i =0; i < ((30 - place) + 1); i++)
 15052  008434  0E00               	movlw	0
 15053  008436  0100               	movlb	0	; () banked
 15054  008438  6F79               	movwf	UARTcommandMenu@i& (0+255),b
 15055  00843A  D006               	goto	l11492
 15056  00843C                     l11488:
 15057                           
 15058                           ; BSR set to: 0
 15059                           ;UART.c: 344: {
 15060                           ;UART.c: 345: UARTchar('-');
 15061  00843C  0E2D               	movlw	45
 15062  00843E  EC76  F050         	call	_UARTchar
 15063  008442  0100               	movlb	0	; () banked
 15064  008444  2B79               	incf	UARTcommandMenu@i& (0+255),f,b
 15065  008446  D000               	goto	l11492
 15066  008448                     l11492:
 15067                           
 15068                           ; BSR set to: 0
 15069  008448  0100               	movlb	0	; () banked
 15070  00844A  517A               	movf	UARTcommandMenu@place& (0+255),w,b
 15071  00844C  0100               	movlb	0	; () banked
 15072  00844E  6F74               	movwf	??_UARTcommandMenu& (0+255),b
 15073  008450  6B75               	clrf	(??_UARTcommandMenu+1)& (0+255),b
 15074  008452  0100               	movlb	0	; () banked
 15075  008454  1F74               	comf	??_UARTcommandMenu& (0+255),f,b
 15076  008456  1F75               	comf	(??_UARTcommandMenu+1)& (0+255),f,b
 15077  008458  4B74               	infsnz	??_UARTcommandMenu& (0+255),f,b
 15078  00845A  2B75               	incf	(??_UARTcommandMenu+1)& (0+255),f,b
 15079  00845C  0E1F               	movlw	31
 15080  00845E  0100               	movlb	0	; () banked
 15081  008460  2774               	addwf	??_UARTcommandMenu& (0+255),f,b
 15082  008462  0E00               	movlw	0
 15083  008464  2375               	addwfc	(??_UARTcommandMenu+1)& (0+255),f,b
 15084  008466  0100               	movlb	0	; () banked
 15085  008468  5179               	movf	UARTcommandMenu@i& (0+255),w,b
 15086  00846A  0100               	movlb	0	; () banked
 15087  00846C  6F76               	movwf	(??_UARTcommandMenu+2)& (0+255),b
 15088  00846E  6B77               	clrf	(??_UARTcommandMenu+3)& (0+255),b
 15089  008470  0100               	movlb	0	; () banked
 15090  008472  5174               	movf	??_UARTcommandMenu& (0+255),w,b
 15091  008474  0100               	movlb	0	; () banked
 15092  008476  5D76               	subwf	(??_UARTcommandMenu+2)& (0+255),w,b
 15093  008478  0100               	movlb	0	; () banked
 15094  00847A  5177               	movf	(??_UARTcommandMenu+3)& (0+255),w,b
 15095  00847C  0A80               	xorlw	128
 15096  00847E  0100               	movlb	0	; () banked
 15097  008480  6F78               	movwf	(??_UARTcommandMenu+4)& (0+255),b
 15098  008482  0100               	movlb	0	; () banked
 15099  008484  5175               	movf	(??_UARTcommandMenu+1)& (0+255),w,b
 15100  008486  0A80               	xorlw	128
 15101  008488  0100               	movlb	0	; () banked
 15102  00848A  5978               	subwfb	(??_UARTcommandMenu+4)& (0+255),w,b
 15103  00848C  A0D8               	btfss	status,0,c
 15104  00848E  D7D6               	goto	l11488
 15105                           
 15106                           ; BSR set to: 0
 15107                           ;UART.c: 346: }
 15108                           ;UART.c: 347: place = 0;
 15109                           
 15110                           ; BSR set to: 0
 15111  008490  0E00               	movlw	0
 15112  008492  0100               	movlb	0	; () banked
 15113  008494  6F7A               	movwf	UARTcommandMenu@place& (0+255),b
 15114                           
 15115                           ;UART.c: 348: while((*Desc != 0) && (place < (50 - 1)))
 15116  008496  D00F               	goto	l11502
 15117  008498                     l11496:
 15118                           
 15119                           ; BSR set to: 0
 15120                           ;UART.c: 349: {
 15121                           ;UART.c: 350: UARTchar(*Desc);
 15122  008498  C072  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 15123  00849C  C073  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 15124  0084A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15125  0084A0  6AF8               	clrf	tblptru,c
 15126  0084A2                     	endif
 15127  0084A2                     	if	0	;tblptru may be non-zero
 15128  0084A2                     	endif
 15129  0084A2  0008               	tblrd		*
 15130  0084A4  50F5               	movf	tablat,w,c
 15131  0084A6  EC76  F050         	call	_UARTchar
 15132                           
 15133                           ;UART.c: 351: *Desc++;
 15134  0084AA  0100               	movlb	0	; () banked
 15135  0084AC  4B72               	infsnz	UARTcommandMenu@Desc& (0+255),f,b
 15136  0084AE  2B73               	incf	(UARTcommandMenu@Desc+1)& (0+255),f,b
 15137                           
 15138                           ; BSR set to: 0
 15139                           ;UART.c: 352: place++;
 15140  0084B0  0100               	movlb	0	; () banked
 15141  0084B2  2B7A               	incf	UARTcommandMenu@place& (0+255),f,b
 15142  0084B4  D000               	goto	l11502
 15143  0084B6                     l11502:
 15144                           
 15145                           ; BSR set to: 0
 15146  0084B6  C072  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 15147  0084BA  C073  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 15148  0084BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15149  0084BE  6AF8               	clrf	tblptru,c
 15150  0084C0                     	endif
 15151  0084C0                     	if	0	;tblptru may be non-zero
 15152  0084C0                     	endif
 15153  0084C0  0008               	tblrd		*
 15154  0084C2  50F5               	movf	tablat,w,c
 15155  0084C4  0900               	iorlw	0
 15156  0084C6  B4D8               	btfsc	status,2,c
 15157  0084C8  D005               	goto	l11506
 15158                           
 15159                           ; BSR set to: 0
 15160  0084CA  0E30               	movlw	48
 15161  0084CC  0100               	movlb	0	; () banked
 15162  0084CE  657A               	cpfsgt	UARTcommandMenu@place& (0+255),b
 15163  0084D0  D7E3               	goto	l11496
 15164                           
 15165                           ; BSR set to: 0
 15166  0084D2  D000               	goto	l11506
 15167  0084D4                     l11506:
 15168                           
 15169                           ; BSR set to: 0
 15170                           ;UART.c: 353: }
 15171                           ;UART.c: 354: UARTstring_CONST(CRLN);
 15172  0084D4  0E05               	movlw	low _CRLN
 15173  0084D6  0100               	movlb	0	; () banked
 15174  0084D8  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 15175  0084DA  0EF2               	movlw	high _CRLN
 15176  0084DC  0100               	movlb	0	; () banked
 15177  0084DE  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 15178  0084E0  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 15179  0084E4  0012               	return		;funcret
 15180  0084E6                     __end_of_UARTcommandMenu:
 15181                           	opt stack 0
 15182                           tblptru	equ	0xFF8
 15183                           tblptrh	equ	0xFF7
 15184                           tblptrl	equ	0xFF6
 15185                           tablat	equ	0xFF5
 15186                           prodh	equ	0xFF4
 15187                           prodl	equ	0xFF3
 15188                           intcon	equ	0xFF2
 15189                           indf0	equ	0xFEF
 15190                           postinc0	equ	0xFEE
 15191                           plusw0	equ	0xFEB
 15192                           fsr0h	equ	0xFEA
 15193                           fsr0l	equ	0xFE9
 15194                           wreg	equ	0xFE8
 15195                           postdec1	equ	0xFE5
 15196                           fsr1l	equ	0xFE1
 15197                           indf2	equ	0xFDF
 15198                           postinc2	equ	0xFDE
 15199                           plusw2	equ	0xFDB
 15200                           fsr2h	equ	0xFDA
 15201                           fsr2l	equ	0xFD9
 15202                           status	equ	0xFD8
 15203                           
 15204 ;; *************** function _StringMatchCaseInsensitive *****************
 15205 ;; Defined at:
 15206 ;;		line 217 in file "MISC.c"
 15207 ;; Parameters:    Size  Location     Type
 15208 ;;  This            2    6[BANK0 ] PTR const unsigned char 
 15209 ;;		 -> main@BluetoothString(100), 
 15210 ;;  That            2    8[BANK0 ] PTR const unsigned char 
 15211 ;;		 -> STR_94(8), STR_92(8), STR_80(10), STR_75(6), 
 15212 ;;		 -> Conf2_ChannelH_3_OFF_STR(21), Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), Conf2_ChannelH_2_ON_STR
      +(20), 
 15213 ;;		 -> Conf2_ChannelH_1_OFF_STR(21), Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(19), Conf2_ChannelD_ON_STR(18)
      +, 
 15214 ;;		 -> Conf2_ChannelB_OFF_STR(19), Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), Conf1_ChannelE_STR(15), 
 15215 ;;		 -> Conf1_ChannelD_STR(15), 
 15216 ;; Auto vars:     Size  Location     Type
 15217 ;;  tempThat        1   11[BANK0 ] unsigned char 
 15218 ;;  tempThis        1   10[BANK0 ] unsigned char 
 15219 ;; Return value:  Size  Location     Type
 15220 ;;                  1    wreg      unsigned char 
 15221 ;; Registers used:
 15222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15223 ;; Tracked objects:
 15224 ;;		On entry : 0/0
 15225 ;;		On exit  : 0/0
 15226 ;;		Unchanged: 0/0
 15227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15228 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15231 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15232 ;;Total ram usage:        6 bytes
 15233 ;; Hardware stack levels used:    1
 15234 ;; Hardware stack levels required when called:    7
 15235 ;; This function calls:
 15236 ;;		_lowercaseChar
 15237 ;; This function is called by:
 15238 ;;		_UseBluetooth
 15239 ;; This function uses a non-reentrant model
 15240 ;;
 15241                           
 15242                           	psect	text11
 15243  0096D8                     __ptext11:
 15244                           	opt stack 0
 15245  0096D8                     _StringMatchCaseInsensitive:
 15246                           	opt stack 22
 15247                           
 15248                           ;MISC.c: 219: unsigned char tempThis,
 15249                           ;MISC.c: 220: tempThat;
 15250                           ;MISC.c: 222: while(*This != 0)
 15251                           
 15252                           ;incstack = 0
 15253  0096D8  D033               	goto	l10972
 15254  0096DA                     l10954:
 15255                           
 15256                           ;MISC.c: 223: {
 15257                           ;MISC.c: 224: tempThis = *This;
 15258  0096DA  C066  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 15259  0096DE  C067  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 15260  0096E2  50DF               	movf	indf2,w,c
 15261  0096E4  0100               	movlb	0	; () banked
 15262  0096E6  6F6A               	movwf	StringMatchCaseInsensitive@tempThis& (0+255),b
 15263                           
 15264                           ; BSR set to: 0
 15265                           ;MISC.c: 225: tempThat = *That;
 15266  0096E8  C068  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 15267  0096EC  C069  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 15268  0096F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15269  0096F0  6AF8               	clrf	tblptru,c
 15270  0096F2                     	endif
 15271  0096F2                     	if	0	;tblptru may be non-zero
 15272  0096F2                     	endif
 15273  0096F2  0008               	tblrd		*
 15274  0096F4  CFF5 F06B          	movff	tablat,StringMatchCaseInsensitive@tempThat
 15275                           
 15276                           ; BSR set to: 0
 15277                           ;MISC.c: 226: lowercaseChar(&tempThis);
 15278  0096F8  0E6A               	movlw	low StringMatchCaseInsensitive@tempThis
 15279  0096FA  0100               	movlb	0	; () banked
 15280  0096FC  6F63               	movwf	lowercaseChar@Input& (0+255),b
 15281  0096FE  0E00               	movlw	high StringMatchCaseInsensitive@tempThis
 15282  009700  0100               	movlb	0	; () banked
 15283  009702  6F64               	movwf	(lowercaseChar@Input+1)& (0+255),b
 15284  009704  EC37  F051         	call	_lowercaseChar	;wreg free
 15285                           
 15286                           ;MISC.c: 227: lowercaseChar(&tempThat);
 15287  009708  0E6B               	movlw	low StringMatchCaseInsensitive@tempThat
 15288  00970A  0100               	movlb	0	; () banked
 15289  00970C  6F63               	movwf	lowercaseChar@Input& (0+255),b
 15290  00970E  0E00               	movlw	high StringMatchCaseInsensitive@tempThat
 15291  009710  0100               	movlb	0	; () banked
 15292  009712  6F64               	movwf	(lowercaseChar@Input+1)& (0+255),b
 15293  009714  EC37  F051         	call	_lowercaseChar	;wreg free
 15294                           
 15295                           ;MISC.c: 229: if((tempThis != tempThat) || (tempThat == 0))
 15296  009718  0100               	movlb	0	; () banked
 15297  00971A  516B               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 15298  00971C  0100               	movlb	0	; () banked
 15299  00971E  196A               	xorwf	StringMatchCaseInsensitive@tempThis& (0+255),w,b
 15300  009720  A4D8               	btfss	status,2,c
 15301  009722  D005               	goto	l10966
 15302                           
 15303                           ; BSR set to: 0
 15304  009724  0100               	movlb	0	; () banked
 15305  009726  516B               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 15306  009728  0100               	movlb	0	; () banked
 15307  00972A  A4D8               	btfss	status,2,c
 15308  00972C  D002               	goto	l10970
 15309  00972E                     l10966:
 15310                           
 15311                           ; BSR set to: 0
 15312                           ;MISC.c: 230: {
 15313                           ;MISC.c: 231: return 0;
 15314  00972E  0E00               	movlw	0
 15315                           
 15316                           ; BSR set to: 0
 15317  009730  0012               	return	
 15318  009732                     l10970:
 15319                           
 15320                           ; BSR set to: 0
 15321                           ;MISC.c: 232: }
 15322                           ;MISC.c: 233: This++;
 15323  009732  0100               	movlb	0	; () banked
 15324  009734  4B66               	infsnz	StringMatchCaseInsensitive@This& (0+255),f,b
 15325  009736  2B67               	incf	(StringMatchCaseInsensitive@This+1)& (0+255),f,b
 15326                           
 15327                           ;MISC.c: 234: That++;
 15328  009738  0100               	movlb	0	; () banked
 15329  00973A  4B68               	infsnz	StringMatchCaseInsensitive@That& (0+255),f,b
 15330  00973C  2B69               	incf	(StringMatchCaseInsensitive@That+1)& (0+255),f,b
 15331  00973E  D000               	goto	l10972
 15332  009740                     l10972:
 15333  009740  C066  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 15334  009744  C067  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 15335  009748  50DF               	movf	indf2,w,c
 15336  00974A  A4D8               	btfss	status,2,c
 15337  00974C  D7C6               	goto	l10954
 15338                           
 15339                           ;MISC.c: 235: }
 15340                           ;MISC.c: 236: if(*That == 0)
 15341  00974E  C068  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 15342  009752  C069  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 15343  009756                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15344  009756  6AF8               	clrf	tblptru,c
 15345  009758                     	endif
 15346  009758                     	if	0	;tblptru may be non-zero
 15347  009758                     	endif
 15348  009758  0008               	tblrd		*
 15349  00975A  50F5               	movf	tablat,w,c
 15350  00975C  0900               	iorlw	0
 15351  00975E  A4D8               	btfss	status,2,c
 15352  009760  D002               	goto	l10982
 15353                           
 15354                           ;MISC.c: 237: {
 15355                           ;MISC.c: 238: return 1;
 15356  009762  0E01               	movlw	1
 15357                           
 15358                           ;MISC.c: 239: }
 15359  009764  0012               	return	
 15360  009766                     l10982:
 15361                           
 15362                           ;MISC.c: 240: else
 15363                           ;MISC.c: 241: {
 15364                           ;MISC.c: 242: return 0;
 15365  009766  0E00               	movlw	0
 15366  009768  0012               	return	
 15367  00976A  0012               	return		;funcret
 15368  00976C                     __end_of_StringMatchCaseInsensitive:
 15369                           	opt stack 0
 15370                           tblptru	equ	0xFF8
 15371                           tblptrh	equ	0xFF7
 15372                           tblptrl	equ	0xFF6
 15373                           tablat	equ	0xFF5
 15374                           prodh	equ	0xFF4
 15375                           prodl	equ	0xFF3
 15376                           intcon	equ	0xFF2
 15377                           indf0	equ	0xFEF
 15378                           postinc0	equ	0xFEE
 15379                           plusw0	equ	0xFEB
 15380                           fsr0h	equ	0xFEA
 15381                           fsr0l	equ	0xFE9
 15382                           wreg	equ	0xFE8
 15383                           postdec1	equ	0xFE5
 15384                           fsr1l	equ	0xFE1
 15385                           indf2	equ	0xFDF
 15386                           postinc2	equ	0xFDE
 15387                           plusw2	equ	0xFDB
 15388                           fsr2h	equ	0xFDA
 15389                           fsr2l	equ	0xFD9
 15390                           status	equ	0xFD8
 15391                           
 15392 ;; *************** function _StringMatch *****************
 15393 ;; Defined at:
 15394 ;;		line 190 in file "MISC.c"
 15395 ;; Parameters:    Size  Location     Type
 15396 ;;  This            2    3[BANK0 ] PTR const unsigned char 
 15397 ;;		 -> ReceivedString(100), main@BluetoothString(100), 
 15398 ;;  That            2    5[BANK0 ] PTR const unsigned char 
 15399 ;;		 -> STR_102(4), STR_83(5), 
 15400 ;; Auto vars:     Size  Location     Type
 15401 ;;		None
 15402 ;; Return value:  Size  Location     Type
 15403 ;;                  1    wreg      unsigned char 
 15404 ;; Registers used:
 15405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15406 ;; Tracked objects:
 15407 ;;		On entry : 0/0
 15408 ;;		On exit  : 0/0
 15409 ;;		Unchanged: 0/0
 15410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15411 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15413 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15414 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15415 ;;Total ram usage:        5 bytes
 15416 ;; Hardware stack levels used:    1
 15417 ;; Hardware stack levels required when called:    6
 15418 ;; This function calls:
 15419 ;;		Nothing
 15420 ;; This function is called by:
 15421 ;;		_UseBluetooth
 15422 ;; This function uses a non-reentrant model
 15423 ;;
 15424                           
 15425                           	psect	text12
 15426  009A82                     __ptext12:
 15427                           	opt stack 0
 15428  009A82                     _StringMatch:
 15429                           	opt stack 23
 15430                           
 15431                           ;MISC.c: 192: while(*This != 0)
 15432                           
 15433                           ;incstack = 0
 15434  009A82  D025               	goto	l10938
 15435  009A84                     l10928:
 15436                           
 15437                           ;MISC.c: 193: {
 15438                           ;MISC.c: 194: if(*This != *That || *That == 0)
 15439  009A84  C063  FFD9         	movff	StringMatch@This,fsr2l
 15440  009A88  C064  FFDA         	movff	StringMatch@This+1,fsr2h
 15441  009A8C  50DF               	movf	indf2,w,c
 15442  009A8E  0100               	movlb	0	; () banked
 15443  009A90  6F67               	movwf	??_StringMatch& (0+255),b
 15444  009A92  C065  FFF6         	movff	StringMatch@That,tblptrl
 15445  009A96  C066  FFF7         	movff	StringMatch@That+1,tblptrh
 15446  009A9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15447  009A9A  6AF8               	clrf	tblptru,c
 15448  009A9C                     	endif
 15449  009A9C                     	if	0	;tblptru may be non-zero
 15450  009A9C                     	endif
 15451  009A9C  0008               	tblrd		*
 15452  009A9E  50F5               	movf	tablat,w,c
 15453  009AA0  0100               	movlb	0	; () banked
 15454  009AA2  1967               	xorwf	??_StringMatch& (0+255),w,b
 15455  009AA4  A4D8               	btfss	status,2,c
 15456  009AA6  D00A               	goto	l10932
 15457                           
 15458                           ; BSR set to: 0
 15459  009AA8  C065  FFF6         	movff	StringMatch@That,tblptrl
 15460  009AAC  C066  FFF7         	movff	StringMatch@That+1,tblptrh
 15461  009AB0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15462  009AB0  6AF8               	clrf	tblptru,c
 15463  009AB2                     	endif
 15464  009AB2                     	if	0	;tblptru may be non-zero
 15465  009AB2                     	endif
 15466  009AB2  0008               	tblrd		*
 15467  009AB4  50F5               	movf	tablat,w,c
 15468  009AB6  0900               	iorlw	0
 15469  009AB8  A4D8               	btfss	status,2,c
 15470  009ABA  D002               	goto	l10936
 15471  009ABC                     l10932:
 15472                           
 15473                           ; BSR set to: 0
 15474                           ;MISC.c: 195: {
 15475                           ;MISC.c: 196: return 0;
 15476  009ABC  0E00               	movlw	0
 15477                           
 15478                           ; BSR set to: 0
 15479  009ABE  0012               	return	
 15480  009AC0                     l10936:
 15481                           
 15482                           ; BSR set to: 0
 15483                           ;MISC.c: 197: }
 15484                           ;MISC.c: 198: This++;
 15485  009AC0  0100               	movlb	0	; () banked
 15486  009AC2  4B63               	infsnz	StringMatch@This& (0+255),f,b
 15487  009AC4  2B64               	incf	(StringMatch@This+1)& (0+255),f,b
 15488                           
 15489                           ;MISC.c: 199: That++;
 15490  009AC6  0100               	movlb	0	; () banked
 15491  009AC8  4B65               	infsnz	StringMatch@That& (0+255),f,b
 15492  009ACA  2B66               	incf	(StringMatch@That+1)& (0+255),f,b
 15493  009ACC  D000               	goto	l10938
 15494  009ACE                     l10938:
 15495  009ACE  C063  FFD9         	movff	StringMatch@This,fsr2l
 15496  009AD2  C064  FFDA         	movff	StringMatch@This+1,fsr2h
 15497  009AD6  50DF               	movf	indf2,w,c
 15498  009AD8  A4D8               	btfss	status,2,c
 15499  009ADA  D7D4               	goto	l10928
 15500                           
 15501                           ;MISC.c: 200: }
 15502                           ;MISC.c: 201: if(*That == 0)
 15503  009ADC  C065  FFF6         	movff	StringMatch@That,tblptrl
 15504  009AE0  C066  FFF7         	movff	StringMatch@That+1,tblptrh
 15505  009AE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15506  009AE4  6AF8               	clrf	tblptru,c
 15507  009AE6                     	endif
 15508  009AE6                     	if	0	;tblptru may be non-zero
 15509  009AE6                     	endif
 15510  009AE6  0008               	tblrd		*
 15511  009AE8  50F5               	movf	tablat,w,c
 15512  009AEA  0900               	iorlw	0
 15513  009AEC  A4D8               	btfss	status,2,c
 15514  009AEE  D002               	goto	l10948
 15515                           
 15516                           ;MISC.c: 202: {
 15517                           ;MISC.c: 203: return 1;
 15518  009AF0  0E01               	movlw	1
 15519                           
 15520                           ;MISC.c: 204: }
 15521  009AF2  0012               	return	
 15522  009AF4                     l10948:
 15523                           
 15524                           ;MISC.c: 205: else
 15525                           ;MISC.c: 206: {
 15526                           ;MISC.c: 207: return 0;
 15527  009AF4  0E00               	movlw	0
 15528  009AF6  0012               	return	
 15529  009AF8  0012               	return		;funcret
 15530  009AFA                     __end_of_StringMatch:
 15531                           	opt stack 0
 15532                           tblptru	equ	0xFF8
 15533                           tblptrh	equ	0xFF7
 15534                           tblptrl	equ	0xFF6
 15535                           tablat	equ	0xFF5
 15536                           prodh	equ	0xFF4
 15537                           prodl	equ	0xFF3
 15538                           intcon	equ	0xFF2
 15539                           indf0	equ	0xFEF
 15540                           postinc0	equ	0xFEE
 15541                           plusw0	equ	0xFEB
 15542                           fsr0h	equ	0xFEA
 15543                           fsr0l	equ	0xFE9
 15544                           wreg	equ	0xFE8
 15545                           postdec1	equ	0xFE5
 15546                           fsr1l	equ	0xFE1
 15547                           indf2	equ	0xFDF
 15548                           postinc2	equ	0xFDE
 15549                           plusw2	equ	0xFDB
 15550                           fsr2h	equ	0xFDA
 15551                           fsr2l	equ	0xFD9
 15552                           status	equ	0xFD8
 15553                           
 15554 ;; *************** function _StringAddEqual *****************
 15555 ;; Defined at:
 15556 ;;		line 742 in file "MISC.c"
 15557 ;; Parameters:    Size  Location     Type
 15558 ;;  Input           2   18[BANK0 ] PTR unsigned char 
 15559 ;;		 -> ReceivedString(100), main@BluetoothString(100), 
 15560 ;; Auto vars:     Size  Location     Type
 15561 ;;  temp          255    0[BANK1 ] unsigned char [255]
 15562 ;;  j               1   25[BANK0 ] unsigned char 
 15563 ;;  i               1   24[BANK0 ] unsigned char 
 15564 ;;  firstnumber     1   23[BANK0 ] unsigned char 
 15565 ;;  NullPosition    1   22[BANK0 ] unsigned char 
 15566 ;; Return value:  Size  Location     Type
 15567 ;;                  1    wreg      unsigned char 
 15568 ;; Registers used:
 15569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15570 ;; Tracked objects:
 15571 ;;		On entry : 0/0
 15572 ;;		On exit  : 0/0
 15573 ;;		Unchanged: 0/0
 15574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15575 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15576 ;;      Locals:         0       4     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15577 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15578 ;;      Totals:         0       8     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15579 ;;Total ram usage:      263 bytes
 15580 ;; Hardware stack levels used:    1
 15581 ;; Hardware stack levels required when called:    8
 15582 ;; This function calls:
 15583 ;;		_BufferCopy
 15584 ;;		_cleanBuffer
 15585 ;; This function is called by:
 15586 ;;		_UseBluetooth
 15587 ;; This function uses a non-reentrant model
 15588 ;;
 15589                           
 15590                           	psect	text13
 15591  006DDA                     __ptext13:
 15592                           	opt stack 0
 15593  006DDA                     _StringAddEqual:
 15594                           	opt stack 21
 15595                           
 15596                           ;MISC.c: 744: unsigned char i;
 15597                           ;MISC.c: 745: unsigned char j =0;
 15598                           
 15599                           ;incstack = 0
 15600  006DDA  0E00               	movlw	0
 15601  006DDC  0100               	movlb	0	; () banked
 15602  006DDE  6F79               	movwf	StringAddEqual@j& (0+255),b
 15603                           
 15604                           ; BSR set to: 0
 15605                           ;MISC.c: 746: unsigned char firstnumber = 255;
 15606  006DE0  0100               	movlb	0	; () banked
 15607  006DE2  6977               	setf	StringAddEqual@firstnumber& (0+255),b
 15608                           
 15609                           ;MISC.c: 747: unsigned char temp[255];
 15610                           ;MISC.c: 748: unsigned char NullPosition;
 15611                           ;MISC.c: 749: for(i = 0; i<255; i++)
 15612  006DE4  0E00               	movlw	0
 15613  006DE6  0100               	movlb	0	; () banked
 15614  006DE8  6F78               	movwf	StringAddEqual@i& (0+255),b
 15615  006DEA                     l11332:
 15616                           
 15617                           ; BSR set to: 0
 15618  006DEA  0100               	movlb	0	; () banked
 15619  006DEC  2978               	incf	StringAddEqual@i& (0+255),w,b
 15620  006DEE  B4D8               	btfsc	status,2,c
 15621  006DF0  D012               	goto	l11344
 15622  006DF2  D001               	goto	l11336
 15623                           
 15624                           ; BSR set to: 0
 15625  006DF4  D010               	goto	l11344
 15626  006DF6                     l11336:
 15627                           
 15628                           ; BSR set to: 0
 15629                           ;MISC.c: 750: {
 15630                           ;MISC.c: 751: if(*Input == 0)
 15631  006DF6  C072  FFD9         	movff	StringAddEqual@Input,fsr2l
 15632  006DFA  C073  FFDA         	movff	StringAddEqual@Input+1,fsr2h
 15633  006DFE  50DF               	movf	indf2,w,c
 15634  006E00  A4D8               	btfss	status,2,c
 15635  006E02  D003               	goto	l11340
 15636                           
 15637                           ; BSR set to: 0
 15638                           ;MISC.c: 752: {
 15639                           ;MISC.c: 753: NullPosition = i;
 15640  006E04  C078  F076         	movff	StringAddEqual@i,StringAddEqual@NullPosition
 15641                           
 15642                           ;MISC.c: 754: break;
 15643  006E08  D006               	goto	l11344
 15644  006E0A                     l11340:
 15645                           
 15646                           ; BSR set to: 0
 15647                           ;MISC.c: 755: }
 15648                           ;MISC.c: 756: Input++;
 15649  006E0A  0100               	movlb	0	; () banked
 15650  006E0C  4B72               	infsnz	StringAddEqual@Input& (0+255),f,b
 15651  006E0E  2B73               	incf	(StringAddEqual@Input+1)& (0+255),f,b
 15652  006E10  0100               	movlb	0	; () banked
 15653  006E12  2B78               	incf	StringAddEqual@i& (0+255),f,b
 15654  006E14  D7EA               	goto	l11332
 15655  006E16                     l11344:
 15656                           
 15657                           ; BSR set to: 0
 15658                           ;MISC.c: 757: }
 15659                           ;MISC.c: 758: Input-=NullPosition;
 15660  006E16  0100               	movlb	0	; () banked
 15661  006E18  5176               	movf	StringAddEqual@NullPosition& (0+255),w,b
 15662  006E1A  0D01               	mullw	1
 15663  006E1C  50F3               	movf	prodl,w,c
 15664  006E1E  0100               	movlb	0	; () banked
 15665  006E20  5F72               	subwf	StringAddEqual@Input& (0+255),f,b
 15666  006E22  50F4               	movf	prodh,w,c
 15667  006E24  0100               	movlb	0	; () banked
 15668  006E26  5B73               	subwfb	(StringAddEqual@Input+1)& (0+255),f,b
 15669                           
 15670                           ; BSR set to: 0
 15671                           ;MISC.c: 759: cleanBuffer(temp,NullPosition +1);
 15672  006E28  0E00               	movlw	low StringAddEqual@temp
 15673  006E2A  0100               	movlb	0	; () banked
 15674  006E2C  6F63               	movwf	cleanBuffer@data& (0+255),b
 15675  006E2E  0E01               	movlw	high StringAddEqual@temp
 15676  006E30  0100               	movlb	0	; () banked
 15677  006E32  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 15678  006E34  0E01               	movlw	1
 15679  006E36  0100               	movlb	0	; () banked
 15680  006E38  2576               	addwf	StringAddEqual@NullPosition& (0+255),w,b
 15681  006E3A  0100               	movlb	0	; () banked
 15682  006E3C  6F65               	movwf	cleanBuffer@count& (0+255),b
 15683  006E3E  0100               	movlb	0	; () banked
 15684  006E40  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 15685  006E42  0E00               	movlw	0
 15686  006E44  2366               	addwfc	(cleanBuffer@count+1)& (0+255),f,b
 15687  006E46  EC47  F04E         	call	_cleanBuffer	;wreg free
 15688                           
 15689                           ;MISC.c: 760: i = 0;
 15690  006E4A  0E00               	movlw	0
 15691  006E4C  0100               	movlb	0	; () banked
 15692  006E4E  6F78               	movwf	StringAddEqual@i& (0+255),b
 15693                           
 15694                           ;MISC.c: 761: while(Input[i] != 0)
 15695  006E50  D032               	goto	l11358
 15696  006E52                     l11350:
 15697                           
 15698                           ; BSR set to: 0
 15699                           ;MISC.c: 762: {
 15700                           ;MISC.c: 763: if(((Input[i] >= 48) && (Input[i] <= 57)) || (Input[i] == '-'))
 15701  006E52  0100               	movlb	0	; () banked
 15702  006E54  5178               	movf	StringAddEqual@i& (0+255),w,b
 15703  006E56  0D01               	mullw	1
 15704  006E58  50F3               	movf	prodl,w,c
 15705  006E5A  0100               	movlb	0	; () banked
 15706  006E5C  2572               	addwf	StringAddEqual@Input& (0+255),w,b
 15707  006E5E  6ED9               	movwf	fsr2l,c
 15708  006E60  50F4               	movf	prodh,w,c
 15709  006E62  0100               	movlb	0	; () banked
 15710  006E64  2173               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 15711  006E66  6EDA               	movwf	fsr2h,c
 15712  006E68  0E2F               	movlw	47
 15713  006E6A  64DF               	cpfsgt	indf2,c
 15714  006E6C  D00F               	goto	l11354
 15715                           
 15716                           ; BSR set to: 0
 15717  006E6E  0100               	movlb	0	; () banked
 15718  006E70  5178               	movf	StringAddEqual@i& (0+255),w,b
 15719  006E72  0D01               	mullw	1
 15720  006E74  50F3               	movf	prodl,w,c
 15721  006E76  0100               	movlb	0	; () banked
 15722  006E78  2572               	addwf	StringAddEqual@Input& (0+255),w,b
 15723  006E7A  6ED9               	movwf	fsr2l,c
 15724  006E7C  50F4               	movf	prodh,w,c
 15725  006E7E  0100               	movlb	0	; () banked
 15726  006E80  2173               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 15727  006E82  6EDA               	movwf	fsr2h,c
 15728  006E84  0E39               	movlw	57
 15729  006E86  64DF               	cpfsgt	indf2,c
 15730  006E88  D010               	goto	l568
 15731  006E8A  D000               	goto	l11354
 15732  006E8C                     l11354:
 15733                           
 15734                           ; BSR set to: 0
 15735  006E8C  0100               	movlb	0	; () banked
 15736  006E8E  5178               	movf	StringAddEqual@i& (0+255),w,b
 15737  006E90  0D01               	mullw	1
 15738  006E92  50F3               	movf	prodl,w,c
 15739  006E94  0100               	movlb	0	; () banked
 15740  006E96  2572               	addwf	StringAddEqual@Input& (0+255),w,b
 15741  006E98  6ED9               	movwf	fsr2l,c
 15742  006E9A  50F4               	movf	prodh,w,c
 15743  006E9C  0100               	movlb	0	; () banked
 15744  006E9E  2173               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 15745  006EA0  6EDA               	movwf	fsr2h,c
 15746  006EA2  0E2D               	movlw	45
 15747  006EA4  18DE               	xorwf	postinc2,w,c
 15748  006EA6  A4D8               	btfss	status,2,c
 15749  006EA8  D003               	goto	l11356
 15750  006EAA                     l568:
 15751                           
 15752                           ; BSR set to: 0
 15753                           ;MISC.c: 764: {
 15754                           ;MISC.c: 765: firstnumber = i;
 15755  006EAA  C078  F077         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 15756                           
 15757                           ;MISC.c: 766: break;
 15758  006EAE  D011               	goto	l11360
 15759  006EB0                     l11356:
 15760                           
 15761                           ; BSR set to: 0
 15762                           ;MISC.c: 767: }
 15763                           ;MISC.c: 768: i++;
 15764  006EB0  0100               	movlb	0	; () banked
 15765  006EB2  2B78               	incf	StringAddEqual@i& (0+255),f,b
 15766  006EB4  D000               	goto	l11358
 15767  006EB6                     l11358:
 15768                           
 15769                           ; BSR set to: 0
 15770  006EB6  0100               	movlb	0	; () banked
 15771  006EB8  5178               	movf	StringAddEqual@i& (0+255),w,b
 15772  006EBA  0D01               	mullw	1
 15773  006EBC  50F3               	movf	prodl,w,c
 15774  006EBE  0100               	movlb	0	; () banked
 15775  006EC0  2572               	addwf	StringAddEqual@Input& (0+255),w,b
 15776  006EC2  6ED9               	movwf	fsr2l,c
 15777  006EC4  50F4               	movf	prodh,w,c
 15778  006EC6  0100               	movlb	0	; () banked
 15779  006EC8  2173               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 15780  006ECA  6EDA               	movwf	fsr2h,c
 15781  006ECC  50DF               	movf	indf2,w,c
 15782  006ECE  A4D8               	btfss	status,2,c
 15783  006ED0  D7C0               	goto	l11350
 15784  006ED2                     l11360:
 15785                           
 15786                           ; BSR set to: 0
 15787                           ;MISC.c: 769: }
 15788                           ;MISC.c: 770: if(firstnumber == 255)
 15789  006ED2  0100               	movlb	0	; () banked
 15790  006ED4  2977               	incf	StringAddEqual@firstnumber& (0+255),w,b
 15791  006ED6  A4D8               	btfss	status,2,c
 15792  006ED8  D002               	goto	l11366
 15793                           
 15794                           ; BSR set to: 0
 15795                           ;MISC.c: 771: {
 15796                           ;MISC.c: 773: return 0;
 15797  006EDA  0E00               	movlw	0
 15798                           
 15799                           ; BSR set to: 0
 15800  006EDC  0012               	return	
 15801  006EDE                     l11366:
 15802                           
 15803                           ; BSR set to: 0
 15804                           ;MISC.c: 774: }
 15805                           ;MISC.c: 775: for(j=0;j<firstnumber;j++)
 15806  006EDE  0E00               	movlw	0
 15807  006EE0  0100               	movlb	0	; () banked
 15808  006EE2  6F79               	movwf	StringAddEqual@j& (0+255),b
 15809  006EE4  D019               	goto	l11372
 15810  006EE6                     l11368:
 15811                           
 15812                           ; BSR set to: 0
 15813                           ;MISC.c: 776: {
 15814                           ;MISC.c: 777: temp[j] = Input[j];
 15815  006EE6  0100               	movlb	0	; () banked
 15816  006EE8  5179               	movf	StringAddEqual@j& (0+255),w,b
 15817  006EEA  0D01               	mullw	1
 15818  006EEC  50F3               	movf	prodl,w,c
 15819  006EEE  0100               	movlb	0	; () banked
 15820  006EF0  2572               	addwf	StringAddEqual@Input& (0+255),w,b
 15821  006EF2  6ED9               	movwf	fsr2l,c
 15822  006EF4  50F4               	movf	prodh,w,c
 15823  006EF6  0100               	movlb	0	; () banked
 15824  006EF8  2173               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 15825  006EFA  6EDA               	movwf	fsr2h,c
 15826  006EFC  0100               	movlb	0	; () banked
 15827  006EFE  5179               	movf	StringAddEqual@j& (0+255),w,b
 15828  006F00  0D01               	mullw	1
 15829  006F02  0E00               	movlw	low StringAddEqual@temp
 15830  006F04  24F3               	addwf	prodl,w,c
 15831  006F06  6EE1               	movwf	fsr1l,c
 15832  006F08  0E01               	movlw	high StringAddEqual@temp
 15833  006F0A  20F4               	addwfc	prodh,w,c
 15834  006F0C  6EE2               	movwf	fsr1h,c
 15835  006F0E  CFDF FFE7          	movff	indf2,indf1
 15836                           
 15837                           ; BSR set to: 0
 15838  006F12  0100               	movlb	0	; () banked
 15839  006F14  2B79               	incf	StringAddEqual@j& (0+255),f,b
 15840  006F16  D000               	goto	l11372
 15841  006F18                     l11372:
 15842                           
 15843                           ; BSR set to: 0
 15844  006F18  0100               	movlb	0	; () banked
 15845  006F1A  5177               	movf	StringAddEqual@firstnumber& (0+255),w,b
 15846  006F1C  0100               	movlb	0	; () banked
 15847  006F1E  5D79               	subwf	StringAddEqual@j& (0+255),w,b
 15848  006F20  A0D8               	btfss	status,0,c
 15849  006F22  D7E1               	goto	l11368
 15850                           
 15851                           ; BSR set to: 0
 15852                           ;MISC.c: 778: }
 15853                           ;MISC.c: 779: temp[firstnumber] = '=';
 15854                           
 15855                           ; BSR set to: 0
 15856  006F24  0100               	movlb	0	; () banked
 15857  006F26  5177               	movf	StringAddEqual@firstnumber& (0+255),w,b
 15858  006F28  0D01               	mullw	1
 15859  006F2A  0E00               	movlw	low StringAddEqual@temp
 15860  006F2C  24F3               	addwf	prodl,w,c
 15861  006F2E  6ED9               	movwf	fsr2l,c
 15862  006F30  0E01               	movlw	high StringAddEqual@temp
 15863  006F32  20F4               	addwfc	prodh,w,c
 15864  006F34  6EDA               	movwf	fsr2h,c
 15865  006F36  0E3D               	movlw	61
 15866  006F38  6EDF               	movwf	indf2,c
 15867                           
 15868                           ; BSR set to: 0
 15869                           ;MISC.c: 780: for(j = (firstnumber);j<255;j++)
 15870  006F3A  C077  F079         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 15871  006F3E                     l11378:
 15872                           
 15873                           ; BSR set to: 0
 15874  006F3E  0100               	movlb	0	; () banked
 15875  006F40  2979               	incf	StringAddEqual@j& (0+255),w,b
 15876  006F42  B4D8               	btfsc	status,2,c
 15877  006F44  D034               	goto	l11392
 15878  006F46  D001               	goto	l11382
 15879                           
 15880                           ; BSR set to: 0
 15881  006F48  D032               	goto	l11392
 15882  006F4A                     l11382:
 15883                           
 15884                           ; BSR set to: 0
 15885                           ;MISC.c: 781: {
 15886                           ;MISC.c: 782: temp[j+1] = Input[j];
 15887  006F4A  0100               	movlb	0	; () banked
 15888  006F4C  5179               	movf	StringAddEqual@j& (0+255),w,b
 15889  006F4E  0D01               	mullw	1
 15890  006F50  50F3               	movf	prodl,w,c
 15891  006F52  0100               	movlb	0	; () banked
 15892  006F54  2572               	addwf	StringAddEqual@Input& (0+255),w,b
 15893  006F56  6ED9               	movwf	fsr2l,c
 15894  006F58  50F4               	movf	prodh,w,c
 15895  006F5A  0100               	movlb	0	; () banked
 15896  006F5C  2173               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 15897  006F5E  6EDA               	movwf	fsr2h,c
 15898  006F60  0100               	movlb	0	; () banked
 15899  006F62  5179               	movf	StringAddEqual@j& (0+255),w,b
 15900  006F64  0100               	movlb	0	; () banked
 15901  006F66  6F74               	movwf	??_StringAddEqual& (0+255),b
 15902  006F68  6B75               	clrf	(??_StringAddEqual+1)& (0+255),b
 15903  006F6A  0E01               	movlw	1
 15904  006F6C  0100               	movlb	0	; () banked
 15905  006F6E  2774               	addwf	??_StringAddEqual& (0+255),f,b
 15906  006F70  0E00               	movlw	0
 15907  006F72  2375               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 15908  006F74  0E00               	movlw	low StringAddEqual@temp
 15909  006F76  0100               	movlb	0	; () banked
 15910  006F78  2574               	addwf	??_StringAddEqual& (0+255),w,b
 15911  006F7A  6EE1               	movwf	fsr1l,c
 15912  006F7C  0E01               	movlw	high StringAddEqual@temp
 15913  006F7E  0100               	movlb	0	; () banked
 15914  006F80  2175               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 15915  006F82  6EE2               	movwf	fsr1h,c
 15916  006F84  CFDF FFE7          	movff	indf2,indf1
 15917                           
 15918                           ; BSR set to: 0
 15919                           ;MISC.c: 783: if(Input[j] == 0)
 15920  006F88  0100               	movlb	0	; () banked
 15921  006F8A  5179               	movf	StringAddEqual@j& (0+255),w,b
 15922  006F8C  0D01               	mullw	1
 15923  006F8E  50F3               	movf	prodl,w,c
 15924  006F90  0100               	movlb	0	; () banked
 15925  006F92  2572               	addwf	StringAddEqual@Input& (0+255),w,b
 15926  006F94  6ED9               	movwf	fsr2l,c
 15927  006F96  50F4               	movf	prodh,w,c
 15928  006F98  0100               	movlb	0	; () banked
 15929  006F9A  2173               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 15930  006F9C  6EDA               	movwf	fsr2h,c
 15931  006F9E  50DF               	movf	indf2,w,c
 15932  006FA0  B4D8               	btfsc	status,2,c
 15933  006FA2  D005               	goto	l11392
 15934  006FA4  D001               	goto	l11388
 15935                           
 15936                           ; BSR set to: 0
 15937                           ;MISC.c: 784: {
 15938                           ;MISC.c: 785: break;
 15939  006FA6  D003               	goto	l11392
 15940  006FA8                     l11388:
 15941                           
 15942                           ; BSR set to: 0
 15943  006FA8  0100               	movlb	0	; () banked
 15944  006FAA  2B79               	incf	StringAddEqual@j& (0+255),f,b
 15945  006FAC  D7C8               	goto	l11378
 15946  006FAE                     l11392:
 15947                           
 15948                           ; BSR set to: 0
 15949                           ;MISC.c: 786: }
 15950                           ;MISC.c: 787: }
 15951                           ;MISC.c: 788: BufferCopy(temp,Input,NullPosition +1,0);
 15952  006FAE  0E00               	movlw	low StringAddEqual@temp
 15953  006FB0  0100               	movlb	0	; () banked
 15954  006FB2  6F6B               	movwf	BufferCopy@from& (0+255),b
 15955  006FB4  0E01               	movlw	high StringAddEqual@temp
 15956  006FB6  0100               	movlb	0	; () banked
 15957  006FB8  6F6C               	movwf	(BufferCopy@from+1)& (0+255),b
 15958  006FBA  C072  F06D         	movff	StringAddEqual@Input,BufferCopy@to
 15959  006FBE  C073  F06E         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 15960  006FC2  0100               	movlb	0	; () banked
 15961  006FC4  2976               	incf	StringAddEqual@NullPosition& (0+255),w,b
 15962  006FC6  0100               	movlb	0	; () banked
 15963  006FC8  6F6F               	movwf	BufferCopy@count& (0+255),b
 15964  006FCA  0E00               	movlw	0
 15965  006FCC  0100               	movlb	0	; () banked
 15966  006FCE  6F70               	movwf	BufferCopy@shift& (0+255),b
 15967  006FD0  ECFE  F04B         	call	_BufferCopy	;wreg free
 15968                           
 15969                           ;MISC.c: 789: return 1;
 15970  006FD4  0E01               	movlw	1
 15971  006FD6  0012               	return	
 15972  006FD8  0012               	return		;funcret
 15973  006FDA                     __end_of_StringAddEqual:
 15974                           	opt stack 0
 15975                           tblptru	equ	0xFF8
 15976                           tblptrh	equ	0xFF7
 15977                           tblptrl	equ	0xFF6
 15978                           tablat	equ	0xFF5
 15979                           prodh	equ	0xFF4
 15980                           prodl	equ	0xFF3
 15981                           intcon	equ	0xFF2
 15982                           indf0	equ	0xFEF
 15983                           postinc0	equ	0xFEE
 15984                           plusw0	equ	0xFEB
 15985                           fsr0h	equ	0xFEA
 15986                           fsr0l	equ	0xFE9
 15987                           wreg	equ	0xFE8
 15988                           indf1	equ	0xFE7
 15989                           postdec1	equ	0xFE5
 15990                           fsr1h	equ	0xFE2
 15991                           fsr1l	equ	0xFE1
 15992                           indf2	equ	0xFDF
 15993                           postinc2	equ	0xFDE
 15994                           plusw2	equ	0xFDB
 15995                           fsr2h	equ	0xFDA
 15996                           fsr2l	equ	0xFD9
 15997                           status	equ	0xFD8
 15998                           
 15999 ;; *************** function _SendRF_wait *****************
 16000 ;; Defined at:
 16001 ;;		line 145 in file "RF.c"
 16002 ;; Parameters:    Size  Location     Type
 16003 ;;  Code            2   11[BANK0 ] PTR const unsigned char 
 16004 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 16005 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 16006 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 16007 ;;		 -> Conf1_ChannelD(12), 
 16008 ;;  Config          1   13[BANK0 ] unsigned char 
 16009 ;;  size            1   14[BANK0 ] unsigned char 
 16010 ;;  amount          1   15[BANK0 ] unsigned char 
 16011 ;; Auto vars:     Size  Location     Type
 16012 ;;		None
 16013 ;; Return value:  Size  Location     Type
 16014 ;;		None               void
 16015 ;; Registers used:
 16016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16017 ;; Tracked objects:
 16018 ;;		On entry : 0/0
 16019 ;;		On exit  : 0/0
 16020 ;;		Unchanged: 0/0
 16021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16022 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16025 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16026 ;;Total ram usage:        5 bytes
 16027 ;; Hardware stack levels used:    1
 16028 ;; Hardware stack levels required when called:    8
 16029 ;; This function calls:
 16030 ;;		_LEDTimerON
 16031 ;;		_ReadIRpin
 16032 ;;		_SendRF
 16033 ;; This function is called by:
 16034 ;;		_UseBluetooth
 16035 ;;		_SendRF_Channel
 16036 ;; This function uses a non-reentrant model
 16037 ;;
 16038                           
 16039                           	psect	text14
 16040  009F8E                     __ptext14:
 16041                           	opt stack 0
 16042  009F8E                     _SendRF_wait:
 16043                           	opt stack 20
 16044                           
 16045                           ;RF.c: 147: (IOCBbits.IOCB4 = 0);
 16046                           
 16047                           ;incstack = 0
 16048  009F8E  987D               	bcf	3965,4,c	;volatile
 16049                           
 16050                           ;RF.c: 148: INTCONbits.RBIE = 0;
 16051  009F90  96F2               	bcf	intcon,3,c	;volatile
 16052                           
 16053                           ;RF.c: 149: INTCONbits.PEIE = 0;
 16054  009F92  9CF2               	bcf	intcon,6,c	;volatile
 16055                           
 16056                           ;RF.c: 150: LEDTimerON();
 16057  009F94  EC0F  F052         	call	_LEDTimerON	;wreg free
 16058                           
 16059                           ;RF.c: 151: (LATC |= 0x04);
 16060  009F98  848B               	bsf	3979,2,c	;volatile
 16061                           
 16062                           ;RF.c: 152: SendRF(Code, Config, size, amount);
 16063  009F9A  C06B  F063         	movff	SendRF_wait@Code,SendRF@Code
 16064  009F9E  C06C  F064         	movff	SendRF_wait@Code+1,SendRF@Code+1
 16065  009FA2  C06D  F065         	movff	SendRF_wait@Config,SendRF@Config
 16066  009FA6  C06E  F066         	movff	SendRF_wait@size,SendRF@size
 16067  009FAA  C06F  F067         	movff	SendRF_wait@amount,SendRF@RepeatAmount
 16068  009FAE  EC20  F045         	call	_SendRF	;wreg free
 16069                           
 16070                           ;RF.c: 153: while(!Sent);
 16071  009FB2  D000               	goto	l10614
 16072  009FB4                     l10614:
 16073  009FB4  0100               	movlb	0	; () banked
 16074  009FB6  51FF               	movf	_Sent& (0+255),w,b	;volatile
 16075  009FB8  B4D8               	btfsc	status,2,c
 16076  009FBA  D7FC               	goto	l10614
 16077                           
 16078                           ; BSR set to: 0
 16079                           ;RF.c: 154: INTCONbits.PEIE = 1;
 16080  009FBC  8CF2               	bsf	intcon,6,c	;volatile
 16081                           
 16082                           ; BSR set to: 0
 16083                           ;RF.c: 155: IRpinOLD = ReadIRpin();
 16084  009FBE  EC57  F052         	call	_ReadIRpin	;wreg free
 16085  009FC2  6E4C               	movwf	_IRpinOLD,c
 16086                           
 16087                           ;RF.c: 156: INTCONbits.RBIF = 0;
 16088  009FC4  90F2               	bcf	intcon,0,c	;volatile
 16089                           
 16090                           ;RF.c: 157: (IOCBbits.IOCB4 = 1);
 16091  009FC6  887D               	bsf	3965,4,c	;volatile
 16092                           
 16093                           ;RF.c: 158: INTCONbits.RBIE = 1;
 16094  009FC8  86F2               	bsf	intcon,3,c	;volatile
 16095  009FCA  0012               	return		;funcret
 16096  009FCC                     __end_of_SendRF_wait:
 16097                           	opt stack 0
 16098                           tblptru	equ	0xFF8
 16099                           tblptrh	equ	0xFF7
 16100                           tblptrl	equ	0xFF6
 16101                           tablat	equ	0xFF5
 16102                           prodh	equ	0xFF4
 16103                           prodl	equ	0xFF3
 16104                           intcon	equ	0xFF2
 16105                           indf0	equ	0xFEF
 16106                           postinc0	equ	0xFEE
 16107                           plusw0	equ	0xFEB
 16108                           fsr0h	equ	0xFEA
 16109                           fsr0l	equ	0xFE9
 16110                           wreg	equ	0xFE8
 16111                           indf1	equ	0xFE7
 16112                           postdec1	equ	0xFE5
 16113                           fsr1h	equ	0xFE2
 16114                           fsr1l	equ	0xFE1
 16115                           indf2	equ	0xFDF
 16116                           postinc2	equ	0xFDE
 16117                           plusw2	equ	0xFDB
 16118                           fsr2h	equ	0xFDA
 16119                           fsr2l	equ	0xFD9
 16120                           status	equ	0xFD8
 16121                           
 16122 ;; *************** function _SendRF *****************
 16123 ;; Defined at:
 16124 ;;		line 68 in file "RF.c"
 16125 ;; Parameters:    Size  Location     Type
 16126 ;;  Code            2    3[BANK0 ] PTR const unsigned char 
 16127 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 16128 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 16129 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 16130 ;;		 -> Conf1_ChannelD(12), 
 16131 ;;  Config          1    5[BANK0 ] unsigned char 
 16132 ;;  size            1    6[BANK0 ] unsigned char 
 16133 ;;  RepeatAmount    1    7[BANK0 ] unsigned char 
 16134 ;; Auto vars:     Size  Location     Type
 16135 ;;  i               1   10[BANK0 ] unsigned char 
 16136 ;; Return value:  Size  Location     Type
 16137 ;;                  1    wreg      unsigned char 
 16138 ;; Registers used:
 16139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 16140 ;; Tracked objects:
 16141 ;;		On entry : 0/0
 16142 ;;		On exit  : 0/0
 16143 ;;		Unchanged: 0/0
 16144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16145 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16146 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16147 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16148 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16149 ;;Total ram usage:        8 bytes
 16150 ;; Hardware stack levels used:    1
 16151 ;; Hardware stack levels required when called:    6
 16152 ;; This function calls:
 16153 ;;		Nothing
 16154 ;; This function is called by:
 16155 ;;		_SendRF_wait
 16156 ;; This function uses a non-reentrant model
 16157 ;;
 16158                           
 16159                           	psect	text15
 16160  008A40                     __ptext15:
 16161                           	opt stack 0
 16162  008A40                     _SendRF:
 16163                           	opt stack 21
 16164                           
 16165                           ;RF.c: 70: unsigned char i;
 16166                           ;RF.c: 71: if(Sent)
 16167                           
 16168                           ;incstack = 0
 16169  008A40  0100               	movlb	0	; () banked
 16170  008A42  51FF               	movf	_Sent& (0+255),w,b	;volatile
 16171  008A44  B4D8               	btfsc	status,2,c
 16172  008A46  0012               	return	
 16173                           
 16174                           ; BSR set to: 0
 16175                           ;RF.c: 72: {
 16176                           ;RF.c: 74: RF_IR = 55;
 16177  008A48  0E37               	movlw	55
 16178  008A4A  6E5C               	movwf	_RF_IR,c
 16179                           
 16180                           ;RF.c: 75: if((Config <= 0) || (Config > 2))
 16181  008A4C  0100               	movlb	0	; () banked
 16182  008A4E  5165               	movf	SendRF@Config& (0+255),w,b
 16183  008A50  0100               	movlb	0	; () banked
 16184  008A52  B4D8               	btfsc	status,2,c
 16185  008A54  0012               	return	
 16186                           
 16187                           ; BSR set to: 0
 16188  008A56  0E02               	movlw	2
 16189  008A58  0100               	movlb	0	; () banked
 16190  008A5A  6565               	cpfsgt	SendRF@Config& (0+255),b
 16191  008A5C  D002               	goto	l2287
 16192  008A5E  0012               	return	
 16193                           
 16194                           ; BSR set to: 0
 16195                           ;RF.c: 76: {
 16196                           ;RF.c: 77: return 0;
 16197                           ;	Return value of _SendRF is never used
 16198  008A60  0012               	return	
 16199  008A62                     l2287:
 16200                           
 16201                           ; BSR set to: 0
 16202                           ;RF.c: 78: }
 16203                           ;RF.c: 79: RFConfig = Config;
 16204  008A62  C065  F0FA         	movff	SendRF@Config,_RFConfig
 16205                           
 16206                           ; BSR set to: 0
 16207                           ;RF.c: 80: if(Config == 1)
 16208  008A66  0100               	movlb	0	; () banked
 16209  008A68  0565               	decf	SendRF@Config& (0+255),w,b
 16210  008A6A  A4D8               	btfss	status,2,c
 16211  008A6C  D002               	goto	l10020
 16212                           
 16213                           ; BSR set to: 0
 16214                           ;RF.c: 81: {
 16215                           ;RF.c: 82: RF_IR_Postscaler = 2;
 16216  008A6E  0E02               	movlw	2
 16217  008A70  D006               	goto	L10
 16218  008A72                     l10020:
 16219                           
 16220                           ; BSR set to: 0
 16221                           ;RF.c: 84: else if(Config == 2)
 16222  008A72  0E02               	movlw	2
 16223  008A74  0100               	movlb	0	; () banked
 16224  008A76  1965               	xorwf	SendRF@Config& (0+255),w,b
 16225  008A78  A4D8               	btfss	status,2,c
 16226  008A7A  0012               	return	
 16227                           
 16228                           ; BSR set to: 0
 16229                           ;RF.c: 85: {
 16230                           ;RF.c: 86: RF_IR_Postscaler = 4;
 16231  008A7C  0E04               	movlw	4
 16232  008A7E                     L10:
 16233  008A7E  6E5D               	movwf	_RF_IR_Postscaler,c	;volatile
 16234                           
 16235                           ;RF.c: 87: }
 16236  008A80  D002               	goto	l10024
 16237                           
 16238                           ; BSR set to: 0
 16239                           ;RF.c: 88: else
 16240                           ;RF.c: 89: {
 16241                           ;RF.c: 90: return 0;
 16242                           ;	Return value of _SendRF is never used
 16243  008A82  0012               	return	
 16244                           
 16245                           ; BSR set to: 0
 16246  008A84  D000               	goto	l10024
 16247  008A86                     l10024:
 16248                           
 16249                           ; BSR set to: 0
 16250                           ;RF.c: 91: }
 16251                           ;RF.c: 93: Sent = 0;
 16252  008A86  0E00               	movlw	0
 16253  008A88  0100               	movlb	0	; () banked
 16254  008A8A  6FFF               	movwf	_Sent& (0+255),b	;volatile
 16255                           
 16256                           ; BSR set to: 0
 16257                           ;RF.c: 94: Sendcount = RepeatAmount;
 16258  008A8C  C067  F051         	movff	SendRF@RepeatAmount,_Sendcount	;volatile
 16259                           
 16260                           ;RF.c: 95: RFsendFlag = 1;
 16261  008A90  0E01               	movlw	1
 16262  008A92  0100               	movlb	0	; () banked
 16263  008A94  6FFC               	movwf	_RFsendFlag& (0+255),b	;volatile
 16264                           
 16265                           ;RF.c: 96: RFcodeBit = 0;
 16266  008A96  0E00               	movlw	0
 16267  008A98  6E50               	movwf	_RFcodeBit,c
 16268                           
 16269                           ;RF.c: 97: RFcodePlace = 1;
 16270  008A9A  0E01               	movlw	1
 16271  008A9C  0100               	movlb	0	; () banked
 16272  008A9E  6FFB               	movwf	_RFcodePlace& (0+255),b
 16273                           
 16274                           ; BSR set to: 0
 16275                           ;RF.c: 100: if(size >= 20)
 16276  008AA0  0E13               	movlw	19
 16277  008AA2  0100               	movlb	0	; () banked
 16278  008AA4  6566               	cpfsgt	SendRF@size& (0+255),b
 16279  008AA6  D002               	goto	l10032
 16280  008AA8  0012               	return	
 16281                           
 16282                           ; BSR set to: 0
 16283                           ;RF.c: 101: {
 16284                           ;RF.c: 102: return 0;
 16285                           ;	Return value of _SendRF is never used
 16286  008AAA  0012               	return	
 16287  008AAC                     l10032:
 16288                           
 16289                           ; BSR set to: 0
 16290                           ;RF.c: 103: }
 16291                           ;RF.c: 104: for(i=0;i<size;i++)
 16292  008AAC  0E00               	movlw	0
 16293  008AAE  0100               	movlb	0	; () banked
 16294  008AB0  6F6A               	movwf	SendRF@i& (0+255),b
 16295  008AB2  D021               	goto	l10038
 16296  008AB4                     l10034:
 16297                           
 16298                           ; BSR set to: 0
 16299                           ;RF.c: 105: {
 16300                           ;RF.c: 106: RFsendCode[i] = Code[i];
 16301  008AB4  0100               	movlb	0	; () banked
 16302  008AB6  516A               	movf	SendRF@i& (0+255),w,b
 16303  008AB8  0D01               	mullw	1
 16304  008ABA  C063  F068         	movff	SendRF@Code,??_SendRF
 16305  008ABE  C064  F069         	movff	SendRF@Code+1,??_SendRF+1
 16306  008AC2  50F3               	movf	prodl,w,c
 16307  008AC4  0100               	movlb	0	; () banked
 16308  008AC6  2768               	addwf	??_SendRF& (0+255),f,b
 16309  008AC8  50F4               	movf	prodh,w,c
 16310  008ACA  0100               	movlb	0	; () banked
 16311  008ACC  2369               	addwfc	(??_SendRF+1)& (0+255),f,b
 16312  008ACE  C068  FFF6         	movff	??_SendRF,tblptrl
 16313  008AD2  C069  FFF7         	movff	??_SendRF+1,tblptrh
 16314  008AD6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16315  008AD6  6AF8               	clrf	tblptru,c
 16316  008AD8                     	endif
 16317  008AD8                     	if	0	;tblptru may be non-zero
 16318  008AD8                     	endif
 16319  008AD8  0100               	movlb	0	; () banked
 16320  008ADA  516A               	movf	SendRF@i& (0+255),w,b
 16321  008ADC  0D01               	mullw	1
 16322  008ADE  0E00               	movlw	low _RFsendCode
 16323  008AE0  24F3               	addwf	prodl,w,c
 16324  008AE2  6ED9               	movwf	fsr2l,c
 16325  008AE4  0E03               	movlw	high _RFsendCode
 16326  008AE6  20F4               	addwfc	prodh,w,c
 16327  008AE8  6EDA               	movwf	fsr2h,c
 16328  008AEA  0008               	tblrd		*
 16329  008AEC  CFF5 FFDF          	movff	tablat,indf2
 16330                           
 16331                           ; BSR set to: 0
 16332  008AF0  0100               	movlb	0	; () banked
 16333  008AF2  2B6A               	incf	SendRF@i& (0+255),f,b
 16334  008AF4  D000               	goto	l10038
 16335  008AF6                     l10038:
 16336                           
 16337                           ; BSR set to: 0
 16338  008AF6  0100               	movlb	0	; () banked
 16339  008AF8  5166               	movf	SendRF@size& (0+255),w,b
 16340  008AFA  0100               	movlb	0	; () banked
 16341  008AFC  5D6A               	subwf	SendRF@i& (0+255),w,b
 16342  008AFE  A0D8               	btfss	status,0,c
 16343  008B00  D7D9               	goto	l10034
 16344                           
 16345                           ; BSR set to: 0
 16346                           ;RF.c: 107: }
 16347                           ;RF.c: 108: RFsendCode[i] = 99;
 16348                           
 16349                           ; BSR set to: 0
 16350  008B02  0100               	movlb	0	; () banked
 16351  008B04  516A               	movf	SendRF@i& (0+255),w,b
 16352  008B06  0D01               	mullw	1
 16353  008B08  0E00               	movlw	low _RFsendCode
 16354  008B0A  24F3               	addwf	prodl,w,c
 16355  008B0C  6ED9               	movwf	fsr2l,c
 16356  008B0E  0E03               	movlw	high _RFsendCode
 16357  008B10  20F4               	addwfc	prodh,w,c
 16358  008B12  6EDA               	movwf	fsr2h,c
 16359  008B14  0E63               	movlw	99
 16360  008B16  6EDF               	movwf	indf2,c
 16361                           
 16362                           ; BSR set to: 0
 16363                           ;RF.c: 110: (TMR2 = 0);
 16364  008B18  0E00               	movlw	0
 16365  008B1A  6ECC               	movwf	4044,c	;volatile
 16366                           
 16367                           ; BSR set to: 0
 16368                           ;RF.c: 111: if(Config == 1)
 16369  008B1C  0100               	movlb	0	; () banked
 16370  008B1E  0565               	decf	SendRF@Config& (0+255),w,b
 16371  008B20  A4D8               	btfss	status,2,c
 16372  008B22  D002               	goto	l10048
 16373                           
 16374                           ; BSR set to: 0
 16375                           ;RF.c: 112: {
 16376                           ;RF.c: 113: (PR2 = 250);
 16377  008B24  0EFA               	movlw	250
 16378  008B26  D001               	goto	L11
 16379  008B28                     l10048:
 16380                           
 16381                           ; BSR set to: 0
 16382                           ;RF.c: 115: else
 16383                           ;RF.c: 116: {
 16384                           ;RF.c: 117: (PR2 = 149);
 16385  008B28  0E95               	movlw	149
 16386  008B2A                     L11:
 16387  008B2A  6ECB               	movwf	4043,c	;volatile
 16388  008B2C  D000               	goto	l10050
 16389  008B2E                     l10050:
 16390                           
 16391                           ; BSR set to: 0
 16392                           ;RF.c: 118: }
 16393                           ;RF.c: 119: (T2CONbits.TMR2ON = 1);
 16394  008B2E  84CA               	bsf	4042,2,c	;volatile
 16395                           
 16396                           ; BSR set to: 0
 16397                           ;RF.c: 120: return 1;
 16398                           ;	Return value of _SendRF is never used
 16399  008B30  0012               	return	
 16400                           
 16401                           ; BSR set to: 0
 16402                           
 16403                           ; BSR set to: 0
 16404                           ;RF.c: 121: }
 16405                           ;RF.c: 122: return 2;
 16406                           ;	Return value of _SendRF is never used
 16407  008B32  0012               	return		;funcret
 16408  008B34                     __end_of_SendRF:
 16409                           	opt stack 0
 16410                           tblptru	equ	0xFF8
 16411                           tblptrh	equ	0xFF7
 16412                           tblptrl	equ	0xFF6
 16413                           tablat	equ	0xFF5
 16414                           prodh	equ	0xFF4
 16415                           prodl	equ	0xFF3
 16416                           intcon	equ	0xFF2
 16417                           indf0	equ	0xFEF
 16418                           postinc0	equ	0xFEE
 16419                           plusw0	equ	0xFEB
 16420                           fsr0h	equ	0xFEA
 16421                           fsr0l	equ	0xFE9
 16422                           wreg	equ	0xFE8
 16423                           indf1	equ	0xFE7
 16424                           postdec1	equ	0xFE5
 16425                           fsr1h	equ	0xFE2
 16426                           fsr1l	equ	0xFE1
 16427                           indf2	equ	0xFDF
 16428                           postinc2	equ	0xFDE
 16429                           plusw2	equ	0xFDB
 16430                           fsr2h	equ	0xFDA
 16431                           fsr2l	equ	0xFD9
 16432                           status	equ	0xFD8
 16433                           
 16434 ;; *************** function _LEDTimerON *****************
 16435 ;; Defined at:
 16436 ;;		line 149 in file "Timer.c"
 16437 ;; Parameters:    Size  Location     Type
 16438 ;;		None
 16439 ;; Auto vars:     Size  Location     Type
 16440 ;;		None
 16441 ;; Return value:  Size  Location     Type
 16442 ;;		None               void
 16443 ;; Registers used:
 16444 ;;		wreg, status,2, cstack
 16445 ;; Tracked objects:
 16446 ;;		On entry : 0/0
 16447 ;;		On exit  : 0/0
 16448 ;;		Unchanged: 0/0
 16449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16454 ;;Total ram usage:        0 bytes
 16455 ;; Hardware stack levels used:    1
 16456 ;; Hardware stack levels required when called:    7
 16457 ;; This function calls:
 16458 ;;		_ResetTimer1
 16459 ;; This function is called by:
 16460 ;;		_UseIRCode
 16461 ;;		_WaitForIRsignal
 16462 ;;		_SendRF_wait
 16463 ;; This function uses a non-reentrant model
 16464 ;;
 16465                           
 16466                           	psect	text16
 16467  00A41E                     __ptext16:
 16468                           	opt stack 0
 16469  00A41E                     _LEDTimerON:
 16470                           	opt stack 20
 16471                           
 16472                           ;Timer.c: 151: (T1CONbits.TMR1ON = FALSE);
 16473                           
 16474                           ; BSR set to: 0
 16475                           ;incstack = 0
 16476  00A41E  90CD               	bcf	4045,0,c	;volatile
 16477                           
 16478                           ;Timer.c: 152: ResetTimer1();
 16479  00A420  EC7A  F052         	call	_ResetTimer1	;wreg free
 16480                           
 16481                           ;Timer.c: 153: Timer1_Postscaler = 0;
 16482  00A424  0E00               	movlw	0
 16483  00A426  6E52               	movwf	_Timer1_Postscaler,c
 16484                           
 16485                           ;Timer.c: 154: ResetTimer1();
 16486  00A428  EC7A  F052         	call	_ResetTimer1	;wreg free
 16487                           
 16488                           ;Timer.c: 155: (T1CONbits.TMR1ON = TRUE);
 16489  00A42C  80CD               	bsf	4045,0,c	;volatile
 16490  00A42E  0012               	return		;funcret
 16491  00A430                     __end_of_LEDTimerON:
 16492                           	opt stack 0
 16493                           tblptru	equ	0xFF8
 16494                           tblptrh	equ	0xFF7
 16495                           tblptrl	equ	0xFF6
 16496                           tablat	equ	0xFF5
 16497                           prodh	equ	0xFF4
 16498                           prodl	equ	0xFF3
 16499                           intcon	equ	0xFF2
 16500                           indf0	equ	0xFEF
 16501                           postinc0	equ	0xFEE
 16502                           plusw0	equ	0xFEB
 16503                           fsr0h	equ	0xFEA
 16504                           fsr0l	equ	0xFE9
 16505                           wreg	equ	0xFE8
 16506                           indf1	equ	0xFE7
 16507                           postdec1	equ	0xFE5
 16508                           fsr1h	equ	0xFE2
 16509                           fsr1l	equ	0xFE1
 16510                           indf2	equ	0xFDF
 16511                           postinc2	equ	0xFDE
 16512                           plusw2	equ	0xFDB
 16513                           fsr2h	equ	0xFDA
 16514                           fsr2l	equ	0xFD9
 16515                           status	equ	0xFD8
 16516                           
 16517 ;; *************** function _ResetTimer1 *****************
 16518 ;; Defined at:
 16519 ;;		line 123 in file "Timer.c"
 16520 ;; Parameters:    Size  Location     Type
 16521 ;;		None
 16522 ;; Auto vars:     Size  Location     Type
 16523 ;;		None
 16524 ;; Return value:  Size  Location     Type
 16525 ;;		None               void
 16526 ;; Registers used:
 16527 ;;		wreg, status,2
 16528 ;; Tracked objects:
 16529 ;;		On entry : 0/0
 16530 ;;		On exit  : 0/0
 16531 ;;		Unchanged: 0/0
 16532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16537 ;;Total ram usage:        0 bytes
 16538 ;; Hardware stack levels used:    1
 16539 ;; Hardware stack levels required when called:    6
 16540 ;; This function calls:
 16541 ;;		Nothing
 16542 ;; This function is called by:
 16543 ;;		_LEDTimerON
 16544 ;; This function uses a non-reentrant model
 16545 ;;
 16546                           
 16547                           	psect	text17
 16548  00A4F4                     __ptext17:
 16549                           	opt stack 0
 16550  00A4F4                     _ResetTimer1:
 16551                           	opt stack 20
 16552                           
 16553                           ;Timer.c: 129: TMR1H = 0;
 16554                           
 16555                           ;incstack = 0
 16556  00A4F4  0E00               	movlw	0
 16557  00A4F6  6ECF               	movwf	4047,c	;volatile
 16558                           
 16559                           ;Timer.c: 130: TMR1L = 2;
 16560  00A4F8  0E02               	movlw	2
 16561  00A4FA  6ECE               	movwf	4046,c	;volatile
 16562  00A4FC  0012               	return		;funcret
 16563  00A4FE                     __end_of_ResetTimer1:
 16564                           	opt stack 0
 16565                           tblptru	equ	0xFF8
 16566                           tblptrh	equ	0xFF7
 16567                           tblptrl	equ	0xFF6
 16568                           tablat	equ	0xFF5
 16569                           prodh	equ	0xFF4
 16570                           prodl	equ	0xFF3
 16571                           intcon	equ	0xFF2
 16572                           indf0	equ	0xFEF
 16573                           postinc0	equ	0xFEE
 16574                           plusw0	equ	0xFEB
 16575                           fsr0h	equ	0xFEA
 16576                           fsr0l	equ	0xFE9
 16577                           wreg	equ	0xFE8
 16578                           indf1	equ	0xFE7
 16579                           postdec1	equ	0xFE5
 16580                           fsr1h	equ	0xFE2
 16581                           fsr1l	equ	0xFE1
 16582                           indf2	equ	0xFDF
 16583                           postinc2	equ	0xFDE
 16584                           plusw2	equ	0xFDB
 16585                           fsr2h	equ	0xFDA
 16586                           fsr2l	equ	0xFD9
 16587                           status	equ	0xFD8
 16588                           
 16589 ;; *************** function _SendNEC_wait *****************
 16590 ;; Defined at:
 16591 ;;		line 419 in file "IR.c"
 16592 ;; Parameters:    Size  Location     Type
 16593 ;;  code            4   24[BANK0 ] unsigned long 
 16594 ;;  RepeatAmount    1   28[BANK0 ] unsigned char 
 16595 ;; Auto vars:     Size  Location     Type
 16596 ;;  toggle          1   29[BANK0 ] unsigned char 
 16597 ;; Return value:  Size  Location     Type
 16598 ;;		None               void
 16599 ;; Registers used:
 16600 ;;		wreg, status,2, status,0, cstack
 16601 ;; Tracked objects:
 16602 ;;		On entry : 0/0
 16603 ;;		On exit  : 0/0
 16604 ;;		Unchanged: 0/0
 16605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16606 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16607 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16609 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16610 ;;Total ram usage:        6 bytes
 16611 ;; Hardware stack levels used:    1
 16612 ;; Hardware stack levels required when called:    8
 16613 ;; This function calls:
 16614 ;;		_CheckReceivingIR
 16615 ;;		_ReadIRpin
 16616 ;;		_SendNEC_bytes
 16617 ;;		_delayUS
 16618 ;; This function is called by:
 16619 ;;		_UseBluetooth
 16620 ;; This function uses a non-reentrant model
 16621 ;;
 16622                           
 16623                           	psect	text18
 16624  00963C                     __ptext18:
 16625                           	opt stack 0
 16626  00963C                     _SendNEC_wait:
 16627                           	opt stack 21
 16628                           
 16629                           ;IR.c: 421: unsigned char toggle = 0;
 16630                           
 16631                           ;incstack = 0
 16632  00963C  0E00               	movlw	0
 16633  00963E  0100               	movlb	0	; () banked
 16634  009640  6F7D               	movwf	SendNEC_wait@toggle& (0+255),b
 16635                           
 16636                           ; BSR set to: 0
 16637                           
 16638                           ;IR.c: 422: while(CheckReceivingIR());
 16639  009642  D000               	goto	l11630
 16640  009644                     l11630:
 16641  009644  EC18  F052         	call	_CheckReceivingIR	;wreg free
 16642  009648  0900               	iorlw	0
 16643  00964A  A4D8               	btfss	status,2,c
 16644  00964C  D7FB               	goto	l11630
 16645                           
 16646                           ;IR.c: 424: (IOCBbits.IOCB4 = 0);
 16647  00964E  987D               	bcf	3965,4,c	;volatile
 16648                           
 16649                           ;IR.c: 425: INTCONbits.RBIE = 0;
 16650  009650  96F2               	bcf	intcon,3,c	;volatile
 16651                           
 16652                           ;IR.c: 426: INTCONbits.PEIE = 0;
 16653  009652  9CF2               	bcf	intcon,6,c	;volatile
 16654                           
 16655                           ;IR.c: 428: SendNEC_bytes(code, RepeatAmount);
 16656  009654  C078  F073         	movff	SendNEC_wait@code,SendNEC_bytes@code
 16657  009658  C079  F074         	movff	SendNEC_wait@code+1,SendNEC_bytes@code+1
 16658  00965C  C07A  F075         	movff	SendNEC_wait@code+2,SendNEC_bytes@code+2
 16659  009660  C07B  F076         	movff	SendNEC_wait@code+3,SendNEC_bytes@code+3
 16660  009664  C07C  F077         	movff	SendNEC_wait@RepeatAmount,SendNEC_bytes@RepeatAmount
 16661  009668  EC43  F04C         	call	_SendNEC_bytes	;wreg free
 16662                           
 16663                           ;IR.c: 429: while(!Sent)
 16664  00966C  D01B               	goto	l11652
 16665  00966E                     l11634:
 16666                           
 16667                           ;IR.c: 430: {
 16668                           ;IR.c: 431: if(IRmod)
 16669  00966E  504B               	movf	_IRmod,w,c	;volatile
 16670  009670  B4D8               	btfsc	status,2,c
 16671  009672  D013               	goto	l11648
 16672                           
 16673                           ;IR.c: 432: {
 16674                           ;IR.c: 434: if(toggle < 9)
 16675  009674  0E09               	movlw	9
 16676  009676  0100               	movlb	0	; () banked
 16677  009678  617D               	cpfslt	SendNEC_wait@toggle& (0+255),b
 16678  00967A  D002               	goto	l11640
 16679                           
 16680                           ; BSR set to: 0
 16681                           ;IR.c: 435: {
 16682                           ;IR.c: 436: (LATC |= 0x08);
 16683  00967C  868B               	bsf	3979,3,c	;volatile
 16684                           
 16685                           ;IR.c: 437: }
 16686  00967E  D00A               	goto	l11646
 16687  009680                     l11640:
 16688                           
 16689                           ; BSR set to: 0
 16690                           ;IR.c: 438: else if(toggle < 17)
 16691  009680  0E11               	movlw	17
 16692  009682  0100               	movlb	0	; () banked
 16693  009684  617D               	cpfslt	SendNEC_wait@toggle& (0+255),b
 16694  009686  D002               	goto	l11644
 16695                           
 16696                           ; BSR set to: 0
 16697                           ;IR.c: 439: {
 16698                           ;IR.c: 440: (LATC &= ~0x08);
 16699  009688  968B               	bcf	3979,3,c	;volatile
 16700                           
 16701                           ;IR.c: 441: }
 16702  00968A  D004               	goto	l11646
 16703  00968C                     l11644:
 16704                           
 16705                           ; BSR set to: 0
 16706                           ;IR.c: 442: else
 16707                           ;IR.c: 443: {
 16708                           ;IR.c: 444: toggle = 0;
 16709  00968C  0E00               	movlw	0
 16710  00968E  0100               	movlb	0	; () banked
 16711  009690  6F7D               	movwf	SendNEC_wait@toggle& (0+255),b
 16712                           
 16713                           ; BSR set to: 0
 16714  009692  D000               	goto	l11646
 16715  009694                     l11646:
 16716                           
 16717                           ; BSR set to: 0
 16718                           ;IR.c: 445: }
 16719                           ;IR.c: 446: toggle++;
 16720  009694  0100               	movlb	0	; () banked
 16721  009696  2B7D               	incf	SendNEC_wait@toggle& (0+255),f,b
 16722                           
 16723                           ;IR.c: 447: }
 16724  009698  D005               	goto	l11652
 16725  00969A                     l11648:
 16726                           
 16727                           ;IR.c: 448: else
 16728                           ;IR.c: 449: {
 16729                           ;IR.c: 450: (LATC &= ~0x08);
 16730  00969A  968B               	bcf	3979,3,c	;volatile
 16731                           
 16732                           ;IR.c: 451: toggle = 0;
 16733  00969C  0E00               	movlw	0
 16734  00969E  0100               	movlb	0	; () banked
 16735  0096A0  6F7D               	movwf	SendNEC_wait@toggle& (0+255),b
 16736                           
 16737                           ; BSR set to: 0
 16738  0096A2  D000               	goto	l11652
 16739  0096A4                     l11652:
 16740  0096A4  0100               	movlb	0	; () banked
 16741  0096A6  51FF               	movf	_Sent& (0+255),w,b	;volatile
 16742  0096A8  B4D8               	btfsc	status,2,c
 16743  0096AA  D7E1               	goto	l11634
 16744                           
 16745                           ; BSR set to: 0
 16746                           ;IR.c: 452: }
 16747                           ;IR.c: 453: }
 16748                           ;IR.c: 455: if(IRbitPosition)
 16749                           
 16750                           ; BSR set to: 0
 16751  0096AC  505B               	movf	_IRbitPosition,w,c	;volatile
 16752  0096AE  A4D8               	btfss	status,2,c
 16753                           
 16754                           ; BSR set to: 0
 16755                           ;IR.c: 456: {
 16756                           ;IR.c: 458: __nop();
 16757  0096B0  F000               	nop	
 16758                           
 16759                           ;IR.c: 459: }
 16760                           ;IR.c: 461: INTCONbits.PEIE = 1;
 16761  0096B2  8CF2               	bsf	intcon,6,c	;volatile
 16762                           
 16763                           ;IR.c: 462: delayUS(8000);
 16764  0096B4  0E40               	movlw	64
 16765  0096B6  0100               	movlb	0	; () banked
 16766  0096B8  6F63               	movwf	delayUS@US& (0+255),b
 16767  0096BA  0E1F               	movlw	31
 16768  0096BC  6F64               	movwf	(delayUS@US+1)& (0+255),b
 16769  0096BE  0E00               	movlw	0
 16770  0096C0  6F65               	movwf	(delayUS@US+2)& (0+255),b
 16771  0096C2  0E00               	movlw	0
 16772  0096C4  6F66               	movwf	(delayUS@US+3)& (0+255),b
 16773  0096C6  ECA0  F04E         	call	_delayUS	;wreg free
 16774                           
 16775                           ;IR.c: 463: IRpinOLD = ReadIRpin();
 16776  0096CA  EC57  F052         	call	_ReadIRpin	;wreg free
 16777  0096CE  6E4C               	movwf	_IRpinOLD,c
 16778                           
 16779                           ;IR.c: 464: INTCONbits.RBIF = 0;
 16780  0096D0  90F2               	bcf	intcon,0,c	;volatile
 16781                           
 16782                           ;IR.c: 465: (IOCBbits.IOCB4 = 1);
 16783  0096D2  887D               	bsf	3965,4,c	;volatile
 16784                           
 16785                           ;IR.c: 466: INTCONbits.RBIE = 1;
 16786  0096D4  86F2               	bsf	intcon,3,c	;volatile
 16787  0096D6  0012               	return		;funcret
 16788  0096D8                     __end_of_SendNEC_wait:
 16789                           	opt stack 0
 16790                           tblptru	equ	0xFF8
 16791                           tblptrh	equ	0xFF7
 16792                           tblptrl	equ	0xFF6
 16793                           tablat	equ	0xFF5
 16794                           prodh	equ	0xFF4
 16795                           prodl	equ	0xFF3
 16796                           intcon	equ	0xFF2
 16797                           indf0	equ	0xFEF
 16798                           postinc0	equ	0xFEE
 16799                           plusw0	equ	0xFEB
 16800                           fsr0h	equ	0xFEA
 16801                           fsr0l	equ	0xFE9
 16802                           wreg	equ	0xFE8
 16803                           indf1	equ	0xFE7
 16804                           postdec1	equ	0xFE5
 16805                           fsr1h	equ	0xFE2
 16806                           fsr1l	equ	0xFE1
 16807                           indf2	equ	0xFDF
 16808                           postinc2	equ	0xFDE
 16809                           plusw2	equ	0xFDB
 16810                           fsr2h	equ	0xFDA
 16811                           fsr2l	equ	0xFD9
 16812                           status	equ	0xFD8
 16813                           
 16814 ;; *************** function _SendNEC_bytes *****************
 16815 ;; Defined at:
 16816 ;;		line 356 in file "IR.c"
 16817 ;; Parameters:    Size  Location     Type
 16818 ;;  code            4   19[BANK0 ] unsigned long 
 16819 ;;  RepeatAmount    1   23[BANK0 ] unsigned char 
 16820 ;; Auto vars:     Size  Location     Type
 16821 ;;		None
 16822 ;; Return value:  Size  Location     Type
 16823 ;;                  1    wreg      unsigned char 
 16824 ;; Registers used:
 16825 ;;		wreg, status,2, status,0, cstack
 16826 ;; Tracked objects:
 16827 ;;		On entry : 0/0
 16828 ;;		On exit  : 0/0
 16829 ;;		Unchanged: 0/0
 16830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16831 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16834 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16835 ;;Total ram usage:        5 bytes
 16836 ;; Hardware stack levels used:    1
 16837 ;; Hardware stack levels required when called:    7
 16838 ;; This function calls:
 16839 ;;		_Reverse_4Byte
 16840 ;; This function is called by:
 16841 ;;		_SendNEC_wait
 16842 ;; This function uses a non-reentrant model
 16843 ;;
 16844                           
 16845                           	psect	text19
 16846  009886                     __ptext19:
 16847                           	opt stack 0
 16848  009886                     _SendNEC_bytes:
 16849                           	opt stack 21
 16850                           
 16851                           ;IR.c: 385: if(Sent)
 16852                           
 16853                           ;incstack = 0
 16854  009886  0100               	movlb	0	; () banked
 16855  009888  51FF               	movf	_Sent& (0+255),w,b	;volatile
 16856  00988A  B4D8               	btfsc	status,2,c
 16857  00988C  0012               	return	
 16858                           
 16859                           ; BSR set to: 0
 16860                           ;IR.c: 386: {
 16861                           ;IR.c: 388: if(!code)
 16862  00988E  0100               	movlb	0	; () banked
 16863  009890  5173               	movf	SendNEC_bytes@code& (0+255),w,b
 16864  009892  0100               	movlb	0	; () banked
 16865  009894  1174               	iorwf	(SendNEC_bytes@code+1)& (0+255),w,b
 16866  009896  0100               	movlb	0	; () banked
 16867  009898  1175               	iorwf	(SendNEC_bytes@code+2)& (0+255),w,b
 16868  00989A  0100               	movlb	0	; () banked
 16869  00989C  1176               	iorwf	(SendNEC_bytes@code+3)& (0+255),w,b
 16870  00989E  B4D8               	btfsc	status,2,c
 16871  0098A0  0012               	return	
 16872  0098A2  D001               	goto	l10324
 16873                           
 16874                           ; BSR set to: 0
 16875                           ;IR.c: 389: {
 16876                           ;IR.c: 390: return 0;
 16877                           ;	Return value of _SendNEC_bytes is never used
 16878  0098A4  0012               	return	
 16879  0098A6                     l10324:
 16880                           
 16881                           ; BSR set to: 0
 16882                           ;IR.c: 391: }
 16883                           ;IR.c: 392: RF_IR = 66;
 16884  0098A6  0E42               	movlw	66
 16885  0098A8  6E5C               	movwf	_RF_IR,c
 16886                           
 16887                           ;IR.c: 393: Sent = 0;
 16888  0098AA  0E00               	movlw	0
 16889  0098AC  0100               	movlb	0	; () banked
 16890  0098AE  6FFF               	movwf	_Sent& (0+255),b	;volatile
 16891                           
 16892                           ;IR.c: 394: IRsendFlag = 1;
 16893  0098B0  0E01               	movlw	1
 16894  0098B2  6E4F               	movwf	_IRsendFlag,c
 16895                           
 16896                           ;IR.c: 395: IRcodeBit = 0;
 16897  0098B4  0E00               	movlw	0
 16898  0098B6  6E4A               	movwf	_IRcodeBit,c
 16899                           
 16900                           ;IR.c: 396: IRcodePlace = 7;
 16901  0098B8  0E07               	movlw	7
 16902  0098BA  0100               	movlb	0	; () banked
 16903  0098BC  6FFE               	movwf	_IRcodePlace& (0+255),b
 16904                           
 16905                           ; BSR set to: 0
 16906                           ;IR.c: 397: IRsendCode = Reverse_4Byte(code);
 16907  0098BE  C073  F063         	movff	SendNEC_bytes@code,Reverse_4Byte@This
 16908  0098C2  C074  F064         	movff	SendNEC_bytes@code+1,Reverse_4Byte@This+1
 16909  0098C6  C075  F065         	movff	SendNEC_bytes@code+2,Reverse_4Byte@This+2
 16910  0098CA  C076  F066         	movff	SendNEC_bytes@code+3,Reverse_4Byte@This+3
 16911  0098CE  EC59  F01A         	call	_Reverse_4Byte	;wreg free
 16912  0098D2  C063  F314         	movff	?_Reverse_4Byte,_IRsendCode
 16913  0098D6  C064  F315         	movff	?_Reverse_4Byte+1,_IRsendCode+1
 16914  0098DA  C065  F316         	movff	?_Reverse_4Byte+2,_IRsendCode+2
 16915  0098DE  C066  F317         	movff	?_Reverse_4Byte+3,_IRsendCode+3
 16916                           
 16917                           ;IR.c: 398: if(RepeatAmount)
 16918  0098E2  0100               	movlb	0	; () banked
 16919  0098E4  5177               	movf	SendNEC_bytes@RepeatAmount& (0+255),w,b
 16920  0098E6  0100               	movlb	0	; () banked
 16921  0098E8  B4D8               	btfsc	status,2,c
 16922  0098EA  D003               	goto	l10332
 16923                           
 16924                           ; BSR set to: 0
 16925                           ;IR.c: 399: {
 16926                           ;IR.c: 400: IRrepeatflag = 1;
 16927  0098EC  0E01               	movlw	1
 16928  0098EE  6E4E               	movwf	_IRrepeatflag,c
 16929  0098F0  D000               	goto	l10332
 16930  0098F2                     l10332:
 16931                           
 16932                           ; BSR set to: 0
 16933                           ;IR.c: 401: }
 16934                           ;IR.c: 402: IRrepeatAmount = RepeatAmount;
 16935  0098F2  C077  F04D         	movff	SendNEC_bytes@RepeatAmount,_IRrepeatAmount
 16936                           
 16937                           ;IR.c: 403: (TMR2 = 0);
 16938  0098F6  0E00               	movlw	0
 16939  0098F8  6ECC               	movwf	4044,c	;volatile
 16940                           
 16941                           ;IR.c: 404: (PR2 = 150);
 16942  0098FA  0E96               	movlw	150
 16943  0098FC  6ECB               	movwf	4043,c	;volatile
 16944                           
 16945                           ;IR.c: 405: RF_IR_Postscaler = 4;
 16946  0098FE  0E04               	movlw	4
 16947  009900  6E5D               	movwf	_RF_IR_Postscaler,c	;volatile
 16948                           
 16949                           ;IR.c: 406: (IRmod = 1);
 16950  009902  0E01               	movlw	1
 16951  009904  6E4B               	movwf	_IRmod,c	;volatile
 16952                           
 16953                           ; BSR set to: 0
 16954                           ;IR.c: 407: (T2CONbits.TMR2ON = 1);
 16955  009906  84CA               	bsf	4042,2,c	;volatile
 16956                           
 16957                           ; BSR set to: 0
 16958                           ;IR.c: 408: return 1;
 16959                           ;	Return value of _SendNEC_bytes is never used
 16960  009908  0012               	return	
 16961                           
 16962                           ; BSR set to: 0
 16963                           
 16964                           ; BSR set to: 0
 16965                           ;IR.c: 409: }
 16966                           ;IR.c: 410: return 2;
 16967                           ;	Return value of _SendNEC_bytes is never used
 16968  00990A  0012               	return		;funcret
 16969  00990C                     __end_of_SendNEC_bytes:
 16970                           	opt stack 0
 16971                           tblptru	equ	0xFF8
 16972                           tblptrh	equ	0xFF7
 16973                           tblptrl	equ	0xFF6
 16974                           tablat	equ	0xFF5
 16975                           prodh	equ	0xFF4
 16976                           prodl	equ	0xFF3
 16977                           intcon	equ	0xFF2
 16978                           indf0	equ	0xFEF
 16979                           postinc0	equ	0xFEE
 16980                           plusw0	equ	0xFEB
 16981                           fsr0h	equ	0xFEA
 16982                           fsr0l	equ	0xFE9
 16983                           wreg	equ	0xFE8
 16984                           indf1	equ	0xFE7
 16985                           postdec1	equ	0xFE5
 16986                           fsr1h	equ	0xFE2
 16987                           fsr1l	equ	0xFE1
 16988                           indf2	equ	0xFDF
 16989                           postinc2	equ	0xFDE
 16990                           plusw2	equ	0xFDB
 16991                           fsr2h	equ	0xFDA
 16992                           fsr2l	equ	0xFD9
 16993                           status	equ	0xFD8
 16994                           
 16995 ;; *************** function _Reverse_4Byte *****************
 16996 ;; Defined at:
 16997 ;;		line 436 in file "MISC.c"
 16998 ;; Parameters:    Size  Location     Type
 16999 ;;  This            4    3[BANK0 ] unsigned long 
 17000 ;; Auto vars:     Size  Location     Type
 17001 ;;  temp            4   15[BANK0 ] unsigned long 
 17002 ;; Return value:  Size  Location     Type
 17003 ;;                  4    3[BANK0 ] unsigned long 
 17004 ;; Registers used:
 17005 ;;		wreg, status,2, status,0
 17006 ;; Tracked objects:
 17007 ;;		On entry : 0/0
 17008 ;;		On exit  : 0/0
 17009 ;;		Unchanged: 0/0
 17010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17012 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17013 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17014 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17015 ;;Total ram usage:       16 bytes
 17016 ;; Hardware stack levels used:    1
 17017 ;; Hardware stack levels required when called:    6
 17018 ;; This function calls:
 17019 ;;		Nothing
 17020 ;; This function is called by:
 17021 ;;		_SendNEC_bytes
 17022 ;; This function uses a non-reentrant model
 17023 ;;
 17024                           
 17025                           	psect	text20
 17026  0034B2                     __ptext20:
 17027                           	opt stack 0
 17028  0034B2                     _Reverse_4Byte:
 17029                           	opt stack 21
 17030                           
 17031                           ;MISC.c: 438: unsigned long temp=0;
 17032                           
 17033                           ; BSR set to: 0
 17034                           ;incstack = 0
 17035  0034B2  0E00               	movlw	0
 17036  0034B4  0100               	movlb	0	; () banked
 17037  0034B6  6F6F               	movwf	Reverse_4Byte@temp& (0+255),b
 17038  0034B8  0E00               	movlw	0
 17039  0034BA  6F70               	movwf	(Reverse_4Byte@temp+1)& (0+255),b
 17040  0034BC  0E00               	movlw	0
 17041  0034BE  6F71               	movwf	(Reverse_4Byte@temp+2)& (0+255),b
 17042  0034C0  0E00               	movlw	0
 17043  0034C2  6F72               	movwf	(Reverse_4Byte@temp+3)& (0+255),b
 17044                           
 17045                           ; BSR set to: 0
 17046                           ;MISC.c: 440: temp += (This & 0x00000001) << 31;
 17047  0034C4  0E01               	movlw	1
 17048  0034C6  0100               	movlb	0	; () banked
 17049  0034C8  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17050  0034CA  0100               	movlb	0	; () banked
 17051  0034CC  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17052  0034CE  0E00               	movlw	0
 17053  0034D0  0100               	movlb	0	; () banked
 17054  0034D2  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17055  0034D4  0100               	movlb	0	; () banked
 17056  0034D6  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17057  0034D8  0E00               	movlw	0
 17058  0034DA  0100               	movlb	0	; () banked
 17059  0034DC  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17060  0034DE  0100               	movlb	0	; () banked
 17061  0034E0  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17062  0034E2  0E00               	movlw	0
 17063  0034E4  0100               	movlb	0	; () banked
 17064  0034E6  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17065  0034E8  0100               	movlb	0	; () banked
 17066  0034EA  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17067  0034EC  0E1F               	movlw	31
 17068  0034EE                     u10235:
 17069  0034EE  90D8               	bcf	status,0,c
 17070  0034F0  0100               	movlb	0	; () banked
 17071  0034F2  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17072  0034F4  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17073  0034F6  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17074  0034F8  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17075  0034FA  2EE8               	decfsz	wreg,f,c
 17076  0034FC  D7F8               	goto	u10235
 17077  0034FE  0100               	movlb	0	; () banked
 17078  003500  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17079  003502  0100               	movlb	0	; () banked
 17080  003504  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17081  003506  0100               	movlb	0	; () banked
 17082  003508  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17083  00350A  0100               	movlb	0	; () banked
 17084  00350C  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17085  00350E  0100               	movlb	0	; () banked
 17086  003510  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17087  003512  0100               	movlb	0	; () banked
 17088  003514  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17089  003516  0100               	movlb	0	; () banked
 17090  003518  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17091  00351A  0100               	movlb	0	; () banked
 17092  00351C  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17093                           
 17094                           ; BSR set to: 0
 17095                           ;MISC.c: 441: temp += (This & 0x00000002) << 29;
 17096  00351E  0E02               	movlw	2
 17097  003520  0100               	movlb	0	; () banked
 17098  003522  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17099  003524  0100               	movlb	0	; () banked
 17100  003526  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17101  003528  0E00               	movlw	0
 17102  00352A  0100               	movlb	0	; () banked
 17103  00352C  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17104  00352E  0100               	movlb	0	; () banked
 17105  003530  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17106  003532  0E00               	movlw	0
 17107  003534  0100               	movlb	0	; () banked
 17108  003536  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17109  003538  0100               	movlb	0	; () banked
 17110  00353A  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17111  00353C  0E00               	movlw	0
 17112  00353E  0100               	movlb	0	; () banked
 17113  003540  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17114  003542  0100               	movlb	0	; () banked
 17115  003544  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17116  003546  0E1D               	movlw	29
 17117  003548                     u10245:
 17118  003548  90D8               	bcf	status,0,c
 17119  00354A  0100               	movlb	0	; () banked
 17120  00354C  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17121  00354E  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17122  003550  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17123  003552  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17124  003554  2EE8               	decfsz	wreg,f,c
 17125  003556  D7F8               	goto	u10245
 17126  003558  0100               	movlb	0	; () banked
 17127  00355A  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17128  00355C  0100               	movlb	0	; () banked
 17129  00355E  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17130  003560  0100               	movlb	0	; () banked
 17131  003562  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17132  003564  0100               	movlb	0	; () banked
 17133  003566  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17134  003568  0100               	movlb	0	; () banked
 17135  00356A  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17136  00356C  0100               	movlb	0	; () banked
 17137  00356E  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17138  003570  0100               	movlb	0	; () banked
 17139  003572  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17140  003574  0100               	movlb	0	; () banked
 17141  003576  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17142                           
 17143                           ; BSR set to: 0
 17144                           ;MISC.c: 442: temp += (This & 0x00000004) << 27;
 17145  003578  0E04               	movlw	4
 17146  00357A  0100               	movlb	0	; () banked
 17147  00357C  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17148  00357E  0100               	movlb	0	; () banked
 17149  003580  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17150  003582  0E00               	movlw	0
 17151  003584  0100               	movlb	0	; () banked
 17152  003586  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17153  003588  0100               	movlb	0	; () banked
 17154  00358A  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17155  00358C  0E00               	movlw	0
 17156  00358E  0100               	movlb	0	; () banked
 17157  003590  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17158  003592  0100               	movlb	0	; () banked
 17159  003594  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17160  003596  0E00               	movlw	0
 17161  003598  0100               	movlb	0	; () banked
 17162  00359A  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17163  00359C  0100               	movlb	0	; () banked
 17164  00359E  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17165  0035A0  0E1B               	movlw	27
 17166  0035A2                     u10255:
 17167  0035A2  90D8               	bcf	status,0,c
 17168  0035A4  0100               	movlb	0	; () banked
 17169  0035A6  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17170  0035A8  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17171  0035AA  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17172  0035AC  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17173  0035AE  2EE8               	decfsz	wreg,f,c
 17174  0035B0  D7F8               	goto	u10255
 17175  0035B2  0100               	movlb	0	; () banked
 17176  0035B4  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17177  0035B6  0100               	movlb	0	; () banked
 17178  0035B8  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17179  0035BA  0100               	movlb	0	; () banked
 17180  0035BC  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17181  0035BE  0100               	movlb	0	; () banked
 17182  0035C0  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17183  0035C2  0100               	movlb	0	; () banked
 17184  0035C4  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17185  0035C6  0100               	movlb	0	; () banked
 17186  0035C8  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17187  0035CA  0100               	movlb	0	; () banked
 17188  0035CC  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17189  0035CE  0100               	movlb	0	; () banked
 17190  0035D0  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17191                           
 17192                           ; BSR set to: 0
 17193                           ;MISC.c: 443: temp += (This & 0x00000008) << 25;
 17194  0035D2  0E08               	movlw	8
 17195  0035D4  0100               	movlb	0	; () banked
 17196  0035D6  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17197  0035D8  0100               	movlb	0	; () banked
 17198  0035DA  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17199  0035DC  0E00               	movlw	0
 17200  0035DE  0100               	movlb	0	; () banked
 17201  0035E0  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17202  0035E2  0100               	movlb	0	; () banked
 17203  0035E4  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17204  0035E6  0E00               	movlw	0
 17205  0035E8  0100               	movlb	0	; () banked
 17206  0035EA  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17207  0035EC  0100               	movlb	0	; () banked
 17208  0035EE  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17209  0035F0  0E00               	movlw	0
 17210  0035F2  0100               	movlb	0	; () banked
 17211  0035F4  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17212  0035F6  0100               	movlb	0	; () banked
 17213  0035F8  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17214  0035FA  0E19               	movlw	25
 17215  0035FC                     u10265:
 17216  0035FC  90D8               	bcf	status,0,c
 17217  0035FE  0100               	movlb	0	; () banked
 17218  003600  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17219  003602  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17220  003604  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17221  003606  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17222  003608  2EE8               	decfsz	wreg,f,c
 17223  00360A  D7F8               	goto	u10265
 17224  00360C  0100               	movlb	0	; () banked
 17225  00360E  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17226  003610  0100               	movlb	0	; () banked
 17227  003612  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17228  003614  0100               	movlb	0	; () banked
 17229  003616  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17230  003618  0100               	movlb	0	; () banked
 17231  00361A  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17232  00361C  0100               	movlb	0	; () banked
 17233  00361E  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17234  003620  0100               	movlb	0	; () banked
 17235  003622  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17236  003624  0100               	movlb	0	; () banked
 17237  003626  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17238  003628  0100               	movlb	0	; () banked
 17239  00362A  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17240                           
 17241                           ; BSR set to: 0
 17242                           ;MISC.c: 444: temp += (This & 0x00000010) << 23;
 17243  00362C  0E10               	movlw	16
 17244  00362E  0100               	movlb	0	; () banked
 17245  003630  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17246  003632  0100               	movlb	0	; () banked
 17247  003634  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17248  003636  0E00               	movlw	0
 17249  003638  0100               	movlb	0	; () banked
 17250  00363A  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17251  00363C  0100               	movlb	0	; () banked
 17252  00363E  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17253  003640  0E00               	movlw	0
 17254  003642  0100               	movlb	0	; () banked
 17255  003644  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17256  003646  0100               	movlb	0	; () banked
 17257  003648  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17258  00364A  0E00               	movlw	0
 17259  00364C  0100               	movlb	0	; () banked
 17260  00364E  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17261  003650  0100               	movlb	0	; () banked
 17262  003652  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17263  003654  0E17               	movlw	23
 17264  003656                     u10275:
 17265  003656  90D8               	bcf	status,0,c
 17266  003658  0100               	movlb	0	; () banked
 17267  00365A  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17268  00365C  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17269  00365E  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17270  003660  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17271  003662  2EE8               	decfsz	wreg,f,c
 17272  003664  D7F8               	goto	u10275
 17273  003666  0100               	movlb	0	; () banked
 17274  003668  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17275  00366A  0100               	movlb	0	; () banked
 17276  00366C  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17277  00366E  0100               	movlb	0	; () banked
 17278  003670  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17279  003672  0100               	movlb	0	; () banked
 17280  003674  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17281  003676  0100               	movlb	0	; () banked
 17282  003678  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17283  00367A  0100               	movlb	0	; () banked
 17284  00367C  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17285  00367E  0100               	movlb	0	; () banked
 17286  003680  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17287  003682  0100               	movlb	0	; () banked
 17288  003684  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17289                           
 17290                           ; BSR set to: 0
 17291                           ;MISC.c: 445: temp += (This & 0x00000020) << 21;
 17292  003686  0E20               	movlw	32
 17293  003688  0100               	movlb	0	; () banked
 17294  00368A  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17295  00368C  0100               	movlb	0	; () banked
 17296  00368E  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17297  003690  0E00               	movlw	0
 17298  003692  0100               	movlb	0	; () banked
 17299  003694  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17300  003696  0100               	movlb	0	; () banked
 17301  003698  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17302  00369A  0E00               	movlw	0
 17303  00369C  0100               	movlb	0	; () banked
 17304  00369E  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17305  0036A0  0100               	movlb	0	; () banked
 17306  0036A2  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17307  0036A4  0E00               	movlw	0
 17308  0036A6  0100               	movlb	0	; () banked
 17309  0036A8  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17310  0036AA  0100               	movlb	0	; () banked
 17311  0036AC  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17312  0036AE  0E15               	movlw	21
 17313  0036B0                     u10285:
 17314  0036B0  90D8               	bcf	status,0,c
 17315  0036B2  0100               	movlb	0	; () banked
 17316  0036B4  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17317  0036B6  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17318  0036B8  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17319  0036BA  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17320  0036BC  2EE8               	decfsz	wreg,f,c
 17321  0036BE  D7F8               	goto	u10285
 17322  0036C0  0100               	movlb	0	; () banked
 17323  0036C2  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17324  0036C4  0100               	movlb	0	; () banked
 17325  0036C6  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17326  0036C8  0100               	movlb	0	; () banked
 17327  0036CA  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17328  0036CC  0100               	movlb	0	; () banked
 17329  0036CE  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17330  0036D0  0100               	movlb	0	; () banked
 17331  0036D2  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17332  0036D4  0100               	movlb	0	; () banked
 17333  0036D6  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17334  0036D8  0100               	movlb	0	; () banked
 17335  0036DA  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17336  0036DC  0100               	movlb	0	; () banked
 17337  0036DE  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17338                           
 17339                           ; BSR set to: 0
 17340                           ;MISC.c: 446: temp += (This & 0x00000040) << 19;
 17341  0036E0  0E40               	movlw	64
 17342  0036E2  0100               	movlb	0	; () banked
 17343  0036E4  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17344  0036E6  0100               	movlb	0	; () banked
 17345  0036E8  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17346  0036EA  0E00               	movlw	0
 17347  0036EC  0100               	movlb	0	; () banked
 17348  0036EE  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17349  0036F0  0100               	movlb	0	; () banked
 17350  0036F2  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17351  0036F4  0E00               	movlw	0
 17352  0036F6  0100               	movlb	0	; () banked
 17353  0036F8  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17354  0036FA  0100               	movlb	0	; () banked
 17355  0036FC  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17356  0036FE  0E00               	movlw	0
 17357  003700  0100               	movlb	0	; () banked
 17358  003702  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17359  003704  0100               	movlb	0	; () banked
 17360  003706  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17361  003708  0E13               	movlw	19
 17362  00370A                     u10295:
 17363  00370A  90D8               	bcf	status,0,c
 17364  00370C  0100               	movlb	0	; () banked
 17365  00370E  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17366  003710  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17367  003712  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17368  003714  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17369  003716  2EE8               	decfsz	wreg,f,c
 17370  003718  D7F8               	goto	u10295
 17371  00371A  0100               	movlb	0	; () banked
 17372  00371C  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17373  00371E  0100               	movlb	0	; () banked
 17374  003720  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17375  003722  0100               	movlb	0	; () banked
 17376  003724  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17377  003726  0100               	movlb	0	; () banked
 17378  003728  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17379  00372A  0100               	movlb	0	; () banked
 17380  00372C  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17381  00372E  0100               	movlb	0	; () banked
 17382  003730  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17383  003732  0100               	movlb	0	; () banked
 17384  003734  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17385  003736  0100               	movlb	0	; () banked
 17386  003738  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17387                           
 17388                           ; BSR set to: 0
 17389                           ;MISC.c: 447: temp += (This & 0x00000080) << 17;
 17390  00373A  0E80               	movlw	128
 17391  00373C  0100               	movlb	0	; () banked
 17392  00373E  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17393  003740  0100               	movlb	0	; () banked
 17394  003742  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17395  003744  0E00               	movlw	0
 17396  003746  0100               	movlb	0	; () banked
 17397  003748  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17398  00374A  0100               	movlb	0	; () banked
 17399  00374C  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17400  00374E  0E00               	movlw	0
 17401  003750  0100               	movlb	0	; () banked
 17402  003752  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17403  003754  0100               	movlb	0	; () banked
 17404  003756  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17405  003758  0E00               	movlw	0
 17406  00375A  0100               	movlb	0	; () banked
 17407  00375C  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17408  00375E  0100               	movlb	0	; () banked
 17409  003760  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17410  003762  0E11               	movlw	17
 17411  003764                     u10305:
 17412  003764  90D8               	bcf	status,0,c
 17413  003766  0100               	movlb	0	; () banked
 17414  003768  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17415  00376A  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17416  00376C  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17417  00376E  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17418  003770  2EE8               	decfsz	wreg,f,c
 17419  003772  D7F8               	goto	u10305
 17420  003774  0100               	movlb	0	; () banked
 17421  003776  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17422  003778  0100               	movlb	0	; () banked
 17423  00377A  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17424  00377C  0100               	movlb	0	; () banked
 17425  00377E  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17426  003780  0100               	movlb	0	; () banked
 17427  003782  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17428  003784  0100               	movlb	0	; () banked
 17429  003786  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17430  003788  0100               	movlb	0	; () banked
 17431  00378A  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17432  00378C  0100               	movlb	0	; () banked
 17433  00378E  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17434  003790  0100               	movlb	0	; () banked
 17435  003792  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17436                           
 17437                           ; BSR set to: 0
 17438                           ;MISC.c: 448: temp += (This & 0x00000100) << 15;
 17439  003794  0E00               	movlw	0
 17440  003796  0100               	movlb	0	; () banked
 17441  003798  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17442  00379A  0100               	movlb	0	; () banked
 17443  00379C  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17444  00379E  0E01               	movlw	1
 17445  0037A0  0100               	movlb	0	; () banked
 17446  0037A2  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17447  0037A4  0100               	movlb	0	; () banked
 17448  0037A6  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17449  0037A8  0E00               	movlw	0
 17450  0037AA  0100               	movlb	0	; () banked
 17451  0037AC  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17452  0037AE  0100               	movlb	0	; () banked
 17453  0037B0  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17454  0037B2  0E00               	movlw	0
 17455  0037B4  0100               	movlb	0	; () banked
 17456  0037B6  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17457  0037B8  0100               	movlb	0	; () banked
 17458  0037BA  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17459  0037BC  0E0F               	movlw	15
 17460  0037BE                     u10315:
 17461  0037BE  90D8               	bcf	status,0,c
 17462  0037C0  0100               	movlb	0	; () banked
 17463  0037C2  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17464  0037C4  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17465  0037C6  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17466  0037C8  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17467  0037CA  2EE8               	decfsz	wreg,f,c
 17468  0037CC  D7F8               	goto	u10315
 17469  0037CE  0100               	movlb	0	; () banked
 17470  0037D0  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17471  0037D2  0100               	movlb	0	; () banked
 17472  0037D4  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17473  0037D6  0100               	movlb	0	; () banked
 17474  0037D8  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17475  0037DA  0100               	movlb	0	; () banked
 17476  0037DC  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17477  0037DE  0100               	movlb	0	; () banked
 17478  0037E0  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17479  0037E2  0100               	movlb	0	; () banked
 17480  0037E4  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17481  0037E6  0100               	movlb	0	; () banked
 17482  0037E8  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17483  0037EA  0100               	movlb	0	; () banked
 17484  0037EC  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17485                           
 17486                           ; BSR set to: 0
 17487                           ;MISC.c: 449: temp += (This & 0x00000200) << 13;
 17488  0037EE  0E00               	movlw	0
 17489  0037F0  0100               	movlb	0	; () banked
 17490  0037F2  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17491  0037F4  0100               	movlb	0	; () banked
 17492  0037F6  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17493  0037F8  0E02               	movlw	2
 17494  0037FA  0100               	movlb	0	; () banked
 17495  0037FC  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17496  0037FE  0100               	movlb	0	; () banked
 17497  003800  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17498  003802  0E00               	movlw	0
 17499  003804  0100               	movlb	0	; () banked
 17500  003806  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17501  003808  0100               	movlb	0	; () banked
 17502  00380A  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17503  00380C  0E00               	movlw	0
 17504  00380E  0100               	movlb	0	; () banked
 17505  003810  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17506  003812  0100               	movlb	0	; () banked
 17507  003814  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17508  003816  0E0D               	movlw	13
 17509  003818                     u10325:
 17510  003818  90D8               	bcf	status,0,c
 17511  00381A  0100               	movlb	0	; () banked
 17512  00381C  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17513  00381E  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17514  003820  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17515  003822  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17516  003824  2EE8               	decfsz	wreg,f,c
 17517  003826  D7F8               	goto	u10325
 17518  003828  0100               	movlb	0	; () banked
 17519  00382A  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17520  00382C  0100               	movlb	0	; () banked
 17521  00382E  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17522  003830  0100               	movlb	0	; () banked
 17523  003832  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17524  003834  0100               	movlb	0	; () banked
 17525  003836  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17526  003838  0100               	movlb	0	; () banked
 17527  00383A  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17528  00383C  0100               	movlb	0	; () banked
 17529  00383E  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17530  003840  0100               	movlb	0	; () banked
 17531  003842  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17532  003844  0100               	movlb	0	; () banked
 17533  003846  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17534                           
 17535                           ; BSR set to: 0
 17536                           ;MISC.c: 450: temp += (This & 0x00000400) << 11;
 17537  003848  0E00               	movlw	0
 17538  00384A  0100               	movlb	0	; () banked
 17539  00384C  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17540  00384E  0100               	movlb	0	; () banked
 17541  003850  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17542  003852  0E04               	movlw	4
 17543  003854  0100               	movlb	0	; () banked
 17544  003856  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17545  003858  0100               	movlb	0	; () banked
 17546  00385A  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17547  00385C  0E00               	movlw	0
 17548  00385E  0100               	movlb	0	; () banked
 17549  003860  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17550  003862  0100               	movlb	0	; () banked
 17551  003864  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17552  003866  0E00               	movlw	0
 17553  003868  0100               	movlb	0	; () banked
 17554  00386A  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17555  00386C  0100               	movlb	0	; () banked
 17556  00386E  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17557  003870  0E0B               	movlw	11
 17558  003872                     u10335:
 17559  003872  90D8               	bcf	status,0,c
 17560  003874  0100               	movlb	0	; () banked
 17561  003876  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17562  003878  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17563  00387A  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17564  00387C  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17565  00387E  2EE8               	decfsz	wreg,f,c
 17566  003880  D7F8               	goto	u10335
 17567  003882  0100               	movlb	0	; () banked
 17568  003884  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17569  003886  0100               	movlb	0	; () banked
 17570  003888  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17571  00388A  0100               	movlb	0	; () banked
 17572  00388C  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17573  00388E  0100               	movlb	0	; () banked
 17574  003890  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17575  003892  0100               	movlb	0	; () banked
 17576  003894  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17577  003896  0100               	movlb	0	; () banked
 17578  003898  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17579  00389A  0100               	movlb	0	; () banked
 17580  00389C  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17581  00389E  0100               	movlb	0	; () banked
 17582  0038A0  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17583                           
 17584                           ; BSR set to: 0
 17585                           ;MISC.c: 451: temp += (This & 0x00000800) << 9;
 17586  0038A2  0E00               	movlw	0
 17587  0038A4  0100               	movlb	0	; () banked
 17588  0038A6  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17589  0038A8  0100               	movlb	0	; () banked
 17590  0038AA  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17591  0038AC  0E08               	movlw	8
 17592  0038AE  0100               	movlb	0	; () banked
 17593  0038B0  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17594  0038B2  0100               	movlb	0	; () banked
 17595  0038B4  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17596  0038B6  0E00               	movlw	0
 17597  0038B8  0100               	movlb	0	; () banked
 17598  0038BA  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17599  0038BC  0100               	movlb	0	; () banked
 17600  0038BE  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17601  0038C0  0E00               	movlw	0
 17602  0038C2  0100               	movlb	0	; () banked
 17603  0038C4  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17604  0038C6  0100               	movlb	0	; () banked
 17605  0038C8  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17606  0038CA  0E09               	movlw	9
 17607  0038CC                     u10345:
 17608  0038CC  90D8               	bcf	status,0,c
 17609  0038CE  0100               	movlb	0	; () banked
 17610  0038D0  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17611  0038D2  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17612  0038D4  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17613  0038D6  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17614  0038D8  2EE8               	decfsz	wreg,f,c
 17615  0038DA  D7F8               	goto	u10345
 17616  0038DC  0100               	movlb	0	; () banked
 17617  0038DE  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17618  0038E0  0100               	movlb	0	; () banked
 17619  0038E2  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17620  0038E4  0100               	movlb	0	; () banked
 17621  0038E6  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17622  0038E8  0100               	movlb	0	; () banked
 17623  0038EA  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17624  0038EC  0100               	movlb	0	; () banked
 17625  0038EE  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17626  0038F0  0100               	movlb	0	; () banked
 17627  0038F2  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17628  0038F4  0100               	movlb	0	; () banked
 17629  0038F6  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17630  0038F8  0100               	movlb	0	; () banked
 17631  0038FA  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17632                           
 17633                           ; BSR set to: 0
 17634                           ;MISC.c: 452: temp += (This & 0x00001000) << 7;
 17635  0038FC  0E00               	movlw	0
 17636  0038FE  0100               	movlb	0	; () banked
 17637  003900  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17638  003902  0100               	movlb	0	; () banked
 17639  003904  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17640  003906  0E10               	movlw	16
 17641  003908  0100               	movlb	0	; () banked
 17642  00390A  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17643  00390C  0100               	movlb	0	; () banked
 17644  00390E  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17645  003910  0E00               	movlw	0
 17646  003912  0100               	movlb	0	; () banked
 17647  003914  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17648  003916  0100               	movlb	0	; () banked
 17649  003918  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17650  00391A  0E00               	movlw	0
 17651  00391C  0100               	movlb	0	; () banked
 17652  00391E  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17653  003920  0100               	movlb	0	; () banked
 17654  003922  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17655  003924  0E07               	movlw	7
 17656  003926                     u10355:
 17657  003926  90D8               	bcf	status,0,c
 17658  003928  0100               	movlb	0	; () banked
 17659  00392A  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17660  00392C  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17661  00392E  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17662  003930  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17663  003932  2EE8               	decfsz	wreg,f,c
 17664  003934  D7F8               	goto	u10355
 17665  003936  0100               	movlb	0	; () banked
 17666  003938  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17667  00393A  0100               	movlb	0	; () banked
 17668  00393C  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17669  00393E  0100               	movlb	0	; () banked
 17670  003940  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17671  003942  0100               	movlb	0	; () banked
 17672  003944  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17673  003946  0100               	movlb	0	; () banked
 17674  003948  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17675  00394A  0100               	movlb	0	; () banked
 17676  00394C  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17677  00394E  0100               	movlb	0	; () banked
 17678  003950  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17679  003952  0100               	movlb	0	; () banked
 17680  003954  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17681                           
 17682                           ; BSR set to: 0
 17683                           ;MISC.c: 453: temp += (This & 0x00002000) << 5;
 17684  003956  0E00               	movlw	0
 17685  003958  0100               	movlb	0	; () banked
 17686  00395A  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17687  00395C  0100               	movlb	0	; () banked
 17688  00395E  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17689  003960  0E20               	movlw	32
 17690  003962  0100               	movlb	0	; () banked
 17691  003964  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17692  003966  0100               	movlb	0	; () banked
 17693  003968  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17694  00396A  0E00               	movlw	0
 17695  00396C  0100               	movlb	0	; () banked
 17696  00396E  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17697  003970  0100               	movlb	0	; () banked
 17698  003972  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17699  003974  0E00               	movlw	0
 17700  003976  0100               	movlb	0	; () banked
 17701  003978  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17702  00397A  0100               	movlb	0	; () banked
 17703  00397C  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17704  00397E  0E05               	movlw	5
 17705  003980                     u10365:
 17706  003980  90D8               	bcf	status,0,c
 17707  003982  0100               	movlb	0	; () banked
 17708  003984  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17709  003986  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17710  003988  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17711  00398A  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17712  00398C  2EE8               	decfsz	wreg,f,c
 17713  00398E  D7F8               	goto	u10365
 17714  003990  0100               	movlb	0	; () banked
 17715  003992  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17716  003994  0100               	movlb	0	; () banked
 17717  003996  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17718  003998  0100               	movlb	0	; () banked
 17719  00399A  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17720  00399C  0100               	movlb	0	; () banked
 17721  00399E  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17722  0039A0  0100               	movlb	0	; () banked
 17723  0039A2  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17724  0039A4  0100               	movlb	0	; () banked
 17725  0039A6  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17726  0039A8  0100               	movlb	0	; () banked
 17727  0039AA  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17728  0039AC  0100               	movlb	0	; () banked
 17729  0039AE  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17730                           
 17731                           ; BSR set to: 0
 17732                           ;MISC.c: 454: temp += (This & 0x00004000) << 3;
 17733  0039B0  0E00               	movlw	0
 17734  0039B2  0100               	movlb	0	; () banked
 17735  0039B4  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17736  0039B6  0100               	movlb	0	; () banked
 17737  0039B8  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17738  0039BA  0E40               	movlw	64
 17739  0039BC  0100               	movlb	0	; () banked
 17740  0039BE  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17741  0039C0  0100               	movlb	0	; () banked
 17742  0039C2  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17743  0039C4  0E00               	movlw	0
 17744  0039C6  0100               	movlb	0	; () banked
 17745  0039C8  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17746  0039CA  0100               	movlb	0	; () banked
 17747  0039CC  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17748  0039CE  0E00               	movlw	0
 17749  0039D0  0100               	movlb	0	; () banked
 17750  0039D2  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17751  0039D4  0100               	movlb	0	; () banked
 17752  0039D6  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17753  0039D8  0E03               	movlw	3
 17754  0039DA                     u10375:
 17755  0039DA  90D8               	bcf	status,0,c
 17756  0039DC  0100               	movlb	0	; () banked
 17757  0039DE  3767               	rlcf	??_Reverse_4Byte& (0+255),f,b
 17758  0039E0  3768               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17759  0039E2  3769               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17760  0039E4  376A               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17761  0039E6  2EE8               	decfsz	wreg,f,c
 17762  0039E8  D7F8               	goto	u10375
 17763  0039EA  0100               	movlb	0	; () banked
 17764  0039EC  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 17765  0039EE  0100               	movlb	0	; () banked
 17766  0039F0  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17767  0039F2  0100               	movlb	0	; () banked
 17768  0039F4  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17769  0039F6  0100               	movlb	0	; () banked
 17770  0039F8  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17771  0039FA  0100               	movlb	0	; () banked
 17772  0039FC  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17773  0039FE  0100               	movlb	0	; () banked
 17774  003A00  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17775  003A02  0100               	movlb	0	; () banked
 17776  003A04  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17777  003A06  0100               	movlb	0	; () banked
 17778  003A08  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17779                           
 17780                           ; BSR set to: 0
 17781                           ;MISC.c: 455: temp += (This & 0x00008000) << 1;
 17782  003A0A  0E00               	movlw	0
 17783  003A0C  0100               	movlb	0	; () banked
 17784  003A0E  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 17785  003A10  0100               	movlb	0	; () banked
 17786  003A12  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 17787  003A14  0E80               	movlw	128
 17788  003A16  0100               	movlb	0	; () banked
 17789  003A18  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17790  003A1A  0100               	movlb	0	; () banked
 17791  003A1C  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17792  003A1E  0E00               	movlw	0
 17793  003A20  0100               	movlb	0	; () banked
 17794  003A22  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17795  003A24  0100               	movlb	0	; () banked
 17796  003A26  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17797  003A28  0E00               	movlw	0
 17798  003A2A  0100               	movlb	0	; () banked
 17799  003A2C  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17800  003A2E  0100               	movlb	0	; () banked
 17801  003A30  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17802  003A32  90D8               	bcf	status,0,c
 17803  003A34  0100               	movlb	0	; () banked
 17804  003A36  3567               	rlcf	??_Reverse_4Byte& (0+255),w,b
 17805  003A38  0100               	movlb	0	; () banked
 17806  003A3A  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17807  003A3C  0100               	movlb	0	; () banked
 17808  003A3E  3568               	rlcf	(??_Reverse_4Byte+1)& (0+255),w,b
 17809  003A40  0100               	movlb	0	; () banked
 17810  003A42  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17811  003A44  0100               	movlb	0	; () banked
 17812  003A46  3569               	rlcf	(??_Reverse_4Byte+2)& (0+255),w,b
 17813  003A48  0100               	movlb	0	; () banked
 17814  003A4A  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17815  003A4C  0100               	movlb	0	; () banked
 17816  003A4E  356A               	rlcf	(??_Reverse_4Byte+3)& (0+255),w,b
 17817  003A50  0100               	movlb	0	; () banked
 17818  003A52  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17819  003A54  0100               	movlb	0	; () banked
 17820  003A56  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17821  003A58  0100               	movlb	0	; () banked
 17822  003A5A  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17823  003A5C  0100               	movlb	0	; () banked
 17824  003A5E  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17825  003A60  0100               	movlb	0	; () banked
 17826  003A62  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17827  003A64  0100               	movlb	0	; () banked
 17828  003A66  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17829  003A68  0100               	movlb	0	; () banked
 17830  003A6A  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17831  003A6C  0100               	movlb	0	; () banked
 17832  003A6E  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17833  003A70  0100               	movlb	0	; () banked
 17834  003A72  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17835                           
 17836                           ; BSR set to: 0
 17837                           ;MISC.c: 456: temp += (This & 0x00010000) >> 1;
 17838  003A74  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17839  003A78  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17840  003A7C  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17841  003A80  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17842  003A84  0100               	movlb	0	; () banked
 17843  003A86  90D8               	bcf	status,0,c
 17844  003A88  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17845  003A8A  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17846  003A8C  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17847  003A8E  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17848  003A90  0E00               	movlw	0
 17849  003A92  0100               	movlb	0	; () banked
 17850  003A94  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 17851  003A96  0100               	movlb	0	; () banked
 17852  003A98  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17853  003A9A  0E80               	movlw	128
 17854  003A9C  0100               	movlb	0	; () banked
 17855  003A9E  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17856  003AA0  0100               	movlb	0	; () banked
 17857  003AA2  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17858  003AA4  0E00               	movlw	0
 17859  003AA6  0100               	movlb	0	; () banked
 17860  003AA8  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17861  003AAA  0100               	movlb	0	; () banked
 17862  003AAC  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17863  003AAE  0E00               	movlw	0
 17864  003AB0  0100               	movlb	0	; () banked
 17865  003AB2  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17866  003AB4  0100               	movlb	0	; () banked
 17867  003AB6  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17868  003AB8  0100               	movlb	0	; () banked
 17869  003ABA  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17870  003ABC  0100               	movlb	0	; () banked
 17871  003ABE  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17872  003AC0  0100               	movlb	0	; () banked
 17873  003AC2  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17874  003AC4  0100               	movlb	0	; () banked
 17875  003AC6  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17876  003AC8  0100               	movlb	0	; () banked
 17877  003ACA  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17878  003ACC  0100               	movlb	0	; () banked
 17879  003ACE  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17880  003AD0  0100               	movlb	0	; () banked
 17881  003AD2  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17882  003AD4  0100               	movlb	0	; () banked
 17883  003AD6  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17884                           
 17885                           ; BSR set to: 0
 17886                           ;MISC.c: 457: temp += (This & 0x00020000) >> 3;
 17887  003AD8  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17888  003ADC  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17889  003AE0  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17890  003AE4  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17891  003AE8  0E04               	movlw	4
 17892  003AEA  D006               	goto	u10380
 17893  003AEC                     u10385:
 17894  003AEC  0100               	movlb	0	; () banked
 17895  003AEE  90D8               	bcf	status,0,c
 17896  003AF0  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17897  003AF2  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17898  003AF4  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17899  003AF6  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17900  003AF8                     u10380:
 17901  003AF8  2EE8               	decfsz	wreg,f,c
 17902  003AFA  D7F8               	goto	u10385
 17903  003AFC  0E00               	movlw	0
 17904  003AFE  0100               	movlb	0	; () banked
 17905  003B00  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 17906  003B02  0100               	movlb	0	; () banked
 17907  003B04  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17908  003B06  0E40               	movlw	64
 17909  003B08  0100               	movlb	0	; () banked
 17910  003B0A  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17911  003B0C  0100               	movlb	0	; () banked
 17912  003B0E  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17913  003B10  0E00               	movlw	0
 17914  003B12  0100               	movlb	0	; () banked
 17915  003B14  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17916  003B16  0100               	movlb	0	; () banked
 17917  003B18  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17918  003B1A  0E00               	movlw	0
 17919  003B1C  0100               	movlb	0	; () banked
 17920  003B1E  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17921  003B20  0100               	movlb	0	; () banked
 17922  003B22  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17923  003B24  0100               	movlb	0	; () banked
 17924  003B26  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17925  003B28  0100               	movlb	0	; () banked
 17926  003B2A  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17927  003B2C  0100               	movlb	0	; () banked
 17928  003B2E  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17929  003B30  0100               	movlb	0	; () banked
 17930  003B32  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17931  003B34  0100               	movlb	0	; () banked
 17932  003B36  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17933  003B38  0100               	movlb	0	; () banked
 17934  003B3A  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17935  003B3C  0100               	movlb	0	; () banked
 17936  003B3E  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17937  003B40  0100               	movlb	0	; () banked
 17938  003B42  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17939                           
 17940                           ; BSR set to: 0
 17941                           ;MISC.c: 458: temp += (This & 0x00040000) >> 5;
 17942  003B44  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17943  003B48  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17944  003B4C  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17945  003B50  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17946  003B54  0E06               	movlw	6
 17947  003B56  D006               	goto	u10390
 17948  003B58                     u10395:
 17949  003B58  0100               	movlb	0	; () banked
 17950  003B5A  90D8               	bcf	status,0,c
 17951  003B5C  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17952  003B5E  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17953  003B60  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17954  003B62  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17955  003B64                     u10390:
 17956  003B64  2EE8               	decfsz	wreg,f,c
 17957  003B66  D7F8               	goto	u10395
 17958  003B68  0E00               	movlw	0
 17959  003B6A  0100               	movlb	0	; () banked
 17960  003B6C  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 17961  003B6E  0100               	movlb	0	; () banked
 17962  003B70  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17963  003B72  0E20               	movlw	32
 17964  003B74  0100               	movlb	0	; () banked
 17965  003B76  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17966  003B78  0100               	movlb	0	; () banked
 17967  003B7A  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17968  003B7C  0E00               	movlw	0
 17969  003B7E  0100               	movlb	0	; () banked
 17970  003B80  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17971  003B82  0100               	movlb	0	; () banked
 17972  003B84  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17973  003B86  0E00               	movlw	0
 17974  003B88  0100               	movlb	0	; () banked
 17975  003B8A  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17976  003B8C  0100               	movlb	0	; () banked
 17977  003B8E  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17978  003B90  0100               	movlb	0	; () banked
 17979  003B92  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17980  003B94  0100               	movlb	0	; () banked
 17981  003B96  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17982  003B98  0100               	movlb	0	; () banked
 17983  003B9A  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17984  003B9C  0100               	movlb	0	; () banked
 17985  003B9E  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17986  003BA0  0100               	movlb	0	; () banked
 17987  003BA2  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17988  003BA4  0100               	movlb	0	; () banked
 17989  003BA6  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17990  003BA8  0100               	movlb	0	; () banked
 17991  003BAA  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17992  003BAC  0100               	movlb	0	; () banked
 17993  003BAE  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17994                           
 17995                           ; BSR set to: 0
 17996                           ;MISC.c: 459: temp += (This & 0x00080000) >> 7;
 17997  003BB0  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17998  003BB4  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17999  003BB8  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 18000  003BBC  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 18001  003BC0  0E08               	movlw	8
 18002  003BC2  D006               	goto	u10400
 18003  003BC4                     u10405:
 18004  003BC4  0100               	movlb	0	; () banked
 18005  003BC6  90D8               	bcf	status,0,c
 18006  003BC8  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18007  003BCA  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18008  003BCC  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18009  003BCE  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 18010  003BD0                     u10400:
 18011  003BD0  2EE8               	decfsz	wreg,f,c
 18012  003BD2  D7F8               	goto	u10405
 18013  003BD4  0E00               	movlw	0
 18014  003BD6  0100               	movlb	0	; () banked
 18015  003BD8  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 18016  003BDA  0100               	movlb	0	; () banked
 18017  003BDC  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 18018  003BDE  0E10               	movlw	16
 18019  003BE0  0100               	movlb	0	; () banked
 18020  003BE2  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 18021  003BE4  0100               	movlb	0	; () banked
 18022  003BE6  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 18023  003BE8  0E00               	movlw	0
 18024  003BEA  0100               	movlb	0	; () banked
 18025  003BEC  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 18026  003BEE  0100               	movlb	0	; () banked
 18027  003BF0  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 18028  003BF2  0E00               	movlw	0
 18029  003BF4  0100               	movlb	0	; () banked
 18030  003BF6  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 18031  003BF8  0100               	movlb	0	; () banked
 18032  003BFA  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 18033  003BFC  0100               	movlb	0	; () banked
 18034  003BFE  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 18035  003C00  0100               	movlb	0	; () banked
 18036  003C02  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18037  003C04  0100               	movlb	0	; () banked
 18038  003C06  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 18039  003C08  0100               	movlb	0	; () banked
 18040  003C0A  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18041  003C0C  0100               	movlb	0	; () banked
 18042  003C0E  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 18043  003C10  0100               	movlb	0	; () banked
 18044  003C12  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18045  003C14  0100               	movlb	0	; () banked
 18046  003C16  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 18047  003C18  0100               	movlb	0	; () banked
 18048  003C1A  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18049                           
 18050                           ; BSR set to: 0
 18051                           ;MISC.c: 460: temp += (This & 0x00100000) >> 9;
 18052  003C1C  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 18053  003C20  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 18054  003C24  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 18055  003C28  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 18056  003C2C  0E0A               	movlw	10
 18057  003C2E  D006               	goto	u10410
 18058  003C30                     u10415:
 18059  003C30  0100               	movlb	0	; () banked
 18060  003C32  90D8               	bcf	status,0,c
 18061  003C34  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18062  003C36  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18063  003C38  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18064  003C3A  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 18065  003C3C                     u10410:
 18066  003C3C  2EE8               	decfsz	wreg,f,c
 18067  003C3E  D7F8               	goto	u10415
 18068  003C40  0E00               	movlw	0
 18069  003C42  0100               	movlb	0	; () banked
 18070  003C44  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 18071  003C46  0100               	movlb	0	; () banked
 18072  003C48  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 18073  003C4A  0E08               	movlw	8
 18074  003C4C  0100               	movlb	0	; () banked
 18075  003C4E  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 18076  003C50  0100               	movlb	0	; () banked
 18077  003C52  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 18078  003C54  0E00               	movlw	0
 18079  003C56  0100               	movlb	0	; () banked
 18080  003C58  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 18081  003C5A  0100               	movlb	0	; () banked
 18082  003C5C  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 18083  003C5E  0E00               	movlw	0
 18084  003C60  0100               	movlb	0	; () banked
 18085  003C62  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 18086  003C64  0100               	movlb	0	; () banked
 18087  003C66  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 18088  003C68  0100               	movlb	0	; () banked
 18089  003C6A  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 18090  003C6C  0100               	movlb	0	; () banked
 18091  003C6E  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18092  003C70  0100               	movlb	0	; () banked
 18093  003C72  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 18094  003C74  0100               	movlb	0	; () banked
 18095  003C76  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18096  003C78  0100               	movlb	0	; () banked
 18097  003C7A  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 18098  003C7C  0100               	movlb	0	; () banked
 18099  003C7E  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18100  003C80  0100               	movlb	0	; () banked
 18101  003C82  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 18102  003C84  0100               	movlb	0	; () banked
 18103  003C86  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18104                           
 18105                           ; BSR set to: 0
 18106                           ;MISC.c: 461: temp += (This & 0x00200000) >> 11;
 18107  003C88  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 18108  003C8C  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 18109  003C90  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 18110  003C94  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 18111  003C98  0E0C               	movlw	12
 18112  003C9A  D006               	goto	u10420
 18113  003C9C                     u10425:
 18114  003C9C  0100               	movlb	0	; () banked
 18115  003C9E  90D8               	bcf	status,0,c
 18116  003CA0  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18117  003CA2  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18118  003CA4  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18119  003CA6  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 18120  003CA8                     u10420:
 18121  003CA8  2EE8               	decfsz	wreg,f,c
 18122  003CAA  D7F8               	goto	u10425
 18123  003CAC  0E00               	movlw	0
 18124  003CAE  0100               	movlb	0	; () banked
 18125  003CB0  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 18126  003CB2  0100               	movlb	0	; () banked
 18127  003CB4  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 18128  003CB6  0E04               	movlw	4
 18129  003CB8  0100               	movlb	0	; () banked
 18130  003CBA  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 18131  003CBC  0100               	movlb	0	; () banked
 18132  003CBE  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 18133  003CC0  0E00               	movlw	0
 18134  003CC2  0100               	movlb	0	; () banked
 18135  003CC4  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 18136  003CC6  0100               	movlb	0	; () banked
 18137  003CC8  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 18138  003CCA  0E00               	movlw	0
 18139  003CCC  0100               	movlb	0	; () banked
 18140  003CCE  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 18141  003CD0  0100               	movlb	0	; () banked
 18142  003CD2  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 18143  003CD4  0100               	movlb	0	; () banked
 18144  003CD6  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 18145  003CD8  0100               	movlb	0	; () banked
 18146  003CDA  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18147  003CDC  0100               	movlb	0	; () banked
 18148  003CDE  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 18149  003CE0  0100               	movlb	0	; () banked
 18150  003CE2  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18151  003CE4  0100               	movlb	0	; () banked
 18152  003CE6  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 18153  003CE8  0100               	movlb	0	; () banked
 18154  003CEA  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18155  003CEC  0100               	movlb	0	; () banked
 18156  003CEE  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 18157  003CF0  0100               	movlb	0	; () banked
 18158  003CF2  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18159                           
 18160                           ; BSR set to: 0
 18161                           ;MISC.c: 462: temp += (This & 0x00400000) >> 13;
 18162  003CF4  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 18163  003CF8  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 18164  003CFC  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 18165  003D00  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 18166  003D04  0E0E               	movlw	14
 18167  003D06  D006               	goto	u10430
 18168  003D08                     u10435:
 18169  003D08  0100               	movlb	0	; () banked
 18170  003D0A  90D8               	bcf	status,0,c
 18171  003D0C  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18172  003D0E  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18173  003D10  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18174  003D12  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 18175  003D14                     u10430:
 18176  003D14  2EE8               	decfsz	wreg,f,c
 18177  003D16  D7F8               	goto	u10435
 18178  003D18  0E00               	movlw	0
 18179  003D1A  0100               	movlb	0	; () banked
 18180  003D1C  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 18181  003D1E  0100               	movlb	0	; () banked
 18182  003D20  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 18183  003D22  0E02               	movlw	2
 18184  003D24  0100               	movlb	0	; () banked
 18185  003D26  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 18186  003D28  0100               	movlb	0	; () banked
 18187  003D2A  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 18188  003D2C  0E00               	movlw	0
 18189  003D2E  0100               	movlb	0	; () banked
 18190  003D30  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 18191  003D32  0100               	movlb	0	; () banked
 18192  003D34  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 18193  003D36  0E00               	movlw	0
 18194  003D38  0100               	movlb	0	; () banked
 18195  003D3A  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 18196  003D3C  0100               	movlb	0	; () banked
 18197  003D3E  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 18198  003D40  0100               	movlb	0	; () banked
 18199  003D42  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 18200  003D44  0100               	movlb	0	; () banked
 18201  003D46  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18202  003D48  0100               	movlb	0	; () banked
 18203  003D4A  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 18204  003D4C  0100               	movlb	0	; () banked
 18205  003D4E  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18206  003D50  0100               	movlb	0	; () banked
 18207  003D52  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 18208  003D54  0100               	movlb	0	; () banked
 18209  003D56  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18210  003D58  0100               	movlb	0	; () banked
 18211  003D5A  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 18212  003D5C  0100               	movlb	0	; () banked
 18213  003D5E  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18214                           
 18215                           ; BSR set to: 0
 18216                           ;MISC.c: 463: temp += (This & 0x00800000) >> 15;
 18217  003D60  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 18218  003D64  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 18219  003D68  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 18220  003D6C  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 18221  003D70  0E10               	movlw	16
 18222  003D72  D006               	goto	u10440
 18223  003D74                     u10445:
 18224  003D74  0100               	movlb	0	; () banked
 18225  003D76  90D8               	bcf	status,0,c
 18226  003D78  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18227  003D7A  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18228  003D7C  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18229  003D7E  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 18230  003D80                     u10440:
 18231  003D80  2EE8               	decfsz	wreg,f,c
 18232  003D82  D7F8               	goto	u10445
 18233  003D84  0E00               	movlw	0
 18234  003D86  0100               	movlb	0	; () banked
 18235  003D88  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 18236  003D8A  0100               	movlb	0	; () banked
 18237  003D8C  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 18238  003D8E  0E01               	movlw	1
 18239  003D90  0100               	movlb	0	; () banked
 18240  003D92  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 18241  003D94  0100               	movlb	0	; () banked
 18242  003D96  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 18243  003D98  0E00               	movlw	0
 18244  003D9A  0100               	movlb	0	; () banked
 18245  003D9C  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 18246  003D9E  0100               	movlb	0	; () banked
 18247  003DA0  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 18248  003DA2  0E00               	movlw	0
 18249  003DA4  0100               	movlb	0	; () banked
 18250  003DA6  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 18251  003DA8  0100               	movlb	0	; () banked
 18252  003DAA  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 18253  003DAC  0100               	movlb	0	; () banked
 18254  003DAE  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 18255  003DB0  0100               	movlb	0	; () banked
 18256  003DB2  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18257  003DB4  0100               	movlb	0	; () banked
 18258  003DB6  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 18259  003DB8  0100               	movlb	0	; () banked
 18260  003DBA  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18261  003DBC  0100               	movlb	0	; () banked
 18262  003DBE  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 18263  003DC0  0100               	movlb	0	; () banked
 18264  003DC2  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18265  003DC4  0100               	movlb	0	; () banked
 18266  003DC6  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 18267  003DC8  0100               	movlb	0	; () banked
 18268  003DCA  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18269                           
 18270                           ; BSR set to: 0
 18271                           ;MISC.c: 464: temp += (This & 0x01000000) >> 17;
 18272  003DCC  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 18273  003DD0  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 18274  003DD4  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 18275  003DD8  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 18276  003DDC  0E12               	movlw	18
 18277  003DDE  D006               	goto	u10450
 18278  003DE0                     u10455:
 18279  003DE0  0100               	movlb	0	; () banked
 18280  003DE2  90D8               	bcf	status,0,c
 18281  003DE4  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18282  003DE6  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18283  003DE8  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18284  003DEA  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 18285  003DEC                     u10450:
 18286  003DEC  2EE8               	decfsz	wreg,f,c
 18287  003DEE  D7F8               	goto	u10455
 18288  003DF0  0E80               	movlw	128
 18289  003DF2  0100               	movlb	0	; () banked
 18290  003DF4  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 18291  003DF6  0100               	movlb	0	; () banked
 18292  003DF8  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 18293  003DFA  0E00               	movlw	0
 18294  003DFC  0100               	movlb	0	; () banked
 18295  003DFE  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 18296  003E00  0100               	movlb	0	; () banked
 18297  003E02  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 18298  003E04  0E00               	movlw	0
 18299  003E06  0100               	movlb	0	; () banked
 18300  003E08  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 18301  003E0A  0100               	movlb	0	; () banked
 18302  003E0C  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 18303  003E0E  0E00               	movlw	0
 18304  003E10  0100               	movlb	0	; () banked
 18305  003E12  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 18306  003E14  0100               	movlb	0	; () banked
 18307  003E16  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 18308  003E18  0100               	movlb	0	; () banked
 18309  003E1A  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 18310  003E1C  0100               	movlb	0	; () banked
 18311  003E1E  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18312  003E20  0100               	movlb	0	; () banked
 18313  003E22  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 18314  003E24  0100               	movlb	0	; () banked
 18315  003E26  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18316  003E28  0100               	movlb	0	; () banked
 18317  003E2A  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 18318  003E2C  0100               	movlb	0	; () banked
 18319  003E2E  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18320  003E30  0100               	movlb	0	; () banked
 18321  003E32  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 18322  003E34  0100               	movlb	0	; () banked
 18323  003E36  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18324                           
 18325                           ; BSR set to: 0
 18326                           ;MISC.c: 465: temp += (This & 0x02000000) >> 19;
 18327  003E38  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 18328  003E3C  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 18329  003E40  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 18330  003E44  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 18331  003E48  0E14               	movlw	20
 18332  003E4A  D006               	goto	u10460
 18333  003E4C                     u10465:
 18334  003E4C  0100               	movlb	0	; () banked
 18335  003E4E  90D8               	bcf	status,0,c
 18336  003E50  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18337  003E52  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18338  003E54  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18339  003E56  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 18340  003E58                     u10460:
 18341  003E58  2EE8               	decfsz	wreg,f,c
 18342  003E5A  D7F8               	goto	u10465
 18343  003E5C  0E40               	movlw	64
 18344  003E5E  0100               	movlb	0	; () banked
 18345  003E60  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 18346  003E62  0100               	movlb	0	; () banked
 18347  003E64  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 18348  003E66  0E00               	movlw	0
 18349  003E68  0100               	movlb	0	; () banked
 18350  003E6A  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 18351  003E6C  0100               	movlb	0	; () banked
 18352  003E6E  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 18353  003E70  0E00               	movlw	0
 18354  003E72  0100               	movlb	0	; () banked
 18355  003E74  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 18356  003E76  0100               	movlb	0	; () banked
 18357  003E78  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 18358  003E7A  0E00               	movlw	0
 18359  003E7C  0100               	movlb	0	; () banked
 18360  003E7E  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 18361  003E80  0100               	movlb	0	; () banked
 18362  003E82  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 18363  003E84  0100               	movlb	0	; () banked
 18364  003E86  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 18365  003E88  0100               	movlb	0	; () banked
 18366  003E8A  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18367  003E8C  0100               	movlb	0	; () banked
 18368  003E8E  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 18369  003E90  0100               	movlb	0	; () banked
 18370  003E92  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18371  003E94  0100               	movlb	0	; () banked
 18372  003E96  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 18373  003E98  0100               	movlb	0	; () banked
 18374  003E9A  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18375  003E9C  0100               	movlb	0	; () banked
 18376  003E9E  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 18377  003EA0  0100               	movlb	0	; () banked
 18378  003EA2  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18379                           
 18380                           ; BSR set to: 0
 18381                           ;MISC.c: 466: temp += (This & 0x04000000) >> 21;
 18382  003EA4  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 18383  003EA8  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 18384  003EAC  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 18385  003EB0  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 18386  003EB4  0E16               	movlw	22
 18387  003EB6  D006               	goto	u10470
 18388  003EB8                     u10475:
 18389  003EB8  0100               	movlb	0	; () banked
 18390  003EBA  90D8               	bcf	status,0,c
 18391  003EBC  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18392  003EBE  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18393  003EC0  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18394  003EC2  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 18395  003EC4                     u10470:
 18396  003EC4  2EE8               	decfsz	wreg,f,c
 18397  003EC6  D7F8               	goto	u10475
 18398  003EC8  0E20               	movlw	32
 18399  003ECA  0100               	movlb	0	; () banked
 18400  003ECC  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 18401  003ECE  0100               	movlb	0	; () banked
 18402  003ED0  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 18403  003ED2  0E00               	movlw	0
 18404  003ED4  0100               	movlb	0	; () banked
 18405  003ED6  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 18406  003ED8  0100               	movlb	0	; () banked
 18407  003EDA  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 18408  003EDC  0E00               	movlw	0
 18409  003EDE  0100               	movlb	0	; () banked
 18410  003EE0  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 18411  003EE2  0100               	movlb	0	; () banked
 18412  003EE4  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 18413  003EE6  0E00               	movlw	0
 18414  003EE8  0100               	movlb	0	; () banked
 18415  003EEA  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 18416  003EEC  0100               	movlb	0	; () banked
 18417  003EEE  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 18418  003EF0  0100               	movlb	0	; () banked
 18419  003EF2  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 18420  003EF4  0100               	movlb	0	; () banked
 18421  003EF6  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18422  003EF8  0100               	movlb	0	; () banked
 18423  003EFA  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 18424  003EFC  0100               	movlb	0	; () banked
 18425  003EFE  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18426  003F00  0100               	movlb	0	; () banked
 18427  003F02  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 18428  003F04  0100               	movlb	0	; () banked
 18429  003F06  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18430  003F08  0100               	movlb	0	; () banked
 18431  003F0A  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 18432  003F0C  0100               	movlb	0	; () banked
 18433  003F0E  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18434                           
 18435                           ; BSR set to: 0
 18436                           ;MISC.c: 467: temp += (This & 0x08000000) >> 23;
 18437  003F10  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 18438  003F14  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 18439  003F18  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 18440  003F1C  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 18441  003F20  0E18               	movlw	24
 18442  003F22  D006               	goto	u10480
 18443  003F24                     u10485:
 18444  003F24  0100               	movlb	0	; () banked
 18445  003F26  90D8               	bcf	status,0,c
 18446  003F28  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18447  003F2A  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18448  003F2C  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18449  003F2E  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 18450  003F30                     u10480:
 18451  003F30  2EE8               	decfsz	wreg,f,c
 18452  003F32  D7F8               	goto	u10485
 18453  003F34  0E10               	movlw	16
 18454  003F36  0100               	movlb	0	; () banked
 18455  003F38  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 18456  003F3A  0100               	movlb	0	; () banked
 18457  003F3C  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 18458  003F3E  0E00               	movlw	0
 18459  003F40  0100               	movlb	0	; () banked
 18460  003F42  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 18461  003F44  0100               	movlb	0	; () banked
 18462  003F46  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 18463  003F48  0E00               	movlw	0
 18464  003F4A  0100               	movlb	0	; () banked
 18465  003F4C  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 18466  003F4E  0100               	movlb	0	; () banked
 18467  003F50  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 18468  003F52  0E00               	movlw	0
 18469  003F54  0100               	movlb	0	; () banked
 18470  003F56  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 18471  003F58  0100               	movlb	0	; () banked
 18472  003F5A  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 18473  003F5C  0100               	movlb	0	; () banked
 18474  003F5E  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 18475  003F60  0100               	movlb	0	; () banked
 18476  003F62  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18477  003F64  0100               	movlb	0	; () banked
 18478  003F66  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 18479  003F68  0100               	movlb	0	; () banked
 18480  003F6A  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18481  003F6C  0100               	movlb	0	; () banked
 18482  003F6E  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 18483  003F70  0100               	movlb	0	; () banked
 18484  003F72  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18485  003F74  0100               	movlb	0	; () banked
 18486  003F76  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 18487  003F78  0100               	movlb	0	; () banked
 18488  003F7A  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18489                           
 18490                           ; BSR set to: 0
 18491                           ;MISC.c: 468: temp += (This & 0x10000000) >> 25;
 18492  003F7C  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 18493  003F80  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 18494  003F84  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 18495  003F88  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 18496  003F8C  0E1A               	movlw	26
 18497  003F8E  D006               	goto	u10490
 18498  003F90                     u10495:
 18499  003F90  0100               	movlb	0	; () banked
 18500  003F92  90D8               	bcf	status,0,c
 18501  003F94  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18502  003F96  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18503  003F98  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18504  003F9A  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 18505  003F9C                     u10490:
 18506  003F9C  2EE8               	decfsz	wreg,f,c
 18507  003F9E  D7F8               	goto	u10495
 18508  003FA0  0E08               	movlw	8
 18509  003FA2  0100               	movlb	0	; () banked
 18510  003FA4  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 18511  003FA6  0100               	movlb	0	; () banked
 18512  003FA8  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 18513  003FAA  0E00               	movlw	0
 18514  003FAC  0100               	movlb	0	; () banked
 18515  003FAE  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 18516  003FB0  0100               	movlb	0	; () banked
 18517  003FB2  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 18518  003FB4  0E00               	movlw	0
 18519  003FB6  0100               	movlb	0	; () banked
 18520  003FB8  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 18521  003FBA  0100               	movlb	0	; () banked
 18522  003FBC  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 18523  003FBE  0E00               	movlw	0
 18524  003FC0  0100               	movlb	0	; () banked
 18525  003FC2  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 18526  003FC4  0100               	movlb	0	; () banked
 18527  003FC6  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 18528  003FC8  0100               	movlb	0	; () banked
 18529  003FCA  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 18530  003FCC  0100               	movlb	0	; () banked
 18531  003FCE  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18532  003FD0  0100               	movlb	0	; () banked
 18533  003FD2  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 18534  003FD4  0100               	movlb	0	; () banked
 18535  003FD6  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18536  003FD8  0100               	movlb	0	; () banked
 18537  003FDA  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 18538  003FDC  0100               	movlb	0	; () banked
 18539  003FDE  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18540  003FE0  0100               	movlb	0	; () banked
 18541  003FE2  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 18542  003FE4  0100               	movlb	0	; () banked
 18543  003FE6  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18544                           
 18545                           ; BSR set to: 0
 18546                           ;MISC.c: 469: temp += (This & 0x20000000) >> 27;
 18547  003FE8  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 18548  003FEC  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 18549  003FF0  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 18550  003FF4  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 18551  003FF8  0E1C               	movlw	28
 18552  003FFA  D006               	goto	u10500
 18553  003FFC                     u10505:
 18554  003FFC  0100               	movlb	0	; () banked
 18555  003FFE  90D8               	bcf	status,0,c
 18556  004000  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18557  004002  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18558  004004  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18559  004006  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 18560  004008                     u10500:
 18561  004008  2EE8               	decfsz	wreg,f,c
 18562  00400A  D7F8               	goto	u10505
 18563  00400C  0E04               	movlw	4
 18564  00400E  0100               	movlb	0	; () banked
 18565  004010  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 18566  004012  0100               	movlb	0	; () banked
 18567  004014  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 18568  004016  0E00               	movlw	0
 18569  004018  0100               	movlb	0	; () banked
 18570  00401A  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 18571  00401C  0100               	movlb	0	; () banked
 18572  00401E  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 18573  004020  0E00               	movlw	0
 18574  004022  0100               	movlb	0	; () banked
 18575  004024  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 18576  004026  0100               	movlb	0	; () banked
 18577  004028  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 18578  00402A  0E00               	movlw	0
 18579  00402C  0100               	movlb	0	; () banked
 18580  00402E  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 18581  004030  0100               	movlb	0	; () banked
 18582  004032  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 18583  004034  0100               	movlb	0	; () banked
 18584  004036  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 18585  004038  0100               	movlb	0	; () banked
 18586  00403A  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18587  00403C  0100               	movlb	0	; () banked
 18588  00403E  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 18589  004040  0100               	movlb	0	; () banked
 18590  004042  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18591  004044  0100               	movlb	0	; () banked
 18592  004046  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 18593  004048  0100               	movlb	0	; () banked
 18594  00404A  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18595  00404C  0100               	movlb	0	; () banked
 18596  00404E  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 18597  004050  0100               	movlb	0	; () banked
 18598  004052  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18599                           
 18600                           ; BSR set to: 0
 18601                           ;MISC.c: 470: temp += (This & 0x40000000) >> 29;
 18602  004054  C063  F067         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 18603  004058  C064  F068         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 18604  00405C  C065  F069         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 18605  004060  C066  F06A         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 18606  004064  0E1E               	movlw	30
 18607  004066  D006               	goto	u10510
 18608  004068                     u10515:
 18609  004068  0100               	movlb	0	; () banked
 18610  00406A  90D8               	bcf	status,0,c
 18611  00406C  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18612  00406E  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18613  004070  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18614  004072  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 18615  004074                     u10510:
 18616  004074  2EE8               	decfsz	wreg,f,c
 18617  004076  D7F8               	goto	u10515
 18618  004078  0E02               	movlw	2
 18619  00407A  0100               	movlb	0	; () banked
 18620  00407C  1567               	andwf	??_Reverse_4Byte& (0+255),w,b
 18621  00407E  0100               	movlb	0	; () banked
 18622  004080  6F6B               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 18623  004082  0E00               	movlw	0
 18624  004084  0100               	movlb	0	; () banked
 18625  004086  1568               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 18626  004088  0100               	movlb	0	; () banked
 18627  00408A  6F6C               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 18628  00408C  0E00               	movlw	0
 18629  00408E  0100               	movlb	0	; () banked
 18630  004090  1569               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 18631  004092  0100               	movlb	0	; () banked
 18632  004094  6F6D               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 18633  004096  0E00               	movlw	0
 18634  004098  0100               	movlb	0	; () banked
 18635  00409A  156A               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 18636  00409C  0100               	movlb	0	; () banked
 18637  00409E  6F6E               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 18638  0040A0  0100               	movlb	0	; () banked
 18639  0040A2  516B               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 18640  0040A4  0100               	movlb	0	; () banked
 18641  0040A6  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18642  0040A8  0100               	movlb	0	; () banked
 18643  0040AA  516C               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 18644  0040AC  0100               	movlb	0	; () banked
 18645  0040AE  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18646  0040B0  0100               	movlb	0	; () banked
 18647  0040B2  516D               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 18648  0040B4  0100               	movlb	0	; () banked
 18649  0040B6  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18650  0040B8  0100               	movlb	0	; () banked
 18651  0040BA  516E               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 18652  0040BC  0100               	movlb	0	; () banked
 18653  0040BE  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18654                           
 18655                           ; BSR set to: 0
 18656                           ;MISC.c: 471: temp += (This & 0x80000000) >> 31;
 18657  0040C0  0E00               	movlw	0
 18658  0040C2  0100               	movlb	0	; () banked
 18659  0040C4  1563               	andwf	Reverse_4Byte@This& (0+255),w,b
 18660  0040C6  0100               	movlb	0	; () banked
 18661  0040C8  6F67               	movwf	??_Reverse_4Byte& (0+255),b
 18662  0040CA  0E00               	movlw	0
 18663  0040CC  0100               	movlb	0	; () banked
 18664  0040CE  1564               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 18665  0040D0  0100               	movlb	0	; () banked
 18666  0040D2  6F68               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 18667  0040D4  0E00               	movlw	0
 18668  0040D6  0100               	movlb	0	; () banked
 18669  0040D8  1565               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 18670  0040DA  0100               	movlb	0	; () banked
 18671  0040DC  6F69               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 18672  0040DE  0E80               	movlw	128
 18673  0040E0  0100               	movlb	0	; () banked
 18674  0040E2  1566               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 18675  0040E4  0100               	movlb	0	; () banked
 18676  0040E6  6F6A               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 18677  0040E8  0E20               	movlw	32
 18678  0040EA  D006               	goto	u10520
 18679  0040EC                     u10525:
 18680  0040EC  0100               	movlb	0	; () banked
 18681  0040EE  90D8               	bcf	status,0,c
 18682  0040F0  336A               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 18683  0040F2  3369               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 18684  0040F4  3368               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 18685  0040F6  3367               	rrcf	??_Reverse_4Byte& (0+255),f,b
 18686  0040F8                     u10520:
 18687  0040F8  2EE8               	decfsz	wreg,f,c
 18688  0040FA  D7F8               	goto	u10525
 18689  0040FC  0100               	movlb	0	; () banked
 18690  0040FE  5167               	movf	??_Reverse_4Byte& (0+255),w,b
 18691  004100  0100               	movlb	0	; () banked
 18692  004102  276F               	addwf	Reverse_4Byte@temp& (0+255),f,b
 18693  004104  0100               	movlb	0	; () banked
 18694  004106  5168               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 18695  004108  0100               	movlb	0	; () banked
 18696  00410A  2370               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 18697  00410C  0100               	movlb	0	; () banked
 18698  00410E  5169               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 18699  004110  0100               	movlb	0	; () banked
 18700  004112  2371               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 18701  004114  0100               	movlb	0	; () banked
 18702  004116  516A               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 18703  004118  0100               	movlb	0	; () banked
 18704  00411A  2372               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 18705                           
 18706                           ; BSR set to: 0
 18707                           ;MISC.c: 473: return temp;
 18708  00411C  C06F  F063         	movff	Reverse_4Byte@temp,?_Reverse_4Byte
 18709  004120  C070  F064         	movff	Reverse_4Byte@temp+1,?_Reverse_4Byte+1
 18710  004124  C071  F065         	movff	Reverse_4Byte@temp+2,?_Reverse_4Byte+2
 18711  004128  C072  F066         	movff	Reverse_4Byte@temp+3,?_Reverse_4Byte+3
 18712  00412C  0012               	return	
 18713                           
 18714                           ; BSR set to: 0
 18715                           
 18716                           ; BSR set to: 0
 18717  00412E  0012               	return		;funcret
 18718  004130                     __end_of_Reverse_4Byte:
 18719                           	opt stack 0
 18720                           tblptru	equ	0xFF8
 18721                           tblptrh	equ	0xFF7
 18722                           tblptrl	equ	0xFF6
 18723                           tablat	equ	0xFF5
 18724                           prodh	equ	0xFF4
 18725                           prodl	equ	0xFF3
 18726                           intcon	equ	0xFF2
 18727                           indf0	equ	0xFEF
 18728                           postinc0	equ	0xFEE
 18729                           plusw0	equ	0xFEB
 18730                           fsr0h	equ	0xFEA
 18731                           fsr0l	equ	0xFE9
 18732                           wreg	equ	0xFE8
 18733                           indf1	equ	0xFE7
 18734                           postdec1	equ	0xFE5
 18735                           fsr1h	equ	0xFE2
 18736                           fsr1l	equ	0xFE1
 18737                           indf2	equ	0xFDF
 18738                           postinc2	equ	0xFDE
 18739                           plusw2	equ	0xFDB
 18740                           fsr2h	equ	0xFDA
 18741                           fsr2l	equ	0xFD9
 18742                           status	equ	0xFD8
 18743                           
 18744 ;; *************** function _CheckReceivingIR *****************
 18745 ;; Defined at:
 18746 ;;		line 508 in file "IR.c"
 18747 ;; Parameters:    Size  Location     Type
 18748 ;;		None
 18749 ;; Auto vars:     Size  Location     Type
 18750 ;;		None
 18751 ;; Return value:  Size  Location     Type
 18752 ;;                  1    wreg      unsigned char 
 18753 ;; Registers used:
 18754 ;;		wreg, status,2, status,0
 18755 ;; Tracked objects:
 18756 ;;		On entry : 0/0
 18757 ;;		On exit  : 0/0
 18758 ;;		Unchanged: 0/0
 18759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18764 ;;Total ram usage:        0 bytes
 18765 ;; Hardware stack levels used:    1
 18766 ;; Hardware stack levels required when called:    6
 18767 ;; This function calls:
 18768 ;;		Nothing
 18769 ;; This function is called by:
 18770 ;;		_SendNEC_wait
 18771 ;; This function uses a non-reentrant model
 18772 ;;
 18773                           
 18774                           	psect	text21
 18775  00A430                     __ptext21:
 18776                           	opt stack 0
 18777  00A430                     _CheckReceivingIR:
 18778                           	opt stack 22
 18779                           
 18780                           ;IR.c: 510: if(ReceivingIR == 13)
 18781                           
 18782                           ; BSR set to: 0
 18783                           ;incstack = 0
 18784  00A430  0E0D               	movlw	13
 18785  00A432  185E               	xorwf	_ReceivingIR,w,c	;volatile
 18786  00A434  A4D8               	btfss	status,2,c
 18787  00A436  D002               	goto	l10344
 18788                           
 18789                           ;IR.c: 511: {
 18790                           ;IR.c: 512: return 0;
 18791  00A438  0E00               	movlw	0
 18792  00A43A  0012               	return	
 18793  00A43C                     l10344:
 18794                           
 18795                           ;IR.c: 513: }
 18796                           ;IR.c: 514: return 1;
 18797  00A43C  0E01               	movlw	1
 18798  00A43E  0012               	return	
 18799  00A440  0012               	return		;funcret
 18800  00A442                     __end_of_CheckReceivingIR:
 18801                           	opt stack 0
 18802                           tblptru	equ	0xFF8
 18803                           tblptrh	equ	0xFF7
 18804                           tblptrl	equ	0xFF6
 18805                           tablat	equ	0xFF5
 18806                           prodh	equ	0xFF4
 18807                           prodl	equ	0xFF3
 18808                           intcon	equ	0xFF2
 18809                           indf0	equ	0xFEF
 18810                           postinc0	equ	0xFEE
 18811                           plusw0	equ	0xFEB
 18812                           fsr0h	equ	0xFEA
 18813                           fsr0l	equ	0xFE9
 18814                           wreg	equ	0xFE8
 18815                           indf1	equ	0xFE7
 18816                           postdec1	equ	0xFE5
 18817                           fsr1h	equ	0xFE2
 18818                           fsr1l	equ	0xFE1
 18819                           indf2	equ	0xFDF
 18820                           postinc2	equ	0xFDE
 18821                           plusw2	equ	0xFDB
 18822                           fsr2h	equ	0xFDA
 18823                           fsr2l	equ	0xFD9
 18824                           status	equ	0xFD8
 18825                           
 18826 ;; *************** function _ReadVoltage *****************
 18827 ;; Defined at:
 18828 ;;		line 60 in file "ADC.c"
 18829 ;; Parameters:    Size  Location     Type
 18830 ;;		None
 18831 ;; Auto vars:     Size  Location     Type
 18832 ;;  voltage         3   47[BANK0 ] unsigned char 
 18833 ;;  temp            2   50[BANK0 ] unsigned int 
 18834 ;; Return value:  Size  Location     Type
 18835 ;;                  3   44[BANK0 ] unsigned int 
 18836 ;; Registers used:
 18837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18838 ;; Tracked objects:
 18839 ;;		On entry : 0/0
 18840 ;;		On exit  : 0/0
 18841 ;;		Unchanged: 0/0
 18842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18843 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18844 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18846 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18847 ;;Total ram usage:        8 bytes
 18848 ;; Hardware stack levels used:    1
 18849 ;; Hardware stack levels required when called:    8
 18850 ;; This function calls:
 18851 ;;		_InternalADC_Read
 18852 ;;		_VoltageDividerOFF
 18853 ;;		_VoltageDividerON
 18854 ;;		___ftdiv
 18855 ;;		___ftmul
 18856 ;;		___lwtoft
 18857 ;;		_delayUS
 18858 ;; This function is called by:
 18859 ;;		_main
 18860 ;;		_UseBluetooth
 18861 ;; This function uses a non-reentrant model
 18862 ;;
 18863                           
 18864                           	psect	text22
 18865  0090E4                     __ptext22:
 18866                           	opt stack 0
 18867  0090E4                     _ReadVoltage:
 18868                           	opt stack 21
 18869                           
 18870                           ;ADC.c: 62: unsigned int temp;
 18871                           ;ADC.c: 63: double voltage;
 18872                           ;ADC.c: 65: VoltageDividerON();
 18873                           
 18874                           ;incstack = 0
 18875  0090E4  EC98  F052         	call	_VoltageDividerON	;wreg free
 18876                           
 18877                           ;ADC.c: 66: delayUS(5);
 18878  0090E8  0E05               	movlw	5
 18879  0090EA  0100               	movlb	0	; () banked
 18880  0090EC  6F63               	movwf	delayUS@US& (0+255),b
 18881  0090EE  0E00               	movlw	0
 18882  0090F0  6F64               	movwf	(delayUS@US+1)& (0+255),b
 18883  0090F2  0E00               	movlw	0
 18884  0090F4  6F65               	movwf	(delayUS@US+2)& (0+255),b
 18885  0090F6  0E00               	movlw	0
 18886  0090F8  6F66               	movwf	(delayUS@US+3)& (0+255),b
 18887  0090FA  ECA0  F04E         	call	_delayUS	;wreg free
 18888                           
 18889                           ;ADC.c: 67: if(InternalADC_Read(0, &temp))
 18890  0090FE  0E92               	movlw	low ReadVoltage@temp
 18891  009100  0100               	movlb	0	; () banked
 18892  009102  6F6C               	movwf	InternalADC_Read@ADCcounts& (0+255),b
 18893  009104  0E00               	movlw	high ReadVoltage@temp
 18894  009106  0100               	movlb	0	; () banked
 18895  009108  6F6D               	movwf	(InternalADC_Read@ADCcounts+1)& (0+255),b
 18896  00910A  0E00               	movlw	0
 18897  00910C  EC2C  F04A         	call	_InternalADC_Read
 18898  009110  0900               	iorlw	0
 18899  009112  B4D8               	btfsc	status,2,c
 18900  009114  D02F               	goto	l10696
 18901                           
 18902                           ;ADC.c: 68: {
 18903                           ;ADC.c: 69: voltage = ((double)temp / 1024.0) * 11 * 3.3;
 18904  009116  0E00               	movlw	0
 18905  009118  0100               	movlb	0	; () banked
 18906  00911A  6F71               	movwf	___ftdiv@f2& (0+255),b
 18907  00911C  0E80               	movlw	128
 18908  00911E  0100               	movlb	0	; () banked
 18909  009120  6F72               	movwf	(___ftdiv@f2+1)& (0+255),b
 18910  009122  0E44               	movlw	68
 18911  009124  0100               	movlb	0	; () banked
 18912  009126  6F73               	movwf	(___ftdiv@f2+2)& (0+255),b
 18913  009128  C092  F06B         	movff	ReadVoltage@temp,___lwtoft@c
 18914  00912C  C093  F06C         	movff	ReadVoltage@temp+1,___lwtoft@c+1
 18915  009130  EC21  F051         	call	___lwtoft	;wreg free
 18916  009134  C06B  F06E         	movff	?___lwtoft,___ftdiv@f1
 18917  009138  C06C  F06F         	movff	?___lwtoft+1,___ftdiv@f1+1
 18918  00913C  C06D  F070         	movff	?___lwtoft+2,___ftdiv@f1+2
 18919  009140  EC28  F03E         	call	___ftdiv	;wreg free
 18920  009144  C06E  F07D         	movff	?___ftdiv,___ftmul@f1
 18921  009148  C06F  F07E         	movff	?___ftdiv+1,___ftmul@f1+1
 18922  00914C  C070  F07F         	movff	?___ftdiv+2,___ftmul@f1+2
 18923  009150  0E33               	movlw	51
 18924  009152  0100               	movlb	0	; () banked
 18925  009154  6F80               	movwf	___ftmul@f2& (0+255),b
 18926  009156  0E11               	movlw	17
 18927  009158  0100               	movlb	0	; () banked
 18928  00915A  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
 18929  00915C  0E42               	movlw	66
 18930  00915E  0100               	movlb	0	; () banked
 18931  009160  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
 18932  009162  ECC4  F03C         	call	___ftmul	;wreg free
 18933  009166  C07D  F08F         	movff	?___ftmul,ReadVoltage@voltage
 18934  00916A  C07E  F090         	movff	?___ftmul+1,ReadVoltage@voltage+1
 18935  00916E  C07F  F091         	movff	?___ftmul+2,ReadVoltage@voltage+2
 18936                           
 18937                           ;ADC.c: 70: }
 18938  009172  D00A               	goto	l10698
 18939  009174                     l10696:
 18940                           
 18941                           ;ADC.c: 71: else
 18942                           ;ADC.c: 72: {
 18943                           ;ADC.c: 73: voltage = 0.0;
 18944  009174  0E00               	movlw	0
 18945  009176  0100               	movlb	0	; () banked
 18946  009178  6F8F               	movwf	ReadVoltage@voltage& (0+255),b
 18947  00917A  0E00               	movlw	0
 18948  00917C  0100               	movlb	0	; () banked
 18949  00917E  6F90               	movwf	(ReadVoltage@voltage+1)& (0+255),b
 18950  009180  0E00               	movlw	0
 18951  009182  0100               	movlb	0	; () banked
 18952  009184  6F91               	movwf	(ReadVoltage@voltage+2)& (0+255),b
 18953  009186  D000               	goto	l10698
 18954  009188                     l10698:
 18955                           
 18956                           ;ADC.c: 74: }
 18957                           ;ADC.c: 75: VoltageDividerOFF();
 18958  009188  EC9F  F052         	call	_VoltageDividerOFF	;wreg free
 18959                           
 18960                           ;ADC.c: 76: return voltage;
 18961  00918C  C08F  F08C         	movff	ReadVoltage@voltage,?_ReadVoltage
 18962  009190  C090  F08D         	movff	ReadVoltage@voltage+1,?_ReadVoltage+1
 18963  009194  C091  F08E         	movff	ReadVoltage@voltage+2,?_ReadVoltage+2
 18964  009198  0012               	return	
 18965  00919A  0012               	return		;funcret
 18966  00919C                     __end_of_ReadVoltage:
 18967                           	opt stack 0
 18968                           tblptru	equ	0xFF8
 18969                           tblptrh	equ	0xFF7
 18970                           tblptrl	equ	0xFF6
 18971                           tablat	equ	0xFF5
 18972                           prodh	equ	0xFF4
 18973                           prodl	equ	0xFF3
 18974                           intcon	equ	0xFF2
 18975                           indf0	equ	0xFEF
 18976                           postinc0	equ	0xFEE
 18977                           plusw0	equ	0xFEB
 18978                           fsr0h	equ	0xFEA
 18979                           fsr0l	equ	0xFE9
 18980                           wreg	equ	0xFE8
 18981                           indf1	equ	0xFE7
 18982                           postdec1	equ	0xFE5
 18983                           fsr1h	equ	0xFE2
 18984                           fsr1l	equ	0xFE1
 18985                           indf2	equ	0xFDF
 18986                           postinc2	equ	0xFDE
 18987                           plusw2	equ	0xFDB
 18988                           fsr2h	equ	0xFDA
 18989                           fsr2l	equ	0xFD9
 18990                           status	equ	0xFD8
 18991                           
 18992 ;; *************** function ___lwtoft *****************
 18993 ;; Defined at:
 18994 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 18995 ;; Parameters:    Size  Location     Type
 18996 ;;  c               2   11[BANK0 ] unsigned int 
 18997 ;; Auto vars:     Size  Location     Type
 18998 ;;		None
 18999 ;; Return value:  Size  Location     Type
 19000 ;;                  3   11[BANK0 ] float 
 19001 ;; Registers used:
 19002 ;;		wreg, status,2, status,0, cstack
 19003 ;; Tracked objects:
 19004 ;;		On entry : 0/0
 19005 ;;		On exit  : 0/0
 19006 ;;		Unchanged: 0/0
 19007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19008 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19011 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19012 ;;Total ram usage:        3 bytes
 19013 ;; Hardware stack levels used:    1
 19014 ;; Hardware stack levels required when called:    7
 19015 ;; This function calls:
 19016 ;;		___ftpack
 19017 ;; This function is called by:
 19018 ;;		_ReadVoltage
 19019 ;; This function uses a non-reentrant model
 19020 ;;
 19021                           
 19022                           	psect	text23
 19023  00A242                     __ptext23:
 19024                           	opt stack 0
 19025  00A242                     ___lwtoft:
 19026                           	opt stack 21
 19027                           
 19028                           ;incstack = 0
 19029  00A242  C06B  F063         	movff	___lwtoft@c,___ftpack@arg
 19030  00A246  C06C  F064         	movff	___lwtoft@c+1,___ftpack@arg+1
 19031  00A24A  0100               	movlb	0	; () banked
 19032  00A24C  6B65               	clrf	(___ftpack@arg+2)& (0+255),b
 19033  00A24E  0E8E               	movlw	142
 19034  00A250  0100               	movlb	0	; () banked
 19035  00A252  6F66               	movwf	___ftpack@exp& (0+255),b
 19036  00A254  0E00               	movlw	0
 19037  00A256  0100               	movlb	0	; () banked
 19038  00A258  6F67               	movwf	___ftpack@sign& (0+255),b
 19039  00A25A  EC54  F041         	call	___ftpack	;wreg free
 19040  00A25E  C063  F06B         	movff	?___ftpack,?___lwtoft
 19041  00A262  C064  F06C         	movff	?___ftpack+1,?___lwtoft+1
 19042  00A266  C065  F06D         	movff	?___ftpack+2,?___lwtoft+2
 19043  00A26A  0012               	return	
 19044  00A26C  0012               	return		;funcret
 19045  00A26E                     __end_of___lwtoft:
 19046                           	opt stack 0
 19047                           tblptru	equ	0xFF8
 19048                           tblptrh	equ	0xFF7
 19049                           tblptrl	equ	0xFF6
 19050                           tablat	equ	0xFF5
 19051                           prodh	equ	0xFF4
 19052                           prodl	equ	0xFF3
 19053                           intcon	equ	0xFF2
 19054                           indf0	equ	0xFEF
 19055                           postinc0	equ	0xFEE
 19056                           plusw0	equ	0xFEB
 19057                           fsr0h	equ	0xFEA
 19058                           fsr0l	equ	0xFE9
 19059                           wreg	equ	0xFE8
 19060                           indf1	equ	0xFE7
 19061                           postdec1	equ	0xFE5
 19062                           fsr1h	equ	0xFE2
 19063                           fsr1l	equ	0xFE1
 19064                           indf2	equ	0xFDF
 19065                           postinc2	equ	0xFDE
 19066                           plusw2	equ	0xFDB
 19067                           fsr2h	equ	0xFDA
 19068                           fsr2l	equ	0xFD9
 19069                           status	equ	0xFD8
 19070                           
 19071 ;; *************** function ___ftdiv *****************
 19072 ;; Defined at:
 19073 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 19074 ;; Parameters:    Size  Location     Type
 19075 ;;  f1              3   14[BANK0 ] float 
 19076 ;;  f2              3   17[BANK0 ] float 
 19077 ;; Auto vars:     Size  Location     Type
 19078 ;;  f3              3   24[BANK0 ] float 
 19079 ;;  sign            1   28[BANK0 ] unsigned char 
 19080 ;;  exp             1   27[BANK0 ] unsigned char 
 19081 ;;  cntr            1   23[BANK0 ] unsigned char 
 19082 ;; Return value:  Size  Location     Type
 19083 ;;                  3   14[BANK0 ] float 
 19084 ;; Registers used:
 19085 ;;		wreg, status,2, status,0, cstack
 19086 ;; Tracked objects:
 19087 ;;		On entry : 0/0
 19088 ;;		On exit  : 0/0
 19089 ;;		Unchanged: 0/0
 19090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19091 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19092 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19093 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19094 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19095 ;;Total ram usage:       15 bytes
 19096 ;; Hardware stack levels used:    1
 19097 ;; Hardware stack levels required when called:    7
 19098 ;; This function calls:
 19099 ;;		___ftpack
 19100 ;; This function is called by:
 19101 ;;		_ReadVoltage
 19102 ;; This function uses a non-reentrant model
 19103 ;;
 19104                           
 19105                           	psect	text24
 19106  007C50                     __ptext24:
 19107                           	opt stack 0
 19108  007C50                     ___ftdiv:
 19109                           	opt stack 21
 19110                           
 19111                           ;incstack = 0
 19112  007C50  C070  F074         	movff	___ftdiv@f1+2,??___ftdiv
 19113  007C54  0100               	movlb	0	; () banked
 19114  007C56  6B75               	clrf	(??___ftdiv+1)& (0+255),b
 19115  007C58  6B76               	clrf	(??___ftdiv+2)& (0+255),b
 19116  007C5A  0100               	movlb	0	; () banked
 19117  007C5C  356F               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 19118  007C5E  0100               	movlb	0	; () banked
 19119  007C60  3774               	rlcf	??___ftdiv& (0+255),f,b
 19120  007C62  E301               	bnc	u11471
 19121  007C64  8175               	bsf	(??___ftdiv+1)& (0+255),0,b
 19122  007C66                     u11471:
 19123  007C66  0100               	movlb	0	; () banked
 19124  007C68  5174               	movf	??___ftdiv& (0+255),w,b
 19125  007C6A  0100               	movlb	0	; () banked
 19126  007C6C  6F7B               	movwf	___ftdiv@exp& (0+255),b
 19127  007C6E  0100               	movlb	0	; () banked
 19128  007C70  517B               	movf	___ftdiv@exp& (0+255),w,b
 19129  007C72  A4D8               	btfss	status,2,c
 19130  007C74  D00A               	goto	l10640
 19131                           
 19132                           ; BSR set to: 0
 19133  007C76  0E00               	movlw	0
 19134  007C78  0100               	movlb	0	; () banked
 19135  007C7A  6F6E               	movwf	?___ftdiv& (0+255),b
 19136  007C7C  0E00               	movlw	0
 19137  007C7E  0100               	movlb	0	; () banked
 19138  007C80  6F6F               	movwf	(?___ftdiv+1)& (0+255),b
 19139  007C82  0E00               	movlw	0
 19140  007C84  0100               	movlb	0	; () banked
 19141  007C86  6F70               	movwf	(?___ftdiv+2)& (0+255),b
 19142                           
 19143                           ; BSR set to: 0
 19144  007C88  0012               	return	
 19145  007C8A                     l10640:
 19146                           
 19147                           ; BSR set to: 0
 19148  007C8A  C073  F074         	movff	___ftdiv@f2+2,??___ftdiv
 19149  007C8E  0100               	movlb	0	; () banked
 19150  007C90  6B75               	clrf	(??___ftdiv+1)& (0+255),b
 19151  007C92  6B76               	clrf	(??___ftdiv+2)& (0+255),b
 19152  007C94  0100               	movlb	0	; () banked
 19153  007C96  3572               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 19154  007C98  0100               	movlb	0	; () banked
 19155  007C9A  3774               	rlcf	??___ftdiv& (0+255),f,b
 19156  007C9C  E301               	bnc	u11491
 19157  007C9E  8175               	bsf	(??___ftdiv+1)& (0+255),0,b
 19158  007CA0                     u11491:
 19159  007CA0  0100               	movlb	0	; () banked
 19160  007CA2  5174               	movf	??___ftdiv& (0+255),w,b
 19161  007CA4  0100               	movlb	0	; () banked
 19162  007CA6  6F7C               	movwf	___ftdiv@sign& (0+255),b
 19163  007CA8  0100               	movlb	0	; () banked
 19164  007CAA  517C               	movf	___ftdiv@sign& (0+255),w,b
 19165  007CAC  A4D8               	btfss	status,2,c
 19166  007CAE  D00A               	goto	l10646
 19167                           
 19168                           ; BSR set to: 0
 19169  007CB0  0E00               	movlw	0
 19170  007CB2  0100               	movlb	0	; () banked
 19171  007CB4  6F6E               	movwf	?___ftdiv& (0+255),b
 19172  007CB6  0E00               	movlw	0
 19173  007CB8  0100               	movlb	0	; () banked
 19174  007CBA  6F6F               	movwf	(?___ftdiv+1)& (0+255),b
 19175  007CBC  0E00               	movlw	0
 19176  007CBE  0100               	movlb	0	; () banked
 19177  007CC0  6F70               	movwf	(?___ftdiv+2)& (0+255),b
 19178                           
 19179                           ; BSR set to: 0
 19180  007CC2  0012               	return	
 19181  007CC4                     l10646:
 19182                           
 19183                           ; BSR set to: 0
 19184  007CC4  0E00               	movlw	0
 19185  007CC6  0100               	movlb	0	; () banked
 19186  007CC8  6F78               	movwf	___ftdiv@f3& (0+255),b
 19187  007CCA  0E00               	movlw	0
 19188  007CCC  0100               	movlb	0	; () banked
 19189  007CCE  6F79               	movwf	(___ftdiv@f3+1)& (0+255),b
 19190  007CD0  0E00               	movlw	0
 19191  007CD2  0100               	movlb	0	; () banked
 19192  007CD4  6F7A               	movwf	(___ftdiv@f3+2)& (0+255),b
 19193                           
 19194                           ; BSR set to: 0
 19195  007CD6  0100               	movlb	0	; () banked
 19196  007CD8  517C               	movf	___ftdiv@sign& (0+255),w,b
 19197  007CDA  0F89               	addlw	137
 19198  007CDC  0100               	movlb	0	; () banked
 19199  007CDE  5F7B               	subwf	___ftdiv@exp& (0+255),f,b
 19200                           
 19201                           ; BSR set to: 0
 19202  007CE0  C070  F07C         	movff	___ftdiv@f1+2,___ftdiv@sign
 19203                           
 19204                           ; BSR set to: 0
 19205  007CE4  0100               	movlb	0	; () banked
 19206  007CE6  5173               	movf	(___ftdiv@f2+2)& (0+255),w,b
 19207  007CE8  0100               	movlb	0	; () banked
 19208  007CEA  1B7C               	xorwf	___ftdiv@sign& (0+255),f,b
 19209                           
 19210                           ; BSR set to: 0
 19211  007CEC  0E80               	movlw	128
 19212  007CEE  0100               	movlb	0	; () banked
 19213  007CF0  177C               	andwf	___ftdiv@sign& (0+255),f,b
 19214                           
 19215                           ; BSR set to: 0
 19216  007CF2  0100               	movlb	0	; () banked
 19217  007CF4  8F6F               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 19218                           
 19219                           ; BSR set to: 0
 19220  007CF6  0EFF               	movlw	255
 19221  007CF8  0100               	movlb	0	; () banked
 19222  007CFA  176E               	andwf	___ftdiv@f1& (0+255),f,b
 19223  007CFC  0EFF               	movlw	255
 19224  007CFE  0100               	movlb	0	; () banked
 19225  007D00  176F               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 19226  007D02  0E00               	movlw	0
 19227  007D04  0100               	movlb	0	; () banked
 19228  007D06  1770               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 19229                           
 19230                           ; BSR set to: 0
 19231  007D08  0100               	movlb	0	; () banked
 19232  007D0A  8F72               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 19233                           
 19234                           ; BSR set to: 0
 19235  007D0C  0EFF               	movlw	255
 19236  007D0E  0100               	movlb	0	; () banked
 19237  007D10  1771               	andwf	___ftdiv@f2& (0+255),f,b
 19238  007D12  0EFF               	movlw	255
 19239  007D14  0100               	movlb	0	; () banked
 19240  007D16  1772               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 19241  007D18  0E00               	movlw	0
 19242  007D1A  0100               	movlb	0	; () banked
 19243  007D1C  1773               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 19244                           
 19245                           ; BSR set to: 0
 19246  007D1E  0E18               	movlw	24
 19247  007D20  0100               	movlb	0	; () banked
 19248  007D22  6F77               	movwf	___ftdiv@cntr& (0+255),b
 19249  007D24  D000               	goto	l10666
 19250  007D26                     l10666:
 19251                           
 19252                           ; BSR set to: 0
 19253  007D26  0100               	movlb	0	; () banked
 19254  007D28  90D8               	bcf	status,0,c
 19255  007D2A  3778               	rlcf	___ftdiv@f3& (0+255),f,b
 19256  007D2C  3779               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 19257  007D2E  377A               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 19258                           
 19259                           ; BSR set to: 0
 19260  007D30  0100               	movlb	0	; () banked
 19261  007D32  5171               	movf	___ftdiv@f2& (0+255),w,b
 19262  007D34  0100               	movlb	0	; () banked
 19263  007D36  5D6E               	subwf	___ftdiv@f1& (0+255),w,b
 19264  007D38  0100               	movlb	0	; () banked
 19265  007D3A  5172               	movf	(___ftdiv@f2+1)& (0+255),w,b
 19266  007D3C  0100               	movlb	0	; () banked
 19267  007D3E  596F               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 19268  007D40  0100               	movlb	0	; () banked
 19269  007D42  5173               	movf	(___ftdiv@f2+2)& (0+255),w,b
 19270  007D44  0100               	movlb	0	; () banked
 19271  007D46  5970               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 19272  007D48  A0D8               	btfss	status,0,c
 19273  007D4A  D00E               	goto	l2902
 19274                           
 19275                           ; BSR set to: 0
 19276  007D4C  0100               	movlb	0	; () banked
 19277  007D4E  5171               	movf	___ftdiv@f2& (0+255),w,b
 19278  007D50  0100               	movlb	0	; () banked
 19279  007D52  5F6E               	subwf	___ftdiv@f1& (0+255),f,b
 19280  007D54  0100               	movlb	0	; () banked
 19281  007D56  5172               	movf	(___ftdiv@f2+1)& (0+255),w,b
 19282  007D58  0100               	movlb	0	; () banked
 19283  007D5A  5B6F               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 19284  007D5C  0100               	movlb	0	; () banked
 19285  007D5E  5173               	movf	(___ftdiv@f2+2)& (0+255),w,b
 19286  007D60  0100               	movlb	0	; () banked
 19287  007D62  5B70               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 19288                           
 19289                           ; BSR set to: 0
 19290  007D64  0100               	movlb	0	; () banked
 19291  007D66  8178               	bsf	___ftdiv@f3& (0+255),0,b
 19292  007D68                     l2902:
 19293                           
 19294                           ; BSR set to: 0
 19295  007D68  0100               	movlb	0	; () banked
 19296  007D6A  90D8               	bcf	status,0,c
 19297  007D6C  376E               	rlcf	___ftdiv@f1& (0+255),f,b
 19298  007D6E  376F               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 19299  007D70  3770               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 19300                           
 19301                           ; BSR set to: 0
 19302  007D72  0100               	movlb	0	; () banked
 19303  007D74  2F77               	decfsz	___ftdiv@cntr& (0+255),f,b
 19304  007D76  D7D7               	goto	l10666
 19305  007D78  D000               	goto	l10676
 19306  007D7A                     l10676:
 19307                           
 19308                           ; BSR set to: 0
 19309  007D7A  C078  F063         	movff	___ftdiv@f3,___ftpack@arg
 19310  007D7E  C079  F064         	movff	___ftdiv@f3+1,___ftpack@arg+1
 19311  007D82  C07A  F065         	movff	___ftdiv@f3+2,___ftpack@arg+2
 19312  007D86  C07B  F066         	movff	___ftdiv@exp,___ftpack@exp
 19313  007D8A  C07C  F067         	movff	___ftdiv@sign,___ftpack@sign
 19314  007D8E  EC54  F041         	call	___ftpack	;wreg free
 19315  007D92  C063  F06E         	movff	?___ftpack,?___ftdiv
 19316  007D96  C064  F06F         	movff	?___ftpack+1,?___ftdiv+1
 19317  007D9A  C065  F070         	movff	?___ftpack+2,?___ftdiv+2
 19318  007D9E  0012               	return	
 19319  007DA0  0012               	return		;funcret
 19320  007DA2                     __end_of___ftdiv:
 19321                           	opt stack 0
 19322                           tblptru	equ	0xFF8
 19323                           tblptrh	equ	0xFF7
 19324                           tblptrl	equ	0xFF6
 19325                           tablat	equ	0xFF5
 19326                           prodh	equ	0xFF4
 19327                           prodl	equ	0xFF3
 19328                           intcon	equ	0xFF2
 19329                           indf0	equ	0xFEF
 19330                           postinc0	equ	0xFEE
 19331                           plusw0	equ	0xFEB
 19332                           fsr0h	equ	0xFEA
 19333                           fsr0l	equ	0xFE9
 19334                           wreg	equ	0xFE8
 19335                           indf1	equ	0xFE7
 19336                           postdec1	equ	0xFE5
 19337                           fsr1h	equ	0xFE2
 19338                           fsr1l	equ	0xFE1
 19339                           indf2	equ	0xFDF
 19340                           postinc2	equ	0xFDE
 19341                           plusw2	equ	0xFDB
 19342                           fsr2h	equ	0xFDA
 19343                           fsr2l	equ	0xFD9
 19344                           status	equ	0xFD8
 19345                           
 19346 ;; *************** function _VoltageDividerON *****************
 19347 ;; Defined at:
 19348 ;;		line 148 in file "ADC.c"
 19349 ;; Parameters:    Size  Location     Type
 19350 ;;		None
 19351 ;; Auto vars:     Size  Location     Type
 19352 ;;		None
 19353 ;; Return value:  Size  Location     Type
 19354 ;;		None               void
 19355 ;; Registers used:
 19356 ;;		status,2, status,0
 19357 ;; Tracked objects:
 19358 ;;		On entry : 0/0
 19359 ;;		On exit  : 0/0
 19360 ;;		Unchanged: 0/0
 19361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19366 ;;Total ram usage:        0 bytes
 19367 ;; Hardware stack levels used:    1
 19368 ;; Hardware stack levels required when called:    6
 19369 ;; This function calls:
 19370 ;;		Nothing
 19371 ;; This function is called by:
 19372 ;;		_ReadVoltage
 19373 ;; This function uses a non-reentrant model
 19374 ;;
 19375                           
 19376                           	psect	text25
 19377  00A530                     __ptext25:
 19378                           	opt stack 0
 19379  00A530                     _VoltageDividerON:
 19380                           	opt stack 22
 19381                           
 19382                           ;ADC.c: 150: TRISBbits.TRISB5 = 0;
 19383                           
 19384                           ;incstack = 0
 19385  00A530  9A93               	bcf	3987,5,c	;volatile
 19386                           
 19387                           ;ADC.c: 151: LATB &= ~0x20;
 19388  00A532  9A8A               	bcf	3978,5,c	;volatile
 19389  00A534  0012               	return		;funcret
 19390  00A536                     __end_of_VoltageDividerON:
 19391                           	opt stack 0
 19392                           tblptru	equ	0xFF8
 19393                           tblptrh	equ	0xFF7
 19394                           tblptrl	equ	0xFF6
 19395                           tablat	equ	0xFF5
 19396                           prodh	equ	0xFF4
 19397                           prodl	equ	0xFF3
 19398                           intcon	equ	0xFF2
 19399                           indf0	equ	0xFEF
 19400                           postinc0	equ	0xFEE
 19401                           plusw0	equ	0xFEB
 19402                           fsr0h	equ	0xFEA
 19403                           fsr0l	equ	0xFE9
 19404                           wreg	equ	0xFE8
 19405                           indf1	equ	0xFE7
 19406                           postdec1	equ	0xFE5
 19407                           fsr1h	equ	0xFE2
 19408                           fsr1l	equ	0xFE1
 19409                           indf2	equ	0xFDF
 19410                           postinc2	equ	0xFDE
 19411                           plusw2	equ	0xFDB
 19412                           fsr2h	equ	0xFDA
 19413                           fsr2l	equ	0xFD9
 19414                           status	equ	0xFD8
 19415                           
 19416 ;; *************** function _VoltageDividerOFF *****************
 19417 ;; Defined at:
 19418 ;;		line 159 in file "ADC.c"
 19419 ;; Parameters:    Size  Location     Type
 19420 ;;		None
 19421 ;; Auto vars:     Size  Location     Type
 19422 ;;		None
 19423 ;; Return value:  Size  Location     Type
 19424 ;;		None               void
 19425 ;; Registers used:
 19426 ;;		None
 19427 ;; Tracked objects:
 19428 ;;		On entry : 0/0
 19429 ;;		On exit  : 0/0
 19430 ;;		Unchanged: 0/0
 19431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19436 ;;Total ram usage:        0 bytes
 19437 ;; Hardware stack levels used:    1
 19438 ;; Hardware stack levels required when called:    6
 19439 ;; This function calls:
 19440 ;;		Nothing
 19441 ;; This function is called by:
 19442 ;;		_ReadVoltage
 19443 ;; This function uses a non-reentrant model
 19444 ;;
 19445                           
 19446                           	psect	text26
 19447  00A53E                     __ptext26:
 19448                           	opt stack 0
 19449  00A53E                     _VoltageDividerOFF:
 19450                           	opt stack 22
 19451                           
 19452                           ;ADC.c: 161: TRISBbits.TRISB5 = 1;
 19453                           
 19454                           ;incstack = 0
 19455  00A53E  8A93               	bsf	3987,5,c	;volatile
 19456  00A540  0012               	return		;funcret
 19457  00A542                     __end_of_VoltageDividerOFF:
 19458                           	opt stack 0
 19459                           tblptru	equ	0xFF8
 19460                           tblptrh	equ	0xFF7
 19461                           tblptrl	equ	0xFF6
 19462                           tablat	equ	0xFF5
 19463                           prodh	equ	0xFF4
 19464                           prodl	equ	0xFF3
 19465                           intcon	equ	0xFF2
 19466                           indf0	equ	0xFEF
 19467                           postinc0	equ	0xFEE
 19468                           plusw0	equ	0xFEB
 19469                           fsr0h	equ	0xFEA
 19470                           fsr0l	equ	0xFE9
 19471                           wreg	equ	0xFE8
 19472                           indf1	equ	0xFE7
 19473                           postdec1	equ	0xFE5
 19474                           fsr1h	equ	0xFE2
 19475                           fsr1l	equ	0xFE1
 19476                           indf2	equ	0xFDF
 19477                           postinc2	equ	0xFDE
 19478                           plusw2	equ	0xFDB
 19479                           fsr2h	equ	0xFDA
 19480                           fsr2l	equ	0xFD9
 19481                           status	equ	0xFD8
 19482                           
 19483 ;; *************** function _InternalADC_Read *****************
 19484 ;; Defined at:
 19485 ;;		line 84 in file "ADC.c"
 19486 ;; Parameters:    Size  Location     Type
 19487 ;;  channel         1    wreg     unsigned char 
 19488 ;;  ADCcounts       2   12[BANK0 ] PTR unsigned int 
 19489 ;;		 -> ReadVoltage@temp(2), 
 19490 ;; Auto vars:     Size  Location     Type
 19491 ;;  channel         1   17[BANK0 ] unsigned char 
 19492 ;;  AnaChanSel      1   16[BANK0 ] unsigned char 
 19493 ;; Return value:  Size  Location     Type
 19494 ;;                  1    wreg      unsigned char 
 19495 ;; Registers used:
 19496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19497 ;; Tracked objects:
 19498 ;;		On entry : 0/0
 19499 ;;		On exit  : 0/0
 19500 ;;		Unchanged: 0/0
 19501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19502 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19503 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19504 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19505 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19506 ;;Total ram usage:        6 bytes
 19507 ;; Hardware stack levels used:    1
 19508 ;; Hardware stack levels required when called:    7
 19509 ;; This function calls:
 19510 ;;		_delayUS
 19511 ;; This function is called by:
 19512 ;;		_ReadVoltage
 19513 ;; This function uses a non-reentrant model
 19514 ;;
 19515                           
 19516                           	psect	text27
 19517  009458                     __ptext27:
 19518                           	opt stack 0
 19519  009458                     _InternalADC_Read:
 19520                           	opt stack 21
 19521                           
 19522                           ;incstack = 0
 19523                           ;InternalADC_Read@channel stored from wreg
 19524  009458  0100               	movlb	0	; () banked
 19525  00945A  6F71               	movwf	InternalADC_Read@channel& (0+255),b
 19526                           
 19527                           ; BSR set to: 0
 19528                           ;ADC.c: 86: unsigned char AnaChanSel = 1;
 19529  00945C  0E01               	movlw	1
 19530  00945E  0100               	movlb	0	; () banked
 19531  009460  6F70               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 19532                           
 19533                           ; BSR set to: 0
 19534                           ;ADC.c: 87: if(channel > 0b1100)
 19535  009462  0E0C               	movlw	12
 19536  009464  0100               	movlb	0	; () banked
 19537  009466  6571               	cpfsgt	InternalADC_Read@channel& (0+255),b
 19538  009468  D00A               	goto	l10200
 19539                           
 19540                           ; BSR set to: 0
 19541                           ;ADC.c: 88: {
 19542                           ;ADC.c: 89: *ADCcounts = 0;
 19543  00946A  C06C  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 19544  00946E  C06D  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 19545  009472  0E00               	movlw	0
 19546  009474  6EDE               	movwf	postinc2,c
 19547  009476  0E00               	movlw	0
 19548  009478  6EDD               	movwf	postdec2,c
 19549                           
 19550                           ; BSR set to: 0
 19551                           ;ADC.c: 90: return 0;
 19552  00947A  0E00               	movlw	0
 19553                           
 19554                           ; BSR set to: 0
 19555  00947C  0012               	return	
 19556  00947E                     l10200:
 19557                           
 19558                           ; BSR set to: 0
 19559                           ;ADC.c: 91: }
 19560                           ;ADC.c: 92: if(channel > 1)
 19561  00947E  0E01               	movlw	1
 19562  009480  0100               	movlb	0	; () banked
 19563  009482  6571               	cpfsgt	InternalADC_Read@channel& (0+255),b
 19564  009484  D001               	goto	l10204
 19565                           
 19566                           ; BSR set to: 0
 19567                           ;ADC.c: 95: }
 19568  009486  D009               	goto	l10208
 19569  009488                     l10204:
 19570                           
 19571                           ; BSR set to: 0
 19572                           ;ADC.c: 96: else if (channel == 0)
 19573  009488  0100               	movlb	0	; () banked
 19574  00948A  5171               	movf	InternalADC_Read@channel& (0+255),w,b
 19575  00948C  0100               	movlb	0	; () banked
 19576  00948E  A4D8               	btfss	status,2,c
 19577  009490  D004               	goto	l10208
 19578                           
 19579                           ; BSR set to: 0
 19580                           ;ADC.c: 97: {
 19581                           ;ADC.c: 98: AnaChanSel = 0;
 19582  009492  0E00               	movlw	0
 19583  009494  0100               	movlb	0	; () banked
 19584  009496  6F70               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 19585                           
 19586                           ; BSR set to: 0
 19587  009498  D000               	goto	l10208
 19588  00949A                     l10208:
 19589                           
 19590                           ; BSR set to: 0
 19591                           ;ADC.c: 99: }
 19592                           ;ADC.c: 101: ADCON0 |= (AnaChanSel << 2);
 19593  00949A  0100               	movlb	0	; () banked
 19594  00949C  4570               	rlncf	InternalADC_Read@AnaChanSel& (0+255),w,b
 19595  00949E  46E8               	rlncf	wreg,f,c
 19596  0094A0  0BFC               	andlw	252
 19597  0094A2  12C2               	iorwf	4034,f,c	;volatile
 19598                           
 19599                           ; BSR set to: 0
 19600                           ;ADC.c: 103: ADCON1bits.VCFG0 = 0;
 19601  0094A4  98C1               	bcf	4033,4,c	;volatile
 19602                           
 19603                           ; BSR set to: 0
 19604                           ;ADC.c: 104: ADCON1bits.VCFG1 = 0;
 19605  0094A6  9AC1               	bcf	4033,5,c	;volatile
 19606                           
 19607                           ; BSR set to: 0
 19608                           ;ADC.c: 106: (ADCON0bits.ADON = 1);
 19609  0094A8  80C2               	bsf	4034,0,c	;volatile
 19610                           
 19611                           ; BSR set to: 0
 19612                           ;ADC.c: 107: delayUS(50);
 19613  0094AA  0E32               	movlw	50
 19614  0094AC  0100               	movlb	0	; () banked
 19615  0094AE  6F63               	movwf	delayUS@US& (0+255),b
 19616  0094B0  0E00               	movlw	0
 19617  0094B2  6F64               	movwf	(delayUS@US+1)& (0+255),b
 19618  0094B4  0E00               	movlw	0
 19619  0094B6  6F65               	movwf	(delayUS@US+2)& (0+255),b
 19620  0094B8  0E00               	movlw	0
 19621  0094BA  6F66               	movwf	(delayUS@US+3)& (0+255),b
 19622  0094BC  ECA0  F04E         	call	_delayUS	;wreg free
 19623                           
 19624                           ;ADC.c: 109: ADCON0bits.GO = 1;
 19625  0094C0  82C2               	bsf	4034,1,c	;volatile
 19626                           
 19627                           ;ADC.c: 110: while(ADCON0bits.GO);
 19628  0094C2  D000               	goto	l849
 19629  0094C4                     l849:
 19630  0094C4  B2C2               	btfsc	4034,1,c	;volatile
 19631  0094C6  D7FE               	goto	l849
 19632                           
 19633                           ;ADC.c: 111: (ADCON0bits.ADON = 0);
 19634  0094C8  90C2               	bcf	4034,0,c	;volatile
 19635                           
 19636                           ;ADC.c: 113: *ADCcounts = ((ADRESH << 8) + ADRESL);
 19637  0094CA  50C3               	movf	4035,w,c	;volatile
 19638  0094CC  CFC4 F06E          	movff	4036,??_InternalADC_Read	;volatile
 19639  0094D0  0100               	movlb	0	; () banked
 19640  0094D2  6B6F               	clrf	(??_InternalADC_Read+1)& (0+255),b
 19641  0094D4  C06E  F06F         	movff	??_InternalADC_Read,??_InternalADC_Read+1
 19642  0094D8  0100               	movlb	0	; () banked
 19643  0094DA  6B6E               	clrf	??_InternalADC_Read& (0+255),b
 19644  0094DC  0100               	movlb	0	; () banked
 19645  0094DE  276E               	addwf	??_InternalADC_Read& (0+255),f,b
 19646  0094E0  0E00               	movlw	0
 19647  0094E2  236F               	addwfc	(??_InternalADC_Read+1)& (0+255),f,b
 19648  0094E4  C06C  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 19649  0094E8  C06D  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 19650  0094EC  C06E  FFDE         	movff	??_InternalADC_Read,postinc2
 19651  0094F0  C06F  FFDD         	movff	??_InternalADC_Read+1,postdec2
 19652                           
 19653                           ; BSR set to: 0
 19654                           ;ADC.c: 114: return 1;
 19655  0094F4  0E01               	movlw	1
 19656  0094F6  0012               	return	
 19657                           
 19658                           ; BSR set to: 0
 19659                           
 19660                           ; BSR set to: 0
 19661  0094F8  0012               	return		;funcret
 19662  0094FA                     __end_of_InternalADC_Read:
 19663                           	opt stack 0
 19664                           tblptru	equ	0xFF8
 19665                           tblptrh	equ	0xFF7
 19666                           tblptrl	equ	0xFF6
 19667                           tablat	equ	0xFF5
 19668                           prodh	equ	0xFF4
 19669                           prodl	equ	0xFF3
 19670                           intcon	equ	0xFF2
 19671                           indf0	equ	0xFEF
 19672                           postinc0	equ	0xFEE
 19673                           plusw0	equ	0xFEB
 19674                           fsr0h	equ	0xFEA
 19675                           fsr0l	equ	0xFE9
 19676                           wreg	equ	0xFE8
 19677                           indf1	equ	0xFE7
 19678                           postdec1	equ	0xFE5
 19679                           fsr1h	equ	0xFE2
 19680                           fsr1l	equ	0xFE1
 19681                           indf2	equ	0xFDF
 19682                           postinc2	equ	0xFDE
 19683                           postdec2	equ	0xFDD
 19684                           plusw2	equ	0xFDB
 19685                           fsr2h	equ	0xFDA
 19686                           fsr2l	equ	0xFD9
 19687                           status	equ	0xFD8
 19688                           
 19689 ;; *************** function _GetStringAfterComma *****************
 19690 ;; Defined at:
 19691 ;;		line 797 in file "MISC.c"
 19692 ;; Parameters:    Size  Location     Type
 19693 ;;  This            2    3[BANK0 ] PTR unsigned char 
 19694 ;;		 -> main@BluetoothString(100), 
 19695 ;;  CommaNumber     1    5[BANK0 ] unsigned char 
 19696 ;;  result          2    6[BANK0 ] PTR unsigned char 
 19697 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 19698 ;; Auto vars:     Size  Location     Type
 19699 ;;  count           1   10[BANK0 ] unsigned char 
 19700 ;;  tempCommaNum    1    9[BANK0 ] unsigned char 
 19701 ;; Return value:  Size  Location     Type
 19702 ;;                  1    wreg      unsigned char 
 19703 ;; Registers used:
 19704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19705 ;; Tracked objects:
 19706 ;;		On entry : 0/0
 19707 ;;		On exit  : 0/0
 19708 ;;		Unchanged: 0/0
 19709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19710 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19711 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19712 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19713 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19714 ;;Total ram usage:        8 bytes
 19715 ;; Hardware stack levels used:    1
 19716 ;; Hardware stack levels required when called:    6
 19717 ;; This function calls:
 19718 ;;		Nothing
 19719 ;; This function is called by:
 19720 ;;		_UseBluetooth
 19721 ;; This function uses a non-reentrant model
 19722 ;;
 19723                           
 19724                           	psect	text28
 19725  0084E6                     __ptext28:
 19726                           	opt stack 0
 19727  0084E6                     _GetStringAfterComma:
 19728                           	opt stack 23
 19729                           
 19730                           ;MISC.c: 799: unsigned char tempCommaNumber = 1;
 19731                           
 19732                           ; BSR set to: 0
 19733                           ;incstack = 0
 19734  0084E6  0E01               	movlw	1
 19735  0084E8  0100               	movlb	0	; () banked
 19736  0084EA  6F69               	movwf	GetStringAfterComma@tempCommaNumber& (0+255),b
 19737                           
 19738                           ;MISC.c: 800: unsigned char count = 0;
 19739  0084EC  0E00               	movlw	0
 19740  0084EE  0100               	movlb	0	; () banked
 19741  0084F0  6F6A               	movwf	GetStringAfterComma@count& (0+255),b
 19742                           
 19743                           ; BSR set to: 0
 19744                           
 19745                           ;MISC.c: 802: SCAN:while(*This != ',' && *This != 0)
 19746  0084F2  D001               	goto	l11402
 19747                           
 19748                           ; BSR set to: 0
 19749  0084F4  D02B               	goto	L12
 19750  0084F6                     l11402:
 19751                           
 19752                           ; BSR set to: 0
 19753  0084F6  C063  FFD9         	movff	GetStringAfterComma@This,fsr2l
 19754  0084FA  C064  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 19755  0084FE  0E2C               	movlw	44
 19756  008500  18DE               	xorwf	postinc2,w,c
 19757  008502  B4D8               	btfsc	status,2,c
 19758  008504  D009               	goto	l11406
 19759                           
 19760                           ; BSR set to: 0
 19761  008506  C063  FFD9         	movff	GetStringAfterComma@This,fsr2l
 19762  00850A  C064  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 19763  00850E  50DF               	movf	indf2,w,c
 19764  008510  B4D8               	btfsc	status,2,c
 19765  008512  D002               	goto	l11406
 19766  008514  D01B               	goto	L12
 19767                           
 19768                           ; BSR set to: 0
 19769  008516  D000               	goto	l11406
 19770  008518                     l11406:
 19771                           
 19772                           ; BSR set to: 0
 19773                           ;MISC.c: 806: }
 19774                           ;MISC.c: 807: if(*This == 0)
 19775  008518  C063  FFD9         	movff	GetStringAfterComma@This,fsr2l
 19776  00851C  C064  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 19777  008520  50DF               	movf	indf2,w,c
 19778  008522  A4D8               	btfss	status,2,c
 19779  008524  D003               	goto	l11414
 19780                           
 19781                           ; BSR set to: 0
 19782                           ;MISC.c: 808: {
 19783                           ;MISC.c: 809: return 1;
 19784  008526  0E01               	movlw	1
 19785                           
 19786                           ; BSR set to: 0
 19787  008528  0012               	return	
 19788                           
 19789                           ; BSR set to: 0
 19790                           ;MISC.c: 810: }
 19791  00852A  D015               	goto	l11420
 19792  00852C                     l11414:
 19793                           
 19794                           ; BSR set to: 0
 19795                           ;MISC.c: 811: else if(*This != ',')
 19796  00852C  C063  FFD9         	movff	GetStringAfterComma@This,fsr2l
 19797  008530  C064  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 19798  008534  0E2C               	movlw	44
 19799  008536  18DE               	xorwf	postinc2,w,c
 19800  008538  B4D8               	btfsc	status,2,c
 19801  00853A  D00D               	goto	l11420
 19802                           
 19803                           ; BSR set to: 0
 19804                           ;MISC.c: 812: {
 19805                           ;MISC.c: 813: if(tempCommaNumber < CommaNumber)
 19806  00853C  0100               	movlb	0	; () banked
 19807  00853E  5165               	movf	GetStringAfterComma@CommaNumber& (0+255),w,b
 19808  008540  0100               	movlb	0	; () banked
 19809  008542  5D69               	subwf	GetStringAfterComma@tempCommaNumber& (0+255),w,b
 19810  008544  B0D8               	btfsc	status,0,c
 19811  008546  D007               	goto	l11420
 19812                           
 19813                           ; BSR set to: 0
 19814                           ;MISC.c: 814: {
 19815                           ;MISC.c: 815: tempCommaNumber++;
 19816  008548  0100               	movlb	0	; () banked
 19817  00854A  2B69               	incf	GetStringAfterComma@tempCommaNumber& (0+255),f,b
 19818  00854C                     L12:
 19819                           
 19820                           ;MISC.c: 816: This++;
 19821  00854C  0100               	movlb	0	; () banked
 19822  00854E  4B63               	infsnz	GetStringAfterComma@This& (0+255),f,b
 19823  008550  2B64               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 19824                           
 19825                           ;MISC.c: 817: goto SCAN;
 19826  008552  D7D1               	goto	l11402
 19827                           
 19828                           ; BSR set to: 0
 19829                           
 19830                           ; BSR set to: 0
 19831  008554  D000               	goto	l11420
 19832  008556                     l11420:
 19833                           
 19834                           ; BSR set to: 0
 19835                           ;MISC.c: 818: }
 19836                           ;MISC.c: 819: }
 19837                           ;MISC.c: 820: if(*This == 0)
 19838  008556  C063  FFD9         	movff	GetStringAfterComma@This,fsr2l
 19839  00855A  C064  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 19840  00855E  50DF               	movf	indf2,w,c
 19841  008560  A4D8               	btfss	status,2,c
 19842  008562  D002               	goto	l11426
 19843                           
 19844                           ; BSR set to: 0
 19845                           ;MISC.c: 821: {
 19846                           ;MISC.c: 822: return 1;
 19847  008564  0E01               	movlw	1
 19848                           
 19849                           ; BSR set to: 0
 19850  008566  0012               	return	
 19851  008568                     l11426:
 19852                           
 19853                           ; BSR set to: 0
 19854                           ;MISC.c: 823: }
 19855                           ;MISC.c: 824: This++;
 19856  008568  0100               	movlb	0	; () banked
 19857  00856A  4B63               	infsnz	GetStringAfterComma@This& (0+255),f,b
 19858  00856C  2B64               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 19859                           
 19860                           ; BSR set to: 0
 19861                           ;MISC.c: 825: if(*This == ' ')
 19862  00856E  C063  FFD9         	movff	GetStringAfterComma@This,fsr2l
 19863  008572  C064  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 19864  008576  0E20               	movlw	32
 19865  008578  18DE               	xorwf	postinc2,w,c
 19866  00857A  A4D8               	btfss	status,2,c
 19867  00857C  D004               	goto	l11432
 19868                           
 19869                           ; BSR set to: 0
 19870                           ;MISC.c: 826: {
 19871                           ;MISC.c: 827: This++;
 19872  00857E  0100               	movlb	0	; () banked
 19873  008580  4B63               	infsnz	GetStringAfterComma@This& (0+255),f,b
 19874  008582  2B64               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 19875                           
 19876                           ;MISC.c: 829: }
 19877  008584  D028               	goto	l11454
 19878  008586                     l11432:
 19879                           
 19880                           ; BSR set to: 0
 19881                           ;MISC.c: 830: else if (*This == ',')
 19882  008586  C063  FFD9         	movff	GetStringAfterComma@This,fsr2l
 19883  00858A  C064  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 19884  00858E  0E2C               	movlw	44
 19885  008590  18DE               	xorwf	postinc2,w,c
 19886  008592  A4D8               	btfss	status,2,c
 19887  008594  D003               	goto	l11440
 19888                           
 19889                           ; BSR set to: 0
 19890                           ;MISC.c: 831: {
 19891                           ;MISC.c: 832: return 2;
 19892  008596  0E02               	movlw	2
 19893                           
 19894                           ; BSR set to: 0
 19895  008598  0012               	return	
 19896                           
 19897                           ; BSR set to: 0
 19898                           ;MISC.c: 833: }
 19899  00859A  D01D               	goto	l11454
 19900  00859C                     l11440:
 19901                           
 19902                           ; BSR set to: 0
 19903                           ;MISC.c: 834: else if(*This == 0)
 19904  00859C  C063  FFD9         	movff	GetStringAfterComma@This,fsr2l
 19905  0085A0  C064  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 19906  0085A4  50DF               	movf	indf2,w,c
 19907  0085A6  A4D8               	btfss	status,2,c
 19908  0085A8  D016               	goto	l11454
 19909                           
 19910                           ; BSR set to: 0
 19911                           ;MISC.c: 835: {
 19912                           ;MISC.c: 836: return 3;
 19913  0085AA  0E03               	movlw	3
 19914                           
 19915                           ; BSR set to: 0
 19916  0085AC  0012               	return	
 19917                           
 19918                           ; BSR set to: 0
 19919                           ;MISC.c: 837: }
 19920                           ;MISC.c: 838: while(*This != 0 && *This != ' ' && count < 10)
 19921                           
 19922                           ; BSR set to: 0
 19923                           
 19924                           ; BSR set to: 0
 19925  0085AE  D013               	goto	l11454
 19926  0085B0                     l11446:
 19927                           
 19928                           ; BSR set to: 0
 19929                           ;MISC.c: 839: {
 19930                           ;MISC.c: 840: *result = *This;
 19931  0085B0  C063  FFD9         	movff	GetStringAfterComma@This,fsr2l
 19932  0085B4  C064  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 19933  0085B8  C066  FFE1         	movff	GetStringAfterComma@result,fsr1l
 19934  0085BC  C067  FFE2         	movff	GetStringAfterComma@result+1,fsr1h
 19935  0085C0  CFDF FFE7          	movff	indf2,indf1
 19936                           
 19937                           ; BSR set to: 0
 19938                           ;MISC.c: 841: result++;
 19939  0085C4  0100               	movlb	0	; () banked
 19940  0085C6  4B66               	infsnz	GetStringAfterComma@result& (0+255),f,b
 19941  0085C8  2B67               	incf	(GetStringAfterComma@result+1)& (0+255),f,b
 19942                           
 19943                           ; BSR set to: 0
 19944                           ;MISC.c: 842: This++;
 19945  0085CA  0100               	movlb	0	; () banked
 19946  0085CC  4B63               	infsnz	GetStringAfterComma@This& (0+255),f,b
 19947  0085CE  2B64               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 19948                           
 19949                           ; BSR set to: 0
 19950                           ;MISC.c: 843: count++;
 19951  0085D0  0100               	movlb	0	; () banked
 19952  0085D2  2B6A               	incf	GetStringAfterComma@count& (0+255),f,b
 19953  0085D4  D000               	goto	l11454
 19954  0085D6                     l11454:
 19955                           
 19956                           ; BSR set to: 0
 19957  0085D6  C063  FFD9         	movff	GetStringAfterComma@This,fsr2l
 19958  0085DA  C064  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 19959  0085DE  50DF               	movf	indf2,w,c
 19960  0085E0  B4D8               	btfsc	status,2,c
 19961  0085E2  D00D               	goto	l11460
 19962                           
 19963                           ; BSR set to: 0
 19964  0085E4  C063  FFD9         	movff	GetStringAfterComma@This,fsr2l
 19965  0085E8  C064  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 19966  0085EC  0E20               	movlw	32
 19967  0085EE  18DE               	xorwf	postinc2,w,c
 19968  0085F0  B4D8               	btfsc	status,2,c
 19969  0085F2  D005               	goto	l11460
 19970                           
 19971                           ; BSR set to: 0
 19972  0085F4  0E09               	movlw	9
 19973  0085F6  0100               	movlb	0	; () banked
 19974  0085F8  656A               	cpfsgt	GetStringAfterComma@count& (0+255),b
 19975  0085FA  D7DA               	goto	l11446
 19976                           
 19977                           ; BSR set to: 0
 19978  0085FC  D000               	goto	l11460
 19979  0085FE                     l11460:
 19980                           
 19981                           ; BSR set to: 0
 19982                           ;MISC.c: 844: }
 19983                           ;MISC.c: 845: return 0;
 19984  0085FE  0E00               	movlw	0
 19985  008600  0012               	return	
 19986                           
 19987                           ; BSR set to: 0
 19988                           
 19989                           ; BSR set to: 0
 19990  008602  0012               	return		;funcret
 19991  008604                     __end_of_GetStringAfterComma:
 19992                           	opt stack 0
 19993                           tblptru	equ	0xFF8
 19994                           tblptrh	equ	0xFF7
 19995                           tblptrl	equ	0xFF6
 19996                           tablat	equ	0xFF5
 19997                           prodh	equ	0xFF4
 19998                           prodl	equ	0xFF3
 19999                           intcon	equ	0xFF2
 20000                           indf0	equ	0xFEF
 20001                           postinc0	equ	0xFEE
 20002                           plusw0	equ	0xFEB
 20003                           fsr0h	equ	0xFEA
 20004                           fsr0l	equ	0xFE9
 20005                           wreg	equ	0xFE8
 20006                           indf1	equ	0xFE7
 20007                           postdec1	equ	0xFE5
 20008                           fsr1h	equ	0xFE2
 20009                           fsr1l	equ	0xFE1
 20010                           indf2	equ	0xFDF
 20011                           postinc2	equ	0xFDE
 20012                           postdec2	equ	0xFDD
 20013                           plusw2	equ	0xFDB
 20014                           fsr2h	equ	0xFDA
 20015                           fsr2l	equ	0xFD9
 20016                           status	equ	0xFD8
 20017                           
 20018 ;; *************** function _GetNumberUnsigned *****************
 20019 ;; Defined at:
 20020 ;;		line 615 in file "MISC.c"
 20021 ;; Parameters:    Size  Location     Type
 20022 ;;  This            2   15[BANK0 ] PTR unsigned char 
 20023 ;;		 -> main@BluetoothString(100), 
 20024 ;;  CommaNumber     1   17[BANK0 ] unsigned char 
 20025 ;;  result          2   18[BANK0 ] PTR unsigned long 
 20026 ;;		 -> UseBluetooth@temp(4), UseBluetooth@EnteredNEC(4), 
 20027 ;; Auto vars:     Size  Location     Type
 20028 ;;  temp            4   29[BANK0 ] long 
 20029 ;;  tempThis        1   33[BANK0 ] unsigned char 
 20030 ;;  i               1   28[BANK0 ] unsigned char 
 20031 ;;  Hex             1   27[BANK0 ] unsigned char 
 20032 ;;  count           1   26[BANK0 ] unsigned char 
 20033 ;;  tempCommaNum    1   25[BANK0 ] unsigned char 
 20034 ;; Return value:  Size  Location     Type
 20035 ;;                  1    wreg      unsigned char 
 20036 ;; Registers used:
 20037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20038 ;; Tracked objects:
 20039 ;;		On entry : 0/0
 20040 ;;		On exit  : 0/0
 20041 ;;		Unchanged: 0/0
 20042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20043 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20044 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20045 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20046 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20047 ;;Total ram usage:       19 bytes
 20048 ;; Hardware stack levels used:    1
 20049 ;; Hardware stack levels required when called:    7
 20050 ;; This function calls:
 20051 ;;		_IsLetter
 20052 ;;		___lmul
 20053 ;;		_lowercaseChar
 20054 ;; This function is called by:
 20055 ;;		_UseBluetooth
 20056 ;; This function uses a non-reentrant model
 20057 ;;
 20058                           
 20059                           	psect	text29
 20060  005C52                     __ptext29:
 20061                           	opt stack 0
 20062  005C52                     _GetNumberUnsigned:
 20063                           	opt stack 22
 20064                           
 20065                           ;MISC.c: 617: unsigned char i =0;
 20066                           
 20067                           ; BSR set to: 0
 20068                           ;incstack = 0
 20069  005C52  0E00               	movlw	0
 20070  005C54  0100               	movlb	0	; () banked
 20071  005C56  6F7C               	movwf	GetNumberUnsigned@i& (0+255),b
 20072                           
 20073                           ;MISC.c: 618: long temp =0;
 20074  005C58  0E00               	movlw	0
 20075  005C5A  0100               	movlb	0	; () banked
 20076  005C5C  6F7D               	movwf	GetNumberUnsigned@temp& (0+255),b
 20077  005C5E  0E00               	movlw	0
 20078  005C60  6F7E               	movwf	(GetNumberUnsigned@temp+1)& (0+255),b
 20079  005C62  0E00               	movlw	0
 20080  005C64  6F7F               	movwf	(GetNumberUnsigned@temp+2)& (0+255),b
 20081  005C66  0E00               	movlw	0
 20082  005C68  6F80               	movwf	(GetNumberUnsigned@temp+3)& (0+255),b
 20083                           
 20084                           ;MISC.c: 619: unsigned char tempCommaNumber = 1;
 20085  005C6A  0E01               	movlw	1
 20086  005C6C  0100               	movlb	0	; () banked
 20087  005C6E  6F79               	movwf	GetNumberUnsigned@tempCommaNumber& (0+255),b
 20088                           
 20089                           ;MISC.c: 620: unsigned char count =0;
 20090  005C70  0E00               	movlw	0
 20091  005C72  0100               	movlb	0	; () banked
 20092  005C74  6F7A               	movwf	GetNumberUnsigned@count& (0+255),b
 20093                           
 20094                           ;MISC.c: 621: unsigned char Hex = 0;
 20095  005C76  0E00               	movlw	0
 20096  005C78  0100               	movlb	0	; () banked
 20097  005C7A  6F7B               	movwf	GetNumberUnsigned@Hex& (0+255),b
 20098                           
 20099                           ;MISC.c: 622: unsigned char tempThis;
 20100                           ;MISC.c: 624: while(*This != 0)
 20101  005C7C  D038               	goto	l11186
 20102  005C7E                     l11166:
 20103                           
 20104                           ; BSR set to: 0
 20105                           ;MISC.c: 625: {
 20106                           ;MISC.c: 626: if(*This == '0')
 20107  005C7E  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20108  005C82  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20109  005C86  0E30               	movlw	48
 20110  005C88  18DE               	xorwf	postinc2,w,c
 20111  005C8A  A4D8               	btfss	status,2,c
 20112  005C8C  D02A               	goto	l11182
 20113                           
 20114                           ; BSR set to: 0
 20115                           ;MISC.c: 627: {
 20116                           ;MISC.c: 628: count++;
 20117  005C8E  0100               	movlb	0	; () banked
 20118  005C90  2B7A               	incf	GetNumberUnsigned@count& (0+255),f,b
 20119                           
 20120                           ;MISC.c: 629: This++;
 20121  005C92  0100               	movlb	0	; () banked
 20122  005C94  4B6F               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 20123  005C96  2B70               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 20124                           
 20125                           ; BSR set to: 0
 20126                           ;MISC.c: 630: if(*This == 'x' || *This == 'X')
 20127  005C98  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20128  005C9C  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20129  005CA0  0E78               	movlw	120
 20130  005CA2  18DE               	xorwf	postinc2,w,c
 20131  005CA4  B4D8               	btfsc	status,2,c
 20132  005CA6  D008               	goto	l11174
 20133                           
 20134                           ; BSR set to: 0
 20135  005CA8  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20136  005CAC  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20137  005CB0  0E58               	movlw	88
 20138  005CB2  18DE               	xorwf	postinc2,w,c
 20139  005CB4  A4D8               	btfss	status,2,c
 20140  005CB6  D015               	goto	l11182
 20141  005CB8                     l11174:
 20142                           
 20143                           ; BSR set to: 0
 20144                           ;MISC.c: 631: {
 20145                           ;MISC.c: 632: This++;
 20146  005CB8  0100               	movlb	0	; () banked
 20147  005CBA  4B6F               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 20148  005CBC  2B70               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 20149                           
 20150                           ; BSR set to: 0
 20151                           ;MISC.c: 633: if(*This >='0' && *This <='9')
 20152  005CBE  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20153  005CC2  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20154  005CC6  0E2F               	movlw	47
 20155  005CC8  64DF               	cpfsgt	indf2,c
 20156  005CCA  D00B               	goto	l11182
 20157                           
 20158                           ; BSR set to: 0
 20159  005CCC  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20160  005CD0  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20161  005CD4  0E3A               	movlw	58
 20162  005CD6  60DF               	cpfslt	indf2,c
 20163  005CD8  D004               	goto	l11182
 20164                           
 20165                           ; BSR set to: 0
 20166                           ;MISC.c: 634: {
 20167                           ;MISC.c: 635: Hex = 1;
 20168  005CDA  0E01               	movlw	1
 20169  005CDC  0100               	movlb	0	; () banked
 20170  005CDE  6F7B               	movwf	GetNumberUnsigned@Hex& (0+255),b
 20171                           
 20172                           ; BSR set to: 0
 20173                           
 20174                           ; BSR set to: 0
 20175  005CE0  D000               	goto	l11182
 20176  005CE2                     l11182:
 20177                           
 20178                           ; BSR set to: 0
 20179                           ;MISC.c: 636: }
 20180                           ;MISC.c: 637: }
 20181                           ;MISC.c: 638: }
 20182                           ;MISC.c: 639: count++;
 20183  005CE2  0100               	movlb	0	; () banked
 20184  005CE4  2B7A               	incf	GetNumberUnsigned@count& (0+255),f,b
 20185                           
 20186                           ; BSR set to: 0
 20187                           ;MISC.c: 640: This++;
 20188  005CE6  0100               	movlb	0	; () banked
 20189  005CE8  4B6F               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 20190  005CEA  2B70               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 20191  005CEC  D000               	goto	l11186
 20192  005CEE                     l11186:
 20193                           
 20194                           ; BSR set to: 0
 20195  005CEE  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20196  005CF2  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20197  005CF6  50DF               	movf	indf2,w,c
 20198  005CF8  A4D8               	btfss	status,2,c
 20199  005CFA  D7C1               	goto	l11166
 20200                           
 20201                           ; BSR set to: 0
 20202                           ;MISC.c: 641: }
 20203                           ;MISC.c: 642: This-=count;
 20204                           
 20205                           ; BSR set to: 0
 20206  005CFC  0100               	movlb	0	; () banked
 20207  005CFE  517A               	movf	GetNumberUnsigned@count& (0+255),w,b
 20208  005D00  0D01               	mullw	1
 20209  005D02  50F3               	movf	prodl,w,c
 20210  005D04  0100               	movlb	0	; () banked
 20211  005D06  5F6F               	subwf	GetNumberUnsigned@This& (0+255),f,b
 20212  005D08  50F4               	movf	prodh,w,c
 20213  005D0A  0100               	movlb	0	; () banked
 20214  005D0C  5B70               	subwfb	(GetNumberUnsigned@This+1)& (0+255),f,b
 20215                           
 20216                           ; BSR set to: 0
 20217                           
 20218                           ;MISC.c: 644: SCAN:while(*This != '=' && *This != ',' && *This != 0)
 20219  005D0E  D001               	goto	l11192
 20220                           
 20221                           ; BSR set to: 0
 20222  005D10  D03B               	goto	L13
 20223  005D12                     l11192:
 20224                           
 20225                           ; BSR set to: 0
 20226  005D12  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20227  005D16  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20228  005D1A  0E3D               	movlw	61
 20229  005D1C  18DE               	xorwf	postinc2,w,c
 20230  005D1E  B4D8               	btfsc	status,2,c
 20231  005D20  D011               	goto	l11198
 20232                           
 20233                           ; BSR set to: 0
 20234  005D22  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20235  005D26  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20236  005D2A  0E2C               	movlw	44
 20237  005D2C  18DE               	xorwf	postinc2,w,c
 20238  005D2E  B4D8               	btfsc	status,2,c
 20239  005D30  D009               	goto	l11198
 20240                           
 20241                           ; BSR set to: 0
 20242  005D32  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20243  005D36  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20244  005D3A  50DF               	movf	indf2,w,c
 20245  005D3C  B4D8               	btfsc	status,2,c
 20246  005D3E  D002               	goto	l11198
 20247  005D40  D023               	goto	L13
 20248                           
 20249                           ; BSR set to: 0
 20250  005D42  D000               	goto	l11198
 20251  005D44                     l11198:
 20252                           
 20253                           ; BSR set to: 0
 20254                           ;MISC.c: 648: }
 20255                           ;MISC.c: 649: if(*This == 0)
 20256  005D44  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20257  005D48  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20258  005D4C  50DF               	movf	indf2,w,c
 20259  005D4E  A4D8               	btfss	status,2,c
 20260  005D50  D003               	goto	l11206
 20261                           
 20262                           ; BSR set to: 0
 20263                           ;MISC.c: 650: {
 20264                           ;MISC.c: 651: return 1;
 20265  005D52  0E01               	movlw	1
 20266                           
 20267                           ; BSR set to: 0
 20268  005D54  0012               	return	
 20269                           
 20270                           ; BSR set to: 0
 20271                           ;MISC.c: 652: }
 20272  005D56  D01D               	goto	l11214
 20273  005D58                     l11206:
 20274                           
 20275                           ; BSR set to: 0
 20276                           ;MISC.c: 653: else if(*This != '=' || *This != ',')
 20277  005D58  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20278  005D5C  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20279  005D60  0E3D               	movlw	61
 20280  005D62  18DE               	xorwf	postinc2,w,c
 20281  005D64  A4D8               	btfss	status,2,c
 20282  005D66  D008               	goto	l11210
 20283                           
 20284                           ; BSR set to: 0
 20285  005D68  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20286  005D6C  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20287  005D70  0E2C               	movlw	44
 20288  005D72  18DE               	xorwf	postinc2,w,c
 20289  005D74  B4D8               	btfsc	status,2,c
 20290  005D76  D00D               	goto	l11214
 20291  005D78                     l11210:
 20292                           
 20293                           ; BSR set to: 0
 20294                           ;MISC.c: 654: {
 20295                           ;MISC.c: 655: if(tempCommaNumber < CommaNumber)
 20296  005D78  0100               	movlb	0	; () banked
 20297  005D7A  5171               	movf	GetNumberUnsigned@CommaNumber& (0+255),w,b
 20298  005D7C  0100               	movlb	0	; () banked
 20299  005D7E  5D79               	subwf	GetNumberUnsigned@tempCommaNumber& (0+255),w,b
 20300  005D80  B0D8               	btfsc	status,0,c
 20301  005D82  D007               	goto	l11214
 20302                           
 20303                           ; BSR set to: 0
 20304                           ;MISC.c: 656: {
 20305                           ;MISC.c: 657: tempCommaNumber++;
 20306  005D84  0100               	movlb	0	; () banked
 20307  005D86  2B79               	incf	GetNumberUnsigned@tempCommaNumber& (0+255),f,b
 20308  005D88                     L13:
 20309                           
 20310                           ;MISC.c: 658: This++;
 20311  005D88  0100               	movlb	0	; () banked
 20312  005D8A  4B6F               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 20313  005D8C  2B70               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 20314                           
 20315                           ;MISC.c: 659: goto SCAN;
 20316  005D8E  D7C1               	goto	l11192
 20317                           
 20318                           ; BSR set to: 0
 20319                           
 20320                           ; BSR set to: 0
 20321  005D90  D000               	goto	l11214
 20322  005D92                     l11214:
 20323                           
 20324                           ; BSR set to: 0
 20325                           ;MISC.c: 660: }
 20326                           ;MISC.c: 661: }
 20327                           ;MISC.c: 662: if(*This == 0)
 20328  005D92  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20329  005D96  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20330  005D9A  50DF               	movf	indf2,w,c
 20331  005D9C  A4D8               	btfss	status,2,c
 20332  005D9E  D002               	goto	l11220
 20333                           
 20334                           ; BSR set to: 0
 20335                           ;MISC.c: 663: {
 20336                           ;MISC.c: 664: return 1;
 20337  005DA0  0E01               	movlw	1
 20338                           
 20339                           ; BSR set to: 0
 20340  005DA2  0012               	return	
 20341  005DA4                     l11220:
 20342                           
 20343                           ; BSR set to: 0
 20344                           ;MISC.c: 665: }
 20345                           ;MISC.c: 666: This++;
 20346  005DA4  0100               	movlb	0	; () banked
 20347  005DA6  4B6F               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 20348  005DA8  2B70               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 20349                           
 20350                           ; BSR set to: 0
 20351                           ;MISC.c: 667: if(*This == ' ')
 20352  005DAA  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20353  005DAE  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20354  005DB2  0E20               	movlw	32
 20355  005DB4  18DE               	xorwf	postinc2,w,c
 20356  005DB6  A4D8               	btfss	status,2,c
 20357  005DB8  D004               	goto	l11226
 20358                           
 20359                           ; BSR set to: 0
 20360                           ;MISC.c: 668: {
 20361                           ;MISC.c: 669: This++;
 20362  005DBA  0100               	movlb	0	; () banked
 20363  005DBC  4B6F               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 20364  005DBE  2B70               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 20365                           
 20366                           ;MISC.c: 671: }
 20367  005DC0  D028               	goto	l11250
 20368  005DC2                     l11226:
 20369                           
 20370                           ; BSR set to: 0
 20371                           ;MISC.c: 672: else if (*This == '=' || *This == ',')
 20372  005DC2  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20373  005DC6  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20374  005DCA  0E3D               	movlw	61
 20375  005DCC  18DE               	xorwf	postinc2,w,c
 20376  005DCE  B4D8               	btfsc	status,2,c
 20377  005DD0  D008               	goto	l11230
 20378                           
 20379                           ; BSR set to: 0
 20380  005DD2  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20381  005DD6  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20382  005DDA  0E2C               	movlw	44
 20383  005DDC  18DE               	xorwf	postinc2,w,c
 20384  005DDE  A4D8               	btfss	status,2,c
 20385  005DE0  D003               	goto	l11236
 20386  005DE2                     l11230:
 20387                           
 20388                           ; BSR set to: 0
 20389                           ;MISC.c: 673: {
 20390                           ;MISC.c: 674: return 2;
 20391  005DE2  0E02               	movlw	2
 20392                           
 20393                           ; BSR set to: 0
 20394  005DE4  0012               	return	
 20395                           
 20396                           ; BSR set to: 0
 20397                           ;MISC.c: 675: }
 20398  005DE6  D015               	goto	l11250
 20399  005DE8                     l11236:
 20400                           
 20401                           ; BSR set to: 0
 20402                           ;MISC.c: 676: else if(*This == '-')
 20403  005DE8  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20404  005DEC  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20405  005DF0  0E2D               	movlw	45
 20406  005DF2  18DE               	xorwf	postinc2,w,c
 20407  005DF4  A4D8               	btfss	status,2,c
 20408  005DF6  D003               	goto	l11244
 20409                           
 20410                           ; BSR set to: 0
 20411                           ;MISC.c: 677: {
 20412                           ;MISC.c: 678: return 5;
 20413  005DF8  0E05               	movlw	5
 20414                           
 20415                           ; BSR set to: 0
 20416  005DFA  0012               	return	
 20417                           
 20418                           ; BSR set to: 0
 20419                           ;MISC.c: 680: }
 20420  005DFC  D00A               	goto	l11250
 20421  005DFE                     l11244:
 20422                           
 20423                           ; BSR set to: 0
 20424                           ;MISC.c: 681: else if(*This == 0)
 20425  005DFE  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20426  005E02  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20427  005E06  50DF               	movf	indf2,w,c
 20428  005E08  A4D8               	btfss	status,2,c
 20429  005E0A  D003               	goto	l11250
 20430                           
 20431                           ; BSR set to: 0
 20432                           ;MISC.c: 682: {
 20433                           ;MISC.c: 683: return 3;
 20434  005E0C  0E03               	movlw	3
 20435                           
 20436                           ; BSR set to: 0
 20437  005E0E  0012               	return	
 20438                           
 20439                           ; BSR set to: 0
 20440                           
 20441                           ; BSR set to: 0
 20442                           
 20443                           ; BSR set to: 0
 20444  005E10  D000               	goto	l11250
 20445  005E12                     l11250:
 20446                           
 20447                           ; BSR set to: 0
 20448                           ;MISC.c: 684: }
 20449                           ;MISC.c: 685: if(Hex)
 20450  005E12  0100               	movlb	0	; () banked
 20451  005E14  517B               	movf	GetNumberUnsigned@Hex& (0+255),w,b
 20452  005E16  0100               	movlb	0	; () banked
 20453  005E18  A4D8               	btfss	status,2,c
 20454  005E1A  D006               	goto	l11256
 20455  005E1C  D119               	goto	l11314
 20456                           
 20457                           ; BSR set to: 0
 20458                           ;MISC.c: 686: {
 20459                           ;MISC.c: 687: while(*This != 'x' && *This != 'X')
 20460  005E1E  D004               	goto	l11256
 20461  005E20                     l11254:
 20462                           
 20463                           ; BSR set to: 0
 20464                           ;MISC.c: 688: {
 20465                           ;MISC.c: 690: This++;
 20466  005E20  0100               	movlb	0	; () banked
 20467  005E22  4B6F               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 20468  005E24  2B70               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 20469  005E26  D000               	goto	l11256
 20470  005E28                     l11256:
 20471                           
 20472                           ; BSR set to: 0
 20473  005E28  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20474  005E2C  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20475  005E30  0E78               	movlw	120
 20476  005E32  18DE               	xorwf	postinc2,w,c
 20477  005E34  B4D8               	btfsc	status,2,c
 20478  005E36  D108               	goto	l11312
 20479                           
 20480                           ; BSR set to: 0
 20481  005E38  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20482  005E3C  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20483  005E40  0E58               	movlw	88
 20484  005E42  18DE               	xorwf	postinc2,w,c
 20485  005E44  B4D8               	btfsc	status,2,c
 20486  005E46  D100               	goto	l11312
 20487  005E48  D7EB               	goto	l11254
 20488                           
 20489                           ; BSR set to: 0
 20490  005E4A  D0FE               	goto	l11312
 20491                           
 20492                           ; BSR set to: 0
 20493  005E4C  D0FD               	goto	l11312
 20494                           
 20495                           ; BSR set to: 0
 20496                           ;MISC.c: 693: }
 20497                           ;MISC.c: 694: while(*This != 0 && *This != ' ' && *This != ',' && *This != '=')
 20498                           
 20499                           ; BSR set to: 0
 20500                           ;MISC.c: 691: }
 20501                           ;MISC.c: 692: This++;
 20502  005E4E  D100               	goto	l11314
 20503  005E50                     l11262:
 20504                           
 20505                           ; BSR set to: 0
 20506                           ;MISC.c: 695: {
 20507                           ;MISC.c: 696: if(!Hex)
 20508  005E50  0100               	movlb	0	; () banked
 20509  005E52  517B               	movf	GetNumberUnsigned@Hex& (0+255),w,b
 20510  005E54  0100               	movlb	0	; () banked
 20511  005E56  A4D8               	btfss	status,2,c
 20512  005E58  D05B               	goto	l11280
 20513                           
 20514                           ; BSR set to: 0
 20515                           ;MISC.c: 697: {
 20516                           ;MISC.c: 698: if(*This >=48 && *This <= 57)
 20517  005E5A  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20518  005E5E  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20519  005E62  0E2F               	movlw	47
 20520  005E64  64DF               	cpfsgt	indf2,c
 20521  005E66  D0F0               	goto	l11312
 20522                           
 20523                           ; BSR set to: 0
 20524  005E68  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20525  005E6C  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20526  005E70  0E3A               	movlw	58
 20527  005E72  60DF               	cpfslt	indf2,c
 20528  005E74  D0E9               	goto	l11312
 20529                           
 20530                           ; BSR set to: 0
 20531                           ;MISC.c: 699: {
 20532                           ;MISC.c: 700: temp = temp * 10;
 20533  005E76  C07D  F063         	movff	GetNumberUnsigned@temp,___lmul@multiplier
 20534  005E7A  C07E  F064         	movff	GetNumberUnsigned@temp+1,___lmul@multiplier+1
 20535  005E7E  C07F  F065         	movff	GetNumberUnsigned@temp+2,___lmul@multiplier+2
 20536  005E82  C080  F066         	movff	GetNumberUnsigned@temp+3,___lmul@multiplier+3
 20537  005E86  0E0A               	movlw	10
 20538  005E88  0100               	movlb	0	; () banked
 20539  005E8A  6F67               	movwf	___lmul@multiplicand& (0+255),b
 20540  005E8C  0E00               	movlw	0
 20541  005E8E  6F68               	movwf	(___lmul@multiplicand+1)& (0+255),b
 20542  005E90  0E00               	movlw	0
 20543  005E92  6F69               	movwf	(___lmul@multiplicand+2)& (0+255),b
 20544  005E94  0E00               	movlw	0
 20545  005E96  6F6A               	movwf	(___lmul@multiplicand+3)& (0+255),b
 20546  005E98  EC04  F04D         	call	___lmul	;wreg free
 20547  005E9C  C063  F07D         	movff	?___lmul,GetNumberUnsigned@temp
 20548  005EA0  C064  F07E         	movff	?___lmul+1,GetNumberUnsigned@temp+1
 20549  005EA4  C065  F07F         	movff	?___lmul+2,GetNumberUnsigned@temp+2
 20550  005EA8  C066  F080         	movff	?___lmul+3,GetNumberUnsigned@temp+3
 20551                           
 20552                           ;MISC.c: 701: temp += *This - 48;
 20553  005EAC  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20554  005EB0  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20555  005EB4  50DF               	movf	indf2,w,c
 20556  005EB6  0100               	movlb	0	; () banked
 20557  005EB8  6F74               	movwf	??_GetNumberUnsigned& (0+255),b
 20558  005EBA  0ED0               	movlw	208
 20559  005EBC  0100               	movlb	0	; () banked
 20560  005EBE  2574               	addwf	??_GetNumberUnsigned& (0+255),w,b
 20561  005EC0  0100               	movlb	0	; () banked
 20562  005EC2  6F75               	movwf	(??_GetNumberUnsigned+1)& (0+255),b
 20563  005EC4  0100               	movlb	0	; () banked
 20564  005EC6  6B76               	clrf	(??_GetNumberUnsigned+2)& (0+255),b
 20565  005EC8  0EFF               	movlw	255
 20566  005ECA  2376               	addwfc	(??_GetNumberUnsigned+2)& (0+255),f,b
 20567  005ECC  0100               	movlb	0	; () banked
 20568  005ECE  6B77               	clrf	(??_GetNumberUnsigned+3)& (0+255),b
 20569  005ED0  0100               	movlb	0	; () banked
 20570  005ED2  BF76               	btfsc	(??_GetNumberUnsigned+2)& (0+255),7,b
 20571  005ED4  0777               	decf	(??_GetNumberUnsigned+3)& (0+255),f,b
 20572  005ED6  0100               	movlb	0	; () banked
 20573  005ED8  5177               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 20574  005EDA  0100               	movlb	0	; () banked
 20575  005EDC  6F78               	movwf	(??_GetNumberUnsigned+4)& (0+255),b
 20576  005EDE  0100               	movlb	0	; () banked
 20577  005EE0  5175               	movf	(??_GetNumberUnsigned+1)& (0+255),w,b
 20578  005EE2  0100               	movlb	0	; () banked
 20579  005EE4  277D               	addwf	GetNumberUnsigned@temp& (0+255),f,b
 20580  005EE6  0100               	movlb	0	; () banked
 20581  005EE8  5176               	movf	(??_GetNumberUnsigned+2)& (0+255),w,b
 20582  005EEA  0100               	movlb	0	; () banked
 20583  005EEC  237E               	addwfc	(GetNumberUnsigned@temp+1)& (0+255),f,b
 20584  005EEE  0100               	movlb	0	; () banked
 20585  005EF0  5177               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 20586  005EF2  0100               	movlb	0	; () banked
 20587  005EF4  237F               	addwfc	(GetNumberUnsigned@temp+2)& (0+255),f,b
 20588  005EF6  0100               	movlb	0	; () banked
 20589  005EF8  5178               	movf	(??_GetNumberUnsigned+4)& (0+255),w,b
 20590  005EFA  0100               	movlb	0	; () banked
 20591  005EFC  2380               	addwfc	(GetNumberUnsigned@temp+3)& (0+255),f,b
 20592                           
 20593                           ; BSR set to: 0
 20594                           ;MISC.c: 702: i++;
 20595  005EFE  0100               	movlb	0	; () banked
 20596  005F00  2B7C               	incf	GetNumberUnsigned@i& (0+255),f,b
 20597  005F02                     l11274:
 20598                           
 20599                           ; BSR set to: 0
 20600                           ;MISC.c: 703: if(i>32)
 20601  005F02  0E20               	movlw	32
 20602  005F04  0100               	movlb	0	; () banked
 20603  005F06  657C               	cpfsgt	GetNumberUnsigned@i& (0+255),b
 20604  005F08  D09F               	goto	l11312
 20605                           
 20606                           ; BSR set to: 0
 20607                           ;MISC.c: 704: {
 20608                           ;MISC.c: 705: return 4;
 20609  005F0A  0E04               	movlw	4
 20610                           
 20611                           ; BSR set to: 0
 20612  005F0C  0012               	return	
 20613                           
 20614                           ; BSR set to: 0
 20615                           ;MISC.c: 706: }
 20616                           ;MISC.c: 707: }
 20617                           ;MISC.c: 708: }
 20618                           
 20619                           ; BSR set to: 0
 20620  005F0E  D09C               	goto	l11312
 20621  005F10                     l11280:
 20622                           
 20623                           ; BSR set to: 0
 20624                           ;MISC.c: 709: else
 20625                           ;MISC.c: 710: {
 20626                           ;MISC.c: 711: if((*This >=48 && *This <= 57) || (*This >=65 && *This <= 70) || (*This >=
      +                           97 && *This <= 102))
 20627  005F10  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20628  005F14  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20629  005F18  0E2F               	movlw	47
 20630  005F1A  64DF               	cpfsgt	indf2,c
 20631  005F1C  D008               	goto	l11284
 20632                           
 20633                           ; BSR set to: 0
 20634  005F1E  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20635  005F22  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20636  005F26  0E39               	movlw	57
 20637  005F28  64DF               	cpfsgt	indf2,c
 20638  005F2A  D01F               	goto	l11292
 20639  005F2C  D000               	goto	l11284
 20640  005F2E                     l11284:
 20641                           
 20642                           ; BSR set to: 0
 20643  005F2E  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20644  005F32  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20645  005F36  0E40               	movlw	64
 20646  005F38  64DF               	cpfsgt	indf2,c
 20647  005F3A  D008               	goto	l11288
 20648                           
 20649                           ; BSR set to: 0
 20650  005F3C  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20651  005F40  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20652  005F44  0E46               	movlw	70
 20653  005F46  64DF               	cpfsgt	indf2,c
 20654  005F48  D010               	goto	l11292
 20655  005F4A  D000               	goto	l11288
 20656  005F4C                     l11288:
 20657                           
 20658                           ; BSR set to: 0
 20659  005F4C  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20660  005F50  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20661  005F54  0E60               	movlw	96
 20662  005F56  64DF               	cpfsgt	indf2,c
 20663  005F58  D077               	goto	l11312
 20664                           
 20665                           ; BSR set to: 0
 20666  005F5A  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20667  005F5E  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20668  005F62  0E67               	movlw	103
 20669  005F64  60DF               	cpfslt	indf2,c
 20670  005F66  D070               	goto	l11312
 20671  005F68  D000               	goto	l11292
 20672  005F6A                     l11292:
 20673                           
 20674                           ; BSR set to: 0
 20675                           ;MISC.c: 712: {
 20676                           ;MISC.c: 713: temp <<= 4;
 20677  005F6A  0100               	movlb	0	; () banked
 20678  005F6C  0E04               	movlw	4
 20679  005F6E                     u12615:
 20680  005F6E  90D8               	bcf	status,0,c
 20681  005F70  377D               	rlcf	GetNumberUnsigned@temp& (0+255),f,b
 20682  005F72  377E               	rlcf	(GetNumberUnsigned@temp+1)& (0+255),f,b
 20683  005F74  377F               	rlcf	(GetNumberUnsigned@temp+2)& (0+255),f,b
 20684  005F76  3780               	rlcf	(GetNumberUnsigned@temp+3)& (0+255),f,b
 20685  005F78  2EE8               	decfsz	wreg,f,c
 20686  005F7A  D7F9               	goto	u12615
 20687                           
 20688                           ; BSR set to: 0
 20689                           ;MISC.c: 714: tempThis = *This;
 20690  005F7C  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20691  005F80  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20692  005F84  50DF               	movf	indf2,w,c
 20693  005F86  0100               	movlb	0	; () banked
 20694  005F88  6F81               	movwf	GetNumberUnsigned@tempThis& (0+255),b
 20695                           
 20696                           ; BSR set to: 0
 20697                           ;MISC.c: 715: if(IsLetter(tempThis))
 20698  005F8A  0100               	movlb	0	; () banked
 20699  005F8C  5181               	movf	GetNumberUnsigned@tempThis& (0+255),w,b
 20700  005F8E  ECB3  F051         	call	_IsLetter
 20701  005F92  0900               	iorlw	0
 20702  005F94  B4D8               	btfsc	status,2,c
 20703  005F96  D029               	goto	l11302
 20704                           
 20705                           ;MISC.c: 716: {
 20706                           ;MISC.c: 717: lowercaseChar(&tempThis);
 20707  005F98  0E81               	movlw	low GetNumberUnsigned@tempThis
 20708  005F9A  0100               	movlb	0	; () banked
 20709  005F9C  6F63               	movwf	lowercaseChar@Input& (0+255),b
 20710  005F9E  0E00               	movlw	high GetNumberUnsigned@tempThis
 20711  005FA0  0100               	movlb	0	; () banked
 20712  005FA2  6F64               	movwf	(lowercaseChar@Input+1)& (0+255),b
 20713  005FA4  EC37  F051         	call	_lowercaseChar	;wreg free
 20714                           
 20715                           ;MISC.c: 718: temp += (tempThis - 87);
 20716  005FA8  0EA9               	movlw	169
 20717  005FAA  0100               	movlb	0	; () banked
 20718  005FAC  2581               	addwf	GetNumberUnsigned@tempThis& (0+255),w,b
 20719  005FAE  0100               	movlb	0	; () banked
 20720  005FB0  6F74               	movwf	??_GetNumberUnsigned& (0+255),b
 20721  005FB2  0100               	movlb	0	; () banked
 20722  005FB4  6B75               	clrf	(??_GetNumberUnsigned+1)& (0+255),b
 20723  005FB6  0EFF               	movlw	255
 20724  005FB8  2375               	addwfc	(??_GetNumberUnsigned+1)& (0+255),f,b
 20725  005FBA  0100               	movlb	0	; () banked
 20726  005FBC  6B76               	clrf	(??_GetNumberUnsigned+2)& (0+255),b
 20727  005FBE  0100               	movlb	0	; () banked
 20728  005FC0  BF75               	btfsc	(??_GetNumberUnsigned+1)& (0+255),7,b
 20729  005FC2  0776               	decf	(??_GetNumberUnsigned+2)& (0+255),f,b
 20730  005FC4  0100               	movlb	0	; () banked
 20731  005FC6  5176               	movf	(??_GetNumberUnsigned+2)& (0+255),w,b
 20732  005FC8  0100               	movlb	0	; () banked
 20733  005FCA  6F77               	movwf	(??_GetNumberUnsigned+3)& (0+255),b
 20734  005FCC  0100               	movlb	0	; () banked
 20735  005FCE  5174               	movf	??_GetNumberUnsigned& (0+255),w,b
 20736  005FD0  0100               	movlb	0	; () banked
 20737  005FD2  277D               	addwf	GetNumberUnsigned@temp& (0+255),f,b
 20738  005FD4  0100               	movlb	0	; () banked
 20739  005FD6  5175               	movf	(??_GetNumberUnsigned+1)& (0+255),w,b
 20740  005FD8  0100               	movlb	0	; () banked
 20741  005FDA  237E               	addwfc	(GetNumberUnsigned@temp+1)& (0+255),f,b
 20742  005FDC  0100               	movlb	0	; () banked
 20743  005FDE  5176               	movf	(??_GetNumberUnsigned+2)& (0+255),w,b
 20744  005FE0  0100               	movlb	0	; () banked
 20745  005FE2  237F               	addwfc	(GetNumberUnsigned@temp+2)& (0+255),f,b
 20746  005FE4  0100               	movlb	0	; () banked
 20747  005FE6  5177               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 20748  005FE8  D027               	goto	L14
 20749  005FEA                     l11302:
 20750                           
 20751                           ;MISC.c: 720: else
 20752                           ;MISC.c: 721: {
 20753                           ;MISC.c: 722: temp += (*This - 48);
 20754  005FEA  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20755  005FEE  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20756  005FF2  50DF               	movf	indf2,w,c
 20757  005FF4  0100               	movlb	0	; () banked
 20758  005FF6  6F74               	movwf	??_GetNumberUnsigned& (0+255),b
 20759  005FF8  0ED0               	movlw	208
 20760  005FFA  0100               	movlb	0	; () banked
 20761  005FFC  2574               	addwf	??_GetNumberUnsigned& (0+255),w,b
 20762  005FFE  0100               	movlb	0	; () banked
 20763  006000  6F75               	movwf	(??_GetNumberUnsigned+1)& (0+255),b
 20764  006002  0100               	movlb	0	; () banked
 20765  006004  6B76               	clrf	(??_GetNumberUnsigned+2)& (0+255),b
 20766  006006  0EFF               	movlw	255
 20767  006008  2376               	addwfc	(??_GetNumberUnsigned+2)& (0+255),f,b
 20768  00600A  0100               	movlb	0	; () banked
 20769  00600C  6B77               	clrf	(??_GetNumberUnsigned+3)& (0+255),b
 20770  00600E  0100               	movlb	0	; () banked
 20771  006010  BF76               	btfsc	(??_GetNumberUnsigned+2)& (0+255),7,b
 20772  006012  0777               	decf	(??_GetNumberUnsigned+3)& (0+255),f,b
 20773  006014  0100               	movlb	0	; () banked
 20774  006016  5177               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 20775  006018  0100               	movlb	0	; () banked
 20776  00601A  6F78               	movwf	(??_GetNumberUnsigned+4)& (0+255),b
 20777  00601C  0100               	movlb	0	; () banked
 20778  00601E  5175               	movf	(??_GetNumberUnsigned+1)& (0+255),w,b
 20779  006020  0100               	movlb	0	; () banked
 20780  006022  277D               	addwf	GetNumberUnsigned@temp& (0+255),f,b
 20781  006024  0100               	movlb	0	; () banked
 20782  006026  5176               	movf	(??_GetNumberUnsigned+2)& (0+255),w,b
 20783  006028  0100               	movlb	0	; () banked
 20784  00602A  237E               	addwfc	(GetNumberUnsigned@temp+1)& (0+255),f,b
 20785  00602C  0100               	movlb	0	; () banked
 20786  00602E  5177               	movf	(??_GetNumberUnsigned+3)& (0+255),w,b
 20787  006030  0100               	movlb	0	; () banked
 20788  006032  237F               	addwfc	(GetNumberUnsigned@temp+2)& (0+255),f,b
 20789  006034  0100               	movlb	0	; () banked
 20790  006036  5178               	movf	(??_GetNumberUnsigned+4)& (0+255),w,b
 20791  006038                     L14:
 20792  006038  0100               	movlb	0	; () banked
 20793  00603A  2380               	addwfc	(GetNumberUnsigned@temp+3)& (0+255),f,b
 20794  00603C  D000               	goto	l11304
 20795  00603E                     l11304:
 20796                           
 20797                           ; BSR set to: 0
 20798                           ;MISC.c: 723: }
 20799                           ;MISC.c: 724: i++;
 20800  00603E  0100               	movlb	0	; () banked
 20801  006040  2B7C               	incf	GetNumberUnsigned@i& (0+255),f,b
 20802  006042  D75F               	goto	l11274
 20803                           
 20804                           ; BSR set to: 0
 20805                           
 20806                           ; BSR set to: 0
 20807                           ;MISC.c: 726: {
 20808                           ;MISC.c: 727: return 4;
 20809                           
 20810                           ; BSR set to: 0
 20811                           ;MISC.c: 725: if(i>32)
 20812  006044  0012               	return	
 20813                           
 20814                           ; BSR set to: 0
 20815                           
 20816                           ; BSR set to: 0
 20817  006046  D000               	goto	l11312
 20818  006048                     l11312:
 20819                           
 20820                           ; BSR set to: 0
 20821                           ;MISC.c: 728: }
 20822                           ;MISC.c: 729: }
 20823                           ;MISC.c: 730: }
 20824                           ;MISC.c: 731: This++;
 20825  006048  0100               	movlb	0	; () banked
 20826  00604A  4B6F               	infsnz	GetNumberUnsigned@This& (0+255),f,b
 20827  00604C  2B70               	incf	(GetNumberUnsigned@This+1)& (0+255),f,b
 20828  00604E  D000               	goto	l11314
 20829  006050                     l11314:
 20830                           
 20831                           ; BSR set to: 0
 20832  006050  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20833  006054  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20834  006058  50DF               	movf	indf2,w,c
 20835  00605A  B4D8               	btfsc	status,2,c
 20836  00605C  D01A               	goto	l11322
 20837                           
 20838                           ; BSR set to: 0
 20839  00605E  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20840  006062  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20841  006066  0E20               	movlw	32
 20842  006068  18DE               	xorwf	postinc2,w,c
 20843  00606A  B4D8               	btfsc	status,2,c
 20844  00606C  D012               	goto	l11322
 20845                           
 20846                           ; BSR set to: 0
 20847  00606E  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20848  006072  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20849  006076  0E2C               	movlw	44
 20850  006078  18DE               	xorwf	postinc2,w,c
 20851  00607A  B4D8               	btfsc	status,2,c
 20852  00607C  D00A               	goto	l11322
 20853                           
 20854                           ; BSR set to: 0
 20855  00607E  C06F  FFD9         	movff	GetNumberUnsigned@This,fsr2l
 20856  006082  C070  FFDA         	movff	GetNumberUnsigned@This+1,fsr2h
 20857  006086  0E3D               	movlw	61
 20858  006088  18DE               	xorwf	postinc2,w,c
 20859  00608A  B4D8               	btfsc	status,2,c
 20860  00608C  D002               	goto	l11322
 20861  00608E  D6E0               	goto	l11262
 20862                           
 20863                           ; BSR set to: 0
 20864  006090  D000               	goto	l11322
 20865  006092                     l11322:
 20866                           
 20867                           ; BSR set to: 0
 20868                           ;MISC.c: 732: }
 20869                           ;MISC.c: 733: *result = temp;
 20870  006092  C072  FFD9         	movff	GetNumberUnsigned@result,fsr2l
 20871  006096  C073  FFDA         	movff	GetNumberUnsigned@result+1,fsr2h
 20872  00609A  C07D  FFDE         	movff	GetNumberUnsigned@temp,postinc2
 20873  00609E  C07E  FFDE         	movff	GetNumberUnsigned@temp+1,postinc2
 20874  0060A2  C07F  FFDE         	movff	GetNumberUnsigned@temp+2,postinc2
 20875  0060A6  C080  FFDE         	movff	GetNumberUnsigned@temp+3,postinc2
 20876                           
 20877                           ; BSR set to: 0
 20878                           ;MISC.c: 734: return 0;
 20879  0060AA  0E00               	movlw	0
 20880  0060AC  0012               	return	
 20881                           
 20882                           ; BSR set to: 0
 20883                           
 20884                           ; BSR set to: 0
 20885  0060AE  0012               	return		;funcret
 20886  0060B0                     __end_of_GetNumberUnsigned:
 20887                           	opt stack 0
 20888                           tblptru	equ	0xFF8
 20889                           tblptrh	equ	0xFF7
 20890                           tblptrl	equ	0xFF6
 20891                           tablat	equ	0xFF5
 20892                           prodh	equ	0xFF4
 20893                           prodl	equ	0xFF3
 20894                           intcon	equ	0xFF2
 20895                           indf0	equ	0xFEF
 20896                           postinc0	equ	0xFEE
 20897                           plusw0	equ	0xFEB
 20898                           fsr0h	equ	0xFEA
 20899                           fsr0l	equ	0xFE9
 20900                           wreg	equ	0xFE8
 20901                           indf1	equ	0xFE7
 20902                           postdec1	equ	0xFE5
 20903                           fsr1h	equ	0xFE2
 20904                           fsr1l	equ	0xFE1
 20905                           indf2	equ	0xFDF
 20906                           postinc2	equ	0xFDE
 20907                           postdec2	equ	0xFDD
 20908                           plusw2	equ	0xFDB
 20909                           fsr2h	equ	0xFDA
 20910                           fsr2l	equ	0xFD9
 20911                           status	equ	0xFD8
 20912                           
 20913 ;; *************** function _GetNumber *****************
 20914 ;; Defined at:
 20915 ;;		line 481 in file "MISC.c"
 20916 ;; Parameters:    Size  Location     Type
 20917 ;;  This            2   15[BANK0 ] PTR unsigned char 
 20918 ;;		 -> ReceivedString(100), 
 20919 ;;  CommaNumber     1   17[BANK0 ] unsigned char 
 20920 ;;  result          2   18[BANK0 ] PTR long 
 20921 ;;		 -> UseBluetooth@SerialNumberTEMP(4), 
 20922 ;; Auto vars:     Size  Location     Type
 20923 ;;  temp            4   31[BANK0 ] long 
 20924 ;;  tempThis        1   30[BANK0 ] unsigned char 
 20925 ;;  i               1   29[BANK0 ] unsigned char 
 20926 ;;  Hex             1   28[BANK0 ] unsigned char 
 20927 ;;  count           1   27[BANK0 ] unsigned char 
 20928 ;;  negative        1   26[BANK0 ] unsigned char 
 20929 ;;  tempCommaNum    1   25[BANK0 ] unsigned char 
 20930 ;; Return value:  Size  Location     Type
 20931 ;;                  1    wreg      unsigned char 
 20932 ;; Registers used:
 20933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20934 ;; Tracked objects:
 20935 ;;		On entry : 0/0
 20936 ;;		On exit  : 0/0
 20937 ;;		Unchanged: 0/0
 20938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20939 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20940 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20941 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20942 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20943 ;;Total ram usage:       20 bytes
 20944 ;; Hardware stack levels used:    1
 20945 ;; Hardware stack levels required when called:    7
 20946 ;; This function calls:
 20947 ;;		_IsLetter
 20948 ;;		___lmul
 20949 ;;		_lowercaseChar
 20950 ;; This function is called by:
 20951 ;;		_UseBluetooth
 20952 ;; This function uses a non-reentrant model
 20953 ;;
 20954                           
 20955                           	psect	text30
 20956  0057CC                     __ptext30:
 20957                           	opt stack 0
 20958  0057CC                     _GetNumber:
 20959                           	opt stack 22
 20960                           
 20961                           ;MISC.c: 483: unsigned char i =0;
 20962                           
 20963                           ; BSR set to: 0
 20964                           ;incstack = 0
 20965  0057CC  0E00               	movlw	0
 20966  0057CE  0100               	movlb	0	; () banked
 20967  0057D0  6F7D               	movwf	GetNumber@i& (0+255),b
 20968                           
 20969                           ;MISC.c: 484: long temp =0;
 20970  0057D2  0E00               	movlw	0
 20971  0057D4  0100               	movlb	0	; () banked
 20972  0057D6  6F7F               	movwf	GetNumber@temp& (0+255),b
 20973  0057D8  0E00               	movlw	0
 20974  0057DA  6F80               	movwf	(GetNumber@temp+1)& (0+255),b
 20975  0057DC  0E00               	movlw	0
 20976  0057DE  6F81               	movwf	(GetNumber@temp+2)& (0+255),b
 20977  0057E0  0E00               	movlw	0
 20978  0057E2  6F82               	movwf	(GetNumber@temp+3)& (0+255),b
 20979                           
 20980                           ;MISC.c: 485: unsigned char negative =0;
 20981  0057E4  0E00               	movlw	0
 20982  0057E6  0100               	movlb	0	; () banked
 20983  0057E8  6F7A               	movwf	GetNumber@negative& (0+255),b
 20984                           
 20985                           ;MISC.c: 486: unsigned char tempCommaNumber = 1;
 20986  0057EA  0E01               	movlw	1
 20987  0057EC  0100               	movlb	0	; () banked
 20988  0057EE  6F79               	movwf	GetNumber@tempCommaNumber& (0+255),b
 20989                           
 20990                           ;MISC.c: 487: unsigned char count =0;
 20991  0057F0  0E00               	movlw	0
 20992  0057F2  0100               	movlb	0	; () banked
 20993  0057F4  6F7B               	movwf	GetNumber@count& (0+255),b
 20994                           
 20995                           ;MISC.c: 488: unsigned char Hex = 0;
 20996  0057F6  0E00               	movlw	0
 20997  0057F8  0100               	movlb	0	; () banked
 20998  0057FA  6F7C               	movwf	GetNumber@Hex& (0+255),b
 20999                           
 21000                           ;MISC.c: 489: unsigned char tempThis;
 21001                           ;MISC.c: 491: while(*This != 0)
 21002  0057FC  D038               	goto	l11020
 21003  0057FE                     l11000:
 21004                           
 21005                           ; BSR set to: 0
 21006                           ;MISC.c: 492: {
 21007                           ;MISC.c: 493: if(*This == '0')
 21008  0057FE  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21009  005802  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21010  005806  0E30               	movlw	48
 21011  005808  18DE               	xorwf	postinc2,w,c
 21012  00580A  A4D8               	btfss	status,2,c
 21013  00580C  D02A               	goto	l11016
 21014                           
 21015                           ; BSR set to: 0
 21016                           ;MISC.c: 494: {
 21017                           ;MISC.c: 495: count++;
 21018  00580E  0100               	movlb	0	; () banked
 21019  005810  2B7B               	incf	GetNumber@count& (0+255),f,b
 21020                           
 21021                           ;MISC.c: 496: This++;
 21022  005812  0100               	movlb	0	; () banked
 21023  005814  4B6F               	infsnz	GetNumber@This& (0+255),f,b
 21024  005816  2B70               	incf	(GetNumber@This+1)& (0+255),f,b
 21025                           
 21026                           ; BSR set to: 0
 21027                           ;MISC.c: 497: if(*This == 'x' || *This == 'X')
 21028  005818  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21029  00581C  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21030  005820  0E78               	movlw	120
 21031  005822  18DE               	xorwf	postinc2,w,c
 21032  005824  B4D8               	btfsc	status,2,c
 21033  005826  D008               	goto	l11008
 21034                           
 21035                           ; BSR set to: 0
 21036  005828  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21037  00582C  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21038  005830  0E58               	movlw	88
 21039  005832  18DE               	xorwf	postinc2,w,c
 21040  005834  A4D8               	btfss	status,2,c
 21041  005836  D015               	goto	l11016
 21042  005838                     l11008:
 21043                           
 21044                           ; BSR set to: 0
 21045                           ;MISC.c: 498: {
 21046                           ;MISC.c: 499: This++;
 21047  005838  0100               	movlb	0	; () banked
 21048  00583A  4B6F               	infsnz	GetNumber@This& (0+255),f,b
 21049  00583C  2B70               	incf	(GetNumber@This+1)& (0+255),f,b
 21050                           
 21051                           ; BSR set to: 0
 21052                           ;MISC.c: 500: if(*This >='0' && *This <='9')
 21053  00583E  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21054  005842  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21055  005846  0E2F               	movlw	47
 21056  005848  64DF               	cpfsgt	indf2,c
 21057  00584A  D00B               	goto	l11016
 21058                           
 21059                           ; BSR set to: 0
 21060  00584C  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21061  005850  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21062  005854  0E3A               	movlw	58
 21063  005856  60DF               	cpfslt	indf2,c
 21064  005858  D004               	goto	l11016
 21065                           
 21066                           ; BSR set to: 0
 21067                           ;MISC.c: 501: {
 21068                           ;MISC.c: 502: Hex = 1;
 21069  00585A  0E01               	movlw	1
 21070  00585C  0100               	movlb	0	; () banked
 21071  00585E  6F7C               	movwf	GetNumber@Hex& (0+255),b
 21072                           
 21073                           ; BSR set to: 0
 21074                           
 21075                           ; BSR set to: 0
 21076  005860  D000               	goto	l11016
 21077  005862                     l11016:
 21078                           
 21079                           ; BSR set to: 0
 21080                           ;MISC.c: 503: }
 21081                           ;MISC.c: 504: }
 21082                           ;MISC.c: 505: }
 21083                           ;MISC.c: 506: count++;
 21084  005862  0100               	movlb	0	; () banked
 21085  005864  2B7B               	incf	GetNumber@count& (0+255),f,b
 21086                           
 21087                           ; BSR set to: 0
 21088                           ;MISC.c: 507: This++;
 21089  005866  0100               	movlb	0	; () banked
 21090  005868  4B6F               	infsnz	GetNumber@This& (0+255),f,b
 21091  00586A  2B70               	incf	(GetNumber@This+1)& (0+255),f,b
 21092  00586C  D000               	goto	l11020
 21093  00586E                     l11020:
 21094                           
 21095                           ; BSR set to: 0
 21096  00586E  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21097  005872  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21098  005876  50DF               	movf	indf2,w,c
 21099  005878  A4D8               	btfss	status,2,c
 21100  00587A  D7C1               	goto	l11000
 21101                           
 21102                           ; BSR set to: 0
 21103                           ;MISC.c: 508: }
 21104                           ;MISC.c: 509: This-=count;
 21105                           
 21106                           ; BSR set to: 0
 21107  00587C  0100               	movlb	0	; () banked
 21108  00587E  517B               	movf	GetNumber@count& (0+255),w,b
 21109  005880  0D01               	mullw	1
 21110  005882  50F3               	movf	prodl,w,c
 21111  005884  0100               	movlb	0	; () banked
 21112  005886  5F6F               	subwf	GetNumber@This& (0+255),f,b
 21113  005888  50F4               	movf	prodh,w,c
 21114  00588A  0100               	movlb	0	; () banked
 21115  00588C  5B70               	subwfb	(GetNumber@This+1)& (0+255),f,b
 21116                           
 21117                           ; BSR set to: 0
 21118                           
 21119                           ;MISC.c: 511: SCAN:while(*This != '=' && *This != ',' && *This != 0)
 21120  00588E  D001               	goto	l11026
 21121                           
 21122                           ; BSR set to: 0
 21123  005890  D03B               	goto	L15
 21124  005892                     l11026:
 21125                           
 21126                           ; BSR set to: 0
 21127  005892  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21128  005896  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21129  00589A  0E3D               	movlw	61
 21130  00589C  18DE               	xorwf	postinc2,w,c
 21131  00589E  B4D8               	btfsc	status,2,c
 21132  0058A0  D011               	goto	l11032
 21133                           
 21134                           ; BSR set to: 0
 21135  0058A2  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21136  0058A6  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21137  0058AA  0E2C               	movlw	44
 21138  0058AC  18DE               	xorwf	postinc2,w,c
 21139  0058AE  B4D8               	btfsc	status,2,c
 21140  0058B0  D009               	goto	l11032
 21141                           
 21142                           ; BSR set to: 0
 21143  0058B2  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21144  0058B6  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21145  0058BA  50DF               	movf	indf2,w,c
 21146  0058BC  B4D8               	btfsc	status,2,c
 21147  0058BE  D002               	goto	l11032
 21148  0058C0  D023               	goto	L15
 21149                           
 21150                           ; BSR set to: 0
 21151  0058C2  D000               	goto	l11032
 21152  0058C4                     l11032:
 21153                           
 21154                           ; BSR set to: 0
 21155                           ;MISC.c: 515: }
 21156                           ;MISC.c: 516: if(*This == 0)
 21157  0058C4  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21158  0058C8  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21159  0058CC  50DF               	movf	indf2,w,c
 21160  0058CE  A4D8               	btfss	status,2,c
 21161  0058D0  D003               	goto	l11040
 21162                           
 21163                           ; BSR set to: 0
 21164                           ;MISC.c: 517: {
 21165                           ;MISC.c: 518: return 1;
 21166  0058D2  0E01               	movlw	1
 21167                           
 21168                           ; BSR set to: 0
 21169  0058D4  0012               	return	
 21170                           
 21171                           ; BSR set to: 0
 21172                           ;MISC.c: 519: }
 21173  0058D6  D01D               	goto	l11048
 21174  0058D8                     l11040:
 21175                           
 21176                           ; BSR set to: 0
 21177                           ;MISC.c: 520: else if(*This != '=' || *This != ',')
 21178  0058D8  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21179  0058DC  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21180  0058E0  0E3D               	movlw	61
 21181  0058E2  18DE               	xorwf	postinc2,w,c
 21182  0058E4  A4D8               	btfss	status,2,c
 21183  0058E6  D008               	goto	l11044
 21184                           
 21185                           ; BSR set to: 0
 21186  0058E8  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21187  0058EC  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21188  0058F0  0E2C               	movlw	44
 21189  0058F2  18DE               	xorwf	postinc2,w,c
 21190  0058F4  B4D8               	btfsc	status,2,c
 21191  0058F6  D00D               	goto	l11048
 21192  0058F8                     l11044:
 21193                           
 21194                           ; BSR set to: 0
 21195                           ;MISC.c: 521: {
 21196                           ;MISC.c: 522: if(tempCommaNumber < CommaNumber)
 21197  0058F8  0100               	movlb	0	; () banked
 21198  0058FA  5171               	movf	GetNumber@CommaNumber& (0+255),w,b
 21199  0058FC  0100               	movlb	0	; () banked
 21200  0058FE  5D79               	subwf	GetNumber@tempCommaNumber& (0+255),w,b
 21201  005900  B0D8               	btfsc	status,0,c
 21202  005902  D007               	goto	l11048
 21203                           
 21204                           ; BSR set to: 0
 21205                           ;MISC.c: 523: {
 21206                           ;MISC.c: 524: tempCommaNumber++;
 21207  005904  0100               	movlb	0	; () banked
 21208  005906  2B79               	incf	GetNumber@tempCommaNumber& (0+255),f,b
 21209  005908                     L15:
 21210                           
 21211                           ;MISC.c: 525: This++;
 21212  005908  0100               	movlb	0	; () banked
 21213  00590A  4B6F               	infsnz	GetNumber@This& (0+255),f,b
 21214  00590C  2B70               	incf	(GetNumber@This+1)& (0+255),f,b
 21215                           
 21216                           ;MISC.c: 526: goto SCAN;
 21217  00590E  D7C1               	goto	l11026
 21218                           
 21219                           ; BSR set to: 0
 21220                           
 21221                           ; BSR set to: 0
 21222  005910  D000               	goto	l11048
 21223  005912                     l11048:
 21224                           
 21225                           ; BSR set to: 0
 21226                           ;MISC.c: 527: }
 21227                           ;MISC.c: 528: }
 21228                           ;MISC.c: 529: if(*This == 0)
 21229  005912  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21230  005916  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21231  00591A  50DF               	movf	indf2,w,c
 21232  00591C  A4D8               	btfss	status,2,c
 21233  00591E  D002               	goto	l11054
 21234                           
 21235                           ; BSR set to: 0
 21236                           ;MISC.c: 530: {
 21237                           ;MISC.c: 531: return 1;
 21238  005920  0E01               	movlw	1
 21239                           
 21240                           ; BSR set to: 0
 21241  005922  0012               	return	
 21242  005924                     l11054:
 21243                           
 21244                           ; BSR set to: 0
 21245                           ;MISC.c: 532: }
 21246                           ;MISC.c: 533: This++;
 21247  005924  0100               	movlb	0	; () banked
 21248  005926  4B6F               	infsnz	GetNumber@This& (0+255),f,b
 21249  005928  2B70               	incf	(GetNumber@This+1)& (0+255),f,b
 21250                           
 21251                           ; BSR set to: 0
 21252                           ;MISC.c: 534: if(*This == ' ')
 21253  00592A  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21254  00592E  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21255  005932  0E20               	movlw	32
 21256  005934  18DE               	xorwf	postinc2,w,c
 21257  005936  B4D8               	btfsc	status,2,c
 21258  005938  D01E               	goto	l11074
 21259                           
 21260                           ; BSR set to: 0
 21261                           ;MISC.c: 539: else if (*This == '=' || *This == ',')
 21262                           
 21263                           ; BSR set to: 0
 21264                           
 21265                           ;MISC.c: 538: }
 21266                           
 21267                           ; BSR set to: 0
 21268                           ;MISC.c: 535: {
 21269                           ;MISC.c: 536: This++;
 21270  00593A  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21271  00593E  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21272  005942  0E3D               	movlw	61
 21273  005944  18DE               	xorwf	postinc2,w,c
 21274  005946  B4D8               	btfsc	status,2,c
 21275  005948  D008               	goto	l11064
 21276                           
 21277                           ; BSR set to: 0
 21278  00594A  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21279  00594E  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21280  005952  0E2C               	movlw	44
 21281  005954  18DE               	xorwf	postinc2,w,c
 21282  005956  A4D8               	btfss	status,2,c
 21283  005958  D003               	goto	l11070
 21284  00595A                     l11064:
 21285                           
 21286                           ; BSR set to: 0
 21287                           ;MISC.c: 540: {
 21288                           ;MISC.c: 541: return 2;
 21289  00595A  0E02               	movlw	2
 21290                           
 21291                           ; BSR set to: 0
 21292  00595C  0012               	return	
 21293                           
 21294                           ; BSR set to: 0
 21295                           ;MISC.c: 542: }
 21296  00595E  D019               	goto	l11082
 21297  005960                     l11070:
 21298                           
 21299                           ; BSR set to: 0
 21300                           ;MISC.c: 543: else if(*This == '-')
 21301  005960  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21302  005964  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21303  005968  0E2D               	movlw	45
 21304  00596A  18DE               	xorwf	postinc2,w,c
 21305  00596C  A4D8               	btfss	status,2,c
 21306  00596E  D007               	goto	l11076
 21307                           
 21308                           ; BSR set to: 0
 21309                           ;MISC.c: 544: {
 21310                           ;MISC.c: 545: negative = 1;
 21311  005970  0E01               	movlw	1
 21312  005972  0100               	movlb	0	; () banked
 21313  005974  6F7A               	movwf	GetNumber@negative& (0+255),b
 21314  005976                     l11074:
 21315                           
 21316                           ; BSR set to: 0
 21317                           ;MISC.c: 546: This++;
 21318  005976  0100               	movlb	0	; () banked
 21319  005978  4B6F               	infsnz	GetNumber@This& (0+255),f,b
 21320  00597A  2B70               	incf	(GetNumber@This+1)& (0+255),f,b
 21321                           
 21322                           ;MISC.c: 548: }
 21323  00597C  D00A               	goto	l11082
 21324  00597E                     l11076:
 21325                           
 21326                           ; BSR set to: 0
 21327                           ;MISC.c: 549: else if(*This == 0)
 21328  00597E  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21329  005982  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21330  005986  50DF               	movf	indf2,w,c
 21331  005988  A4D8               	btfss	status,2,c
 21332  00598A  D003               	goto	l11082
 21333                           
 21334                           ; BSR set to: 0
 21335                           ;MISC.c: 550: {
 21336                           ;MISC.c: 551: return 3;
 21337  00598C  0E03               	movlw	3
 21338                           
 21339                           ; BSR set to: 0
 21340  00598E  0012               	return	
 21341                           
 21342                           ; BSR set to: 0
 21343                           
 21344                           ; BSR set to: 0
 21345                           
 21346                           ; BSR set to: 0
 21347  005990  D000               	goto	l11082
 21348  005992                     l11082:
 21349                           
 21350                           ; BSR set to: 0
 21351                           ;MISC.c: 552: }
 21352                           ;MISC.c: 553: if(Hex)
 21353  005992  0100               	movlb	0	; () banked
 21354  005994  517C               	movf	GetNumber@Hex& (0+255),w,b
 21355  005996  0100               	movlb	0	; () banked
 21356  005998  B4D8               	btfsc	status,2,c
 21357  00599A  D11C               	goto	l11146
 21358                           
 21359                           ; BSR set to: 0
 21360                           ;MISC.c: 554: {
 21361                           ;MISC.c: 555: negative = 0;
 21362  00599C  0E00               	movlw	0
 21363  00599E  0100               	movlb	0	; () banked
 21364  0059A0  6F7A               	movwf	GetNumber@negative& (0+255),b
 21365                           
 21366                           ;MISC.c: 556: while(*This != 'x' && *This != 'X')
 21367  0059A2  D004               	goto	l11088
 21368  0059A4                     l11086:
 21369                           
 21370                           ; BSR set to: 0
 21371                           ;MISC.c: 557: {
 21372                           ;MISC.c: 559: This++;
 21373  0059A4  0100               	movlb	0	; () banked
 21374  0059A6  4B6F               	infsnz	GetNumber@This& (0+255),f,b
 21375  0059A8  2B70               	incf	(GetNumber@This+1)& (0+255),f,b
 21376  0059AA  D000               	goto	l11088
 21377  0059AC                     l11088:
 21378                           
 21379                           ; BSR set to: 0
 21380  0059AC  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21381  0059B0  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21382  0059B4  0E78               	movlw	120
 21383  0059B6  18DE               	xorwf	postinc2,w,c
 21384  0059B8  B4D8               	btfsc	status,2,c
 21385  0059BA  D108               	goto	l11144
 21386                           
 21387                           ; BSR set to: 0
 21388  0059BC  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21389  0059C0  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21390  0059C4  0E58               	movlw	88
 21391  0059C6  18DE               	xorwf	postinc2,w,c
 21392  0059C8  B4D8               	btfsc	status,2,c
 21393  0059CA  D100               	goto	l11144
 21394  0059CC  D7EB               	goto	l11086
 21395                           
 21396                           ; BSR set to: 0
 21397  0059CE  D0FE               	goto	l11144
 21398                           
 21399                           ; BSR set to: 0
 21400  0059D0  D0FD               	goto	l11144
 21401                           
 21402                           ; BSR set to: 0
 21403                           ;MISC.c: 562: }
 21404                           ;MISC.c: 563: while(*This != 0 && *This != ' ' && *This != ',' && *This != '=')
 21405                           
 21406                           ; BSR set to: 0
 21407                           ;MISC.c: 560: }
 21408                           ;MISC.c: 561: This++;
 21409  0059D2  D100               	goto	l11146
 21410  0059D4                     l11094:
 21411                           
 21412                           ; BSR set to: 0
 21413                           ;MISC.c: 564: {
 21414                           ;MISC.c: 565: if(!Hex)
 21415  0059D4  0100               	movlb	0	; () banked
 21416  0059D6  517C               	movf	GetNumber@Hex& (0+255),w,b
 21417  0059D8  0100               	movlb	0	; () banked
 21418  0059DA  A4D8               	btfss	status,2,c
 21419  0059DC  D05B               	goto	l11112
 21420                           
 21421                           ; BSR set to: 0
 21422                           ;MISC.c: 566: {
 21423                           ;MISC.c: 567: if(*This >=48 && *This <= 57)
 21424  0059DE  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21425  0059E2  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21426  0059E6  0E2F               	movlw	47
 21427  0059E8  64DF               	cpfsgt	indf2,c
 21428  0059EA  D0F0               	goto	l11144
 21429                           
 21430                           ; BSR set to: 0
 21431  0059EC  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21432  0059F0  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21433  0059F4  0E3A               	movlw	58
 21434  0059F6  60DF               	cpfslt	indf2,c
 21435  0059F8  D0E9               	goto	l11144
 21436                           
 21437                           ; BSR set to: 0
 21438                           ;MISC.c: 568: {
 21439                           ;MISC.c: 569: temp = temp * 10;
 21440  0059FA  C07F  F063         	movff	GetNumber@temp,___lmul@multiplier
 21441  0059FE  C080  F064         	movff	GetNumber@temp+1,___lmul@multiplier+1
 21442  005A02  C081  F065         	movff	GetNumber@temp+2,___lmul@multiplier+2
 21443  005A06  C082  F066         	movff	GetNumber@temp+3,___lmul@multiplier+3
 21444  005A0A  0E0A               	movlw	10
 21445  005A0C  0100               	movlb	0	; () banked
 21446  005A0E  6F67               	movwf	___lmul@multiplicand& (0+255),b
 21447  005A10  0E00               	movlw	0
 21448  005A12  6F68               	movwf	(___lmul@multiplicand+1)& (0+255),b
 21449  005A14  0E00               	movlw	0
 21450  005A16  6F69               	movwf	(___lmul@multiplicand+2)& (0+255),b
 21451  005A18  0E00               	movlw	0
 21452  005A1A  6F6A               	movwf	(___lmul@multiplicand+3)& (0+255),b
 21453  005A1C  EC04  F04D         	call	___lmul	;wreg free
 21454  005A20  C063  F07F         	movff	?___lmul,GetNumber@temp
 21455  005A24  C064  F080         	movff	?___lmul+1,GetNumber@temp+1
 21456  005A28  C065  F081         	movff	?___lmul+2,GetNumber@temp+2
 21457  005A2C  C066  F082         	movff	?___lmul+3,GetNumber@temp+3
 21458                           
 21459                           ;MISC.c: 570: temp += *This - 48;
 21460  005A30  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21461  005A34  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21462  005A38  50DF               	movf	indf2,w,c
 21463  005A3A  0100               	movlb	0	; () banked
 21464  005A3C  6F74               	movwf	??_GetNumber& (0+255),b
 21465  005A3E  0ED0               	movlw	208
 21466  005A40  0100               	movlb	0	; () banked
 21467  005A42  2574               	addwf	??_GetNumber& (0+255),w,b
 21468  005A44  0100               	movlb	0	; () banked
 21469  005A46  6F75               	movwf	(??_GetNumber+1)& (0+255),b
 21470  005A48  0100               	movlb	0	; () banked
 21471  005A4A  6B76               	clrf	(??_GetNumber+2)& (0+255),b
 21472  005A4C  0EFF               	movlw	255
 21473  005A4E  2376               	addwfc	(??_GetNumber+2)& (0+255),f,b
 21474  005A50  0100               	movlb	0	; () banked
 21475  005A52  6B77               	clrf	(??_GetNumber+3)& (0+255),b
 21476  005A54  0100               	movlb	0	; () banked
 21477  005A56  BF76               	btfsc	(??_GetNumber+2)& (0+255),7,b
 21478  005A58  0777               	decf	(??_GetNumber+3)& (0+255),f,b
 21479  005A5A  0100               	movlb	0	; () banked
 21480  005A5C  5177               	movf	(??_GetNumber+3)& (0+255),w,b
 21481  005A5E  0100               	movlb	0	; () banked
 21482  005A60  6F78               	movwf	(??_GetNumber+4)& (0+255),b
 21483  005A62  0100               	movlb	0	; () banked
 21484  005A64  5175               	movf	(??_GetNumber+1)& (0+255),w,b
 21485  005A66  0100               	movlb	0	; () banked
 21486  005A68  277F               	addwf	GetNumber@temp& (0+255),f,b
 21487  005A6A  0100               	movlb	0	; () banked
 21488  005A6C  5176               	movf	(??_GetNumber+2)& (0+255),w,b
 21489  005A6E  0100               	movlb	0	; () banked
 21490  005A70  2380               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 21491  005A72  0100               	movlb	0	; () banked
 21492  005A74  5177               	movf	(??_GetNumber+3)& (0+255),w,b
 21493  005A76  0100               	movlb	0	; () banked
 21494  005A78  2381               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 21495  005A7A  0100               	movlb	0	; () banked
 21496  005A7C  5178               	movf	(??_GetNumber+4)& (0+255),w,b
 21497  005A7E  0100               	movlb	0	; () banked
 21498  005A80  2382               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 21499                           
 21500                           ; BSR set to: 0
 21501                           ;MISC.c: 571: i++;
 21502  005A82  0100               	movlb	0	; () banked
 21503  005A84  2B7D               	incf	GetNumber@i& (0+255),f,b
 21504  005A86                     l11106:
 21505                           
 21506                           ; BSR set to: 0
 21507                           ;MISC.c: 572: if(i>32)
 21508  005A86  0E20               	movlw	32
 21509  005A88  0100               	movlb	0	; () banked
 21510  005A8A  657D               	cpfsgt	GetNumber@i& (0+255),b
 21511  005A8C  D09F               	goto	l11144
 21512                           
 21513                           ; BSR set to: 0
 21514                           ;MISC.c: 573: {
 21515                           ;MISC.c: 574: return 4;
 21516  005A8E  0E04               	movlw	4
 21517                           
 21518                           ; BSR set to: 0
 21519  005A90  0012               	return	
 21520                           
 21521                           ; BSR set to: 0
 21522                           ;MISC.c: 575: }
 21523                           ;MISC.c: 576: }
 21524                           ;MISC.c: 577: }
 21525                           
 21526                           ; BSR set to: 0
 21527  005A92  D09C               	goto	l11144
 21528  005A94                     l11112:
 21529                           
 21530                           ; BSR set to: 0
 21531                           ;MISC.c: 578: else
 21532                           ;MISC.c: 579: {
 21533                           ;MISC.c: 580: if((*This >=48 && *This <= 57) || (*This >=65 && *This <= 70) || (*This >=
      +                           97 && *This <= 102))
 21534  005A94  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21535  005A98  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21536  005A9C  0E2F               	movlw	47
 21537  005A9E  64DF               	cpfsgt	indf2,c
 21538  005AA0  D008               	goto	l11116
 21539                           
 21540                           ; BSR set to: 0
 21541  005AA2  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21542  005AA6  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21543  005AAA  0E39               	movlw	57
 21544  005AAC  64DF               	cpfsgt	indf2,c
 21545  005AAE  D01F               	goto	l11124
 21546  005AB0  D000               	goto	l11116
 21547  005AB2                     l11116:
 21548                           
 21549                           ; BSR set to: 0
 21550  005AB2  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21551  005AB6  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21552  005ABA  0E40               	movlw	64
 21553  005ABC  64DF               	cpfsgt	indf2,c
 21554  005ABE  D008               	goto	l11120
 21555                           
 21556                           ; BSR set to: 0
 21557  005AC0  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21558  005AC4  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21559  005AC8  0E46               	movlw	70
 21560  005ACA  64DF               	cpfsgt	indf2,c
 21561  005ACC  D010               	goto	l11124
 21562  005ACE  D000               	goto	l11120
 21563  005AD0                     l11120:
 21564                           
 21565                           ; BSR set to: 0
 21566  005AD0  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21567  005AD4  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21568  005AD8  0E60               	movlw	96
 21569  005ADA  64DF               	cpfsgt	indf2,c
 21570  005ADC  D077               	goto	l11144
 21571                           
 21572                           ; BSR set to: 0
 21573  005ADE  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21574  005AE2  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21575  005AE6  0E67               	movlw	103
 21576  005AE8  60DF               	cpfslt	indf2,c
 21577  005AEA  D070               	goto	l11144
 21578  005AEC  D000               	goto	l11124
 21579  005AEE                     l11124:
 21580                           
 21581                           ; BSR set to: 0
 21582                           ;MISC.c: 581: {
 21583                           ;MISC.c: 582: temp <<= 4;
 21584  005AEE  0100               	movlb	0	; () banked
 21585  005AF0  0E04               	movlw	4
 21586  005AF2                     u12215:
 21587  005AF2  90D8               	bcf	status,0,c
 21588  005AF4  377F               	rlcf	GetNumber@temp& (0+255),f,b
 21589  005AF6  3780               	rlcf	(GetNumber@temp+1)& (0+255),f,b
 21590  005AF8  3781               	rlcf	(GetNumber@temp+2)& (0+255),f,b
 21591  005AFA  3782               	rlcf	(GetNumber@temp+3)& (0+255),f,b
 21592  005AFC  2EE8               	decfsz	wreg,f,c
 21593  005AFE  D7F9               	goto	u12215
 21594                           
 21595                           ; BSR set to: 0
 21596                           ;MISC.c: 583: tempThis = *This;
 21597  005B00  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21598  005B04  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21599  005B08  50DF               	movf	indf2,w,c
 21600  005B0A  0100               	movlb	0	; () banked
 21601  005B0C  6F7E               	movwf	GetNumber@tempThis& (0+255),b
 21602                           
 21603                           ; BSR set to: 0
 21604                           ;MISC.c: 584: if(IsLetter(tempThis))
 21605  005B0E  0100               	movlb	0	; () banked
 21606  005B10  517E               	movf	GetNumber@tempThis& (0+255),w,b
 21607  005B12  ECB3  F051         	call	_IsLetter
 21608  005B16  0900               	iorlw	0
 21609  005B18  B4D8               	btfsc	status,2,c
 21610  005B1A  D029               	goto	l11134
 21611                           
 21612                           ;MISC.c: 585: {
 21613                           ;MISC.c: 586: lowercaseChar(&tempThis);
 21614  005B1C  0E7E               	movlw	low GetNumber@tempThis
 21615  005B1E  0100               	movlb	0	; () banked
 21616  005B20  6F63               	movwf	lowercaseChar@Input& (0+255),b
 21617  005B22  0E00               	movlw	high GetNumber@tempThis
 21618  005B24  0100               	movlb	0	; () banked
 21619  005B26  6F64               	movwf	(lowercaseChar@Input+1)& (0+255),b
 21620  005B28  EC37  F051         	call	_lowercaseChar	;wreg free
 21621                           
 21622                           ;MISC.c: 587: temp += (tempThis - 87);
 21623  005B2C  0EA9               	movlw	169
 21624  005B2E  0100               	movlb	0	; () banked
 21625  005B30  257E               	addwf	GetNumber@tempThis& (0+255),w,b
 21626  005B32  0100               	movlb	0	; () banked
 21627  005B34  6F74               	movwf	??_GetNumber& (0+255),b
 21628  005B36  0100               	movlb	0	; () banked
 21629  005B38  6B75               	clrf	(??_GetNumber+1)& (0+255),b
 21630  005B3A  0EFF               	movlw	255
 21631  005B3C  2375               	addwfc	(??_GetNumber+1)& (0+255),f,b
 21632  005B3E  0100               	movlb	0	; () banked
 21633  005B40  6B76               	clrf	(??_GetNumber+2)& (0+255),b
 21634  005B42  0100               	movlb	0	; () banked
 21635  005B44  BF75               	btfsc	(??_GetNumber+1)& (0+255),7,b
 21636  005B46  0776               	decf	(??_GetNumber+2)& (0+255),f,b
 21637  005B48  0100               	movlb	0	; () banked
 21638  005B4A  5176               	movf	(??_GetNumber+2)& (0+255),w,b
 21639  005B4C  0100               	movlb	0	; () banked
 21640  005B4E  6F77               	movwf	(??_GetNumber+3)& (0+255),b
 21641  005B50  0100               	movlb	0	; () banked
 21642  005B52  5174               	movf	??_GetNumber& (0+255),w,b
 21643  005B54  0100               	movlb	0	; () banked
 21644  005B56  277F               	addwf	GetNumber@temp& (0+255),f,b
 21645  005B58  0100               	movlb	0	; () banked
 21646  005B5A  5175               	movf	(??_GetNumber+1)& (0+255),w,b
 21647  005B5C  0100               	movlb	0	; () banked
 21648  005B5E  2380               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 21649  005B60  0100               	movlb	0	; () banked
 21650  005B62  5176               	movf	(??_GetNumber+2)& (0+255),w,b
 21651  005B64  0100               	movlb	0	; () banked
 21652  005B66  2381               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 21653  005B68  0100               	movlb	0	; () banked
 21654  005B6A  5177               	movf	(??_GetNumber+3)& (0+255),w,b
 21655  005B6C  D027               	goto	L16
 21656  005B6E                     l11134:
 21657                           
 21658                           ;MISC.c: 589: else
 21659                           ;MISC.c: 590: {
 21660                           ;MISC.c: 591: temp += (*This - 48);
 21661  005B6E  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21662  005B72  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21663  005B76  50DF               	movf	indf2,w,c
 21664  005B78  0100               	movlb	0	; () banked
 21665  005B7A  6F74               	movwf	??_GetNumber& (0+255),b
 21666  005B7C  0ED0               	movlw	208
 21667  005B7E  0100               	movlb	0	; () banked
 21668  005B80  2574               	addwf	??_GetNumber& (0+255),w,b
 21669  005B82  0100               	movlb	0	; () banked
 21670  005B84  6F75               	movwf	(??_GetNumber+1)& (0+255),b
 21671  005B86  0100               	movlb	0	; () banked
 21672  005B88  6B76               	clrf	(??_GetNumber+2)& (0+255),b
 21673  005B8A  0EFF               	movlw	255
 21674  005B8C  2376               	addwfc	(??_GetNumber+2)& (0+255),f,b
 21675  005B8E  0100               	movlb	0	; () banked
 21676  005B90  6B77               	clrf	(??_GetNumber+3)& (0+255),b
 21677  005B92  0100               	movlb	0	; () banked
 21678  005B94  BF76               	btfsc	(??_GetNumber+2)& (0+255),7,b
 21679  005B96  0777               	decf	(??_GetNumber+3)& (0+255),f,b
 21680  005B98  0100               	movlb	0	; () banked
 21681  005B9A  5177               	movf	(??_GetNumber+3)& (0+255),w,b
 21682  005B9C  0100               	movlb	0	; () banked
 21683  005B9E  6F78               	movwf	(??_GetNumber+4)& (0+255),b
 21684  005BA0  0100               	movlb	0	; () banked
 21685  005BA2  5175               	movf	(??_GetNumber+1)& (0+255),w,b
 21686  005BA4  0100               	movlb	0	; () banked
 21687  005BA6  277F               	addwf	GetNumber@temp& (0+255),f,b
 21688  005BA8  0100               	movlb	0	; () banked
 21689  005BAA  5176               	movf	(??_GetNumber+2)& (0+255),w,b
 21690  005BAC  0100               	movlb	0	; () banked
 21691  005BAE  2380               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 21692  005BB0  0100               	movlb	0	; () banked
 21693  005BB2  5177               	movf	(??_GetNumber+3)& (0+255),w,b
 21694  005BB4  0100               	movlb	0	; () banked
 21695  005BB6  2381               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 21696  005BB8  0100               	movlb	0	; () banked
 21697  005BBA  5178               	movf	(??_GetNumber+4)& (0+255),w,b
 21698  005BBC                     L16:
 21699  005BBC  0100               	movlb	0	; () banked
 21700  005BBE  2382               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 21701  005BC0  D000               	goto	l11136
 21702  005BC2                     l11136:
 21703                           
 21704                           ; BSR set to: 0
 21705                           ;MISC.c: 592: }
 21706                           ;MISC.c: 593: i++;
 21707  005BC2  0100               	movlb	0	; () banked
 21708  005BC4  2B7D               	incf	GetNumber@i& (0+255),f,b
 21709  005BC6  D75F               	goto	l11106
 21710                           
 21711                           ; BSR set to: 0
 21712                           
 21713                           ; BSR set to: 0
 21714                           ;MISC.c: 595: {
 21715                           ;MISC.c: 596: return 4;
 21716                           
 21717                           ; BSR set to: 0
 21718                           ;MISC.c: 594: if(i>32)
 21719  005BC8  0012               	return	
 21720                           
 21721                           ; BSR set to: 0
 21722                           
 21723                           ; BSR set to: 0
 21724  005BCA  D000               	goto	l11144
 21725  005BCC                     l11144:
 21726                           
 21727                           ; BSR set to: 0
 21728                           ;MISC.c: 597: }
 21729                           ;MISC.c: 598: }
 21730                           ;MISC.c: 599: }
 21731                           ;MISC.c: 600: This++;
 21732  005BCC  0100               	movlb	0	; () banked
 21733  005BCE  4B6F               	infsnz	GetNumber@This& (0+255),f,b
 21734  005BD0  2B70               	incf	(GetNumber@This+1)& (0+255),f,b
 21735  005BD2  D000               	goto	l11146
 21736  005BD4                     l11146:
 21737                           
 21738                           ; BSR set to: 0
 21739  005BD4  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21740  005BD8  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21741  005BDC  50DF               	movf	indf2,w,c
 21742  005BDE  B4D8               	btfsc	status,2,c
 21743  005BE0  D01A               	goto	l11154
 21744                           
 21745                           ; BSR set to: 0
 21746  005BE2  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21747  005BE6  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21748  005BEA  0E20               	movlw	32
 21749  005BEC  18DE               	xorwf	postinc2,w,c
 21750  005BEE  B4D8               	btfsc	status,2,c
 21751  005BF0  D012               	goto	l11154
 21752                           
 21753                           ; BSR set to: 0
 21754  005BF2  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21755  005BF6  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21756  005BFA  0E2C               	movlw	44
 21757  005BFC  18DE               	xorwf	postinc2,w,c
 21758  005BFE  B4D8               	btfsc	status,2,c
 21759  005C00  D00A               	goto	l11154
 21760                           
 21761                           ; BSR set to: 0
 21762  005C02  C06F  FFD9         	movff	GetNumber@This,fsr2l
 21763  005C06  C070  FFDA         	movff	GetNumber@This+1,fsr2h
 21764  005C0A  0E3D               	movlw	61
 21765  005C0C  18DE               	xorwf	postinc2,w,c
 21766  005C0E  B4D8               	btfsc	status,2,c
 21767  005C10  D002               	goto	l11154
 21768  005C12  D6E0               	goto	l11094
 21769                           
 21770                           ; BSR set to: 0
 21771  005C14  D000               	goto	l11154
 21772  005C16                     l11154:
 21773                           
 21774                           ; BSR set to: 0
 21775                           ;MISC.c: 601: }
 21776                           ;MISC.c: 602: if(negative)
 21777  005C16  0100               	movlb	0	; () banked
 21778  005C18  517A               	movf	GetNumber@negative& (0+255),w,b
 21779  005C1A  0100               	movlb	0	; () banked
 21780  005C1C  B4D8               	btfsc	status,2,c
 21781  005C1E  D00A               	goto	l11158
 21782                           
 21783                           ; BSR set to: 0
 21784                           ;MISC.c: 603: {
 21785                           ;MISC.c: 604: temp = (temp * -1);
 21786  005C20  0100               	movlb	0	; () banked
 21787  005C22  1F82               	comf	(GetNumber@temp+3)& (0+255),f,b
 21788  005C24  1F81               	comf	(GetNumber@temp+2)& (0+255),f,b
 21789  005C26  1F80               	comf	(GetNumber@temp+1)& (0+255),f,b
 21790  005C28  6D7F               	negf	GetNumber@temp& (0+255),b
 21791  005C2A  0E00               	movlw	0
 21792  005C2C  2380               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 21793  005C2E  2381               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 21794  005C30  2382               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 21795  005C32  D000               	goto	l11158
 21796  005C34                     l11158:
 21797                           
 21798                           ; BSR set to: 0
 21799                           ;MISC.c: 605: }
 21800                           ;MISC.c: 606: *result = temp;
 21801  005C34  C072  FFD9         	movff	GetNumber@result,fsr2l
 21802  005C38  C073  FFDA         	movff	GetNumber@result+1,fsr2h
 21803  005C3C  C07F  FFDE         	movff	GetNumber@temp,postinc2
 21804  005C40  C080  FFDE         	movff	GetNumber@temp+1,postinc2
 21805  005C44  C081  FFDE         	movff	GetNumber@temp+2,postinc2
 21806  005C48  C082  FFDE         	movff	GetNumber@temp+3,postinc2
 21807                           
 21808                           ; BSR set to: 0
 21809                           ;MISC.c: 607: return 0;
 21810  005C4C  0E00               	movlw	0
 21811  005C4E  0012               	return	
 21812                           
 21813                           ; BSR set to: 0
 21814                           
 21815                           ; BSR set to: 0
 21816  005C50  0012               	return		;funcret
 21817  005C52                     __end_of_GetNumber:
 21818                           	opt stack 0
 21819                           tblptru	equ	0xFF8
 21820                           tblptrh	equ	0xFF7
 21821                           tblptrl	equ	0xFF6
 21822                           tablat	equ	0xFF5
 21823                           prodh	equ	0xFF4
 21824                           prodl	equ	0xFF3
 21825                           intcon	equ	0xFF2
 21826                           indf0	equ	0xFEF
 21827                           postinc0	equ	0xFEE
 21828                           plusw0	equ	0xFEB
 21829                           fsr0h	equ	0xFEA
 21830                           fsr0l	equ	0xFE9
 21831                           wreg	equ	0xFE8
 21832                           indf1	equ	0xFE7
 21833                           postdec1	equ	0xFE5
 21834                           fsr1h	equ	0xFE2
 21835                           fsr1l	equ	0xFE1
 21836                           indf2	equ	0xFDF
 21837                           postinc2	equ	0xFDE
 21838                           postdec2	equ	0xFDD
 21839                           plusw2	equ	0xFDB
 21840                           fsr2h	equ	0xFDA
 21841                           fsr2l	equ	0xFD9
 21842                           status	equ	0xFD8
 21843                           
 21844 ;; *************** function ___lmul *****************
 21845 ;; Defined at:
 21846 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 21847 ;; Parameters:    Size  Location     Type
 21848 ;;  multiplier      4    3[BANK0 ] unsigned long 
 21849 ;;  multiplicand    4    7[BANK0 ] unsigned long 
 21850 ;; Auto vars:     Size  Location     Type
 21851 ;;  product         4   11[BANK0 ] unsigned long 
 21852 ;; Return value:  Size  Location     Type
 21853 ;;                  4    3[BANK0 ] unsigned long 
 21854 ;; Registers used:
 21855 ;;		wreg, status,2, status,0
 21856 ;; Tracked objects:
 21857 ;;		On entry : 0/0
 21858 ;;		On exit  : 0/0
 21859 ;;		Unchanged: 0/0
 21860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21861 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21862 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21864 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21865 ;;Total ram usage:       12 bytes
 21866 ;; Hardware stack levels used:    1
 21867 ;; Hardware stack levels required when called:    6
 21868 ;; This function calls:
 21869 ;;		Nothing
 21870 ;; This function is called by:
 21871 ;;		_GetNumber
 21872 ;;		_GetNumberUnsigned
 21873 ;; This function uses a non-reentrant model
 21874 ;;
 21875                           
 21876                           	psect	text31
 21877  009A08                     __ptext31:
 21878                           	opt stack 0
 21879  009A08                     ___lmul:
 21880                           	opt stack 22
 21881                           
 21882                           ; BSR set to: 0
 21883                           ;incstack = 0
 21884  009A08  0E00               	movlw	0
 21885  009A0A  0100               	movlb	0	; () banked
 21886  009A0C  6F6B               	movwf	___lmul@product& (0+255),b
 21887  009A0E  0E00               	movlw	0
 21888  009A10  6F6C               	movwf	(___lmul@product+1)& (0+255),b
 21889  009A12  0E00               	movlw	0
 21890  009A14  6F6D               	movwf	(___lmul@product+2)& (0+255),b
 21891  009A16  0E00               	movlw	0
 21892  009A18  6F6E               	movwf	(___lmul@product+3)& (0+255),b
 21893  009A1A  D000               	goto	l10626
 21894  009A1C                     l10626:
 21895                           
 21896                           ; BSR set to: 0
 21897  009A1C  0100               	movlb	0	; () banked
 21898  009A1E  A163               	btfss	___lmul@multiplier& (0+255),0,b
 21899  009A20  D011               	goto	l10630
 21900                           
 21901                           ; BSR set to: 0
 21902  009A22  0100               	movlb	0	; () banked
 21903  009A24  5167               	movf	___lmul@multiplicand& (0+255),w,b
 21904  009A26  0100               	movlb	0	; () banked
 21905  009A28  276B               	addwf	___lmul@product& (0+255),f,b
 21906  009A2A  0100               	movlb	0	; () banked
 21907  009A2C  5168               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 21908  009A2E  0100               	movlb	0	; () banked
 21909  009A30  236C               	addwfc	(___lmul@product+1)& (0+255),f,b
 21910  009A32  0100               	movlb	0	; () banked
 21911  009A34  5169               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 21912  009A36  0100               	movlb	0	; () banked
 21913  009A38  236D               	addwfc	(___lmul@product+2)& (0+255),f,b
 21914  009A3A  0100               	movlb	0	; () banked
 21915  009A3C  516A               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 21916  009A3E  0100               	movlb	0	; () banked
 21917  009A40  236E               	addwfc	(___lmul@product+3)& (0+255),f,b
 21918  009A42  D000               	goto	l10630
 21919  009A44                     l10630:
 21920                           
 21921                           ; BSR set to: 0
 21922  009A44  0100               	movlb	0	; () banked
 21923  009A46  90D8               	bcf	status,0,c
 21924  009A48  3767               	rlcf	___lmul@multiplicand& (0+255),f,b
 21925  009A4A  3768               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 21926  009A4C  3769               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 21927  009A4E  376A               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 21928                           
 21929                           ; BSR set to: 0
 21930  009A50  0100               	movlb	0	; () banked
 21931  009A52  90D8               	bcf	status,0,c
 21932  009A54  3366               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 21933  009A56  3365               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 21934  009A58  3364               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 21935  009A5A  3363               	rrcf	___lmul@multiplier& (0+255),f,b
 21936  009A5C  0100               	movlb	0	; () banked
 21937  009A5E  5163               	movf	___lmul@multiplier& (0+255),w,b
 21938  009A60  0100               	movlb	0	; () banked
 21939  009A62  1164               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 21940  009A64  0100               	movlb	0	; () banked
 21941  009A66  1165               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 21942  009A68  0100               	movlb	0	; () banked
 21943  009A6A  1166               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 21944  009A6C  A4D8               	btfss	status,2,c
 21945  009A6E  D7D6               	goto	l10626
 21946                           
 21947                           ; BSR set to: 0
 21948  009A70  C06B  F063         	movff	___lmul@product,?___lmul
 21949  009A74  C06C  F064         	movff	___lmul@product+1,?___lmul+1
 21950  009A78  C06D  F065         	movff	___lmul@product+2,?___lmul+2
 21951  009A7C  C06E  F066         	movff	___lmul@product+3,?___lmul+3
 21952                           
 21953                           ; BSR set to: 0
 21954  009A80  0012               	return		;funcret
 21955  009A82                     __end_of___lmul:
 21956                           	opt stack 0
 21957                           tblptru	equ	0xFF8
 21958                           tblptrh	equ	0xFF7
 21959                           tblptrl	equ	0xFF6
 21960                           tablat	equ	0xFF5
 21961                           prodh	equ	0xFF4
 21962                           prodl	equ	0xFF3
 21963                           intcon	equ	0xFF2
 21964                           indf0	equ	0xFEF
 21965                           postinc0	equ	0xFEE
 21966                           plusw0	equ	0xFEB
 21967                           fsr0h	equ	0xFEA
 21968                           fsr0l	equ	0xFE9
 21969                           wreg	equ	0xFE8
 21970                           indf1	equ	0xFE7
 21971                           postdec1	equ	0xFE5
 21972                           fsr1h	equ	0xFE2
 21973                           fsr1l	equ	0xFE1
 21974                           indf2	equ	0xFDF
 21975                           postinc2	equ	0xFDE
 21976                           postdec2	equ	0xFDD
 21977                           plusw2	equ	0xFDB
 21978                           fsr2h	equ	0xFDA
 21979                           fsr2l	equ	0xFD9
 21980                           status	equ	0xFD8
 21981                           
 21982 ;; *************** function _IsLetter *****************
 21983 ;; Defined at:
 21984 ;;		line 99 in file "MISC.c"
 21985 ;; Parameters:    Size  Location     Type
 21986 ;;  data            1    wreg     unsigned char 
 21987 ;; Auto vars:     Size  Location     Type
 21988 ;;  data            1    3[BANK0 ] unsigned char 
 21989 ;; Return value:  Size  Location     Type
 21990 ;;                  1    wreg      unsigned char 
 21991 ;; Registers used:
 21992 ;;		wreg, status,2, status,0
 21993 ;; Tracked objects:
 21994 ;;		On entry : 0/0
 21995 ;;		On exit  : 0/0
 21996 ;;		Unchanged: 0/0
 21997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21999 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22001 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22002 ;;Total ram usage:        1 bytes
 22003 ;; Hardware stack levels used:    1
 22004 ;; Hardware stack levels required when called:    6
 22005 ;; This function calls:
 22006 ;;		Nothing
 22007 ;; This function is called by:
 22008 ;;		_GetNumber
 22009 ;;		_GetNumberUnsigned
 22010 ;; This function uses a non-reentrant model
 22011 ;;
 22012                           
 22013                           	psect	text32
 22014  00A366                     __ptext32:
 22015                           	opt stack 0
 22016  00A366                     _IsLetter:
 22017                           	opt stack 22
 22018                           
 22019                           ; BSR set to: 0
 22020                           ;incstack = 0
 22021                           ;IsLetter@data stored from wreg
 22022  00A366  0100               	movlb	0	; () banked
 22023  00A368  6F63               	movwf	IsLetter@data& (0+255),b
 22024                           
 22025                           ; BSR set to: 0
 22026                           ;MISC.c: 101: if(data >= 65 && data <= 90)
 22027  00A36A  0E40               	movlw	64
 22028  00A36C  0100               	movlb	0	; () banked
 22029  00A36E  6563               	cpfsgt	IsLetter@data& (0+255),b
 22030  00A370  D006               	goto	l10106
 22031                           
 22032                           ; BSR set to: 0
 22033  00A372  0E5B               	movlw	91
 22034  00A374  0100               	movlb	0	; () banked
 22035  00A376  6163               	cpfslt	IsLetter@data& (0+255),b
 22036  00A378  D002               	goto	l10106
 22037                           
 22038                           ; BSR set to: 0
 22039                           ;MISC.c: 102: {
 22040                           ;MISC.c: 103: return 1;
 22041  00A37A  0E01               	movlw	1
 22042                           
 22043                           ; BSR set to: 0
 22044  00A37C  0012               	return	
 22045  00A37E                     l10106:
 22046                           
 22047                           ; BSR set to: 0
 22048                           ;MISC.c: 104: }
 22049                           ;MISC.c: 105: return 0;
 22050  00A37E  0E00               	movlw	0
 22051  00A380  0012               	return	
 22052                           
 22053                           ; BSR set to: 0
 22054                           
 22055                           ; BSR set to: 0
 22056  00A382  0012               	return		;funcret
 22057  00A384                     __end_of_IsLetter:
 22058                           	opt stack 0
 22059                           tblptru	equ	0xFF8
 22060                           tblptrh	equ	0xFF7
 22061                           tblptrl	equ	0xFF6
 22062                           tablat	equ	0xFF5
 22063                           prodh	equ	0xFF4
 22064                           prodl	equ	0xFF3
 22065                           intcon	equ	0xFF2
 22066                           indf0	equ	0xFEF
 22067                           postinc0	equ	0xFEE
 22068                           plusw0	equ	0xFEB
 22069                           fsr0h	equ	0xFEA
 22070                           fsr0l	equ	0xFE9
 22071                           wreg	equ	0xFE8
 22072                           indf1	equ	0xFE7
 22073                           postdec1	equ	0xFE5
 22074                           fsr1h	equ	0xFE2
 22075                           fsr1l	equ	0xFE1
 22076                           indf2	equ	0xFDF
 22077                           postinc2	equ	0xFDE
 22078                           postdec2	equ	0xFDD
 22079                           plusw2	equ	0xFDB
 22080                           fsr2h	equ	0xFDA
 22081                           fsr2l	equ	0xFD9
 22082                           status	equ	0xFD8
 22083                           
 22084 ;; *************** function _EncodeNEC *****************
 22085 ;; Defined at:
 22086 ;;		line 522 in file "IR.c"
 22087 ;; Parameters:    Size  Location     Type
 22088 ;;  address         1    wreg     unsigned char 
 22089 ;;  command         1    7[BANK0 ] unsigned char 
 22090 ;; Auto vars:     Size  Location     Type
 22091 ;;  address         1   47[BANK0 ] unsigned char 
 22092 ;;  temp4           4   43[BANK0 ] unsigned long 
 22093 ;;  temp3           4   39[BANK0 ] unsigned long 
 22094 ;;  temp2           4   35[BANK0 ] unsigned long 
 22095 ;;  temp1           4   31[BANK0 ] unsigned long 
 22096 ;; Return value:  Size  Location     Type
 22097 ;;                  4    7[BANK0 ] unsigned long 
 22098 ;; Registers used:
 22099 ;;		wreg, status,2, status,0, cstack
 22100 ;; Tracked objects:
 22101 ;;		On entry : 0/0
 22102 ;;		On exit  : 0/0
 22103 ;;		Unchanged: 0/0
 22104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22105 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22106 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22107 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22108 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22109 ;;Total ram usage:       41 bytes
 22110 ;; Hardware stack levels used:    1
 22111 ;; Hardware stack levels required when called:    7
 22112 ;; This function calls:
 22113 ;;		_Reverse_Byte
 22114 ;; This function is called by:
 22115 ;;		_UseBluetooth
 22116 ;; This function uses a non-reentrant model
 22117 ;;
 22118                           
 22119                           	psect	text33
 22120  007EF4                     __ptext33:
 22121                           	opt stack 0
 22122  007EF4                     _EncodeNEC:
 22123                           	opt stack 22
 22124                           
 22125                           ; BSR set to: 0
 22126                           ;incstack = 0
 22127                           ;EncodeNEC@address stored from wreg
 22128  007EF4  0100               	movlb	0	; () banked
 22129  007EF6  6F8F               	movwf	EncodeNEC@address& (0+255),b
 22130                           
 22131                           ; BSR set to: 0
 22132                           ;IR.c: 524: unsigned long temp1,
 22133                           ;IR.c: 525: temp2,
 22134                           ;IR.c: 526: temp3,
 22135                           ;IR.c: 527: temp4;
 22136                           ;IR.c: 535: temp1 = (unsigned long) Reverse_Byte(address);
 22137  007EF8  0100               	movlb	0	; () banked
 22138  007EFA  518F               	movf	EncodeNEC@address& (0+255),w,b
 22139  007EFC  ECCE  F048         	call	_Reverse_Byte
 22140  007F00  0100               	movlb	0	; () banked
 22141  007F02  6F6B               	movwf	??_EncodeNEC& (0+255),b
 22142  007F04  0100               	movlb	0	; () banked
 22143  007F06  516B               	movf	??_EncodeNEC& (0+255),w,b
 22144  007F08  0100               	movlb	0	; () banked
 22145  007F0A  6F7F               	movwf	EncodeNEC@temp1& (0+255),b
 22146  007F0C  6B80               	clrf	(EncodeNEC@temp1+1)& (0+255),b
 22147  007F0E  6B81               	clrf	(EncodeNEC@temp1+2)& (0+255),b
 22148  007F10  6B82               	clrf	(EncodeNEC@temp1+3)& (0+255),b
 22149                           
 22150                           ;IR.c: 536: temp2 = (unsigned long) Reverse_Byte(~address);
 22151  007F12  0100               	movlb	0	; () banked
 22152  007F14  518F               	movf	EncodeNEC@address& (0+255),w,b
 22153  007F16  0AFF               	xorlw	255
 22154  007F18  ECCE  F048         	call	_Reverse_Byte
 22155  007F1C  0100               	movlb	0	; () banked
 22156  007F1E  6F6B               	movwf	??_EncodeNEC& (0+255),b
 22157  007F20  0100               	movlb	0	; () banked
 22158  007F22  516B               	movf	??_EncodeNEC& (0+255),w,b
 22159  007F24  0100               	movlb	0	; () banked
 22160  007F26  6F83               	movwf	EncodeNEC@temp2& (0+255),b
 22161  007F28  6B84               	clrf	(EncodeNEC@temp2+1)& (0+255),b
 22162  007F2A  6B85               	clrf	(EncodeNEC@temp2+2)& (0+255),b
 22163  007F2C  6B86               	clrf	(EncodeNEC@temp2+3)& (0+255),b
 22164                           
 22165                           ;IR.c: 537: temp3 = (unsigned long) Reverse_Byte(command);
 22166  007F2E  0100               	movlb	0	; () banked
 22167  007F30  5167               	movf	EncodeNEC@command& (0+255),w,b
 22168  007F32  ECCE  F048         	call	_Reverse_Byte
 22169  007F36  0100               	movlb	0	; () banked
 22170  007F38  6F6B               	movwf	??_EncodeNEC& (0+255),b
 22171  007F3A  0100               	movlb	0	; () banked
 22172  007F3C  516B               	movf	??_EncodeNEC& (0+255),w,b
 22173  007F3E  0100               	movlb	0	; () banked
 22174  007F40  6F87               	movwf	EncodeNEC@temp3& (0+255),b
 22175  007F42  6B88               	clrf	(EncodeNEC@temp3+1)& (0+255),b
 22176  007F44  6B89               	clrf	(EncodeNEC@temp3+2)& (0+255),b
 22177  007F46  6B8A               	clrf	(EncodeNEC@temp3+3)& (0+255),b
 22178                           
 22179                           ;IR.c: 538: temp4 = (unsigned long) Reverse_Byte(~command);
 22180  007F48  0100               	movlb	0	; () banked
 22181  007F4A  5167               	movf	EncodeNEC@command& (0+255),w,b
 22182  007F4C  0AFF               	xorlw	255
 22183  007F4E  ECCE  F048         	call	_Reverse_Byte
 22184  007F52  0100               	movlb	0	; () banked
 22185  007F54  6F6B               	movwf	??_EncodeNEC& (0+255),b
 22186  007F56  0100               	movlb	0	; () banked
 22187  007F58  516B               	movf	??_EncodeNEC& (0+255),w,b
 22188  007F5A  0100               	movlb	0	; () banked
 22189  007F5C  6F8B               	movwf	EncodeNEC@temp4& (0+255),b
 22190  007F5E  6B8C               	clrf	(EncodeNEC@temp4+1)& (0+255),b
 22191  007F60  6B8D               	clrf	(EncodeNEC@temp4+2)& (0+255),b
 22192  007F62  6B8E               	clrf	(EncodeNEC@temp4+3)& (0+255),b
 22193                           
 22194                           ; BSR set to: 0
 22195                           ;IR.c: 540: return ((temp1 << 24) + (temp2 << 16) + (temp3 << 8) + temp4);
 22196  007F64  C087  F06C         	movff	EncodeNEC@temp3,??_EncodeNEC+1
 22197  007F68  C088  F06D         	movff	EncodeNEC@temp3+1,??_EncodeNEC+2
 22198  007F6C  C089  F06E         	movff	EncodeNEC@temp3+2,??_EncodeNEC+3
 22199  007F70  0100               	movlb	0	; () banked
 22200  007F72  6B6B               	clrf	??_EncodeNEC& (0+255),b
 22201  007F74  C083  F06F         	movff	EncodeNEC@temp2,??_EncodeNEC+4
 22202  007F78  C084  F070         	movff	EncodeNEC@temp2+1,??_EncodeNEC+5
 22203  007F7C  C085  F071         	movff	EncodeNEC@temp2+2,??_EncodeNEC+6
 22204  007F80  C086  F072         	movff	EncodeNEC@temp2+3,??_EncodeNEC+7
 22205  007F84  C070  F072         	movff	??_EncodeNEC+5,??_EncodeNEC+7
 22206  007F88  C06F  F071         	movff	??_EncodeNEC+4,??_EncodeNEC+6
 22207  007F8C  0100               	movlb	0	; () banked
 22208  007F8E  6B70               	clrf	(??_EncodeNEC+5)& (0+255),b
 22209  007F90  6B6F               	clrf	(??_EncodeNEC+4)& (0+255),b
 22210  007F92  C07F  F073         	movff	EncodeNEC@temp1,??_EncodeNEC+8
 22211  007F96  C080  F074         	movff	EncodeNEC@temp1+1,??_EncodeNEC+9
 22212  007F9A  C081  F075         	movff	EncodeNEC@temp1+2,??_EncodeNEC+10
 22213  007F9E  C082  F076         	movff	EncodeNEC@temp1+3,??_EncodeNEC+11
 22214  007FA2  C073  F076         	movff	??_EncodeNEC+8,??_EncodeNEC+11
 22215  007FA6  0100               	movlb	0	; () banked
 22216  007FA8  6B75               	clrf	(??_EncodeNEC+10)& (0+255),b
 22217  007FAA  6B74               	clrf	(??_EncodeNEC+9)& (0+255),b
 22218  007FAC  6B73               	clrf	(??_EncodeNEC+8)& (0+255),b
 22219  007FAE  0100               	movlb	0	; () banked
 22220  007FB0  516F               	movf	(??_EncodeNEC+4)& (0+255),w,b
 22221  007FB2  0100               	movlb	0	; () banked
 22222  007FB4  2573               	addwf	(??_EncodeNEC+8)& (0+255),w,b
 22223  007FB6  0100               	movlb	0	; () banked
 22224  007FB8  6F77               	movwf	(??_EncodeNEC+12)& (0+255),b
 22225  007FBA  0100               	movlb	0	; () banked
 22226  007FBC  5170               	movf	(??_EncodeNEC+5)& (0+255),w,b
 22227  007FBE  0100               	movlb	0	; () banked
 22228  007FC0  2174               	addwfc	(??_EncodeNEC+9)& (0+255),w,b
 22229  007FC2  0100               	movlb	0	; () banked
 22230  007FC4  6F78               	movwf	(??_EncodeNEC+13)& (0+255),b
 22231  007FC6  0100               	movlb	0	; () banked
 22232  007FC8  5171               	movf	(??_EncodeNEC+6)& (0+255),w,b
 22233  007FCA  0100               	movlb	0	; () banked
 22234  007FCC  2175               	addwfc	(??_EncodeNEC+10)& (0+255),w,b
 22235  007FCE  0100               	movlb	0	; () banked
 22236  007FD0  6F79               	movwf	(??_EncodeNEC+14)& (0+255),b
 22237  007FD2  0100               	movlb	0	; () banked
 22238  007FD4  5172               	movf	(??_EncodeNEC+7)& (0+255),w,b
 22239  007FD6  0100               	movlb	0	; () banked
 22240  007FD8  2176               	addwfc	(??_EncodeNEC+11)& (0+255),w,b
 22241  007FDA  0100               	movlb	0	; () banked
 22242  007FDC  6F7A               	movwf	(??_EncodeNEC+15)& (0+255),b
 22243  007FDE  0100               	movlb	0	; () banked
 22244  007FE0  516B               	movf	??_EncodeNEC& (0+255),w,b
 22245  007FE2  0100               	movlb	0	; () banked
 22246  007FE4  2577               	addwf	(??_EncodeNEC+12)& (0+255),w,b
 22247  007FE6  0100               	movlb	0	; () banked
 22248  007FE8  6F7B               	movwf	(??_EncodeNEC+16)& (0+255),b
 22249  007FEA  0100               	movlb	0	; () banked
 22250  007FEC  516C               	movf	(??_EncodeNEC+1)& (0+255),w,b
 22251  007FEE  0100               	movlb	0	; () banked
 22252  007FF0  2178               	addwfc	(??_EncodeNEC+13)& (0+255),w,b
 22253  007FF2  0100               	movlb	0	; () banked
 22254  007FF4  6F7C               	movwf	(??_EncodeNEC+17)& (0+255),b
 22255  007FF6  0100               	movlb	0	; () banked
 22256  007FF8  516D               	movf	(??_EncodeNEC+2)& (0+255),w,b
 22257  007FFA  0100               	movlb	0	; () banked
 22258  007FFC  2179               	addwfc	(??_EncodeNEC+14)& (0+255),w,b
 22259  007FFE  0100               	movlb	0	; () banked
 22260  008000  6F7D               	movwf	(??_EncodeNEC+18)& (0+255),b
 22261  008002  0100               	movlb	0	; () banked
 22262  008004  516E               	movf	(??_EncodeNEC+3)& (0+255),w,b
 22263  008006  0100               	movlb	0	; () banked
 22264  008008  217A               	addwfc	(??_EncodeNEC+15)& (0+255),w,b
 22265  00800A  0100               	movlb	0	; () banked
 22266  00800C  6F7E               	movwf	(??_EncodeNEC+19)& (0+255),b
 22267  00800E  0100               	movlb	0	; () banked
 22268  008010  518B               	movf	EncodeNEC@temp4& (0+255),w,b
 22269  008012  0100               	movlb	0	; () banked
 22270  008014  257B               	addwf	(??_EncodeNEC+16)& (0+255),w,b
 22271  008016  0100               	movlb	0	; () banked
 22272  008018  6F67               	movwf	?_EncodeNEC& (0+255),b
 22273  00801A  0100               	movlb	0	; () banked
 22274  00801C  518C               	movf	(EncodeNEC@temp4+1)& (0+255),w,b
 22275  00801E  0100               	movlb	0	; () banked
 22276  008020  217C               	addwfc	(??_EncodeNEC+17)& (0+255),w,b
 22277  008022  0100               	movlb	0	; () banked
 22278  008024  6F68               	movwf	(?_EncodeNEC+1)& (0+255),b
 22279  008026  0100               	movlb	0	; () banked
 22280  008028  518D               	movf	(EncodeNEC@temp4+2)& (0+255),w,b
 22281  00802A  0100               	movlb	0	; () banked
 22282  00802C  217D               	addwfc	(??_EncodeNEC+18)& (0+255),w,b
 22283  00802E  0100               	movlb	0	; () banked
 22284  008030  6F69               	movwf	(?_EncodeNEC+2)& (0+255),b
 22285  008032  0100               	movlb	0	; () banked
 22286  008034  518E               	movf	(EncodeNEC@temp4+3)& (0+255),w,b
 22287  008036  0100               	movlb	0	; () banked
 22288  008038  217E               	addwfc	(??_EncodeNEC+19)& (0+255),w,b
 22289  00803A  0100               	movlb	0	; () banked
 22290  00803C  6F6A               	movwf	(?_EncodeNEC+3)& (0+255),b
 22291  00803E  0012               	return	
 22292                           
 22293                           ; BSR set to: 0
 22294                           
 22295                           ; BSR set to: 0
 22296  008040  0012               	return		;funcret
 22297  008042                     __end_of_EncodeNEC:
 22298                           	opt stack 0
 22299                           tblptru	equ	0xFF8
 22300                           tblptrh	equ	0xFF7
 22301                           tblptrl	equ	0xFF6
 22302                           tablat	equ	0xFF5
 22303                           prodh	equ	0xFF4
 22304                           prodl	equ	0xFF3
 22305                           intcon	equ	0xFF2
 22306                           indf0	equ	0xFEF
 22307                           postinc0	equ	0xFEE
 22308                           plusw0	equ	0xFEB
 22309                           fsr0h	equ	0xFEA
 22310                           fsr0l	equ	0xFE9
 22311                           wreg	equ	0xFE8
 22312                           indf1	equ	0xFE7
 22313                           postdec1	equ	0xFE5
 22314                           fsr1h	equ	0xFE2
 22315                           fsr1l	equ	0xFE1
 22316                           indf2	equ	0xFDF
 22317                           postinc2	equ	0xFDE
 22318                           postdec2	equ	0xFDD
 22319                           plusw2	equ	0xFDB
 22320                           fsr2h	equ	0xFDA
 22321                           fsr2l	equ	0xFD9
 22322                           status	equ	0xFD8
 22323                           
 22324 ;; *************** function _DecodeNEC *****************
 22325 ;; Defined at:
 22326 ;;		line 548 in file "IR.c"
 22327 ;; Parameters:    Size  Location     Type
 22328 ;;  Nec             4    7[BANK0 ] unsigned long 
 22329 ;;  address         2   11[BANK0 ] PTR unsigned char 
 22330 ;;		 -> UseBluetooth@NecAddress(1), IRaddress(1), 
 22331 ;;  command         2   13[BANK0 ] PTR unsigned char 
 22332 ;;		 -> UseBluetooth@NecCommand(1), IRcommand(1), 
 22333 ;; Auto vars:     Size  Location     Type
 22334 ;;  temp1           1   21[BANK0 ] unsigned char 
 22335 ;;  temp3           1   20[BANK0 ] unsigned char 
 22336 ;;  temp2           1   19[BANK0 ] unsigned char 
 22337 ;; Return value:  Size  Location     Type
 22338 ;;                  1    wreg      unsigned char 
 22339 ;; Registers used:
 22340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22341 ;; Tracked objects:
 22342 ;;		On entry : 0/0
 22343 ;;		On exit  : 0/0
 22344 ;;		Unchanged: 0/0
 22345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22346 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22347 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22348 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22349 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22350 ;;Total ram usage:       15 bytes
 22351 ;; Hardware stack levels used:    1
 22352 ;; Hardware stack levels required when called:    7
 22353 ;; This function calls:
 22354 ;;		_Reverse_Byte
 22355 ;; This function is called by:
 22356 ;;		_UseIRCode
 22357 ;;		_UseBluetooth
 22358 ;; This function uses a non-reentrant model
 22359 ;;
 22360                           
 22361                           	psect	text34
 22362  009306                     __ptext34:
 22363                           	opt stack 0
 22364  009306                     _DecodeNEC:
 22365                           	opt stack 22
 22366                           
 22367                           ;IR.c: 550: unsigned char temp1,
 22368                           ;IR.c: 551: temp2,
 22369                           ;IR.c: 552: temp3;
 22370                           ;IR.c: 554: temp1 = ~Reverse_Byte((unsigned char) (Nec & 0x00FF));
 22371                           
 22372                           ; BSR set to: 0
 22373                           ;incstack = 0
 22374  009306  0100               	movlb	0	; () banked
 22375  009308  5167               	movf	DecodeNEC@Nec& (0+255),w,b
 22376  00930A  ECCE  F048         	call	_Reverse_Byte
 22377  00930E  0AFF               	xorlw	255
 22378  009310  0100               	movlb	0	; () banked
 22379  009312  6F75               	movwf	DecodeNEC@temp1& (0+255),b
 22380                           
 22381                           ;IR.c: 555: temp2 = Reverse_Byte((unsigned char) ((Nec & 0xFF00)>> 8));
 22382  009314  0100               	movlb	0	; () banked
 22383  009316  5168               	movf	(DecodeNEC@Nec+1)& (0+255),w,b
 22384  009318  ECCE  F048         	call	_Reverse_Byte
 22385  00931C  0100               	movlb	0	; () banked
 22386  00931E  6F73               	movwf	DecodeNEC@temp2& (0+255),b
 22387                           
 22388                           ; BSR set to: 0
 22389                           ;IR.c: 556: if(temp1 != temp2)
 22390  009320  0100               	movlb	0	; () banked
 22391  009322  5173               	movf	DecodeNEC@temp2& (0+255),w,b
 22392  009324  0100               	movlb	0	; () banked
 22393  009326  1975               	xorwf	DecodeNEC@temp1& (0+255),w,b
 22394  009328  B4D8               	btfsc	status,2,c
 22395  00932A  D002               	goto	l11516
 22396                           
 22397                           ; BSR set to: 0
 22398                           ;IR.c: 557: {
 22399                           ;IR.c: 559: return 0;
 22400  00932C  0E00               	movlw	0
 22401                           
 22402                           ; BSR set to: 0
 22403  00932E  0012               	return	
 22404  009330                     l11516:
 22405                           
 22406                           ; BSR set to: 0
 22407                           ;IR.c: 560: }
 22408                           ;IR.c: 561: temp1 = ~Reverse_Byte((unsigned char) ((Nec & 0x00FF0000) >> 16));
 22409  009330  0100               	movlb	0	; () banked
 22410  009332  5169               	movf	(DecodeNEC@Nec+2)& (0+255),w,b
 22411  009334  ECCE  F048         	call	_Reverse_Byte
 22412  009338  0AFF               	xorlw	255
 22413  00933A  0100               	movlb	0	; () banked
 22414  00933C  6F75               	movwf	DecodeNEC@temp1& (0+255),b
 22415                           
 22416                           ;IR.c: 562: temp3 = Reverse_Byte((unsigned char) ((Nec & 0xFF000000) >> 24));
 22417  00933E  0E00               	movlw	0
 22418  009340  0100               	movlb	0	; () banked
 22419  009342  1567               	andwf	DecodeNEC@Nec& (0+255),w,b
 22420  009344  0100               	movlb	0	; () banked
 22421  009346  6F6F               	movwf	??_DecodeNEC& (0+255),b
 22422  009348  0E00               	movlw	0
 22423  00934A  0100               	movlb	0	; () banked
 22424  00934C  1568               	andwf	(DecodeNEC@Nec+1)& (0+255),w,b
 22425  00934E  0100               	movlb	0	; () banked
 22426  009350  6F70               	movwf	(??_DecodeNEC+1)& (0+255),b
 22427  009352  0E00               	movlw	0
 22428  009354  0100               	movlb	0	; () banked
 22429  009356  1569               	andwf	(DecodeNEC@Nec+2)& (0+255),w,b
 22430  009358  0100               	movlb	0	; () banked
 22431  00935A  6F71               	movwf	(??_DecodeNEC+2)& (0+255),b
 22432  00935C  0EFF               	movlw	255
 22433  00935E  0100               	movlb	0	; () banked
 22434  009360  156A               	andwf	(DecodeNEC@Nec+3)& (0+255),w,b
 22435  009362  0100               	movlb	0	; () banked
 22436  009364  6F72               	movwf	(??_DecodeNEC+3)& (0+255),b
 22437  009366  0E19               	movlw	25
 22438  009368  D006               	goto	u13010
 22439  00936A                     u13015:
 22440  00936A  0100               	movlb	0	; () banked
 22441  00936C  90D8               	bcf	status,0,c
 22442  00936E  3372               	rrcf	(??_DecodeNEC+3)& (0+255),f,b
 22443  009370  3371               	rrcf	(??_DecodeNEC+2)& (0+255),f,b
 22444  009372  3370               	rrcf	(??_DecodeNEC+1)& (0+255),f,b
 22445  009374  336F               	rrcf	??_DecodeNEC& (0+255),f,b
 22446  009376                     u13010:
 22447  009376  2EE8               	decfsz	wreg,f,c
 22448  009378  D7F8               	goto	u13015
 22449  00937A  0100               	movlb	0	; () banked
 22450  00937C  516F               	movf	??_DecodeNEC& (0+255),w,b
 22451  00937E  ECCE  F048         	call	_Reverse_Byte
 22452  009382  0100               	movlb	0	; () banked
 22453  009384  6F74               	movwf	DecodeNEC@temp3& (0+255),b
 22454                           
 22455                           ; BSR set to: 0
 22456                           ;IR.c: 563: if(temp1 != temp3)
 22457  009386  0100               	movlb	0	; () banked
 22458  009388  5174               	movf	DecodeNEC@temp3& (0+255),w,b
 22459  00938A  0100               	movlb	0	; () banked
 22460  00938C  1975               	xorwf	DecodeNEC@temp1& (0+255),w,b
 22461  00938E  B4D8               	btfsc	status,2,c
 22462  009390  D002               	goto	l11524
 22463                           
 22464                           ; BSR set to: 0
 22465                           ;IR.c: 564: {
 22466                           ;IR.c: 566: return 0;
 22467  009392  0E00               	movlw	0
 22468                           
 22469                           ; BSR set to: 0
 22470  009394  0012               	return	
 22471  009396                     l11524:
 22472                           
 22473                           ; BSR set to: 0
 22474                           ;IR.c: 567: }
 22475                           ;IR.c: 568: *command = temp2;
 22476  009396  C06D  FFD9         	movff	DecodeNEC@command,fsr2l
 22477  00939A  C06E  FFDA         	movff	DecodeNEC@command+1,fsr2h
 22478  00939E  C073  FFDF         	movff	DecodeNEC@temp2,indf2
 22479                           
 22480                           ;IR.c: 569: *address = temp3;
 22481  0093A2  C06B  FFD9         	movff	DecodeNEC@address,fsr2l
 22482  0093A6  C06C  FFDA         	movff	DecodeNEC@address+1,fsr2h
 22483  0093AA  C074  FFDF         	movff	DecodeNEC@temp3,indf2
 22484                           
 22485                           ; BSR set to: 0
 22486                           ;IR.c: 570: return 1;
 22487  0093AE  0E01               	movlw	1
 22488  0093B0  0012               	return	
 22489                           
 22490                           ; BSR set to: 0
 22491                           
 22492                           ; BSR set to: 0
 22493  0093B2  0012               	return		;funcret
 22494  0093B4                     __end_of_DecodeNEC:
 22495                           	opt stack 0
 22496                           tblptru	equ	0xFF8
 22497                           tblptrh	equ	0xFF7
 22498                           tblptrl	equ	0xFF6
 22499                           tablat	equ	0xFF5
 22500                           prodh	equ	0xFF4
 22501                           prodl	equ	0xFF3
 22502                           intcon	equ	0xFF2
 22503                           indf0	equ	0xFEF
 22504                           postinc0	equ	0xFEE
 22505                           plusw0	equ	0xFEB
 22506                           fsr0h	equ	0xFEA
 22507                           fsr0l	equ	0xFE9
 22508                           wreg	equ	0xFE8
 22509                           indf1	equ	0xFE7
 22510                           postdec1	equ	0xFE5
 22511                           fsr1h	equ	0xFE2
 22512                           fsr1l	equ	0xFE1
 22513                           indf2	equ	0xFDF
 22514                           postinc2	equ	0xFDE
 22515                           postdec2	equ	0xFDD
 22516                           plusw2	equ	0xFDB
 22517                           fsr2h	equ	0xFDA
 22518                           fsr2l	equ	0xFD9
 22519                           status	equ	0xFD8
 22520                           
 22521 ;; *************** function _Reverse_Byte *****************
 22522 ;; Defined at:
 22523 ;;		line 386 in file "MISC.c"
 22524 ;; Parameters:    Size  Location     Type
 22525 ;;  This            1    wreg     unsigned char 
 22526 ;; Auto vars:     Size  Location     Type
 22527 ;;  This            1    6[BANK0 ] unsigned char 
 22528 ;;  temp            1    5[BANK0 ] unsigned char 
 22529 ;; Return value:  Size  Location     Type
 22530 ;;                  1    wreg      unsigned char 
 22531 ;; Registers used:
 22532 ;;		wreg, status,2, status,0
 22533 ;; Tracked objects:
 22534 ;;		On entry : 0/0
 22535 ;;		On exit  : 0/0
 22536 ;;		Unchanged: 0/0
 22537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22539 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22540 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22541 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22542 ;;Total ram usage:        4 bytes
 22543 ;; Hardware stack levels used:    1
 22544 ;; Hardware stack levels required when called:    6
 22545 ;; This function calls:
 22546 ;;		Nothing
 22547 ;; This function is called by:
 22548 ;;		_EncodeNEC
 22549 ;;		_DecodeNEC
 22550 ;; This function uses a non-reentrant model
 22551 ;;
 22552                           
 22553                           	psect	text35
 22554  00919C                     __ptext35:
 22555                           	opt stack 0
 22556  00919C                     _Reverse_Byte:
 22557                           	opt stack 22
 22558                           
 22559                           ; BSR set to: 0
 22560                           ;incstack = 0
 22561                           ;Reverse_Byte@This stored from wreg
 22562  00919C  0100               	movlb	0	; () banked
 22563  00919E  6F66               	movwf	Reverse_Byte@This& (0+255),b
 22564                           
 22565                           ; BSR set to: 0
 22566                           ;MISC.c: 388: unsigned char temp=0;
 22567  0091A0  0E00               	movlw	0
 22568  0091A2  0100               	movlb	0	; () banked
 22569  0091A4  6F65               	movwf	Reverse_Byte@temp& (0+255),b
 22570                           
 22571                           ; BSR set to: 0
 22572                           ;MISC.c: 390: temp += (This & 0x01) << 7;
 22573  0091A6  C066  F063         	movff	Reverse_Byte@This,??_Reverse_Byte
 22574  0091AA  0E01               	movlw	1
 22575  0091AC  0100               	movlb	0	; () banked
 22576  0091AE  1763               	andwf	??_Reverse_Byte& (0+255),f,b
 22577  0091B0  0E00               	movlw	0
 22578  0091B2  B163               	btfsc	??_Reverse_Byte& (0+255),0,b
 22579  0091B4  0E80               	movlw	128
 22580  0091B6  6F63               	movwf	??_Reverse_Byte& (0+255),b
 22581  0091B8  0100               	movlb	0	; () banked
 22582  0091BA  5163               	movf	??_Reverse_Byte& (0+255),w,b
 22583  0091BC  0100               	movlb	0	; () banked
 22584  0091BE  2765               	addwf	Reverse_Byte@temp& (0+255),f,b
 22585                           
 22586                           ; BSR set to: 0
 22587                           ;MISC.c: 391: temp += (This & 0x02) << 5;
 22588  0091C0  C066  F063         	movff	Reverse_Byte@This,??_Reverse_Byte
 22589  0091C4  0E02               	movlw	2
 22590  0091C6  0100               	movlb	0	; () banked
 22591  0091C8  1763               	andwf	??_Reverse_Byte& (0+255),f,b
 22592  0091CA  0E05               	movlw	5
 22593  0091CC  0100               	movlb	0	; () banked
 22594  0091CE  6F64               	movwf	(??_Reverse_Byte+1)& (0+255),b
 22595  0091D0                     u10885:
 22596  0091D0  0100               	movlb	0	; () banked
 22597  0091D2  90D8               	bcf	status,0,c
 22598  0091D4  3763               	rlcf	??_Reverse_Byte& (0+255),f,b
 22599  0091D6  0100               	movlb	0	; () banked
 22600  0091D8  2F64               	decfsz	(??_Reverse_Byte+1)& (0+255),f,b
 22601  0091DA  D7FA               	goto	u10885
 22602  0091DC  0100               	movlb	0	; () banked
 22603  0091DE  5163               	movf	??_Reverse_Byte& (0+255),w,b
 22604  0091E0  0100               	movlb	0	; () banked
 22605  0091E2  2765               	addwf	Reverse_Byte@temp& (0+255),f,b
 22606                           
 22607                           ; BSR set to: 0
 22608                           ;MISC.c: 392: temp += (This & 0x04) << 3;
 22609  0091E4  C066  F063         	movff	Reverse_Byte@This,??_Reverse_Byte
 22610  0091E8  0E04               	movlw	4
 22611  0091EA  0100               	movlb	0	; () banked
 22612  0091EC  1763               	andwf	??_Reverse_Byte& (0+255),f,b
 22613  0091EE  0100               	movlb	0	; () banked
 22614  0091F0  90D8               	bcf	status,0,c
 22615  0091F2  3763               	rlcf	??_Reverse_Byte& (0+255),f,b
 22616  0091F4  0100               	movlb	0	; () banked
 22617  0091F6  90D8               	bcf	status,0,c
 22618  0091F8  3763               	rlcf	??_Reverse_Byte& (0+255),f,b
 22619  0091FA  0100               	movlb	0	; () banked
 22620  0091FC  90D8               	bcf	status,0,c
 22621  0091FE  3563               	rlcf	??_Reverse_Byte& (0+255),w,b
 22622  009200  0100               	movlb	0	; () banked
 22623  009202  2765               	addwf	Reverse_Byte@temp& (0+255),f,b
 22624                           
 22625                           ; BSR set to: 0
 22626                           ;MISC.c: 393: temp += (This & 0x08) << 1;
 22627  009204  C066  F063         	movff	Reverse_Byte@This,??_Reverse_Byte
 22628  009208  0E08               	movlw	8
 22629  00920A  0100               	movlb	0	; () banked
 22630  00920C  1763               	andwf	??_Reverse_Byte& (0+255),f,b
 22631  00920E  0100               	movlb	0	; () banked
 22632  009210  90D8               	bcf	status,0,c
 22633  009212  3563               	rlcf	??_Reverse_Byte& (0+255),w,b
 22634  009214  0100               	movlb	0	; () banked
 22635  009216  2765               	addwf	Reverse_Byte@temp& (0+255),f,b
 22636                           
 22637                           ; BSR set to: 0
 22638                           ;MISC.c: 394: temp += (This & 0x10) >> 1;
 22639  009218  0100               	movlb	0	; () banked
 22640  00921A  90D8               	bcf	status,0,c
 22641  00921C  3166               	rrcf	Reverse_Byte@This& (0+255),w,b
 22642  00921E  0B08               	andlw	8
 22643  009220  0100               	movlb	0	; () banked
 22644  009222  2765               	addwf	Reverse_Byte@temp& (0+255),f,b
 22645                           
 22646                           ; BSR set to: 0
 22647                           ;MISC.c: 395: temp += (This & 0x20) >> 3;
 22648  009224  0100               	movlb	0	; () banked
 22649  009226  3966               	swapf	Reverse_Byte@This& (0+255),w,b
 22650  009228  46E8               	rlncf	wreg,f,c
 22651  00922A  0B1F               	andlw	31
 22652  00922C  0B04               	andlw	4
 22653  00922E  0100               	movlb	0	; () banked
 22654  009230  2765               	addwf	Reverse_Byte@temp& (0+255),f,b
 22655                           
 22656                           ; BSR set to: 0
 22657                           ;MISC.c: 396: temp += (This & 0x40) >> 5;
 22658  009232  0100               	movlb	0	; () banked
 22659  009234  3966               	swapf	Reverse_Byte@This& (0+255),w,b
 22660  009236  42E8               	rrncf	wreg,f,c
 22661  009238  0B07               	andlw	7
 22662  00923A  0B02               	andlw	2
 22663  00923C  0100               	movlb	0	; () banked
 22664  00923E  2765               	addwf	Reverse_Byte@temp& (0+255),f,b
 22665                           
 22666                           ; BSR set to: 0
 22667                           ;MISC.c: 397: temp += (This & 0x80) >> 7;
 22668  009240  0100               	movlb	0	; () banked
 22669  009242  4566               	rlncf	Reverse_Byte@This& (0+255),w,b
 22670  009244  0B01               	andlw	1
 22671  009246  0100               	movlb	0	; () banked
 22672  009248  2765               	addwf	Reverse_Byte@temp& (0+255),f,b
 22673                           
 22674                           ; BSR set to: 0
 22675                           ;MISC.c: 399: return temp;
 22676  00924A  0100               	movlb	0	; () banked
 22677  00924C  5165               	movf	Reverse_Byte@temp& (0+255),w,b
 22678  00924E  0012               	return	
 22679                           
 22680                           ; BSR set to: 0
 22681                           
 22682                           ; BSR set to: 0
 22683  009250  0012               	return		;funcret
 22684  009252                     __end_of_Reverse_Byte:
 22685                           	opt stack 0
 22686                           tblptru	equ	0xFF8
 22687                           tblptrh	equ	0xFF7
 22688                           tblptrl	equ	0xFF6
 22689                           tablat	equ	0xFF5
 22690                           prodh	equ	0xFF4
 22691                           prodl	equ	0xFF3
 22692                           intcon	equ	0xFF2
 22693                           indf0	equ	0xFEF
 22694                           postinc0	equ	0xFEE
 22695                           plusw0	equ	0xFEB
 22696                           fsr0h	equ	0xFEA
 22697                           fsr0l	equ	0xFE9
 22698                           wreg	equ	0xFE8
 22699                           indf1	equ	0xFE7
 22700                           postdec1	equ	0xFE5
 22701                           fsr1h	equ	0xFE2
 22702                           fsr1l	equ	0xFE1
 22703                           indf2	equ	0xFDF
 22704                           postinc2	equ	0xFDE
 22705                           postdec2	equ	0xFDD
 22706                           plusw2	equ	0xFDB
 22707                           fsr2h	equ	0xFDA
 22708                           fsr2l	equ	0xFD9
 22709                           status	equ	0xFD8
 22710                           
 22711 ;; *************** function _Init_System *****************
 22712 ;; Defined at:
 22713 ;;		line 107 in file "user.c"
 22714 ;; Parameters:    Size  Location     Type
 22715 ;;		None
 22716 ;; Auto vars:     Size  Location     Type
 22717 ;;  buf            50  165[BANK1 ] unsigned char [50]
 22718 ;; Return value:  Size  Location     Type
 22719 ;;		None               void
 22720 ;; Registers used:
 22721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22722 ;; Tracked objects:
 22723 ;;		On entry : 0/0
 22724 ;;		On exit  : 0/0
 22725 ;;		Unchanged: 0/0
 22726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22728 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22730 ;;      Totals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22731 ;;Total ram usage:       50 bytes
 22732 ;; Hardware stack levels used:    1
 22733 ;; Hardware stack levels required when called:   13
 22734 ;; This function calls:
 22735 ;;		_BufferCopy
 22736 ;;		_EEPROMinitialized
 22737 ;;		_InitADC
 22738 ;;		_InitBluetooth
 22739 ;;		_InitIR
 22740 ;;		_InitTimers
 22741 ;;		_InitUART
 22742 ;;		_SetEEPROM2
 22743 ;;		_SetEEPROMdefault
 22744 ;;		_SyncEEPROMToGlobal
 22745 ;;		_SyncGlobalToEEPROM
 22746 ;;		_cleanBuffer
 22747 ;;		_sprintf
 22748 ;; This function is called by:
 22749 ;;		_main
 22750 ;; This function uses a non-reentrant model
 22751 ;;
 22752                           
 22753                           	psect	text36
 22754  007690                     __ptext36:
 22755                           	opt stack 0
 22756  007690                     _Init_System:
 22757                           	opt stack 17
 22758                           
 22759                           ;user.c: 109: unsigned char buf[50];
 22760                           ;user.c: 111: cleanBuffer(ReceivedString, 100);
 22761                           
 22762                           ; BSR set to: 0
 22763                           ;incstack = 0
 22764  007690  0E00               	movlw	low _ReceivedString
 22765  007692  0100               	movlb	0	; () banked
 22766  007694  6F63               	movwf	cleanBuffer@data& (0+255),b
 22767  007696  0E04               	movlw	high _ReceivedString
 22768  007698  0100               	movlb	0	; () banked
 22769  00769A  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 22770  00769C  0E00               	movlw	0
 22771  00769E  0100               	movlb	0	; () banked
 22772  0076A0  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
 22773  0076A2  0E64               	movlw	100
 22774  0076A4  6F65               	movwf	cleanBuffer@count& (0+255),b
 22775  0076A6  EC47  F04E         	call	_cleanBuffer	;wreg free
 22776                           
 22777                           ;user.c: 114: IPR1bits.RCIP = 0;
 22778  0076AA  9A9F               	bcf	3999,5,c	;volatile
 22779                           
 22780                           ;user.c: 115: INTCON2bits.RBIP = 1;
 22781  0076AC  80F1               	bsf	intcon2,0,c	;volatile
 22782                           
 22783                           ;user.c: 116: INTCON2bits.TMR0IP = 1;
 22784  0076AE  84F1               	bsf	intcon2,2,c	;volatile
 22785                           
 22786                           ;user.c: 117: IPR1bits.TMR2IP = 1;
 22787  0076B0  829F               	bsf	3999,1,c	;volatile
 22788                           
 22789                           ;user.c: 118: IPR1bits.TMR1IP = 0;
 22790  0076B2  909F               	bcf	3999,0,c	;volatile
 22791                           
 22792                           ;user.c: 119: IPR2bits.TMR3IP = 1;
 22793  0076B4  82A2               	bsf	4002,1,c	;volatile
 22794                           
 22795                           ;user.c: 121: cleanBuffer(BluetoothFirmware1,30);
 22796  0076B6  0EBC               	movlw	low _BluetoothFirmware1
 22797  0076B8  0100               	movlb	0	; () banked
 22798  0076BA  6F63               	movwf	cleanBuffer@data& (0+255),b
 22799  0076BC  0E03               	movlw	high _BluetoothFirmware1
 22800  0076BE  0100               	movlb	0	; () banked
 22801  0076C0  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 22802  0076C2  0E00               	movlw	0
 22803  0076C4  0100               	movlb	0	; () banked
 22804  0076C6  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
 22805  0076C8  0E1E               	movlw	30
 22806  0076CA  6F65               	movwf	cleanBuffer@count& (0+255),b
 22807  0076CC  EC47  F04E         	call	_cleanBuffer	;wreg free
 22808                           
 22809                           ;user.c: 122: cleanBuffer(BluetoothFirmware2,30);
 22810  0076D0  0E64               	movlw	low _BluetoothFirmware2
 22811  0076D2  0100               	movlb	0	; () banked
 22812  0076D4  6F63               	movwf	cleanBuffer@data& (0+255),b
 22813  0076D6  0E04               	movlw	high _BluetoothFirmware2
 22814  0076D8  0100               	movlb	0	; () banked
 22815  0076DA  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 22816  0076DC  0E00               	movlw	0
 22817  0076DE  0100               	movlb	0	; () banked
 22818  0076E0  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
 22819  0076E2  0E1E               	movlw	30
 22820  0076E4  6F65               	movwf	cleanBuffer@count& (0+255),b
 22821  0076E6  EC47  F04E         	call	_cleanBuffer	;wreg free
 22822                           
 22823                           ;user.c: 124: sprintf(buf,"System must be");
 22824  0076EA  0EA5               	movlw	low Init_System@buf
 22825  0076EC  0100               	movlb	0	; () banked
 22826  0076EE  6FB1               	movwf	sprintf@sp& (0+255),b
 22827  0076F0  0E01               	movlw	high Init_System@buf
 22828  0076F2  0100               	movlb	0	; () banked
 22829  0076F4  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 22830  0076F6  0E73               	movlw	low STR_2
 22831  0076F8  0100               	movlb	0	; () banked
 22832  0076FA  6FB3               	movwf	sprintf@f& (0+255),b
 22833  0076FC  0EFE               	movlw	high STR_2
 22834  0076FE  0100               	movlb	0	; () banked
 22835  007700  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 22836  007702  EC9C  F012         	call	_sprintf	;wreg free
 22837                           
 22838                           ;user.c: 125: BufferCopy(buf, BluetoothFirmware1, 30, 0);
 22839  007706  0EA5               	movlw	low Init_System@buf
 22840  007708  0100               	movlb	0	; () banked
 22841  00770A  6F6B               	movwf	BufferCopy@from& (0+255),b
 22842  00770C  0E01               	movlw	high Init_System@buf
 22843  00770E  0100               	movlb	0	; () banked
 22844  007710  6F6C               	movwf	(BufferCopy@from+1)& (0+255),b
 22845  007712  0EBC               	movlw	low _BluetoothFirmware1
 22846  007714  0100               	movlb	0	; () banked
 22847  007716  6F6D               	movwf	BufferCopy@to& (0+255),b
 22848  007718  0E03               	movlw	high _BluetoothFirmware1
 22849  00771A  0100               	movlb	0	; () banked
 22850  00771C  6F6E               	movwf	(BufferCopy@to+1)& (0+255),b
 22851  00771E  0E1E               	movlw	30
 22852  007720  0100               	movlb	0	; () banked
 22853  007722  6F6F               	movwf	BufferCopy@count& (0+255),b
 22854  007724  0E00               	movlw	0
 22855  007726  0100               	movlb	0	; () banked
 22856  007728  6F70               	movwf	BufferCopy@shift& (0+255),b
 22857  00772A  ECFE  F04B         	call	_BufferCopy	;wreg free
 22858                           
 22859                           ;user.c: 126: sprintf(buf,"RESET to read version!");
 22860  00772E  0EA5               	movlw	low Init_System@buf
 22861  007730  0100               	movlb	0	; () banked
 22862  007732  6FB1               	movwf	sprintf@sp& (0+255),b
 22863  007734  0E01               	movlw	high Init_System@buf
 22864  007736  0100               	movlb	0	; () banked
 22865  007738  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 22866  00773A  0E1F               	movlw	low STR_3
 22867  00773C  0100               	movlb	0	; () banked
 22868  00773E  6FB3               	movwf	sprintf@f& (0+255),b
 22869  007740  0EFC               	movlw	high STR_3
 22870  007742  0100               	movlb	0	; () banked
 22871  007744  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 22872  007746  EC9C  F012         	call	_sprintf	;wreg free
 22873                           
 22874                           ;user.c: 127: BufferCopy(buf, BluetoothFirmware2, 30, 0);
 22875  00774A  0EA5               	movlw	low Init_System@buf
 22876  00774C  0100               	movlb	0	; () banked
 22877  00774E  6F6B               	movwf	BufferCopy@from& (0+255),b
 22878  007750  0E01               	movlw	high Init_System@buf
 22879  007752  0100               	movlb	0	; () banked
 22880  007754  6F6C               	movwf	(BufferCopy@from+1)& (0+255),b
 22881  007756  0E64               	movlw	low _BluetoothFirmware2
 22882  007758  0100               	movlb	0	; () banked
 22883  00775A  6F6D               	movwf	BufferCopy@to& (0+255),b
 22884  00775C  0E04               	movlw	high _BluetoothFirmware2
 22885  00775E  0100               	movlb	0	; () banked
 22886  007760  6F6E               	movwf	(BufferCopy@to+1)& (0+255),b
 22887  007762  0E1E               	movlw	30
 22888  007764  0100               	movlb	0	; () banked
 22889  007766  6F6F               	movwf	BufferCopy@count& (0+255),b
 22890  007768  0E00               	movlw	0
 22891  00776A  0100               	movlb	0	; () banked
 22892  00776C  6F70               	movwf	BufferCopy@shift& (0+255),b
 22893  00776E  ECFE  F04B         	call	_BufferCopy	;wreg free
 22894                           
 22895                           ;user.c: 130: RCONbits.IPEN = 1;
 22896  007772  8ED0               	bsf	4048,7,c	;volatile
 22897                           
 22898                           ;user.c: 131: INTCONbits.PEIE = 1;
 22899  007774  8CF2               	bsf	intcon,6,c	;volatile
 22900                           
 22901                           ;user.c: 132: INTCONbits.GIE = 1;
 22902  007776  8EF2               	bsf	intcon,7,c	;volatile
 22903                           
 22904                           ;user.c: 134: SyncEEPROMToGlobal();
 22905  007778  ECED  F037         	call	_SyncEEPROMToGlobal	;wreg free
 22906                           
 22907                           ;user.c: 135: if(!EEPROMinitialized())
 22908  00777C  EC05  F052         	call	_EEPROMinitialized	;wreg free
 22909  007780  0900               	iorlw	0
 22910  007782  A4D8               	btfss	status,2,c
 22911  007784  D008               	goto	l11810
 22912                           
 22913                           ;user.c: 136: {
 22914                           ;user.c: 137: SetEEPROMdefault();
 22915  007786  EC02  F043         	call	_SetEEPROMdefault	;wreg free
 22916                           
 22917                           ;user.c: 138: Global1.EEPROMinitFlag = 59;
 22918  00778A  0E3B               	movlw	59
 22919  00778C  0103               	movlb	3	; () banked
 22920  00778E  6FF7               	movwf	(_Global1+29)& (0+255),b
 22921                           
 22922                           ; BSR set to: 3
 22923                           ;user.c: 139: SyncGlobalToEEPROM();
 22924  007790  ECCE  F04A         	call	_SyncGlobalToEEPROM	;wreg free
 22925  007794  D000               	goto	l11810
 22926  007796                     l11810:
 22927                           
 22928                           ;user.c: 140: }
 22929                           ;user.c: 142: if(Global2.SerialNumber == 0xFFFFFFFF)
 22930  007796  0103               	movlb	3	; () banked
 22931  007798  29B8               	incf	(_Global2+60)& (0+255),w,b
 22932  00779A  E12A               	bnz	l11818
 22933  00779C  0103               	movlb	3	; () banked
 22934  00779E  29B9               	incf	(_Global2+61)& (0+255),w,b
 22935  0077A0  E127               	bnz	l11818
 22936  0077A2  0103               	movlb	3	; () banked
 22937  0077A4  29BA               	incf	(_Global2+62)& (0+255),w,b
 22938  0077A6  E124               	bnz	l11818
 22939  0077A8  0103               	movlb	3	; () banked
 22940  0077AA  29BB               	incf	(_Global2+63)& (0+255),w,b
 22941  0077AC  A4D8               	btfss	status,2,c
 22942  0077AE  D020               	goto	l11818
 22943                           
 22944                           ; BSR set to: 3
 22945                           ;user.c: 143: {
 22946                           ;user.c: 145: Global2.SerialNumber = 0;
 22947  0077B0  0E00               	movlw	0
 22948  0077B2  0103               	movlb	3	; () banked
 22949  0077B4  6FB8               	movwf	(_Global2+60)& (0+255),b
 22950  0077B6  0E00               	movlw	0
 22951  0077B8  6FB9               	movwf	(_Global2+61)& (0+255),b
 22952  0077BA  0E00               	movlw	0
 22953  0077BC  6FBA               	movwf	(_Global2+62)& (0+255),b
 22954  0077BE  0E00               	movlw	0
 22955  0077C0  6FBB               	movwf	(_Global2+63)& (0+255),b
 22956                           
 22957                           ; BSR set to: 3
 22958                           ;user.c: 146: SetEEPROM2(Global2,0x00000002);
 22959  0077C2  EE23  F07C         	lfsr	2,_Global2
 22960  0077C6  EE00  F099         	lfsr	0,SetEEPROM2@Temp
 22961  0077CA  0E3F               	movlw	63
 22962  0077CC                     u13271:
 22963  0077CC  CFDB FFEB          	movff	plusw2,plusw0
 22964  0077D0  06E8               	decf	wreg,f,c
 22965  0077D2  E2FC               	bc	u13271
 22966  0077D4  0E02               	movlw	2
 22967  0077D6  0100               	movlb	0	; () banked
 22968  0077D8  6FD9               	movwf	SetEEPROM2@burn& (0+255),b
 22969  0077DA  0E00               	movlw	0
 22970  0077DC  6FDA               	movwf	(SetEEPROM2@burn+1)& (0+255),b
 22971  0077DE  0E00               	movlw	0
 22972  0077E0  6FDB               	movwf	(SetEEPROM2@burn+2)& (0+255),b
 22973  0077E2  0E00               	movlw	0
 22974  0077E4  6FDC               	movwf	(SetEEPROM2@burn+3)& (0+255),b
 22975  0077E6  EC1C  F044         	call	_SetEEPROM2	;wreg free
 22976                           
 22977                           ;user.c: 147: SyncEEPROMToGlobal();
 22978  0077EA  ECED  F037         	call	_SyncEEPROMToGlobal	;wreg free
 22979  0077EE  D000               	goto	l11818
 22980  0077F0                     l11818:
 22981                           
 22982                           ;user.c: 148: }
 22983                           ;user.c: 150: InitADC();
 22984  0077F0  ECE5  F051         	call	_InitADC	;wreg free
 22985                           
 22986                           ;user.c: 151: InitIR();
 22987  0077F4  EC1D  F04F         	call	_InitIR	;wreg free
 22988                           
 22989                           ;user.c: 153: InitUART(115200);
 22990  0077F8  0E00               	movlw	0
 22991  0077FA  0100               	movlb	0	; () banked
 22992  0077FC  6FB8               	movwf	InitUART@Baud& (0+255),b
 22993  0077FE  0EC2               	movlw	194
 22994  007800  6FB9               	movwf	(InitUART@Baud+1)& (0+255),b
 22995  007802  0E01               	movlw	1
 22996  007804  6FBA               	movwf	(InitUART@Baud+2)& (0+255),b
 22997  007806  0E00               	movlw	0
 22998  007808  6FBB               	movwf	(InitUART@Baud+3)& (0+255),b
 22999  00780A  EC91  F043         	call	_InitUART	;wreg free
 23000                           
 23001                           ;user.c: 154: InitBluetooth();
 23002  00780E  EC7D  F04D         	call	_InitBluetooth	;wreg free
 23003                           
 23004                           ;user.c: 156: InitTimers();
 23005  007812  ECFB  F051         	call	_InitTimers	;wreg free
 23006  007816  0012               	return		;funcret
 23007  007818                     __end_of_Init_System:
 23008                           	opt stack 0
 23009                           tblptru	equ	0xFF8
 23010                           tblptrh	equ	0xFF7
 23011                           tblptrl	equ	0xFF6
 23012                           tablat	equ	0xFF5
 23013                           prodh	equ	0xFF4
 23014                           prodl	equ	0xFF3
 23015                           intcon	equ	0xFF2
 23016                           intcon2	equ	0xFF1
 23017                           indf0	equ	0xFEF
 23018                           postinc0	equ	0xFEE
 23019                           plusw0	equ	0xFEB
 23020                           fsr0h	equ	0xFEA
 23021                           fsr0l	equ	0xFE9
 23022                           wreg	equ	0xFE8
 23023                           indf1	equ	0xFE7
 23024                           postdec1	equ	0xFE5
 23025                           fsr1h	equ	0xFE2
 23026                           fsr1l	equ	0xFE1
 23027                           indf2	equ	0xFDF
 23028                           postinc2	equ	0xFDE
 23029                           postdec2	equ	0xFDD
 23030                           plusw2	equ	0xFDB
 23031                           fsr2h	equ	0xFDA
 23032                           fsr2l	equ	0xFD9
 23033                           status	equ	0xFD8
 23034                           
 23035 ;; *************** function _SyncEEPROMToGlobal *****************
 23036 ;; Defined at:
 23037 ;;		line 346 in file "EEPROM.c"
 23038 ;; Parameters:    Size  Location     Type
 23039 ;;		None
 23040 ;; Auto vars:     Size  Location     Type
 23041 ;;  Temp2          64   52[BANK0 ] struct EEdata2
 23042 ;;  Temp1          30  117[BANK0 ] struct EEdata
 23043 ;;  j               1  148[BANK0 ] unsigned char 
 23044 ;;  i               1  147[BANK0 ] unsigned char 
 23045 ;;  k               1  116[BANK0 ] unsigned char 
 23046 ;; Return value:  Size  Location     Type
 23047 ;;		None               void
 23048 ;; Registers used:
 23049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23050 ;; Tracked objects:
 23051 ;;		On entry : 0/0
 23052 ;;		On exit  : 0/0
 23053 ;;		Unchanged: 0/0
 23054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23056 ;;      Locals:         0      97       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23057 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23058 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23059 ;;Total ram usage:      101 bytes
 23060 ;; Hardware stack levels used:    1
 23061 ;; Hardware stack levels required when called:    9
 23062 ;; This function calls:
 23063 ;;		_GetEEPROM1
 23064 ;;		_GetEEPROM2
 23065 ;; This function is called by:
 23066 ;;		_Init_System
 23067 ;;		_UseBluetooth
 23068 ;; This function uses a non-reentrant model
 23069 ;;
 23070                           
 23071                           	psect	text37
 23072  006FDA                     __ptext37:
 23073                           	opt stack 0
 23074  006FDA                     _SyncEEPROMToGlobal:
 23075                           	opt stack 20
 23076                           
 23077                           ;EEPROM.c: 348: unsigned char i,j,k;
 23078                           ;EEPROM.c: 349: GBLdata1 Temp1;
 23079                           ;EEPROM.c: 350: GBLdata2 Temp2;
 23080                           ;EEPROM.c: 352: GetEEPROM1(&Temp1);
 23081                           
 23082                           ;incstack = 0
 23083  006FDA  0ED5               	movlw	low SyncEEPROMToGlobal@Temp1
 23084  006FDC  0100               	movlb	0	; () banked
 23085  006FDE  6F88               	movwf	GetEEPROM1@Temp& (0+255),b
 23086  006FE0  0E00               	movlw	high SyncEEPROMToGlobal@Temp1
 23087  006FE2  0100               	movlb	0	; () banked
 23088  006FE4  6F89               	movwf	(GetEEPROM1@Temp+1)& (0+255),b
 23089  006FE6  EC0B  F046         	call	_GetEEPROM1	;wreg free
 23090                           
 23091                           ;EEPROM.c: 353: GetEEPROM2(&Temp2);
 23092  006FEA  0E94               	movlw	low SyncEEPROMToGlobal@Temp2
 23093  006FEC  0100               	movlb	0	; () banked
 23094  006FEE  6F88               	movwf	GetEEPROM2@Temp& (0+255),b
 23095  006FF0  0E00               	movlw	high SyncEEPROMToGlobal@Temp2
 23096  006FF2  0100               	movlb	0	; () banked
 23097  006FF4  6F89               	movwf	(GetEEPROM2@Temp+1)& (0+255),b
 23098  006FF6  EC48  F047         	call	_GetEEPROM2	;wreg free
 23099                           
 23100                           ;EEPROM.c: 355: Global1.BlueToothFlag = Temp1.BlueToothFlag;
 23101  006FFA  C0D5  F3DA         	movff	SyncEEPROMToGlobal@Temp1,_Global1
 23102                           
 23103                           ;EEPROM.c: 356: Global1.SWNECcode = Temp1.SWNECcode;
 23104  006FFE  C0D6  F3DB         	movff	SyncEEPROMToGlobal@Temp1+1,_Global1+1
 23105  007002  C0D7  F3DC         	movff	SyncEEPROMToGlobal@Temp1+2,_Global1+2
 23106  007006  C0D8  F3DD         	movff	SyncEEPROMToGlobal@Temp1+3,_Global1+3
 23107  00700A  C0D9  F3DE         	movff	SyncEEPROMToGlobal@Temp1+4,_Global1+4
 23108                           
 23109                           ;EEPROM.c: 357: Global1.EEPROMinitFlag = Temp1.EEPROMinitFlag;
 23110  00700E  C0F2  F3F7         	movff	SyncEEPROMToGlobal@Temp1+29,_Global1+29
 23111                           
 23112                           ;EEPROM.c: 358: for(i=0; i< 12; i++)
 23113  007012  0E00               	movlw	0
 23114  007014  0100               	movlb	0	; () banked
 23115  007016  6FF3               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 23116  007018  D04F               	goto	l10732
 23117                           
 23118                           ; BSR set to: 0
 23119                           
 23120                           ; BSR set to: 0
 23121  00701A  D052               	goto	l1114
 23122  00701C                     l10718:
 23123                           
 23124                           ; BSR set to: 0
 23125                           ;EEPROM.c: 359: {
 23126                           ;EEPROM.c: 360: for(j=0; j < 2; j++)
 23127  00701C  0E00               	movlw	0
 23128  00701E  0100               	movlb	0	; () banked
 23129  007020  6FF4               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 23130  007022                     l10720:
 23131                           
 23132                           ; BSR set to: 0
 23133  007022  0E01               	movlw	1
 23134  007024  0100               	movlb	0	; () banked
 23135  007026  65F4               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 23136  007028  D001               	goto	l10724
 23137                           
 23138                           ; BSR set to: 0
 23139  00702A  D044               	goto	l10730
 23140  00702C                     l10724:
 23141                           
 23142                           ; BSR set to: 0
 23143                           ;EEPROM.c: 361: {
 23144                           ;EEPROM.c: 362: Global1.RemoteButtonNEC[i][j] = Temp1.RemoteButtonNEC[i][j];
 23145  00702C  0100               	movlb	0	; () banked
 23146  00702E  51F3               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 23147  007030  0D02               	mullw	2
 23148  007032  0ED5               	movlw	low SyncEEPROMToGlobal@Temp1
 23149  007034  0100               	movlb	0	; () banked
 23150  007036  6F90               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 23151  007038  0E00               	movlw	high SyncEEPROMToGlobal@Temp1
 23152  00703A  0100               	movlb	0	; () banked
 23153  00703C  6F91               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 23154  00703E  50F3               	movf	prodl,w,c
 23155  007040  0100               	movlb	0	; () banked
 23156  007042  2790               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 23157  007044  50F4               	movf	prodh,w,c
 23158  007046  0100               	movlb	0	; () banked
 23159  007048  2391               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 23160  00704A  0100               	movlb	0	; () banked
 23161  00704C  51F4               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 23162  00704E  0D01               	mullw	1
 23163  007050  50F3               	movf	prodl,w,c
 23164  007052  0100               	movlb	0	; () banked
 23165  007054  2790               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 23166  007056  50F4               	movf	prodh,w,c
 23167  007058  0100               	movlb	0	; () banked
 23168  00705A  2391               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 23169  00705C  0E05               	movlw	5
 23170  00705E  0100               	movlb	0	; () banked
 23171  007060  2590               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 23172  007062  6ED9               	movwf	fsr2l,c
 23173  007064  0E00               	movlw	0
 23174  007066  0100               	movlb	0	; () banked
 23175  007068  2191               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 23176  00706A  6EDA               	movwf	fsr2h,c
 23177  00706C  0100               	movlb	0	; () banked
 23178  00706E  51F3               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 23179  007070  0D02               	mullw	2
 23180  007072  0EDA               	movlw	low _Global1
 23181  007074  0100               	movlb	0	; () banked
 23182  007076  6F92               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 23183  007078  0E03               	movlw	high _Global1
 23184  00707A  0100               	movlb	0	; () banked
 23185  00707C  6F93               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 23186  00707E  0E05               	movlw	5
 23187  007080  0100               	movlb	0	; () banked
 23188  007082  2792               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 23189  007084  0E00               	movlw	0
 23190  007086  2393               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 23191  007088  50F3               	movf	prodl,w,c
 23192  00708A  0100               	movlb	0	; () banked
 23193  00708C  2792               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 23194  00708E  50F4               	movf	prodh,w,c
 23195  007090  0100               	movlb	0	; () banked
 23196  007092  2393               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 23197  007094  0100               	movlb	0	; () banked
 23198  007096  51F4               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 23199  007098  0D01               	mullw	1
 23200  00709A  50F3               	movf	prodl,w,c
 23201  00709C  0100               	movlb	0	; () banked
 23202  00709E  2592               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 23203  0070A0  6EE1               	movwf	fsr1l,c
 23204  0070A2  50F4               	movf	prodh,w,c
 23205  0070A4  0100               	movlb	0	; () banked
 23206  0070A6  2193               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 23207  0070A8  6EE2               	movwf	fsr1h,c
 23208  0070AA  CFDF FFE7          	movff	indf2,indf1
 23209                           
 23210                           ; BSR set to: 0
 23211  0070AE  0100               	movlb	0	; () banked
 23212  0070B0  2BF4               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 23213  0070B2  D7B7               	goto	l10720
 23214  0070B4                     l10730:
 23215                           
 23216                           ; BSR set to: 0
 23217  0070B4  0100               	movlb	0	; () banked
 23218  0070B6  2BF3               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 23219  0070B8                     l10732:
 23220                           
 23221                           ; BSR set to: 0
 23222  0070B8  0E0B               	movlw	11
 23223  0070BA  0100               	movlb	0	; () banked
 23224  0070BC  65F3               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 23225  0070BE  D7AE               	goto	l10718
 23226  0070C0                     l1114:
 23227                           
 23228                           ; BSR set to: 0
 23229                           ;EEPROM.c: 363: }
 23230                           ;EEPROM.c: 364: }
 23231                           ;EEPROM.c: 365: Global1.EEPROMinitFlag = Temp1.EEPROMinitFlag;
 23232  0070C0  C0F2  F3F7         	movff	SyncEEPROMToGlobal@Temp1+29,_Global1+29
 23233                           
 23234                           ; BSR set to: 0
 23235                           ;EEPROM.c: 366: for(i=0; i< 10; i++)
 23236  0070C4  0E00               	movlw	0
 23237  0070C6  0100               	movlb	0	; () banked
 23238  0070C8  6FF3               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 23239  0070CA  D061               	goto	l10764
 23240                           
 23241                           ; BSR set to: 0
 23242                           
 23243                           ; BSR set to: 0
 23244  0070CC  D064               	goto	l1118
 23245  0070CE                     l10740:
 23246                           
 23247                           ; BSR set to: 0
 23248                           ;EEPROM.c: 367: {
 23249                           ;EEPROM.c: 368: for(j=0; j < 3; j++)
 23250  0070CE  0E00               	movlw	0
 23251  0070D0  0100               	movlb	0	; () banked
 23252  0070D2  6FF4               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 23253  0070D4                     l10742:
 23254                           
 23255                           ; BSR set to: 0
 23256  0070D4  0E02               	movlw	2
 23257  0070D6  0100               	movlb	0	; () banked
 23258  0070D8  65F4               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 23259  0070DA  D001               	goto	l10746
 23260                           
 23261                           ; BSR set to: 0
 23262  0070DC  D056               	goto	l10762
 23263  0070DE                     l10746:
 23264                           
 23265                           ; BSR set to: 0
 23266                           ;EEPROM.c: 369: {
 23267                           ;EEPROM.c: 370: for(k=0; k < 2; k++)
 23268  0070DE  0E00               	movlw	0
 23269  0070E0  0100               	movlb	0	; () banked
 23270  0070E2  6FD4               	movwf	SyncEEPROMToGlobal@k& (0+255),b
 23271  0070E4                     l10748:
 23272                           
 23273                           ; BSR set to: 0
 23274  0070E4  0E01               	movlw	1
 23275  0070E6  0100               	movlb	0	; () banked
 23276  0070E8  65D4               	cpfsgt	SyncEEPROMToGlobal@k& (0+255),b
 23277  0070EA  D001               	goto	l10752
 23278                           
 23279                           ; BSR set to: 0
 23280  0070EC  D04B               	goto	l10758
 23281  0070EE                     l10752:
 23282                           
 23283                           ; BSR set to: 0
 23284                           ;EEPROM.c: 371: {
 23285                           ;EEPROM.c: 372: Global2.RemoteButtonRF[i][j][k] = Temp2.RemoteButtonRF[i][j][k];
 23286  0070EE  0100               	movlb	0	; () banked
 23287  0070F0  51F3               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 23288  0070F2  0D06               	mullw	6
 23289  0070F4  0E94               	movlw	low SyncEEPROMToGlobal@Temp2
 23290  0070F6  0100               	movlb	0	; () banked
 23291  0070F8  6F90               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 23292  0070FA  0E00               	movlw	high SyncEEPROMToGlobal@Temp2
 23293  0070FC  0100               	movlb	0	; () banked
 23294  0070FE  6F91               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 23295  007100  50F3               	movf	prodl,w,c
 23296  007102  0100               	movlb	0	; () banked
 23297  007104  2790               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 23298  007106  50F4               	movf	prodh,w,c
 23299  007108  0100               	movlb	0	; () banked
 23300  00710A  2391               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 23301  00710C  0100               	movlb	0	; () banked
 23302  00710E  51F4               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 23303  007110  0D02               	mullw	2
 23304  007112  50F3               	movf	prodl,w,c
 23305  007114  0100               	movlb	0	; () banked
 23306  007116  2790               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 23307  007118  50F4               	movf	prodh,w,c
 23308  00711A  0100               	movlb	0	; () banked
 23309  00711C  2391               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 23310  00711E  0100               	movlb	0	; () banked
 23311  007120  51D4               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 23312  007122  0D01               	mullw	1
 23313  007124  50F3               	movf	prodl,w,c
 23314  007126  0100               	movlb	0	; () banked
 23315  007128  2590               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 23316  00712A  6ED9               	movwf	fsr2l,c
 23317  00712C  50F4               	movf	prodh,w,c
 23318  00712E  0100               	movlb	0	; () banked
 23319  007130  2191               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 23320  007132  6EDA               	movwf	fsr2h,c
 23321  007134  0100               	movlb	0	; () banked
 23322  007136  51F3               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 23323  007138  0D06               	mullw	6
 23324  00713A  0E7C               	movlw	low _Global2
 23325  00713C  0100               	movlb	0	; () banked
 23326  00713E  6F92               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 23327  007140  0E03               	movlw	high _Global2
 23328  007142  0100               	movlb	0	; () banked
 23329  007144  6F93               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 23330  007146  50F3               	movf	prodl,w,c
 23331  007148  0100               	movlb	0	; () banked
 23332  00714A  2792               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 23333  00714C  50F4               	movf	prodh,w,c
 23334  00714E  0100               	movlb	0	; () banked
 23335  007150  2393               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 23336  007152  0100               	movlb	0	; () banked
 23337  007154  51F4               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 23338  007156  0D02               	mullw	2
 23339  007158  50F3               	movf	prodl,w,c
 23340  00715A  0100               	movlb	0	; () banked
 23341  00715C  2792               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 23342  00715E  50F4               	movf	prodh,w,c
 23343  007160  0100               	movlb	0	; () banked
 23344  007162  2393               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 23345  007164  0100               	movlb	0	; () banked
 23346  007166  51D4               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 23347  007168  0D01               	mullw	1
 23348  00716A  50F3               	movf	prodl,w,c
 23349  00716C  0100               	movlb	0	; () banked
 23350  00716E  2592               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 23351  007170  6EE1               	movwf	fsr1l,c
 23352  007172  50F4               	movf	prodh,w,c
 23353  007174  0100               	movlb	0	; () banked
 23354  007176  2193               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 23355  007178  6EE2               	movwf	fsr1h,c
 23356  00717A  CFDF FFE7          	movff	indf2,indf1
 23357                           
 23358                           ; BSR set to: 0
 23359  00717E  0100               	movlb	0	; () banked
 23360  007180  2BD4               	incf	SyncEEPROMToGlobal@k& (0+255),f,b
 23361  007182  D7B0               	goto	l10748
 23362  007184                     l10758:
 23363                           
 23364                           ; BSR set to: 0
 23365  007184  0100               	movlb	0	; () banked
 23366  007186  2BF4               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 23367  007188  D7A5               	goto	l10742
 23368  00718A                     l10762:
 23369                           
 23370                           ; BSR set to: 0
 23371  00718A  0100               	movlb	0	; () banked
 23372  00718C  2BF3               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 23373  00718E                     l10764:
 23374                           
 23375                           ; BSR set to: 0
 23376  00718E  0E09               	movlw	9
 23377  007190  0100               	movlb	0	; () banked
 23378  007192  65F3               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 23379  007194  D79C               	goto	l10740
 23380  007196                     l1118:
 23381                           
 23382                           ; BSR set to: 0
 23383                           ;EEPROM.c: 373: }
 23384                           ;EEPROM.c: 374: }
 23385                           ;EEPROM.c: 375: }
 23386                           ;EEPROM.c: 376: Global2.SerialNumber = Temp2.SerialNumber;
 23387  007196  C0D0  F3B8         	movff	SyncEEPROMToGlobal@Temp2+60,_Global2+60
 23388  00719A  C0D1  F3B9         	movff	SyncEEPROMToGlobal@Temp2+61,_Global2+61
 23389  00719E  C0D2  F3BA         	movff	SyncEEPROMToGlobal@Temp2+62,_Global2+62
 23390  0071A2  C0D3  F3BB         	movff	SyncEEPROMToGlobal@Temp2+63,_Global2+63
 23391                           
 23392                           ; BSR set to: 0
 23393  0071A6  0012               	return		;funcret
 23394  0071A8                     __end_of_SyncEEPROMToGlobal:
 23395                           	opt stack 0
 23396                           tblptru	equ	0xFF8
 23397                           tblptrh	equ	0xFF7
 23398                           tblptrl	equ	0xFF6
 23399                           tablat	equ	0xFF5
 23400                           prodh	equ	0xFF4
 23401                           prodl	equ	0xFF3
 23402                           intcon	equ	0xFF2
 23403                           intcon2	equ	0xFF1
 23404                           indf0	equ	0xFEF
 23405                           postinc0	equ	0xFEE
 23406                           plusw0	equ	0xFEB
 23407                           fsr0h	equ	0xFEA
 23408                           fsr0l	equ	0xFE9
 23409                           wreg	equ	0xFE8
 23410                           indf1	equ	0xFE7
 23411                           postdec1	equ	0xFE5
 23412                           fsr1h	equ	0xFE2
 23413                           fsr1l	equ	0xFE1
 23414                           indf2	equ	0xFDF
 23415                           postinc2	equ	0xFDE
 23416                           postdec2	equ	0xFDD
 23417                           plusw2	equ	0xFDB
 23418                           fsr2h	equ	0xFDA
 23419                           fsr2l	equ	0xFD9
 23420                           status	equ	0xFD8
 23421                           
 23422 ;; *************** function _GetEEPROM2 *****************
 23423 ;; Defined at:
 23424 ;;		line 156 in file "EEPROM.c"
 23425 ;; Parameters:    Size  Location     Type
 23426 ;;  Temp            2   40[BANK0 ] PTR struct EEdata2
 23427 ;;		 -> SyncEEPROMToGlobal@Temp2(64), 
 23428 ;; Auto vars:     Size  Location     Type
 23429 ;;  k               1   47[BANK0 ] unsigned char 
 23430 ;;  j               1   46[BANK0 ] unsigned char 
 23431 ;;  i               1   45[BANK0 ] unsigned char 
 23432 ;;  Arrayspot       1   44[BANK0 ] unsigned char 
 23433 ;; Return value:  Size  Location     Type
 23434 ;;		None               void
 23435 ;; Registers used:
 23436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23437 ;; Tracked objects:
 23438 ;;		On entry : 0/0
 23439 ;;		On exit  : 0/0
 23440 ;;		Unchanged: 0/0
 23441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23442 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23443 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23444 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23445 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23446 ;;Total ram usage:        8 bytes
 23447 ;; Hardware stack levels used:    1
 23448 ;; Hardware stack levels required when called:    8
 23449 ;; This function calls:
 23450 ;;		_GetMemoryChar
 23451 ;;		_GetMemoryLong
 23452 ;; This function is called by:
 23453 ;;		_SyncEEPROMToGlobal
 23454 ;; This function uses a non-reentrant model
 23455 ;;
 23456                           
 23457                           	psect	text38
 23458  008E90                     __ptext38:
 23459                           	opt stack 0
 23460  008E90                     _GetEEPROM2:
 23461                           	opt stack 20
 23462                           
 23463                           ;EEPROM.c: 158: unsigned char i,j,k;
 23464                           ;EEPROM.c: 159: unsigned char Arrayspot=(2*12 + 6);
 23465                           
 23466                           ; BSR set to: 0
 23467                           ;incstack = 0
 23468  008E90  0E1E               	movlw	30
 23469  008E92  0100               	movlb	0	; () banked
 23470  008E94  6F8C               	movwf	GetEEPROM2@Arrayspot& (0+255),b
 23471                           
 23472                           ;EEPROM.c: 161: for(i=0; i< 10; i++)
 23473  008E96  0E00               	movlw	0
 23474  008E98  0100               	movlb	0	; () banked
 23475  008E9A  6F8D               	movwf	GetEEPROM2@i& (0+255),b
 23476  008E9C                     l10284:
 23477                           
 23478                           ; BSR set to: 0
 23479  008E9C  0E09               	movlw	9
 23480  008E9E  0100               	movlb	0	; () banked
 23481  008EA0  658D               	cpfsgt	GetEEPROM2@i& (0+255),b
 23482  008EA2  D001               	goto	l10288
 23483                           
 23484                           ; BSR set to: 0
 23485  008EA4  D043               	goto	l10316
 23486  008EA6                     l10288:
 23487                           
 23488                           ; BSR set to: 0
 23489                           ;EEPROM.c: 162: {
 23490                           ;EEPROM.c: 163: for(j=0; j < 3; j++)
 23491  008EA6  0E00               	movlw	0
 23492  008EA8  0100               	movlb	0	; () banked
 23493  008EAA  6F8E               	movwf	GetEEPROM2@j& (0+255),b
 23494  008EAC                     l10290:
 23495                           
 23496                           ; BSR set to: 0
 23497  008EAC  0E02               	movlw	2
 23498  008EAE  0100               	movlb	0	; () banked
 23499  008EB0  658E               	cpfsgt	GetEEPROM2@j& (0+255),b
 23500  008EB2  D001               	goto	l10294
 23501                           
 23502                           ; BSR set to: 0
 23503  008EB4  D038               	goto	l10312
 23504  008EB6                     l10294:
 23505                           
 23506                           ; BSR set to: 0
 23507                           ;EEPROM.c: 164: {
 23508                           ;EEPROM.c: 165: for(k=0; k < 2; k++)
 23509  008EB6  0E00               	movlw	0
 23510  008EB8  0100               	movlb	0	; () banked
 23511  008EBA  6F8F               	movwf	GetEEPROM2@k& (0+255),b
 23512  008EBC                     l10296:
 23513                           
 23514                           ; BSR set to: 0
 23515  008EBC  0E01               	movlw	1
 23516  008EBE  0100               	movlb	0	; () banked
 23517  008EC0  658F               	cpfsgt	GetEEPROM2@k& (0+255),b
 23518  008EC2  D001               	goto	l10300
 23519                           
 23520                           ; BSR set to: 0
 23521  008EC4  D02D               	goto	l10308
 23522  008EC6                     l10300:
 23523                           
 23524                           ; BSR set to: 0
 23525                           ;EEPROM.c: 166: {
 23526                           ;EEPROM.c: 167: Temp->RemoteButtonRF[i][j][k] = GetMemoryChar(Arrayspot++);
 23527  008EC6  0100               	movlb	0	; () banked
 23528  008EC8  518D               	movf	GetEEPROM2@i& (0+255),w,b
 23529  008ECA  0D06               	mullw	6
 23530  008ECC  C088  F08A         	movff	GetEEPROM2@Temp,??_GetEEPROM2
 23531  008ED0  C089  F08B         	movff	GetEEPROM2@Temp+1,??_GetEEPROM2+1
 23532  008ED4  50F3               	movf	prodl,w,c
 23533  008ED6  0100               	movlb	0	; () banked
 23534  008ED8  278A               	addwf	??_GetEEPROM2& (0+255),f,b
 23535  008EDA  50F4               	movf	prodh,w,c
 23536  008EDC  0100               	movlb	0	; () banked
 23537  008EDE  238B               	addwfc	(??_GetEEPROM2+1)& (0+255),f,b
 23538  008EE0  0100               	movlb	0	; () banked
 23539  008EE2  518E               	movf	GetEEPROM2@j& (0+255),w,b
 23540  008EE4  0D02               	mullw	2
 23541  008EE6  50F3               	movf	prodl,w,c
 23542  008EE8  0100               	movlb	0	; () banked
 23543  008EEA  278A               	addwf	??_GetEEPROM2& (0+255),f,b
 23544  008EEC  50F4               	movf	prodh,w,c
 23545  008EEE  0100               	movlb	0	; () banked
 23546  008EF0  238B               	addwfc	(??_GetEEPROM2+1)& (0+255),f,b
 23547  008EF2  0100               	movlb	0	; () banked
 23548  008EF4  518F               	movf	GetEEPROM2@k& (0+255),w,b
 23549  008EF6  0D01               	mullw	1
 23550  008EF8  50F3               	movf	prodl,w,c
 23551  008EFA  0100               	movlb	0	; () banked
 23552  008EFC  258A               	addwf	??_GetEEPROM2& (0+255),w,b
 23553  008EFE  6ED9               	movwf	fsr2l,c
 23554  008F00  50F4               	movf	prodh,w,c
 23555  008F02  0100               	movlb	0	; () banked
 23556  008F04  218B               	addwfc	(??_GetEEPROM2+1)& (0+255),w,b
 23557  008F06  6EDA               	movwf	fsr2h,c
 23558  008F08  0100               	movlb	0	; () banked
 23559  008F0A  518C               	movf	GetEEPROM2@Arrayspot& (0+255),w,b
 23560  008F0C  EC63  F051         	call	_GetMemoryChar
 23561  008F10  0100               	movlb	0	; () banked
 23562  008F12  5167               	movf	?_GetMemoryChar& (0+255),w,b
 23563  008F14  6EDF               	movwf	indf2,c
 23564                           
 23565                           ; BSR set to: 0
 23566  008F16  0100               	movlb	0	; () banked
 23567  008F18  2B8C               	incf	GetEEPROM2@Arrayspot& (0+255),f,b
 23568                           
 23569                           ; BSR set to: 0
 23570  008F1A  0100               	movlb	0	; () banked
 23571  008F1C  2B8F               	incf	GetEEPROM2@k& (0+255),f,b
 23572  008F1E  D7CE               	goto	l10296
 23573  008F20                     l10308:
 23574                           
 23575                           ; BSR set to: 0
 23576  008F20  0100               	movlb	0	; () banked
 23577  008F22  2B8E               	incf	GetEEPROM2@j& (0+255),f,b
 23578  008F24  D7C3               	goto	l10290
 23579  008F26                     l10312:
 23580                           
 23581                           ; BSR set to: 0
 23582  008F26  0100               	movlb	0	; () banked
 23583  008F28  2B8D               	incf	GetEEPROM2@i& (0+255),f,b
 23584  008F2A  D7B8               	goto	l10284
 23585  008F2C                     l10316:
 23586                           
 23587                           ; BSR set to: 0
 23588                           ;EEPROM.c: 168: }
 23589                           ;EEPROM.c: 169: }
 23590                           ;EEPROM.c: 170: }
 23591                           ;EEPROM.c: 171: Temp->SerialNumber = GetMemoryLong((2*12 + 2*3*10 + 6));
 23592  008F2C  0E5A               	movlw	90
 23593  008F2E  EC0C  F03C         	call	_GetMemoryLong
 23594  008F32  0100               	movlb	0	; () banked
 23595  008F34  EE20 F03C          	lfsr	2,60
 23596  008F38  5188               	movf	GetEEPROM2@Temp& (0+255),w,b
 23597  008F3A  26D9               	addwf	fsr2l,f,c
 23598  008F3C  5189               	movf	(GetEEPROM2@Temp+1)& (0+255),w,b
 23599  008F3E  22DA               	addwfc	fsr2h,f,c
 23600  008F40  0100               	movlb	0	; () banked
 23601  008F42  C067  FFDE         	movff	?_GetMemoryLong,postinc2
 23602  008F46  0100               	movlb	0	; () banked
 23603  008F48  C068  FFDE         	movff	?_GetMemoryLong+1,postinc2
 23604  008F4C  0100               	movlb	0	; () banked
 23605  008F4E  C069  FFDE         	movff	?_GetMemoryLong+2,postinc2
 23606  008F52  0100               	movlb	0	; () banked
 23607  008F54  C06A  FFDE         	movff	?_GetMemoryLong+3,postinc2
 23608                           
 23609                           ; BSR set to: 0
 23610  008F58  0012               	return		;funcret
 23611  008F5A                     __end_of_GetEEPROM2:
 23612                           	opt stack 0
 23613                           tblptru	equ	0xFF8
 23614                           tblptrh	equ	0xFF7
 23615                           tblptrl	equ	0xFF6
 23616                           tablat	equ	0xFF5
 23617                           prodh	equ	0xFF4
 23618                           prodl	equ	0xFF3
 23619                           intcon	equ	0xFF2
 23620                           intcon2	equ	0xFF1
 23621                           indf0	equ	0xFEF
 23622                           postinc0	equ	0xFEE
 23623                           plusw0	equ	0xFEB
 23624                           fsr0h	equ	0xFEA
 23625                           fsr0l	equ	0xFE9
 23626                           wreg	equ	0xFE8
 23627                           indf1	equ	0xFE7
 23628                           postdec1	equ	0xFE5
 23629                           fsr1h	equ	0xFE2
 23630                           fsr1l	equ	0xFE1
 23631                           indf2	equ	0xFDF
 23632                           postinc2	equ	0xFDE
 23633                           postdec2	equ	0xFDD
 23634                           plusw2	equ	0xFDB
 23635                           fsr2h	equ	0xFDA
 23636                           fsr2l	equ	0xFD9
 23637                           status	equ	0xFD8
 23638                           
 23639 ;; *************** function _GetEEPROM1 *****************
 23640 ;; Defined at:
 23641 ;;		line 134 in file "EEPROM.c"
 23642 ;; Parameters:    Size  Location     Type
 23643 ;;  Temp            2   40[BANK0 ] PTR struct EEdata
 23644 ;;		 -> SyncEEPROMToGlobal@Temp1(30), 
 23645 ;; Auto vars:     Size  Location     Type
 23646 ;;  j               1   46[BANK0 ] unsigned char 
 23647 ;;  i               1   45[BANK0 ] unsigned char 
 23648 ;;  Arrayspot       1   44[BANK0 ] unsigned char 
 23649 ;;  k               1    0        unsigned char 
 23650 ;; Return value:  Size  Location     Type
 23651 ;;		None               void
 23652 ;; Registers used:
 23653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23654 ;; Tracked objects:
 23655 ;;		On entry : 0/0
 23656 ;;		On exit  : 0/0
 23657 ;;		Unchanged: 0/0
 23658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23659 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23660 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23661 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23662 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23663 ;;Total ram usage:        7 bytes
 23664 ;; Hardware stack levels used:    1
 23665 ;; Hardware stack levels required when called:    8
 23666 ;; This function calls:
 23667 ;;		_GetMemoryChar
 23668 ;;		_GetMemoryLong
 23669 ;; This function is called by:
 23670 ;;		_SyncEEPROMToGlobal
 23671 ;; This function uses a non-reentrant model
 23672 ;;
 23673                           
 23674                           	psect	text39
 23675  008C16                     __ptext39:
 23676                           	opt stack 0
 23677  008C16                     _GetEEPROM1:
 23678                           	opt stack 20
 23679                           
 23680                           ;EEPROM.c: 136: unsigned char i,j,k;
 23681                           ;EEPROM.c: 137: unsigned char Arrayspot=5;
 23682                           
 23683                           ; BSR set to: 0
 23684                           ;incstack = 0
 23685  008C16  0E05               	movlw	5
 23686  008C18  0100               	movlb	0	; () banked
 23687  008C1A  6F8C               	movwf	GetEEPROM1@Arrayspot& (0+255),b
 23688                           
 23689                           ; BSR set to: 0
 23690                           ;EEPROM.c: 139: Temp->BlueToothFlag = GetMemoryChar(0);
 23691  008C1C  0E00               	movlw	0
 23692  008C1E  EC63  F051         	call	_GetMemoryChar
 23693  008C22  0100               	movlb	0	; () banked
 23694  008C24  5167               	movf	?_GetMemoryChar& (0+255),w,b
 23695  008C26  C088  FFD9         	movff	GetEEPROM1@Temp,fsr2l
 23696  008C2A  C089  FFDA         	movff	GetEEPROM1@Temp+1,fsr2h
 23697  008C2E  6EDF               	movwf	indf2,c
 23698                           
 23699                           ; BSR set to: 0
 23700                           ;EEPROM.c: 140: Temp->SWNECcode = GetMemoryLong(1);
 23701  008C30  0E01               	movlw	1
 23702  008C32  EC0C  F03C         	call	_GetMemoryLong
 23703  008C36  0100               	movlb	0	; () banked
 23704  008C38  EE20 F001          	lfsr	2,1
 23705  008C3C  5188               	movf	GetEEPROM1@Temp& (0+255),w,b
 23706  008C3E  26D9               	addwf	fsr2l,f,c
 23707  008C40  5189               	movf	(GetEEPROM1@Temp+1)& (0+255),w,b
 23708  008C42  22DA               	addwfc	fsr2h,f,c
 23709  008C44  0100               	movlb	0	; () banked
 23710  008C46  C067  FFDE         	movff	?_GetMemoryLong,postinc2
 23711  008C4A  0100               	movlb	0	; () banked
 23712  008C4C  C068  FFDE         	movff	?_GetMemoryLong+1,postinc2
 23713  008C50  0100               	movlb	0	; () banked
 23714  008C52  C069  FFDE         	movff	?_GetMemoryLong+2,postinc2
 23715  008C56  0100               	movlb	0	; () banked
 23716  008C58  C06A  FFDE         	movff	?_GetMemoryLong+3,postinc2
 23717                           
 23718                           ;EEPROM.c: 141: for(i=0; i< 12; i++)
 23719  008C5C  0E00               	movlw	0
 23720  008C5E  0100               	movlb	0	; () banked
 23721  008C60  6F8D               	movwf	GetEEPROM1@i& (0+255),b
 23722  008C62                     l10258:
 23723                           
 23724                           ; BSR set to: 0
 23725  008C62  0E0B               	movlw	11
 23726  008C64  0100               	movlb	0	; () banked
 23727  008C66  658D               	cpfsgt	GetEEPROM1@i& (0+255),b
 23728  008C68  D001               	goto	l10262
 23729                           
 23730                           ; BSR set to: 0
 23731  008C6A  D035               	goto	l10280
 23732  008C6C                     l10262:
 23733                           
 23734                           ; BSR set to: 0
 23735                           ;EEPROM.c: 142: {
 23736                           ;EEPROM.c: 143: for(j=0; j < 2; j++)
 23737  008C6C  0E00               	movlw	0
 23738  008C6E  0100               	movlb	0	; () banked
 23739  008C70  6F8E               	movwf	GetEEPROM1@j& (0+255),b
 23740  008C72                     l10264:
 23741                           
 23742                           ; BSR set to: 0
 23743  008C72  0E01               	movlw	1
 23744  008C74  0100               	movlb	0	; () banked
 23745  008C76  658E               	cpfsgt	GetEEPROM1@j& (0+255),b
 23746  008C78  D001               	goto	l10268
 23747                           
 23748                           ; BSR set to: 0
 23749  008C7A  D02A               	goto	l10276
 23750  008C7C                     l10268:
 23751                           
 23752                           ; BSR set to: 0
 23753                           ;EEPROM.c: 144: {
 23754                           ;EEPROM.c: 145: Temp->RemoteButtonNEC[i][j] = GetMemoryChar(Arrayspot++);
 23755  008C7C  0100               	movlb	0	; () banked
 23756  008C7E  518D               	movf	GetEEPROM1@i& (0+255),w,b
 23757  008C80  0D02               	mullw	2
 23758  008C82  C088  F08A         	movff	GetEEPROM1@Temp,??_GetEEPROM1
 23759  008C86  C089  F08B         	movff	GetEEPROM1@Temp+1,??_GetEEPROM1+1
 23760  008C8A  50F3               	movf	prodl,w,c
 23761  008C8C  0100               	movlb	0	; () banked
 23762  008C8E  278A               	addwf	??_GetEEPROM1& (0+255),f,b
 23763  008C90  50F4               	movf	prodh,w,c
 23764  008C92  0100               	movlb	0	; () banked
 23765  008C94  238B               	addwfc	(??_GetEEPROM1+1)& (0+255),f,b
 23766  008C96  0100               	movlb	0	; () banked
 23767  008C98  518E               	movf	GetEEPROM1@j& (0+255),w,b
 23768  008C9A  0D01               	mullw	1
 23769  008C9C  50F3               	movf	prodl,w,c
 23770  008C9E  0100               	movlb	0	; () banked
 23771  008CA0  278A               	addwf	??_GetEEPROM1& (0+255),f,b
 23772  008CA2  50F4               	movf	prodh,w,c
 23773  008CA4  0100               	movlb	0	; () banked
 23774  008CA6  238B               	addwfc	(??_GetEEPROM1+1)& (0+255),f,b
 23775  008CA8  0E05               	movlw	5
 23776  008CAA  0100               	movlb	0	; () banked
 23777  008CAC  258A               	addwf	??_GetEEPROM1& (0+255),w,b
 23778  008CAE  6ED9               	movwf	fsr2l,c
 23779  008CB0  0E00               	movlw	0
 23780  008CB2  0100               	movlb	0	; () banked
 23781  008CB4  218B               	addwfc	(??_GetEEPROM1+1)& (0+255),w,b
 23782  008CB6  6EDA               	movwf	fsr2h,c
 23783  008CB8  0100               	movlb	0	; () banked
 23784  008CBA  518C               	movf	GetEEPROM1@Arrayspot& (0+255),w,b
 23785  008CBC  EC63  F051         	call	_GetMemoryChar
 23786  008CC0  0100               	movlb	0	; () banked
 23787  008CC2  5167               	movf	?_GetMemoryChar& (0+255),w,b
 23788  008CC4  6EDF               	movwf	indf2,c
 23789                           
 23790                           ; BSR set to: 0
 23791  008CC6  0100               	movlb	0	; () banked
 23792  008CC8  2B8C               	incf	GetEEPROM1@Arrayspot& (0+255),f,b
 23793                           
 23794                           ; BSR set to: 0
 23795  008CCA  0100               	movlb	0	; () banked
 23796  008CCC  2B8E               	incf	GetEEPROM1@j& (0+255),f,b
 23797  008CCE  D7D1               	goto	l10264
 23798  008CD0                     l10276:
 23799                           
 23800                           ; BSR set to: 0
 23801  008CD0  0100               	movlb	0	; () banked
 23802  008CD2  2B8D               	incf	GetEEPROM1@i& (0+255),f,b
 23803  008CD4  D7C6               	goto	l10258
 23804  008CD6                     l10280:
 23805                           
 23806                           ; BSR set to: 0
 23807                           ;EEPROM.c: 146: }
 23808                           ;EEPROM.c: 147: }
 23809                           ;EEPROM.c: 148: Temp->EEPROMinitFlag = GetMemoryChar((2*12 + 5));
 23810  008CD6  0100               	movlb	0	; () banked
 23811  008CD8  EE20 F01D          	lfsr	2,29
 23812  008CDC  5188               	movf	GetEEPROM1@Temp& (0+255),w,b
 23813  008CDE  26D9               	addwf	fsr2l,f,c
 23814  008CE0  5189               	movf	(GetEEPROM1@Temp+1)& (0+255),w,b
 23815  008CE2  22DA               	addwfc	fsr2h,f,c
 23816  008CE4  0E1D               	movlw	29
 23817  008CE6  EC63  F051         	call	_GetMemoryChar
 23818  008CEA  0100               	movlb	0	; () banked
 23819  008CEC  5167               	movf	?_GetMemoryChar& (0+255),w,b
 23820  008CEE  6EDF               	movwf	indf2,c
 23821                           
 23822                           ; BSR set to: 0
 23823  008CF0  0012               	return		;funcret
 23824  008CF2                     __end_of_GetEEPROM1:
 23825                           	opt stack 0
 23826                           tblptru	equ	0xFF8
 23827                           tblptrh	equ	0xFF7
 23828                           tblptrl	equ	0xFF6
 23829                           tablat	equ	0xFF5
 23830                           prodh	equ	0xFF4
 23831                           prodl	equ	0xFF3
 23832                           intcon	equ	0xFF2
 23833                           intcon2	equ	0xFF1
 23834                           indf0	equ	0xFEF
 23835                           postinc0	equ	0xFEE
 23836                           plusw0	equ	0xFEB
 23837                           fsr0h	equ	0xFEA
 23838                           fsr0l	equ	0xFE9
 23839                           wreg	equ	0xFE8
 23840                           indf1	equ	0xFE7
 23841                           postdec1	equ	0xFE5
 23842                           fsr1h	equ	0xFE2
 23843                           fsr1l	equ	0xFE1
 23844                           indf2	equ	0xFDF
 23845                           postinc2	equ	0xFDE
 23846                           postdec2	equ	0xFDD
 23847                           plusw2	equ	0xFDB
 23848                           fsr2h	equ	0xFDA
 23849                           fsr2l	equ	0xFD9
 23850                           status	equ	0xFD8
 23851                           
 23852 ;; *************** function _SetEEPROMdefault *****************
 23853 ;; Defined at:
 23854 ;;		line 299 in file "EEPROM.c"
 23855 ;; Parameters:    Size  Location     Type
 23856 ;;		None
 23857 ;; Auto vars:     Size  Location     Type
 23858 ;;  j               1  141[BANK0 ] unsigned char 
 23859 ;;  i               1  140[BANK0 ] unsigned char 
 23860 ;;  k               1  139[BANK0 ] unsigned char 
 23861 ;; Return value:  Size  Location     Type
 23862 ;;		None               void
 23863 ;; Registers used:
 23864 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23865 ;; Tracked objects:
 23866 ;;		On entry : 0/0
 23867 ;;		On exit  : 0/0
 23868 ;;		Unchanged: 0/0
 23869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23871 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23872 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23873 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23874 ;;Total ram usage:        5 bytes
 23875 ;; Hardware stack levels used:    1
 23876 ;; Hardware stack levels required when called:   11
 23877 ;; This function calls:
 23878 ;;		_SyncGlobalToEEPROM
 23879 ;; This function is called by:
 23880 ;;		_Init_System
 23881 ;; This function uses a non-reentrant model
 23882 ;;
 23883                           
 23884                           	psect	text40
 23885  008604                     __ptext40:
 23886                           	opt stack 0
 23887  008604                     _SetEEPROMdefault:
 23888                           	opt stack 18
 23889                           
 23890                           ;EEPROM.c: 301: unsigned char i,j,k;
 23891                           ;EEPROM.c: 303: Global1.BlueToothFlag = 0;
 23892                           
 23893                           ; BSR set to: 0
 23894                           ;incstack = 0
 23895  008604  0E00               	movlw	0
 23896  008606  0103               	movlb	3	; () banked
 23897  008608  6FDA               	movwf	_Global1& (0+255),b
 23898                           
 23899                           ;EEPROM.c: 304: Global1.SWNECcode = 0x00FF00FF;
 23900  00860A  0EFF               	movlw	255
 23901  00860C  0103               	movlb	3	; () banked
 23902  00860E  6FDB               	movwf	(_Global1+1)& (0+255),b
 23903  008610  0E00               	movlw	0
 23904  008612  6FDC               	movwf	(_Global1+2)& (0+255),b
 23905  008614  0EFF               	movlw	255
 23906  008616  6FDD               	movwf	(_Global1+3)& (0+255),b
 23907  008618  0E00               	movlw	0
 23908  00861A  6FDE               	movwf	(_Global1+4)& (0+255),b
 23909                           
 23910                           ;EEPROM.c: 305: Global1.EEPROMinitFlag = 0;
 23911  00861C  0E00               	movlw	0
 23912  00861E  0103               	movlb	3	; () banked
 23913  008620  6FF7               	movwf	(_Global1+29)& (0+255),b
 23914                           
 23915                           ;EEPROM.c: 306: for(i=0; i< 12; i++)
 23916  008622  0E00               	movlw	0
 23917  008624  0100               	movlb	0	; () banked
 23918  008626  6FEC               	movwf	SetEEPROMdefault@i& (0+255),b
 23919  008628                     l10778:
 23920                           
 23921                           ; BSR set to: 0
 23922  008628  0E0B               	movlw	11
 23923  00862A  0100               	movlb	0	; () banked
 23924  00862C  65EC               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 23925  00862E  D001               	goto	l10782
 23926                           
 23927                           ; BSR set to: 0
 23928  008630  D02F               	goto	l10798
 23929  008632                     l10782:
 23930                           
 23931                           ; BSR set to: 0
 23932                           ;EEPROM.c: 307: {
 23933                           ;EEPROM.c: 308: for(j=0; j < 2; j++)
 23934  008632  0E00               	movlw	0
 23935  008634  0100               	movlb	0	; () banked
 23936  008636  6FED               	movwf	SetEEPROMdefault@j& (0+255),b
 23937  008638                     l10784:
 23938                           
 23939                           ; BSR set to: 0
 23940  008638  0E01               	movlw	1
 23941  00863A  0100               	movlb	0	; () banked
 23942  00863C  65ED               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 23943  00863E  D001               	goto	l10788
 23944                           
 23945                           ; BSR set to: 0
 23946  008640  D024               	goto	l10794
 23947  008642                     l10788:
 23948                           
 23949                           ; BSR set to: 0
 23950                           ;EEPROM.c: 309: {
 23951                           ;EEPROM.c: 310: Global1.RemoteButtonNEC[i][j] = 0x00;
 23952  008642  0100               	movlb	0	; () banked
 23953  008644  51EC               	movf	SetEEPROMdefault@i& (0+255),w,b
 23954  008646  0D02               	mullw	2
 23955  008648  0EDA               	movlw	low _Global1
 23956  00864A  0100               	movlb	0	; () banked
 23957  00864C  6FE9               	movwf	??_SetEEPROMdefault& (0+255),b
 23958  00864E  0E03               	movlw	high _Global1
 23959  008650  0100               	movlb	0	; () banked
 23960  008652  6FEA               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 23961  008654  0E05               	movlw	5
 23962  008656  0100               	movlb	0	; () banked
 23963  008658  27E9               	addwf	??_SetEEPROMdefault& (0+255),f,b
 23964  00865A  0E00               	movlw	0
 23965  00865C  23EA               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 23966  00865E  50F3               	movf	prodl,w,c
 23967  008660  0100               	movlb	0	; () banked
 23968  008662  27E9               	addwf	??_SetEEPROMdefault& (0+255),f,b
 23969  008664  50F4               	movf	prodh,w,c
 23970  008666  0100               	movlb	0	; () banked
 23971  008668  23EA               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 23972  00866A  0100               	movlb	0	; () banked
 23973  00866C  51ED               	movf	SetEEPROMdefault@j& (0+255),w,b
 23974  00866E  0D01               	mullw	1
 23975  008670  50F3               	movf	prodl,w,c
 23976  008672  0100               	movlb	0	; () banked
 23977  008674  25E9               	addwf	??_SetEEPROMdefault& (0+255),w,b
 23978  008676  6ED9               	movwf	fsr2l,c
 23979  008678  50F4               	movf	prodh,w,c
 23980  00867A  0100               	movlb	0	; () banked
 23981  00867C  21EA               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 23982  00867E  6EDA               	movwf	fsr2h,c
 23983  008680  0E00               	movlw	0
 23984  008682  6EDF               	movwf	indf2,c
 23985                           
 23986                           ; BSR set to: 0
 23987  008684  0100               	movlb	0	; () banked
 23988  008686  2BED               	incf	SetEEPROMdefault@j& (0+255),f,b
 23989  008688  D7D7               	goto	l10784
 23990  00868A                     l10794:
 23991                           
 23992                           ; BSR set to: 0
 23993  00868A  0100               	movlb	0	; () banked
 23994  00868C  2BEC               	incf	SetEEPROMdefault@i& (0+255),f,b
 23995  00868E  D7CC               	goto	l10778
 23996  008690                     l10798:
 23997                           
 23998                           ; BSR set to: 0
 23999                           ;EEPROM.c: 311: }
 24000                           ;EEPROM.c: 312: }
 24001                           ;EEPROM.c: 313: for(i=0; i< 10; i++)
 24002  008690  0E00               	movlw	0
 24003  008692  0100               	movlb	0	; () banked
 24004  008694  6FEC               	movwf	SetEEPROMdefault@i& (0+255),b
 24005  008696                     l10800:
 24006                           
 24007                           ; BSR set to: 0
 24008  008696  0E09               	movlw	9
 24009  008698  0100               	movlb	0	; () banked
 24010  00869A  65EC               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 24011  00869C  D001               	goto	l10804
 24012                           
 24013                           ; BSR set to: 0
 24014  00869E  D03E               	goto	l10830
 24015  0086A0                     l10804:
 24016                           
 24017                           ; BSR set to: 0
 24018                           ;EEPROM.c: 314: {
 24019                           ;EEPROM.c: 315: for(j=0; j < 3; j++)
 24020  0086A0  0E00               	movlw	0
 24021  0086A2  0100               	movlb	0	; () banked
 24022  0086A4  6FED               	movwf	SetEEPROMdefault@j& (0+255),b
 24023  0086A6                     l10806:
 24024                           
 24025                           ; BSR set to: 0
 24026  0086A6  0E02               	movlw	2
 24027  0086A8  0100               	movlb	0	; () banked
 24028  0086AA  65ED               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 24029  0086AC  D001               	goto	l10810
 24030                           
 24031                           ; BSR set to: 0
 24032  0086AE  D033               	goto	l10826
 24033  0086B0                     l10810:
 24034                           
 24035                           ; BSR set to: 0
 24036                           ;EEPROM.c: 316: {
 24037                           ;EEPROM.c: 317: for(k=0; k < 2; k++)
 24038  0086B0  0E00               	movlw	0
 24039  0086B2  0100               	movlb	0	; () banked
 24040  0086B4  6FEB               	movwf	SetEEPROMdefault@k& (0+255),b
 24041  0086B6                     l10812:
 24042                           
 24043                           ; BSR set to: 0
 24044  0086B6  0E01               	movlw	1
 24045  0086B8  0100               	movlb	0	; () banked
 24046  0086BA  65EB               	cpfsgt	SetEEPROMdefault@k& (0+255),b
 24047  0086BC  D001               	goto	l10816
 24048                           
 24049                           ; BSR set to: 0
 24050  0086BE  D028               	goto	l10822
 24051  0086C0                     l10816:
 24052                           
 24053                           ; BSR set to: 0
 24054                           ;EEPROM.c: 318: {
 24055                           ;EEPROM.c: 319: Global2.RemoteButtonRF[i][j][k] = 0x00;
 24056  0086C0  0100               	movlb	0	; () banked
 24057  0086C2  51EC               	movf	SetEEPROMdefault@i& (0+255),w,b
 24058  0086C4  0D06               	mullw	6
 24059  0086C6  0E7C               	movlw	low _Global2
 24060  0086C8  0100               	movlb	0	; () banked
 24061  0086CA  6FE9               	movwf	??_SetEEPROMdefault& (0+255),b
 24062  0086CC  0E03               	movlw	high _Global2
 24063  0086CE  0100               	movlb	0	; () banked
 24064  0086D0  6FEA               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 24065  0086D2  50F3               	movf	prodl,w,c
 24066  0086D4  0100               	movlb	0	; () banked
 24067  0086D6  27E9               	addwf	??_SetEEPROMdefault& (0+255),f,b
 24068  0086D8  50F4               	movf	prodh,w,c
 24069  0086DA  0100               	movlb	0	; () banked
 24070  0086DC  23EA               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 24071  0086DE  0100               	movlb	0	; () banked
 24072  0086E0  51ED               	movf	SetEEPROMdefault@j& (0+255),w,b
 24073  0086E2  0D02               	mullw	2
 24074  0086E4  50F3               	movf	prodl,w,c
 24075  0086E6  0100               	movlb	0	; () banked
 24076  0086E8  27E9               	addwf	??_SetEEPROMdefault& (0+255),f,b
 24077  0086EA  50F4               	movf	prodh,w,c
 24078  0086EC  0100               	movlb	0	; () banked
 24079  0086EE  23EA               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 24080  0086F0  0100               	movlb	0	; () banked
 24081  0086F2  51EB               	movf	SetEEPROMdefault@k& (0+255),w,b
 24082  0086F4  0D01               	mullw	1
 24083  0086F6  50F3               	movf	prodl,w,c
 24084  0086F8  0100               	movlb	0	; () banked
 24085  0086FA  25E9               	addwf	??_SetEEPROMdefault& (0+255),w,b
 24086  0086FC  6ED9               	movwf	fsr2l,c
 24087  0086FE  50F4               	movf	prodh,w,c
 24088  008700  0100               	movlb	0	; () banked
 24089  008702  21EA               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 24090  008704  6EDA               	movwf	fsr2h,c
 24091  008706  0E00               	movlw	0
 24092  008708  6EDF               	movwf	indf2,c
 24093                           
 24094                           ; BSR set to: 0
 24095  00870A  0100               	movlb	0	; () banked
 24096  00870C  2BEB               	incf	SetEEPROMdefault@k& (0+255),f,b
 24097  00870E  D7D3               	goto	l10812
 24098  008710                     l10822:
 24099                           
 24100                           ; BSR set to: 0
 24101  008710  0100               	movlb	0	; () banked
 24102  008712  2BED               	incf	SetEEPROMdefault@j& (0+255),f,b
 24103  008714  D7C8               	goto	l10806
 24104  008716                     l10826:
 24105                           
 24106                           ; BSR set to: 0
 24107  008716  0100               	movlb	0	; () banked
 24108  008718  2BEC               	incf	SetEEPROMdefault@i& (0+255),f,b
 24109  00871A  D7BD               	goto	l10800
 24110  00871C                     l10830:
 24111                           
 24112                           ; BSR set to: 0
 24113                           ;EEPROM.c: 320: }
 24114                           ;EEPROM.c: 321: }
 24115                           ;EEPROM.c: 322: }
 24116                           ;EEPROM.c: 323: SyncGlobalToEEPROM();
 24117  00871C  ECCE  F04A         	call	_SyncGlobalToEEPROM	;wreg free
 24118  008720  0012               	return		;funcret
 24119  008722                     __end_of_SetEEPROMdefault:
 24120                           	opt stack 0
 24121                           tblptru	equ	0xFF8
 24122                           tblptrh	equ	0xFF7
 24123                           tblptrl	equ	0xFF6
 24124                           tablat	equ	0xFF5
 24125                           prodh	equ	0xFF4
 24126                           prodl	equ	0xFF3
 24127                           intcon	equ	0xFF2
 24128                           intcon2	equ	0xFF1
 24129                           indf0	equ	0xFEF
 24130                           postinc0	equ	0xFEE
 24131                           plusw0	equ	0xFEB
 24132                           fsr0h	equ	0xFEA
 24133                           fsr0l	equ	0xFE9
 24134                           wreg	equ	0xFE8
 24135                           indf1	equ	0xFE7
 24136                           postdec1	equ	0xFE5
 24137                           fsr1h	equ	0xFE2
 24138                           fsr1l	equ	0xFE1
 24139                           indf2	equ	0xFDF
 24140                           postinc2	equ	0xFDE
 24141                           postdec2	equ	0xFDD
 24142                           plusw2	equ	0xFDB
 24143                           fsr2h	equ	0xFDA
 24144                           fsr2l	equ	0xFD9
 24145                           status	equ	0xFD8
 24146                           
 24147 ;; *************** function _InitUART *****************
 24148 ;; Defined at:
 24149 ;;		line 81 in file "UART.c"
 24150 ;; Parameters:    Size  Location     Type
 24151 ;;  Baud            4   88[BANK0 ] unsigned long 
 24152 ;; Auto vars:     Size  Location     Type
 24153 ;;  temp            4  102[BANK0 ] unsigned long 
 24154 ;;  spbrg           2   99[BANK0 ] unsigned int 
 24155 ;;  config          1  101[BANK0 ] unsigned char 
 24156 ;; Return value:  Size  Location     Type
 24157 ;;		None               void
 24158 ;; Registers used:
 24159 ;;		wreg, status,2, status,0, cstack
 24160 ;; Tracked objects:
 24161 ;;		On entry : 0/0
 24162 ;;		On exit  : 0/0
 24163 ;;		Unchanged: 0/0
 24164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24165 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24166 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24167 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24168 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24169 ;;Total ram usage:       18 bytes
 24170 ;; Hardware stack levels used:    1
 24171 ;; Hardware stack levels required when called:    9
 24172 ;; This function calls:
 24173 ;;		_ClearUSART
 24174 ;;		_Local_CloseUSART
 24175 ;;		_OpenUSART
 24176 ;;		_Round
 24177 ;;		___fttol
 24178 ;;		___lldiv
 24179 ;;		___lltoft
 24180 ;; This function is called by:
 24181 ;;		_Init_System
 24182 ;; This function uses a non-reentrant model
 24183 ;;
 24184                           
 24185                           	psect	text41
 24186  008722                     __ptext41:
 24187                           	opt stack 0
 24188  008722                     _InitUART:
 24189                           	opt stack 20
 24190                           
 24191                           ;UART.c: 83: unsigned long temp;
 24192                           ;UART.c: 84: unsigned char config = 0;
 24193                           
 24194                           ;incstack = 0
 24195  008722  0E00               	movlw	0
 24196  008724  0100               	movlb	0	; () banked
 24197  008726  6FC5               	movwf	InitUART@config& (0+255),b
 24198                           
 24199                           ; BSR set to: 0
 24200                           ;UART.c: 85: unsigned int spbrg;
 24201                           ;UART.c: 87: Local_CloseUSART();
 24202  008728  EC42  F052         	call	_Local_CloseUSART	;wreg free
 24203                           
 24204                           ;UART.c: 92: config |= 0b00001000;
 24205  00872C  0100               	movlb	0	; () banked
 24206  00872E  87C5               	bsf	InitUART@config& (0+255),3,b
 24207                           
 24208                           ; BSR set to: 0
 24209                           ;UART.c: 93: config |= 0b00010000;
 24210  008730  0100               	movlb	0	; () banked
 24211  008732  89C5               	bsf	InitUART@config& (0+255),4,b
 24212                           
 24213                           ; BSR set to: 0
 24214                           ;UART.c: 94: config &= ~0b00000010;
 24215  008734  0100               	movlb	0	; () banked
 24216  008736  93C5               	bcf	InitUART@config& (0+255),1,b
 24217                           
 24218                           ; BSR set to: 0
 24219                           ;UART.c: 97: temp = (64000000L / Baud) - 1;
 24220  008738  0E00               	movlw	0
 24221  00873A  0100               	movlb	0	; () banked
 24222  00873C  6F63               	movwf	___lldiv@dividend& (0+255),b
 24223  00873E  0E90               	movlw	144
 24224  008740  6F64               	movwf	(___lldiv@dividend+1)& (0+255),b
 24225  008742  0ED0               	movlw	208
 24226  008744  6F65               	movwf	(___lldiv@dividend+2)& (0+255),b
 24227  008746  0E03               	movlw	3
 24228  008748  6F66               	movwf	(___lldiv@dividend+3)& (0+255),b
 24229  00874A  C0B8  F067         	movff	InitUART@Baud,___lldiv@divisor
 24230  00874E  C0B9  F068         	movff	InitUART@Baud+1,___lldiv@divisor+1
 24231  008752  C0BA  F069         	movff	InitUART@Baud+2,___lldiv@divisor+2
 24232  008756  C0BB  F06A         	movff	InitUART@Baud+3,___lldiv@divisor+3
 24233  00875A  ECAD  F047         	call	___lldiv	;wreg free
 24234  00875E  0EFF               	movlw	255
 24235  008760  0100               	movlb	0	; () banked
 24236  008762  2563               	addwf	?___lldiv& (0+255),w,b
 24237  008764  0100               	movlb	0	; () banked
 24238  008766  6FC6               	movwf	InitUART@temp& (0+255),b
 24239  008768  0EFF               	movlw	255
 24240  00876A  0100               	movlb	0	; () banked
 24241  00876C  2164               	addwfc	(?___lldiv+1)& (0+255),w,b
 24242  00876E  0100               	movlb	0	; () banked
 24243  008770  6FC7               	movwf	(InitUART@temp+1)& (0+255),b
 24244  008772  0EFF               	movlw	255
 24245  008774  0100               	movlb	0	; () banked
 24246  008776  2165               	addwfc	(?___lldiv+2)& (0+255),w,b
 24247  008778  0100               	movlb	0	; () banked
 24248  00877A  6FC8               	movwf	(InitUART@temp+2)& (0+255),b
 24249  00877C  0EFF               	movlw	255
 24250  00877E  0100               	movlb	0	; () banked
 24251  008780  2166               	addwfc	(?___lldiv+3)& (0+255),w,b
 24252  008782  0100               	movlb	0	; () banked
 24253  008784  6FC9               	movwf	(InitUART@temp+3)& (0+255),b
 24254                           
 24255                           ; BSR set to: 0
 24256                           ;UART.c: 98: temp = (temp >> 2) - 1;
 24257  008786  C0C6  F0BC         	movff	InitUART@temp,??_InitUART
 24258  00878A  C0C7  F0BD         	movff	InitUART@temp+1,??_InitUART+1
 24259  00878E  C0C8  F0BE         	movff	InitUART@temp+2,??_InitUART+2
 24260  008792  C0C9  F0BF         	movff	InitUART@temp+3,??_InitUART+3
 24261  008796  0E03               	movlw	3
 24262  008798  D006               	goto	u11750
 24263  00879A                     u11755:
 24264  00879A  0100               	movlb	0	; () banked
 24265  00879C  90D8               	bcf	status,0,c
 24266  00879E  33BF               	rrcf	(??_InitUART+3)& (0+255),f,b
 24267  0087A0  33BE               	rrcf	(??_InitUART+2)& (0+255),f,b
 24268  0087A2  33BD               	rrcf	(??_InitUART+1)& (0+255),f,b
 24269  0087A4  33BC               	rrcf	??_InitUART& (0+255),f,b
 24270  0087A6                     u11750:
 24271  0087A6  2EE8               	decfsz	wreg,f,c
 24272  0087A8  D7F8               	goto	u11755
 24273  0087AA  0EFF               	movlw	255
 24274  0087AC  0100               	movlb	0	; () banked
 24275  0087AE  25BC               	addwf	??_InitUART& (0+255),w,b
 24276  0087B0  0100               	movlb	0	; () banked
 24277  0087B2  6FC6               	movwf	InitUART@temp& (0+255),b
 24278  0087B4  0EFF               	movlw	255
 24279  0087B6  0100               	movlb	0	; () banked
 24280  0087B8  21BD               	addwfc	(??_InitUART+1)& (0+255),w,b
 24281  0087BA  0100               	movlb	0	; () banked
 24282  0087BC  6FC7               	movwf	(InitUART@temp+1)& (0+255),b
 24283  0087BE  0EFF               	movlw	255
 24284  0087C0  0100               	movlb	0	; () banked
 24285  0087C2  21BE               	addwfc	(??_InitUART+2)& (0+255),w,b
 24286  0087C4  0100               	movlb	0	; () banked
 24287  0087C6  6FC8               	movwf	(InitUART@temp+2)& (0+255),b
 24288  0087C8  0EFF               	movlw	255
 24289  0087CA  0100               	movlb	0	; () banked
 24290  0087CC  21BF               	addwfc	(??_InitUART+3)& (0+255),w,b
 24291  0087CE  0100               	movlb	0	; () banked
 24292  0087D0  6FC9               	movwf	(InitUART@temp+3)& (0+255),b
 24293                           
 24294                           ; BSR set to: 0
 24295                           ;UART.c: 99: spbrg = (unsigned int) Round(temp);
 24296  0087D2  C0C6  F06B         	movff	InitUART@temp,___lltoft@c
 24297  0087D6  C0C7  F06C         	movff	InitUART@temp+1,___lltoft@c+1
 24298  0087DA  C0C8  F06D         	movff	InitUART@temp+2,___lltoft@c+2
 24299  0087DE  C0C9  F06E         	movff	InitUART@temp+3,___lltoft@c+3
 24300  0087E2  EC86  F04C         	call	___lltoft	;wreg free
 24301  0087E6  C06B  F0B1         	movff	?___lltoft,Round@input
 24302  0087EA  C06C  F0B2         	movff	?___lltoft+1,Round@input+1
 24303  0087EE  C06D  F0B3         	movff	?___lltoft+2,Round@input+2
 24304  0087F2  ECB7  F04D         	call	_Round	;wreg free
 24305  0087F6  C0B1  F0C0         	movff	?_Round,_InitUART$3916
 24306  0087FA  C0B2  F0C1         	movff	?_Round+1,_InitUART$3916+1
 24307  0087FE  C0B3  F0C2         	movff	?_Round+2,_InitUART$3916+2
 24308                           
 24309                           ;UART.c: 99: spbrg = (unsigned int) Round(temp);
 24310  008802  C0C0  F0A2         	movff	_InitUART$3916,___fttol@f1
 24311  008806  C0C1  F0A3         	movff	_InitUART$3916+1,___fttol@f1+1
 24312  00880A  C0C2  F0A4         	movff	_InitUART$3916+2,___fttol@f1+2
 24313  00880E  ECD1  F03E         	call	___fttol	;wreg free
 24314  008812  C0A2  F0C3         	movff	?___fttol,InitUART@spbrg
 24315  008816  C0A3  F0C4         	movff	?___fttol+1,InitUART@spbrg+1
 24316                           
 24317                           ;UART.c: 101: BAUDCONbits.BRG16 = 1;
 24318  00881A  86B8               	bsf	4024,3,c	;volatile
 24319                           
 24320                           ;UART.c: 103: ClearUSART();
 24321  00881C  EC21  F052         	call	_ClearUSART	;wreg free
 24322                           
 24323                           ;UART.c: 104: OpenUSART(config, spbrg);
 24324  008820  C0C3  F063         	movff	InitUART@spbrg,OpenUSART@spbrg
 24325  008824  C0C4  F064         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 24326  008828  0100               	movlb	0	; () banked
 24327  00882A  51C5               	movf	InitUART@config& (0+255),w,b
 24328  00882C  ECC6  F04C         	call	_OpenUSART
 24329                           
 24330                           ;UART.c: 106: PIR1bits.RCIF = 0;
 24331  008830  9A9E               	bcf	3998,5,c	;volatile
 24332                           
 24333                           ;UART.c: 107: PIE1bits.RCIE = 0;
 24334  008832  9A9D               	bcf	3997,5,c	;volatile
 24335                           
 24336                           ;UART.c: 108: INTCONbits.PEIE = 1;
 24337  008834  8CF2               	bsf	intcon,6,c	;volatile
 24338  008836  0012               	return		;funcret
 24339  008838                     __end_of_InitUART:
 24340                           	opt stack 0
 24341                           tblptru	equ	0xFF8
 24342                           tblptrh	equ	0xFF7
 24343                           tblptrl	equ	0xFF6
 24344                           tablat	equ	0xFF5
 24345                           prodh	equ	0xFF4
 24346                           prodl	equ	0xFF3
 24347                           intcon	equ	0xFF2
 24348                           intcon2	equ	0xFF1
 24349                           indf0	equ	0xFEF
 24350                           postinc0	equ	0xFEE
 24351                           plusw0	equ	0xFEB
 24352                           fsr0h	equ	0xFEA
 24353                           fsr0l	equ	0xFE9
 24354                           wreg	equ	0xFE8
 24355                           indf1	equ	0xFE7
 24356                           postdec1	equ	0xFE5
 24357                           fsr1h	equ	0xFE2
 24358                           fsr1l	equ	0xFE1
 24359                           indf2	equ	0xFDF
 24360                           postinc2	equ	0xFDE
 24361                           postdec2	equ	0xFDD
 24362                           plusw2	equ	0xFDB
 24363                           fsr2h	equ	0xFDA
 24364                           fsr2l	equ	0xFD9
 24365                           status	equ	0xFD8
 24366                           
 24367 ;; *************** function _Round *****************
 24368 ;; Defined at:
 24369 ;;		line 155 in file "MISC.c"
 24370 ;; Parameters:    Size  Location     Type
 24371 ;;  input           3   81[BANK0 ] unsigned char 
 24372 ;; Auto vars:     Size  Location     Type
 24373 ;;  temp            4   84[BANK0 ] long 
 24374 ;; Return value:  Size  Location     Type
 24375 ;;                  3   81[BANK0 ] long 
 24376 ;; Registers used:
 24377 ;;		wreg, status,2, status,0, cstack
 24378 ;; Tracked objects:
 24379 ;;		On entry : 0/0
 24380 ;;		On exit  : 0/0
 24381 ;;		Unchanged: 0/0
 24382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24383 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24384 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24386 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24387 ;;Total ram usage:        7 bytes
 24388 ;; Hardware stack levels used:    1
 24389 ;; Hardware stack levels required when called:    8
 24390 ;; This function calls:
 24391 ;;		___altoft
 24392 ;;		___ftadd
 24393 ;;		___fttol
 24394 ;; This function is called by:
 24395 ;;		_InitUART
 24396 ;; This function uses a non-reentrant model
 24397 ;;
 24398                           
 24399                           	psect	text42
 24400  009B6E                     __ptext42:
 24401                           	opt stack 0
 24402  009B6E                     _Round:
 24403                           	opt stack 20
 24404                           
 24405                           ;MISC.c: 157: long temp = (long)(input + 0.5);
 24406                           
 24407                           ;incstack = 0
 24408  009B6E  0E00               	movlw	0
 24409  009B70  0100               	movlb	0	; () banked
 24410  009B72  6F99               	movwf	___ftadd@f2& (0+255),b
 24411  009B74  0E00               	movlw	0
 24412  009B76  0100               	movlb	0	; () banked
 24413  009B78  6F9A               	movwf	(___ftadd@f2+1)& (0+255),b
 24414  009B7A  0E3F               	movlw	63
 24415  009B7C  0100               	movlb	0	; () banked
 24416  009B7E  6F9B               	movwf	(___ftadd@f2+2)& (0+255),b
 24417  009B80  C0B1  F096         	movff	Round@input,___ftadd@f1
 24418  009B84  C0B2  F097         	movff	Round@input+1,___ftadd@f1+1
 24419  009B88  C0B3  F098         	movff	Round@input+2,___ftadd@f1+2
 24420  009B8C  EC5A  F033         	call	___ftadd	;wreg free
 24421  009B90  C096  F0A2         	movff	?___ftadd,___fttol@f1
 24422  009B94  C097  F0A3         	movff	?___ftadd+1,___fttol@f1+1
 24423  009B98  C098  F0A4         	movff	?___ftadd+2,___fttol@f1+2
 24424  009B9C  ECD1  F03E         	call	___fttol	;wreg free
 24425  009BA0  C0A2  F0B4         	movff	?___fttol,Round@temp
 24426  009BA4  C0A3  F0B5         	movff	?___fttol+1,Round@temp+1
 24427  009BA8  C0A4  F0B6         	movff	?___fttol+2,Round@temp+2
 24428  009BAC  C0A5  F0B7         	movff	?___fttol+3,Round@temp+3
 24429                           
 24430                           ;MISC.c: 159: return temp;
 24431  009BB0  C0B4  F06B         	movff	Round@temp,___altoft@c
 24432  009BB4  C0B5  F06C         	movff	Round@temp+1,___altoft@c+1
 24433  009BB8  C0B6  F06D         	movff	Round@temp+2,___altoft@c+2
 24434  009BBC  C0B7  F06E         	movff	Round@temp+3,___altoft@c+3
 24435  009BC0  EC7D  F04A         	call	___altoft	;wreg free
 24436  009BC4  C06B  F0B1         	movff	?___altoft,?_Round
 24437  009BC8  C06C  F0B2         	movff	?___altoft+1,?_Round+1
 24438  009BCC  C06D  F0B3         	movff	?___altoft+2,?_Round+2
 24439  009BD0  0012               	return	
 24440  009BD2  0012               	return		;funcret
 24441  009BD4                     __end_of_Round:
 24442                           	opt stack 0
 24443                           tblptru	equ	0xFF8
 24444                           tblptrh	equ	0xFF7
 24445                           tblptrl	equ	0xFF6
 24446                           tablat	equ	0xFF5
 24447                           prodh	equ	0xFF4
 24448                           prodl	equ	0xFF3
 24449                           intcon	equ	0xFF2
 24450                           intcon2	equ	0xFF1
 24451                           indf0	equ	0xFEF
 24452                           postinc0	equ	0xFEE
 24453                           plusw0	equ	0xFEB
 24454                           fsr0h	equ	0xFEA
 24455                           fsr0l	equ	0xFE9
 24456                           wreg	equ	0xFE8
 24457                           indf1	equ	0xFE7
 24458                           postdec1	equ	0xFE5
 24459                           fsr1h	equ	0xFE2
 24460                           fsr1l	equ	0xFE1
 24461                           indf2	equ	0xFDF
 24462                           postinc2	equ	0xFDE
 24463                           postdec2	equ	0xFDD
 24464                           plusw2	equ	0xFDB
 24465                           fsr2h	equ	0xFDA
 24466                           fsr2l	equ	0xFD9
 24467                           status	equ	0xFD8
 24468                           
 24469 ;; *************** function ___altoft *****************
 24470 ;; Defined at:
 24471 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
 24472 ;; Parameters:    Size  Location     Type
 24473 ;;  c               4   11[BANK0 ] long 
 24474 ;; Auto vars:     Size  Location     Type
 24475 ;;  sign            1   20[BANK0 ] unsigned char 
 24476 ;;  exp             1   19[BANK0 ] unsigned char 
 24477 ;; Return value:  Size  Location     Type
 24478 ;;                  3   11[BANK0 ] float 
 24479 ;; Registers used:
 24480 ;;		wreg, status,2, status,0, cstack
 24481 ;; Tracked objects:
 24482 ;;		On entry : 0/0
 24483 ;;		On exit  : 0/0
 24484 ;;		Unchanged: 0/0
 24485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24486 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24487 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24488 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24489 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24490 ;;Total ram usage:       10 bytes
 24491 ;; Hardware stack levels used:    1
 24492 ;; Hardware stack levels required when called:    7
 24493 ;; This function calls:
 24494 ;;		___ftpack
 24495 ;; This function is called by:
 24496 ;;		_Round
 24497 ;; This function uses a non-reentrant model
 24498 ;;
 24499                           
 24500                           	psect	text43
 24501  0094FA                     __ptext43:
 24502                           	opt stack 0
 24503  0094FA                     ___altoft:
 24504                           	opt stack 20
 24505                           
 24506                           ;incstack = 0
 24507  0094FA  0E00               	movlw	0
 24508  0094FC  0100               	movlb	0	; () banked
 24509  0094FE  6F74               	movwf	___altoft@sign& (0+255),b
 24510  009500  0E8E               	movlw	142
 24511  009502  0100               	movlb	0	; () banked
 24512  009504  6F73               	movwf	___altoft@exp& (0+255),b
 24513                           
 24514                           ; BSR set to: 0
 24515  009506  0100               	movlb	0	; () banked
 24516  009508  AF6E               	btfss	(___altoft@c+3)& (0+255),7,b
 24517  00950A  D016               	goto	l10064
 24518                           
 24519                           ; BSR set to: 0
 24520  00950C  0100               	movlb	0	; () banked
 24521  00950E  1F6E               	comf	(___altoft@c+3)& (0+255),f,b
 24522  009510  1F6D               	comf	(___altoft@c+2)& (0+255),f,b
 24523  009512  1F6C               	comf	(___altoft@c+1)& (0+255),f,b
 24524  009514  6D6B               	negf	___altoft@c& (0+255),b
 24525  009516  0E00               	movlw	0
 24526  009518  236C               	addwfc	(___altoft@c+1)& (0+255),f,b
 24527  00951A  236D               	addwfc	(___altoft@c+2)& (0+255),f,b
 24528  00951C  236E               	addwfc	(___altoft@c+3)& (0+255),f,b
 24529                           
 24530                           ; BSR set to: 0
 24531  00951E  0E01               	movlw	1
 24532  009520  0100               	movlb	0	; () banked
 24533  009522  6F74               	movwf	___altoft@sign& (0+255),b
 24534                           
 24535                           ; BSR set to: 0
 24536  009524  D009               	goto	l10064
 24537  009526                     l10062:
 24538                           
 24539                           ; BSR set to: 0
 24540  009526  0100               	movlb	0	; () banked
 24541  009528  90D8               	bcf	status,0,c
 24542  00952A  336E               	rrcf	(___altoft@c+3)& (0+255),f,b
 24543  00952C  336D               	rrcf	(___altoft@c+2)& (0+255),f,b
 24544  00952E  336C               	rrcf	(___altoft@c+1)& (0+255),f,b
 24545  009530  336B               	rrcf	___altoft@c& (0+255),f,b
 24546  009532  0100               	movlb	0	; () banked
 24547  009534  2B73               	incf	___altoft@exp& (0+255),f,b
 24548  009536  D000               	goto	l10064
 24549  009538                     l10064:
 24550                           
 24551                           ; BSR set to: 0
 24552  009538  0E00               	movlw	0
 24553  00953A  0100               	movlb	0	; () banked
 24554  00953C  156B               	andwf	___altoft@c& (0+255),w,b
 24555  00953E  0100               	movlb	0	; () banked
 24556  009540  6F6F               	movwf	??___altoft& (0+255),b
 24557  009542  0E00               	movlw	0
 24558  009544  0100               	movlb	0	; () banked
 24559  009546  156C               	andwf	(___altoft@c+1)& (0+255),w,b
 24560  009548  0100               	movlb	0	; () banked
 24561  00954A  6F70               	movwf	(??___altoft+1)& (0+255),b
 24562  00954C  0E00               	movlw	0
 24563  00954E  0100               	movlb	0	; () banked
 24564  009550  156D               	andwf	(___altoft@c+2)& (0+255),w,b
 24565  009552  0100               	movlb	0	; () banked
 24566  009554  6F71               	movwf	(??___altoft+2)& (0+255),b
 24567  009556  0EFF               	movlw	255
 24568  009558  0100               	movlb	0	; () banked
 24569  00955A  156E               	andwf	(___altoft@c+3)& (0+255),w,b
 24570  00955C  0100               	movlb	0	; () banked
 24571  00955E  6F72               	movwf	(??___altoft+3)& (0+255),b
 24572  009560  0100               	movlb	0	; () banked
 24573  009562  516F               	movf	??___altoft& (0+255),w,b
 24574  009564  0100               	movlb	0	; () banked
 24575  009566  1170               	iorwf	(??___altoft+1)& (0+255),w,b
 24576  009568  0100               	movlb	0	; () banked
 24577  00956A  1171               	iorwf	(??___altoft+2)& (0+255),w,b
 24578  00956C  0100               	movlb	0	; () banked
 24579  00956E  1172               	iorwf	(??___altoft+3)& (0+255),w,b
 24580  009570  A4D8               	btfss	status,2,c
 24581  009572  D7D9               	goto	l10062
 24582                           
 24583                           ; BSR set to: 0
 24584                           
 24585                           ; BSR set to: 0
 24586  009574  C06B  F063         	movff	___altoft@c,___ftpack@arg
 24587  009578  C06C  F064         	movff	___altoft@c+1,___ftpack@arg+1
 24588  00957C  C06D  F065         	movff	___altoft@c+2,___ftpack@arg+2
 24589  009580  C073  F066         	movff	___altoft@exp,___ftpack@exp
 24590  009584  C074  F067         	movff	___altoft@sign,___ftpack@sign
 24591  009588  EC54  F041         	call	___ftpack	;wreg free
 24592  00958C  C063  F06B         	movff	?___ftpack,?___altoft
 24593  009590  C064  F06C         	movff	?___ftpack+1,?___altoft+1
 24594  009594  C065  F06D         	movff	?___ftpack+2,?___altoft+2
 24595  009598  0012               	return	
 24596  00959A  0012               	return		;funcret
 24597  00959C                     __end_of___altoft:
 24598                           	opt stack 0
 24599                           tblptru	equ	0xFF8
 24600                           tblptrh	equ	0xFF7
 24601                           tblptrl	equ	0xFF6
 24602                           tablat	equ	0xFF5
 24603                           prodh	equ	0xFF4
 24604                           prodl	equ	0xFF3
 24605                           intcon	equ	0xFF2
 24606                           intcon2	equ	0xFF1
 24607                           indf0	equ	0xFEF
 24608                           postinc0	equ	0xFEE
 24609                           plusw0	equ	0xFEB
 24610                           fsr0h	equ	0xFEA
 24611                           fsr0l	equ	0xFE9
 24612                           wreg	equ	0xFE8
 24613                           indf1	equ	0xFE7
 24614                           postdec1	equ	0xFE5
 24615                           fsr1h	equ	0xFE2
 24616                           fsr1l	equ	0xFE1
 24617                           indf2	equ	0xFDF
 24618                           postinc2	equ	0xFDE
 24619                           postdec2	equ	0xFDD
 24620                           plusw2	equ	0xFDB
 24621                           fsr2h	equ	0xFDA
 24622                           fsr2l	equ	0xFD9
 24623                           status	equ	0xFD8
 24624                           
 24625 ;; *************** function _OpenUSART *****************
 24626 ;; Defined at:
 24627 ;;		line 116 in file "UART.c"
 24628 ;; Parameters:    Size  Location     Type
 24629 ;;  config          1    wreg     unsigned char 
 24630 ;;  spbrg           2    3[BANK0 ] unsigned int 
 24631 ;; Auto vars:     Size  Location     Type
 24632 ;;  config          1    5[BANK0 ] unsigned char 
 24633 ;; Return value:  Size  Location     Type
 24634 ;;		None               void
 24635 ;; Registers used:
 24636 ;;		wreg, status,2
 24637 ;; Tracked objects:
 24638 ;;		On entry : 0/0
 24639 ;;		On exit  : 0/0
 24640 ;;		Unchanged: 0/0
 24641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24642 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24643 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24645 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24646 ;;Total ram usage:        3 bytes
 24647 ;; Hardware stack levels used:    1
 24648 ;; Hardware stack levels required when called:    6
 24649 ;; This function calls:
 24650 ;;		Nothing
 24651 ;; This function is called by:
 24652 ;;		_InitUART
 24653 ;; This function uses a non-reentrant model
 24654 ;;
 24655                           
 24656                           	psect	text44
 24657  00998C                     __ptext44:
 24658                           	opt stack 0
 24659  00998C                     _OpenUSART:
 24660                           	opt stack 22
 24661                           
 24662                           ;incstack = 0
 24663                           ;OpenUSART@config stored from wreg
 24664  00998C  0100               	movlb	0	; () banked
 24665  00998E  6F65               	movwf	OpenUSART@config& (0+255),b
 24666                           
 24667                           ; BSR set to: 0
 24668                           ;UART.c: 118: TXSTA = 0;
 24669  009990  0E00               	movlw	0
 24670  009992  6EAC               	movwf	4012,c	;volatile
 24671                           
 24672                           ;UART.c: 119: RCSTA = 0;
 24673  009994  0E00               	movlw	0
 24674  009996  6EAB               	movwf	4011,c	;volatile
 24675                           
 24676                           ; BSR set to: 0
 24677                           ;UART.c: 121: if(config&0x01)
 24678  009998  0100               	movlb	0	; () banked
 24679  00999A  A165               	btfss	OpenUSART@config& (0+255),0,b
 24680  00999C  D002               	goto	l10152
 24681                           
 24682                           ; BSR set to: 0
 24683                           ;UART.c: 122: {
 24684                           ;UART.c: 123: TXSTAbits.SYNC = 1;
 24685  00999E  88AC               	bsf	4012,4,c	;volatile
 24686  0099A0  D000               	goto	l10152
 24687  0099A2                     l10152:
 24688                           
 24689                           ; BSR set to: 0
 24690                           ;UART.c: 124: }
 24691                           ;UART.c: 126: if(config&0x02)
 24692  0099A2  0100               	movlb	0	; () banked
 24693  0099A4  A365               	btfss	OpenUSART@config& (0+255),1,b
 24694  0099A6  D003               	goto	l10156
 24695                           
 24696                           ; BSR set to: 0
 24697                           ;UART.c: 127: {
 24698                           ;UART.c: 128: TXSTAbits.TX9 = 1;
 24699  0099A8  8CAC               	bsf	4012,6,c	;volatile
 24700                           
 24701                           ;UART.c: 129: RCSTAbits.RX9 = 1;
 24702  0099AA  8CAB               	bsf	4011,6,c	;volatile
 24703  0099AC  D000               	goto	l10156
 24704  0099AE                     l10156:
 24705                           
 24706                           ; BSR set to: 0
 24707                           ;UART.c: 130: }
 24708                           ;UART.c: 132: if(config&0x04)
 24709  0099AE  0100               	movlb	0	; () banked
 24710  0099B0  A565               	btfss	OpenUSART@config& (0+255),2,b
 24711  0099B2  D002               	goto	l10160
 24712                           
 24713                           ; BSR set to: 0
 24714                           ;UART.c: 133: {
 24715                           ;UART.c: 134: TXSTAbits.CSRC = 1;
 24716  0099B4  8EAC               	bsf	4012,7,c	;volatile
 24717  0099B6  D000               	goto	l10160
 24718  0099B8                     l10160:
 24719                           
 24720                           ; BSR set to: 0
 24721                           ;UART.c: 135: }
 24722                           ;UART.c: 137: if(config&0x08)
 24723  0099B8  0100               	movlb	0	; () banked
 24724  0099BA  A765               	btfss	OpenUSART@config& (0+255),3,b
 24725  0099BC  D002               	goto	l725
 24726                           
 24727                           ; BSR set to: 0
 24728                           ;UART.c: 138: {
 24729                           ;UART.c: 139: RCSTAbits.CREN = 1;
 24730  0099BE  88AB               	bsf	4011,4,c	;volatile
 24731                           
 24732                           ;UART.c: 140: }
 24733  0099C0  D002               	goto	l10164
 24734  0099C2                     l725:
 24735                           
 24736                           ; BSR set to: 0
 24737                           ;UART.c: 141: else
 24738                           ;UART.c: 142: {
 24739                           ;UART.c: 143: RCSTAbits.SREN = 1;
 24740  0099C2  8AAB               	bsf	4011,5,c	;volatile
 24741  0099C4  D000               	goto	l10164
 24742  0099C6                     l10164:
 24743                           
 24744                           ; BSR set to: 0
 24745                           ;UART.c: 144: }
 24746                           ;UART.c: 146: if(config&0x10)
 24747  0099C6  0100               	movlb	0	; () banked
 24748  0099C8  A965               	btfss	OpenUSART@config& (0+255),4,b
 24749  0099CA  D002               	goto	l10168
 24750                           
 24751                           ; BSR set to: 0
 24752                           ;UART.c: 147: {
 24753                           ;UART.c: 148: TXSTAbits.BRGH = 1;
 24754  0099CC  84AC               	bsf	4012,2,c	;volatile
 24755  0099CE  D000               	goto	l10168
 24756  0099D0                     l10168:
 24757                           
 24758                           ; BSR set to: 0
 24759                           ;UART.c: 149: }
 24760                           ;UART.c: 151: if(config&0x20)
 24761  0099D0  0100               	movlb	0	; () banked
 24762  0099D2  AB65               	btfss	OpenUSART@config& (0+255),5,b
 24763  0099D4  D002               	goto	l10172
 24764                           
 24765                           ; BSR set to: 0
 24766                           ;UART.c: 152: {
 24767                           ;UART.c: 153: RCSTAbits.ADEN = 1;
 24768  0099D6  86AB               	bsf	4011,3,c	;volatile
 24769  0099D8  D000               	goto	l10172
 24770  0099DA                     l10172:
 24771                           
 24772                           ; BSR set to: 0
 24773                           ;UART.c: 154: }
 24774                           ;UART.c: 156: if(config&0x40)
 24775  0099DA  0100               	movlb	0	; () banked
 24776  0099DC  AD65               	btfss	OpenUSART@config& (0+255),6,b
 24777  0099DE  D003               	goto	l729
 24778                           
 24779                           ; BSR set to: 0
 24780                           ;UART.c: 157: {
 24781                           ;UART.c: 158: PIR1bits.RCIF = 0;
 24782  0099E0  9A9E               	bcf	3998,5,c	;volatile
 24783                           
 24784                           ;UART.c: 159: PIE1bits.RCIE = 1;
 24785  0099E2  8A9D               	bsf	3997,5,c	;volatile
 24786                           
 24787                           ;UART.c: 161: }
 24788  0099E4  D002               	goto	l10176
 24789  0099E6                     l729:
 24790                           
 24791                           ; BSR set to: 0
 24792                           ;UART.c: 162: else
 24793                           ;UART.c: 163: {
 24794                           ;UART.c: 164: PIE1bits.RCIE = 0;
 24795  0099E6  9A9D               	bcf	3997,5,c	;volatile
 24796  0099E8  D000               	goto	l10176
 24797  0099EA                     l10176:
 24798                           
 24799                           ; BSR set to: 0
 24800                           ;UART.c: 165: }
 24801                           ;UART.c: 167: if(config&0x80)
 24802  0099EA  0100               	movlb	0	; () banked
 24803  0099EC  AF65               	btfss	OpenUSART@config& (0+255),7,b
 24804  0099EE  D003               	goto	l731
 24805                           
 24806                           ; BSR set to: 0
 24807                           ;UART.c: 168: {
 24808                           ;UART.c: 169: PIR1bits.TXIF = 0;
 24809  0099F0  989E               	bcf	3998,4,c	;volatile
 24810                           
 24811                           ;UART.c: 170: PIE1bits.TXIE = 1;
 24812  0099F2  889D               	bsf	3997,4,c	;volatile
 24813                           
 24814                           ;UART.c: 171: }
 24815  0099F4  D001               	goto	l732
 24816  0099F6                     l731:
 24817                           
 24818                           ; BSR set to: 0
 24819                           ;UART.c: 172: else
 24820                           ;UART.c: 173: {
 24821                           ;UART.c: 174: PIE1bits.TXIE = 0;
 24822  0099F6  989D               	bcf	3997,4,c	;volatile
 24823  0099F8                     l732:
 24824                           
 24825                           ; BSR set to: 0
 24826                           ;UART.c: 175: }
 24827                           ;UART.c: 177: SPBRG = spbrg;
 24828  0099F8  C063  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 24829                           
 24830                           ; BSR set to: 0
 24831                           ;UART.c: 178: SPBRGH = spbrg >> 8;
 24832  0099FC  0100               	movlb	0	; () banked
 24833  0099FE  5164               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
 24834  009A00  6EB0               	movwf	4016,c	;volatile
 24835                           
 24836                           ; BSR set to: 0
 24837                           ;UART.c: 180: TXSTAbits.TXEN = 1;
 24838  009A02  8AAC               	bsf	4012,5,c	;volatile
 24839                           
 24840                           ; BSR set to: 0
 24841                           ;UART.c: 181: RCSTAbits.SPEN = 1;
 24842  009A04  8EAB               	bsf	4011,7,c	;volatile
 24843                           
 24844                           ; BSR set to: 0
 24845  009A06  0012               	return		;funcret
 24846  009A08                     __end_of_OpenUSART:
 24847                           	opt stack 0
 24848                           tblptru	equ	0xFF8
 24849                           tblptrh	equ	0xFF7
 24850                           tblptrl	equ	0xFF6
 24851                           tablat	equ	0xFF5
 24852                           prodh	equ	0xFF4
 24853                           prodl	equ	0xFF3
 24854                           intcon	equ	0xFF2
 24855                           intcon2	equ	0xFF1
 24856                           indf0	equ	0xFEF
 24857                           postinc0	equ	0xFEE
 24858                           plusw0	equ	0xFEB
 24859                           fsr0h	equ	0xFEA
 24860                           fsr0l	equ	0xFE9
 24861                           wreg	equ	0xFE8
 24862                           indf1	equ	0xFE7
 24863                           postdec1	equ	0xFE5
 24864                           fsr1h	equ	0xFE2
 24865                           fsr1l	equ	0xFE1
 24866                           indf2	equ	0xFDF
 24867                           postinc2	equ	0xFDE
 24868                           postdec2	equ	0xFDD
 24869                           plusw2	equ	0xFDB
 24870                           fsr2h	equ	0xFDA
 24871                           fsr2l	equ	0xFD9
 24872                           status	equ	0xFD8
 24873                           
 24874 ;; *************** function _Local_CloseUSART *****************
 24875 ;; Defined at:
 24876 ;;		line 65 in file "UART.c"
 24877 ;; Parameters:    Size  Location     Type
 24878 ;;		None
 24879 ;; Auto vars:     Size  Location     Type
 24880 ;;		None
 24881 ;; Return value:  Size  Location     Type
 24882 ;;		None               void
 24883 ;; Registers used:
 24884 ;;		None
 24885 ;; Tracked objects:
 24886 ;;		On entry : 0/0
 24887 ;;		On exit  : 0/0
 24888 ;;		Unchanged: 0/0
 24889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24894 ;;Total ram usage:        0 bytes
 24895 ;; Hardware stack levels used:    1
 24896 ;; Hardware stack levels required when called:    6
 24897 ;; This function calls:
 24898 ;;		Nothing
 24899 ;; This function is called by:
 24900 ;;		_InitUART
 24901 ;; This function uses a non-reentrant model
 24902 ;;
 24903                           
 24904                           	psect	text45
 24905  00A484                     __ptext45:
 24906                           	opt stack 0
 24907  00A484                     _Local_CloseUSART:
 24908                           	opt stack 22
 24909                           
 24910                           ;UART.c: 67: PIE1bits.RCIE = 0;
 24911                           
 24912                           ; BSR set to: 0
 24913                           ;incstack = 0
 24914  00A484  9A9D               	bcf	3997,5,c	;volatile
 24915                           
 24916                           ;UART.c: 68: PIE1bits.TXIE = 0;
 24917  00A486  989D               	bcf	3997,4,c	;volatile
 24918                           
 24919                           ;UART.c: 69: RCSTAbits.SPEN = 0;
 24920  00A488  9EAB               	bcf	4011,7,c	;volatile
 24921                           
 24922                           ;UART.c: 70: RCSTAbits.CREN = 0;
 24923  00A48A  98AB               	bcf	4011,4,c	;volatile
 24924                           
 24925                           ;UART.c: 71: RCSTAbits.FERR = 0;
 24926  00A48C  94AB               	bcf	4011,2,c	;volatile
 24927                           
 24928                           ;UART.c: 72: TXSTAbits.TXEN = 0;
 24929  00A48E  9AAC               	bcf	4012,5,c	;volatile
 24930  00A490  0012               	return		;funcret
 24931  00A492                     __end_of_Local_CloseUSART:
 24932                           	opt stack 0
 24933                           tblptru	equ	0xFF8
 24934                           tblptrh	equ	0xFF7
 24935                           tblptrl	equ	0xFF6
 24936                           tablat	equ	0xFF5
 24937                           prodh	equ	0xFF4
 24938                           prodl	equ	0xFF3
 24939                           intcon	equ	0xFF2
 24940                           intcon2	equ	0xFF1
 24941                           indf0	equ	0xFEF
 24942                           postinc0	equ	0xFEE
 24943                           plusw0	equ	0xFEB
 24944                           fsr0h	equ	0xFEA
 24945                           fsr0l	equ	0xFE9
 24946                           wreg	equ	0xFE8
 24947                           indf1	equ	0xFE7
 24948                           postdec1	equ	0xFE5
 24949                           fsr1h	equ	0xFE2
 24950                           fsr1l	equ	0xFE1
 24951                           indf2	equ	0xFDF
 24952                           postinc2	equ	0xFDE
 24953                           postdec2	equ	0xFDD
 24954                           plusw2	equ	0xFDB
 24955                           fsr2h	equ	0xFDA
 24956                           fsr2l	equ	0xFD9
 24957                           status	equ	0xFD8
 24958                           
 24959 ;; *************** function _InitTimers *****************
 24960 ;; Defined at:
 24961 ;;		line 51 in file "Timer.c"
 24962 ;; Parameters:    Size  Location     Type
 24963 ;;		None
 24964 ;; Auto vars:     Size  Location     Type
 24965 ;;		None
 24966 ;; Return value:  Size  Location     Type
 24967 ;;		None               void
 24968 ;; Registers used:
 24969 ;;		wreg, status,2, cstack
 24970 ;; Tracked objects:
 24971 ;;		On entry : 0/0
 24972 ;;		On exit  : 0/0
 24973 ;;		Unchanged: 0/0
 24974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24979 ;;Total ram usage:        0 bytes
 24980 ;; Hardware stack levels used:    1
 24981 ;; Hardware stack levels required when called:    7
 24982 ;; This function calls:
 24983 ;;		_InitTimer1
 24984 ;;		_InitTimer2
 24985 ;;		_InitTimer3
 24986 ;; This function is called by:
 24987 ;;		_Init_System
 24988 ;; This function uses a non-reentrant model
 24989 ;;
 24990                           
 24991                           	psect	text46
 24992  00A3F6                     __ptext46:
 24993                           	opt stack 0
 24994  00A3F6                     _InitTimers:
 24995                           	opt stack 22
 24996                           
 24997                           ;Timer.c: 53: InitTimer1();
 24998                           
 24999                           ;incstack = 0
 25000  00A3F6  EC50  F052         	call	_InitTimer1	;wreg free
 25001                           
 25002                           ;Timer.c: 54: (PIE1bits.TMR1IE = TRUE);
 25003  00A3FA  809D               	bsf	3997,0,c	;volatile
 25004                           
 25005                           ;Timer.c: 55: InitTimer2();
 25006  00A3FC  EC49  F052         	call	_InitTimer2	;wreg free
 25007                           
 25008                           ;Timer.c: 56: (PIE1bits.TMR2IE = TRUE);
 25009  00A400  829D               	bsf	3997,1,c	;volatile
 25010                           
 25011                           ;Timer.c: 57: InitTimer3();
 25012  00A402  EC7F  F052         	call	_InitTimer3	;wreg free
 25013                           
 25014                           ;Timer.c: 58: (PIE2bits.TMR3IE = TRUE);
 25015  00A406  82A0               	bsf	4000,1,c	;volatile
 25016  00A408  0012               	return		;funcret
 25017  00A40A                     __end_of_InitTimers:
 25018                           	opt stack 0
 25019                           tblptru	equ	0xFF8
 25020                           tblptrh	equ	0xFF7
 25021                           tblptrl	equ	0xFF6
 25022                           tablat	equ	0xFF5
 25023                           prodh	equ	0xFF4
 25024                           prodl	equ	0xFF3
 25025                           intcon	equ	0xFF2
 25026                           intcon2	equ	0xFF1
 25027                           indf0	equ	0xFEF
 25028                           postinc0	equ	0xFEE
 25029                           plusw0	equ	0xFEB
 25030                           fsr0h	equ	0xFEA
 25031                           fsr0l	equ	0xFE9
 25032                           wreg	equ	0xFE8
 25033                           indf1	equ	0xFE7
 25034                           postdec1	equ	0xFE5
 25035                           fsr1h	equ	0xFE2
 25036                           fsr1l	equ	0xFE1
 25037                           indf2	equ	0xFDF
 25038                           postinc2	equ	0xFDE
 25039                           postdec2	equ	0xFDD
 25040                           plusw2	equ	0xFDB
 25041                           fsr2h	equ	0xFDA
 25042                           fsr2l	equ	0xFD9
 25043                           status	equ	0xFD8
 25044                           
 25045 ;; *************** function _InitTimer3 *****************
 25046 ;; Defined at:
 25047 ;;		line 163 in file "Timer.c"
 25048 ;; Parameters:    Size  Location     Type
 25049 ;;		None
 25050 ;; Auto vars:     Size  Location     Type
 25051 ;;		None
 25052 ;; Return value:  Size  Location     Type
 25053 ;;		None               void
 25054 ;; Registers used:
 25055 ;;		wreg, status,2
 25056 ;; Tracked objects:
 25057 ;;		On entry : 0/0
 25058 ;;		On exit  : 0/0
 25059 ;;		Unchanged: 0/0
 25060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25065 ;;Total ram usage:        0 bytes
 25066 ;; Hardware stack levels used:    1
 25067 ;; Hardware stack levels required when called:    6
 25068 ;; This function calls:
 25069 ;;		Nothing
 25070 ;; This function is called by:
 25071 ;;		_InitTimers
 25072 ;; This function uses a non-reentrant model
 25073 ;;
 25074                           
 25075                           	psect	text47
 25076  00A4FE                     __ptext47:
 25077                           	opt stack 0
 25078  00A4FE                     _InitTimer3:
 25079                           	opt stack 22
 25080                           
 25081                           ;Timer.c: 165: T3CONbits.RD16 = TRUE;
 25082                           
 25083                           ;incstack = 0
 25084  00A4FE  8EB1               	bsf	4017,7,c	;volatile
 25085                           
 25086                           ;Timer.c: 166: T3CONbits.T3CKPS = 0x3;
 25087  00A500  0E30               	movlw	48
 25088  00A502  12B1               	iorwf	4017,f,c	;volatile
 25089                           
 25090                           ;Timer.c: 167: T3CONbits.TMR3CS = FALSE;
 25091  00A504  92B1               	bcf	4017,1,c	;volatile
 25092  00A506  0012               	return		;funcret
 25093  00A508                     __end_of_InitTimer3:
 25094                           	opt stack 0
 25095                           tblptru	equ	0xFF8
 25096                           tblptrh	equ	0xFF7
 25097                           tblptrl	equ	0xFF6
 25098                           tablat	equ	0xFF5
 25099                           prodh	equ	0xFF4
 25100                           prodl	equ	0xFF3
 25101                           intcon	equ	0xFF2
 25102                           intcon2	equ	0xFF1
 25103                           indf0	equ	0xFEF
 25104                           postinc0	equ	0xFEE
 25105                           plusw0	equ	0xFEB
 25106                           fsr0h	equ	0xFEA
 25107                           fsr0l	equ	0xFE9
 25108                           wreg	equ	0xFE8
 25109                           indf1	equ	0xFE7
 25110                           postdec1	equ	0xFE5
 25111                           fsr1h	equ	0xFE2
 25112                           fsr1l	equ	0xFE1
 25113                           indf2	equ	0xFDF
 25114                           postinc2	equ	0xFDE
 25115                           postdec2	equ	0xFDD
 25116                           plusw2	equ	0xFDB
 25117                           fsr2h	equ	0xFDA
 25118                           fsr2l	equ	0xFD9
 25119                           status	equ	0xFD8
 25120                           
 25121 ;; *************** function _InitTimer2 *****************
 25122 ;; Defined at:
 25123 ;;		line 138 in file "Timer.c"
 25124 ;; Parameters:    Size  Location     Type
 25125 ;;		None
 25126 ;; Auto vars:     Size  Location     Type
 25127 ;;		None
 25128 ;; Return value:  Size  Location     Type
 25129 ;;		None               void
 25130 ;; Registers used:
 25131 ;;		wreg, status,2
 25132 ;; Tracked objects:
 25133 ;;		On entry : 0/0
 25134 ;;		On exit  : 0/0
 25135 ;;		Unchanged: 0/0
 25136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25141 ;;Total ram usage:        0 bytes
 25142 ;; Hardware stack levels used:    1
 25143 ;; Hardware stack levels required when called:    6
 25144 ;; This function calls:
 25145 ;;		Nothing
 25146 ;; This function is called by:
 25147 ;;		_InitTimers
 25148 ;; This function uses a non-reentrant model
 25149 ;;
 25150                           
 25151                           	psect	text48
 25152  00A492                     __ptext48:
 25153                           	opt stack 0
 25154  00A492                     _InitTimer2:
 25155                           	opt stack 22
 25156                           
 25157                           ;Timer.c: 140: T2CONbits.T2OUTPS = 0xE;
 25158                           
 25159                           ;incstack = 0
 25160  00A492  50CA               	movf	4042,w,c	;volatile
 25161  00A494  0B87               	andlw	-121
 25162  00A496  0970               	iorlw	112
 25163  00A498  6ECA               	movwf	4042,c	;volatile
 25164                           
 25165                           ;Timer.c: 141: T2CONbits.T2CKPS = 0x3;
 25166  00A49A  0E03               	movlw	3
 25167  00A49C  12CA               	iorwf	4042,f,c	;volatile
 25168  00A49E  0012               	return		;funcret
 25169  00A4A0                     __end_of_InitTimer2:
 25170                           	opt stack 0
 25171                           tblptru	equ	0xFF8
 25172                           tblptrh	equ	0xFF7
 25173                           tblptrl	equ	0xFF6
 25174                           tablat	equ	0xFF5
 25175                           prodh	equ	0xFF4
 25176                           prodl	equ	0xFF3
 25177                           intcon	equ	0xFF2
 25178                           intcon2	equ	0xFF1
 25179                           indf0	equ	0xFEF
 25180                           postinc0	equ	0xFEE
 25181                           plusw0	equ	0xFEB
 25182                           fsr0h	equ	0xFEA
 25183                           fsr0l	equ	0xFE9
 25184                           wreg	equ	0xFE8
 25185                           indf1	equ	0xFE7
 25186                           postdec1	equ	0xFE5
 25187                           fsr1h	equ	0xFE2
 25188                           fsr1l	equ	0xFE1
 25189                           indf2	equ	0xFDF
 25190                           postinc2	equ	0xFDE
 25191                           postdec2	equ	0xFDD
 25192                           plusw2	equ	0xFDB
 25193                           fsr2h	equ	0xFDA
 25194                           fsr2l	equ	0xFD9
 25195                           status	equ	0xFD8
 25196                           
 25197 ;; *************** function _InitTimer1 *****************
 25198 ;; Defined at:
 25199 ;;		line 109 in file "Timer.c"
 25200 ;; Parameters:    Size  Location     Type
 25201 ;;		None
 25202 ;; Auto vars:     Size  Location     Type
 25203 ;;		None
 25204 ;; Return value:  Size  Location     Type
 25205 ;;		None               void
 25206 ;; Registers used:
 25207 ;;		wreg, status,2
 25208 ;; Tracked objects:
 25209 ;;		On entry : 0/0
 25210 ;;		On exit  : 0/0
 25211 ;;		Unchanged: 0/0
 25212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25217 ;;Total ram usage:        0 bytes
 25218 ;; Hardware stack levels used:    1
 25219 ;; Hardware stack levels required when called:    6
 25220 ;; This function calls:
 25221 ;;		Nothing
 25222 ;; This function is called by:
 25223 ;;		_InitTimers
 25224 ;; This function uses a non-reentrant model
 25225 ;;
 25226                           
 25227                           	psect	text49
 25228  00A4A0                     __ptext49:
 25229                           	opt stack 0
 25230  00A4A0                     _InitTimer1:
 25231                           	opt stack 22
 25232                           
 25233                           ;Timer.c: 111: T1CONbits.RD16 = TRUE;
 25234                           
 25235                           ;incstack = 0
 25236  00A4A0  8ECD               	bsf	4045,7,c	;volatile
 25237                           
 25238                           ;Timer.c: 112: T1CONbits.T1RUN = FALSE;
 25239  00A4A2  9CCD               	bcf	4045,6,c	;volatile
 25240                           
 25241                           ;Timer.c: 113: T1CONbits.T1CKPS = 0x3;
 25242  00A4A4  0E30               	movlw	48
 25243  00A4A6  12CD               	iorwf	4045,f,c	;volatile
 25244                           
 25245                           ;Timer.c: 114: T1CONbits.T1OSCEN = FALSE;
 25246  00A4A8  96CD               	bcf	4045,3,c	;volatile
 25247                           
 25248                           ;Timer.c: 115: T1CONbits.TMR1CS = FALSE;
 25249  00A4AA  92CD               	bcf	4045,1,c	;volatile
 25250  00A4AC  0012               	return		;funcret
 25251  00A4AE                     __end_of_InitTimer1:
 25252                           	opt stack 0
 25253                           tblptru	equ	0xFF8
 25254                           tblptrh	equ	0xFF7
 25255                           tblptrl	equ	0xFF6
 25256                           tablat	equ	0xFF5
 25257                           prodh	equ	0xFF4
 25258                           prodl	equ	0xFF3
 25259                           intcon	equ	0xFF2
 25260                           intcon2	equ	0xFF1
 25261                           indf0	equ	0xFEF
 25262                           postinc0	equ	0xFEE
 25263                           plusw0	equ	0xFEB
 25264                           fsr0h	equ	0xFEA
 25265                           fsr0l	equ	0xFE9
 25266                           wreg	equ	0xFE8
 25267                           indf1	equ	0xFE7
 25268                           postdec1	equ	0xFE5
 25269                           fsr1h	equ	0xFE2
 25270                           fsr1l	equ	0xFE1
 25271                           indf2	equ	0xFDF
 25272                           postinc2	equ	0xFDE
 25273                           postdec2	equ	0xFDD
 25274                           plusw2	equ	0xFDB
 25275                           fsr2h	equ	0xFDA
 25276                           fsr2l	equ	0xFD9
 25277                           status	equ	0xFD8
 25278                           
 25279 ;; *************** function _InitIR *****************
 25280 ;; Defined at:
 25281 ;;		line 80 in file "IR.c"
 25282 ;; Parameters:    Size  Location     Type
 25283 ;;		None
 25284 ;; Auto vars:     Size  Location     Type
 25285 ;;		None
 25286 ;; Return value:  Size  Location     Type
 25287 ;;		None               void
 25288 ;; Registers used:
 25289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25290 ;; Tracked objects:
 25291 ;;		On entry : 0/0
 25292 ;;		On exit  : 0/0
 25293 ;;		Unchanged: 0/0
 25294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25299 ;;Total ram usage:        0 bytes
 25300 ;; Hardware stack levels used:    1
 25301 ;; Hardware stack levels required when called:    7
 25302 ;; This function calls:
 25303 ;;		_InitTimer0
 25304 ;;		_ReadIRpin
 25305 ;;		_ResetTimer0
 25306 ;;		_cleanBuffer16bit
 25307 ;; This function is called by:
 25308 ;;		_Init_System
 25309 ;; This function uses a non-reentrant model
 25310 ;;
 25311                           
 25312                           	psect	text50
 25313  009E3A                     __ptext50:
 25314                           	opt stack 0
 25315  009E3A                     _InitIR:
 25316                           	opt stack 22
 25317                           
 25318                           ;IR.c: 83: (IOCBbits.IOCB4 = 1);
 25319                           
 25320                           ;incstack = 0
 25321  009E3A  887D               	bsf	3965,4,c	;volatile
 25322                           
 25323                           ;IR.c: 85: IRpinOLD = ReadIRpin();
 25324  009E3C  EC57  F052         	call	_ReadIRpin	;wreg free
 25325  009E40  6E4C               	movwf	_IRpinOLD,c
 25326                           
 25327                           ;IR.c: 87: InitTimer0();
 25328  009E42  EC33  F052         	call	_InitTimer0	;wreg free
 25329                           
 25330                           ;IR.c: 89: cleanBuffer16bit(IRRawCode, 100);
 25331  009E46  0E00               	movlw	low _IRRawCode
 25332  009E48  0100               	movlb	0	; () banked
 25333  009E4A  6F63               	movwf	cleanBuffer16bit@data& (0+255),b
 25334  009E4C  0E05               	movlw	high _IRRawCode
 25335  009E4E  0100               	movlb	0	; () banked
 25336  009E50  6F64               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
 25337  009E52  0E00               	movlw	0
 25338  009E54  0100               	movlb	0	; () banked
 25339  009E56  6F66               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
 25340  009E58  0E64               	movlw	100
 25341  009E5A  6F65               	movwf	cleanBuffer16bit@count& (0+255),b
 25342  009E5C  ECEA  F04D         	call	_cleanBuffer16bit	;wreg free
 25343                           
 25344                           ;IR.c: 90: IR_NEC = 0;
 25345  009E60  0E00               	movlw	0
 25346  009E62  6E55               	movwf	_IR_NEC,c
 25347  009E64  0E00               	movlw	0
 25348  009E66  6E56               	movwf	_IR_NEC+1,c
 25349  009E68  0E00               	movlw	0
 25350  009E6A  6E57               	movwf	_IR_NEC+2,c
 25351  009E6C  0E00               	movlw	0
 25352  009E6E  6E58               	movwf	_IR_NEC+3,c
 25353                           
 25354                           ;IR.c: 91: (T0CONbits.TMR0ON = 0);
 25355  009E70  9ED5               	bcf	4053,7,c	;volatile
 25356                           
 25357                           ;IR.c: 93: ResetTimer0();
 25358  009E72  EC84  F052         	call	_ResetTimer0	;wreg free
 25359                           
 25360                           ;IR.c: 95: (INTCONbits.TMR0IE = 0);
 25361  009E76  9AF2               	bcf	intcon,5,c	;volatile
 25362                           
 25363                           ;IR.c: 96: INTCONbits.TMR0IF = 0;
 25364  009E78  94F2               	bcf	intcon,2,c	;volatile
 25365                           
 25366                           ;IR.c: 98: INTCONbits.RBIF = 0;
 25367  009E7A  90F2               	bcf	intcon,0,c	;volatile
 25368                           
 25369                           ;IR.c: 99: INTCONbits.RBIE = 1;
 25370  009E7C  86F2               	bsf	intcon,3,c	;volatile
 25371  009E7E  0012               	return		;funcret
 25372  009E80                     __end_of_InitIR:
 25373                           	opt stack 0
 25374                           tblptru	equ	0xFF8
 25375                           tblptrh	equ	0xFF7
 25376                           tblptrl	equ	0xFF6
 25377                           tablat	equ	0xFF5
 25378                           prodh	equ	0xFF4
 25379                           prodl	equ	0xFF3
 25380                           intcon	equ	0xFF2
 25381                           intcon2	equ	0xFF1
 25382                           indf0	equ	0xFEF
 25383                           postinc0	equ	0xFEE
 25384                           plusw0	equ	0xFEB
 25385                           fsr0h	equ	0xFEA
 25386                           fsr0l	equ	0xFE9
 25387                           wreg	equ	0xFE8
 25388                           indf1	equ	0xFE7
 25389                           postdec1	equ	0xFE5
 25390                           fsr1h	equ	0xFE2
 25391                           fsr1l	equ	0xFE1
 25392                           indf2	equ	0xFDF
 25393                           postinc2	equ	0xFDE
 25394                           postdec2	equ	0xFDD
 25395                           plusw2	equ	0xFDB
 25396                           fsr2h	equ	0xFDA
 25397                           fsr2l	equ	0xFD9
 25398                           status	equ	0xFD8
 25399                           
 25400 ;; *************** function _cleanBuffer16bit *****************
 25401 ;; Defined at:
 25402 ;;		line 141 in file "MISC.c"
 25403 ;; Parameters:    Size  Location     Type
 25404 ;;  data            2    3[BANK0 ] PTR unsigned int 
 25405 ;;		 -> IRRawCode(200), 
 25406 ;;  count           2    5[BANK0 ] int 
 25407 ;; Auto vars:     Size  Location     Type
 25408 ;;  i               1   10[BANK0 ] unsigned char 
 25409 ;; Return value:  Size  Location     Type
 25410 ;;		None               void
 25411 ;; Registers used:
 25412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25413 ;; Tracked objects:
 25414 ;;		On entry : 0/0
 25415 ;;		On exit  : 0/0
 25416 ;;		Unchanged: 0/0
 25417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25418 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25420 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25421 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25422 ;;Total ram usage:        8 bytes
 25423 ;; Hardware stack levels used:    1
 25424 ;; Hardware stack levels required when called:    6
 25425 ;; This function calls:
 25426 ;;		Nothing
 25427 ;; This function is called by:
 25428 ;;		_InitIR
 25429 ;; This function uses a non-reentrant model
 25430 ;;
 25431                           
 25432                           	psect	text51
 25433  009BD4                     __ptext51:
 25434                           	opt stack 0
 25435  009BD4                     _cleanBuffer16bit:
 25436                           	opt stack 22
 25437                           
 25438                           ;MISC.c: 143: unsigned char i=0;
 25439                           
 25440                           ;incstack = 0
 25441  009BD4  0E00               	movlw	0
 25442  009BD6  0100               	movlb	0	; () banked
 25443  009BD8  6F6A               	movwf	cleanBuffer16bit@i& (0+255),b
 25444                           
 25445                           ;MISC.c: 144: for(i=0; i<count;i++)
 25446  009BDA  0E00               	movlw	0
 25447  009BDC  0100               	movlb	0	; () banked
 25448  009BDE  6F6A               	movwf	cleanBuffer16bit@i& (0+255),b
 25449  009BE0  D012               	goto	l10116
 25450  009BE2                     l10112:
 25451                           
 25452                           ; BSR set to: 0
 25453                           ;MISC.c: 145: {
 25454                           ;MISC.c: 146: data[i]= 0;
 25455  009BE2  0100               	movlb	0	; () banked
 25456  009BE4  516A               	movf	cleanBuffer16bit@i& (0+255),w,b
 25457  009BE6  0D02               	mullw	2
 25458  009BE8  50F3               	movf	prodl,w,c
 25459  009BEA  0100               	movlb	0	; () banked
 25460  009BEC  2563               	addwf	cleanBuffer16bit@data& (0+255),w,b
 25461  009BEE  6ED9               	movwf	fsr2l,c
 25462  009BF0  50F4               	movf	prodh,w,c
 25463  009BF2  0100               	movlb	0	; () banked
 25464  009BF4  2164               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
 25465  009BF6  6EDA               	movwf	fsr2h,c
 25466  009BF8  0E00               	movlw	0
 25467  009BFA  6EDE               	movwf	postinc2,c
 25468  009BFC  0E00               	movlw	0
 25469  009BFE  6EDD               	movwf	postdec2,c
 25470                           
 25471                           ; BSR set to: 0
 25472  009C00  0100               	movlb	0	; () banked
 25473  009C02  2B6A               	incf	cleanBuffer16bit@i& (0+255),f,b
 25474  009C04  D000               	goto	l10116
 25475  009C06                     l10116:
 25476                           
 25477                           ; BSR set to: 0
 25478  009C06  0100               	movlb	0	; () banked
 25479  009C08  516A               	movf	cleanBuffer16bit@i& (0+255),w,b
 25480  009C0A  0100               	movlb	0	; () banked
 25481  009C0C  6F67               	movwf	??_cleanBuffer16bit& (0+255),b
 25482  009C0E  6B68               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
 25483  009C10  0100               	movlb	0	; () banked
 25484  009C12  5165               	movf	cleanBuffer16bit@count& (0+255),w,b
 25485  009C14  0100               	movlb	0	; () banked
 25486  009C16  5D67               	subwf	??_cleanBuffer16bit& (0+255),w,b
 25487  009C18  0100               	movlb	0	; () banked
 25488  009C1A  5168               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
 25489  009C1C  0A80               	xorlw	128
 25490  009C1E  0100               	movlb	0	; () banked
 25491  009C20  6F69               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
 25492  009C22  0100               	movlb	0	; () banked
 25493  009C24  5166               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
 25494  009C26  0A80               	xorlw	128
 25495  009C28  0100               	movlb	0	; () banked
 25496  009C2A  5969               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
 25497  009C2C  A0D8               	btfss	status,0,c
 25498  009C2E  D7D9               	goto	l10112
 25499                           
 25500                           ; BSR set to: 0
 25501                           
 25502                           ; BSR set to: 0
 25503  009C30  0012               	return		;funcret
 25504  009C32                     __end_of_cleanBuffer16bit:
 25505                           	opt stack 0
 25506                           tblptru	equ	0xFF8
 25507                           tblptrh	equ	0xFF7
 25508                           tblptrl	equ	0xFF6
 25509                           tablat	equ	0xFF5
 25510                           prodh	equ	0xFF4
 25511                           prodl	equ	0xFF3
 25512                           intcon	equ	0xFF2
 25513                           intcon2	equ	0xFF1
 25514                           indf0	equ	0xFEF
 25515                           postinc0	equ	0xFEE
 25516                           plusw0	equ	0xFEB
 25517                           fsr0h	equ	0xFEA
 25518                           fsr0l	equ	0xFE9
 25519                           wreg	equ	0xFE8
 25520                           indf1	equ	0xFE7
 25521                           postdec1	equ	0xFE5
 25522                           fsr1h	equ	0xFE2
 25523                           fsr1l	equ	0xFE1
 25524                           indf2	equ	0xFDF
 25525                           postinc2	equ	0xFDE
 25526                           postdec2	equ	0xFDD
 25527                           plusw2	equ	0xFDB
 25528                           fsr2h	equ	0xFDA
 25529                           fsr2l	equ	0xFD9
 25530                           status	equ	0xFD8
 25531                           
 25532 ;; *************** function _ResetTimer0 *****************
 25533 ;; Defined at:
 25534 ;;		line 79 in file "Timer.c"
 25535 ;; Parameters:    Size  Location     Type
 25536 ;;		None
 25537 ;; Auto vars:     Size  Location     Type
 25538 ;;		None
 25539 ;; Return value:  Size  Location     Type
 25540 ;;		None               void
 25541 ;; Registers used:
 25542 ;;		wreg, status,2
 25543 ;; Tracked objects:
 25544 ;;		On entry : 0/0
 25545 ;;		On exit  : 0/0
 25546 ;;		Unchanged: 0/0
 25547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25552 ;;Total ram usage:        0 bytes
 25553 ;; Hardware stack levels used:    1
 25554 ;; Hardware stack levels required when called:    6
 25555 ;; This function calls:
 25556 ;;		Nothing
 25557 ;; This function is called by:
 25558 ;;		_InitIR
 25559 ;; This function uses a non-reentrant model
 25560 ;;
 25561                           
 25562                           	psect	text52
 25563  00A508                     __ptext52:
 25564                           	opt stack 0
 25565  00A508                     _ResetTimer0:
 25566                           	opt stack 22
 25567                           
 25568                           ;Timer.c: 85: TMR0H = 0;
 25569                           
 25570                           ; BSR set to: 0
 25571                           ;incstack = 0
 25572  00A508  0E00               	movlw	0
 25573  00A50A  6ED7               	movwf	4055,c	;volatile
 25574                           
 25575                           ;Timer.c: 86: TMR0L = 2;
 25576  00A50C  0E02               	movlw	2
 25577  00A50E  6ED6               	movwf	4054,c	;volatile
 25578  00A510  0012               	return		;funcret
 25579  00A512                     __end_of_ResetTimer0:
 25580                           	opt stack 0
 25581                           tblptru	equ	0xFF8
 25582                           tblptrh	equ	0xFF7
 25583                           tblptrl	equ	0xFF6
 25584                           tablat	equ	0xFF5
 25585                           prodh	equ	0xFF4
 25586                           prodl	equ	0xFF3
 25587                           intcon	equ	0xFF2
 25588                           intcon2	equ	0xFF1
 25589                           indf0	equ	0xFEF
 25590                           postinc0	equ	0xFEE
 25591                           plusw0	equ	0xFEB
 25592                           fsr0h	equ	0xFEA
 25593                           fsr0l	equ	0xFE9
 25594                           wreg	equ	0xFE8
 25595                           indf1	equ	0xFE7
 25596                           postdec1	equ	0xFE5
 25597                           fsr1h	equ	0xFE2
 25598                           fsr1l	equ	0xFE1
 25599                           indf2	equ	0xFDF
 25600                           postinc2	equ	0xFDE
 25601                           postdec2	equ	0xFDD
 25602                           plusw2	equ	0xFDB
 25603                           fsr2h	equ	0xFDA
 25604                           fsr2l	equ	0xFD9
 25605                           status	equ	0xFD8
 25606                           
 25607 ;; *************** function _ReadIRpin *****************
 25608 ;; Defined at:
 25609 ;;		line 107 in file "IR.c"
 25610 ;; Parameters:    Size  Location     Type
 25611 ;;		None
 25612 ;; Auto vars:     Size  Location     Type
 25613 ;;		None
 25614 ;; Return value:  Size  Location     Type
 25615 ;;                  1    wreg      unsigned char 
 25616 ;; Registers used:
 25617 ;;		wreg
 25618 ;; Tracked objects:
 25619 ;;		On entry : 0/0
 25620 ;;		On exit  : 0/0
 25621 ;;		Unchanged: 0/0
 25622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25627 ;;Total ram usage:        0 bytes
 25628 ;; Hardware stack levels used:    1
 25629 ;; Hardware stack levels required when called:    6
 25630 ;; This function calls:
 25631 ;;		Nothing
 25632 ;; This function is called by:
 25633 ;;		_main
 25634 ;;		_InitIR
 25635 ;;		_UseIRCode
 25636 ;;		_SendNEC_wait
 25637 ;;		_SendRF_wait
 25638 ;; This function uses a non-reentrant model
 25639 ;;
 25640                           
 25641                           	psect	text53
 25642  00A4AE                     __ptext53:
 25643                           	opt stack 0
 25644  00A4AE                     _ReadIRpin:
 25645                           	opt stack 21
 25646                           
 25647                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 25648                           
 25649                           ;incstack = 0
 25650  00A4AE  A881               	btfss	3969,4,c	;volatile
 25651  00A4B0  D002               	goto	l9722
 25652                           
 25653                           ;IR.c: 111: {
 25654                           ;IR.c: 112: return (1);
 25655  00A4B2  0E01               	movlw	1
 25656                           
 25657                           ;IR.c: 113: }
 25658  00A4B4  0012               	return	
 25659  00A4B6                     l9722:
 25660                           
 25661                           ;IR.c: 114: else
 25662                           ;IR.c: 115: {
 25663                           ;IR.c: 116: return 0;
 25664  00A4B6  0E00               	movlw	0
 25665  00A4B8  0012               	return	
 25666  00A4BA  0012               	return		;funcret
 25667  00A4BC                     __end_of_ReadIRpin:
 25668                           	opt stack 0
 25669                           tblptru	equ	0xFF8
 25670                           tblptrh	equ	0xFF7
 25671                           tblptrl	equ	0xFF6
 25672                           tablat	equ	0xFF5
 25673                           prodh	equ	0xFF4
 25674                           prodl	equ	0xFF3
 25675                           intcon	equ	0xFF2
 25676                           intcon2	equ	0xFF1
 25677                           indf0	equ	0xFEF
 25678                           postinc0	equ	0xFEE
 25679                           plusw0	equ	0xFEB
 25680                           fsr0h	equ	0xFEA
 25681                           fsr0l	equ	0xFE9
 25682                           wreg	equ	0xFE8
 25683                           indf1	equ	0xFE7
 25684                           postdec1	equ	0xFE5
 25685                           fsr1h	equ	0xFE2
 25686                           fsr1l	equ	0xFE1
 25687                           indf2	equ	0xFDF
 25688                           postinc2	equ	0xFDE
 25689                           postdec2	equ	0xFDD
 25690                           plusw2	equ	0xFDB
 25691                           fsr2h	equ	0xFDA
 25692                           fsr2l	equ	0xFD9
 25693                           status	equ	0xFD8
 25694                           
 25695 ;; *************** function _InitTimer0 *****************
 25696 ;; Defined at:
 25697 ;;		line 66 in file "Timer.c"
 25698 ;; Parameters:    Size  Location     Type
 25699 ;;		None
 25700 ;; Auto vars:     Size  Location     Type
 25701 ;;		None
 25702 ;; Return value:  Size  Location     Type
 25703 ;;		None               void
 25704 ;; Registers used:
 25705 ;;		wreg, status,2
 25706 ;; Tracked objects:
 25707 ;;		On entry : 0/0
 25708 ;;		On exit  : 0/0
 25709 ;;		Unchanged: 0/0
 25710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25715 ;;Total ram usage:        0 bytes
 25716 ;; Hardware stack levels used:    1
 25717 ;; Hardware stack levels required when called:    6
 25718 ;; This function calls:
 25719 ;;		Nothing
 25720 ;; This function is called by:
 25721 ;;		_InitIR
 25722 ;; This function uses a non-reentrant model
 25723 ;;
 25724                           
 25725                           	psect	text54
 25726  00A466                     __ptext54:
 25727                           	opt stack 0
 25728  00A466                     _InitTimer0:
 25729                           	opt stack 22
 25730                           
 25731                           ;Timer.c: 68: T0CONbits.T08BIT = FALSE;
 25732                           
 25733                           ;incstack = 0
 25734  00A466  9CD5               	bcf	4053,6,c	;volatile
 25735                           
 25736                           ;Timer.c: 69: T0CONbits.T0CS = FALSE;
 25737  00A468  9AD5               	bcf	4053,5,c	;volatile
 25738                           
 25739                           ;Timer.c: 70: T0CONbits.PSA = FALSE;
 25740  00A46A  96D5               	bcf	4053,3,c	;volatile
 25741                           
 25742                           ;Timer.c: 71: T0CONbits.T0PS = 0x4;
 25743  00A46C  50D5               	movf	4053,w,c	;volatile
 25744  00A46E  0BF8               	andlw	-8
 25745  00A470  0904               	iorlw	4
 25746  00A472  6ED5               	movwf	4053,c	;volatile
 25747  00A474  0012               	return		;funcret
 25748  00A476                     __end_of_InitTimer0:
 25749                           	opt stack 0
 25750                           tblptru	equ	0xFF8
 25751                           tblptrh	equ	0xFF7
 25752                           tblptrl	equ	0xFF6
 25753                           tablat	equ	0xFF5
 25754                           prodh	equ	0xFF4
 25755                           prodl	equ	0xFF3
 25756                           intcon	equ	0xFF2
 25757                           intcon2	equ	0xFF1
 25758                           indf0	equ	0xFEF
 25759                           postinc0	equ	0xFEE
 25760                           plusw0	equ	0xFEB
 25761                           fsr0h	equ	0xFEA
 25762                           fsr0l	equ	0xFE9
 25763                           wreg	equ	0xFE8
 25764                           indf1	equ	0xFE7
 25765                           postdec1	equ	0xFE5
 25766                           fsr1h	equ	0xFE2
 25767                           fsr1l	equ	0xFE1
 25768                           indf2	equ	0xFDF
 25769                           postinc2	equ	0xFDE
 25770                           postdec2	equ	0xFDD
 25771                           plusw2	equ	0xFDB
 25772                           fsr2h	equ	0xFDA
 25773                           fsr2l	equ	0xFD9
 25774                           status	equ	0xFD8
 25775                           
 25776 ;; *************** function _InitBluetooth *****************
 25777 ;; Defined at:
 25778 ;;		line 74 in file "Bluetooth.c"
 25779 ;; Parameters:    Size  Location     Type
 25780 ;;		None
 25781 ;; Auto vars:     Size  Location     Type
 25782 ;;		None
 25783 ;; Return value:  Size  Location     Type
 25784 ;;		None               void
 25785 ;; Registers used:
 25786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25787 ;; Tracked objects:
 25788 ;;		On entry : 0/0
 25789 ;;		On exit  : 0/0
 25790 ;;		Unchanged: 0/0
 25791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25796 ;;Total ram usage:        0 bytes
 25797 ;; Hardware stack levels used:    1
 25798 ;; Hardware stack levels required when called:   12
 25799 ;; This function calls:
 25800 ;;		_BluetoothConfigured
 25801 ;;		_BluetoothInitialSetup
 25802 ;;		_ClearUSART
 25803 ;;		_ResetBlue
 25804 ;;		_SyncGlobalToEEPROM
 25805 ;;		_cleanBuffer
 25806 ;; This function is called by:
 25807 ;;		_Init_System
 25808 ;; This function uses a non-reentrant model
 25809 ;;
 25810                           
 25811                           	psect	text55
 25812  009AFA                     __ptext55:
 25813                           	opt stack 0
 25814  009AFA                     _InitBluetooth:
 25815                           	opt stack 17
 25816                           
 25817                           ;Bluetooth.c: 76: cleanBuffer(ReceivedString,100);
 25818                           
 25819                           ;incstack = 0
 25820  009AFA  0E00               	movlw	low _ReceivedString
 25821  009AFC  0100               	movlb	0	; () banked
 25822  009AFE  6F63               	movwf	cleanBuffer@data& (0+255),b
 25823  009B00  0E04               	movlw	high _ReceivedString
 25824  009B02  0100               	movlb	0	; () banked
 25825  009B04  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 25826  009B06  0E00               	movlw	0
 25827  009B08  0100               	movlb	0	; () banked
 25828  009B0A  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
 25829  009B0C  0E64               	movlw	100
 25830  009B0E  6F65               	movwf	cleanBuffer@count& (0+255),b
 25831  009B10  EC47  F04E         	call	_cleanBuffer	;wreg free
 25832                           
 25833                           ;Bluetooth.c: 77: ReceivedStringPos = 0;
 25834  009B14  0E00               	movlw	0
 25835  009B16  0102               	movlb	2	; () banked
 25836  009B18  6FFF               	movwf	_ReceivedStringPos& (0+255),b	;volatile
 25837                           
 25838                           ; BSR set to: 2
 25839                           ;Bluetooth.c: 78: cleanBuffer(CommandString,100);
 25840  009B1A  0E18               	movlw	low _CommandString
 25841  009B1C  0100               	movlb	0	; () banked
 25842  009B1E  6F63               	movwf	cleanBuffer@data& (0+255),b
 25843  009B20  0E03               	movlw	high _CommandString
 25844  009B22  0100               	movlb	0	; () banked
 25845  009B24  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 25846  009B26  0E00               	movlw	0
 25847  009B28  0100               	movlb	0	; () banked
 25848  009B2A  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
 25849  009B2C  0E64               	movlw	100
 25850  009B2E  6F65               	movwf	cleanBuffer@count& (0+255),b
 25851  009B30  EC47  F04E         	call	_cleanBuffer	;wreg free
 25852                           
 25853                           ;Bluetooth.c: 79: CommandStringPos = 0;
 25854  009B34  0E00               	movlw	0
 25855  009B36  6E43               	movwf	_CommandStringPos,c	;volatile
 25856                           
 25857                           ;Bluetooth.c: 81: LATA &= ~0x10;
 25858  009B38  9889               	bcf	3977,4,c	;volatile
 25859                           
 25860                           ;Bluetooth.c: 82: LATA |= 0x08;
 25861  009B3A  8689               	bsf	3977,3,c	;volatile
 25862                           
 25863                           ;Bluetooth.c: 83: LATA &= ~0x10;
 25864  009B3C  9889               	bcf	3977,4,c	;volatile
 25865                           
 25866                           ;Bluetooth.c: 84: if(!BluetoothConfigured())
 25867  009B3E  EC2A  F052         	call	_BluetoothConfigured	;wreg free
 25868  009B42  0900               	iorlw	0
 25869  009B44  A4D8               	btfss	status,2,c
 25870  009B46  0012               	return	
 25871                           
 25872                           ;Bluetooth.c: 85: {
 25873                           ;Bluetooth.c: 86: if(BluetoothInitialSetup())
 25874  009B48  EC98  F020         	call	_BluetoothInitialSetup	;wreg free
 25875  009B4C  0900               	iorlw	0
 25876  009B4E  B4D8               	btfsc	status,2,c
 25877  009B50  D006               	goto	l10910
 25878                           
 25879                           ;Bluetooth.c: 87: {
 25880                           ;Bluetooth.c: 88: Global1.BlueToothFlag = 1;
 25881  009B52  0E01               	movlw	1
 25882  009B54  0103               	movlb	3	; () banked
 25883  009B56  6FDA               	movwf	_Global1& (0+255),b
 25884                           
 25885                           ; BSR set to: 3
 25886                           ;Bluetooth.c: 89: SyncGlobalToEEPROM();
 25887  009B58  ECCE  F04A         	call	_SyncGlobalToEEPROM	;wreg free
 25888  009B5C  D000               	goto	l10910
 25889  009B5E                     l10910:
 25890                           
 25891                           ;Bluetooth.c: 90: }
 25892                           ;Bluetooth.c: 91: ResetBlue();
 25893  009B5E  EC9A  F045         	call	_ResetBlue	;wreg free
 25894                           
 25895                           ;Bluetooth.c: 92: ClearUSART();
 25896  009B62  EC21  F052         	call	_ClearUSART	;wreg free
 25897                           
 25898                           ;Bluetooth.c: 93: PIR1bits.RCIF = 0;
 25899  009B66  9A9E               	bcf	3998,5,c	;volatile
 25900                           
 25901                           ;Bluetooth.c: 94: PIE1bits.RCIE = 1;
 25902  009B68  8A9D               	bsf	3997,5,c	;volatile
 25903  009B6A  0012               	return	
 25904  009B6C  0012               	return		;funcret
 25905  009B6E                     __end_of_InitBluetooth:
 25906                           	opt stack 0
 25907                           tblptru	equ	0xFF8
 25908                           tblptrh	equ	0xFF7
 25909                           tblptrl	equ	0xFF6
 25910                           tablat	equ	0xFF5
 25911                           prodh	equ	0xFF4
 25912                           prodl	equ	0xFF3
 25913                           intcon	equ	0xFF2
 25914                           intcon2	equ	0xFF1
 25915                           indf0	equ	0xFEF
 25916                           postinc0	equ	0xFEE
 25917                           plusw0	equ	0xFEB
 25918                           fsr0h	equ	0xFEA
 25919                           fsr0l	equ	0xFE9
 25920                           wreg	equ	0xFE8
 25921                           indf1	equ	0xFE7
 25922                           postdec1	equ	0xFE5
 25923                           fsr1h	equ	0xFE2
 25924                           fsr1l	equ	0xFE1
 25925                           indf2	equ	0xFDF
 25926                           postinc2	equ	0xFDE
 25927                           postdec2	equ	0xFDD
 25928                           plusw2	equ	0xFDB
 25929                           fsr2h	equ	0xFDA
 25930                           fsr2l	equ	0xFD9
 25931                           status	equ	0xFD8
 25932                           
 25933 ;; *************** function _SyncGlobalToEEPROM *****************
 25934 ;; Defined at:
 25935 ;;		line 273 in file "EEPROM.c"
 25936 ;; Parameters:    Size  Location     Type
 25937 ;;		None
 25938 ;; Auto vars:     Size  Location     Type
 25939 ;;  ok              1  136[BANK0 ] unsigned char 
 25940 ;; Return value:  Size  Location     Type
 25941 ;;                  1    wreg      unsigned char 
 25942 ;; Registers used:
 25943 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25944 ;; Tracked objects:
 25945 ;;		On entry : 0/0
 25946 ;;		On exit  : 0/0
 25947 ;;		Unchanged: 0/0
 25948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25950 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25952 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25953 ;;Total ram usage:        1 bytes
 25954 ;; Hardware stack levels used:    1
 25955 ;; Hardware stack levels required when called:   10
 25956 ;; This function calls:
 25957 ;;		_SetEEPROM1
 25958 ;;		_SetEEPROM2
 25959 ;; This function is called by:
 25960 ;;		_Init_System
 25961 ;;		_SetEEPROMdefault
 25962 ;;		_UseIRCode
 25963 ;;		_InitBluetooth
 25964 ;;		_UseBluetooth
 25965 ;; This function uses a non-reentrant model
 25966 ;;
 25967                           
 25968                           	psect	text56
 25969  00959C                     __ptext56:
 25970                           	opt stack 0
 25971  00959C                     _SyncGlobalToEEPROM:
 25972                           	opt stack 19
 25973                           
 25974                           ;EEPROM.c: 275: unsigned char ok = 1;
 25975                           
 25976                           ;incstack = 0
 25977  00959C  0E01               	movlw	1
 25978  00959E  0100               	movlb	0	; () banked
 25979  0095A0  6FE8               	movwf	SyncGlobalToEEPROM@ok& (0+255),b
 25980                           
 25981                           ; BSR set to: 0
 25982                           ;EEPROM.c: 278: if(SetEEPROM1(Global1,0xFFFFFFFF))
 25983  0095A2  EE23  F0DA         	lfsr	2,_Global1
 25984  0095A6  EE00  F099         	lfsr	0,SetEEPROM1@Temp
 25985  0095AA  0E1D               	movlw	29
 25986  0095AC                     u10801:
 25987  0095AC  CFDB FFEB          	movff	plusw2,plusw0
 25988  0095B0  06E8               	decf	wreg,f,c
 25989  0095B2  E2FC               	bc	u10801
 25990  0095B4  0EFF               	movlw	255
 25991  0095B6  0100               	movlb	0	; () banked
 25992  0095B8  6FB7               	movwf	SetEEPROM1@burn& (0+255),b
 25993  0095BA  0EFF               	movlw	255
 25994  0095BC  6FB8               	movwf	(SetEEPROM1@burn+1)& (0+255),b
 25995  0095BE  0EFF               	movlw	255
 25996  0095C0  6FB9               	movwf	(SetEEPROM1@burn+2)& (0+255),b
 25997  0095C2  0EFF               	movlw	255
 25998  0095C4  6FBA               	movwf	(SetEEPROM1@burn+3)& (0+255),b
 25999  0095C6  ECBE  F040         	call	_SetEEPROM1	;wreg free
 26000  0095CA  0100               	movlb	0	; () banked
 26001  0095CC  5199               	movf	?_SetEEPROM1& (0+255),w,b
 26002  0095CE  0100               	movlb	0	; () banked
 26003  0095D0  119A               	iorwf	(?_SetEEPROM1+1)& (0+255),w,b
 26004  0095D2  0100               	movlb	0	; () banked
 26005  0095D4  119B               	iorwf	(?_SetEEPROM1+2)& (0+255),w,b
 26006  0095D6  0100               	movlb	0	; () banked
 26007  0095D8  119C               	iorwf	(?_SetEEPROM1+3)& (0+255),w,b
 26008  0095DA  B4D8               	btfsc	status,2,c
 26009  0095DC  D004               	goto	l10086
 26010                           
 26011                           ; BSR set to: 0
 26012                           ;EEPROM.c: 279: {
 26013                           ;EEPROM.c: 280: ok = 0;
 26014  0095DE  0E00               	movlw	0
 26015  0095E0  0100               	movlb	0	; () banked
 26016  0095E2  6FE8               	movwf	SyncGlobalToEEPROM@ok& (0+255),b
 26017  0095E4  D000               	goto	l10086
 26018  0095E6                     l10086:
 26019                           
 26020                           ; BSR set to: 0
 26021                           ;EEPROM.c: 281: }
 26022                           ;EEPROM.c: 282: if(SetEEPROM2(Global2,0xFFFFFFFD))
 26023  0095E6  EE23  F07C         	lfsr	2,_Global2
 26024  0095EA  EE00  F099         	lfsr	0,SetEEPROM2@Temp
 26025  0095EE  0E3F               	movlw	63
 26026  0095F0                     u10821:
 26027  0095F0  CFDB FFEB          	movff	plusw2,plusw0
 26028  0095F4  06E8               	decf	wreg,f,c
 26029  0095F6  E2FC               	bc	u10821
 26030  0095F8  0EFD               	movlw	253
 26031  0095FA  0100               	movlb	0	; () banked
 26032  0095FC  6FD9               	movwf	SetEEPROM2@burn& (0+255),b
 26033  0095FE  0EFF               	movlw	255
 26034  009600  6FDA               	movwf	(SetEEPROM2@burn+1)& (0+255),b
 26035  009602  0EFF               	movlw	255
 26036  009604  6FDB               	movwf	(SetEEPROM2@burn+2)& (0+255),b
 26037  009606  0EFF               	movlw	255
 26038  009608  6FDC               	movwf	(SetEEPROM2@burn+3)& (0+255),b
 26039  00960A  EC1C  F044         	call	_SetEEPROM2	;wreg free
 26040  00960E  0100               	movlb	0	; () banked
 26041  009610  5199               	movf	?_SetEEPROM2& (0+255),w,b
 26042  009612  0100               	movlb	0	; () banked
 26043  009614  119A               	iorwf	(?_SetEEPROM2+1)& (0+255),w,b
 26044  009616  0100               	movlb	0	; () banked
 26045  009618  119B               	iorwf	(?_SetEEPROM2+2)& (0+255),w,b
 26046  00961A  0100               	movlb	0	; () banked
 26047  00961C  119C               	iorwf	(?_SetEEPROM2+3)& (0+255),w,b
 26048  00961E  B4D8               	btfsc	status,2,c
 26049  009620  D003               	goto	l1091
 26050                           
 26051                           ; BSR set to: 0
 26052                           ;EEPROM.c: 283: {
 26053                           ;EEPROM.c: 284: ok = 0;
 26054  009622  0E00               	movlw	0
 26055  009624  0100               	movlb	0	; () banked
 26056  009626  6FE8               	movwf	SyncGlobalToEEPROM@ok& (0+255),b
 26057  009628                     l1091:
 26058                           
 26059                           ; BSR set to: 0
 26060                           ;EEPROM.c: 285: }
 26061                           ;EEPROM.c: 286: if(ok)
 26062  009628  0100               	movlb	0	; () banked
 26063  00962A  51E8               	movf	SyncGlobalToEEPROM@ok& (0+255),w,b
 26064  00962C  0100               	movlb	0	; () banked
 26065  00962E  B4D8               	btfsc	status,2,c
 26066  009630  D002               	goto	l10094
 26067                           
 26068                           ; BSR set to: 0
 26069                           ;EEPROM.c: 287: {
 26070                           ;EEPROM.c: 288: return 1;
 26071  009632  0E01               	movlw	1
 26072                           
 26073                           ; BSR set to: 0
 26074  009634  0012               	return	
 26075  009636                     l10094:
 26076                           
 26077                           ; BSR set to: 0
 26078                           ;EEPROM.c: 289: }
 26079                           ;EEPROM.c: 290: return 0;
 26080  009636  0E00               	movlw	0
 26081  009638  0012               	return	
 26082                           
 26083                           ; BSR set to: 0
 26084                           
 26085                           ; BSR set to: 0
 26086  00963A  0012               	return		;funcret
 26087  00963C                     __end_of_SyncGlobalToEEPROM:
 26088                           	opt stack 0
 26089                           tblptru	equ	0xFF8
 26090                           tblptrh	equ	0xFF7
 26091                           tblptrl	equ	0xFF6
 26092                           tablat	equ	0xFF5
 26093                           prodh	equ	0xFF4
 26094                           prodl	equ	0xFF3
 26095                           intcon	equ	0xFF2
 26096                           intcon2	equ	0xFF1
 26097                           indf0	equ	0xFEF
 26098                           postinc0	equ	0xFEE
 26099                           plusw0	equ	0xFEB
 26100                           fsr0h	equ	0xFEA
 26101                           fsr0l	equ	0xFE9
 26102                           wreg	equ	0xFE8
 26103                           indf1	equ	0xFE7
 26104                           postdec1	equ	0xFE5
 26105                           fsr1h	equ	0xFE2
 26106                           fsr1l	equ	0xFE1
 26107                           indf2	equ	0xFDF
 26108                           postinc2	equ	0xFDE
 26109                           postdec2	equ	0xFDD
 26110                           plusw2	equ	0xFDB
 26111                           fsr2h	equ	0xFDA
 26112                           fsr2l	equ	0xFD9
 26113                           status	equ	0xFD8
 26114                           
 26115 ;; *************** function _SetEEPROM2 *****************
 26116 ;; Defined at:
 26117 ;;		line 232 in file "EEPROM.c"
 26118 ;; Parameters:    Size  Location     Type
 26119 ;;  Temp           64   57[BANK0 ] struct EEdata2
 26120 ;;  burn            4  121[BANK0 ] unsigned long 
 26121 ;; Auto vars:     Size  Location     Type
 26122 ;;  fail            4  128[BANK0 ] unsigned long 
 26123 ;;  k               1  135[BANK0 ] unsigned char 
 26124 ;;  j               1  134[BANK0 ] unsigned char 
 26125 ;;  i               1  133[BANK0 ] unsigned char 
 26126 ;;  Arrayspot       1  132[BANK0 ] unsigned char 
 26127 ;;  temp            1  127[BANK0 ] unsigned char 
 26128 ;; Return value:  Size  Location     Type
 26129 ;;                  4   57[BANK0 ] unsigned long 
 26130 ;; Registers used:
 26131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26132 ;; Tracked objects:
 26133 ;;		On entry : 0/0
 26134 ;;		On exit  : 0/0
 26135 ;;		Unchanged: 0/0
 26136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26137 ;;      Params:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26138 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26139 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26140 ;;      Totals:         0      79       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26141 ;;Total ram usage:       79 bytes
 26142 ;; Hardware stack levels used:    1
 26143 ;; Hardware stack levels required when called:    9
 26144 ;; This function calls:
 26145 ;;		_SetMemoryChar
 26146 ;;		_SetMemoryLong
 26147 ;; This function is called by:
 26148 ;;		_Init_System
 26149 ;;		_SyncGlobalToEEPROM
 26150 ;;		_UseBluetooth
 26151 ;; This function uses a non-reentrant model
 26152 ;;
 26153                           
 26154                           	psect	text57
 26155  008838                     __ptext57:
 26156                           	opt stack 0
 26157  008838                     _SetEEPROM2:
 26158                           	opt stack 19
 26159                           
 26160                           ;EEPROM.c: 234: unsigned long fail = 0;
 26161                           
 26162                           ; BSR set to: 0
 26163                           ;incstack = 0
 26164  008838  0E00               	movlw	0
 26165  00883A  0100               	movlb	0	; () banked
 26166  00883C  6FE0               	movwf	SetEEPROM2@fail& (0+255),b
 26167  00883E  0E00               	movlw	0
 26168  008840  6FE1               	movwf	(SetEEPROM2@fail+1)& (0+255),b
 26169  008842  0E00               	movlw	0
 26170  008844  6FE2               	movwf	(SetEEPROM2@fail+2)& (0+255),b
 26171  008846  0E00               	movlw	0
 26172  008848  6FE3               	movwf	(SetEEPROM2@fail+3)& (0+255),b
 26173                           
 26174                           ;EEPROM.c: 235: unsigned char i,j,k,temp;
 26175                           ;EEPROM.c: 236: unsigned char Arrayspot=5;
 26176  00884A  0E05               	movlw	5
 26177  00884C  0100               	movlb	0	; () banked
 26178  00884E  6FE4               	movwf	SetEEPROM2@Arrayspot& (0+255),b
 26179                           
 26180                           ; BSR set to: 0
 26181                           ;EEPROM.c: 238: if(burn & 0x00000001)
 26182  008850  0100               	movlb	0	; () banked
 26183  008852  A1D9               	btfss	SetEEPROM2@burn& (0+255),0,b
 26184  008854  D058               	goto	l1077
 26185                           
 26186                           ; BSR set to: 0
 26187                           ;EEPROM.c: 239: {
 26188                           ;EEPROM.c: 240: Arrayspot=(2*12 + 6);
 26189  008856  0E1E               	movlw	30
 26190  008858  0100               	movlb	0	; () banked
 26191  00885A  6FE4               	movwf	SetEEPROM2@Arrayspot& (0+255),b
 26192                           
 26193                           ;EEPROM.c: 241: for(i=0; i< 10; i++)
 26194  00885C  0E00               	movlw	0
 26195  00885E  0100               	movlb	0	; () banked
 26196  008860  6FE5               	movwf	SetEEPROM2@i& (0+255),b
 26197  008862                     l9732:
 26198                           
 26199                           ; BSR set to: 0
 26200  008862  0E09               	movlw	9
 26201  008864  0100               	movlb	0	; () banked
 26202  008866  65E5               	cpfsgt	SetEEPROM2@i& (0+255),b
 26203  008868  D001               	goto	l9736
 26204                           
 26205                           ; BSR set to: 0
 26206  00886A  D04D               	goto	l1077
 26207  00886C                     l9736:
 26208                           
 26209                           ; BSR set to: 0
 26210                           ;EEPROM.c: 242: {
 26211                           ;EEPROM.c: 243: for(j=0; j < 3; j++)
 26212  00886C  0E00               	movlw	0
 26213  00886E  0100               	movlb	0	; () banked
 26214  008870  6FE6               	movwf	SetEEPROM2@j& (0+255),b
 26215  008872                     l9738:
 26216                           
 26217                           ; BSR set to: 0
 26218  008872  0E02               	movlw	2
 26219  008874  0100               	movlb	0	; () banked
 26220  008876  65E6               	cpfsgt	SetEEPROM2@j& (0+255),b
 26221  008878  D001               	goto	l9742
 26222                           
 26223                           ; BSR set to: 0
 26224  00887A  D042               	goto	l9760
 26225  00887C                     l9742:
 26226                           
 26227                           ; BSR set to: 0
 26228                           ;EEPROM.c: 244: {
 26229                           ;EEPROM.c: 245: for(k=0; k < 2; k++)
 26230  00887C  0E00               	movlw	0
 26231  00887E  0100               	movlb	0	; () banked
 26232  008880  6FE7               	movwf	SetEEPROM2@k& (0+255),b
 26233  008882                     l9744:
 26234                           
 26235                           ; BSR set to: 0
 26236  008882  0E01               	movlw	1
 26237  008884  0100               	movlb	0	; () banked
 26238  008886  65E7               	cpfsgt	SetEEPROM2@k& (0+255),b
 26239  008888  D001               	goto	l9748
 26240                           
 26241                           ; BSR set to: 0
 26242  00888A  D037               	goto	l9756
 26243  00888C                     l9748:
 26244                           
 26245                           ; BSR set to: 0
 26246                           ;EEPROM.c: 246: {
 26247                           ;EEPROM.c: 247: temp = Temp.RemoteButtonRF[i][j][k];
 26248  00888C  0100               	movlb	0	; () banked
 26249  00888E  51E5               	movf	SetEEPROM2@i& (0+255),w,b
 26250  008890  0D06               	mullw	6
 26251  008892  0E99               	movlw	low SetEEPROM2@Temp
 26252  008894  0100               	movlb	0	; () banked
 26253  008896  6FDD               	movwf	??_SetEEPROM2& (0+255),b
 26254  008898  0E00               	movlw	high SetEEPROM2@Temp
 26255  00889A  0100               	movlb	0	; () banked
 26256  00889C  6FDE               	movwf	(??_SetEEPROM2+1)& (0+255),b
 26257  00889E  50F3               	movf	prodl,w,c
 26258  0088A0  0100               	movlb	0	; () banked
 26259  0088A2  27DD               	addwf	??_SetEEPROM2& (0+255),f,b
 26260  0088A4  50F4               	movf	prodh,w,c
 26261  0088A6  0100               	movlb	0	; () banked
 26262  0088A8  23DE               	addwfc	(??_SetEEPROM2+1)& (0+255),f,b
 26263  0088AA  0100               	movlb	0	; () banked
 26264  0088AC  51E6               	movf	SetEEPROM2@j& (0+255),w,b
 26265  0088AE  0D02               	mullw	2
 26266  0088B0  50F3               	movf	prodl,w,c
 26267  0088B2  0100               	movlb	0	; () banked
 26268  0088B4  27DD               	addwf	??_SetEEPROM2& (0+255),f,b
 26269  0088B6  50F4               	movf	prodh,w,c
 26270  0088B8  0100               	movlb	0	; () banked
 26271  0088BA  23DE               	addwfc	(??_SetEEPROM2+1)& (0+255),f,b
 26272  0088BC  0100               	movlb	0	; () banked
 26273  0088BE  51E7               	movf	SetEEPROM2@k& (0+255),w,b
 26274  0088C0  0D01               	mullw	1
 26275  0088C2  50F3               	movf	prodl,w,c
 26276  0088C4  0100               	movlb	0	; () banked
 26277  0088C6  25DD               	addwf	??_SetEEPROM2& (0+255),w,b
 26278  0088C8  6ED9               	movwf	fsr2l,c
 26279  0088CA  50F4               	movf	prodh,w,c
 26280  0088CC  0100               	movlb	0	; () banked
 26281  0088CE  21DE               	addwfc	(??_SetEEPROM2+1)& (0+255),w,b
 26282  0088D0  6EDA               	movwf	fsr2h,c
 26283  0088D2  50DF               	movf	indf2,w,c
 26284  0088D4  0100               	movlb	0	; () banked
 26285  0088D6  6FDF               	movwf	SetEEPROM2@temp& (0+255),b
 26286                           
 26287                           ; BSR set to: 0
 26288                           ;EEPROM.c: 248: if(!SetMemoryChar(temp,Arrayspot++))
 26289  0088D8  0100               	movlb	0	; () banked
 26290  0088DA  2BE4               	incf	SetEEPROM2@Arrayspot& (0+255),f,b
 26291  0088DC  05E4               	decf	SetEEPROM2@Arrayspot& (0+255),w,b
 26292  0088DE  0100               	movlb	0	; () banked
 26293  0088E0  6F6D               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 26294  0088E2  0100               	movlb	0	; () banked
 26295  0088E4  51DF               	movf	SetEEPROM2@temp& (0+255),w,b
 26296  0088E6  EC05  F050         	call	_SetMemoryChar
 26297  0088EA  0900               	iorlw	0
 26298  0088EC  A4D8               	btfss	status,2,c
 26299  0088EE  D002               	goto	l1084
 26300                           
 26301                           ;EEPROM.c: 249: {
 26302                           ;EEPROM.c: 251: fail |= 0x00000001;
 26303  0088F0  0100               	movlb	0	; () banked
 26304  0088F2  81E0               	bsf	SetEEPROM2@fail& (0+255),0,b
 26305  0088F4                     l1084:
 26306  0088F4  0100               	movlb	0	; () banked
 26307  0088F6  2BE7               	incf	SetEEPROM2@k& (0+255),f,b
 26308  0088F8  D7C4               	goto	l9744
 26309  0088FA                     l9756:
 26310                           
 26311                           ; BSR set to: 0
 26312  0088FA  0100               	movlb	0	; () banked
 26313  0088FC  2BE6               	incf	SetEEPROM2@j& (0+255),f,b
 26314  0088FE  D7B9               	goto	l9738
 26315  008900                     l9760:
 26316                           
 26317                           ; BSR set to: 0
 26318  008900  0100               	movlb	0	; () banked
 26319  008902  2BE5               	incf	SetEEPROM2@i& (0+255),f,b
 26320  008904  D7AE               	goto	l9732
 26321  008906                     l1077:
 26322                           
 26323                           ; BSR set to: 0
 26324                           ;EEPROM.c: 252: }
 26325                           ;EEPROM.c: 253: }
 26326                           ;EEPROM.c: 254: }
 26327                           ;EEPROM.c: 255: }
 26328                           ;EEPROM.c: 256: }
 26329                           ;EEPROM.c: 257: if(burn & 0x00000002)
 26330  008906  0100               	movlb	0	; () banked
 26331  008908  A3D9               	btfss	SetEEPROM2@burn& (0+255),1,b
 26332  00890A  D013               	goto	l9768
 26333                           
 26334                           ; BSR set to: 0
 26335                           ;EEPROM.c: 258: {
 26336                           ;EEPROM.c: 259: if(!SetMemoryLong(Temp.SerialNumber,(2*12 + 2*3*10 + 6)))
 26337  00890C  C0D5  F088         	movff	SetEEPROM2@Temp+60,SetMemoryLong@Data
 26338  008910  C0D6  F089         	movff	SetEEPROM2@Temp+61,SetMemoryLong@Data+1
 26339  008914  C0D7  F08A         	movff	SetEEPROM2@Temp+62,SetMemoryLong@Data+2
 26340  008918  C0D8  F08B         	movff	SetEEPROM2@Temp+63,SetMemoryLong@Data+3
 26341  00891C  0E5A               	movlw	90
 26342  00891E  0100               	movlb	0	; () banked
 26343  008920  6F8C               	movwf	SetMemoryLong@AddressFirst& (0+255),b
 26344  008922  ECA3  F044         	call	_SetMemoryLong	;wreg free
 26345  008926  0900               	iorlw	0
 26346  008928  A4D8               	btfss	status,2,c
 26347  00892A  D003               	goto	l9768
 26348                           
 26349                           ;EEPROM.c: 260: {
 26350                           ;EEPROM.c: 262: fail |= 0x00000002;
 26351  00892C  0100               	movlb	0	; () banked
 26352  00892E  83E0               	bsf	SetEEPROM2@fail& (0+255),1,b
 26353                           
 26354                           ; BSR set to: 0
 26355  008930  D000               	goto	l9768
 26356  008932                     l9768:
 26357                           
 26358                           ;EEPROM.c: 263: }
 26359                           ;EEPROM.c: 264: }
 26360                           ;EEPROM.c: 265: return fail;
 26361  008932  C0E0  F099         	movff	SetEEPROM2@fail,?_SetEEPROM2
 26362  008936  C0E1  F09A         	movff	SetEEPROM2@fail+1,?_SetEEPROM2+1
 26363  00893A  C0E2  F09B         	movff	SetEEPROM2@fail+2,?_SetEEPROM2+2
 26364  00893E  C0E3  F09C         	movff	SetEEPROM2@fail+3,?_SetEEPROM2+3
 26365  008942  0012               	return	
 26366  008944  0012               	return		;funcret
 26367  008946                     __end_of_SetEEPROM2:
 26368                           	opt stack 0
 26369                           tblptru	equ	0xFF8
 26370                           tblptrh	equ	0xFF7
 26371                           tblptrl	equ	0xFF6
 26372                           tablat	equ	0xFF5
 26373                           prodh	equ	0xFF4
 26374                           prodl	equ	0xFF3
 26375                           intcon	equ	0xFF2
 26376                           intcon2	equ	0xFF1
 26377                           indf0	equ	0xFEF
 26378                           postinc0	equ	0xFEE
 26379                           plusw0	equ	0xFEB
 26380                           fsr0h	equ	0xFEA
 26381                           fsr0l	equ	0xFE9
 26382                           wreg	equ	0xFE8
 26383                           indf1	equ	0xFE7
 26384                           postdec1	equ	0xFE5
 26385                           fsr1h	equ	0xFE2
 26386                           fsr1l	equ	0xFE1
 26387                           indf2	equ	0xFDF
 26388                           postinc2	equ	0xFDE
 26389                           postdec2	equ	0xFDD
 26390                           plusw2	equ	0xFDB
 26391                           fsr2h	equ	0xFDA
 26392                           fsr2l	equ	0xFD9
 26393                           status	equ	0xFD8
 26394                           
 26395 ;; *************** function _SetEEPROM1 *****************
 26396 ;; Defined at:
 26397 ;;		line 179 in file "EEPROM.c"
 26398 ;; Parameters:    Size  Location     Type
 26399 ;;  Temp           30   57[BANK0 ] struct EEdata
 26400 ;;  burn            4   87[BANK0 ] unsigned long 
 26401 ;; Auto vars:     Size  Location     Type
 26402 ;;  fail            4   95[BANK0 ] unsigned long 
 26403 ;;  j               1  100[BANK0 ] unsigned char 
 26404 ;;  i               1   99[BANK0 ] unsigned char 
 26405 ;;  Arrayspot       1   94[BANK0 ] unsigned char 
 26406 ;;  temp            1   93[BANK0 ] unsigned char 
 26407 ;;  k               1    0        unsigned char 
 26408 ;; Return value:  Size  Location     Type
 26409 ;;                  4   57[BANK0 ] unsigned long 
 26410 ;; Registers used:
 26411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26412 ;; Tracked objects:
 26413 ;;		On entry : 0/0
 26414 ;;		On exit  : 0/0
 26415 ;;		Unchanged: 0/0
 26416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26417 ;;      Params:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26418 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26419 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26420 ;;      Totals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26421 ;;Total ram usage:       44 bytes
 26422 ;; Hardware stack levels used:    1
 26423 ;; Hardware stack levels required when called:    9
 26424 ;; This function calls:
 26425 ;;		_SetMemoryChar
 26426 ;;		_SetMemoryLong
 26427 ;; This function is called by:
 26428 ;;		_SyncGlobalToEEPROM
 26429 ;; This function uses a non-reentrant model
 26430 ;;
 26431                           
 26432                           	psect	text58
 26433  00817C                     __ptext58:
 26434                           	opt stack 0
 26435  00817C                     _SetEEPROM1:
 26436                           	opt stack 19
 26437                           
 26438                           ;EEPROM.c: 181: unsigned long fail = 0;
 26439                           
 26440                           ;incstack = 0
 26441  00817C  0E00               	movlw	0
 26442  00817E  0100               	movlb	0	; () banked
 26443  008180  6FBF               	movwf	SetEEPROM1@fail& (0+255),b
 26444  008182  0E00               	movlw	0
 26445  008184  6FC0               	movwf	(SetEEPROM1@fail+1)& (0+255),b
 26446  008186  0E00               	movlw	0
 26447  008188  6FC1               	movwf	(SetEEPROM1@fail+2)& (0+255),b
 26448  00818A  0E00               	movlw	0
 26449  00818C  6FC2               	movwf	(SetEEPROM1@fail+3)& (0+255),b
 26450                           
 26451                           ;EEPROM.c: 182: unsigned char i,j,k,temp;
 26452                           ;EEPROM.c: 183: unsigned char Arrayspot=5;
 26453  00818E  0E05               	movlw	5
 26454  008190  0100               	movlb	0	; () banked
 26455  008192  6FBE               	movwf	SetEEPROM1@Arrayspot& (0+255),b
 26456                           
 26457                           ; BSR set to: 0
 26458                           ;EEPROM.c: 185: if(burn & 0x00000001)
 26459  008194  0100               	movlb	0	; () banked
 26460  008196  A1B7               	btfss	SetEEPROM1@burn& (0+255),0,b
 26461  008198  D00D               	goto	l9922
 26462                           
 26463                           ; BSR set to: 0
 26464                           ;EEPROM.c: 186: {
 26465                           ;EEPROM.c: 187: if(!SetMemoryChar(Temp.BlueToothFlag,0))
 26466  00819A  0E00               	movlw	0
 26467  00819C  0100               	movlb	0	; () banked
 26468  00819E  6F6D               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 26469  0081A0  0100               	movlb	0	; () banked
 26470  0081A2  5199               	movf	SetEEPROM1@Temp& (0+255),w,b
 26471  0081A4  EC05  F050         	call	_SetMemoryChar
 26472  0081A8  0900               	iorlw	0
 26473  0081AA  A4D8               	btfss	status,2,c
 26474  0081AC  D003               	goto	l9922
 26475                           
 26476                           ;EEPROM.c: 188: {
 26477                           ;EEPROM.c: 190: fail |= 0x00000001;
 26478  0081AE  0100               	movlb	0	; () banked
 26479  0081B0  81BF               	bsf	SetEEPROM1@fail& (0+255),0,b
 26480                           
 26481                           ; BSR set to: 0
 26482  0081B2  D000               	goto	l9922
 26483  0081B4                     l9922:
 26484                           
 26485                           ;EEPROM.c: 191: }
 26486                           ;EEPROM.c: 192: }
 26487                           ;EEPROM.c: 193: if(burn & 0x00000002)
 26488  0081B4  0100               	movlb	0	; () banked
 26489  0081B6  A3B7               	btfss	SetEEPROM1@burn& (0+255),1,b
 26490  0081B8  D013               	goto	l9928
 26491                           
 26492                           ; BSR set to: 0
 26493                           ;EEPROM.c: 194: {
 26494                           ;EEPROM.c: 195: if(!SetMemoryLong(Temp.SWNECcode,1))
 26495  0081BA  C09A  F088         	movff	SetEEPROM1@Temp+1,SetMemoryLong@Data
 26496  0081BE  C09B  F089         	movff	SetEEPROM1@Temp+2,SetMemoryLong@Data+1
 26497  0081C2  C09C  F08A         	movff	SetEEPROM1@Temp+3,SetMemoryLong@Data+2
 26498  0081C6  C09D  F08B         	movff	SetEEPROM1@Temp+4,SetMemoryLong@Data+3
 26499  0081CA  0E01               	movlw	1
 26500  0081CC  0100               	movlb	0	; () banked
 26501  0081CE  6F8C               	movwf	SetMemoryLong@AddressFirst& (0+255),b
 26502  0081D0  ECA3  F044         	call	_SetMemoryLong	;wreg free
 26503  0081D4  0900               	iorlw	0
 26504  0081D6  A4D8               	btfss	status,2,c
 26505  0081D8  D003               	goto	l9928
 26506                           
 26507                           ;EEPROM.c: 196: {
 26508                           ;EEPROM.c: 198: fail |= 0x00000002;
 26509  0081DA  0100               	movlb	0	; () banked
 26510  0081DC  83BF               	bsf	SetEEPROM1@fail& (0+255),1,b
 26511                           
 26512                           ; BSR set to: 0
 26513  0081DE  D000               	goto	l9928
 26514  0081E0                     l9928:
 26515                           
 26516                           ;EEPROM.c: 199: }
 26517                           ;EEPROM.c: 200: }
 26518                           ;EEPROM.c: 201: if(burn & 0x00000004)
 26519  0081E0  0100               	movlb	0	; () banked
 26520  0081E2  A5B7               	btfss	SetEEPROM1@burn& (0+255),2,b
 26521  0081E4  D047               	goto	l1066
 26522                           
 26523                           ; BSR set to: 0
 26524                           ;EEPROM.c: 202: {
 26525                           ;EEPROM.c: 203: for(i=0; i< 12; i++)
 26526  0081E6  0E00               	movlw	0
 26527  0081E8  0100               	movlb	0	; () banked
 26528  0081EA  6FC3               	movwf	SetEEPROM1@i& (0+255),b
 26529  0081EC                     l9932:
 26530                           
 26531                           ; BSR set to: 0
 26532  0081EC  0E0B               	movlw	11
 26533  0081EE  0100               	movlb	0	; () banked
 26534  0081F0  65C3               	cpfsgt	SetEEPROM1@i& (0+255),b
 26535  0081F2  D001               	goto	l9936
 26536                           
 26537                           ; BSR set to: 0
 26538  0081F4  D03F               	goto	l1066
 26539  0081F6                     l9936:
 26540                           
 26541                           ; BSR set to: 0
 26542                           ;EEPROM.c: 204: {
 26543                           ;EEPROM.c: 205: for(j=0; j < 2; j++)
 26544  0081F6  0E00               	movlw	0
 26545  0081F8  0100               	movlb	0	; () banked
 26546  0081FA  6FC4               	movwf	SetEEPROM1@j& (0+255),b
 26547  0081FC                     l9938:
 26548                           
 26549                           ; BSR set to: 0
 26550  0081FC  0E01               	movlw	1
 26551  0081FE  0100               	movlb	0	; () banked
 26552  008200  65C4               	cpfsgt	SetEEPROM1@j& (0+255),b
 26553  008202  D001               	goto	l9942
 26554                           
 26555                           ; BSR set to: 0
 26556  008204  D034               	goto	l9950
 26557  008206                     l9942:
 26558                           
 26559                           ; BSR set to: 0
 26560                           ;EEPROM.c: 206: {
 26561                           ;EEPROM.c: 207: temp = Temp.RemoteButtonNEC[i][j];
 26562  008206  0100               	movlb	0	; () banked
 26563  008208  51C3               	movf	SetEEPROM1@i& (0+255),w,b
 26564  00820A  0D02               	mullw	2
 26565  00820C  0E99               	movlw	low SetEEPROM1@Temp
 26566  00820E  0100               	movlb	0	; () banked
 26567  008210  6FBB               	movwf	??_SetEEPROM1& (0+255),b
 26568  008212  0E00               	movlw	high SetEEPROM1@Temp
 26569  008214  0100               	movlb	0	; () banked
 26570  008216  6FBC               	movwf	(??_SetEEPROM1+1)& (0+255),b
 26571  008218  50F3               	movf	prodl,w,c
 26572  00821A  0100               	movlb	0	; () banked
 26573  00821C  27BB               	addwf	??_SetEEPROM1& (0+255),f,b
 26574  00821E  50F4               	movf	prodh,w,c
 26575  008220  0100               	movlb	0	; () banked
 26576  008222  23BC               	addwfc	(??_SetEEPROM1+1)& (0+255),f,b
 26577  008224  0100               	movlb	0	; () banked
 26578  008226  51C4               	movf	SetEEPROM1@j& (0+255),w,b
 26579  008228  0D01               	mullw	1
 26580  00822A  50F3               	movf	prodl,w,c
 26581  00822C  0100               	movlb	0	; () banked
 26582  00822E  27BB               	addwf	??_SetEEPROM1& (0+255),f,b
 26583  008230  50F4               	movf	prodh,w,c
 26584  008232  0100               	movlb	0	; () banked
 26585  008234  23BC               	addwfc	(??_SetEEPROM1+1)& (0+255),f,b
 26586  008236  0E05               	movlw	5
 26587  008238  0100               	movlb	0	; () banked
 26588  00823A  25BB               	addwf	??_SetEEPROM1& (0+255),w,b
 26589  00823C  6ED9               	movwf	fsr2l,c
 26590  00823E  0E00               	movlw	0
 26591  008240  0100               	movlb	0	; () banked
 26592  008242  21BC               	addwfc	(??_SetEEPROM1+1)& (0+255),w,b
 26593  008244  6EDA               	movwf	fsr2h,c
 26594  008246  50DF               	movf	indf2,w,c
 26595  008248  0100               	movlb	0	; () banked
 26596  00824A  6FBD               	movwf	SetEEPROM1@temp& (0+255),b
 26597                           
 26598                           ; BSR set to: 0
 26599                           ;EEPROM.c: 208: if(!SetMemoryChar(temp,Arrayspot++))
 26600  00824C  0100               	movlb	0	; () banked
 26601  00824E  2BBE               	incf	SetEEPROM1@Arrayspot& (0+255),f,b
 26602  008250  05BE               	decf	SetEEPROM1@Arrayspot& (0+255),w,b
 26603  008252  0100               	movlb	0	; () banked
 26604  008254  6F6D               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 26605  008256  0100               	movlb	0	; () banked
 26606  008258  51BD               	movf	SetEEPROM1@temp& (0+255),w,b
 26607  00825A  EC05  F050         	call	_SetMemoryChar
 26608  00825E  0900               	iorlw	0
 26609  008260  A4D8               	btfss	status,2,c
 26610  008262  D002               	goto	l1071
 26611                           
 26612                           ;EEPROM.c: 209: {
 26613                           ;EEPROM.c: 211: fail |= 0x00000004;
 26614  008264  0100               	movlb	0	; () banked
 26615  008266  85BF               	bsf	SetEEPROM1@fail& (0+255),2,b
 26616  008268                     l1071:
 26617  008268  0100               	movlb	0	; () banked
 26618  00826A  2BC4               	incf	SetEEPROM1@j& (0+255),f,b
 26619  00826C  D7C7               	goto	l9938
 26620  00826E                     l9950:
 26621                           
 26622                           ; BSR set to: 0
 26623  00826E  0100               	movlb	0	; () banked
 26624  008270  2BC3               	incf	SetEEPROM1@i& (0+255),f,b
 26625  008272  D7BC               	goto	l9932
 26626  008274                     l1066:
 26627                           
 26628                           ; BSR set to: 0
 26629                           ;EEPROM.c: 212: }
 26630                           ;EEPROM.c: 213: }
 26631                           ;EEPROM.c: 214: }
 26632                           ;EEPROM.c: 215: }
 26633                           ;EEPROM.c: 216: if(burn & 0x00000008)
 26634  008274  0100               	movlb	0	; () banked
 26635  008276  A7B7               	btfss	SetEEPROM1@burn& (0+255),3,b
 26636  008278  D00D               	goto	l9958
 26637                           
 26638                           ; BSR set to: 0
 26639                           ;EEPROM.c: 217: {
 26640                           ;EEPROM.c: 218: if(!SetMemoryChar(Temp.EEPROMinitFlag,(2*12 + 5)))
 26641  00827A  0E1D               	movlw	29
 26642  00827C  0100               	movlb	0	; () banked
 26643  00827E  6F6D               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 26644  008280  0100               	movlb	0	; () banked
 26645  008282  51B6               	movf	(SetEEPROM1@Temp+29)& (0+255),w,b
 26646  008284  EC05  F050         	call	_SetMemoryChar
 26647  008288  0900               	iorlw	0
 26648  00828A  A4D8               	btfss	status,2,c
 26649  00828C  D003               	goto	l9958
 26650                           
 26651                           ;EEPROM.c: 219: {
 26652                           ;EEPROM.c: 221: fail |= 0x00000008;
 26653  00828E  0100               	movlb	0	; () banked
 26654  008290  87BF               	bsf	SetEEPROM1@fail& (0+255),3,b
 26655                           
 26656                           ; BSR set to: 0
 26657  008292  D000               	goto	l9958
 26658  008294                     l9958:
 26659                           
 26660                           ;EEPROM.c: 222: }
 26661                           ;EEPROM.c: 223: }
 26662                           ;EEPROM.c: 224: return fail;
 26663  008294  C0BF  F099         	movff	SetEEPROM1@fail,?_SetEEPROM1
 26664  008298  C0C0  F09A         	movff	SetEEPROM1@fail+1,?_SetEEPROM1+1
 26665  00829C  C0C1  F09B         	movff	SetEEPROM1@fail+2,?_SetEEPROM1+2
 26666  0082A0  C0C2  F09C         	movff	SetEEPROM1@fail+3,?_SetEEPROM1+3
 26667  0082A4  0012               	return	
 26668  0082A6  0012               	return		;funcret
 26669  0082A8                     __end_of_SetEEPROM1:
 26670                           	opt stack 0
 26671                           tblptru	equ	0xFF8
 26672                           tblptrh	equ	0xFF7
 26673                           tblptrl	equ	0xFF6
 26674                           tablat	equ	0xFF5
 26675                           prodh	equ	0xFF4
 26676                           prodl	equ	0xFF3
 26677                           intcon	equ	0xFF2
 26678                           intcon2	equ	0xFF1
 26679                           indf0	equ	0xFEF
 26680                           postinc0	equ	0xFEE
 26681                           plusw0	equ	0xFEB
 26682                           fsr0h	equ	0xFEA
 26683                           fsr0l	equ	0xFE9
 26684                           wreg	equ	0xFE8
 26685                           indf1	equ	0xFE7
 26686                           postdec1	equ	0xFE5
 26687                           fsr1h	equ	0xFE2
 26688                           fsr1l	equ	0xFE1
 26689                           indf2	equ	0xFDF
 26690                           postinc2	equ	0xFDE
 26691                           postdec2	equ	0xFDD
 26692                           plusw2	equ	0xFDB
 26693                           fsr2h	equ	0xFDA
 26694                           fsr2l	equ	0xFD9
 26695                           status	equ	0xFD8
 26696                           
 26697 ;; *************** function _SetMemoryLong *****************
 26698 ;; Defined at:
 26699 ;;		line 407 in file "EEPROM.c"
 26700 ;; Parameters:    Size  Location     Type
 26701 ;;  Data            4   40[BANK0 ] unsigned long 
 26702 ;;  AddressFirst    1   44[BANK0 ] unsigned char 
 26703 ;; Auto vars:     Size  Location     Type
 26704 ;;  Test            4   49[BANK0 ] unsigned long 
 26705 ;;  L               1   56[BANK0 ] unsigned char 
 26706 ;;  ML              1   55[BANK0 ] unsigned char 
 26707 ;;  MH              1   54[BANK0 ] unsigned char 
 26708 ;;  H               1   53[BANK0 ] unsigned char 
 26709 ;; Return value:  Size  Location     Type
 26710 ;;                  1    wreg      unsigned char 
 26711 ;; Registers used:
 26712 ;;		wreg, status,2, status,0, cstack
 26713 ;; Tracked objects:
 26714 ;;		On entry : 0/0
 26715 ;;		On exit  : 0/0
 26716 ;;		Unchanged: 0/0
 26717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26718 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26719 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26720 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26721 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26722 ;;Total ram usage:       17 bytes
 26723 ;; Hardware stack levels used:    1
 26724 ;; Hardware stack levels required when called:    8
 26725 ;; This function calls:
 26726 ;;		_GetMemoryLong
 26727 ;;		_WriteEEPROM_1Byte
 26728 ;; This function is called by:
 26729 ;;		_SetEEPROM1
 26730 ;;		_SetEEPROM2
 26731 ;; This function uses a non-reentrant model
 26732 ;;
 26733                           
 26734                           	psect	text59
 26735  008946                     __ptext59:
 26736                           	opt stack 0
 26737  008946                     _SetMemoryLong:
 26738                           	opt stack 19
 26739                           
 26740                           ;EEPROM.c: 409: unsigned char H;
 26741                           ;EEPROM.c: 410: unsigned char MH;
 26742                           ;EEPROM.c: 411: unsigned char ML;
 26743                           ;EEPROM.c: 412: unsigned char L;
 26744                           ;EEPROM.c: 413: unsigned long Test;
 26745                           ;EEPROM.c: 415: H = (unsigned char) ((Data & 0XFF000000) >> 24);
 26746                           
 26747                           ;incstack = 0
 26748  008946  0E00               	movlw	0
 26749  008948  0100               	movlb	0	; () banked
 26750  00894A  1588               	andwf	SetMemoryLong@Data& (0+255),w,b
 26751  00894C  0100               	movlb	0	; () banked
 26752  00894E  6F8D               	movwf	??_SetMemoryLong& (0+255),b
 26753  008950  0E00               	movlw	0
 26754  008952  0100               	movlb	0	; () banked
 26755  008954  1589               	andwf	(SetMemoryLong@Data+1)& (0+255),w,b
 26756  008956  0100               	movlb	0	; () banked
 26757  008958  6F8E               	movwf	(??_SetMemoryLong+1)& (0+255),b
 26758  00895A  0E00               	movlw	0
 26759  00895C  0100               	movlb	0	; () banked
 26760  00895E  158A               	andwf	(SetMemoryLong@Data+2)& (0+255),w,b
 26761  008960  0100               	movlb	0	; () banked
 26762  008962  6F8F               	movwf	(??_SetMemoryLong+2)& (0+255),b
 26763  008964  0EFF               	movlw	255
 26764  008966  0100               	movlb	0	; () banked
 26765  008968  158B               	andwf	(SetMemoryLong@Data+3)& (0+255),w,b
 26766  00896A  0100               	movlb	0	; () banked
 26767  00896C  6F90               	movwf	(??_SetMemoryLong+3)& (0+255),b
 26768  00896E  0E19               	movlw	25
 26769  008970  D006               	goto	u9920
 26770  008972                     u9925:
 26771  008972  0100               	movlb	0	; () banked
 26772  008974  90D8               	bcf	status,0,c
 26773  008976  3390               	rrcf	(??_SetMemoryLong+3)& (0+255),f,b
 26774  008978  338F               	rrcf	(??_SetMemoryLong+2)& (0+255),f,b
 26775  00897A  338E               	rrcf	(??_SetMemoryLong+1)& (0+255),f,b
 26776  00897C  338D               	rrcf	??_SetMemoryLong& (0+255),f,b
 26777  00897E                     u9920:
 26778  00897E  2EE8               	decfsz	wreg,f,c
 26779  008980  D7F8               	goto	u9925
 26780  008982  0100               	movlb	0	; () banked
 26781  008984  518D               	movf	??_SetMemoryLong& (0+255),w,b
 26782  008986  0100               	movlb	0	; () banked
 26783  008988  6F95               	movwf	SetMemoryLong@H& (0+255),b
 26784                           
 26785                           ; BSR set to: 0
 26786                           ;EEPROM.c: 416: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
 26787  00898A  C08A  F096         	movff	SetMemoryLong@Data+2,SetMemoryLong@MH
 26788                           
 26789                           ; BSR set to: 0
 26790                           ;EEPROM.c: 417: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
 26791  00898E  C089  F097         	movff	SetMemoryLong@Data+1,SetMemoryLong@ML
 26792                           
 26793                           ; BSR set to: 0
 26794                           ;EEPROM.c: 418: L = (unsigned char) (Data & 0X000000FF);
 26795  008992  C088  F098         	movff	SetMemoryLong@Data,SetMemoryLong@L
 26796                           
 26797                           ; BSR set to: 0
 26798                           ;EEPROM.c: 421: WriteEEPROM_1Byte(AddressFirst, H);
 26799  008996  C08C  F063         	movff	SetMemoryLong@AddressFirst,WriteEEPROM_1Byte@address
 26800  00899A  0100               	movlb	0	; () banked
 26801  00899C  6B64               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 26802  00899E  C095  F065         	movff	SetMemoryLong@H,WriteEEPROM_1Byte@data
 26803  0089A2  EC19  F04E         	call	_WriteEEPROM_1Byte	;wreg free
 26804                           
 26805                           ;EEPROM.c: 422: WriteEEPROM_1Byte((AddressFirst + 1), MH);
 26806  0089A6  0E01               	movlw	1
 26807  0089A8  0100               	movlb	0	; () banked
 26808  0089AA  258C               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 26809  0089AC  0100               	movlb	0	; () banked
 26810  0089AE  6F63               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 26811  0089B0  0100               	movlb	0	; () banked
 26812  0089B2  6B64               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 26813  0089B4  0E00               	movlw	0
 26814  0089B6  2364               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 26815  0089B8  C096  F065         	movff	SetMemoryLong@MH,WriteEEPROM_1Byte@data
 26816  0089BC  EC19  F04E         	call	_WriteEEPROM_1Byte	;wreg free
 26817                           
 26818                           ;EEPROM.c: 423: WriteEEPROM_1Byte((AddressFirst + 2), ML);
 26819  0089C0  0E02               	movlw	2
 26820  0089C2  0100               	movlb	0	; () banked
 26821  0089C4  258C               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 26822  0089C6  0100               	movlb	0	; () banked
 26823  0089C8  6F63               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 26824  0089CA  0100               	movlb	0	; () banked
 26825  0089CC  6B64               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 26826  0089CE  0E00               	movlw	0
 26827  0089D0  2364               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 26828  0089D2  C097  F065         	movff	SetMemoryLong@ML,WriteEEPROM_1Byte@data
 26829  0089D6  EC19  F04E         	call	_WriteEEPROM_1Byte	;wreg free
 26830                           
 26831                           ;EEPROM.c: 424: WriteEEPROM_1Byte((AddressFirst + 3), L);
 26832  0089DA  0E03               	movlw	3
 26833  0089DC  0100               	movlb	0	; () banked
 26834  0089DE  258C               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 26835  0089E0  0100               	movlb	0	; () banked
 26836  0089E2  6F63               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 26837  0089E4  0100               	movlb	0	; () banked
 26838  0089E6  6B64               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 26839  0089E8  0E00               	movlw	0
 26840  0089EA  2364               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 26841  0089EC  C098  F065         	movff	SetMemoryLong@L,WriteEEPROM_1Byte@data
 26842  0089F0  EC19  F04E         	call	_WriteEEPROM_1Byte	;wreg free
 26843                           
 26844                           ;EEPROM.c: 427: Test = GetMemoryLong(AddressFirst);
 26845  0089F4  0100               	movlb	0	; () banked
 26846  0089F6  518C               	movf	SetMemoryLong@AddressFirst& (0+255),w,b
 26847  0089F8  EC0C  F03C         	call	_GetMemoryLong
 26848  0089FC  C067  F091         	movff	?_GetMemoryLong,SetMemoryLong@Test
 26849  008A00  C068  F092         	movff	?_GetMemoryLong+1,SetMemoryLong@Test+1
 26850  008A04  C069  F093         	movff	?_GetMemoryLong+2,SetMemoryLong@Test+2
 26851  008A08  C06A  F094         	movff	?_GetMemoryLong+3,SetMemoryLong@Test+3
 26852                           
 26853                           ;EEPROM.c: 429: if(Test == Data)
 26854  008A0C  0100               	movlb	0	; () banked
 26855  008A0E  5188               	movf	SetMemoryLong@Data& (0+255),w,b
 26856  008A10  0100               	movlb	0	; () banked
 26857  008A12  1991               	xorwf	SetMemoryLong@Test& (0+255),w,b
 26858  008A14  E112               	bnz	l9666
 26859  008A16  0100               	movlb	0	; () banked
 26860  008A18  5189               	movf	(SetMemoryLong@Data+1)& (0+255),w,b
 26861  008A1A  0100               	movlb	0	; () banked
 26862  008A1C  1992               	xorwf	(SetMemoryLong@Test+1)& (0+255),w,b
 26863  008A1E  E10D               	bnz	l9666
 26864  008A20  0100               	movlb	0	; () banked
 26865  008A22  518A               	movf	(SetMemoryLong@Data+2)& (0+255),w,b
 26866  008A24  0100               	movlb	0	; () banked
 26867  008A26  1993               	xorwf	(SetMemoryLong@Test+2)& (0+255),w,b
 26868  008A28  E108               	bnz	l9666
 26869  008A2A  0100               	movlb	0	; () banked
 26870  008A2C  518B               	movf	(SetMemoryLong@Data+3)& (0+255),w,b
 26871  008A2E  0100               	movlb	0	; () banked
 26872  008A30  1994               	xorwf	(SetMemoryLong@Test+3)& (0+255),w,b
 26873  008A32  A4D8               	btfss	status,2,c
 26874  008A34  D002               	goto	l9666
 26875                           
 26876                           ; BSR set to: 0
 26877                           ;EEPROM.c: 430: {
 26878                           ;EEPROM.c: 431: return 1;
 26879  008A36  0E01               	movlw	1
 26880                           
 26881                           ; BSR set to: 0
 26882  008A38  0012               	return	
 26883  008A3A                     l9666:
 26884                           
 26885                           ; BSR set to: 0
 26886                           ;EEPROM.c: 432: }
 26887                           ;EEPROM.c: 433: return 0;
 26888  008A3A  0E00               	movlw	0
 26889  008A3C  0012               	return	
 26890                           
 26891                           ; BSR set to: 0
 26892                           
 26893                           ; BSR set to: 0
 26894  008A3E  0012               	return		;funcret
 26895  008A40                     __end_of_SetMemoryLong:
 26896                           	opt stack 0
 26897                           tblptru	equ	0xFF8
 26898                           tblptrh	equ	0xFF7
 26899                           tblptrl	equ	0xFF6
 26900                           tablat	equ	0xFF5
 26901                           prodh	equ	0xFF4
 26902                           prodl	equ	0xFF3
 26903                           intcon	equ	0xFF2
 26904                           intcon2	equ	0xFF1
 26905                           indf0	equ	0xFEF
 26906                           postinc0	equ	0xFEE
 26907                           plusw0	equ	0xFEB
 26908                           fsr0h	equ	0xFEA
 26909                           fsr0l	equ	0xFE9
 26910                           wreg	equ	0xFE8
 26911                           indf1	equ	0xFE7
 26912                           postdec1	equ	0xFE5
 26913                           fsr1h	equ	0xFE2
 26914                           fsr1l	equ	0xFE1
 26915                           indf2	equ	0xFDF
 26916                           postinc2	equ	0xFDE
 26917                           postdec2	equ	0xFDD
 26918                           plusw2	equ	0xFDB
 26919                           fsr2h	equ	0xFDA
 26920                           fsr2l	equ	0xFD9
 26921                           status	equ	0xFD8
 26922                           
 26923 ;; *************** function _GetMemoryLong *****************
 26924 ;; Defined at:
 26925 ;;		line 384 in file "EEPROM.c"
 26926 ;; Parameters:    Size  Location     Type
 26927 ;;  AddressFirst    1    wreg     unsigned char 
 26928 ;; Auto vars:     Size  Location     Type
 26929 ;;  AddressFirst    1   39[BANK0 ] unsigned char 
 26930 ;;  temp            4   31[BANK0 ] unsigned long 
 26931 ;;  L               1   38[BANK0 ] unsigned char 
 26932 ;;  ML              1   37[BANK0 ] unsigned char 
 26933 ;;  MH              1   36[BANK0 ] unsigned char 
 26934 ;;  H               1   35[BANK0 ] unsigned char 
 26935 ;; Return value:  Size  Location     Type
 26936 ;;                  4    7[BANK0 ] unsigned long 
 26937 ;; Registers used:
 26938 ;;		wreg, status,2, status,0, cstack
 26939 ;; Tracked objects:
 26940 ;;		On entry : 0/0
 26941 ;;		On exit  : 0/0
 26942 ;;		Unchanged: 0/0
 26943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26944 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26945 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26946 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26947 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26948 ;;Total ram usage:       33 bytes
 26949 ;; Hardware stack levels used:    1
 26950 ;; Hardware stack levels required when called:    7
 26951 ;; This function calls:
 26952 ;;		_ReadEEPROM_1Byte
 26953 ;; This function is called by:
 26954 ;;		_GetEEPROM1
 26955 ;;		_GetEEPROM2
 26956 ;;		_SetMemoryLong
 26957 ;; This function uses a non-reentrant model
 26958 ;;
 26959                           
 26960                           	psect	text60
 26961  007818                     __ptext60:
 26962                           	opt stack 0
 26963  007818                     _GetMemoryLong:
 26964                           	opt stack 19
 26965                           
 26966                           ; BSR set to: 0
 26967                           ;incstack = 0
 26968                           ;GetMemoryLong@AddressFirst stored from wreg
 26969  007818  0100               	movlb	0	; () banked
 26970  00781A  6F87               	movwf	GetMemoryLong@AddressFirst& (0+255),b
 26971                           
 26972                           ; BSR set to: 0
 26973                           ;EEPROM.c: 386: unsigned char H;
 26974                           ;EEPROM.c: 387: unsigned char MH;
 26975                           ;EEPROM.c: 388: unsigned char ML;
 26976                           ;EEPROM.c: 389: unsigned char L;
 26977                           ;EEPROM.c: 390: unsigned long temp =0;
 26978  00781C  0E00               	movlw	0
 26979  00781E  0100               	movlb	0	; () banked
 26980  007820  6F7F               	movwf	GetMemoryLong@temp& (0+255),b
 26981  007822  0E00               	movlw	0
 26982  007824  6F80               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 26983  007826  0E00               	movlw	0
 26984  007828  6F81               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 26985  00782A  0E00               	movlw	0
 26986  00782C  6F82               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 26987                           
 26988                           ; BSR set to: 0
 26989                           ;EEPROM.c: 392: H = ReadEEPROM_1Byte(AddressFirst);
 26990  00782E  C087  F063         	movff	GetMemoryLong@AddressFirst,ReadEEPROM_1Byte@address
 26991  007832  0100               	movlb	0	; () banked
 26992  007834  6B64               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 26993  007836  EC74  F04E         	call	_ReadEEPROM_1Byte	;wreg free
 26994  00783A  0100               	movlb	0	; () banked
 26995  00783C  5163               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 26996  00783E  0100               	movlb	0	; () banked
 26997  007840  6F83               	movwf	GetMemoryLong@H& (0+255),b
 26998                           
 26999                           ; BSR set to: 0
 27000                           ;EEPROM.c: 393: MH = ReadEEPROM_1Byte(AddressFirst + 1);
 27001  007842  0E01               	movlw	1
 27002  007844  0100               	movlb	0	; () banked
 27003  007846  2587               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 27004  007848  0100               	movlb	0	; () banked
 27005  00784A  6F63               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 27006  00784C  0100               	movlb	0	; () banked
 27007  00784E  6B64               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 27008  007850  0E00               	movlw	0
 27009  007852  2364               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 27010  007854  EC74  F04E         	call	_ReadEEPROM_1Byte	;wreg free
 27011  007858  0100               	movlb	0	; () banked
 27012  00785A  5163               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 27013  00785C  0100               	movlb	0	; () banked
 27014  00785E  6F84               	movwf	GetMemoryLong@MH& (0+255),b
 27015                           
 27016                           ; BSR set to: 0
 27017                           ;EEPROM.c: 394: ML = ReadEEPROM_1Byte(AddressFirst + 2);
 27018  007860  0E02               	movlw	2
 27019  007862  0100               	movlb	0	; () banked
 27020  007864  2587               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 27021  007866  0100               	movlb	0	; () banked
 27022  007868  6F63               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 27023  00786A  0100               	movlb	0	; () banked
 27024  00786C  6B64               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 27025  00786E  0E00               	movlw	0
 27026  007870  2364               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 27027  007872  EC74  F04E         	call	_ReadEEPROM_1Byte	;wreg free
 27028  007876  0100               	movlb	0	; () banked
 27029  007878  5163               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 27030  00787A  0100               	movlb	0	; () banked
 27031  00787C  6F85               	movwf	GetMemoryLong@ML& (0+255),b
 27032                           
 27033                           ; BSR set to: 0
 27034                           ;EEPROM.c: 395: L = ReadEEPROM_1Byte(AddressFirst + 3);
 27035  00787E  0E03               	movlw	3
 27036  007880  0100               	movlb	0	; () banked
 27037  007882  2587               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 27038  007884  0100               	movlb	0	; () banked
 27039  007886  6F63               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 27040  007888  0100               	movlb	0	; () banked
 27041  00788A  6B64               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 27042  00788C  0E00               	movlw	0
 27043  00788E  2364               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 27044  007890  EC74  F04E         	call	_ReadEEPROM_1Byte	;wreg free
 27045  007894  0100               	movlb	0	; () banked
 27046  007896  5163               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 27047  007898  0100               	movlb	0	; () banked
 27048  00789A  6F86               	movwf	GetMemoryLong@L& (0+255),b
 27049                           
 27050                           ; BSR set to: 0
 27051                           ;EEPROM.c: 397: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
 27052                           ;EEPROM.c: 398: + ((unsigned long)ML << 8) + (unsigned long)L);
 27053  00789C  C085  F06B         	movff	GetMemoryLong@ML,??_GetMemoryLong
 27054  0078A0  0100               	movlb	0	; () banked
 27055  0078A2  6B6C               	clrf	(??_GetMemoryLong+1)& (0+255),b
 27056  0078A4  6B6D               	clrf	(??_GetMemoryLong+2)& (0+255),b
 27057  0078A6  6B6E               	clrf	(??_GetMemoryLong+3)& (0+255),b
 27058  0078A8  C06D  F06E         	movff	??_GetMemoryLong+2,??_GetMemoryLong+3
 27059  0078AC  C06C  F06D         	movff	??_GetMemoryLong+1,??_GetMemoryLong+2
 27060  0078B0  C06B  F06C         	movff	??_GetMemoryLong,??_GetMemoryLong+1
 27061  0078B4  0100               	movlb	0	; () banked
 27062  0078B6  6B6B               	clrf	??_GetMemoryLong& (0+255),b
 27063  0078B8  C084  F06F         	movff	GetMemoryLong@MH,??_GetMemoryLong+4
 27064  0078BC  0100               	movlb	0	; () banked
 27065  0078BE  6B70               	clrf	(??_GetMemoryLong+5)& (0+255),b
 27066  0078C0  6B71               	clrf	(??_GetMemoryLong+6)& (0+255),b
 27067  0078C2  6B72               	clrf	(??_GetMemoryLong+7)& (0+255),b
 27068  0078C4  C070  F072         	movff	??_GetMemoryLong+5,??_GetMemoryLong+7
 27069  0078C8  C06F  F071         	movff	??_GetMemoryLong+4,??_GetMemoryLong+6
 27070  0078CC  0100               	movlb	0	; () banked
 27071  0078CE  6B70               	clrf	(??_GetMemoryLong+5)& (0+255),b
 27072  0078D0  6B6F               	clrf	(??_GetMemoryLong+4)& (0+255),b
 27073  0078D2  C083  F073         	movff	GetMemoryLong@H,??_GetMemoryLong+8
 27074  0078D6  0100               	movlb	0	; () banked
 27075  0078D8  6B74               	clrf	(??_GetMemoryLong+9)& (0+255),b
 27076  0078DA  6B75               	clrf	(??_GetMemoryLong+10)& (0+255),b
 27077  0078DC  6B76               	clrf	(??_GetMemoryLong+11)& (0+255),b
 27078  0078DE  C073  F076         	movff	??_GetMemoryLong+8,??_GetMemoryLong+11
 27079  0078E2  0100               	movlb	0	; () banked
 27080  0078E4  6B75               	clrf	(??_GetMemoryLong+10)& (0+255),b
 27081  0078E6  6B74               	clrf	(??_GetMemoryLong+9)& (0+255),b
 27082  0078E8  6B73               	clrf	(??_GetMemoryLong+8)& (0+255),b
 27083  0078EA  0100               	movlb	0	; () banked
 27084  0078EC  516F               	movf	(??_GetMemoryLong+4)& (0+255),w,b
 27085  0078EE  0100               	movlb	0	; () banked
 27086  0078F0  2573               	addwf	(??_GetMemoryLong+8)& (0+255),w,b
 27087  0078F2  0100               	movlb	0	; () banked
 27088  0078F4  6F77               	movwf	(??_GetMemoryLong+12)& (0+255),b
 27089  0078F6  0100               	movlb	0	; () banked
 27090  0078F8  5170               	movf	(??_GetMemoryLong+5)& (0+255),w,b
 27091  0078FA  0100               	movlb	0	; () banked
 27092  0078FC  2174               	addwfc	(??_GetMemoryLong+9)& (0+255),w,b
 27093  0078FE  0100               	movlb	0	; () banked
 27094  007900  6F78               	movwf	(??_GetMemoryLong+13)& (0+255),b
 27095  007902  0100               	movlb	0	; () banked
 27096  007904  5171               	movf	(??_GetMemoryLong+6)& (0+255),w,b
 27097  007906  0100               	movlb	0	; () banked
 27098  007908  2175               	addwfc	(??_GetMemoryLong+10)& (0+255),w,b
 27099  00790A  0100               	movlb	0	; () banked
 27100  00790C  6F79               	movwf	(??_GetMemoryLong+14)& (0+255),b
 27101  00790E  0100               	movlb	0	; () banked
 27102  007910  5172               	movf	(??_GetMemoryLong+7)& (0+255),w,b
 27103  007912  0100               	movlb	0	; () banked
 27104  007914  2176               	addwfc	(??_GetMemoryLong+11)& (0+255),w,b
 27105  007916  0100               	movlb	0	; () banked
 27106  007918  6F7A               	movwf	(??_GetMemoryLong+15)& (0+255),b
 27107  00791A  0100               	movlb	0	; () banked
 27108  00791C  516B               	movf	??_GetMemoryLong& (0+255),w,b
 27109  00791E  0100               	movlb	0	; () banked
 27110  007920  2577               	addwf	(??_GetMemoryLong+12)& (0+255),w,b
 27111  007922  0100               	movlb	0	; () banked
 27112  007924  6F7B               	movwf	(??_GetMemoryLong+16)& (0+255),b
 27113  007926  0100               	movlb	0	; () banked
 27114  007928  516C               	movf	(??_GetMemoryLong+1)& (0+255),w,b
 27115  00792A  0100               	movlb	0	; () banked
 27116  00792C  2178               	addwfc	(??_GetMemoryLong+13)& (0+255),w,b
 27117  00792E  0100               	movlb	0	; () banked
 27118  007930  6F7C               	movwf	(??_GetMemoryLong+17)& (0+255),b
 27119  007932  0100               	movlb	0	; () banked
 27120  007934  516D               	movf	(??_GetMemoryLong+2)& (0+255),w,b
 27121  007936  0100               	movlb	0	; () banked
 27122  007938  2179               	addwfc	(??_GetMemoryLong+14)& (0+255),w,b
 27123  00793A  0100               	movlb	0	; () banked
 27124  00793C  6F7D               	movwf	(??_GetMemoryLong+18)& (0+255),b
 27125  00793E  0100               	movlb	0	; () banked
 27126  007940  516E               	movf	(??_GetMemoryLong+3)& (0+255),w,b
 27127  007942  0100               	movlb	0	; () banked
 27128  007944  217A               	addwfc	(??_GetMemoryLong+15)& (0+255),w,b
 27129  007946  0100               	movlb	0	; () banked
 27130  007948  6F7E               	movwf	(??_GetMemoryLong+19)& (0+255),b
 27131  00794A  0100               	movlb	0	; () banked
 27132  00794C  5186               	movf	GetMemoryLong@L& (0+255),w,b
 27133  00794E  0100               	movlb	0	; () banked
 27134  007950  257B               	addwf	(??_GetMemoryLong+16)& (0+255),w,b
 27135  007952  0100               	movlb	0	; () banked
 27136  007954  6F7F               	movwf	GetMemoryLong@temp& (0+255),b
 27137  007956  0E00               	movlw	0
 27138  007958  0100               	movlb	0	; () banked
 27139  00795A  217C               	addwfc	(??_GetMemoryLong+17)& (0+255),w,b
 27140  00795C  0100               	movlb	0	; () banked
 27141  00795E  6F80               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 27142  007960  0E00               	movlw	0
 27143  007962  0100               	movlb	0	; () banked
 27144  007964  217D               	addwfc	(??_GetMemoryLong+18)& (0+255),w,b
 27145  007966  0100               	movlb	0	; () banked
 27146  007968  6F81               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 27147  00796A  0E00               	movlw	0
 27148  00796C  0100               	movlb	0	; () banked
 27149  00796E  217E               	addwfc	(??_GetMemoryLong+19)& (0+255),w,b
 27150  007970  0100               	movlb	0	; () banked
 27151  007972  6F82               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 27152                           
 27153                           ; BSR set to: 0
 27154                           ;EEPROM.c: 399: return temp;
 27155  007974  C07F  F067         	movff	GetMemoryLong@temp,?_GetMemoryLong
 27156  007978  C080  F068         	movff	GetMemoryLong@temp+1,?_GetMemoryLong+1
 27157  00797C  C081  F069         	movff	GetMemoryLong@temp+2,?_GetMemoryLong+2
 27158  007980  C082  F06A         	movff	GetMemoryLong@temp+3,?_GetMemoryLong+3
 27159  007984  0012               	return	
 27160                           
 27161                           ; BSR set to: 0
 27162                           
 27163                           ; BSR set to: 0
 27164  007986  0012               	return		;funcret
 27165  007988                     __end_of_GetMemoryLong:
 27166                           	opt stack 0
 27167                           tblptru	equ	0xFF8
 27168                           tblptrh	equ	0xFF7
 27169                           tblptrl	equ	0xFF6
 27170                           tablat	equ	0xFF5
 27171                           prodh	equ	0xFF4
 27172                           prodl	equ	0xFF3
 27173                           intcon	equ	0xFF2
 27174                           intcon2	equ	0xFF1
 27175                           indf0	equ	0xFEF
 27176                           postinc0	equ	0xFEE
 27177                           plusw0	equ	0xFEB
 27178                           fsr0h	equ	0xFEA
 27179                           fsr0l	equ	0xFE9
 27180                           wreg	equ	0xFE8
 27181                           indf1	equ	0xFE7
 27182                           postdec1	equ	0xFE5
 27183                           fsr1h	equ	0xFE2
 27184                           fsr1l	equ	0xFE1
 27185                           indf2	equ	0xFDF
 27186                           postinc2	equ	0xFDE
 27187                           postdec2	equ	0xFDD
 27188                           plusw2	equ	0xFDB
 27189                           fsr2h	equ	0xFDA
 27190                           fsr2l	equ	0xFD9
 27191                           status	equ	0xFD8
 27192                           
 27193 ;; *************** function _SetMemoryChar *****************
 27194 ;; Defined at:
 27195 ;;		line 501 in file "EEPROM.c"
 27196 ;; Parameters:    Size  Location     Type
 27197 ;;  Data            1    wreg     unsigned char 
 27198 ;;  AddressFirst    1   13[BANK0 ] unsigned char 
 27199 ;; Auto vars:     Size  Location     Type
 27200 ;;  Data            1   15[BANK0 ] unsigned char 
 27201 ;;  Test            1   14[BANK0 ] unsigned char 
 27202 ;; Return value:  Size  Location     Type
 27203 ;;                  1    wreg      unsigned char 
 27204 ;; Registers used:
 27205 ;;		wreg, status,2, status,0, cstack
 27206 ;; Tracked objects:
 27207 ;;		On entry : 0/0
 27208 ;;		On exit  : 0/0
 27209 ;;		Unchanged: 0/0
 27210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27211 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27212 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27214 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27215 ;;Total ram usage:        3 bytes
 27216 ;; Hardware stack levels used:    1
 27217 ;; Hardware stack levels required when called:    8
 27218 ;; This function calls:
 27219 ;;		_GetMemoryChar
 27220 ;;		_WriteEEPROM_1Byte
 27221 ;; This function is called by:
 27222 ;;		_SetEEPROM1
 27223 ;;		_SetEEPROM2
 27224 ;; This function uses a non-reentrant model
 27225 ;;
 27226                           
 27227                           	psect	text61
 27228  00A00A                     __ptext61:
 27229                           	opt stack 0
 27230  00A00A                     _SetMemoryChar:
 27231                           	opt stack 19
 27232                           
 27233                           ; BSR set to: 0
 27234                           ;incstack = 0
 27235                           ;SetMemoryChar@Data stored from wreg
 27236  00A00A  0100               	movlb	0	; () banked
 27237  00A00C  6F6F               	movwf	SetMemoryChar@Data& (0+255),b
 27238                           
 27239                           ; BSR set to: 0
 27240                           ;EEPROM.c: 503: unsigned char Test;
 27241                           ;EEPROM.c: 505: WriteEEPROM_1Byte(AddressFirst, Data);
 27242  00A00E  C06D  F063         	movff	SetMemoryChar@AddressFirst,WriteEEPROM_1Byte@address
 27243  00A012  0100               	movlb	0	; () banked
 27244  00A014  6B64               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 27245  00A016  C06F  F065         	movff	SetMemoryChar@Data,WriteEEPROM_1Byte@data
 27246  00A01A  EC19  F04E         	call	_WriteEEPROM_1Byte	;wreg free
 27247                           
 27248                           ;EEPROM.c: 508: Test = GetMemoryChar(AddressFirst);
 27249  00A01E  0100               	movlb	0	; () banked
 27250  00A020  516D               	movf	SetMemoryChar@AddressFirst& (0+255),w,b
 27251  00A022  EC63  F051         	call	_GetMemoryChar
 27252  00A026  0100               	movlb	0	; () banked
 27253  00A028  5167               	movf	?_GetMemoryChar& (0+255),w,b
 27254  00A02A  0100               	movlb	0	; () banked
 27255  00A02C  6F6E               	movwf	SetMemoryChar@Test& (0+255),b
 27256                           
 27257                           ; BSR set to: 0
 27258                           ;EEPROM.c: 510: if(Test == Data)
 27259  00A02E  0100               	movlb	0	; () banked
 27260  00A030  516F               	movf	SetMemoryChar@Data& (0+255),w,b
 27261  00A032  0100               	movlb	0	; () banked
 27262  00A034  196E               	xorwf	SetMemoryChar@Test& (0+255),w,b
 27263  00A036  A4D8               	btfss	status,2,c
 27264  00A038  D002               	goto	l9638
 27265                           
 27266                           ; BSR set to: 0
 27267                           ;EEPROM.c: 511: {
 27268                           ;EEPROM.c: 512: return 1;
 27269  00A03A  0E01               	movlw	1
 27270                           
 27271                           ; BSR set to: 0
 27272  00A03C  0012               	return	
 27273  00A03E                     l9638:
 27274                           
 27275                           ; BSR set to: 0
 27276                           ;EEPROM.c: 513: }
 27277                           ;EEPROM.c: 514: return 0;
 27278  00A03E  0E00               	movlw	0
 27279  00A040  0012               	return	
 27280                           
 27281                           ; BSR set to: 0
 27282                           
 27283                           ; BSR set to: 0
 27284  00A042  0012               	return		;funcret
 27285  00A044                     __end_of_SetMemoryChar:
 27286                           	opt stack 0
 27287                           tblptru	equ	0xFF8
 27288                           tblptrh	equ	0xFF7
 27289                           tblptrl	equ	0xFF6
 27290                           tablat	equ	0xFF5
 27291                           prodh	equ	0xFF4
 27292                           prodl	equ	0xFF3
 27293                           intcon	equ	0xFF2
 27294                           intcon2	equ	0xFF1
 27295                           indf0	equ	0xFEF
 27296                           postinc0	equ	0xFEE
 27297                           plusw0	equ	0xFEB
 27298                           fsr0h	equ	0xFEA
 27299                           fsr0l	equ	0xFE9
 27300                           wreg	equ	0xFE8
 27301                           indf1	equ	0xFE7
 27302                           postdec1	equ	0xFE5
 27303                           fsr1h	equ	0xFE2
 27304                           fsr1l	equ	0xFE1
 27305                           indf2	equ	0xFDF
 27306                           postinc2	equ	0xFDE
 27307                           postdec2	equ	0xFDD
 27308                           plusw2	equ	0xFDB
 27309                           fsr2h	equ	0xFDA
 27310                           fsr2l	equ	0xFD9
 27311                           status	equ	0xFD8
 27312                           
 27313 ;; *************** function _WriteEEPROM_1Byte *****************
 27314 ;; Defined at:
 27315 ;;		line 102 in file "EEPROM.c"
 27316 ;; Parameters:    Size  Location     Type
 27317 ;;  address         2    3[BANK0 ] unsigned int 
 27318 ;;  data            1    5[BANK0 ] unsigned char 
 27319 ;; Auto vars:     Size  Location     Type
 27320 ;;  PEIEstatus      1    7[BANK0 ] unsigned char 
 27321 ;;  GIEstatus       1    6[BANK0 ] unsigned char 
 27322 ;; Return value:  Size  Location     Type
 27323 ;;		None               void
 27324 ;; Registers used:
 27325 ;;		wreg, status,2, status,0, cstack
 27326 ;; Tracked objects:
 27327 ;;		On entry : 0/0
 27328 ;;		On exit  : 0/0
 27329 ;;		Unchanged: 0/0
 27330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27331 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27332 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27334 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27335 ;;Total ram usage:        5 bytes
 27336 ;; Hardware stack levels used:    1
 27337 ;; Hardware stack levels required when called:    7
 27338 ;; This function calls:
 27339 ;;		_EEPROM_UNLOCK
 27340 ;; This function is called by:
 27341 ;;		_SetMemoryLong
 27342 ;;		_SetMemoryChar
 27343 ;;		_SetMemoryInt
 27344 ;; This function uses a non-reentrant model
 27345 ;;
 27346                           
 27347                           	psect	text62
 27348  009C32                     __ptext62:
 27349                           	opt stack 0
 27350  009C32                     _WriteEEPROM_1Byte:
 27351                           	opt stack 19
 27352                           
 27353                           ;EEPROM.c: 104: unsigned char GIEstatus = INTCONbits.GIE;
 27354                           
 27355                           ; BSR set to: 0
 27356                           ;incstack = 0
 27357  009C32  0E00               	movlw	0
 27358  009C34  BEF2               	btfsc	intcon,7,c	;volatile
 27359  009C36  0E01               	movlw	1
 27360  009C38  0100               	movlb	0	; () banked
 27361  009C3A  6F66               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 27362                           
 27363                           ;EEPROM.c: 105: unsigned char PEIEstatus = INTCONbits.PEIE;
 27364  009C3C  0E00               	movlw	0
 27365  009C3E  BCF2               	btfsc	intcon,6,c	;volatile
 27366  009C40  0E01               	movlw	1
 27367  009C42  0100               	movlb	0	; () banked
 27368  009C44  6F67               	movwf	WriteEEPROM_1Byte@PEIEstatus& (0+255),b
 27369                           
 27370                           ; BSR set to: 0
 27371                           ;EEPROM.c: 106: INTCONbits.GIE = 0;
 27372  009C46  9EF2               	bcf	intcon,7,c	;volatile
 27373                           
 27374                           ; BSR set to: 0
 27375                           ;EEPROM.c: 107: INTCONbits.PEIE = 0;
 27376  009C48  9CF2               	bcf	intcon,6,c	;volatile
 27377                           
 27378                           ; BSR set to: 0
 27379                           ;EEPROM.c: 108: EEADRH = (unsigned char)((address & 0x300) >> 8);
 27380  009C4A  0100               	movlb	0	; () banked
 27381  009C4C  5164               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
 27382  009C4E  0B03               	andlw	3
 27383  009C50  6EAA               	movwf	4010,c	;volatile
 27384                           
 27385                           ; BSR set to: 0
 27386                           ;EEPROM.c: 109: EEADR = (unsigned char)(address & 0xFF);
 27387  009C52  C063  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 27388                           
 27389                           ; BSR set to: 0
 27390                           ;EEPROM.c: 110: EEDATA = data;
 27391  009C56  C065  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 27392                           
 27393                           ; BSR set to: 0
 27394                           ;EEPROM.c: 111: EECON1bits.EEPGD = 0;
 27395  009C5A  9EA6               	bcf	4006,7,c	;volatile
 27396                           
 27397                           ; BSR set to: 0
 27398                           ;EEPROM.c: 112: EECON1bits.CFGS = 0;
 27399  009C5C  9CA6               	bcf	4006,6,c	;volatile
 27400                           
 27401                           ; BSR set to: 0
 27402                           ;EEPROM.c: 113: EECON1bits.WREN =1;
 27403  009C5E  84A6               	bsf	4006,2,c	;volatile
 27404                           
 27405                           ; BSR set to: 0
 27406                           ;EEPROM.c: 114: INTCONbits.GIE =0;
 27407  009C60  9EF2               	bcf	intcon,7,c	;volatile
 27408                           
 27409                           ; BSR set to: 0
 27410                           ;EEPROM.c: 115: EEPROM_UNLOCK();
 27411  009C62  ECDA  F051         	call	_EEPROM_UNLOCK	;wreg free
 27412                           
 27413                           ;EEPROM.c: 116: EECON1bits.WR =1;
 27414  009C66  82A6               	bsf	4006,1,c	;volatile
 27415                           
 27416                           ;EEPROM.c: 117: while(EECON1bits.WR);
 27417  009C68  D000               	goto	l1038
 27418  009C6A                     l1038:
 27419  009C6A  B2A6               	btfsc	4006,1,c	;volatile
 27420  009C6C  D7FE               	goto	l1038
 27421                           
 27422                           ;EEPROM.c: 118: EECON1bits.WREN =0;
 27423  009C6E  94A6               	bcf	4006,2,c	;volatile
 27424                           
 27425                           ;EEPROM.c: 119: if(GIEstatus)
 27426  009C70  0100               	movlb	0	; () banked
 27427  009C72  5166               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 27428  009C74  0100               	movlb	0	; () banked
 27429  009C76  B4D8               	btfsc	status,2,c
 27430  009C78  D002               	goto	l8814
 27431                           
 27432                           ; BSR set to: 0
 27433                           ;EEPROM.c: 120: {
 27434                           ;EEPROM.c: 121: INTCONbits.GIE = 1;
 27435  009C7A  8EF2               	bsf	intcon,7,c	;volatile
 27436  009C7C  D000               	goto	l8814
 27437  009C7E                     l8814:
 27438                           
 27439                           ; BSR set to: 0
 27440                           ;EEPROM.c: 122: }
 27441                           ;EEPROM.c: 123: if(PEIEstatus)
 27442  009C7E  0100               	movlb	0	; () banked
 27443  009C80  5167               	movf	WriteEEPROM_1Byte@PEIEstatus& (0+255),w,b
 27444  009C82  0100               	movlb	0	; () banked
 27445  009C84  B4D8               	btfsc	status,2,c
 27446  009C86  0012               	return	
 27447                           
 27448                           ; BSR set to: 0
 27449                           ;EEPROM.c: 124: {
 27450                           ;EEPROM.c: 125: INTCONbits.PEIE = 1;
 27451  009C88  8CF2               	bsf	intcon,6,c	;volatile
 27452  009C8A  0012               	return	
 27453                           
 27454                           ; BSR set to: 0
 27455                           
 27456                           ; BSR set to: 0
 27457  009C8C  0012               	return		;funcret
 27458  009C8E                     __end_of_WriteEEPROM_1Byte:
 27459                           	opt stack 0
 27460                           tblptru	equ	0xFF8
 27461                           tblptrh	equ	0xFF7
 27462                           tblptrl	equ	0xFF6
 27463                           tablat	equ	0xFF5
 27464                           prodh	equ	0xFF4
 27465                           prodl	equ	0xFF3
 27466                           intcon	equ	0xFF2
 27467                           intcon2	equ	0xFF1
 27468                           indf0	equ	0xFEF
 27469                           postinc0	equ	0xFEE
 27470                           plusw0	equ	0xFEB
 27471                           fsr0h	equ	0xFEA
 27472                           fsr0l	equ	0xFE9
 27473                           wreg	equ	0xFE8
 27474                           indf1	equ	0xFE7
 27475                           postdec1	equ	0xFE5
 27476                           fsr1h	equ	0xFE2
 27477                           fsr1l	equ	0xFE1
 27478                           indf2	equ	0xFDF
 27479                           postinc2	equ	0xFDE
 27480                           postdec2	equ	0xFDD
 27481                           plusw2	equ	0xFDB
 27482                           fsr2h	equ	0xFDA
 27483                           fsr2l	equ	0xFD9
 27484                           status	equ	0xFD8
 27485                           
 27486 ;; *************** function _EEPROM_UNLOCK *****************
 27487 ;; Defined at:
 27488 ;;		line 87 in file "EEPROM.c"
 27489 ;; Parameters:    Size  Location     Type
 27490 ;;		None
 27491 ;; Auto vars:     Size  Location     Type
 27492 ;;		None
 27493 ;; Return value:  Size  Location     Type
 27494 ;;		None               void
 27495 ;; Registers used:
 27496 ;;		wreg, status,2
 27497 ;; Tracked objects:
 27498 ;;		On entry : 0/0
 27499 ;;		On exit  : 0/0
 27500 ;;		Unchanged: 0/0
 27501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27506 ;;Total ram usage:        0 bytes
 27507 ;; Hardware stack levels used:    1
 27508 ;; Hardware stack levels required when called:    6
 27509 ;; This function calls:
 27510 ;;		Nothing
 27511 ;; This function is called by:
 27512 ;;		_WriteEEPROM_1Byte
 27513 ;; This function uses a non-reentrant model
 27514 ;;
 27515                           
 27516                           	psect	text63
 27517  00A3B4                     __ptext63:
 27518                           	opt stack 0
 27519  00A3B4                     _EEPROM_UNLOCK:
 27520                           	opt stack 19
 27521                           
 27522                           ;EEPROM.c: 89: EECON2 = 0x55;
 27523                           
 27524                           ; BSR set to: 0
 27525                           ;incstack = 0
 27526  00A3B4  0E55               	movlw	85
 27527  00A3B6  6EA7               	movwf	4007,c	;volatile
 27528                           
 27529                           ;EEPROM.c: 90: EECON2 = 0xAA;
 27530  00A3B8  0EAA               	movlw	170
 27531  00A3BA  6EA7               	movwf	4007,c	;volatile
 27532                           
 27533                           ;EEPROM.c: 91: EECON1bits.WR =1;
 27534  00A3BC  82A6               	bsf	4006,1,c	;volatile
 27535                           
 27536                           ;EEPROM.c: 92: while(EECON1bits.WR);
 27537  00A3BE  D000               	goto	l1032
 27538  00A3C0                     l1032:
 27539  00A3C0  B2A6               	btfsc	4006,1,c	;volatile
 27540  00A3C2  D7FE               	goto	l1032
 27541                           
 27542                           ;EEPROM.c: 93: __nop();
 27543  00A3C4  F000               	nop	
 27544                           
 27545                           ;EEPROM.c: 94: __nop();
 27546  00A3C6  F000               	nop	
 27547  00A3C8  0012               	return		;funcret
 27548  00A3CA                     __end_of_EEPROM_UNLOCK:
 27549                           	opt stack 0
 27550                           tblptru	equ	0xFF8
 27551                           tblptrh	equ	0xFF7
 27552                           tblptrl	equ	0xFF6
 27553                           tablat	equ	0xFF5
 27554                           prodh	equ	0xFF4
 27555                           prodl	equ	0xFF3
 27556                           intcon	equ	0xFF2
 27557                           intcon2	equ	0xFF1
 27558                           indf0	equ	0xFEF
 27559                           postinc0	equ	0xFEE
 27560                           plusw0	equ	0xFEB
 27561                           fsr0h	equ	0xFEA
 27562                           fsr0l	equ	0xFE9
 27563                           wreg	equ	0xFE8
 27564                           indf1	equ	0xFE7
 27565                           postdec1	equ	0xFE5
 27566                           fsr1h	equ	0xFE2
 27567                           fsr1l	equ	0xFE1
 27568                           indf2	equ	0xFDF
 27569                           postinc2	equ	0xFDE
 27570                           postdec2	equ	0xFDD
 27571                           plusw2	equ	0xFDB
 27572                           fsr2h	equ	0xFDA
 27573                           fsr2l	equ	0xFD9
 27574                           status	equ	0xFD8
 27575                           
 27576 ;; *************** function _GetMemoryChar *****************
 27577 ;; Defined at:
 27578 ;;		line 487 in file "EEPROM.c"
 27579 ;; Parameters:    Size  Location     Type
 27580 ;;  AddressFirst    1    wreg     unsigned char 
 27581 ;; Auto vars:     Size  Location     Type
 27582 ;;  AddressFirst    1   11[BANK0 ] unsigned char 
 27583 ;;  H               1   12[BANK0 ] unsigned char 
 27584 ;; Return value:  Size  Location     Type
 27585 ;;                  4    7[BANK0 ] unsigned long 
 27586 ;; Registers used:
 27587 ;;		wreg, status,2, status,0, cstack
 27588 ;; Tracked objects:
 27589 ;;		On entry : 0/0
 27590 ;;		On exit  : 0/0
 27591 ;;		Unchanged: 0/0
 27592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27593 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27594 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27596 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27597 ;;Total ram usage:        6 bytes
 27598 ;; Hardware stack levels used:    1
 27599 ;; Hardware stack levels required when called:    7
 27600 ;; This function calls:
 27601 ;;		_ReadEEPROM_1Byte
 27602 ;; This function is called by:
 27603 ;;		_GetEEPROM1
 27604 ;;		_GetEEPROM2
 27605 ;;		_SetMemoryChar
 27606 ;; This function uses a non-reentrant model
 27607 ;;
 27608                           
 27609                           	psect	text64
 27610  00A2C6                     __ptext64:
 27611                           	opt stack 0
 27612  00A2C6                     _GetMemoryChar:
 27613                           	opt stack 19
 27614                           
 27615                           ;incstack = 0
 27616                           ;GetMemoryChar@AddressFirst stored from wreg
 27617  00A2C6  0100               	movlb	0	; () banked
 27618  00A2C8  6F6B               	movwf	GetMemoryChar@AddressFirst& (0+255),b
 27619                           
 27620                           ; BSR set to: 0
 27621                           ;EEPROM.c: 489: unsigned char H;
 27622                           ;EEPROM.c: 491: H = ReadEEPROM_1Byte(AddressFirst);
 27623  00A2CA  C06B  F063         	movff	GetMemoryChar@AddressFirst,ReadEEPROM_1Byte@address
 27624  00A2CE  0100               	movlb	0	; () banked
 27625  00A2D0  6B64               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 27626  00A2D2  EC74  F04E         	call	_ReadEEPROM_1Byte	;wreg free
 27627  00A2D6  0100               	movlb	0	; () banked
 27628  00A2D8  5163               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 27629  00A2DA  0100               	movlb	0	; () banked
 27630  00A2DC  6F6C               	movwf	GetMemoryChar@H& (0+255),b
 27631                           
 27632                           ; BSR set to: 0
 27633                           ;EEPROM.c: 493: return H;
 27634  00A2DE  0100               	movlb	0	; () banked
 27635  00A2E0  516C               	movf	GetMemoryChar@H& (0+255),w,b
 27636  00A2E2  0100               	movlb	0	; () banked
 27637  00A2E4  6F67               	movwf	?_GetMemoryChar& (0+255),b
 27638  00A2E6  6B68               	clrf	(?_GetMemoryChar+1)& (0+255),b
 27639  00A2E8  6B69               	clrf	(?_GetMemoryChar+2)& (0+255),b
 27640  00A2EA  6B6A               	clrf	(?_GetMemoryChar+3)& (0+255),b
 27641  00A2EC  0012               	return	
 27642                           
 27643                           ; BSR set to: 0
 27644                           
 27645                           ; BSR set to: 0
 27646  00A2EE  0012               	return		;funcret
 27647  00A2F0                     __end_of_GetMemoryChar:
 27648                           	opt stack 0
 27649                           tblptru	equ	0xFF8
 27650                           tblptrh	equ	0xFF7
 27651                           tblptrl	equ	0xFF6
 27652                           tablat	equ	0xFF5
 27653                           prodh	equ	0xFF4
 27654                           prodl	equ	0xFF3
 27655                           intcon	equ	0xFF2
 27656                           intcon2	equ	0xFF1
 27657                           indf0	equ	0xFEF
 27658                           postinc0	equ	0xFEE
 27659                           plusw0	equ	0xFEB
 27660                           fsr0h	equ	0xFEA
 27661                           fsr0l	equ	0xFE9
 27662                           wreg	equ	0xFE8
 27663                           indf1	equ	0xFE7
 27664                           postdec1	equ	0xFE5
 27665                           fsr1h	equ	0xFE2
 27666                           fsr1l	equ	0xFE1
 27667                           indf2	equ	0xFDF
 27668                           postinc2	equ	0xFDE
 27669                           postdec2	equ	0xFDD
 27670                           plusw2	equ	0xFDB
 27671                           fsr2h	equ	0xFDA
 27672                           fsr2l	equ	0xFD9
 27673                           status	equ	0xFD8
 27674                           
 27675 ;; *************** function _ReadEEPROM_1Byte *****************
 27676 ;; Defined at:
 27677 ;;		line 55 in file "EEPROM.c"
 27678 ;; Parameters:    Size  Location     Type
 27679 ;;  address         2    3[BANK0 ] unsigned int 
 27680 ;; Auto vars:     Size  Location     Type
 27681 ;;  PEIEstatus      1    6[BANK0 ] unsigned char 
 27682 ;;  GIEstatus       1    5[BANK0 ] unsigned char 
 27683 ;; Return value:  Size  Location     Type
 27684 ;;                  2    3[BANK0 ] unsigned int 
 27685 ;; Registers used:
 27686 ;;		wreg, status,2, status,0
 27687 ;; Tracked objects:
 27688 ;;		On entry : 0/0
 27689 ;;		On exit  : 0/0
 27690 ;;		Unchanged: 0/0
 27691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27692 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27693 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27695 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27696 ;;Total ram usage:        4 bytes
 27697 ;; Hardware stack levels used:    1
 27698 ;; Hardware stack levels required when called:    6
 27699 ;; This function calls:
 27700 ;;		Nothing
 27701 ;; This function is called by:
 27702 ;;		_GetMemoryLong
 27703 ;;		_GetMemoryChar
 27704 ;;		_GetMemoryInt
 27705 ;; This function uses a non-reentrant model
 27706 ;;
 27707                           
 27708                           	psect	text65
 27709  009CE8                     __ptext65:
 27710                           	opt stack 0
 27711  009CE8                     _ReadEEPROM_1Byte:
 27712                           	opt stack 19
 27713                           
 27714                           ;EEPROM.c: 57: unsigned char GIEstatus = INTCONbits.GIE;
 27715                           
 27716                           ; BSR set to: 0
 27717                           ;incstack = 0
 27718  009CE8  0E00               	movlw	0
 27719  009CEA  BEF2               	btfsc	intcon,7,c	;volatile
 27720  009CEC  0E01               	movlw	1
 27721  009CEE  0100               	movlb	0	; () banked
 27722  009CF0  6F65               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 27723                           
 27724                           ;EEPROM.c: 58: unsigned char PEIEstatus = INTCONbits.PEIE;
 27725  009CF2  0E00               	movlw	0
 27726  009CF4  BCF2               	btfsc	intcon,6,c	;volatile
 27727  009CF6  0E01               	movlw	1
 27728  009CF8  0100               	movlb	0	; () banked
 27729  009CFA  6F66               	movwf	ReadEEPROM_1Byte@PEIEstatus& (0+255),b
 27730                           
 27731                           ; BSR set to: 0
 27732                           ;EEPROM.c: 59: INTCONbits.GIE = 0;
 27733  009CFC  9EF2               	bcf	intcon,7,c	;volatile
 27734                           
 27735                           ; BSR set to: 0
 27736                           ;EEPROM.c: 60: INTCONbits.PEIE = 0;
 27737  009CFE  9CF2               	bcf	intcon,6,c	;volatile
 27738                           
 27739                           ; BSR set to: 0
 27740                           ;EEPROM.c: 61: EECON1bits.EEPGD = 0;
 27741  009D00  9EA6               	bcf	4006,7,c	;volatile
 27742                           
 27743                           ; BSR set to: 0
 27744                           ;EEPROM.c: 62: EECON1bits.CFGS = 0;
 27745  009D02  9CA6               	bcf	4006,6,c	;volatile
 27746                           
 27747                           ; BSR set to: 0
 27748                           ;EEPROM.c: 63: EEADRH = (unsigned char)((address & 0x300) >> 8);
 27749  009D04  0100               	movlb	0	; () banked
 27750  009D06  5164               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
 27751  009D08  0B03               	andlw	3
 27752  009D0A  6EAA               	movwf	4010,c	;volatile
 27753                           
 27754                           ; BSR set to: 0
 27755                           ;EEPROM.c: 64: EEADR = (unsigned char)(address & 0xFF);
 27756  009D0C  C063  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 27757                           
 27758                           ; BSR set to: 0
 27759                           ;EEPROM.c: 65: INTCONbits.GIE =0;
 27760  009D10  9EF2               	bcf	intcon,7,c	;volatile
 27761                           
 27762                           ; BSR set to: 0
 27763                           ;EEPROM.c: 66: EECON1bits.RD = 1;
 27764  009D12  80A6               	bsf	4006,0,c	;volatile
 27765                           
 27766                           ;EEPROM.c: 67: while(EECON1bits.RD);
 27767  009D14  D000               	goto	l1024
 27768  009D16                     l1024:
 27769  009D16  B0A6               	btfsc	4006,0,c	;volatile
 27770  009D18  D7FE               	goto	l1024
 27771                           
 27772                           ;EEPROM.c: 68: __nop();
 27773  009D1A  F000               	nop	
 27774                           
 27775                           ;EEPROM.c: 69: __nop();
 27776  009D1C  F000               	nop	
 27777                           
 27778                           ;EEPROM.c: 70: if(GIEstatus)
 27779  009D1E  0100               	movlb	0	; () banked
 27780  009D20  5165               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 27781  009D22  0100               	movlb	0	; () banked
 27782  009D24  B4D8               	btfsc	status,2,c
 27783  009D26  D002               	goto	l8552
 27784                           
 27785                           ; BSR set to: 0
 27786                           ;EEPROM.c: 71: {
 27787                           ;EEPROM.c: 72: INTCONbits.GIE = 1;
 27788  009D28  8EF2               	bsf	intcon,7,c	;volatile
 27789  009D2A  D000               	goto	l8552
 27790  009D2C                     l8552:
 27791                           
 27792                           ; BSR set to: 0
 27793                           ;EEPROM.c: 73: }
 27794                           ;EEPROM.c: 74: if(PEIEstatus)
 27795  009D2C  0100               	movlb	0	; () banked
 27796  009D2E  5166               	movf	ReadEEPROM_1Byte@PEIEstatus& (0+255),w,b
 27797  009D30  0100               	movlb	0	; () banked
 27798  009D32  A4D8               	btfss	status,2,c
 27799                           
 27800                           ; BSR set to: 0
 27801                           ;EEPROM.c: 75: {
 27802                           ;EEPROM.c: 76: INTCONbits.PEIE = 1;
 27803  009D34  8CF2               	bsf	intcon,6,c	;volatile
 27804                           
 27805                           ; BSR set to: 0
 27806                           ;EEPROM.c: 77: }
 27807                           ;EEPROM.c: 78: return (EEDATA);
 27808  009D36  CFA8 F063          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 27809  009D3A  0100               	movlb	0	; () banked
 27810  009D3C  6B64               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 27811                           
 27812                           ; BSR set to: 0
 27813  009D3E  0012               	return		;funcret
 27814  009D40                     __end_of_ReadEEPROM_1Byte:
 27815                           	opt stack 0
 27816                           tblptru	equ	0xFF8
 27817                           tblptrh	equ	0xFF7
 27818                           tblptrl	equ	0xFF6
 27819                           tablat	equ	0xFF5
 27820                           prodh	equ	0xFF4
 27821                           prodl	equ	0xFF3
 27822                           intcon	equ	0xFF2
 27823                           intcon2	equ	0xFF1
 27824                           indf0	equ	0xFEF
 27825                           postinc0	equ	0xFEE
 27826                           plusw0	equ	0xFEB
 27827                           fsr0h	equ	0xFEA
 27828                           fsr0l	equ	0xFE9
 27829                           wreg	equ	0xFE8
 27830                           indf1	equ	0xFE7
 27831                           postdec1	equ	0xFE5
 27832                           fsr1h	equ	0xFE2
 27833                           fsr1l	equ	0xFE1
 27834                           indf2	equ	0xFDF
 27835                           postinc2	equ	0xFDE
 27836                           postdec2	equ	0xFDD
 27837                           plusw2	equ	0xFDB
 27838                           fsr2h	equ	0xFDA
 27839                           fsr2l	equ	0xFD9
 27840                           status	equ	0xFD8
 27841                           
 27842 ;; *************** function _BluetoothInitialSetup *****************
 27843 ;; Defined at:
 27844 ;;		line 183 in file "Bluetooth.c"
 27845 ;; Parameters:    Size  Location     Type
 27846 ;;		None
 27847 ;; Auto vars:     Size  Location     Type
 27848 ;;  buf            50  111[BANK1 ] unsigned char [50]
 27849 ;;  BluetoothVer   30   81[BANK1 ] unsigned char [30]
 27850 ;;  BluetoothVer   30   51[BANK1 ] unsigned char [30]
 27851 ;;  i               1  164[BANK1 ] unsigned char 
 27852 ;;  ok              1  163[BANK1 ] unsigned char 
 27853 ;;  j               1  162[BANK1 ] unsigned char 
 27854 ;;  first           1  161[BANK1 ] unsigned char 
 27855 ;; Return value:  Size  Location     Type
 27856 ;;                  1    wreg      unsigned char 
 27857 ;; Registers used:
 27858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27859 ;; Tracked objects:
 27860 ;;		On entry : 0/0
 27861 ;;		On exit  : 0/0
 27862 ;;		Unchanged: 0/0
 27863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27865 ;;      Locals:         0       0     114       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27866 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27867 ;;      Totals:         0       1     114       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27868 ;;Total ram usage:      115 bytes
 27869 ;; Hardware stack levels used:    1
 27870 ;; Hardware stack levels required when called:   11
 27871 ;; This function calls:
 27872 ;;		_BufferCopy
 27873 ;;		_ClearUSART
 27874 ;;		_EnterCommandMode
 27875 ;;		_StringContains
 27876 ;;		_StringContainsCaseInsensitive
 27877 ;;		_UARTstring
 27878 ;;		_UARTstring_CONST
 27879 ;;		_cleanBuffer
 27880 ;;		_delayUS
 27881 ;;		_sprintf
 27882 ;; This function is called by:
 27883 ;;		_InitBluetooth
 27884 ;; This function uses a non-reentrant model
 27885 ;;
 27886                           
 27887                           	psect	text66
 27888  004130                     __ptext66:
 27889                           	opt stack 0
 27890  004130                     _BluetoothInitialSetup:
 27891                           	opt stack 17
 27892                           
 27893                           ;Bluetooth.c: 185: unsigned char buf[50];
 27894                           ;Bluetooth.c: 186: unsigned char ok = 1;
 27895                           
 27896                           ; BSR set to: 0
 27897                           ;incstack = 0
 27898  004130  0E01               	movlw	1
 27899  004132  0101               	movlb	1	; () banked
 27900  004134  6FA3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 27901                           
 27902                           ;Bluetooth.c: 187: unsigned char BluetoothVersionLine1[30];
 27903                           ;Bluetooth.c: 188: unsigned char BluetoothVersionLine2[30];
 27904                           ;Bluetooth.c: 189: unsigned char i = 0;
 27905  004136  0E00               	movlw	0
 27906  004138  0101               	movlb	1	; () banked
 27907  00413A  6FA4               	movwf	BluetoothInitialSetup@i& (0+255),b
 27908                           
 27909                           ;Bluetooth.c: 190: unsigned char j = 0;
 27910  00413C  0E00               	movlw	0
 27911  00413E  0101               	movlb	1	; () banked
 27912  004140  6FA2               	movwf	BluetoothInitialSetup@j& (0+255),b
 27913                           
 27914                           ;Bluetooth.c: 191: unsigned char first = 1;
 27915  004142  0E01               	movlw	1
 27916  004144  0101               	movlb	1	; () banked
 27917  004146  6FA1               	movwf	BluetoothInitialSetup@first& (0+255),b
 27918                           
 27919                           ; BSR set to: 1
 27920                           ;Bluetooth.c: 193: cleanBuffer(buf,50);
 27921  004148  0E6F               	movlw	low BluetoothInitialSetup@buf
 27922  00414A  0100               	movlb	0	; () banked
 27923  00414C  6F63               	movwf	cleanBuffer@data& (0+255),b
 27924  00414E  0E01               	movlw	high BluetoothInitialSetup@buf
 27925  004150  0100               	movlb	0	; () banked
 27926  004152  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 27927  004154  0E00               	movlw	0
 27928  004156  0100               	movlb	0	; () banked
 27929  004158  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
 27930  00415A  0E32               	movlw	50
 27931  00415C  6F65               	movwf	cleanBuffer@count& (0+255),b
 27932  00415E  EC47  F04E         	call	_cleanBuffer	;wreg free
 27933                           
 27934                           ;Bluetooth.c: 194: cleanBuffer(BluetoothVersionLine1,30);
 27935  004162  0E33               	movlw	low BluetoothInitialSetup@BluetoothVersionLine1
 27936  004164  0100               	movlb	0	; () banked
 27937  004166  6F63               	movwf	cleanBuffer@data& (0+255),b
 27938  004168  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine1
 27939  00416A  0100               	movlb	0	; () banked
 27940  00416C  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 27941  00416E  0E00               	movlw	0
 27942  004170  0100               	movlb	0	; () banked
 27943  004172  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
 27944  004174  0E1E               	movlw	30
 27945  004176  6F65               	movwf	cleanBuffer@count& (0+255),b
 27946  004178  EC47  F04E         	call	_cleanBuffer	;wreg free
 27947                           
 27948                           ;Bluetooth.c: 195: cleanBuffer(BluetoothVersionLine2,30);
 27949  00417C  0E51               	movlw	low BluetoothInitialSetup@BluetoothVersionLine2
 27950  00417E  0100               	movlb	0	; () banked
 27951  004180  6F63               	movwf	cleanBuffer@data& (0+255),b
 27952  004182  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine2
 27953  004184  0100               	movlb	0	; () banked
 27954  004186  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 27955  004188  0E00               	movlw	0
 27956  00418A  0100               	movlb	0	; () banked
 27957  00418C  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
 27958  00418E  0E1E               	movlw	30
 27959  004190  6F65               	movwf	cleanBuffer@count& (0+255),b
 27960  004192  EC47  F04E         	call	_cleanBuffer	;wreg free
 27961                           
 27962                           ;Bluetooth.c: 197: if(!EnterCommandMode())
 27963  004196  EC7A  F03D         	call	_EnterCommandMode	;wreg free
 27964  00419A  0900               	iorlw	0
 27965  00419C  A4D8               	btfss	status,2,c
 27966  00419E  D002               	goto	l10372
 27967                           
 27968                           ;Bluetooth.c: 198: {
 27969                           ;Bluetooth.c: 199: return 0;
 27970  0041A0  0E00               	movlw	0
 27971  0041A2  0012               	return	
 27972  0041A4                     l10372:
 27973                           
 27974                           ;Bluetooth.c: 200: }
 27975                           ;Bluetooth.c: 202: ClearUSART();
 27976  0041A4  EC21  F052         	call	_ClearUSART	;wreg free
 27977                           
 27978                           ;Bluetooth.c: 203: PIR1bits.RCIF = 0;
 27979  0041A8  9A9E               	bcf	3998,5,c	;volatile
 27980                           
 27981                           ;Bluetooth.c: 204: PIE1bits.RCIE = 1;
 27982  0041AA  8A9D               	bsf	3997,5,c	;volatile
 27983                           
 27984                           ;Bluetooth.c: 205: UARTstring_CONST("V\r");
 27985  0041AC  0EFC               	movlw	low STR_6
 27986  0041AE  0100               	movlb	0	; () banked
 27987  0041B0  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 27988  0041B2  0EFF               	movlw	high STR_6
 27989  0041B4  0100               	movlb	0	; () banked
 27990  0041B6  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 27991  0041B8  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 27992                           
 27993                           ;Bluetooth.c: 206: delayUS(50000);
 27994  0041BC  0E50               	movlw	80
 27995  0041BE  0100               	movlb	0	; () banked
 27996  0041C0  6F63               	movwf	delayUS@US& (0+255),b
 27997  0041C2  0EC3               	movlw	195
 27998  0041C4  6F64               	movwf	(delayUS@US+1)& (0+255),b
 27999  0041C6  0E00               	movlw	0
 28000  0041C8  6F65               	movwf	(delayUS@US+2)& (0+255),b
 28001  0041CA  0E00               	movlw	0
 28002  0041CC  6F66               	movwf	(delayUS@US+3)& (0+255),b
 28003  0041CE  ECA0  F04E         	call	_delayUS	;wreg free
 28004                           
 28005                           ;Bluetooth.c: 207: PIE1bits.RCIE = 0;
 28006  0041D2  9A9D               	bcf	3997,5,c	;volatile
 28007                           
 28008                           ;Bluetooth.c: 208: for(i=0; i < (30 * 2); i++)
 28009  0041D4  0E00               	movlw	0
 28010  0041D6  0101               	movlb	1	; () banked
 28011  0041D8  6FA4               	movwf	BluetoothInitialSetup@i& (0+255),b
 28012  0041DA                     l10386:
 28013                           
 28014                           ; BSR set to: 1
 28015  0041DA  0E3B               	movlw	59
 28016  0041DC  0101               	movlb	1	; () banked
 28017  0041DE  65A4               	cpfsgt	BluetoothInitialSetup@i& (0+255),b
 28018  0041E0  D001               	goto	l10390
 28019                           
 28020                           ; BSR set to: 1
 28021  0041E2  D07A               	goto	l10420
 28022  0041E4                     l10390:
 28023                           
 28024                           ; BSR set to: 1
 28025                           ;Bluetooth.c: 209: {
 28026                           ;Bluetooth.c: 210: if(first == 1)
 28027  0041E4  0101               	movlb	1	; () banked
 28028  0041E6  05A1               	decf	BluetoothInitialSetup@first& (0+255),w,b
 28029  0041E8  A4D8               	btfss	status,2,c
 28030  0041EA  D037               	goto	l10402
 28031                           
 28032                           ; BSR set to: 1
 28033                           ;Bluetooth.c: 211: {
 28034                           ;Bluetooth.c: 212: if(CommandString[i] == '\n' || CommandString[i] == '\r')
 28035  0041EC  0101               	movlb	1	; () banked
 28036  0041EE  51A4               	movf	BluetoothInitialSetup@i& (0+255),w,b
 28037  0041F0  0D01               	mullw	1
 28038  0041F2  0E18               	movlw	low _CommandString
 28039  0041F4  24F3               	addwf	prodl,w,c
 28040  0041F6  6ED9               	movwf	fsr2l,c
 28041  0041F8  0E03               	movlw	high _CommandString
 28042  0041FA  20F4               	addwfc	prodh,w,c
 28043  0041FC  6EDA               	movwf	fsr2h,c
 28044  0041FE  0E0A               	movlw	10
 28045  004200  18DE               	xorwf	postinc2,w,c
 28046  004202  B4D8               	btfsc	status,2,c
 28047  004204  D00D               	goto	l10396
 28048                           
 28049                           ; BSR set to: 1
 28050  004206  0101               	movlb	1	; () banked
 28051  004208  51A4               	movf	BluetoothInitialSetup@i& (0+255),w,b
 28052  00420A  0D01               	mullw	1
 28053  00420C  0E18               	movlw	low _CommandString
 28054  00420E  24F3               	addwf	prodl,w,c
 28055  004210  6ED9               	movwf	fsr2l,c
 28056  004212  0E03               	movlw	high _CommandString
 28057  004214  20F4               	addwfc	prodh,w,c
 28058  004216  6EDA               	movwf	fsr2h,c
 28059  004218  0E0D               	movlw	13
 28060  00421A  18DE               	xorwf	postinc2,w,c
 28061  00421C  A4D8               	btfss	status,2,c
 28062  00421E  D004               	goto	l10398
 28063  004220                     l10396:
 28064                           
 28065                           ; BSR set to: 1
 28066                           ;Bluetooth.c: 213: {
 28067                           ;Bluetooth.c: 214: first = 0;
 28068  004220  0E00               	movlw	0
 28069  004222  0101               	movlb	1	; () banked
 28070  004224  6FA1               	movwf	BluetoothInitialSetup@first& (0+255),b
 28071                           
 28072                           ;Bluetooth.c: 215: }
 28073  004226  D055               	goto	l10416
 28074  004228                     l10398:
 28075                           
 28076                           ; BSR set to: 1
 28077                           ;Bluetooth.c: 216: else
 28078                           ;Bluetooth.c: 217: {
 28079                           ;Bluetooth.c: 218: if( i < (30 - 1))
 28080  004228  0E1D               	movlw	29
 28081  00422A  0101               	movlb	1	; () banked
 28082  00422C  61A4               	cpfslt	BluetoothInitialSetup@i& (0+255),b
 28083  00422E  D051               	goto	l10416
 28084                           
 28085                           ; BSR set to: 1
 28086                           ;Bluetooth.c: 219: {
 28087                           ;Bluetooth.c: 220: BluetoothVersionLine1[i] = CommandString[i];
 28088  004230  0101               	movlb	1	; () banked
 28089  004232  51A4               	movf	BluetoothInitialSetup@i& (0+255),w,b
 28090  004234  0D01               	mullw	1
 28091  004236  0E18               	movlw	low _CommandString
 28092  004238  24F3               	addwf	prodl,w,c
 28093  00423A  6ED9               	movwf	fsr2l,c
 28094  00423C  0E03               	movlw	high _CommandString
 28095  00423E  20F4               	addwfc	prodh,w,c
 28096  004240  6EDA               	movwf	fsr2h,c
 28097  004242  0101               	movlb	1	; () banked
 28098  004244  51A4               	movf	BluetoothInitialSetup@i& (0+255),w,b
 28099  004246  0D01               	mullw	1
 28100  004248  0E33               	movlw	low BluetoothInitialSetup@BluetoothVersionLine1
 28101  00424A  24F3               	addwf	prodl,w,c
 28102  00424C  6EE1               	movwf	fsr1l,c
 28103  00424E  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine1
 28104  004250  20F4               	addwfc	prodh,w,c
 28105  004252  6EE2               	movwf	fsr1h,c
 28106  004254  CFDF FFE7          	movff	indf2,indf1
 28107                           
 28108                           ; BSR set to: 1
 28109                           ;Bluetooth.c: 221: }
 28110                           ;Bluetooth.c: 222: }
 28111                           ;Bluetooth.c: 223: }
 28112                           
 28113                           ; BSR set to: 1
 28114  004258  D03C               	goto	l10416
 28115  00425A                     l10402:
 28116                           
 28117                           ; BSR set to: 1
 28118                           ;Bluetooth.c: 224: else
 28119                           ;Bluetooth.c: 225: {
 28120                           ;Bluetooth.c: 226: if(CommandString[i] != '\n' && CommandString[i] != '\r')
 28121  00425A  0101               	movlb	1	; () banked
 28122  00425C  51A4               	movf	BluetoothInitialSetup@i& (0+255),w,b
 28123  00425E  0D01               	mullw	1
 28124  004260  0E18               	movlw	low _CommandString
 28125  004262  24F3               	addwf	prodl,w,c
 28126  004264  6ED9               	movwf	fsr2l,c
 28127  004266  0E03               	movlw	high _CommandString
 28128  004268  20F4               	addwfc	prodh,w,c
 28129  00426A  6EDA               	movwf	fsr2h,c
 28130  00426C  0E0A               	movlw	10
 28131  00426E  18DE               	xorwf	postinc2,w,c
 28132  004270  B4D8               	btfsc	status,2,c
 28133  004272  D029               	goto	l10412
 28134                           
 28135                           ; BSR set to: 1
 28136  004274  0101               	movlb	1	; () banked
 28137  004276  51A4               	movf	BluetoothInitialSetup@i& (0+255),w,b
 28138  004278  0D01               	mullw	1
 28139  00427A  0E18               	movlw	low _CommandString
 28140  00427C  24F3               	addwf	prodl,w,c
 28141  00427E  6ED9               	movwf	fsr2l,c
 28142  004280  0E03               	movlw	high _CommandString
 28143  004282  20F4               	addwfc	prodh,w,c
 28144  004284  6EDA               	movwf	fsr2h,c
 28145  004286  0E0D               	movlw	13
 28146  004288  18DE               	xorwf	postinc2,w,c
 28147  00428A  B4D8               	btfsc	status,2,c
 28148  00428C  D01C               	goto	l10412
 28149                           
 28150                           ; BSR set to: 1
 28151                           ;Bluetooth.c: 227: {
 28152                           ;Bluetooth.c: 228: if( j < (30 - 1))
 28153  00428E  0E1D               	movlw	29
 28154  004290  0101               	movlb	1	; () banked
 28155  004292  61A2               	cpfslt	BluetoothInitialSetup@j& (0+255),b
 28156  004294  D015               	goto	l10410
 28157                           
 28158                           ; BSR set to: 1
 28159                           ;Bluetooth.c: 229: {
 28160                           ;Bluetooth.c: 230: BluetoothVersionLine2[j] = CommandString[i];
 28161  004296  0101               	movlb	1	; () banked
 28162  004298  51A4               	movf	BluetoothInitialSetup@i& (0+255),w,b
 28163  00429A  0D01               	mullw	1
 28164  00429C  0E18               	movlw	low _CommandString
 28165  00429E  24F3               	addwf	prodl,w,c
 28166  0042A0  6ED9               	movwf	fsr2l,c
 28167  0042A2  0E03               	movlw	high _CommandString
 28168  0042A4  20F4               	addwfc	prodh,w,c
 28169  0042A6  6EDA               	movwf	fsr2h,c
 28170  0042A8  0101               	movlb	1	; () banked
 28171  0042AA  51A2               	movf	BluetoothInitialSetup@j& (0+255),w,b
 28172  0042AC  0D01               	mullw	1
 28173  0042AE  0E51               	movlw	low BluetoothInitialSetup@BluetoothVersionLine2
 28174  0042B0  24F3               	addwf	prodl,w,c
 28175  0042B2  6EE1               	movwf	fsr1l,c
 28176  0042B4  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine2
 28177  0042B6  20F4               	addwfc	prodh,w,c
 28178  0042B8  6EE2               	movwf	fsr1h,c
 28179  0042BA  CFDF FFE7          	movff	indf2,indf1
 28180  0042BE  D000               	goto	l10410
 28181  0042C0                     l10410:
 28182                           
 28183                           ; BSR set to: 1
 28184                           ;Bluetooth.c: 231: }
 28185                           ;Bluetooth.c: 232: j++;
 28186  0042C0  0101               	movlb	1	; () banked
 28187  0042C2  2BA2               	incf	BluetoothInitialSetup@j& (0+255),f,b
 28188                           
 28189                           ;Bluetooth.c: 233: }
 28190  0042C4  D006               	goto	l10416
 28191  0042C6                     l10412:
 28192                           
 28193                           ; BSR set to: 1
 28194                           ;Bluetooth.c: 234: else
 28195                           ;Bluetooth.c: 235: {
 28196                           ;Bluetooth.c: 236: if(j > 2)
 28197  0042C6  0E02               	movlw	2
 28198  0042C8  0101               	movlb	1	; () banked
 28199  0042CA  65A2               	cpfsgt	BluetoothInitialSetup@j& (0+255),b
 28200  0042CC  D002               	goto	l10416
 28201                           
 28202                           ; BSR set to: 1
 28203                           ;Bluetooth.c: 237: {
 28204                           ;Bluetooth.c: 239: break;
 28205  0042CE  D004               	goto	l10420
 28206                           
 28207                           ; BSR set to: 1
 28208                           
 28209                           ; BSR set to: 1
 28210  0042D0  D000               	goto	l10416
 28211  0042D2                     l10416:
 28212                           
 28213                           ; BSR set to: 1
 28214  0042D2  0101               	movlb	1	; () banked
 28215  0042D4  2BA4               	incf	BluetoothInitialSetup@i& (0+255),f,b
 28216  0042D6  D781               	goto	l10386
 28217  0042D8                     l10420:
 28218                           
 28219                           ; BSR set to: 1
 28220                           ;Bluetooth.c: 240: }
 28221                           ;Bluetooth.c: 241: }
 28222                           ;Bluetooth.c: 242: }
 28223                           ;Bluetooth.c: 243: }
 28224                           ;Bluetooth.c: 245: if(BluetoothVersionLine1[0] == 0 || BluetoothVersionLine2[0] == 0)
 28225  0042D8  0101               	movlb	1	; () banked
 28226  0042DA  5133               	movf	BluetoothInitialSetup@BluetoothVersionLine1& (0+255),w,b
 28227  0042DC  0101               	movlb	1	; () banked
 28228  0042DE  B4D8               	btfsc	status,2,c
 28229  0042E0  D005               	goto	l10424
 28230                           
 28231                           ; BSR set to: 1
 28232  0042E2  0101               	movlb	1	; () banked
 28233  0042E4  5151               	movf	BluetoothInitialSetup@BluetoothVersionLine2& (0+255),w,b
 28234  0042E6  0101               	movlb	1	; () banked
 28235  0042E8  A4D8               	btfss	status,2,c
 28236  0042EA  D004               	goto	l10426
 28237  0042EC                     l10424:
 28238                           
 28239                           ; BSR set to: 1
 28240                           ;Bluetooth.c: 246: {
 28241                           ;Bluetooth.c: 247: ok = 0;
 28242  0042EC  0E00               	movlw	0
 28243  0042EE  0101               	movlb	1	; () banked
 28244  0042F0  6FA3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 28245                           
 28246                           ;Bluetooth.c: 248: }
 28247  0042F2  D042               	goto	l1975
 28248  0042F4                     l10426:
 28249                           
 28250                           ; BSR set to: 1
 28251                           ;Bluetooth.c: 249: else
 28252                           ;Bluetooth.c: 250: {
 28253                           ;Bluetooth.c: 251: cleanBuffer(BluetoothFirmware1,30);
 28254  0042F4  0EBC               	movlw	low _BluetoothFirmware1
 28255  0042F6  0100               	movlb	0	; () banked
 28256  0042F8  6F63               	movwf	cleanBuffer@data& (0+255),b
 28257  0042FA  0E03               	movlw	high _BluetoothFirmware1
 28258  0042FC  0100               	movlb	0	; () banked
 28259  0042FE  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 28260  004300  0E00               	movlw	0
 28261  004302  0100               	movlb	0	; () banked
 28262  004304  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
 28263  004306  0E1E               	movlw	30
 28264  004308  6F65               	movwf	cleanBuffer@count& (0+255),b
 28265  00430A  EC47  F04E         	call	_cleanBuffer	;wreg free
 28266                           
 28267                           ;Bluetooth.c: 252: cleanBuffer(BluetoothFirmware2,30);
 28268  00430E  0E64               	movlw	low _BluetoothFirmware2
 28269  004310  0100               	movlb	0	; () banked
 28270  004312  6F63               	movwf	cleanBuffer@data& (0+255),b
 28271  004314  0E04               	movlw	high _BluetoothFirmware2
 28272  004316  0100               	movlb	0	; () banked
 28273  004318  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 28274  00431A  0E00               	movlw	0
 28275  00431C  0100               	movlb	0	; () banked
 28276  00431E  6F66               	movwf	(cleanBuffer@count+1)& (0+255),b
 28277  004320  0E1E               	movlw	30
 28278  004322  6F65               	movwf	cleanBuffer@count& (0+255),b
 28279  004324  EC47  F04E         	call	_cleanBuffer	;wreg free
 28280                           
 28281                           ;Bluetooth.c: 253: BufferCopy(BluetoothVersionLine1, BluetoothFirmware1, 30, 0);
 28282  004328  0E33               	movlw	low BluetoothInitialSetup@BluetoothVersionLine1
 28283  00432A  0100               	movlb	0	; () banked
 28284  00432C  6F6B               	movwf	BufferCopy@from& (0+255),b
 28285  00432E  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine1
 28286  004330  0100               	movlb	0	; () banked
 28287  004332  6F6C               	movwf	(BufferCopy@from+1)& (0+255),b
 28288  004334  0EBC               	movlw	low _BluetoothFirmware1
 28289  004336  0100               	movlb	0	; () banked
 28290  004338  6F6D               	movwf	BufferCopy@to& (0+255),b
 28291  00433A  0E03               	movlw	high _BluetoothFirmware1
 28292  00433C  0100               	movlb	0	; () banked
 28293  00433E  6F6E               	movwf	(BufferCopy@to+1)& (0+255),b
 28294  004340  0E1E               	movlw	30
 28295  004342  0100               	movlb	0	; () banked
 28296  004344  6F6F               	movwf	BufferCopy@count& (0+255),b
 28297  004346  0E00               	movlw	0
 28298  004348  0100               	movlb	0	; () banked
 28299  00434A  6F70               	movwf	BufferCopy@shift& (0+255),b
 28300  00434C  ECFE  F04B         	call	_BufferCopy	;wreg free
 28301                           
 28302                           ;Bluetooth.c: 254: BufferCopy(BluetoothVersionLine2, BluetoothFirmware2, 30, 0);
 28303  004350  0E51               	movlw	low BluetoothInitialSetup@BluetoothVersionLine2
 28304  004352  0100               	movlb	0	; () banked
 28305  004354  6F6B               	movwf	BufferCopy@from& (0+255),b
 28306  004356  0E01               	movlw	high BluetoothInitialSetup@BluetoothVersionLine2
 28307  004358  0100               	movlb	0	; () banked
 28308  00435A  6F6C               	movwf	(BufferCopy@from+1)& (0+255),b
 28309  00435C  0E64               	movlw	low _BluetoothFirmware2
 28310  00435E  0100               	movlb	0	; () banked
 28311  004360  6F6D               	movwf	BufferCopy@to& (0+255),b
 28312  004362  0E04               	movlw	high _BluetoothFirmware2
 28313  004364  0100               	movlb	0	; () banked
 28314  004366  6F6E               	movwf	(BufferCopy@to+1)& (0+255),b
 28315  004368  0E1E               	movlw	30
 28316  00436A  0100               	movlb	0	; () banked
 28317  00436C  6F6F               	movwf	BufferCopy@count& (0+255),b
 28318  00436E  0E00               	movlw	0
 28319  004370  0100               	movlb	0	; () banked
 28320  004372  6F70               	movwf	BufferCopy@shift& (0+255),b
 28321  004374  ECFE  F04B         	call	_BufferCopy	;wreg free
 28322  004378                     l1975:
 28323                           
 28324                           ;Bluetooth.c: 255: }
 28325                           ;Bluetooth.c: 256: cleanBuffer(CommandString,CommandStringPos);
 28326  004378  0E18               	movlw	low _CommandString
 28327  00437A  0100               	movlb	0	; () banked
 28328  00437C  6F63               	movwf	cleanBuffer@data& (0+255),b
 28329  00437E  0E03               	movlw	high _CommandString
 28330  004380  0100               	movlb	0	; () banked
 28331  004382  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 28332  004384  C043  F065         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 28333  004388  0100               	movlb	0	; () banked
 28334  00438A  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 28335  00438C  EC47  F04E         	call	_cleanBuffer	;wreg free
 28336                           
 28337                           ;Bluetooth.c: 257: CommandStringPos = 0;
 28338  004390  0E00               	movlw	0
 28339  004392  6E43               	movwf	_CommandStringPos,c	;volatile
 28340                           
 28341                           ;Bluetooth.c: 259: if(ok)
 28342  004394  0101               	movlb	1	; () banked
 28343  004396  51A3               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 28344  004398  0101               	movlb	1	; () banked
 28345  00439A  B4D8               	btfsc	status,2,c
 28346  00439C  D051               	goto	l10456
 28347                           
 28348                           ; BSR set to: 1
 28349                           ;Bluetooth.c: 260: {
 28350                           ;Bluetooth.c: 261: sprintf(buf,"SN,Home Automation %lu\r",Global2.SerialNumber);
 28351  00439E  0E6F               	movlw	low BluetoothInitialSetup@buf
 28352  0043A0  0100               	movlb	0	; () banked
 28353  0043A2  6FB1               	movwf	sprintf@sp& (0+255),b
 28354  0043A4  0E01               	movlw	high BluetoothInitialSetup@buf
 28355  0043A6  0100               	movlb	0	; () banked
 28356  0043A8  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 28357  0043AA  0E7A               	movlw	low STR_7
 28358  0043AC  0100               	movlb	0	; () banked
 28359  0043AE  6FB3               	movwf	sprintf@f& (0+255),b
 28360  0043B0  0EFB               	movlw	high STR_7
 28361  0043B2  0100               	movlb	0	; () banked
 28362  0043B4  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 28363  0043B6  C3B8  F0B5         	movff	_Global2+60,?_sprintf+4
 28364  0043BA  C3B9  F0B6         	movff	_Global2+61,?_sprintf+5
 28365  0043BE  C3BA  F0B7         	movff	_Global2+62,?_sprintf+6
 28366  0043C2  C3BB  F0B8         	movff	_Global2+63,?_sprintf+7
 28367  0043C6  EC9C  F012         	call	_sprintf	;wreg free
 28368                           
 28369                           ;Bluetooth.c: 262: ClearUSART();
 28370  0043CA  EC21  F052         	call	_ClearUSART	;wreg free
 28371                           
 28372                           ;Bluetooth.c: 263: PIR1bits.RCIF = 0;
 28373  0043CE  9A9E               	bcf	3998,5,c	;volatile
 28374                           
 28375                           ;Bluetooth.c: 264: PIE1bits.RCIE = 1;
 28376  0043D0  8A9D               	bsf	3997,5,c	;volatile
 28377                           
 28378                           ;Bluetooth.c: 265: UARTstring(buf);
 28379  0043D2  0E6F               	movlw	low BluetoothInitialSetup@buf
 28380  0043D4  0100               	movlb	0	; () banked
 28381  0043D6  6F6D               	movwf	UARTstring@data& (0+255),b
 28382  0043D8  0E01               	movlw	high BluetoothInitialSetup@buf
 28383  0043DA  0100               	movlb	0	; () banked
 28384  0043DC  6F6E               	movwf	(UARTstring@data+1)& (0+255),b
 28385  0043DE  EC78  F051         	call	_UARTstring	;wreg free
 28386                           
 28387                           ;Bluetooth.c: 266: delayUS(50000);
 28388  0043E2  0E50               	movlw	80
 28389  0043E4  0100               	movlb	0	; () banked
 28390  0043E6  6F63               	movwf	delayUS@US& (0+255),b
 28391  0043E8  0EC3               	movlw	195
 28392  0043EA  6F64               	movwf	(delayUS@US+1)& (0+255),b
 28393  0043EC  0E00               	movlw	0
 28394  0043EE  6F65               	movwf	(delayUS@US+2)& (0+255),b
 28395  0043F0  0E00               	movlw	0
 28396  0043F2  6F66               	movwf	(delayUS@US+3)& (0+255),b
 28397  0043F4  ECA0  F04E         	call	_delayUS	;wreg free
 28398                           
 28399                           ;Bluetooth.c: 267: PIE1bits.RCIE = 0;
 28400  0043F8  9A9D               	bcf	3997,5,c	;volatile
 28401                           
 28402                           ;Bluetooth.c: 268: sprintf(buf,"AOK");
 28403  0043FA  0E6F               	movlw	low BluetoothInitialSetup@buf
 28404  0043FC  0100               	movlb	0	; () banked
 28405  0043FE  6FB1               	movwf	sprintf@sp& (0+255),b
 28406  004400  0E01               	movlw	high BluetoothInitialSetup@buf
 28407  004402  0100               	movlb	0	; () banked
 28408  004404  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 28409  004406  0EF5               	movlw	low STR_8
 28410  004408  0100               	movlb	0	; () banked
 28411  00440A  6FB3               	movwf	sprintf@f& (0+255),b
 28412  00440C  0EFF               	movlw	high STR_8
 28413  00440E  0100               	movlb	0	; () banked
 28414  004410  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 28415  004412  EC9C  F012         	call	_sprintf	;wreg free
 28416                           
 28417                           ;Bluetooth.c: 269: if(!StringContains(CommandString,buf))
 28418  004416  0E18               	movlw	low _CommandString
 28419  004418  0100               	movlb	0	; () banked
 28420  00441A  6F63               	movwf	StringContains@This& (0+255),b
 28421  00441C  0E03               	movlw	high _CommandString
 28422  00441E  0100               	movlb	0	; () banked
 28423  004420  6F64               	movwf	(StringContains@This+1)& (0+255),b
 28424  004422  0E6F               	movlw	low BluetoothInitialSetup@buf
 28425  004424  0100               	movlb	0	; () banked
 28426  004426  6F65               	movwf	StringContains@That& (0+255),b
 28427  004428  0E01               	movlw	high BluetoothInitialSetup@buf
 28428  00442A  0100               	movlb	0	; () banked
 28429  00442C  6F66               	movwf	(StringContains@That+1)& (0+255),b
 28430  00442E  EC21  F040         	call	_StringContains	;wreg free
 28431  004432  0900               	iorlw	0
 28432  004434  A4D8               	btfss	status,2,c
 28433  004436  D004               	goto	l10456
 28434                           
 28435                           ;Bluetooth.c: 270: {
 28436                           ;Bluetooth.c: 271: ok = 0;
 28437  004438  0E00               	movlw	0
 28438  00443A  0101               	movlb	1	; () banked
 28439  00443C  6FA3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 28440                           
 28441                           ; BSR set to: 1
 28442  00443E  D000               	goto	l10456
 28443  004440                     l10456:
 28444                           
 28445                           ;Bluetooth.c: 272: }
 28446                           ;Bluetooth.c: 273: }
 28447                           ;Bluetooth.c: 274: cleanBuffer(CommandString,CommandStringPos);
 28448  004440  0E18               	movlw	low _CommandString
 28449  004442  0100               	movlb	0	; () banked
 28450  004444  6F63               	movwf	cleanBuffer@data& (0+255),b
 28451  004446  0E03               	movlw	high _CommandString
 28452  004448  0100               	movlb	0	; () banked
 28453  00444A  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 28454  00444C  C043  F065         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 28455  004450  0100               	movlb	0	; () banked
 28456  004452  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 28457  004454  EC47  F04E         	call	_cleanBuffer	;wreg free
 28458                           
 28459                           ;Bluetooth.c: 275: CommandStringPos = 0;
 28460  004458  0E00               	movlw	0
 28461  00445A  6E43               	movwf	_CommandStringPos,c	;volatile
 28462                           
 28463                           ;Bluetooth.c: 277: if(ok)
 28464  00445C  0101               	movlb	1	; () banked
 28465  00445E  51A3               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 28466  004460  0101               	movlb	1	; () banked
 28467  004462  B4D8               	btfsc	status,2,c
 28468  004464  D02D               	goto	l10478
 28469                           
 28470                           ; BSR set to: 1
 28471                           ;Bluetooth.c: 278: {
 28472                           ;Bluetooth.c: 279: ClearUSART();
 28473  004466  EC21  F052         	call	_ClearUSART	;wreg free
 28474                           
 28475                           ;Bluetooth.c: 280: PIR1bits.RCIF = 0;
 28476  00446A  9A9E               	bcf	3998,5,c	;volatile
 28477                           
 28478                           ;Bluetooth.c: 281: PIE1bits.RCIE = 1;
 28479  00446C  8A9D               	bsf	3997,5,c	;volatile
 28480                           
 28481                           ;Bluetooth.c: 282: UARTstring_CONST("SU,115K\r");
 28482  00446E  0E7D               	movlw	low STR_9
 28483  004470  0100               	movlb	0	; () banked
 28484  004472  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 28485  004474  0EFF               	movlw	high STR_9
 28486  004476  0100               	movlb	0	; () banked
 28487  004478  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 28488  00447A  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 28489                           
 28490                           ;Bluetooth.c: 283: delayUS(50000);
 28491  00447E  0E50               	movlw	80
 28492  004480  0100               	movlb	0	; () banked
 28493  004482  6F63               	movwf	delayUS@US& (0+255),b
 28494  004484  0EC3               	movlw	195
 28495  004486  6F64               	movwf	(delayUS@US+1)& (0+255),b
 28496  004488  0E00               	movlw	0
 28497  00448A  6F65               	movwf	(delayUS@US+2)& (0+255),b
 28498  00448C  0E00               	movlw	0
 28499  00448E  6F66               	movwf	(delayUS@US+3)& (0+255),b
 28500  004490  ECA0  F04E         	call	_delayUS	;wreg free
 28501                           
 28502                           ;Bluetooth.c: 284: PIE1bits.RCIE = 0;
 28503  004494  9A9D               	bcf	3997,5,c	;volatile
 28504                           
 28505                           ;Bluetooth.c: 285: if(!StringContains(CommandString,buf))
 28506  004496  0E18               	movlw	low _CommandString
 28507  004498  0100               	movlb	0	; () banked
 28508  00449A  6F63               	movwf	StringContains@This& (0+255),b
 28509  00449C  0E03               	movlw	high _CommandString
 28510  00449E  0100               	movlb	0	; () banked
 28511  0044A0  6F64               	movwf	(StringContains@This+1)& (0+255),b
 28512  0044A2  0E6F               	movlw	low BluetoothInitialSetup@buf
 28513  0044A4  0100               	movlb	0	; () banked
 28514  0044A6  6F65               	movwf	StringContains@That& (0+255),b
 28515  0044A8  0E01               	movlw	high BluetoothInitialSetup@buf
 28516  0044AA  0100               	movlb	0	; () banked
 28517  0044AC  6F66               	movwf	(StringContains@That+1)& (0+255),b
 28518  0044AE  EC21  F040         	call	_StringContains	;wreg free
 28519  0044B2  0900               	iorlw	0
 28520  0044B4  A4D8               	btfss	status,2,c
 28521  0044B6  D004               	goto	l10478
 28522                           
 28523                           ;Bluetooth.c: 286: {
 28524                           ;Bluetooth.c: 287: ok = 0;
 28525  0044B8  0E00               	movlw	0
 28526  0044BA  0101               	movlb	1	; () banked
 28527  0044BC  6FA3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 28528                           
 28529                           ; BSR set to: 1
 28530  0044BE  D000               	goto	l10478
 28531  0044C0                     l10478:
 28532                           
 28533                           ;Bluetooth.c: 288: }
 28534                           ;Bluetooth.c: 289: }
 28535                           ;Bluetooth.c: 290: cleanBuffer(CommandString,CommandStringPos);
 28536  0044C0  0E18               	movlw	low _CommandString
 28537  0044C2  0100               	movlb	0	; () banked
 28538  0044C4  6F63               	movwf	cleanBuffer@data& (0+255),b
 28539  0044C6  0E03               	movlw	high _CommandString
 28540  0044C8  0100               	movlb	0	; () banked
 28541  0044CA  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 28542  0044CC  C043  F065         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 28543  0044D0  0100               	movlb	0	; () banked
 28544  0044D2  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 28545  0044D4  EC47  F04E         	call	_cleanBuffer	;wreg free
 28546                           
 28547                           ;Bluetooth.c: 291: CommandStringPos = 0;
 28548  0044D8  0E00               	movlw	0
 28549  0044DA  6E43               	movwf	_CommandStringPos,c	;volatile
 28550                           
 28551                           ;Bluetooth.c: 293: if(ok)
 28552  0044DC  0101               	movlb	1	; () banked
 28553  0044DE  51A3               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 28554  0044E0  0101               	movlb	1	; () banked
 28555  0044E2  B4D8               	btfsc	status,2,c
 28556  0044E4  D02D               	goto	l10500
 28557                           
 28558                           ; BSR set to: 1
 28559                           ;Bluetooth.c: 294: {
 28560                           ;Bluetooth.c: 295: ClearUSART();
 28561  0044E6  EC21  F052         	call	_ClearUSART	;wreg free
 28562                           
 28563                           ;Bluetooth.c: 296: PIR1bits.RCIF = 0;
 28564  0044EA  9A9E               	bcf	3998,5,c	;volatile
 28565                           
 28566                           ;Bluetooth.c: 297: PIE1bits.RCIE = 1;
 28567  0044EC  8A9D               	bsf	3997,5,c	;volatile
 28568                           
 28569                           ;Bluetooth.c: 298: UARTstring_CONST("SS,Home Automation\r");
 28570  0044EE  0EE1               	movlw	low STR_10
 28571  0044F0  0100               	movlb	0	; () banked
 28572  0044F2  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 28573  0044F4  0EFC               	movlw	high STR_10
 28574  0044F6  0100               	movlb	0	; () banked
 28575  0044F8  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 28576  0044FA  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 28577                           
 28578                           ;Bluetooth.c: 299: delayUS(50000);
 28579  0044FE  0E50               	movlw	80
 28580  004500  0100               	movlb	0	; () banked
 28581  004502  6F63               	movwf	delayUS@US& (0+255),b
 28582  004504  0EC3               	movlw	195
 28583  004506  6F64               	movwf	(delayUS@US+1)& (0+255),b
 28584  004508  0E00               	movlw	0
 28585  00450A  6F65               	movwf	(delayUS@US+2)& (0+255),b
 28586  00450C  0E00               	movlw	0
 28587  00450E  6F66               	movwf	(delayUS@US+3)& (0+255),b
 28588  004510  ECA0  F04E         	call	_delayUS	;wreg free
 28589                           
 28590                           ;Bluetooth.c: 300: PIE1bits.RCIE = 0;
 28591  004514  9A9D               	bcf	3997,5,c	;volatile
 28592                           
 28593                           ;Bluetooth.c: 301: if(!StringContains(CommandString,buf))
 28594  004516  0E18               	movlw	low _CommandString
 28595  004518  0100               	movlb	0	; () banked
 28596  00451A  6F63               	movwf	StringContains@This& (0+255),b
 28597  00451C  0E03               	movlw	high _CommandString
 28598  00451E  0100               	movlb	0	; () banked
 28599  004520  6F64               	movwf	(StringContains@This+1)& (0+255),b
 28600  004522  0E6F               	movlw	low BluetoothInitialSetup@buf
 28601  004524  0100               	movlb	0	; () banked
 28602  004526  6F65               	movwf	StringContains@That& (0+255),b
 28603  004528  0E01               	movlw	high BluetoothInitialSetup@buf
 28604  00452A  0100               	movlb	0	; () banked
 28605  00452C  6F66               	movwf	(StringContains@That+1)& (0+255),b
 28606  00452E  EC21  F040         	call	_StringContains	;wreg free
 28607  004532  0900               	iorlw	0
 28608  004534  A4D8               	btfss	status,2,c
 28609  004536  D004               	goto	l10500
 28610                           
 28611                           ;Bluetooth.c: 302: {
 28612                           ;Bluetooth.c: 303: ok = 0;
 28613  004538  0E00               	movlw	0
 28614  00453A  0101               	movlb	1	; () banked
 28615  00453C  6FA3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 28616                           
 28617                           ; BSR set to: 1
 28618  00453E  D000               	goto	l10500
 28619  004540                     l10500:
 28620                           
 28621                           ;Bluetooth.c: 304: }
 28622                           ;Bluetooth.c: 305: }
 28623                           ;Bluetooth.c: 306: cleanBuffer(CommandString,CommandStringPos);
 28624  004540  0E18               	movlw	low _CommandString
 28625  004542  0100               	movlb	0	; () banked
 28626  004544  6F63               	movwf	cleanBuffer@data& (0+255),b
 28627  004546  0E03               	movlw	high _CommandString
 28628  004548  0100               	movlb	0	; () banked
 28629  00454A  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 28630  00454C  C043  F065         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 28631  004550  0100               	movlb	0	; () banked
 28632  004552  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 28633  004554  EC47  F04E         	call	_cleanBuffer	;wreg free
 28634                           
 28635                           ;Bluetooth.c: 307: CommandStringPos = 0;
 28636  004558  0E00               	movlw	0
 28637  00455A  6E43               	movwf	_CommandStringPos,c	;volatile
 28638                           
 28639                           ;Bluetooth.c: 309: if(ok)
 28640  00455C  0101               	movlb	1	; () banked
 28641  00455E  51A3               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 28642  004560  0101               	movlb	1	; () banked
 28643  004562  B4D8               	btfsc	status,2,c
 28644  004564  D02D               	goto	l10522
 28645                           
 28646                           ; BSR set to: 1
 28647                           ;Bluetooth.c: 310: {
 28648                           ;Bluetooth.c: 311: ClearUSART();
 28649  004566  EC21  F052         	call	_ClearUSART	;wreg free
 28650                           
 28651                           ;Bluetooth.c: 312: PIR1bits.RCIF = 0;
 28652  00456A  9A9E               	bcf	3998,5,c	;volatile
 28653                           
 28654                           ;Bluetooth.c: 313: PIE1bits.RCIE = 1;
 28655  00456C  8A9D               	bsf	3997,5,c	;volatile
 28656                           
 28657                           ;Bluetooth.c: 314: UARTstring_CONST("SY,0010\r");
 28658  00456E  0E74               	movlw	low STR_11
 28659  004570  0100               	movlb	0	; () banked
 28660  004572  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 28661  004574  0EFF               	movlw	high STR_11
 28662  004576  0100               	movlb	0	; () banked
 28663  004578  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 28664  00457A  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 28665                           
 28666                           ;Bluetooth.c: 315: delayUS(50000);
 28667  00457E  0E50               	movlw	80
 28668  004580  0100               	movlb	0	; () banked
 28669  004582  6F63               	movwf	delayUS@US& (0+255),b
 28670  004584  0EC3               	movlw	195
 28671  004586  6F64               	movwf	(delayUS@US+1)& (0+255),b
 28672  004588  0E00               	movlw	0
 28673  00458A  6F65               	movwf	(delayUS@US+2)& (0+255),b
 28674  00458C  0E00               	movlw	0
 28675  00458E  6F66               	movwf	(delayUS@US+3)& (0+255),b
 28676  004590  ECA0  F04E         	call	_delayUS	;wreg free
 28677                           
 28678                           ;Bluetooth.c: 316: PIE1bits.RCIE = 0;
 28679  004594  9A9D               	bcf	3997,5,c	;volatile
 28680                           
 28681                           ;Bluetooth.c: 317: if(!StringContains(CommandString,buf))
 28682  004596  0E18               	movlw	low _CommandString
 28683  004598  0100               	movlb	0	; () banked
 28684  00459A  6F63               	movwf	StringContains@This& (0+255),b
 28685  00459C  0E03               	movlw	high _CommandString
 28686  00459E  0100               	movlb	0	; () banked
 28687  0045A0  6F64               	movwf	(StringContains@This+1)& (0+255),b
 28688  0045A2  0E6F               	movlw	low BluetoothInitialSetup@buf
 28689  0045A4  0100               	movlb	0	; () banked
 28690  0045A6  6F65               	movwf	StringContains@That& (0+255),b
 28691  0045A8  0E01               	movlw	high BluetoothInitialSetup@buf
 28692  0045AA  0100               	movlb	0	; () banked
 28693  0045AC  6F66               	movwf	(StringContains@That+1)& (0+255),b
 28694  0045AE  EC21  F040         	call	_StringContains	;wreg free
 28695  0045B2  0900               	iorlw	0
 28696  0045B4  A4D8               	btfss	status,2,c
 28697  0045B6  D004               	goto	l10522
 28698                           
 28699                           ;Bluetooth.c: 318: {
 28700                           ;Bluetooth.c: 319: ok = 0;
 28701  0045B8  0E00               	movlw	0
 28702  0045BA  0101               	movlb	1	; () banked
 28703  0045BC  6FA3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 28704                           
 28705                           ; BSR set to: 1
 28706  0045BE  D000               	goto	l10522
 28707  0045C0                     l10522:
 28708                           
 28709                           ;Bluetooth.c: 320: }
 28710                           ;Bluetooth.c: 321: }
 28711                           ;Bluetooth.c: 322: cleanBuffer(CommandString,CommandStringPos);
 28712  0045C0  0E18               	movlw	low _CommandString
 28713  0045C2  0100               	movlb	0	; () banked
 28714  0045C4  6F63               	movwf	cleanBuffer@data& (0+255),b
 28715  0045C6  0E03               	movlw	high _CommandString
 28716  0045C8  0100               	movlb	0	; () banked
 28717  0045CA  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 28718  0045CC  C043  F065         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 28719  0045D0  0100               	movlb	0	; () banked
 28720  0045D2  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 28721  0045D4  EC47  F04E         	call	_cleanBuffer	;wreg free
 28722                           
 28723                           ;Bluetooth.c: 323: CommandStringPos = 0;
 28724  0045D8  0E00               	movlw	0
 28725  0045DA  6E43               	movwf	_CommandStringPos,c	;volatile
 28726                           
 28727                           ;Bluetooth.c: 325: if(ok)
 28728  0045DC  0101               	movlb	1	; () banked
 28729  0045DE  51A3               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 28730  0045E0  0101               	movlb	1	; () banked
 28731  0045E2  B4D8               	btfsc	status,2,c
 28732  0045E4  D02D               	goto	l10544
 28733                           
 28734                           ; BSR set to: 1
 28735                           ;Bluetooth.c: 326: {
 28736                           ;Bluetooth.c: 327: ClearUSART();
 28737  0045E6  EC21  F052         	call	_ClearUSART	;wreg free
 28738                           
 28739                           ;Bluetooth.c: 328: PIR1bits.RCIF = 0;
 28740  0045EA  9A9E               	bcf	3998,5,c	;volatile
 28741                           
 28742                           ;Bluetooth.c: 329: PIE1bits.RCIE = 1;
 28743  0045EC  8A9D               	bsf	3997,5,c	;volatile
 28744                           
 28745                           ;Bluetooth.c: 330: UARTstring_CONST("S~,0\r");
 28746  0045EE  0EB5               	movlw	low STR_12
 28747  0045F0  0100               	movlb	0	; () banked
 28748  0045F2  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 28749  0045F4  0EFF               	movlw	high STR_12
 28750  0045F6  0100               	movlb	0	; () banked
 28751  0045F8  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 28752  0045FA  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 28753                           
 28754                           ;Bluetooth.c: 331: delayUS(50000);
 28755  0045FE  0E50               	movlw	80
 28756  004600  0100               	movlb	0	; () banked
 28757  004602  6F63               	movwf	delayUS@US& (0+255),b
 28758  004604  0EC3               	movlw	195
 28759  004606  6F64               	movwf	(delayUS@US+1)& (0+255),b
 28760  004608  0E00               	movlw	0
 28761  00460A  6F65               	movwf	(delayUS@US+2)& (0+255),b
 28762  00460C  0E00               	movlw	0
 28763  00460E  6F66               	movwf	(delayUS@US+3)& (0+255),b
 28764  004610  ECA0  F04E         	call	_delayUS	;wreg free
 28765                           
 28766                           ;Bluetooth.c: 332: PIE1bits.RCIE = 0;
 28767  004614  9A9D               	bcf	3997,5,c	;volatile
 28768                           
 28769                           ;Bluetooth.c: 333: if(!StringContains(CommandString,buf))
 28770  004616  0E18               	movlw	low _CommandString
 28771  004618  0100               	movlb	0	; () banked
 28772  00461A  6F63               	movwf	StringContains@This& (0+255),b
 28773  00461C  0E03               	movlw	high _CommandString
 28774  00461E  0100               	movlb	0	; () banked
 28775  004620  6F64               	movwf	(StringContains@This+1)& (0+255),b
 28776  004622  0E6F               	movlw	low BluetoothInitialSetup@buf
 28777  004624  0100               	movlb	0	; () banked
 28778  004626  6F65               	movwf	StringContains@That& (0+255),b
 28779  004628  0E01               	movlw	high BluetoothInitialSetup@buf
 28780  00462A  0100               	movlb	0	; () banked
 28781  00462C  6F66               	movwf	(StringContains@That+1)& (0+255),b
 28782  00462E  EC21  F040         	call	_StringContains	;wreg free
 28783  004632  0900               	iorlw	0
 28784  004634  A4D8               	btfss	status,2,c
 28785  004636  D004               	goto	l10544
 28786                           
 28787                           ;Bluetooth.c: 334: {
 28788                           ;Bluetooth.c: 335: ok = 0;
 28789  004638  0E00               	movlw	0
 28790  00463A  0101               	movlb	1	; () banked
 28791  00463C  6FA3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 28792                           
 28793                           ; BSR set to: 1
 28794  00463E  D000               	goto	l10544
 28795  004640                     l10544:
 28796                           
 28797                           ;Bluetooth.c: 336: }
 28798                           ;Bluetooth.c: 337: }
 28799                           ;Bluetooth.c: 338: cleanBuffer(CommandString,CommandStringPos);
 28800  004640  0E18               	movlw	low _CommandString
 28801  004642  0100               	movlb	0	; () banked
 28802  004644  6F63               	movwf	cleanBuffer@data& (0+255),b
 28803  004646  0E03               	movlw	high _CommandString
 28804  004648  0100               	movlb	0	; () banked
 28805  00464A  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 28806  00464C  C043  F065         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 28807  004650  0100               	movlb	0	; () banked
 28808  004652  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 28809  004654  EC47  F04E         	call	_cleanBuffer	;wreg free
 28810                           
 28811                           ;Bluetooth.c: 339: CommandStringPos = 0;
 28812  004658  0E00               	movlw	0
 28813  00465A  6E43               	movwf	_CommandStringPos,c	;volatile
 28814                           
 28815                           ;Bluetooth.c: 341: if(ok)
 28816  00465C  0101               	movlb	1	; () banked
 28817  00465E  51A3               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 28818  004660  0101               	movlb	1	; () banked
 28819  004662  B4D8               	btfsc	status,2,c
 28820  004664  D050               	goto	l10570
 28821                           
 28822                           ; BSR set to: 1
 28823                           ;Bluetooth.c: 342: {
 28824                           ;Bluetooth.c: 343: ClearUSART();
 28825  004666  EC21  F052         	call	_ClearUSART	;wreg free
 28826                           
 28827                           ;Bluetooth.c: 344: PIR1bits.RCIF = 0;
 28828  00466A  9A9E               	bcf	3998,5,c	;volatile
 28829                           
 28830                           ;Bluetooth.c: 345: PIE1bits.RCIE = 1;
 28831  00466C  8A9D               	bsf	3997,5,c	;volatile
 28832                           
 28833                           ;Bluetooth.c: 346: UARTstring_CONST("D\r");
 28834  00466E  0EF9               	movlw	low STR_13
 28835  004670  0100               	movlb	0	; () banked
 28836  004672  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 28837  004674  0EFF               	movlw	high STR_13
 28838  004676  0100               	movlb	0	; () banked
 28839  004678  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 28840  00467A  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 28841                           
 28842                           ;Bluetooth.c: 347: delayUS(50000);
 28843  00467E  0E50               	movlw	80
 28844  004680  0100               	movlb	0	; () banked
 28845  004682  6F63               	movwf	delayUS@US& (0+255),b
 28846  004684  0EC3               	movlw	195
 28847  004686  6F64               	movwf	(delayUS@US+1)& (0+255),b
 28848  004688  0E00               	movlw	0
 28849  00468A  6F65               	movwf	(delayUS@US+2)& (0+255),b
 28850  00468C  0E00               	movlw	0
 28851  00468E  6F66               	movwf	(delayUS@US+3)& (0+255),b
 28852  004690  ECA0  F04E         	call	_delayUS	;wreg free
 28853                           
 28854                           ;Bluetooth.c: 348: PIE1bits.RCIE = 0;
 28855  004694  9A9D               	bcf	3997,5,c	;volatile
 28856                           
 28857                           ;Bluetooth.c: 349: sprintf(buf,"BTName=Home Automation %lu\r",Global2.SerialNumber);
 28858  004696  0E6F               	movlw	low BluetoothInitialSetup@buf
 28859  004698  0100               	movlb	0	; () banked
 28860  00469A  6FB1               	movwf	sprintf@sp& (0+255),b
 28861  00469C  0E01               	movlw	high BluetoothInitialSetup@buf
 28862  00469E  0100               	movlb	0	; () banked
 28863  0046A0  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 28864  0046A2  0EBC               	movlw	low STR_14
 28865  0046A4  0100               	movlb	0	; () banked
 28866  0046A6  6FB3               	movwf	sprintf@f& (0+255),b
 28867  0046A8  0EFA               	movlw	high STR_14
 28868  0046AA  0100               	movlb	0	; () banked
 28869  0046AC  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 28870  0046AE  C3B8  F0B5         	movff	_Global2+60,?_sprintf+4
 28871  0046B2  C3B9  F0B6         	movff	_Global2+61,?_sprintf+5
 28872  0046B6  C3BA  F0B7         	movff	_Global2+62,?_sprintf+6
 28873  0046BA  C3BB  F0B8         	movff	_Global2+63,?_sprintf+7
 28874  0046BE  EC9C  F012         	call	_sprintf	;wreg free
 28875                           
 28876                           ;Bluetooth.c: 350: if(!StringContainsCaseInsensitive(CommandString, buf))
 28877  0046C2  0E18               	movlw	low _CommandString
 28878  0046C4  0100               	movlb	0	; () banked
 28879  0046C6  6F66               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 28880  0046C8  0E03               	movlw	high _CommandString
 28881  0046CA  0100               	movlb	0	; () banked
 28882  0046CC  6F67               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 28883  0046CE  0E6F               	movlw	low BluetoothInitialSetup@buf
 28884  0046D0  0100               	movlb	0	; () banked
 28885  0046D2  6F68               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 28886  0046D4  0E01               	movlw	high BluetoothInitialSetup@buf
 28887  0046D6  0100               	movlb	0	; () banked
 28888  0046D8  6F69               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 28889  0046DA  ECD4  F038         	call	_StringContainsCaseInsensitive	;wreg free
 28890  0046DE  0900               	iorlw	0
 28891  0046E0  A4D8               	btfss	status,2,c
 28892  0046E2  D011               	goto	l10570
 28893                           
 28894                           ;Bluetooth.c: 351: {
 28895                           ;Bluetooth.c: 352: if(Global2.SerialNumber != 0xFFFFFFFF)
 28896  0046E4  0103               	movlb	3	; () banked
 28897  0046E6  29B8               	incf	(_Global2+60)& (0+255),w,b
 28898  0046E8  E10A               	bnz	u11410
 28899  0046EA  0103               	movlb	3	; () banked
 28900  0046EC  29B9               	incf	(_Global2+61)& (0+255),w,b
 28901  0046EE  E107               	bnz	u11410
 28902  0046F0  0103               	movlb	3	; () banked
 28903  0046F2  29BA               	incf	(_Global2+62)& (0+255),w,b
 28904  0046F4  E104               	bnz	u11410
 28905  0046F6  0103               	movlb	3	; () banked
 28906  0046F8  29BB               	incf	(_Global2+63)& (0+255),w,b
 28907  0046FA  B4D8               	btfsc	status,2,c
 28908  0046FC  D004               	goto	l10570
 28909  0046FE                     u11410:
 28910                           
 28911                           ; BSR set to: 3
 28912                           ;Bluetooth.c: 353: {
 28913                           ;Bluetooth.c: 354: ok = 0;
 28914  0046FE  0E00               	movlw	0
 28915  004700  0101               	movlb	1	; () banked
 28916  004702  6FA3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 28917                           
 28918                           ; BSR set to: 1
 28919                           
 28920                           ; BSR set to: 1
 28921  004704  D000               	goto	l10570
 28922  004706                     l10570:
 28923                           
 28924                           ;Bluetooth.c: 355: }
 28925                           ;Bluetooth.c: 356: }
 28926                           ;Bluetooth.c: 357: }
 28927                           ;Bluetooth.c: 358: cleanBuffer(CommandString,CommandStringPos);
 28928  004706  0E18               	movlw	low _CommandString
 28929  004708  0100               	movlb	0	; () banked
 28930  00470A  6F63               	movwf	cleanBuffer@data& (0+255),b
 28931  00470C  0E03               	movlw	high _CommandString
 28932  00470E  0100               	movlb	0	; () banked
 28933  004710  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 28934  004712  C043  F065         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 28935  004716  0100               	movlb	0	; () banked
 28936  004718  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 28937  00471A  EC47  F04E         	call	_cleanBuffer	;wreg free
 28938                           
 28939                           ;Bluetooth.c: 359: CommandStringPos = 0;
 28940  00471E  0E00               	movlw	0
 28941  004720  6E43               	movwf	_CommandStringPos,c	;volatile
 28942                           
 28943                           ;Bluetooth.c: 361: ClearUSART();
 28944  004722  EC21  F052         	call	_ClearUSART	;wreg free
 28945                           
 28946                           ;Bluetooth.c: 362: PIR1bits.RCIF = 0;
 28947  004726  9A9E               	bcf	3998,5,c	;volatile
 28948                           
 28949                           ;Bluetooth.c: 363: PIE1bits.RCIE = 1;
 28950  004728  8A9D               	bsf	3997,5,c	;volatile
 28951                           
 28952                           ;Bluetooth.c: 364: UARTstring_CONST("---\r");
 28953  00472A  0ECD               	movlw	low STR_15
 28954  00472C  0100               	movlb	0	; () banked
 28955  00472E  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 28956  004730  0EFF               	movlw	high STR_15
 28957  004732  0100               	movlb	0	; () banked
 28958  004734  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 28959  004736  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 28960                           
 28961                           ;Bluetooth.c: 365: delayUS(50000);
 28962  00473A  0E50               	movlw	80
 28963  00473C  0100               	movlb	0	; () banked
 28964  00473E  6F63               	movwf	delayUS@US& (0+255),b
 28965  004740  0EC3               	movlw	195
 28966  004742  6F64               	movwf	(delayUS@US+1)& (0+255),b
 28967  004744  0E00               	movlw	0
 28968  004746  6F65               	movwf	(delayUS@US+2)& (0+255),b
 28969  004748  0E00               	movlw	0
 28970  00474A  6F66               	movwf	(delayUS@US+3)& (0+255),b
 28971  00474C  ECA0  F04E         	call	_delayUS	;wreg free
 28972                           
 28973                           ;Bluetooth.c: 366: sprintf(buf,"END");
 28974  004750  0E6F               	movlw	low BluetoothInitialSetup@buf
 28975  004752  0100               	movlb	0	; () banked
 28976  004754  6FB1               	movwf	sprintf@sp& (0+255),b
 28977  004756  0E01               	movlw	high BluetoothInitialSetup@buf
 28978  004758  0100               	movlb	0	; () banked
 28979  00475A  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 28980  00475C  0EF1               	movlw	low STR_16
 28981  00475E  0100               	movlb	0	; () banked
 28982  004760  6FB3               	movwf	sprintf@f& (0+255),b
 28983  004762  0EFF               	movlw	high STR_16
 28984  004764  0100               	movlb	0	; () banked
 28985  004766  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 28986  004768  EC9C  F012         	call	_sprintf	;wreg free
 28987                           
 28988                           ;Bluetooth.c: 367: PIE1bits.RCIE = 0;
 28989  00476C  9A9D               	bcf	3997,5,c	;volatile
 28990                           
 28991                           ;Bluetooth.c: 368: if(!StringContains(CommandString,buf))
 28992  00476E  0E18               	movlw	low _CommandString
 28993  004770  0100               	movlb	0	; () banked
 28994  004772  6F63               	movwf	StringContains@This& (0+255),b
 28995  004774  0E03               	movlw	high _CommandString
 28996  004776  0100               	movlb	0	; () banked
 28997  004778  6F64               	movwf	(StringContains@This+1)& (0+255),b
 28998  00477A  0E6F               	movlw	low BluetoothInitialSetup@buf
 28999  00477C  0100               	movlb	0	; () banked
 29000  00477E  6F65               	movwf	StringContains@That& (0+255),b
 29001  004780  0E01               	movlw	high BluetoothInitialSetup@buf
 29002  004782  0100               	movlb	0	; () banked
 29003  004784  6F66               	movwf	(StringContains@That+1)& (0+255),b
 29004  004786  EC21  F040         	call	_StringContains	;wreg free
 29005  00478A  0900               	iorlw	0
 29006  00478C  A4D8               	btfss	status,2,c
 29007  00478E  D004               	goto	l10592
 29008                           
 29009                           ;Bluetooth.c: 369: {
 29010                           ;Bluetooth.c: 370: ok = 0;
 29011  004790  0E00               	movlw	0
 29012  004792  0101               	movlb	1	; () banked
 29013  004794  6FA3               	movwf	BluetoothInitialSetup@ok& (0+255),b
 29014  004796  D000               	goto	l10592
 29015  004798                     l10592:
 29016                           
 29017                           ;Bluetooth.c: 371: }
 29018                           ;Bluetooth.c: 372: cleanBuffer(CommandString,CommandStringPos);
 29019  004798  0E18               	movlw	low _CommandString
 29020  00479A  0100               	movlb	0	; () banked
 29021  00479C  6F63               	movwf	cleanBuffer@data& (0+255),b
 29022  00479E  0E03               	movlw	high _CommandString
 29023  0047A0  0100               	movlb	0	; () banked
 29024  0047A2  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 29025  0047A4  C043  F065         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 29026  0047A8  0100               	movlb	0	; () banked
 29027  0047AA  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 29028  0047AC  EC47  F04E         	call	_cleanBuffer	;wreg free
 29029                           
 29030                           ;Bluetooth.c: 373: CommandStringPos = 0;
 29031  0047B0  0E00               	movlw	0
 29032  0047B2  6E43               	movwf	_CommandStringPos,c	;volatile
 29033                           
 29034                           ;Bluetooth.c: 375: if(ok)
 29035  0047B4  0101               	movlb	1	; () banked
 29036  0047B6  51A3               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 29037  0047B8  0101               	movlb	1	; () banked
 29038  0047BA  B4D8               	btfsc	status,2,c
 29039  0047BC  D002               	goto	l10602
 29040                           
 29041                           ; BSR set to: 1
 29042                           ;Bluetooth.c: 376: {
 29043                           ;Bluetooth.c: 377: return 1;
 29044  0047BE  0E01               	movlw	1
 29045                           
 29046                           ; BSR set to: 1
 29047  0047C0  0012               	return	
 29048  0047C2                     l10602:
 29049                           
 29050                           ; BSR set to: 1
 29051                           ;Bluetooth.c: 378: }
 29052                           ;Bluetooth.c: 379: return 0;
 29053  0047C2  0E00               	movlw	0
 29054  0047C4  0012               	return	
 29055                           
 29056                           ; BSR set to: 1
 29057  0047C6  0012               	return		;funcret
 29058  0047C8                     __end_of_BluetoothInitialSetup:
 29059                           	opt stack 0
 29060                           tblptru	equ	0xFF8
 29061                           tblptrh	equ	0xFF7
 29062                           tblptrl	equ	0xFF6
 29063                           tablat	equ	0xFF5
 29064                           prodh	equ	0xFF4
 29065                           prodl	equ	0xFF3
 29066                           intcon	equ	0xFF2
 29067                           intcon2	equ	0xFF1
 29068                           indf0	equ	0xFEF
 29069                           postinc0	equ	0xFEE
 29070                           plusw0	equ	0xFEB
 29071                           fsr0h	equ	0xFEA
 29072                           fsr0l	equ	0xFE9
 29073                           wreg	equ	0xFE8
 29074                           indf1	equ	0xFE7
 29075                           postdec1	equ	0xFE5
 29076                           fsr1h	equ	0xFE2
 29077                           fsr1l	equ	0xFE1
 29078                           indf2	equ	0xFDF
 29079                           postinc2	equ	0xFDE
 29080                           postdec2	equ	0xFDD
 29081                           plusw2	equ	0xFDB
 29082                           fsr2h	equ	0xFDA
 29083                           fsr2l	equ	0xFD9
 29084                           status	equ	0xFD8
 29085                           
 29086 ;; *************** function _UARTstring *****************
 29087 ;; Defined at:
 29088 ;;		line 224 in file "UART.c"
 29089 ;; Parameters:    Size  Location     Type
 29090 ;;  data            2   13[BANK0 ] PTR unsigned char 
 29091 ;;		 -> UseBluetooth@buf(100), BluetoothInitialSetup@buf(50), ReceivedString(100), 
 29092 ;; Auto vars:     Size  Location     Type
 29093 ;;		None
 29094 ;; Return value:  Size  Location     Type
 29095 ;;		None               void
 29096 ;; Registers used:
 29097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29098 ;; Tracked objects:
 29099 ;;		On entry : 0/0
 29100 ;;		On exit  : 0/0
 29101 ;;		Unchanged: 0/0
 29102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29103 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29106 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29107 ;;Total ram usage:        2 bytes
 29108 ;; Hardware stack levels used:    1
 29109 ;; Hardware stack levels required when called:    8
 29110 ;; This function calls:
 29111 ;;		_UARTchar
 29112 ;; This function is called by:
 29113 ;;		_BluetoothInitialSetup
 29114 ;;		_UseBluetooth
 29115 ;; This function uses a non-reentrant model
 29116 ;;
 29117                           
 29118                           	psect	text67
 29119  00A2F0                     __ptext67:
 29120                           	opt stack 0
 29121  00A2F0                     _UARTstring:
 29122                           	opt stack 21
 29123                           
 29124                           ;UART.c: 226: while(*data != 0)
 29125                           
 29126                           ;incstack = 0
 29127  00A2F0  D00B               	goto	l9902
 29128  00A2F2                     l9898:
 29129                           
 29130                           ;UART.c: 227: {
 29131                           ;UART.c: 228: UARTchar(*data);
 29132  00A2F2  C06D  FFD9         	movff	UARTstring@data,fsr2l
 29133  00A2F6  C06E  FFDA         	movff	UARTstring@data+1,fsr2h
 29134  00A2FA  50DF               	movf	indf2,w,c
 29135  00A2FC  EC76  F050         	call	_UARTchar
 29136                           
 29137                           ;UART.c: 229: *data++;
 29138  00A300  0100               	movlb	0	; () banked
 29139  00A302  4B6D               	infsnz	UARTstring@data& (0+255),f,b
 29140  00A304  2B6E               	incf	(UARTstring@data+1)& (0+255),f,b
 29141  00A306  D000               	goto	l9902
 29142  00A308                     l9902:
 29143  00A308  C06D  FFD9         	movff	UARTstring@data,fsr2l
 29144  00A30C  C06E  FFDA         	movff	UARTstring@data+1,fsr2h
 29145  00A310  50DF               	movf	indf2,w,c
 29146  00A312  A4D8               	btfss	status,2,c
 29147  00A314  D7EE               	goto	l9898
 29148  00A316  0012               	return		;funcret
 29149  00A318                     __end_of_UARTstring:
 29150                           	opt stack 0
 29151                           tblptru	equ	0xFF8
 29152                           tblptrh	equ	0xFF7
 29153                           tblptrl	equ	0xFF6
 29154                           tablat	equ	0xFF5
 29155                           prodh	equ	0xFF4
 29156                           prodl	equ	0xFF3
 29157                           intcon	equ	0xFF2
 29158                           intcon2	equ	0xFF1
 29159                           indf0	equ	0xFEF
 29160                           postinc0	equ	0xFEE
 29161                           plusw0	equ	0xFEB
 29162                           fsr0h	equ	0xFEA
 29163                           fsr0l	equ	0xFE9
 29164                           wreg	equ	0xFE8
 29165                           indf1	equ	0xFE7
 29166                           postdec1	equ	0xFE5
 29167                           fsr1h	equ	0xFE2
 29168                           fsr1l	equ	0xFE1
 29169                           indf2	equ	0xFDF
 29170                           postinc2	equ	0xFDE
 29171                           postdec2	equ	0xFDD
 29172                           plusw2	equ	0xFDB
 29173                           fsr2h	equ	0xFDA
 29174                           fsr2l	equ	0xFD9
 29175                           status	equ	0xFD8
 29176                           
 29177 ;; *************** function _UARTchar *****************
 29178 ;; Defined at:
 29179 ;;		line 189 in file "UART.c"
 29180 ;; Parameters:    Size  Location     Type
 29181 ;;  data            1    wreg     unsigned char 
 29182 ;; Auto vars:     Size  Location     Type
 29183 ;;  data            1   12[BANK0 ] unsigned char 
 29184 ;; Return value:  Size  Location     Type
 29185 ;;		None               void
 29186 ;; Registers used:
 29187 ;;		wreg, status,2, status,0, cstack
 29188 ;; Tracked objects:
 29189 ;;		On entry : 0/0
 29190 ;;		On exit  : 0/0
 29191 ;;		Unchanged: 0/0
 29192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29196 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29197 ;;Total ram usage:        1 bytes
 29198 ;; Hardware stack levels used:    1
 29199 ;; Hardware stack levels required when called:    7
 29200 ;; This function calls:
 29201 ;;		_delayUS
 29202 ;; This function is called by:
 29203 ;;		_main
 29204 ;;		_UARTstring
 29205 ;;		_UARTstringCRLN
 29206 ;;		_UARTcommandMenu
 29207 ;;		_UseBluetooth
 29208 ;; This function uses a non-reentrant model
 29209 ;;
 29210                           
 29211                           	psect	text68
 29212  00A0EC                     __ptext68:
 29213                           	opt stack 0
 29214  00A0EC                     _UARTchar:
 29215                           	opt stack 21
 29216                           
 29217                           ;incstack = 0
 29218                           ;UARTchar@data stored from wreg
 29219  00A0EC  0100               	movlb	0	; () banked
 29220  00A0EE  6F6C               	movwf	UARTchar@data& (0+255),b
 29221                           
 29222                           ; BSR set to: 0
 29223                           ;UART.c: 191: RCSTAbits.CREN = 0;
 29224  00A0F0  98AB               	bcf	4011,4,c	;volatile
 29225                           
 29226                           ; BSR set to: 0
 29227                           ;UART.c: 192: if(data != 0)
 29228  00A0F2  0100               	movlb	0	; () banked
 29229  00A0F4  516C               	movf	UARTchar@data& (0+255),w,b
 29230  00A0F6  0100               	movlb	0	; () banked
 29231  00A0F8  B4D8               	btfsc	status,2,c
 29232  00A0FA  D010               	goto	l736
 29233                           
 29234                           ; BSR set to: 0
 29235                           ;UART.c: 193: {
 29236                           ;UART.c: 194: TXREG = data;
 29237  00A0FC  C06C  FFAD         	movff	UARTchar@data,4013	;volatile
 29238                           
 29239                           ; BSR set to: 0
 29240                           ;UART.c: 195: delayUS(100);
 29241  00A100  0E64               	movlw	100
 29242  00A102  0100               	movlb	0	; () banked
 29243  00A104  6F63               	movwf	delayUS@US& (0+255),b
 29244  00A106  0E00               	movlw	0
 29245  00A108  6F64               	movwf	(delayUS@US+1)& (0+255),b
 29246  00A10A  0E00               	movlw	0
 29247  00A10C  6F65               	movwf	(delayUS@US+2)& (0+255),b
 29248  00A10E  0E00               	movlw	0
 29249  00A110  6F66               	movwf	(delayUS@US+3)& (0+255),b
 29250  00A112  ECA0  F04E         	call	_delayUS	;wreg free
 29251                           
 29252                           ;UART.c: 196: while(!TXSTAbits.TRMT);
 29253  00A116  D000               	goto	l737
 29254  00A118                     l737:
 29255  00A118  A2AC               	btfss	4012,1,c	;volatile
 29256  00A11A  D7FE               	goto	l737
 29257  00A11C                     l736:
 29258                           
 29259                           ;UART.c: 197: }
 29260                           ;UART.c: 198: RCSTAbits.CREN = 1;
 29261  00A11C  88AB               	bsf	4011,4,c	;volatile
 29262  00A11E  0012               	return		;funcret
 29263  00A120                     __end_of_UARTchar:
 29264                           	opt stack 0
 29265                           tblptru	equ	0xFF8
 29266                           tblptrh	equ	0xFF7
 29267                           tblptrl	equ	0xFF6
 29268                           tablat	equ	0xFF5
 29269                           prodh	equ	0xFF4
 29270                           prodl	equ	0xFF3
 29271                           intcon	equ	0xFF2
 29272                           intcon2	equ	0xFF1
 29273                           indf0	equ	0xFEF
 29274                           postinc0	equ	0xFEE
 29275                           plusw0	equ	0xFEB
 29276                           fsr0h	equ	0xFEA
 29277                           fsr0l	equ	0xFE9
 29278                           wreg	equ	0xFE8
 29279                           indf1	equ	0xFE7
 29280                           postdec1	equ	0xFE5
 29281                           fsr1h	equ	0xFE2
 29282                           fsr1l	equ	0xFE1
 29283                           indf2	equ	0xFDF
 29284                           postinc2	equ	0xFDE
 29285                           postdec2	equ	0xFDD
 29286                           plusw2	equ	0xFDB
 29287                           fsr2h	equ	0xFDA
 29288                           fsr2l	equ	0xFD9
 29289                           status	equ	0xFD8
 29290                           
 29291 ;; *************** function _StringContainsCaseInsensitive *****************
 29292 ;; Defined at:
 29293 ;;		line 301 in file "MISC.c"
 29294 ;; Parameters:    Size  Location     Type
 29295 ;;  This            2    6[BANK0 ] PTR const unsigned char 
 29296 ;;		 -> Conf2_Channels(4), Conf1_Channels(4), CommandString(100), main@BluetoothString(100), 
 29297 ;;  That            2    8[BANK0 ] PTR const unsigned char 
 29298 ;;		 -> STR_59(7), STR_58(9), STR_57(7), STR_43(4), 
 29299 ;;		 -> STR_42(13), STR_21(4), STR_19(6), STR_17(6), 
 29300 ;;		 -> UseBluetooth@rfchannelSTR(10), BluetoothInitialSetup@buf(50), 
 29301 ;; Auto vars:     Size  Location     Type
 29302 ;;  i               1   16[BANK0 ] unsigned char 
 29303 ;;  tempThat        1   15[BANK0 ] unsigned char 
 29304 ;;  tempThis        1   14[BANK0 ] unsigned char 
 29305 ;;  MatchCount      1   13[BANK0 ] unsigned char 
 29306 ;;  MatchAmount     1   12[BANK0 ] unsigned char 
 29307 ;; Return value:  Size  Location     Type
 29308 ;;                  1    wreg      unsigned char 
 29309 ;; Registers used:
 29310 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29311 ;; Tracked objects:
 29312 ;;		On entry : 0/0
 29313 ;;		On exit  : 0/0
 29314 ;;		Unchanged: 0/0
 29315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29316 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29317 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29318 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29319 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29320 ;;Total ram usage:       11 bytes
 29321 ;; Hardware stack levels used:    1
 29322 ;; Hardware stack levels required when called:    7
 29323 ;; This function calls:
 29324 ;;		_lowercaseChar
 29325 ;; This function is called by:
 29326 ;;		_BluetoothInitialSetup
 29327 ;;		_UseBluetooth
 29328 ;; This function uses a non-reentrant model
 29329 ;;
 29330                           
 29331                           	psect	text69
 29332  0071A8                     __ptext69:
 29333                           	opt stack 0
 29334  0071A8                     _StringContainsCaseInsensitive:
 29335                           	opt stack 22
 29336                           
 29337                           ;MISC.c: 303: unsigned char tempThis,
 29338                           ;MISC.c: 304: tempThat;
 29339                           ;MISC.c: 305: unsigned char MatchCount = 0;
 29340                           
 29341                           ;incstack = 0
 29342  0071A8  0E00               	movlw	0
 29343  0071AA  0100               	movlb	0	; () banked
 29344  0071AC  6F6D               	movwf	StringContainsCaseInsensitive@MatchCount& (0+255),b
 29345                           
 29346                           ;MISC.c: 306: unsigned char MatchAmount = 0;
 29347  0071AE  0E00               	movlw	0
 29348  0071B0  0100               	movlb	0	; () banked
 29349  0071B2  6F6C               	movwf	StringContainsCaseInsensitive@MatchAmount& (0+255),b
 29350                           
 29351                           ;MISC.c: 307: unsigned char i = 0;
 29352  0071B4  0E00               	movlw	0
 29353  0071B6  0100               	movlb	0	; () banked
 29354  0071B8  6F70               	movwf	StringContainsCaseInsensitive@i& (0+255),b
 29355                           
 29356                           ;MISC.c: 309: for(i=0;i<254;i++)
 29357  0071BA  0E00               	movlw	0
 29358  0071BC  0100               	movlb	0	; () banked
 29359  0071BE  6F70               	movwf	StringContainsCaseInsensitive@i& (0+255),b
 29360  0071C0                     l9774:
 29361                           
 29362                           ; BSR set to: 0
 29363  0071C0  0EFD               	movlw	253
 29364  0071C2  0100               	movlb	0	; () banked
 29365  0071C4  6570               	cpfsgt	StringContainsCaseInsensitive@i& (0+255),b
 29366  0071C6  D001               	goto	l9778
 29367                           
 29368                           ; BSR set to: 0
 29369  0071C8  D0AF               	goto	l9820
 29370  0071CA                     l9778:
 29371                           
 29372                           ; BSR set to: 0
 29373                           ;MISC.c: 310: {
 29374                           ;MISC.c: 311: if(That[i] == 0)
 29375  0071CA  0100               	movlb	0	; () banked
 29376  0071CC  5170               	movf	StringContainsCaseInsensitive@i& (0+255),w,b
 29377  0071CE  0D01               	mullw	1
 29378  0071D0  C068  F06A         	movff	StringContainsCaseInsensitive@That,??_StringContainsCaseInsensitive
 29379  0071D4  C069  F06B         	movff	StringContainsCaseInsensitive@That+1,??_StringContainsCaseInsensitive+1
 29380  0071D8  50F3               	movf	prodl,w,c
 29381  0071DA  0100               	movlb	0	; () banked
 29382  0071DC  276A               	addwf	??_StringContainsCaseInsensitive& (0+255),f,b
 29383  0071DE  50F4               	movf	prodh,w,c
 29384  0071E0  0100               	movlb	0	; () banked
 29385  0071E2  236B               	addwfc	(??_StringContainsCaseInsensitive+1)& (0+255),f,b
 29386  0071E4  C06A  FFF6         	movff	??_StringContainsCaseInsensitive,tblptrl
 29387  0071E8  C06B  FFF7         	movff	??_StringContainsCaseInsensitive+1,tblptrh
 29388  0071EC  0E00               	movlw	low (__mediumconst shr (0+16))
 29389  0071EE  6EF8               	movwf	tblptru,c
 29390  0071F0  0E0F               	movlw	(high __ramtop+-1)
 29391  0071F2  64F7               	cpfsgt	tblptrh,c
 29392  0071F4  D003               	bra	u10107
 29393  0071F6  0008               	tblrd		*
 29394  0071F8  50F5               	movf	tablat,w,c
 29395  0071FA  D005               	bra	u10100
 29396  0071FC                     u10107:
 29397  0071FC  CFF6 FFE9          	movff	tblptrl,fsr0l
 29398  007200  CFF7 FFEA          	movff	tblptrh,fsr0h
 29399  007204  50EF               	movf	indf0,w,c
 29400  007206                     u10100:
 29401  007206  0900               	iorlw	0
 29402  007208  A4D8               	btfss	status,2,c
 29403  00720A  D003               	goto	l9782
 29404                           
 29405                           ;MISC.c: 312: {
 29406                           ;MISC.c: 313: MatchAmount = i;
 29407  00720C  C070  F06C         	movff	StringContainsCaseInsensitive@i,StringContainsCaseInsensitive@MatchAmount
 29408                           
 29409                           ;MISC.c: 314: break;
 29410  007210  D08B               	goto	l9820
 29411  007212                     l9782:
 29412  007212  0100               	movlb	0	; () banked
 29413  007214  2B70               	incf	StringContainsCaseInsensitive@i& (0+255),f,b
 29414  007216  D7D4               	goto	l9774
 29415                           
 29416                           ; BSR set to: 0
 29417                           ;MISC.c: 315: }
 29418                           ;MISC.c: 316: }
 29419                           ;MISC.c: 317: while(*This != 0)
 29420                           
 29421                           ; BSR set to: 0
 29422  007218  D087               	goto	l9820
 29423  00721A                     l9786:
 29424                           
 29425                           ;MISC.c: 318: {
 29426                           ;MISC.c: 319: tempThis = *This;
 29427  00721A  C066  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 29428  00721E  C067  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 29429  007222  0E00               	movlw	low (__mediumconst shr (0+16))
 29430  007224  6EF8               	movwf	tblptru,c
 29431  007226  0E0F               	movlw	(high __ramtop+-1)
 29432  007228  64F7               	cpfsgt	tblptrh,c
 29433  00722A  D003               	bra	u10137
 29434  00722C  0008               	tblrd		*
 29435  00722E  50F5               	movf	tablat,w,c
 29436  007230  D005               	bra	u10130
 29437  007232                     u10137:
 29438  007232  CFF6 FFE9          	movff	tblptrl,fsr0l
 29439  007236  CFF7 FFEA          	movff	tblptrh,fsr0h
 29440  00723A  50EF               	movf	indf0,w,c
 29441  00723C                     u10130:
 29442  00723C  0100               	movlb	0	; () banked
 29443  00723E  6F6E               	movwf	StringContainsCaseInsensitive@tempThis& (0+255),b
 29444                           
 29445                           ;MISC.c: 320: tempThat = *That;
 29446  007240  C068  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 29447  007244  C069  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 29448  007248  0E00               	movlw	low (__mediumconst shr (0+16))
 29449  00724A  6EF8               	movwf	tblptru,c
 29450  00724C  0E0F               	movlw	(high __ramtop+-1)
 29451  00724E  64F7               	cpfsgt	tblptrh,c
 29452  007250  D003               	bra	u10147
 29453  007252  0008               	tblrd		*
 29454  007254  50F5               	movf	tablat,w,c
 29455  007256  D005               	bra	u10140
 29456  007258                     u10147:
 29457  007258  CFF6 FFE9          	movff	tblptrl,fsr0l
 29458  00725C  CFF7 FFEA          	movff	tblptrh,fsr0h
 29459  007260  50EF               	movf	indf0,w,c
 29460  007262                     u10140:
 29461  007262  0100               	movlb	0	; () banked
 29462  007264  6F6F               	movwf	StringContainsCaseInsensitive@tempThat& (0+255),b
 29463                           
 29464                           ; BSR set to: 0
 29465                           ;MISC.c: 321: lowercaseChar(&tempThis);
 29466  007266  0E6E               	movlw	low StringContainsCaseInsensitive@tempThis
 29467  007268  0100               	movlb	0	; () banked
 29468  00726A  6F63               	movwf	lowercaseChar@Input& (0+255),b
 29469  00726C  0E00               	movlw	high StringContainsCaseInsensitive@tempThis
 29470  00726E  0100               	movlb	0	; () banked
 29471  007270  6F64               	movwf	(lowercaseChar@Input+1)& (0+255),b
 29472  007272  EC37  F051         	call	_lowercaseChar	;wreg free
 29473                           
 29474                           ;MISC.c: 322: lowercaseChar(&tempThat);
 29475  007276  0E6F               	movlw	low StringContainsCaseInsensitive@tempThat
 29476  007278  0100               	movlb	0	; () banked
 29477  00727A  6F63               	movwf	lowercaseChar@Input& (0+255),b
 29478  00727C  0E00               	movlw	high StringContainsCaseInsensitive@tempThat
 29479  00727E  0100               	movlb	0	; () banked
 29480  007280  6F64               	movwf	(lowercaseChar@Input+1)& (0+255),b
 29481  007282  EC37  F051         	call	_lowercaseChar	;wreg free
 29482                           
 29483                           ;MISC.c: 324: if(tempThis == tempThat)
 29484  007286  0100               	movlb	0	; () banked
 29485  007288  516F               	movf	StringContainsCaseInsensitive@tempThat& (0+255),w,b
 29486  00728A  0100               	movlb	0	; () banked
 29487  00728C  196E               	xorwf	StringContainsCaseInsensitive@tempThis& (0+255),w,b
 29488  00728E  A4D8               	btfss	status,2,c
 29489  007290  D03A               	goto	l9814
 29490                           
 29491                           ; BSR set to: 0
 29492                           ;MISC.c: 325: {
 29493                           ;MISC.c: 326: MatchCount++;
 29494  007292  0100               	movlb	0	; () banked
 29495  007294  2B6D               	incf	StringContainsCaseInsensitive@MatchCount& (0+255),f,b
 29496                           
 29497                           ;MISC.c: 327: That++;
 29498  007296  0100               	movlb	0	; () banked
 29499  007298  4B68               	infsnz	StringContainsCaseInsensitive@That& (0+255),f,b
 29500  00729A  2B69               	incf	(StringContainsCaseInsensitive@That+1)& (0+255),f,b
 29501                           
 29502                           ; BSR set to: 0
 29503                           ;MISC.c: 328: if(*That == 0)
 29504  00729C  C068  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 29505  0072A0  C069  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 29506  0072A4  0E00               	movlw	low (__mediumconst shr (0+16))
 29507  0072A6  6EF8               	movwf	tblptru,c
 29508  0072A8  0E0F               	movlw	(high __ramtop+-1)
 29509  0072AA  64F7               	cpfsgt	tblptrh,c
 29510  0072AC  D003               	bra	u10167
 29511  0072AE  0008               	tblrd		*
 29512  0072B0  50F5               	movf	tablat,w,c
 29513  0072B2  D005               	bra	u10160
 29514  0072B4                     u10167:
 29515  0072B4  CFF6 FFE9          	movff	tblptrl,fsr0l
 29516  0072B8  CFF7 FFEA          	movff	tblptrh,fsr0h
 29517  0072BC  50EF               	movf	indf0,w,c
 29518  0072BE                     u10160:
 29519  0072BE  0900               	iorlw	0
 29520  0072C0  A4D8               	btfss	status,2,c
 29521  0072C2  D00A               	goto	l9808
 29522                           
 29523                           ;MISC.c: 329: {
 29524                           ;MISC.c: 330: if(MatchAmount == MatchCount)
 29525  0072C4  0100               	movlb	0	; () banked
 29526  0072C6  516D               	movf	StringContainsCaseInsensitive@MatchCount& (0+255),w,b
 29527  0072C8  0100               	movlb	0	; () banked
 29528  0072CA  196C               	xorwf	StringContainsCaseInsensitive@MatchAmount& (0+255),w,b
 29529  0072CC  A4D8               	btfss	status,2,c
 29530  0072CE  D002               	goto	l9804
 29531                           
 29532                           ; BSR set to: 0
 29533                           ;MISC.c: 331: {
 29534                           ;MISC.c: 332: return 1;
 29535  0072D0  0E01               	movlw	1
 29536                           
 29537                           ; BSR set to: 0
 29538  0072D2  0012               	return	
 29539  0072D4                     l9804:
 29540                           
 29541                           ; BSR set to: 0
 29542                           ;MISC.c: 333: }
 29543                           ;MISC.c: 334: return 0;
 29544  0072D4  0E00               	movlw	0
 29545                           
 29546                           ; BSR set to: 0
 29547  0072D6  0012               	return	
 29548  0072D8                     l9808:
 29549                           
 29550                           ;MISC.c: 335: }
 29551                           ;MISC.c: 336: if(*This == 0)
 29552  0072D8  C066  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 29553  0072DC  C067  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 29554  0072E0  0E00               	movlw	low (__mediumconst shr (0+16))
 29555  0072E2  6EF8               	movwf	tblptru,c
 29556  0072E4  0E0F               	movlw	(high __ramtop+-1)
 29557  0072E6  64F7               	cpfsgt	tblptrh,c
 29558  0072E8  D003               	bra	u10197
 29559  0072EA  0008               	tblrd		*
 29560  0072EC  50F5               	movf	tablat,w,c
 29561  0072EE  D005               	bra	u10190
 29562  0072F0                     u10197:
 29563  0072F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 29564  0072F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 29565  0072F8  50EF               	movf	indf0,w,c
 29566  0072FA                     u10190:
 29567  0072FA  0900               	iorlw	0
 29568  0072FC  A4D8               	btfss	status,2,c
 29569  0072FE  D010               	goto	l9818
 29570                           
 29571                           ;MISC.c: 337: {
 29572                           ;MISC.c: 338: return 0;
 29573  007300  0E00               	movlw	0
 29574  007302  0012               	return	
 29575                           
 29576                           ;MISC.c: 339: }
 29577                           ;MISC.c: 340: }
 29578  007304  D00D               	goto	l9818
 29579  007306                     l9814:
 29580                           
 29581                           ;MISC.c: 341: else
 29582                           ;MISC.c: 342: {
 29583                           ;MISC.c: 343: That -= MatchCount;
 29584  007306  0100               	movlb	0	; () banked
 29585  007308  516D               	movf	StringContainsCaseInsensitive@MatchCount& (0+255),w,b
 29586  00730A  0D01               	mullw	1
 29587  00730C  50F3               	movf	prodl,w,c
 29588  00730E  0100               	movlb	0	; () banked
 29589  007310  5F68               	subwf	StringContainsCaseInsensitive@That& (0+255),f,b
 29590  007312  50F4               	movf	prodh,w,c
 29591  007314  0100               	movlb	0	; () banked
 29592  007316  5B69               	subwfb	(StringContainsCaseInsensitive@That+1)& (0+255),f,b
 29593                           
 29594                           ; BSR set to: 0
 29595                           ;MISC.c: 344: MatchCount = 0;
 29596  007318  0E00               	movlw	0
 29597  00731A  0100               	movlb	0	; () banked
 29598  00731C  6F6D               	movwf	StringContainsCaseInsensitive@MatchCount& (0+255),b
 29599  00731E  D000               	goto	l9818
 29600  007320                     l9818:
 29601                           
 29602                           ;MISC.c: 345: }
 29603                           ;MISC.c: 346: This++;
 29604  007320  0100               	movlb	0	; () banked
 29605  007322  4B66               	infsnz	StringContainsCaseInsensitive@This& (0+255),f,b
 29606  007324  2B67               	incf	(StringContainsCaseInsensitive@This+1)& (0+255),f,b
 29607  007326  D000               	goto	l9820
 29608  007328                     l9820:
 29609  007328  C066  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 29610  00732C  C067  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 29611  007330  0E00               	movlw	low (__mediumconst shr (0+16))
 29612  007332  6EF8               	movwf	tblptru,c
 29613  007334  0E0F               	movlw	(high __ramtop+-1)
 29614  007336  64F7               	cpfsgt	tblptrh,c
 29615  007338  D003               	bra	u10217
 29616  00733A  0008               	tblrd		*
 29617  00733C  50F5               	movf	tablat,w,c
 29618  00733E  D005               	bra	u10210
 29619  007340                     u10217:
 29620  007340  CFF6 FFE9          	movff	tblptrl,fsr0l
 29621  007344  CFF7 FFEA          	movff	tblptrh,fsr0h
 29622  007348  50EF               	movf	indf0,w,c
 29623  00734A                     u10210:
 29624  00734A  0900               	iorlw	0
 29625  00734C  A4D8               	btfss	status,2,c
 29626  00734E  D765               	goto	l9786
 29627                           
 29628                           ;MISC.c: 347: }
 29629                           ;MISC.c: 348: return 0;
 29630  007350  0E00               	movlw	0
 29631  007352  0012               	return	
 29632  007354  0012               	return		;funcret
 29633  007356                     __end_of_StringContainsCaseInsensitive:
 29634                           	opt stack 0
 29635                           tblptru	equ	0xFF8
 29636                           tblptrh	equ	0xFF7
 29637                           tblptrl	equ	0xFF6
 29638                           tablat	equ	0xFF5
 29639                           prodh	equ	0xFF4
 29640                           prodl	equ	0xFF3
 29641                           intcon	equ	0xFF2
 29642                           intcon2	equ	0xFF1
 29643                           indf0	equ	0xFEF
 29644                           postinc0	equ	0xFEE
 29645                           plusw0	equ	0xFEB
 29646                           fsr0h	equ	0xFEA
 29647                           fsr0l	equ	0xFE9
 29648                           wreg	equ	0xFE8
 29649                           indf1	equ	0xFE7
 29650                           postdec1	equ	0xFE5
 29651                           fsr1h	equ	0xFE2
 29652                           fsr1l	equ	0xFE1
 29653                           indf2	equ	0xFDF
 29654                           postinc2	equ	0xFDE
 29655                           postdec2	equ	0xFDD
 29656                           plusw2	equ	0xFDB
 29657                           fsr2h	equ	0xFDA
 29658                           fsr2l	equ	0xFD9
 29659                           status	equ	0xFD8
 29660                           
 29661 ;; *************** function _lowercaseChar *****************
 29662 ;; Defined at:
 29663 ;;		line 373 in file "MISC.c"
 29664 ;; Parameters:    Size  Location     Type
 29665 ;;  Input           2    3[BANK0 ] PTR unsigned char 
 29666 ;;		 -> GetNumberUnsigned@tempThis(1), GetNumber@tempThis(1), StringContainsCaseInsensitive@tempThat(1), StringContainsC
      +aseInsensitive@tempThis(1), 
 29667 ;;		 -> StringMatchCaseInsensitive@tempThat(1), StringMatchCaseInsensitive@tempThis(1), 
 29668 ;; Auto vars:     Size  Location     Type
 29669 ;;		None
 29670 ;; Return value:  Size  Location     Type
 29671 ;;		None               void
 29672 ;; Registers used:
 29673 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29674 ;; Tracked objects:
 29675 ;;		On entry : 0/0
 29676 ;;		On exit  : 0/0
 29677 ;;		Unchanged: 0/0
 29678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29679 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29681 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29682 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29683 ;;Total ram usage:        3 bytes
 29684 ;; Hardware stack levels used:    1
 29685 ;; Hardware stack levels required when called:    6
 29686 ;; This function calls:
 29687 ;;		Nothing
 29688 ;; This function is called by:
 29689 ;;		_StringMatchCaseInsensitive
 29690 ;;		_StringContainsCaseInsensitive
 29691 ;;		_GetNumber
 29692 ;;		_GetNumberUnsigned
 29693 ;; This function uses a non-reentrant model
 29694 ;;
 29695                           
 29696                           	psect	text70
 29697  00A26E                     __ptext70:
 29698                           	opt stack 0
 29699  00A26E                     _lowercaseChar:
 29700                           	opt stack 22
 29701                           
 29702                           ;MISC.c: 375: if((*Input >= 65) && (*Input <= 90 ))
 29703                           
 29704                           ;incstack = 0
 29705  00A26E  C063  FFD9         	movff	lowercaseChar@Input,fsr2l
 29706  00A272  C064  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 29707  00A276  0E40               	movlw	64
 29708  00A278  64DF               	cpfsgt	indf2,c
 29709  00A27A  0012               	return	
 29710  00A27C  C063  FFD9         	movff	lowercaseChar@Input,fsr2l
 29711  00A280  C064  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 29712  00A284  0E5B               	movlw	91
 29713  00A286  60DF               	cpfslt	indf2,c
 29714  00A288  0012               	return	
 29715                           
 29716                           ;MISC.c: 376: {
 29717                           ;MISC.c: 377: *Input += 32;
 29718  00A28A  C063  FFD9         	movff	lowercaseChar@Input,fsr2l
 29719  00A28E  C064  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 29720  00A292  0E20               	movlw	32
 29721  00A294  26DF               	addwf	indf2,f,c
 29722  00A296  0012               	return	
 29723  00A298  0012               	return		;funcret
 29724  00A29A                     __end_of_lowercaseChar:
 29725                           	opt stack 0
 29726                           tblptru	equ	0xFF8
 29727                           tblptrh	equ	0xFF7
 29728                           tblptrl	equ	0xFF6
 29729                           tablat	equ	0xFF5
 29730                           prodh	equ	0xFF4
 29731                           prodl	equ	0xFF3
 29732                           intcon	equ	0xFF2
 29733                           intcon2	equ	0xFF1
 29734                           indf0	equ	0xFEF
 29735                           postinc0	equ	0xFEE
 29736                           plusw0	equ	0xFEB
 29737                           fsr0h	equ	0xFEA
 29738                           fsr0l	equ	0xFE9
 29739                           wreg	equ	0xFE8
 29740                           indf1	equ	0xFE7
 29741                           postdec1	equ	0xFE5
 29742                           fsr1h	equ	0xFE2
 29743                           fsr1l	equ	0xFE1
 29744                           indf2	equ	0xFDF
 29745                           postinc2	equ	0xFDE
 29746                           postdec2	equ	0xFDD
 29747                           plusw2	equ	0xFDB
 29748                           fsr2h	equ	0xFDA
 29749                           fsr2l	equ	0xFD9
 29750                           status	equ	0xFD8
 29751                           
 29752 ;; *************** function _EnterCommandMode *****************
 29753 ;; Defined at:
 29754 ;;		line 139 in file "Bluetooth.c"
 29755 ;; Parameters:    Size  Location     Type
 29756 ;;		None
 29757 ;; Auto vars:     Size  Location     Type
 29758 ;;  buf            50    0[BANK1 ] unsigned char [50]
 29759 ;;  count           1   50[BANK1 ] unsigned char 
 29760 ;; Return value:  Size  Location     Type
 29761 ;;                  1    wreg      unsigned char 
 29762 ;; Registers used:
 29763 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29764 ;; Tracked objects:
 29765 ;;		On entry : 0/0
 29766 ;;		On exit  : 0/0
 29767 ;;		Unchanged: 0/0
 29768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29770 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29772 ;;      Totals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29773 ;;Total ram usage:       51 bytes
 29774 ;; Hardware stack levels used:    1
 29775 ;; Hardware stack levels required when called:   10
 29776 ;; This function calls:
 29777 ;;		_BlueConnected
 29778 ;;		_ClearUSART
 29779 ;;		_ResetBlue
 29780 ;;		_StringContains
 29781 ;;		_UARTstring_CONST
 29782 ;;		_cleanBuffer
 29783 ;;		_delayUS
 29784 ;;		_sprintf
 29785 ;; This function is called by:
 29786 ;;		_BluetoothInitialSetup
 29787 ;; This function uses a non-reentrant model
 29788 ;;
 29789                           
 29790                           	psect	text71
 29791  007AF4                     __ptext71:
 29792                           	opt stack 0
 29793  007AF4                     _EnterCommandMode:
 29794                           	opt stack 17
 29795                           
 29796                           ;Bluetooth.c: 141: unsigned char count = 0;
 29797                           
 29798                           ;incstack = 0
 29799  007AF4  0E00               	movlw	0
 29800  007AF6  0101               	movlb	1	; () banked
 29801  007AF8  6F32               	movwf	EnterCommandMode@count& (0+255),b
 29802                           
 29803                           ;Bluetooth.c: 142: unsigned char buf[50];
 29804                           ;Bluetooth.c: 143: while(BlueConnected())
 29805  007AFA  D04D               	goto	l9976
 29806  007AFC                     l9964:
 29807                           
 29808                           ;Bluetooth.c: 144: {
 29809                           ;Bluetooth.c: 145: ResetBlue();
 29810  007AFC  EC9A  F045         	call	_ResetBlue	;wreg free
 29811                           
 29812                           ;Bluetooth.c: 146: count++;
 29813  007B00  0101               	movlb	1	; () banked
 29814  007B02  2B32               	incf	EnterCommandMode@count& (0+255),f,b
 29815                           
 29816                           ; BSR set to: 1
 29817                           ;Bluetooth.c: 147: if(count > 4)
 29818  007B04  0E04               	movlw	4
 29819  007B06  0101               	movlb	1	; () banked
 29820  007B08  6532               	cpfsgt	EnterCommandMode@count& (0+255),b
 29821  007B0A  D002               	goto	l9974
 29822                           
 29823                           ; BSR set to: 1
 29824                           ;Bluetooth.c: 148: {
 29825                           ;Bluetooth.c: 150: return 0;
 29826  007B0C  0E00               	movlw	0
 29827                           
 29828                           ; BSR set to: 1
 29829  007B0E  0012               	return	
 29830  007B10                     l9974:
 29831                           
 29832                           ; BSR set to: 1
 29833                           ;Bluetooth.c: 151: }
 29834                           ;Bluetooth.c: 152: delayUS(50000);
 29835  007B10  0E50               	movlw	80
 29836  007B12  0100               	movlb	0	; () banked
 29837  007B14  6F63               	movwf	delayUS@US& (0+255),b
 29838  007B16  0EC3               	movlw	195
 29839  007B18  6F64               	movwf	(delayUS@US+1)& (0+255),b
 29840  007B1A  0E00               	movlw	0
 29841  007B1C  6F65               	movwf	(delayUS@US+2)& (0+255),b
 29842  007B1E  0E00               	movlw	0
 29843  007B20  6F66               	movwf	(delayUS@US+3)& (0+255),b
 29844  007B22  ECA0  F04E         	call	_delayUS	;wreg free
 29845                           
 29846                           ;Bluetooth.c: 153: delayUS(50000);
 29847  007B26  0E50               	movlw	80
 29848  007B28  0100               	movlb	0	; () banked
 29849  007B2A  6F63               	movwf	delayUS@US& (0+255),b
 29850  007B2C  0EC3               	movlw	195
 29851  007B2E  6F64               	movwf	(delayUS@US+1)& (0+255),b
 29852  007B30  0E00               	movlw	0
 29853  007B32  6F65               	movwf	(delayUS@US+2)& (0+255),b
 29854  007B34  0E00               	movlw	0
 29855  007B36  6F66               	movwf	(delayUS@US+3)& (0+255),b
 29856  007B38  ECA0  F04E         	call	_delayUS	;wreg free
 29857                           
 29858                           ;Bluetooth.c: 154: delayUS(50000);
 29859  007B3C  0E50               	movlw	80
 29860  007B3E  0100               	movlb	0	; () banked
 29861  007B40  6F63               	movwf	delayUS@US& (0+255),b
 29862  007B42  0EC3               	movlw	195
 29863  007B44  6F64               	movwf	(delayUS@US+1)& (0+255),b
 29864  007B46  0E00               	movlw	0
 29865  007B48  6F65               	movwf	(delayUS@US+2)& (0+255),b
 29866  007B4A  0E00               	movlw	0
 29867  007B4C  6F66               	movwf	(delayUS@US+3)& (0+255),b
 29868  007B4E  ECA0  F04E         	call	_delayUS	;wreg free
 29869                           
 29870                           ;Bluetooth.c: 155: delayUS(50000);
 29871  007B52  0E50               	movlw	80
 29872  007B54  0100               	movlb	0	; () banked
 29873  007B56  6F63               	movwf	delayUS@US& (0+255),b
 29874  007B58  0EC3               	movlw	195
 29875  007B5A  6F64               	movwf	(delayUS@US+1)& (0+255),b
 29876  007B5C  0E00               	movlw	0
 29877  007B5E  6F65               	movwf	(delayUS@US+2)& (0+255),b
 29878  007B60  0E00               	movlw	0
 29879  007B62  6F66               	movwf	(delayUS@US+3)& (0+255),b
 29880  007B64  ECA0  F04E         	call	_delayUS	;wreg free
 29881                           
 29882                           ;Bluetooth.c: 156: delayUS(50000);
 29883  007B68  0E50               	movlw	80
 29884  007B6A  0100               	movlb	0	; () banked
 29885  007B6C  6F63               	movwf	delayUS@US& (0+255),b
 29886  007B6E  0EC3               	movlw	195
 29887  007B70  6F64               	movwf	(delayUS@US+1)& (0+255),b
 29888  007B72  0E00               	movlw	0
 29889  007B74  6F65               	movwf	(delayUS@US+2)& (0+255),b
 29890  007B76  0E00               	movlw	0
 29891  007B78  6F66               	movwf	(delayUS@US+3)& (0+255),b
 29892  007B7A  ECA0  F04E         	call	_delayUS	;wreg free
 29893                           
 29894                           ;Bluetooth.c: 157: delayUS(50000);
 29895  007B7E  0E50               	movlw	80
 29896  007B80  0100               	movlb	0	; () banked
 29897  007B82  6F63               	movwf	delayUS@US& (0+255),b
 29898  007B84  0EC3               	movlw	195
 29899  007B86  6F64               	movwf	(delayUS@US+1)& (0+255),b
 29900  007B88  0E00               	movlw	0
 29901  007B8A  6F65               	movwf	(delayUS@US+2)& (0+255),b
 29902  007B8C  0E00               	movlw	0
 29903  007B8E  6F66               	movwf	(delayUS@US+3)& (0+255),b
 29904  007B90  ECA0  F04E         	call	_delayUS	;wreg free
 29905  007B94  D000               	goto	l9976
 29906  007B96                     l9976:
 29907  007B96  EC5E  F052         	call	_BlueConnected	;wreg free
 29908  007B9A  0900               	iorlw	0
 29909  007B9C  A4D8               	btfss	status,2,c
 29910  007B9E  D7AE               	goto	l9964
 29911                           
 29912                           ;Bluetooth.c: 158: }
 29913                           ;Bluetooth.c: 160: ClearUSART();
 29914  007BA0  EC21  F052         	call	_ClearUSART	;wreg free
 29915                           
 29916                           ;Bluetooth.c: 161: PIR1bits.RCIF = 0;
 29917  007BA4  9A9E               	bcf	3998,5,c	;volatile
 29918                           
 29919                           ;Bluetooth.c: 162: PIE1bits.RCIE = 1;
 29920  007BA6  8A9D               	bsf	3997,5,c	;volatile
 29921                           
 29922                           ;Bluetooth.c: 163: UARTstring_CONST("$$$");
 29923  007BA8  0EE1               	movlw	low STR_4
 29924  007BAA  0100               	movlb	0	; () banked
 29925  007BAC  6F6E               	movwf	UARTstring_CONST@data& (0+255),b
 29926  007BAE  0EFF               	movlw	high STR_4
 29927  007BB0  0100               	movlb	0	; () banked
 29928  007BB2  6F6F               	movwf	(UARTstring_CONST@data+1)& (0+255),b
 29929  007BB4  ECA9  F050         	call	_UARTstring_CONST	;wreg free
 29930                           
 29931                           ;Bluetooth.c: 164: delayUS(50000);
 29932  007BB8  0E50               	movlw	80
 29933  007BBA  0100               	movlb	0	; () banked
 29934  007BBC  6F63               	movwf	delayUS@US& (0+255),b
 29935  007BBE  0EC3               	movlw	195
 29936  007BC0  6F64               	movwf	(delayUS@US+1)& (0+255),b
 29937  007BC2  0E00               	movlw	0
 29938  007BC4  6F65               	movwf	(delayUS@US+2)& (0+255),b
 29939  007BC6  0E00               	movlw	0
 29940  007BC8  6F66               	movwf	(delayUS@US+3)& (0+255),b
 29941  007BCA  ECA0  F04E         	call	_delayUS	;wreg free
 29942                           
 29943                           ;Bluetooth.c: 165: PIE1bits.RCIE = 0;
 29944  007BCE  9A9D               	bcf	3997,5,c	;volatile
 29945                           
 29946                           ;Bluetooth.c: 166: sprintf(buf,"CMD");
 29947  007BD0  0E00               	movlw	low EnterCommandMode@buf
 29948  007BD2  0100               	movlb	0	; () banked
 29949  007BD4  6FB1               	movwf	sprintf@sp& (0+255),b
 29950  007BD6  0E01               	movlw	high EnterCommandMode@buf
 29951  007BD8  0100               	movlb	0	; () banked
 29952  007BDA  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
 29953  007BDC  0EED               	movlw	low STR_5
 29954  007BDE  0100               	movlb	0	; () banked
 29955  007BE0  6FB3               	movwf	sprintf@f& (0+255),b
 29956  007BE2  0EFF               	movlw	high STR_5
 29957  007BE4  0100               	movlb	0	; () banked
 29958  007BE6  6FB4               	movwf	(sprintf@f+1)& (0+255),b
 29959  007BE8  EC9C  F012         	call	_sprintf	;wreg free
 29960                           
 29961                           ;Bluetooth.c: 167: if(StringContains(CommandString,buf))
 29962  007BEC  0E18               	movlw	low _CommandString
 29963  007BEE  0100               	movlb	0	; () banked
 29964  007BF0  6F63               	movwf	StringContains@This& (0+255),b
 29965  007BF2  0E03               	movlw	high _CommandString
 29966  007BF4  0100               	movlb	0	; () banked
 29967  007BF6  6F64               	movwf	(StringContains@This+1)& (0+255),b
 29968  007BF8  0E00               	movlw	low EnterCommandMode@buf
 29969  007BFA  0100               	movlb	0	; () banked
 29970  007BFC  6F65               	movwf	StringContains@That& (0+255),b
 29971  007BFE  0E01               	movlw	high EnterCommandMode@buf
 29972  007C00  0100               	movlb	0	; () banked
 29973  007C02  6F66               	movwf	(StringContains@That+1)& (0+255),b
 29974  007C04  EC21  F040         	call	_StringContains	;wreg free
 29975  007C08  0900               	iorlw	0
 29976  007C0A  B4D8               	btfsc	status,2,c
 29977  007C0C  D010               	goto	l10002
 29978                           
 29979                           ;Bluetooth.c: 168: {
 29980                           ;Bluetooth.c: 169: cleanBuffer(CommandString,CommandStringPos);
 29981  007C0E  0E18               	movlw	low _CommandString
 29982  007C10  0100               	movlb	0	; () banked
 29983  007C12  6F63               	movwf	cleanBuffer@data& (0+255),b
 29984  007C14  0E03               	movlw	high _CommandString
 29985  007C16  0100               	movlb	0	; () banked
 29986  007C18  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 29987  007C1A  C043  F065         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 29988  007C1E  0100               	movlb	0	; () banked
 29989  007C20  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 29990  007C22  EC47  F04E         	call	_cleanBuffer	;wreg free
 29991                           
 29992                           ;Bluetooth.c: 170: CommandStringPos = 0;
 29993  007C26  0E00               	movlw	0
 29994  007C28  6E43               	movwf	_CommandStringPos,c	;volatile
 29995                           
 29996                           ;Bluetooth.c: 171: return 1;
 29997  007C2A  0E01               	movlw	1
 29998  007C2C  0012               	return	
 29999  007C2E                     l10002:
 30000                           
 30001                           ;Bluetooth.c: 172: }
 30002                           ;Bluetooth.c: 173: cleanBuffer(CommandString,CommandStringPos);
 30003  007C2E  0E18               	movlw	low _CommandString
 30004  007C30  0100               	movlb	0	; () banked
 30005  007C32  6F63               	movwf	cleanBuffer@data& (0+255),b
 30006  007C34  0E03               	movlw	high _CommandString
 30007  007C36  0100               	movlb	0	; () banked
 30008  007C38  6F64               	movwf	(cleanBuffer@data+1)& (0+255),b
 30009  007C3A  C043  F065         	movff	_CommandStringPos,cleanBuffer@count	;volatile
 30010  007C3E  0100               	movlb	0	; () banked
 30011  007C40  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 30012  007C42  EC47  F04E         	call	_cleanBuffer	;wreg free
 30013                           
 30014                           ;Bluetooth.c: 174: CommandStringPos = 0;
 30015  007C46  0E00               	movlw	0
 30016  007C48  6E43               	movwf	_CommandStringPos,c	;volatile
 30017                           
 30018                           ;Bluetooth.c: 175: return 0;
 30019  007C4A  0E00               	movlw	0
 30020  007C4C  0012               	return	
 30021  007C4E  0012               	return		;funcret
 30022  007C50                     __end_of_EnterCommandMode:
 30023                           	opt stack 0
 30024                           tblptru	equ	0xFF8
 30025                           tblptrh	equ	0xFF7
 30026                           tblptrl	equ	0xFF6
 30027                           tablat	equ	0xFF5
 30028                           prodh	equ	0xFF4
 30029                           prodl	equ	0xFF3
 30030                           intcon	equ	0xFF2
 30031                           intcon2	equ	0xFF1
 30032                           indf0	equ	0xFEF
 30033                           postinc0	equ	0xFEE
 30034                           plusw0	equ	0xFEB
 30035                           fsr0h	equ	0xFEA
 30036                           fsr0l	equ	0xFE9
 30037                           wreg	equ	0xFE8
 30038                           indf1	equ	0xFE7
 30039                           postdec1	equ	0xFE5
 30040                           fsr1h	equ	0xFE2
 30041                           fsr1l	equ	0xFE1
 30042                           indf2	equ	0xFDF
 30043                           postinc2	equ	0xFDE
 30044                           postdec2	equ	0xFDD
 30045                           plusw2	equ	0xFDB
 30046                           fsr2h	equ	0xFDA
 30047                           fsr2l	equ	0xFD9
 30048                           status	equ	0xFD8
 30049                           
 30050 ;; *************** function _sprintf *****************
 30051 ;; Defined at:
 30052 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 30053 ;; Parameters:    Size  Location     Type
 30054 ;;  sp              2   81[BANK0 ] PTR unsigned char 
 30055 ;;		 -> UseBluetooth@buf(100), BluetoothInitialSetup@buf(50), EnterCommandMode@buf(50), Init_System@buf(50), 
 30056 ;;  f               2   83[BANK0 ] PTR const unsigned char 
 30057 ;;		 -> STR_119(19), STR_117(15), STR_101(19), STR_99(27), 
 30058 ;;		 -> STR_98(16), STR_95(21), STR_93(20), STR_87(27), 
 30059 ;;		 -> STR_73(44), STR_72(54), STR_71(54), STR_70(63), 
 30060 ;;		 -> STR_48(44), STR_47(46), STR_45(44), STR_44(21), 
 30061 ;;		 -> STR_30(17), STR_29(17), STR_28(20), STR_26(23), 
 30062 ;;		 -> STR_25(21), STR_24(21), STR_16(4), STR_14(28), 
 30063 ;;		 -> STR_8(4), STR_7(24), STR_5(4), STR_3(23), 
 30064 ;;		 -> STR_2(15), 
 30065 ;; Auto vars:     Size  Location     Type
 30066 ;;  idx             1  104[BANK0 ] unsigned char 
 30067 ;;  val             4  119[BANK0 ] unsigned long 
 30068 ;;  tmpval          4  113[BANK0 ] struct .
 30069 ;;  fval            3  123[BANK0 ] struct .
 30070 ;;  flag            2  128[BANK0 ] unsigned short 
 30071 ;;  width           2  126[BANK0 ] int 
 30072 ;;  exp             2  117[BANK0 ] int 
 30073 ;;  prec            2  111[BANK0 ] int 
 30074 ;;  ap              2  109[BANK0 ] PTR void [1]
 30075 ;;		 -> ?_sprintf(2), 
 30076 ;;  len             2  107[BANK0 ] unsigned int 
 30077 ;;  cp              2  105[BANK0 ] PTR const unsigned char 
 30078 ;;		 -> STR_164(7), sprintf@c(1), Frequency(4), PCBVersion(5), 
 30079 ;;		 -> FirmVersion(9), GetNumber@temp(4), 
 30080 ;;  c               1  130[BANK0 ] char 
 30081 ;;  d               1    0        unsigned char 
 30082 ;; Return value:  Size  Location     Type
 30083 ;;                  2   81[BANK0 ] int 
 30084 ;; Registers used:
 30085 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30086 ;; Tracked objects:
 30087 ;;		On entry : 0/0
 30088 ;;		On exit  : 0/0
 30089 ;;		Unchanged: 0/0
 30090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30091 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30092 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30093 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30094 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30095 ;;Total ram usage:       50 bytes
 30096 ;; Hardware stack levels used:    1
 30097 ;; Hardware stack levels required when called:    9
 30098 ;; This function calls:
 30099 ;;		___awdiv
 30100 ;;		___ftadd
 30101 ;;		___ftge
 30102 ;;		___ftmul
 30103 ;;		___ftneg
 30104 ;;		___ftsub
 30105 ;;		___fttol
 30106 ;;		___lldiv
 30107 ;;		___llmod
 30108 ;;		___lltoft
 30109 ;;		___wmul
 30110 ;;		__div_to_l_
 30111 ;;		__tdiv_to_l_
 30112 ;;		_fround
 30113 ;;		_isdigit
 30114 ;;		_scale
 30115 ;; This function is called by:
 30116 ;;		_Init_System
 30117 ;;		_EnterCommandMode
 30118 ;;		_BluetoothInitialSetup
 30119 ;;		_UseBluetooth
 30120 ;; This function uses a non-reentrant model
 30121 ;;
 30122                           
 30123                           	psect	text72
 30124  002538                     __ptext72:
 30125                           	opt stack 0
 30126  002538                     _sprintf:
 30127                           	opt stack 20
 30128                           
 30129                           ;doprnt.c: 494: va_list ap;
 30130                           ;doprnt.c: 499: signed char c;
 30131                           ;doprnt.c: 501: int width;
 30132                           ;doprnt.c: 504: int prec;
 30133                           ;doprnt.c: 508: unsigned short flag;
 30134                           ;doprnt.c: 515: char d;
 30135                           ;doprnt.c: 516: double fval;
 30136                           ;doprnt.c: 517: int exp;
 30137                           ;doprnt.c: 523: union {
 30138                           ;doprnt.c: 524: unsigned long vd;
 30139                           ;doprnt.c: 525: double integ;
 30140                           ;doprnt.c: 526: } tmpval;
 30141                           ;doprnt.c: 528: unsigned long val;
 30142                           ;doprnt.c: 529: unsigned len;
 30143                           ;doprnt.c: 530: const char * cp;
 30144                           ;doprnt.c: 533: *ap = __va_start();
 30145                           
 30146                           ;incstack = 0
 30147  002538  0EB5               	movlw	low (?_sprintf+4)
 30148  00253A  0100               	movlb	0	; () banked
 30149  00253C  6FCD               	movwf	sprintf@ap& (0+255),b
 30150  00253E  0E00               	movlw	high (?_sprintf+4)
 30151  002540  0100               	movlb	0	; () banked
 30152  002542  6FCE               	movwf	(sprintf@ap+1)& (0+255),b
 30153                           
 30154                           ;doprnt.c: 536: while(c = *f++) {
 30155  002544  EF3F  F01A         	goto	l9568
 30156  002548                     l9192:
 30157                           
 30158                           ; BSR set to: 0
 30159                           ;doprnt.c: 538: if(c != '%')
 30160  002548  0E25               	movlw	37
 30161  00254A  0100               	movlb	0	; () banked
 30162  00254C  19E2               	xorwf	sprintf@c& (0+255),w,b
 30163  00254E  B4D8               	btfsc	status,2,c
 30164  002550  D00B               	goto	l9198
 30165                           
 30166                           ; BSR set to: 0
 30167                           ;doprnt.c: 540: {
 30168                           ;doprnt.c: 541: ((*sp++ = (c)));
 30169  002552  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 30170  002556  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 30171  00255A  C0E2  FFDF         	movff	sprintf@c,indf2
 30172                           
 30173                           ; BSR set to: 0
 30174  00255E  0100               	movlb	0	; () banked
 30175  002560  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 30176  002562  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 30177                           
 30178                           ;doprnt.c: 542: continue;
 30179  002564  EF3F  F01A         	goto	l9568
 30180  002568                     l9198:
 30181                           
 30182                           ; BSR set to: 0
 30183                           ;doprnt.c: 543: }
 30184                           ;doprnt.c: 546: width = 0;
 30185  002568  0E00               	movlw	0
 30186  00256A  0100               	movlb	0	; () banked
 30187  00256C  6FDF               	movwf	(sprintf@width+1)& (0+255),b
 30188  00256E  0E00               	movlw	0
 30189  002570  6FDE               	movwf	sprintf@width& (0+255),b
 30190                           
 30191                           ;doprnt.c: 548: flag = 0;
 30192  002572  0E00               	movlw	0
 30193  002574  0100               	movlb	0	; () banked
 30194  002576  6FE1               	movwf	(sprintf@flag+1)& (0+255),b
 30195  002578  0E00               	movlw	0
 30196  00257A  6FE0               	movwf	sprintf@flag& (0+255),b
 30197                           
 30198                           ; BSR set to: 0
 30199                           ;doprnt.c: 551: switch(*f) {
 30200                           
 30201                           ;doprnt.c: 550: for(;;) {
 30202  00257C  D007               	goto	l9204
 30203  00257E                     l9200:
 30204                           
 30205                           ;doprnt.c: 580: flag |= 0x04;
 30206  00257E  0100               	movlb	0	; () banked
 30207  002580  85E0               	bsf	sprintf@flag& (0+255),2,b
 30208                           
 30209                           ;doprnt.c: 581: f++;
 30210  002582  0100               	movlb	0	; () banked
 30211  002584  4BB3               	infsnz	sprintf@f& (0+255),f,b
 30212  002586  2BB4               	incf	(sprintf@f+1)& (0+255),f,b
 30213                           
 30214                           ;doprnt.c: 582: continue;
 30215  002588  D001               	goto	l9204
 30216                           
 30217                           ; BSR set to: 0
 30218                           ;doprnt.c: 584: }
 30219  00258A  D00C               	goto	l9206
 30220  00258C                     l9204:
 30221  00258C  C0B3  FFF6         	movff	sprintf@f,tblptrl
 30222  002590  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
 30223  002594                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30224  002594  6AF8               	clrf	tblptru,c
 30225  002596                     	endif
 30226  002596                     	if	0	;tblptru may be non-zero
 30227  002596                     	endif
 30228  002596  0008               	tblrd		*
 30229  002598  50F5               	movf	tablat,w,c
 30230                           
 30231                           ; Switch size 1, requested type "space"
 30232                           ; Number of cases is 1, Range of values is 48 to 48
 30233                           ; switch strategies available:
 30234                           ; Name         Instructions Cycles
 30235                           ; simple_byte            4     3 (average)
 30236                           ;	Chosen strategy is simple_byte
 30237  00259A  0A30               	xorlw	48	; case 48
 30238  00259C  B4D8               	btfsc	status,2,c
 30239  00259E  D7EF               	goto	l9200
 30240                           
 30241                           ;doprnt.c: 585: break;
 30242  0025A0  D001               	goto	l9206
 30243                           
 30244                           ;doprnt.c: 586: }
 30245  0025A2  D7F4               	goto	l9204
 30246  0025A4                     l9206:
 30247                           
 30248                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 30249  0025A4  C0B3  FFF6         	movff	sprintf@f,tblptrl
 30250  0025A8  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
 30251  0025AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30252  0025AC  6AF8               	clrf	tblptru,c
 30253  0025AE                     	endif
 30254  0025AE                     	if	0	;tblptru may be non-zero
 30255  0025AE                     	endif
 30256  0025AE  0008               	tblrd		*
 30257  0025B0  50F5               	movf	tablat,w,c
 30258  0025B2  EC0A  F051         	call	_isdigit
 30259  0025B6  A0D8               	btfss	status,0,c
 30260  0025B8  D110               	goto	l9270
 30261                           
 30262                           ;doprnt.c: 598: width = 0;
 30263  0025BA  0E00               	movlw	0
 30264  0025BC  0100               	movlb	0	; () banked
 30265  0025BE  6FDF               	movwf	(sprintf@width+1)& (0+255),b
 30266  0025C0  0E00               	movlw	0
 30267  0025C2  6FDE               	movwf	sprintf@width& (0+255),b
 30268  0025C4  D000               	goto	l9210
 30269  0025C6                     l9210:
 30270                           
 30271                           ;doprnt.c: 600: width *= 10;
 30272  0025C6  C0DE  F071         	movff	sprintf@width,___wmul@multiplier
 30273  0025CA  C0DF  F072         	movff	sprintf@width+1,___wmul@multiplier+1
 30274  0025CE  0E00               	movlw	0
 30275  0025D0  0100               	movlb	0	; () banked
 30276  0025D2  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30277  0025D4  0E0A               	movlw	10
 30278  0025D6  6F73               	movwf	___wmul@multiplicand& (0+255),b
 30279  0025D8  EC3E  F050         	call	___wmul	;wreg free
 30280  0025DC  C071  F0DE         	movff	?___wmul,sprintf@width
 30281  0025E0  C072  F0DF         	movff	?___wmul+1,sprintf@width+1
 30282                           
 30283                           ;doprnt.c: 601: width += *f++ - '0';
 30284  0025E4  0ED0               	movlw	208
 30285  0025E6  0100               	movlb	0	; () banked
 30286  0025E8  6FBF               	movwf	??_sprintf& (0+255),b
 30287  0025EA  0EFF               	movlw	255
 30288  0025EC  0100               	movlb	0	; () banked
 30289  0025EE  6FC0               	movwf	(??_sprintf+1)& (0+255),b
 30290  0025F0  C0B3  FFF6         	movff	sprintf@f,tblptrl
 30291  0025F4  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
 30292  0025F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30293  0025F8  6AF8               	clrf	tblptru,c
 30294  0025FA                     	endif
 30295  0025FA                     	if	0	;tblptru may be non-zero
 30296  0025FA                     	endif
 30297  0025FA  0008               	tblrd		*
 30298  0025FC  50F5               	movf	tablat,w,c
 30299  0025FE  0100               	movlb	0	; () banked
 30300  002600  6FC1               	movwf	(??_sprintf+2)& (0+255),b
 30301  002602  6BC2               	clrf	(??_sprintf+3)& (0+255),b
 30302  002604  0100               	movlb	0	; () banked
 30303  002606  51BF               	movf	??_sprintf& (0+255),w,b
 30304  002608  0100               	movlb	0	; () banked
 30305  00260A  27C1               	addwf	(??_sprintf+2)& (0+255),f,b
 30306  00260C  0100               	movlb	0	; () banked
 30307  00260E  51C0               	movf	(??_sprintf+1)& (0+255),w,b
 30308  002610  0100               	movlb	0	; () banked
 30309  002612  23C2               	addwfc	(??_sprintf+3)& (0+255),f,b
 30310  002614  0100               	movlb	0	; () banked
 30311  002616  51C1               	movf	(??_sprintf+2)& (0+255),w,b
 30312  002618  0100               	movlb	0	; () banked
 30313  00261A  27DE               	addwf	sprintf@width& (0+255),f,b
 30314  00261C  0100               	movlb	0	; () banked
 30315  00261E  51C2               	movf	(??_sprintf+3)& (0+255),w,b
 30316  002620  0100               	movlb	0	; () banked
 30317  002622  23DF               	addwfc	(sprintf@width+1)& (0+255),f,b
 30318                           
 30319                           ; BSR set to: 0
 30320  002624  0100               	movlb	0	; () banked
 30321  002626  4BB3               	infsnz	sprintf@f& (0+255),f,b
 30322  002628  2BB4               	incf	(sprintf@f+1)& (0+255),f,b
 30323                           
 30324                           ; BSR set to: 0
 30325                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 30326  00262A  C0B3  FFF6         	movff	sprintf@f,tblptrl
 30327  00262E  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
 30328  002632                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30329  002632  6AF8               	clrf	tblptru,c
 30330  002634                     	endif
 30331  002634                     	if	0	;tblptru may be non-zero
 30332  002634                     	endif
 30333  002634  0008               	tblrd		*
 30334  002636  50F5               	movf	tablat,w,c
 30335  002638  EC0A  F051         	call	_isdigit
 30336  00263C  A0D8               	btfss	status,0,c
 30337  00263E  D0CD               	goto	l9270
 30338  002640  D7C2               	goto	l9210
 30339                           
 30340                           ;doprnt.c: 635: switch(c = *f++) {
 30341                           
 30342                           ;doprnt.c: 608: }
 30343                           ;doprnt.c: 633: loop:
 30344  002642  D0CB               	goto	l9270
 30345                           
 30346                           ;doprnt.c: 638: goto alldone;
 30347                           
 30348                           ;doprnt.c: 637: case 0:
 30349  002644  EF51  F01A         	goto	l9570
 30350  002648                     l9218:
 30351                           
 30352                           ;doprnt.c: 643: flag |= 0x10;
 30353  002648  0100               	movlb	0	; () banked
 30354  00264A  89E0               	bsf	sprintf@flag& (0+255),4,b
 30355                           
 30356                           ;doprnt.c: 644: goto loop;
 30357  00264C  D0C6               	goto	l9270
 30358  00264E                     l9220:
 30359                           
 30360                           ; BSR set to: 0
 30361                           ;doprnt.c: 663: flag |= 0x400;
 30362  00264E  0100               	movlb	0	; () banked
 30363  002650  85E1               	bsf	(sprintf@flag+1)& (0+255),2,b
 30364                           
 30365                           ; BSR set to: 0
 30366                           ;doprnt.c: 698: case 'i':
 30367                           ;doprnt.c: 699: break;
 30368                           
 30369                           ; BSR set to: 0
 30370                           
 30371                           ;doprnt.c: 697: case 'd':
 30372                           
 30373                           ;doprnt.c: 664: break;
 30374  002652  D0F0               	goto	l9272
 30375                           
 30376                           ; BSR set to: 0
 30377                           
 30378                           ;doprnt.c: 712: case 'X':
 30379  002654  D000               	goto	l9222
 30380  002656                     l9222:
 30381                           
 30382                           ; BSR set to: 0
 30383                           ;doprnt.c: 718: case 'x':
 30384                           ;doprnt.c: 721: flag |= 0x80;
 30385  002656  0100               	movlb	0	; () banked
 30386  002658  8FE0               	bsf	sprintf@flag& (0+255),7,b
 30387                           
 30388                           ;doprnt.c: 723: break;
 30389  00265A  D0EC               	goto	l9272
 30390  00265C                     l9224:
 30391                           
 30392                           ; BSR set to: 0
 30393                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 30394  00265C  C0CD  FFD9         	movff	sprintf@ap,fsr2l
 30395  002660  C0CE  FFDA         	movff	sprintf@ap+1,fsr2h
 30396  002664  CFDE F0C9          	movff	postinc2,sprintf@cp
 30397  002668  CFDD F0CA          	movff	postdec2,sprintf@cp+1
 30398                           
 30399                           ; BSR set to: 0
 30400  00266C  0E02               	movlw	2
 30401  00266E  0100               	movlb	0	; () banked
 30402  002670  27CD               	addwf	sprintf@ap& (0+255),f,b
 30403  002672  0E00               	movlw	0
 30404  002674  23CE               	addwfc	(sprintf@ap+1)& (0+255),f,b
 30405                           
 30406                           ; BSR set to: 0
 30407                           ;doprnt.c: 740: if(!cp)
 30408  002676  0100               	movlb	0	; () banked
 30409  002678  51C9               	movf	sprintf@cp& (0+255),w,b
 30410  00267A  0100               	movlb	0	; () banked
 30411  00267C  11CA               	iorwf	(sprintf@cp+1)& (0+255),w,b
 30412  00267E  A4D8               	btfss	status,2,c
 30413  002680  D007               	goto	l9232
 30414                           
 30415                           ; BSR set to: 0
 30416                           ;doprnt.c: 741: cp = "(null)";
 30417  002682  0EA0               	movlw	low STR_164
 30418  002684  0100               	movlb	0	; () banked
 30419  002686  6FC9               	movwf	sprintf@cp& (0+255),b
 30420  002688  0EFF               	movlw	high STR_164
 30421  00268A  0100               	movlb	0	; () banked
 30422  00268C  6FCA               	movwf	(sprintf@cp+1)& (0+255),b
 30423  00268E  D000               	goto	l9232
 30424  002690                     l9232:
 30425                           
 30426                           ; BSR set to: 0
 30427                           ;doprnt.c: 745: len = 0;
 30428  002690  0E00               	movlw	0
 30429  002692  0100               	movlb	0	; () banked
 30430  002694  6FCC               	movwf	(sprintf@len+1)& (0+255),b
 30431  002696  0E00               	movlw	0
 30432  002698  6FCB               	movwf	sprintf@len& (0+255),b
 30433                           
 30434                           ;doprnt.c: 746: while(cp[len])
 30435  00269A  D004               	goto	l9236
 30436  00269C                     l9234:
 30437                           
 30438                           ;doprnt.c: 747: len++;
 30439  00269C  0100               	movlb	0	; () banked
 30440  00269E  4BCB               	infsnz	sprintf@len& (0+255),f,b
 30441  0026A0  2BCC               	incf	(sprintf@len+1)& (0+255),f,b
 30442  0026A2  D000               	goto	l9236
 30443  0026A4                     l9236:
 30444                           
 30445                           ; BSR set to: 0
 30446  0026A4  0100               	movlb	0	; () banked
 30447  0026A6  51CB               	movf	sprintf@len& (0+255),w,b
 30448  0026A8  0100               	movlb	0	; () banked
 30449  0026AA  25C9               	addwf	sprintf@cp& (0+255),w,b
 30450  0026AC  0100               	movlb	0	; () banked
 30451  0026AE  6FBF               	movwf	??_sprintf& (0+255),b
 30452  0026B0  0100               	movlb	0	; () banked
 30453  0026B2  51CC               	movf	(sprintf@len+1)& (0+255),w,b
 30454  0026B4  0100               	movlb	0	; () banked
 30455  0026B6  21CA               	addwfc	(sprintf@cp+1)& (0+255),w,b
 30456  0026B8  0100               	movlb	0	; () banked
 30457  0026BA  6FC0               	movwf	(??_sprintf+1)& (0+255),b
 30458  0026BC  C0BF  FFF6         	movff	??_sprintf,tblptrl
 30459  0026C0  C0C0  FFF7         	movff	??_sprintf+1,tblptrh
 30460  0026C4  0E00               	movlw	low (__mediumconst shr (0+16))
 30461  0026C6  6EF8               	movwf	tblptru,c
 30462  0026C8  0E0F               	movlw	(high __ramtop+-1)
 30463  0026CA  64F7               	cpfsgt	tblptrh,c
 30464  0026CC  D003               	bra	u9217
 30465  0026CE  0008               	tblrd		*
 30466  0026D0  50F5               	movf	tablat,w,c
 30467  0026D2  D005               	bra	u9210
 30468  0026D4                     u9217:
 30469  0026D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 30470  0026D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 30471  0026DC  50EF               	movf	indf0,w,c
 30472  0026DE                     u9210:
 30473  0026DE  0900               	iorlw	0
 30474  0026E0  B4D8               	btfsc	status,2,c
 30475  0026E2  D002               	goto	l9238
 30476  0026E4  D7DB               	goto	l9234
 30477  0026E6  D000               	goto	l9238
 30478  0026E8                     l9238:
 30479                           
 30480                           ;doprnt.c: 757: if(width > len)
 30481  0026E8  0100               	movlb	0	; () banked
 30482  0026EA  51DE               	movf	sprintf@width& (0+255),w,b
 30483  0026EC  0100               	movlb	0	; () banked
 30484  0026EE  5DCB               	subwf	sprintf@len& (0+255),w,b
 30485  0026F0  0100               	movlb	0	; () banked
 30486  0026F2  51DF               	movf	(sprintf@width+1)& (0+255),w,b
 30487  0026F4  0100               	movlb	0	; () banked
 30488  0026F6  59CC               	subwfb	(sprintf@len+1)& (0+255),w,b
 30489  0026F8  B0D8               	btfsc	status,0,c
 30490  0026FA  D009               	goto	l9242
 30491                           
 30492                           ; BSR set to: 0
 30493                           ;doprnt.c: 758: width -= len;
 30494  0026FC  0100               	movlb	0	; () banked
 30495  0026FE  51CB               	movf	sprintf@len& (0+255),w,b
 30496  002700  0100               	movlb	0	; () banked
 30497  002702  5FDE               	subwf	sprintf@width& (0+255),f,b
 30498  002704  0100               	movlb	0	; () banked
 30499  002706  51CC               	movf	(sprintf@len+1)& (0+255),w,b
 30500  002708  0100               	movlb	0	; () banked
 30501  00270A  5BDF               	subwfb	(sprintf@width+1)& (0+255),f,b
 30502  00270C  D010               	goto	l9248
 30503  00270E                     l9242:
 30504                           
 30505                           ; BSR set to: 0
 30506                           ;doprnt.c: 759: else
 30507                           ;doprnt.c: 760: width = 0;
 30508  00270E  0E00               	movlw	0
 30509  002710  0100               	movlb	0	; () banked
 30510  002712  6FDF               	movwf	(sprintf@width+1)& (0+255),b
 30511  002714  0E00               	movlw	0
 30512  002716  6FDE               	movwf	sprintf@width& (0+255),b
 30513                           
 30514                           ; BSR set to: 0
 30515                           ;doprnt.c: 764: while(width--)
 30516  002718  D00A               	goto	l9248
 30517  00271A                     l9244:
 30518                           
 30519                           ; BSR set to: 0
 30520                           ;doprnt.c: 765: ((*sp++ = (' ')));
 30521  00271A  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 30522  00271E  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 30523  002722  0E20               	movlw	32
 30524  002724  6EDF               	movwf	indf2,c
 30525                           
 30526                           ; BSR set to: 0
 30527  002726  0100               	movlb	0	; () banked
 30528  002728  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 30529  00272A  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 30530  00272C  D000               	goto	l9248
 30531  00272E                     l9248:
 30532                           
 30533                           ; BSR set to: 0
 30534  00272E  0100               	movlb	0	; () banked
 30535  002730  07DE               	decf	sprintf@width& (0+255),f,b
 30536  002732  A0D8               	btfss	status,0,c
 30537  002734  07DF               	decf	(sprintf@width+1)& (0+255),f,b
 30538  002736  0100               	movlb	0	; () banked
 30539  002738  29DE               	incf	sprintf@width& (0+255),w,b
 30540  00273A  E1EF               	bnz	l9244
 30541  00273C  0100               	movlb	0	; () banked
 30542  00273E  29DF               	incf	(sprintf@width+1)& (0+255),w,b
 30543  002740  B4D8               	btfsc	status,2,c
 30544  002742  D01F               	goto	l9256
 30545  002744  D7EA               	goto	l9244
 30546                           
 30547                           ; BSR set to: 0
 30548                           ;doprnt.c: 767: while(len--)
 30549  002746  D01D               	goto	l9256
 30550  002748                     l9250:
 30551                           
 30552                           ; BSR set to: 0
 30553                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 30554  002748  C0C9  FFF6         	movff	sprintf@cp,tblptrl
 30555  00274C  C0CA  FFF7         	movff	sprintf@cp+1,tblptrh
 30556  002750  0E00               	movlw	low (__mediumconst shr (0+16))
 30557  002752  6EF8               	movwf	tblptru,c
 30558  002754  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 30559  002758  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 30560  00275C  0E0F               	movlw	(high __ramtop+-1)
 30561  00275E  64F7               	cpfsgt	tblptrh,c
 30562  002760  D003               	bra	u9257
 30563  002762  0008               	tblrd		*
 30564  002764  50F5               	movf	tablat,w,c
 30565  002766  D005               	bra	u9250
 30566  002768                     u9257:
 30567  002768  CFF6 FFE9          	movff	tblptrl,fsr0l
 30568  00276C  CFF7 FFEA          	movff	tblptrh,fsr0h
 30569  002770  50EF               	movf	indf0,w,c
 30570  002772                     u9250:
 30571  002772  6EDF               	movwf	indf2,c
 30572  002774  0100               	movlb	0	; () banked
 30573  002776  4BC9               	infsnz	sprintf@cp& (0+255),f,b
 30574  002778  2BCA               	incf	(sprintf@cp+1)& (0+255),f,b
 30575                           
 30576                           ; BSR set to: 0
 30577  00277A  0100               	movlb	0	; () banked
 30578  00277C  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 30579  00277E  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 30580  002780  D000               	goto	l9256
 30581  002782                     l9256:
 30582                           
 30583                           ; BSR set to: 0
 30584  002782  0100               	movlb	0	; () banked
 30585  002784  07CB               	decf	sprintf@len& (0+255),f,b
 30586  002786  A0D8               	btfss	status,0,c
 30587  002788  07CC               	decf	(sprintf@len+1)& (0+255),f,b
 30588  00278A  0100               	movlb	0	; () banked
 30589  00278C  29CB               	incf	sprintf@len& (0+255),w,b
 30590  00278E  E1DC               	bnz	l9250
 30591  002790  0100               	movlb	0	; () banked
 30592  002792  29CC               	incf	(sprintf@len+1)& (0+255),w,b
 30593  002794  B4D8               	btfsc	status,2,c
 30594  002796  EF3F  F01A         	goto	l9568
 30595  00279A  D7D6               	goto	l9250
 30596                           
 30597                           ; BSR set to: 0
 30598                           ;doprnt.c: 774: continue;
 30599  00279C  EF3F  F01A         	goto	l9568
 30600  0027A0                     l9258:
 30601                           
 30602                           ; BSR set to: 0
 30603                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 30604  0027A0  C0CD  FFD9         	movff	sprintf@ap,fsr2l
 30605  0027A4  C0CE  FFDA         	movff	sprintf@ap+1,fsr2h
 30606  0027A8  50DF               	movf	indf2,w,c
 30607  0027AA  0100               	movlb	0	; () banked
 30608  0027AC  6FE2               	movwf	sprintf@c& (0+255),b
 30609                           
 30610                           ; BSR set to: 0
 30611  0027AE  0E02               	movlw	2
 30612  0027B0  0100               	movlb	0	; () banked
 30613  0027B2  27CD               	addwf	sprintf@ap& (0+255),f,b
 30614  0027B4  0E00               	movlw	0
 30615  0027B6  23CE               	addwfc	(sprintf@ap+1)& (0+255),f,b
 30616  0027B8  D000               	goto	l9262
 30617  0027BA                     l9262:
 30618                           
 30619                           ; BSR set to: 0
 30620                           ;doprnt.c: 805: cp = (char *)&c;
 30621  0027BA  0EE2               	movlw	low sprintf@c
 30622  0027BC  0100               	movlb	0	; () banked
 30623  0027BE  6FC9               	movwf	sprintf@cp& (0+255),b
 30624  0027C0  0E00               	movlw	high sprintf@c
 30625  0027C2  0100               	movlb	0	; () banked
 30626  0027C4  6FCA               	movwf	(sprintf@cp+1)& (0+255),b
 30627                           
 30628                           ; BSR set to: 0
 30629                           ;doprnt.c: 806: len = 1;
 30630  0027C6  0E00               	movlw	0
 30631  0027C8  0100               	movlb	0	; () banked
 30632  0027CA  6FCC               	movwf	(sprintf@len+1)& (0+255),b
 30633  0027CC  0E01               	movlw	1
 30634  0027CE  6FCB               	movwf	sprintf@len& (0+255),b
 30635                           
 30636                           ;doprnt.c: 807: goto dostring;
 30637  0027D0  D78B               	goto	l9238
 30638  0027D2                     l9266:
 30639                           
 30640                           ; BSR set to: 0
 30641                           ;doprnt.c: 818: flag |= 0xC0;
 30642  0027D2  0EC0               	movlw	192
 30643  0027D4  0100               	movlb	0	; () banked
 30644  0027D6  13E0               	iorwf	sprintf@flag& (0+255),f,b
 30645                           
 30646                           ; BSR set to: 0
 30647                           ;doprnt.c: 822: }
 30648                           
 30649                           ;doprnt.c: 819: break;
 30650  0027D8  D02D               	goto	l9272
 30651  0027DA                     l9270:
 30652  0027DA  C0B3  FFF6         	movff	sprintf@f,tblptrl
 30653  0027DE  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
 30654  0027E2  0100               	movlb	0	; () banked
 30655  0027E4  4BB3               	infsnz	sprintf@f& (0+255),f,b
 30656  0027E6  2BB4               	incf	(sprintf@f+1)& (0+255),f,b
 30657  0027E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 30658  0027E8  6AF8               	clrf	tblptru,c
 30659  0027EA                     	endif
 30660  0027EA                     	if	0	;tblptru may be non-zero
 30661  0027EA                     	endif
 30662  0027EA  0008               	tblrd		*
 30663  0027EC  CFF5 F0E2          	movff	tablat,sprintf@c
 30664  0027F0  0100               	movlb	0	; () banked
 30665  0027F2  51E2               	movf	sprintf@c& (0+255),w,b
 30666                           
 30667                           ; Switch size 1, requested type "space"
 30668                           ; Number of cases is 10, Range of values is 0 to 120
 30669                           ; switch strategies available:
 30670                           ; Name         Instructions Cycles
 30671                           ; simple_byte           31    16 (average)
 30672                           ;	Chosen strategy is simple_byte
 30673  0027F4  0A00               	xorlw	0	; case 0
 30674  0027F6  B4D8               	btfsc	status,2,c
 30675  0027F8  EF51  F01A         	goto	l9570
 30676  0027FC  0A58               	xorlw	88	; case 88
 30677  0027FE  B4D8               	btfsc	status,2,c
 30678  002800  D72A               	goto	l9222
 30679  002802  0A3B               	xorlw	59	; case 99
 30680  002804  B4D8               	btfsc	status,2,c
 30681  002806  D7CC               	goto	l9258
 30682  002808  0A07               	xorlw	7	; case 100
 30683  00280A  B4D8               	btfsc	status,2,c
 30684  00280C  D013               	goto	l9272
 30685  00280E  0A02               	xorlw	2	; case 102
 30686  002810  B4D8               	btfsc	status,2,c
 30687  002812  D71D               	goto	l9220
 30688  002814  0A0F               	xorlw	15	; case 105
 30689  002816  B4D8               	btfsc	status,2,c
 30690  002818  D00D               	goto	l9272
 30691  00281A  0A05               	xorlw	5	; case 108
 30692  00281C  B4D8               	btfsc	status,2,c
 30693  00281E  D714               	goto	l9218
 30694  002820  0A1F               	xorlw	31	; case 115
 30695  002822  B4D8               	btfsc	status,2,c
 30696  002824  D71B               	goto	l9224
 30697  002826  0A06               	xorlw	6	; case 117
 30698  002828  B4D8               	btfsc	status,2,c
 30699  00282A  D7D3               	goto	l9266
 30700  00282C  0A0D               	xorlw	13	; case 120
 30701  00282E  B4D8               	btfsc	status,2,c
 30702  002830  D712               	goto	l9222
 30703  002832  D7C3               	goto	l9262
 30704  002834                     l9272:
 30705                           
 30706                           ; BSR set to: 0
 30707                           ;doprnt.c: 825: if(flag & (0x700)) {
 30708  002834  0E07               	movlw	7
 30709  002836  0100               	movlb	0	; () banked
 30710  002838  15E1               	andwf	(sprintf@flag+1)& (0+255),w,b
 30711  00283A  B4D8               	btfsc	status,2,c
 30712  00283C  D3ED               	goto	l9450
 30713                           
 30714                           ; BSR set to: 0
 30715                           ;doprnt.c: 829: prec = 6;
 30716  00283E  0E00               	movlw	0
 30717  002840  0100               	movlb	0	; () banked
 30718  002842  6FD0               	movwf	(sprintf@prec+1)& (0+255),b
 30719  002844  0E06               	movlw	6
 30720  002846  6FCF               	movwf	sprintf@prec& (0+255),b
 30721                           
 30722                           ; BSR set to: 0
 30723                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 30724  002848  C0CD  FFD9         	movff	sprintf@ap,fsr2l
 30725  00284C  C0CE  FFDA         	movff	sprintf@ap+1,fsr2h
 30726  002850  CFDE F0DB          	movff	postinc2,sprintf@fval
 30727  002854  CFDE F0DC          	movff	postinc2,sprintf@fval+1
 30728  002858  CFDD F0DD          	movff	postdec2,sprintf@fval+2
 30729                           
 30730                           ; BSR set to: 0
 30731  00285C  0E03               	movlw	3
 30732  00285E  0100               	movlb	0	; () banked
 30733  002860  27CD               	addwf	sprintf@ap& (0+255),f,b
 30734  002862  0E00               	movlw	0
 30735  002864  23CE               	addwfc	(sprintf@ap+1)& (0+255),f,b
 30736                           
 30737                           ; BSR set to: 0
 30738                           ;doprnt.c: 831: if(fval < 0.0) {
 30739  002866  0100               	movlb	0	; () banked
 30740  002868  AFDD               	btfss	(sprintf@fval+2)& (0+255),7,b
 30741  00286A  D012               	goto	l9286
 30742                           
 30743                           ; BSR set to: 0
 30744                           ;doprnt.c: 832: fval = -fval;
 30745  00286C  C0DB  F063         	movff	sprintf@fval,___ftneg@f1
 30746  002870  C0DC  F064         	movff	sprintf@fval+1,___ftneg@f1+1
 30747  002874  C0DD  F065         	movff	sprintf@fval+2,___ftneg@f1+2
 30748  002878  ECC2  F050         	call	___ftneg	;wreg free
 30749  00287C  C063  F0DB         	movff	?___ftneg,sprintf@fval
 30750  002880  C064  F0DC         	movff	?___ftneg+1,sprintf@fval+1
 30751  002884  C065  F0DD         	movff	?___ftneg+2,sprintf@fval+2
 30752                           
 30753                           ;doprnt.c: 833: flag |= 0x03;
 30754  002888  0E03               	movlw	3
 30755  00288A  0100               	movlb	0	; () banked
 30756  00288C  13E0               	iorwf	sprintf@flag& (0+255),f,b
 30757  00288E  D000               	goto	l9286
 30758  002890                     l9286:
 30759                           
 30760                           ; BSR set to: 0
 30761                           ;doprnt.c: 834: }
 30762                           ;doprnt.c: 835: exp = 0;
 30763  002890  0E00               	movlw	0
 30764  002892  0100               	movlb	0	; () banked
 30765  002894  6FD6               	movwf	(sprintf@exp+1)& (0+255),b
 30766  002896  0E00               	movlw	0
 30767  002898  6FD5               	movwf	sprintf@exp& (0+255),b
 30768                           
 30769                           ; BSR set to: 0
 30770                           ;doprnt.c: 836: if( fval!=0) {
 30771  00289A  0100               	movlb	0	; () banked
 30772  00289C  51DB               	movf	sprintf@fval& (0+255),w,b
 30773  00289E  0100               	movlb	0	; () banked
 30774  0028A0  11DC               	iorwf	(sprintf@fval+1)& (0+255),w,b
 30775  0028A2  0100               	movlb	0	; () banked
 30776  0028A4  11DD               	iorwf	(sprintf@fval+2)& (0+255),w,b
 30777  0028A6  B4D8               	btfsc	status,2,c
 30778  0028A8  D09D               	goto	l9314
 30779                           
 30780                           ; BSR set to: 0
 30781                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 30782  0028AA  0E82               	movlw	130
 30783  0028AC  0100               	movlb	0	; () banked
 30784  0028AE  6FBF               	movwf	??_sprintf& (0+255),b
 30785  0028B0  0EFF               	movlw	255
 30786  0028B2  0100               	movlb	0	; () banked
 30787  0028B4  6FC0               	movwf	(??_sprintf+1)& (0+255),b
 30788  0028B6  C0DB  F0C1         	movff	sprintf@fval,??_sprintf+2
 30789  0028BA  C0DC  F0C2         	movff	sprintf@fval+1,??_sprintf+3
 30790  0028BE  C0DD  F0C3         	movff	sprintf@fval+2,??_sprintf+4
 30791  0028C2  C0DE  F0C4         	movff	sprintf@fval+3,??_sprintf+5
 30792  0028C6  0E10               	movlw	16
 30793  0028C8  D006               	goto	u9300
 30794  0028CA                     u9305:
 30795  0028CA  0100               	movlb	0	; () banked
 30796  0028CC  90D8               	bcf	status,0,c
 30797  0028CE  33C4               	rrcf	(??_sprintf+5)& (0+255),f,b
 30798  0028D0  33C3               	rrcf	(??_sprintf+4)& (0+255),f,b
 30799  0028D2  33C2               	rrcf	(??_sprintf+3)& (0+255),f,b
 30800  0028D4  33C1               	rrcf	(??_sprintf+2)& (0+255),f,b
 30801  0028D6                     u9300:
 30802  0028D6  2EE8               	decfsz	wreg,f,c
 30803  0028D8  D7F8               	goto	u9305
 30804  0028DA  0100               	movlb	0	; () banked
 30805  0028DC  51C1               	movf	(??_sprintf+2)& (0+255),w,b
 30806  0028DE  0100               	movlb	0	; () banked
 30807  0028E0  25BF               	addwf	??_sprintf& (0+255),w,b
 30808  0028E2  0100               	movlb	0	; () banked
 30809  0028E4  6FD5               	movwf	sprintf@exp& (0+255),b
 30810  0028E6  0E00               	movlw	0
 30811  0028E8  0100               	movlb	0	; () banked
 30812  0028EA  21C0               	addwfc	(??_sprintf+1)& (0+255),w,b
 30813  0028EC  0100               	movlb	0	; () banked
 30814  0028EE  6FD6               	movwf	(sprintf@exp+1)& (0+255),b
 30815                           
 30816                           ; BSR set to: 0
 30817                           ;doprnt.c: 838: exp--;
 30818  0028F0  0100               	movlb	0	; () banked
 30819  0028F2  07D5               	decf	sprintf@exp& (0+255),f,b
 30820  0028F4  A0D8               	btfss	status,0,c
 30821  0028F6  07D6               	decf	(sprintf@exp+1)& (0+255),f,b
 30822                           
 30823                           ; BSR set to: 0
 30824                           ;doprnt.c: 839: exp *= 3;
 30825  0028F8  C0D5  F071         	movff	sprintf@exp,___wmul@multiplier
 30826  0028FC  C0D6  F072         	movff	sprintf@exp+1,___wmul@multiplier+1
 30827  002900  0E00               	movlw	0
 30828  002902  0100               	movlb	0	; () banked
 30829  002904  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 30830  002906  0E03               	movlw	3
 30831  002908  6F73               	movwf	___wmul@multiplicand& (0+255),b
 30832  00290A  EC3E  F050         	call	___wmul	;wreg free
 30833  00290E  C071  F0D5         	movff	?___wmul,sprintf@exp
 30834  002912  C072  F0D6         	movff	?___wmul+1,sprintf@exp+1
 30835                           
 30836                           ;doprnt.c: 840: exp /= 10;
 30837  002916  C0D5  F069         	movff	sprintf@exp,___awdiv@dividend
 30838  00291A  C0D6  F06A         	movff	sprintf@exp+1,___awdiv@dividend+1
 30839  00291E  0E00               	movlw	0
 30840  002920  0100               	movlb	0	; () banked
 30841  002922  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
 30842  002924  0E0A               	movlw	10
 30843  002926  6F6B               	movwf	___awdiv@divisor& (0+255),b
 30844  002928  EC79  F046         	call	___awdiv	;wreg free
 30845  00292C  C069  F0D5         	movff	?___awdiv,sprintf@exp
 30846  002930  C06A  F0D6         	movff	?___awdiv+1,sprintf@exp+1
 30847                           
 30848                           ;doprnt.c: 841: if(exp < 0)
 30849  002934  0100               	movlb	0	; () banked
 30850  002936  AFD6               	btfss	(sprintf@exp+1)& (0+255),7,b
 30851  002938  D005               	goto	l9302
 30852                           
 30853                           ; BSR set to: 0
 30854                           ;doprnt.c: 842: exp--;
 30855  00293A  0100               	movlb	0	; () banked
 30856  00293C  07D5               	decf	sprintf@exp& (0+255),f,b
 30857  00293E  A0D8               	btfss	status,0,c
 30858  002940  07D6               	decf	(sprintf@exp+1)& (0+255),f,b
 30859  002942  D000               	goto	l9302
 30860  002944                     l9302:
 30861                           
 30862                           ; BSR set to: 0
 30863                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 30864  002944  0100               	movlb	0	; () banked
 30865  002946  51D5               	movf	sprintf@exp& (0+255),w,b
 30866  002948  0800               	sublw	0
 30867  00294A  ECEB  F026         	call	_scale
 30868  00294E  C08C  F0D1         	movff	?_scale,sprintf@tmpval
 30869  002952  C08D  F0D2         	movff	?_scale+1,sprintf@tmpval+1
 30870  002956  C08E  F0D3         	movff	?_scale+2,sprintf@tmpval+2
 30871                           
 30872                           ;doprnt.c: 847: tmpval.integ *= fval;
 30873  00295A  C0D1  F07D         	movff	sprintf@tmpval,___ftmul@f1
 30874  00295E  C0D2  F07E         	movff	sprintf@tmpval+1,___ftmul@f1+1
 30875  002962  C0D3  F07F         	movff	sprintf@tmpval+2,___ftmul@f1+2
 30876  002966  C0DB  F080         	movff	sprintf@fval,___ftmul@f2
 30877  00296A  C0DC  F081         	movff	sprintf@fval+1,___ftmul@f2+1
 30878  00296E  C0DD  F082         	movff	sprintf@fval+2,___ftmul@f2+2
 30879  002972  ECC4  F03C         	call	___ftmul	;wreg free
 30880  002976  C07D  F0D1         	movff	?___ftmul,sprintf@tmpval
 30881  00297A  C07E  F0D2         	movff	?___ftmul+1,sprintf@tmpval+1
 30882  00297E  C07F  F0D3         	movff	?___ftmul+2,sprintf@tmpval+2
 30883                           
 30884                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 30885  002982  C0D1  F063         	movff	sprintf@tmpval,___ftge@ff1
 30886  002986  C0D2  F064         	movff	sprintf@tmpval+1,___ftge@ff1+1
 30887  00298A  C0D3  F065         	movff	sprintf@tmpval+2,___ftge@ff1+2
 30888  00298E  0E00               	movlw	0
 30889  002990  0100               	movlb	0	; () banked
 30890  002992  6F66               	movwf	___ftge@ff2& (0+255),b
 30891  002994  0E80               	movlw	128
 30892  002996  0100               	movlb	0	; () banked
 30893  002998  6F67               	movwf	(___ftge@ff2+1)& (0+255),b
 30894  00299A  0E3F               	movlw	63
 30895  00299C  0100               	movlb	0	; () banked
 30896  00299E  6F68               	movwf	(___ftge@ff2+2)& (0+255),b
 30897  0029A0  ECE1  F046         	call	___ftge	;wreg free
 30898  0029A4  0100               	movlb	0	; () banked
 30899  0029A6  B0D8               	btfsc	status,0,c
 30900  0029A8  D005               	goto	l9310
 30901                           
 30902                           ; BSR set to: 0
 30903                           ;doprnt.c: 849: exp--;
 30904  0029AA  0100               	movlb	0	; () banked
 30905  0029AC  07D5               	decf	sprintf@exp& (0+255),f,b
 30906  0029AE  A0D8               	btfss	status,0,c
 30907  0029B0  07D6               	decf	(sprintf@exp+1)& (0+255),f,b
 30908  0029B2  D018               	goto	l9314
 30909  0029B4                     l9310:
 30910                           
 30911                           ; BSR set to: 0
 30912                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 30913  0029B4  C0D1  F063         	movff	sprintf@tmpval,___ftge@ff1
 30914  0029B8  C0D2  F064         	movff	sprintf@tmpval+1,___ftge@ff1+1
 30915  0029BC  C0D3  F065         	movff	sprintf@tmpval+2,___ftge@ff1+2
 30916  0029C0  0E00               	movlw	0
 30917  0029C2  0100               	movlb	0	; () banked
 30918  0029C4  6F66               	movwf	___ftge@ff2& (0+255),b
 30919  0029C6  0E20               	movlw	32
 30920  0029C8  0100               	movlb	0	; () banked
 30921  0029CA  6F67               	movwf	(___ftge@ff2+1)& (0+255),b
 30922  0029CC  0E41               	movlw	65
 30923  0029CE  0100               	movlb	0	; () banked
 30924  0029D0  6F68               	movwf	(___ftge@ff2+2)& (0+255),b
 30925  0029D2  ECE1  F046         	call	___ftge	;wreg free
 30926  0029D6  0100               	movlb	0	; () banked
 30927  0029D8  A0D8               	btfss	status,0,c
 30928  0029DA  D004               	goto	l9314
 30929                           
 30930                           ; BSR set to: 0
 30931                           ;doprnt.c: 851: exp++;
 30932  0029DC  0100               	movlb	0	; () banked
 30933  0029DE  4BD5               	infsnz	sprintf@exp& (0+255),f,b
 30934  0029E0  2BD6               	incf	(sprintf@exp+1)& (0+255),f,b
 30935                           
 30936                           ; BSR set to: 0
 30937                           
 30938                           ; BSR set to: 0
 30939  0029E2  D000               	goto	l9314
 30940  0029E4                     l9314:
 30941                           
 30942                           ; BSR set to: 0
 30943                           ;doprnt.c: 852: }
 30944                           ;doprnt.c: 1112: if(prec <= 12)
 30945  0029E4  0100               	movlb	0	; () banked
 30946  0029E6  BFD0               	btfsc	(sprintf@prec+1)& (0+255),7,b
 30947  0029E8  D008               	goto	l9316
 30948  0029EA  0100               	movlb	0	; () banked
 30949  0029EC  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
 30950  0029EE  E11E               	bnz	l9318
 30951  0029F0  0E0D               	movlw	13
 30952  0029F2  0100               	movlb	0	; () banked
 30953  0029F4  5DCF               	subwf	sprintf@prec& (0+255),w,b
 30954  0029F6  B0D8               	btfsc	status,0,c
 30955  0029F8  D019               	goto	l9318
 30956  0029FA                     l9316:
 30957                           
 30958                           ; BSR set to: 0
 30959                           ;doprnt.c: 1113: fval += fround(prec);
 30960  0029FA  C0DB  F096         	movff	sprintf@fval,___ftadd@f1
 30961  0029FE  C0DC  F097         	movff	sprintf@fval+1,___ftadd@f1+1
 30962  002A02  C0DD  F098         	movff	sprintf@fval+2,___ftadd@f1+2
 30963  002A06  0100               	movlb	0	; () banked
 30964  002A08  51CF               	movf	sprintf@prec& (0+255),w,b
 30965  002A0A  ECEE  F031         	call	_fround
 30966  002A0E  C08C  F099         	movff	?_fround,___ftadd@f2
 30967  002A12  C08D  F09A         	movff	?_fround+1,___ftadd@f2+1
 30968  002A16  C08E  F09B         	movff	?_fround+2,___ftadd@f2+2
 30969  002A1A  EC5A  F033         	call	___ftadd	;wreg free
 30970  002A1E  C096  F0DB         	movff	?___ftadd,sprintf@fval
 30971  002A22  C097  F0DC         	movff	?___ftadd+1,sprintf@fval+1
 30972  002A26  C098  F0DD         	movff	?___ftadd+2,sprintf@fval+2
 30973  002A2A  D000               	goto	l9318
 30974  002A2C                     l9318:
 30975                           
 30976                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 30977  002A2C  0100               	movlb	0	; () banked
 30978  002A2E  BFD6               	btfsc	(sprintf@exp+1)& (0+255),7,b
 30979  002A30  D008               	goto	l9320
 30980  002A32  0100               	movlb	0	; () banked
 30981  002A34  51D6               	movf	(sprintf@exp+1)& (0+255),w,b
 30982  002A36  E12C               	bnz	l9326
 30983  002A38  0E0A               	movlw	10
 30984  002A3A  0100               	movlb	0	; () banked
 30985  002A3C  5DD5               	subwf	sprintf@exp& (0+255),w,b
 30986  002A3E  B0D8               	btfsc	status,0,c
 30987  002A40  D027               	goto	l9326
 30988  002A42                     l9320:
 30989                           
 30990                           ; BSR set to: 0
 30991  002A42  0100               	movlb	0	; () banked
 30992  002A44  51DB               	movf	sprintf@fval& (0+255),w,b
 30993  002A46  0100               	movlb	0	; () banked
 30994  002A48  11DC               	iorwf	(sprintf@fval+1)& (0+255),w,b
 30995  002A4A  0100               	movlb	0	; () banked
 30996  002A4C  11DD               	iorwf	(sprintf@fval+2)& (0+255),w,b
 30997  002A4E  B4D8               	btfsc	status,2,c
 30998  002A50  D07F               	goto	l9340
 30999                           
 31000                           ; BSR set to: 0
 31001  002A52  C0DB  F0A2         	movff	sprintf@fval,___fttol@f1
 31002  002A56  C0DC  F0A3         	movff	sprintf@fval+1,___fttol@f1+1
 31003  002A5A  C0DD  F0A4         	movff	sprintf@fval+2,___fttol@f1+2
 31004  002A5E  ECD1  F03E         	call	___fttol	;wreg free
 31005  002A62  0100               	movlb	0	; () banked
 31006  002A64  51A2               	movf	?___fttol& (0+255),w,b
 31007  002A66  0100               	movlb	0	; () banked
 31008  002A68  11A3               	iorwf	(?___fttol+1)& (0+255),w,b
 31009  002A6A  0100               	movlb	0	; () banked
 31010  002A6C  11A4               	iorwf	(?___fttol+2)& (0+255),w,b
 31011  002A6E  0100               	movlb	0	; () banked
 31012  002A70  11A5               	iorwf	(?___fttol+3)& (0+255),w,b
 31013  002A72  A4D8               	btfss	status,2,c
 31014  002A74  D06D               	goto	l9340
 31015                           
 31016                           ; BSR set to: 0
 31017  002A76  0100               	movlb	0	; () banked
 31018  002A78  BFD6               	btfsc	(sprintf@exp+1)& (0+255),7,b
 31019  002A7A  D06A               	goto	l9340
 31020  002A7C  0100               	movlb	0	; () banked
 31021  002A7E  51D6               	movf	(sprintf@exp+1)& (0+255),w,b
 31022  002A80  E107               	bnz	l9326
 31023  002A82  0E02               	movlw	2
 31024  002A84  0100               	movlb	0	; () banked
 31025  002A86  5DD5               	subwf	sprintf@exp& (0+255),w,b
 31026  002A88  B0D8               	btfsc	status,0,c
 31027  002A8A  D002               	goto	l9326
 31028  002A8C  D061               	goto	l9340
 31029  002A8E  D000               	goto	l9326
 31030  002A90                     l9326:
 31031                           
 31032                           ; BSR set to: 0
 31033                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 31034  002A90  C0D1  F063         	movff	sprintf@tmpval,___ftge@ff1
 31035  002A94  C0D2  F064         	movff	sprintf@tmpval+1,___ftge@ff1+1
 31036  002A98  C0D3  F065         	movff	sprintf@tmpval+2,___ftge@ff1+2
 31037  002A9C  0E70               	movlw	112
 31038  002A9E  0100               	movlb	0	; () banked
 31039  002AA0  6F66               	movwf	___ftge@ff2& (0+255),b
 31040  002AA2  0E89               	movlw	137
 31041  002AA4  0100               	movlb	0	; () banked
 31042  002AA6  6F67               	movwf	(___ftge@ff2+1)& (0+255),b
 31043  002AA8  0E40               	movlw	64
 31044  002AAA  0100               	movlb	0	; () banked
 31045  002AAC  6F68               	movwf	(___ftge@ff2+2)& (0+255),b
 31046  002AAE  ECE1  F046         	call	___ftge	;wreg free
 31047  002AB2  0100               	movlb	0	; () banked
 31048  002AB4  B0D8               	btfsc	status,0,c
 31049  002AB6  D003               	goto	l9330
 31050                           
 31051                           ; BSR set to: 0
 31052                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 31053  002AB8  0100               	movlb	0	; () banked
 31054  002ABA  0EF7               	movlw	247
 31055  002ABC  D002               	goto	L17
 31056  002ABE                     l9330:
 31057                           
 31058                           ; BSR set to: 0
 31059                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 31060  002ABE  0100               	movlb	0	; () banked
 31061  002AC0  0EF8               	movlw	248
 31062  002AC2                     L17:
 31063  002AC2  27D5               	addwf	sprintf@exp& (0+255),f,b
 31064  002AC4  0EFF               	movlw	255
 31065  002AC6  23D6               	addwfc	(sprintf@exp+1)& (0+255),f,b
 31066  002AC8  D000               	goto	l9332
 31067  002ACA                     l9332:
 31068                           
 31069                           ; BSR set to: 0
 31070                           ;doprnt.c: 1124: }
 31071                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 31072  002ACA  0100               	movlb	0	; () banked
 31073  002ACC  51D5               	movf	sprintf@exp& (0+255),w,b
 31074  002ACE  ECEB  F026         	call	_scale
 31075  002AD2  C08C  F0D1         	movff	?_scale,sprintf@tmpval
 31076  002AD6  C08D  F0D2         	movff	?_scale+1,sprintf@tmpval+1
 31077  002ADA  C08E  F0D3         	movff	?_scale+2,sprintf@tmpval+2
 31078                           
 31079                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 31080  002ADE  D017               	goto	l9336
 31081  002AE0  C0DB  F063         	movff	sprintf@fval,__div_to_l_@f1
 31082  002AE4  C0DC  F064         	movff	sprintf@fval+1,__div_to_l_@f1+1
 31083  002AE8  C0DD  F065         	movff	sprintf@fval+2,__div_to_l_@f1+2
 31084  002AEC  C0D1  F066         	movff	sprintf@tmpval,__div_to_l_@f2
 31085  002AF0  C0D2  F067         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
 31086  002AF4  C0D3  F068         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
 31087  002AF8  EC7E  F03A         	call	__div_to_l_	;wreg free
 31088  002AFC  C063  F0D7         	movff	?__div_to_l_,sprintf@val
 31089  002B00  C064  F0D8         	movff	?__div_to_l_+1,sprintf@val+1
 31090  002B04  C065  F0D9         	movff	?__div_to_l_+2,sprintf@val+2
 31091  002B08  C066  F0DA         	movff	?__div_to_l_+3,sprintf@val+3
 31092  002B0C  D017               	goto	l9338
 31093  002B0E                     l9336:
 31094  002B0E  C0DB  F063         	movff	sprintf@fval,__tdiv_to_l_@f1
 31095  002B12  C0DC  F064         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 31096  002B16  C0DD  F065         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 31097  002B1A  C0D1  F066         	movff	sprintf@tmpval,__tdiv_to_l_@f2
 31098  002B1E  C0D2  F067         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
 31099  002B22  C0D3  F068         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
 31100  002B26  ECAB  F039         	call	__tdiv_to_l_	;wreg free
 31101  002B2A  C063  F0D7         	movff	?__tdiv_to_l_,sprintf@val
 31102  002B2E  C064  F0D8         	movff	?__tdiv_to_l_+1,sprintf@val+1
 31103  002B32  C065  F0D9         	movff	?__tdiv_to_l_+2,sprintf@val+2
 31104  002B36  C066  F0DA         	movff	?__tdiv_to_l_+3,sprintf@val+3
 31105  002B3A  D000               	goto	l9338
 31106  002B3C                     l9338:
 31107                           
 31108                           ;doprnt.c: 1129: fval = 0.0;
 31109  002B3C  0E00               	movlw	0
 31110  002B3E  0100               	movlb	0	; () banked
 31111  002B40  6FDB               	movwf	sprintf@fval& (0+255),b
 31112  002B42  0E00               	movlw	0
 31113  002B44  0100               	movlb	0	; () banked
 31114  002B46  6FDC               	movwf	(sprintf@fval+1)& (0+255),b
 31115  002B48  0E00               	movlw	0
 31116  002B4A  0100               	movlb	0	; () banked
 31117  002B4C  6FDD               	movwf	(sprintf@fval+2)& (0+255),b
 31118                           
 31119                           ;doprnt.c: 1130: } else {
 31120  002B4E  D034               	goto	l9344
 31121  002B50                     l9340:
 31122                           
 31123                           ; BSR set to: 0
 31124                           ;doprnt.c: 1131: val = (unsigned long)fval;
 31125  002B50  C0DB  F0A2         	movff	sprintf@fval,___fttol@f1
 31126  002B54  C0DC  F0A3         	movff	sprintf@fval+1,___fttol@f1+1
 31127  002B58  C0DD  F0A4         	movff	sprintf@fval+2,___fttol@f1+2
 31128  002B5C  ECD1  F03E         	call	___fttol	;wreg free
 31129  002B60  C0A2  F0D7         	movff	?___fttol,sprintf@val
 31130  002B64  C0A3  F0D8         	movff	?___fttol+1,sprintf@val+1
 31131  002B68  C0A4  F0D9         	movff	?___fttol+2,sprintf@val+2
 31132  002B6C  C0A5  F0DA         	movff	?___fttol+3,sprintf@val+3
 31133                           
 31134                           ;doprnt.c: 1132: fval -= (double)val;
 31135  002B70  C0DB  F0A2         	movff	sprintf@fval,___ftsub@f1
 31136  002B74  C0DC  F0A3         	movff	sprintf@fval+1,___ftsub@f1+1
 31137  002B78  C0DD  F0A4         	movff	sprintf@fval+2,___ftsub@f1+2
 31138  002B7C  C0D7  F06B         	movff	sprintf@val,___lltoft@c
 31139  002B80  C0D8  F06C         	movff	sprintf@val+1,___lltoft@c+1
 31140  002B84  C0D9  F06D         	movff	sprintf@val+2,___lltoft@c+2
 31141  002B88  C0DA  F06E         	movff	sprintf@val+3,___lltoft@c+3
 31142  002B8C  EC86  F04C         	call	___lltoft	;wreg free
 31143  002B90  C06B  F0A5         	movff	?___lltoft,___ftsub@f2
 31144  002B94  C06C  F0A6         	movff	?___lltoft+1,___ftsub@f2+1
 31145  002B98  C06D  F0A7         	movff	?___lltoft+2,___ftsub@f2+2
 31146  002B9C  ECF5  F04E         	call	___ftsub	;wreg free
 31147  002BA0  C0A2  F0DB         	movff	?___ftsub,sprintf@fval
 31148  002BA4  C0A3  F0DC         	movff	?___ftsub+1,sprintf@fval+1
 31149  002BA8  C0A4  F0DD         	movff	?___ftsub+2,sprintf@fval+2
 31150                           
 31151                           ;doprnt.c: 1133: exp = 0;
 31152  002BAC  0E00               	movlw	0
 31153  002BAE  0100               	movlb	0	; () banked
 31154  002BB0  6FD6               	movwf	(sprintf@exp+1)& (0+255),b
 31155  002BB2  0E00               	movlw	0
 31156  002BB4  6FD5               	movwf	sprintf@exp& (0+255),b
 31157  002BB6  D000               	goto	l9344
 31158  002BB8                     l9344:
 31159                           
 31160                           ; BSR set to: 0
 31161                           ;doprnt.c: 1134: }
 31162                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 31163  002BB8  0E01               	movlw	1
 31164  002BBA  0100               	movlb	0	; () banked
 31165  002BBC  6FE2               	movwf	sprintf@c& (0+255),b
 31166  002BBE                     l9346:
 31167                           
 31168                           ; BSR set to: 0
 31169  002BBE  0E0A               	movlw	10
 31170  002BC0  0100               	movlb	0	; () banked
 31171  002BC2  19E2               	xorwf	sprintf@c& (0+255),w,b
 31172  002BC4  B4D8               	btfsc	status,2,c
 31173  002BC6  D025               	goto	l9358
 31174  002BC8  D001               	goto	l9350
 31175                           
 31176                           ; BSR set to: 0
 31177  002BCA  D023               	goto	l9358
 31178  002BCC                     l9350:
 31179                           
 31180                           ; BSR set to: 0
 31181                           ;doprnt.c: 1137: if(val < dpowers[c])
 31182  002BCC  0100               	movlb	0	; () banked
 31183  002BCE  51E2               	movf	sprintf@c& (0+255),w,b
 31184  002BD0  0D04               	mullw	4
 31185  002BD2  0E77               	movlw	low _dpowers
 31186  002BD4  24F3               	addwf	prodl,w,c
 31187  002BD6  6EF6               	movwf	tblptrl,c
 31188  002BD8  0EEF               	movlw	high _dpowers
 31189  002BDA  20F4               	addwfc	prodh,w,c
 31190  002BDC  6EF7               	movwf	tblptrh,c
 31191  002BDE                     	if	1	;There are 3 active tblptr bytes
 31192  002BDE  6AF8               	clrf	tblptru,c
 31193  002BE0  0E00               	movlw	low (__mediumconst shr (0+16))
 31194  002BE2  22F8               	addwfc	tblptru,f,c
 31195  002BE4                     	endif
 31196  002BE4  0009               	tblrd		*+
 31197  002BE6  50F5               	movf	tablat,w,c
 31198  002BE8  0100               	movlb	0	; () banked
 31199  002BEA  5DD7               	subwf	sprintf@val& (0+255),w,b
 31200  002BEC  0009               	tblrd		*+
 31201  002BEE  50F5               	movf	tablat,w,c
 31202  002BF0  0100               	movlb	0	; () banked
 31203  002BF2  59D8               	subwfb	(sprintf@val+1)& (0+255),w,b
 31204  002BF4  0009               	tblrd		*+
 31205  002BF6  50F5               	movf	tablat,w,c
 31206  002BF8  0100               	movlb	0	; () banked
 31207  002BFA  59D9               	subwfb	(sprintf@val+2)& (0+255),w,b
 31208  002BFC  0009               	tblrd		*+
 31209  002BFE  50F5               	movf	tablat,w,c
 31210  002C00  0100               	movlb	0	; () banked
 31211  002C02  59DA               	subwfb	(sprintf@val+3)& (0+255),w,b
 31212  002C04  A0D8               	btfss	status,0,c
 31213  002C06  D005               	goto	l9358
 31214  002C08  D001               	goto	l9354
 31215                           
 31216                           ; BSR set to: 0
 31217                           ;doprnt.c: 1138: break;
 31218  002C0A  D003               	goto	l9358
 31219  002C0C                     l9354:
 31220                           
 31221                           ; BSR set to: 0
 31222  002C0C  0100               	movlb	0	; () banked
 31223  002C0E  2BE2               	incf	sprintf@c& (0+255),f,b
 31224  002C10  D7D6               	goto	l9346
 31225  002C12                     l9358:
 31226                           
 31227                           ; BSR set to: 0
 31228                           ;doprnt.c: 1142: width -= prec + c + exp;
 31229  002C12  C0E2  F0BF         	movff	sprintf@c,??_sprintf
 31230  002C16  0100               	movlb	0	; () banked
 31231  002C18  6BC0               	clrf	(??_sprintf+1)& (0+255),b
 31232  002C1A  BFBF               	btfsc	??_sprintf& (0+255),7,b
 31233  002C1C  07C0               	decf	(??_sprintf+1)& (0+255),f,b
 31234  002C1E  0100               	movlb	0	; () banked
 31235  002C20  51CF               	movf	sprintf@prec& (0+255),w,b
 31236  002C22  0100               	movlb	0	; () banked
 31237  002C24  27BF               	addwf	??_sprintf& (0+255),f,b
 31238  002C26  0100               	movlb	0	; () banked
 31239  002C28  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
 31240  002C2A  0100               	movlb	0	; () banked
 31241  002C2C  23C0               	addwfc	(??_sprintf+1)& (0+255),f,b
 31242  002C2E  0100               	movlb	0	; () banked
 31243  002C30  51D5               	movf	sprintf@exp& (0+255),w,b
 31244  002C32  0100               	movlb	0	; () banked
 31245  002C34  27BF               	addwf	??_sprintf& (0+255),f,b
 31246  002C36  0100               	movlb	0	; () banked
 31247  002C38  51D6               	movf	(sprintf@exp+1)& (0+255),w,b
 31248  002C3A  0100               	movlb	0	; () banked
 31249  002C3C  23C0               	addwfc	(??_sprintf+1)& (0+255),f,b
 31250  002C3E  0100               	movlb	0	; () banked
 31251  002C40  51BF               	movf	??_sprintf& (0+255),w,b
 31252  002C42  0100               	movlb	0	; () banked
 31253  002C44  5FDE               	subwf	sprintf@width& (0+255),f,b
 31254  002C46  0100               	movlb	0	; () banked
 31255  002C48  51C0               	movf	(??_sprintf+1)& (0+255),w,b
 31256  002C4A  0100               	movlb	0	; () banked
 31257  002C4C  5BDF               	subwfb	(sprintf@width+1)& (0+255),f,b
 31258                           
 31259                           ;doprnt.c: 1143: if(
 31260                           ;doprnt.c: 1147: prec)
 31261  002C4E  0100               	movlb	0	; () banked
 31262  002C50  51CF               	movf	sprintf@prec& (0+255),w,b
 31263  002C52  0100               	movlb	0	; () banked
 31264  002C54  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
 31265  002C56  B4D8               	btfsc	status,2,c
 31266  002C58  D005               	goto	l9362
 31267                           
 31268                           ; BSR set to: 0
 31269                           ;doprnt.c: 1148: width--;
 31270  002C5A  0100               	movlb	0	; () banked
 31271  002C5C  07DE               	decf	sprintf@width& (0+255),f,b
 31272  002C5E  A0D8               	btfss	status,0,c
 31273  002C60  07DF               	decf	(sprintf@width+1)& (0+255),f,b
 31274  002C62  D000               	goto	l9362
 31275  002C64                     l9362:
 31276                           
 31277                           ; BSR set to: 0
 31278                           ;doprnt.c: 1149: if(flag & 0x03)
 31279  002C64  0E03               	movlw	3
 31280  002C66  0100               	movlb	0	; () banked
 31281  002C68  15E0               	andwf	sprintf@flag& (0+255),w,b
 31282  002C6A  0100               	movlb	0	; () banked
 31283  002C6C  6FBF               	movwf	??_sprintf& (0+255),b
 31284  002C6E  0E00               	movlw	0
 31285  002C70  0100               	movlb	0	; () banked
 31286  002C72  15E1               	andwf	(sprintf@flag+1)& (0+255),w,b
 31287  002C74  0100               	movlb	0	; () banked
 31288  002C76  6FC0               	movwf	(??_sprintf+1)& (0+255),b
 31289  002C78  0100               	movlb	0	; () banked
 31290  002C7A  51BF               	movf	??_sprintf& (0+255),w,b
 31291  002C7C  0100               	movlb	0	; () banked
 31292  002C7E  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
 31293  002C80  B4D8               	btfsc	status,2,c
 31294  002C82  D005               	goto	l9366
 31295                           
 31296                           ; BSR set to: 0
 31297                           ;doprnt.c: 1150: width--;
 31298  002C84  0100               	movlb	0	; () banked
 31299  002C86  07DE               	decf	sprintf@width& (0+255),f,b
 31300  002C88  A0D8               	btfss	status,0,c
 31301  002C8A  07DF               	decf	(sprintf@width+1)& (0+255),f,b
 31302  002C8C  D000               	goto	l9366
 31303  002C8E                     l9366:
 31304                           
 31305                           ; BSR set to: 0
 31306                           ;doprnt.c: 1153: if(flag & 0x04) {
 31307  002C8E  0100               	movlb	0	; () banked
 31308  002C90  A5E0               	btfss	sprintf@flag& (0+255),2,b
 31309  002C92  D043               	goto	l9388
 31310                           
 31311                           ; BSR set to: 0
 31312                           ;doprnt.c: 1157: if(flag & 0x03)
 31313  002C94  0E03               	movlw	3
 31314  002C96  0100               	movlb	0	; () banked
 31315  002C98  15E0               	andwf	sprintf@flag& (0+255),w,b
 31316  002C9A  0100               	movlb	0	; () banked
 31317  002C9C  6FBF               	movwf	??_sprintf& (0+255),b
 31318  002C9E  0E00               	movlw	0
 31319  002CA0  0100               	movlb	0	; () banked
 31320  002CA2  15E1               	andwf	(sprintf@flag+1)& (0+255),w,b
 31321  002CA4  0100               	movlb	0	; () banked
 31322  002CA6  6FC0               	movwf	(??_sprintf+1)& (0+255),b
 31323  002CA8  0100               	movlb	0	; () banked
 31324  002CAA  51BF               	movf	??_sprintf& (0+255),w,b
 31325  002CAC  0100               	movlb	0	; () banked
 31326  002CAE  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
 31327  002CB0  B4D8               	btfsc	status,2,c
 31328  002CB2  D018               	goto	l9380
 31329                           
 31330                           ; BSR set to: 0
 31331                           ;doprnt.c: 1159: ((*sp++ = ('-')));
 31332  002CB4  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 31333  002CB8  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 31334  002CBC  0E2D               	movlw	45
 31335  002CBE  6EDF               	movwf	indf2,c
 31336                           
 31337                           ; BSR set to: 0
 31338  002CC0  0100               	movlb	0	; () banked
 31339  002CC2  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 31340  002CC4  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 31341                           
 31342                           ; BSR set to: 0
 31343                           ;doprnt.c: 1168: while(width > 0) {
 31344  002CC6  D00E               	goto	l9380
 31345  002CC8                     l9374:
 31346                           
 31347                           ; BSR set to: 0
 31348                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 31349  002CC8  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 31350  002CCC  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 31351  002CD0  0E30               	movlw	48
 31352  002CD2  6EDF               	movwf	indf2,c
 31353                           
 31354                           ; BSR set to: 0
 31355  002CD4  0100               	movlb	0	; () banked
 31356  002CD6  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 31357  002CD8  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 31358                           
 31359                           ; BSR set to: 0
 31360                           ;doprnt.c: 1170: width--;
 31361  002CDA  0100               	movlb	0	; () banked
 31362  002CDC  07DE               	decf	sprintf@width& (0+255),f,b
 31363  002CDE  A0D8               	btfss	status,0,c
 31364  002CE0  07DF               	decf	(sprintf@width+1)& (0+255),f,b
 31365  002CE2  D000               	goto	l9380
 31366  002CE4                     l9380:
 31367                           
 31368                           ; BSR set to: 0
 31369  002CE4  0100               	movlb	0	; () banked
 31370  002CE6  BFDF               	btfsc	(sprintf@width+1)& (0+255),7,b
 31371  002CE8  D08A               	goto	l9404
 31372  002CEA  0100               	movlb	0	; () banked
 31373  002CEC  51DF               	movf	(sprintf@width+1)& (0+255),w,b
 31374  002CEE  E1EC               	bnz	l9374
 31375  002CF0  0100               	movlb	0	; () banked
 31376  002CF2  05DE               	decf	sprintf@width& (0+255),w,b
 31377  002CF4  A0D8               	btfss	status,0,c
 31378  002CF6  D083               	goto	l9404
 31379  002CF8  D7E7               	goto	l9374
 31380                           
 31381                           ; BSR set to: 0
 31382                           ;doprnt.c: 1171: }
 31383                           ;doprnt.c: 1173: } else
 31384  002CFA  D081               	goto	l9404
 31385                           
 31386                           ; BSR set to: 0
 31387                           ;doprnt.c: 1175: {
 31388                           ;doprnt.c: 1180: while(width > 0) {
 31389  002CFC  D00E               	goto	l9388
 31390  002CFE                     l9382:
 31391                           
 31392                           ; BSR set to: 0
 31393                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 31394  002CFE  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 31395  002D02  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 31396  002D06  0E20               	movlw	32
 31397  002D08  6EDF               	movwf	indf2,c
 31398                           
 31399                           ; BSR set to: 0
 31400  002D0A  0100               	movlb	0	; () banked
 31401  002D0C  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 31402  002D0E  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 31403                           
 31404                           ; BSR set to: 0
 31405                           ;doprnt.c: 1182: width--;
 31406  002D10  0100               	movlb	0	; () banked
 31407  002D12  07DE               	decf	sprintf@width& (0+255),f,b
 31408  002D14  A0D8               	btfss	status,0,c
 31409  002D16  07DF               	decf	(sprintf@width+1)& (0+255),f,b
 31410  002D18  D000               	goto	l9388
 31411  002D1A                     l9388:
 31412                           
 31413                           ; BSR set to: 0
 31414  002D1A  0100               	movlb	0	; () banked
 31415  002D1C  BFDF               	btfsc	(sprintf@width+1)& (0+255),7,b
 31416  002D1E  D007               	goto	l9390
 31417  002D20  0100               	movlb	0	; () banked
 31418  002D22  51DF               	movf	(sprintf@width+1)& (0+255),w,b
 31419  002D24  E1EC               	bnz	l9382
 31420  002D26  0100               	movlb	0	; () banked
 31421  002D28  05DE               	decf	sprintf@width& (0+255),w,b
 31422  002D2A  B0D8               	btfsc	status,0,c
 31423  002D2C  D7E8               	goto	l9382
 31424  002D2E                     l9390:
 31425                           
 31426                           ; BSR set to: 0
 31427                           ;doprnt.c: 1183: }
 31428                           ;doprnt.c: 1188: if(flag & 0x03)
 31429  002D2E  0E03               	movlw	3
 31430  002D30  0100               	movlb	0	; () banked
 31431  002D32  15E0               	andwf	sprintf@flag& (0+255),w,b
 31432  002D34  0100               	movlb	0	; () banked
 31433  002D36  6FBF               	movwf	??_sprintf& (0+255),b
 31434  002D38  0E00               	movlw	0
 31435  002D3A  0100               	movlb	0	; () banked
 31436  002D3C  15E1               	andwf	(sprintf@flag+1)& (0+255),w,b
 31437  002D3E  0100               	movlb	0	; () banked
 31438  002D40  6FC0               	movwf	(??_sprintf+1)& (0+255),b
 31439  002D42  0100               	movlb	0	; () banked
 31440  002D44  51BF               	movf	??_sprintf& (0+255),w,b
 31441  002D46  0100               	movlb	0	; () banked
 31442  002D48  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
 31443  002D4A  B4D8               	btfsc	status,2,c
 31444  002D4C  D058               	goto	l9404
 31445                           
 31446                           ; BSR set to: 0
 31447                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 31448  002D4E  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 31449  002D52  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 31450  002D56  0E2D               	movlw	45
 31451  002D58  D050               	goto	L18
 31452  002D5A                     l9394:
 31453                           
 31454                           ; BSR set to: 0
 31455  002D5A  0100               	movlb	0	; () banked
 31456  002D5C  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 31457  002D5E  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 31458                           
 31459                           ; BSR set to: 0
 31460                           ;doprnt.c: 1195: }
 31461                           ;doprnt.c: 1196: while(c--) {
 31462                           
 31463                           ; BSR set to: 0
 31464  002D60  D04E               	goto	l9404
 31465  002D62                     l9396:
 31466                           
 31467                           ; BSR set to: 0
 31468                           ;doprnt.c: 1200: {
 31469                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 31470  002D62  C0D7  F063         	movff	sprintf@val,___lldiv@dividend
 31471  002D66  C0D8  F064         	movff	sprintf@val+1,___lldiv@dividend+1
 31472  002D6A  C0D9  F065         	movff	sprintf@val+2,___lldiv@dividend+2
 31473  002D6E  C0DA  F066         	movff	sprintf@val+3,___lldiv@dividend+3
 31474  002D72  0100               	movlb	0	; () banked
 31475  002D74  51E2               	movf	sprintf@c& (0+255),w,b
 31476  002D76  0D04               	mullw	4
 31477  002D78  0E77               	movlw	low _dpowers
 31478  002D7A  24F3               	addwf	prodl,w,c
 31479  002D7C  6EF6               	movwf	tblptrl,c
 31480  002D7E  0EEF               	movlw	high _dpowers
 31481  002D80  20F4               	addwfc	prodh,w,c
 31482  002D82  6EF7               	movwf	tblptrh,c
 31483  002D84                     	if	1	;There are 3 active tblptr bytes
 31484  002D84  6AF8               	clrf	tblptru,c
 31485  002D86  0E00               	movlw	low (__mediumconst shr (0+16))
 31486  002D88  22F8               	addwfc	tblptru,f,c
 31487  002D8A                     	endif
 31488  002D8A  0009               	tblrd		*+
 31489  002D8C  CFF5 F067          	movff	tablat,___lldiv@divisor
 31490  002D90  0009               	tblrd		*+
 31491  002D92  CFF5 F068          	movff	tablat,___lldiv@divisor+1
 31492  002D96  0009               	tblrd		*+
 31493  002D98  CFF5 F069          	movff	tablat,___lldiv@divisor+2
 31494  002D9C  000A               	tblrd		*-
 31495  002D9E  CFF5 F06A          	movff	tablat,___lldiv@divisor+3
 31496  002DA2  ECAD  F047         	call	___lldiv	;wreg free
 31497  002DA6  C063  F0D1         	movff	?___lldiv,sprintf@tmpval
 31498  002DAA  C064  F0D2         	movff	?___lldiv+1,sprintf@tmpval+1
 31499  002DAE  C065  F0D3         	movff	?___lldiv+2,sprintf@tmpval+2
 31500  002DB2  C066  F0D4         	movff	?___lldiv+3,sprintf@tmpval+3
 31501                           
 31502                           ;doprnt.c: 1202: tmpval.vd %= 10;
 31503  002DB6  C0D1  F070         	movff	sprintf@tmpval,___llmod@dividend
 31504  002DBA  C0D2  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
 31505  002DBE  C0D3  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
 31506  002DC2  C0D4  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
 31507  002DC6  0E0A               	movlw	10
 31508  002DC8  0100               	movlb	0	; () banked
 31509  002DCA  6F74               	movwf	___llmod@divisor& (0+255),b
 31510  002DCC  0E00               	movlw	0
 31511  002DCE  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
 31512  002DD0  0E00               	movlw	0
 31513  002DD2  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
 31514  002DD4  0E00               	movlw	0
 31515  002DD6  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
 31516  002DD8  ECDA  F049         	call	___llmod	;wreg free
 31517  002DDC  C070  F0D1         	movff	?___llmod,sprintf@tmpval
 31518  002DE0  C071  F0D2         	movff	?___llmod+1,sprintf@tmpval+1
 31519  002DE4  C072  F0D3         	movff	?___llmod+2,sprintf@tmpval+2
 31520  002DE8  C073  F0D4         	movff	?___llmod+3,sprintf@tmpval+3
 31521                           
 31522                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 31523  002DEC  0100               	movlb	0	; () banked
 31524  002DEE  51D1               	movf	sprintf@tmpval& (0+255),w,b
 31525  002DF0  0F30               	addlw	48
 31526  002DF2  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 31527  002DF6  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 31528  002DFA                     L18:
 31529  002DFA  6EDF               	movwf	indf2,c
 31530  002DFC  D7AE               	goto	l9394
 31531  002DFE                     l9404:
 31532                           
 31533                           ; BSR set to: 0
 31534  002DFE  0100               	movlb	0	; () banked
 31535  002E00  07E2               	decf	sprintf@c& (0+255),f,b
 31536  002E02  0100               	movlb	0	; () banked
 31537  002E04  29E2               	incf	sprintf@c& (0+255),w,b
 31538  002E06  B4D8               	btfsc	status,2,c
 31539  002E08  D010               	goto	l9412
 31540  002E0A  D7AB               	goto	l9396
 31541                           
 31542                           ; BSR set to: 0
 31543                           ;doprnt.c: 1204: }
 31544                           ;doprnt.c: 1206: }
 31545                           ;doprnt.c: 1207: while(exp > 0) {
 31546  002E0C  D00E               	goto	l9412
 31547  002E0E                     l9406:
 31548                           
 31549                           ; BSR set to: 0
 31550                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 31551  002E0E  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 31552  002E12  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 31553  002E16  0E30               	movlw	48
 31554  002E18  6EDF               	movwf	indf2,c
 31555                           
 31556                           ; BSR set to: 0
 31557  002E1A  0100               	movlb	0	; () banked
 31558  002E1C  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 31559  002E1E  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 31560                           
 31561                           ; BSR set to: 0
 31562                           ;doprnt.c: 1209: exp--;
 31563  002E20  0100               	movlb	0	; () banked
 31564  002E22  07D5               	decf	sprintf@exp& (0+255),f,b
 31565  002E24  A0D8               	btfss	status,0,c
 31566  002E26  07D6               	decf	(sprintf@exp+1)& (0+255),f,b
 31567  002E28  D000               	goto	l9412
 31568  002E2A                     l9412:
 31569                           
 31570                           ; BSR set to: 0
 31571  002E2A  0100               	movlb	0	; () banked
 31572  002E2C  BFD6               	btfsc	(sprintf@exp+1)& (0+255),7,b
 31573  002E2E  D007               	goto	l9414
 31574  002E30  0100               	movlb	0	; () banked
 31575  002E32  51D6               	movf	(sprintf@exp+1)& (0+255),w,b
 31576  002E34  E1EC               	bnz	l9406
 31577  002E36  0100               	movlb	0	; () banked
 31578  002E38  05D5               	decf	sprintf@exp& (0+255),w,b
 31579  002E3A  B0D8               	btfsc	status,0,c
 31580  002E3C  D7E8               	goto	l9406
 31581  002E3E                     l9414:
 31582                           
 31583                           ; BSR set to: 0
 31584                           ;doprnt.c: 1210: }
 31585                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 31586  002E3E  0100               	movlb	0	; () banked
 31587  002E40  BFD0               	btfsc	(sprintf@prec+1)& (0+255),7,b
 31588  002E42  D00C               	goto	l2450
 31589  002E44  0100               	movlb	0	; () banked
 31590  002E46  51D0               	movf	(sprintf@prec+1)& (0+255),w,b
 31591  002E48  E105               	bnz	u9520
 31592  002E4A  0E09               	movlw	9
 31593  002E4C  0100               	movlb	0	; () banked
 31594  002E4E  5DCF               	subwf	sprintf@prec& (0+255),w,b
 31595  002E50  A0D8               	btfss	status,0,c
 31596  002E52  D004               	goto	l2450
 31597  002E54                     u9520:
 31598                           
 31599                           ; BSR set to: 0
 31600                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 31601  002E54  0E08               	movlw	8
 31602  002E56  0100               	movlb	0	; () banked
 31603  002E58  6FE2               	movwf	sprintf@c& (0+255),b
 31604  002E5A  D003               	goto	l9418
 31605  002E5C                     l2450:
 31606                           
 31607                           ; BSR set to: 0
 31608                           ;doprnt.c: 1213: else
 31609                           ;doprnt.c: 1214: c = prec;
 31610  002E5C  C0CF  F0E2         	movff	sprintf@prec,sprintf@c
 31611  002E60  D000               	goto	l9418
 31612  002E62                     l9418:
 31613                           
 31614                           ; BSR set to: 0
 31615                           ;doprnt.c: 1215: prec -= c;
 31616  002E62  0100               	movlb	0	; () banked
 31617  002E64  51E2               	movf	sprintf@c& (0+255),w,b
 31618  002E66  0100               	movlb	0	; () banked
 31619  002E68  5FCF               	subwf	sprintf@prec& (0+255),f,b
 31620  002E6A  0E00               	movlw	0
 31621  002E6C  0100               	movlb	0	; () banked
 31622  002E6E  BFE2               	btfsc	sprintf@c& (0+255),7,b
 31623  002E70  0EFF               	movlw	255
 31624  002E72  0100               	movlb	0	; () banked
 31625  002E74  5BD0               	subwfb	(sprintf@prec+1)& (0+255),f,b
 31626                           
 31627                           ; BSR set to: 0
 31628                           ;doprnt.c: 1219: if(c)
 31629  002E76  0100               	movlb	0	; () banked
 31630  002E78  51E2               	movf	sprintf@c& (0+255),w,b
 31631  002E7A  0100               	movlb	0	; () banked
 31632  002E7C  B4D8               	btfsc	status,2,c
 31633  002E7E  D00A               	goto	l9426
 31634                           
 31635                           ; BSR set to: 0
 31636                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 31637  002E80  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 31638  002E84  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 31639  002E88  0E2E               	movlw	46
 31640  002E8A  6EDF               	movwf	indf2,c
 31641                           
 31642                           ; BSR set to: 0
 31643  002E8C  0100               	movlb	0	; () banked
 31644  002E8E  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 31645  002E90  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 31646  002E92  D000               	goto	l9426
 31647  002E94                     l9426:
 31648                           
 31649                           ; BSR set to: 0
 31650                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 31651  002E94  0100               	movlb	0	; () banked
 31652  002E96  51E2               	movf	sprintf@c& (0+255),w,b
 31653  002E98  ECEB  F026         	call	_scale
 31654  002E9C  C08C  F0C5         	movff	?_scale,_sprintf$3920
 31655  002EA0  C08D  F0C6         	movff	?_scale+1,_sprintf$3920+1
 31656  002EA4  C08E  F0C7         	movff	?_scale+2,_sprintf$3920+2
 31657                           
 31658                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 31659  002EA8  C0DB  F080         	movff	sprintf@fval,___ftmul@f2
 31660  002EAC  C0DC  F081         	movff	sprintf@fval+1,___ftmul@f2+1
 31661  002EB0  C0DD  F082         	movff	sprintf@fval+2,___ftmul@f2+2
 31662  002EB4  C0C5  F07D         	movff	_sprintf$3920,___ftmul@f1
 31663  002EB8  C0C6  F07E         	movff	_sprintf$3920+1,___ftmul@f1+1
 31664  002EBC  C0C7  F07F         	movff	_sprintf$3920+2,___ftmul@f1+2
 31665  002EC0  ECC4  F03C         	call	___ftmul	;wreg free
 31666  002EC4  C07D  F0A2         	movff	?___ftmul,___fttol@f1
 31667  002EC8  C07E  F0A3         	movff	?___ftmul+1,___fttol@f1+1
 31668  002ECC  C07F  F0A4         	movff	?___ftmul+2,___fttol@f1+2
 31669  002ED0  ECD1  F03E         	call	___fttol	;wreg free
 31670  002ED4  C0A2  F0D7         	movff	?___fttol,sprintf@val
 31671  002ED8  C0A3  F0D8         	movff	?___fttol+1,sprintf@val+1
 31672  002EDC  C0A4  F0D9         	movff	?___fttol+2,sprintf@val+2
 31673  002EE0  C0A5  F0DA         	movff	?___fttol+3,sprintf@val+3
 31674                           
 31675                           ;doprnt.c: 1228: while(c--) {
 31676  002EE4  D07B               	goto	l9440
 31677  002EE6                     l9430:
 31678                           
 31679                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 31680  002EE6  C0D7  F063         	movff	sprintf@val,___lldiv@dividend
 31681  002EEA  C0D8  F064         	movff	sprintf@val+1,___lldiv@dividend+1
 31682  002EEE  C0D9  F065         	movff	sprintf@val+2,___lldiv@dividend+2
 31683  002EF2  C0DA  F066         	movff	sprintf@val+3,___lldiv@dividend+3
 31684  002EF6  0100               	movlb	0	; () banked
 31685  002EF8  51E2               	movf	sprintf@c& (0+255),w,b
 31686  002EFA  0D04               	mullw	4
 31687  002EFC  0E77               	movlw	low _dpowers
 31688  002EFE  24F3               	addwf	prodl,w,c
 31689  002F00  6EF6               	movwf	tblptrl,c
 31690  002F02  0EEF               	movlw	high _dpowers
 31691  002F04  20F4               	addwfc	prodh,w,c
 31692  002F06  6EF7               	movwf	tblptrh,c
 31693  002F08                     	if	1	;There are 3 active tblptr bytes
 31694  002F08  6AF8               	clrf	tblptru,c
 31695  002F0A  0E00               	movlw	low (__mediumconst shr (0+16))
 31696  002F0C  22F8               	addwfc	tblptru,f,c
 31697  002F0E                     	endif
 31698  002F0E  0009               	tblrd		*+
 31699  002F10  CFF5 F067          	movff	tablat,___lldiv@divisor
 31700  002F14  0009               	tblrd		*+
 31701  002F16  CFF5 F068          	movff	tablat,___lldiv@divisor+1
 31702  002F1A  0009               	tblrd		*+
 31703  002F1C  CFF5 F069          	movff	tablat,___lldiv@divisor+2
 31704  002F20  000A               	tblrd		*-
 31705  002F22  CFF5 F06A          	movff	tablat,___lldiv@divisor+3
 31706  002F26  ECAD  F047         	call	___lldiv	;wreg free
 31707  002F2A  C063  F0D1         	movff	?___lldiv,sprintf@tmpval
 31708  002F2E  C064  F0D2         	movff	?___lldiv+1,sprintf@tmpval+1
 31709  002F32  C065  F0D3         	movff	?___lldiv+2,sprintf@tmpval+2
 31710  002F36  C066  F0D4         	movff	?___lldiv+3,sprintf@tmpval+3
 31711                           
 31712                           ;doprnt.c: 1230: tmpval.vd %= 10;
 31713  002F3A  C0D1  F070         	movff	sprintf@tmpval,___llmod@dividend
 31714  002F3E  C0D2  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
 31715  002F42  C0D3  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
 31716  002F46  C0D4  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
 31717  002F4A  0E0A               	movlw	10
 31718  002F4C  0100               	movlb	0	; () banked
 31719  002F4E  6F74               	movwf	___llmod@divisor& (0+255),b
 31720  002F50  0E00               	movlw	0
 31721  002F52  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
 31722  002F54  0E00               	movlw	0
 31723  002F56  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
 31724  002F58  0E00               	movlw	0
 31725  002F5A  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
 31726  002F5C  ECDA  F049         	call	___llmod	;wreg free
 31727  002F60  C070  F0D1         	movff	?___llmod,sprintf@tmpval
 31728  002F64  C071  F0D2         	movff	?___llmod+1,sprintf@tmpval+1
 31729  002F68  C072  F0D3         	movff	?___llmod+2,sprintf@tmpval+2
 31730  002F6C  C073  F0D4         	movff	?___llmod+3,sprintf@tmpval+3
 31731                           
 31732                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 31733  002F70  0100               	movlb	0	; () banked
 31734  002F72  51D1               	movf	sprintf@tmpval& (0+255),w,b
 31735  002F74  0F30               	addlw	48
 31736  002F76  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 31737  002F7A  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 31738  002F7E  6EDF               	movwf	indf2,c
 31739                           
 31740                           ; BSR set to: 0
 31741  002F80  0100               	movlb	0	; () banked
 31742  002F82  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 31743  002F84  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 31744                           
 31745                           ; BSR set to: 0
 31746                           ;doprnt.c: 1232: val %= dpowers[c];
 31747  002F86  C0D7  F070         	movff	sprintf@val,___llmod@dividend
 31748  002F8A  C0D8  F071         	movff	sprintf@val+1,___llmod@dividend+1
 31749  002F8E  C0D9  F072         	movff	sprintf@val+2,___llmod@dividend+2
 31750  002F92  C0DA  F073         	movff	sprintf@val+3,___llmod@dividend+3
 31751  002F96  0100               	movlb	0	; () banked
 31752  002F98  51E2               	movf	sprintf@c& (0+255),w,b
 31753  002F9A  0D04               	mullw	4
 31754  002F9C  0E77               	movlw	low _dpowers
 31755  002F9E  24F3               	addwf	prodl,w,c
 31756  002FA0  6EF6               	movwf	tblptrl,c
 31757  002FA2  0EEF               	movlw	high _dpowers
 31758  002FA4  20F4               	addwfc	prodh,w,c
 31759  002FA6  6EF7               	movwf	tblptrh,c
 31760  002FA8                     	if	1	;There are 3 active tblptr bytes
 31761  002FA8  6AF8               	clrf	tblptru,c
 31762  002FAA  0E00               	movlw	low (__mediumconst shr (0+16))
 31763  002FAC  22F8               	addwfc	tblptru,f,c
 31764  002FAE                     	endif
 31765  002FAE  0009               	tblrd		*+
 31766  002FB0  CFF5 F074          	movff	tablat,___llmod@divisor
 31767  002FB4  0009               	tblrd		*+
 31768  002FB6  CFF5 F075          	movff	tablat,___llmod@divisor+1
 31769  002FBA  0009               	tblrd		*+
 31770  002FBC  CFF5 F076          	movff	tablat,___llmod@divisor+2
 31771  002FC0  000A               	tblrd		*-
 31772  002FC2  CFF5 F077          	movff	tablat,___llmod@divisor+3
 31773  002FC6  ECDA  F049         	call	___llmod	;wreg free
 31774  002FCA  C070  F0D7         	movff	?___llmod,sprintf@val
 31775  002FCE  C071  F0D8         	movff	?___llmod+1,sprintf@val+1
 31776  002FD2  C072  F0D9         	movff	?___llmod+2,sprintf@val+2
 31777  002FD6  C073  F0DA         	movff	?___llmod+3,sprintf@val+3
 31778  002FDA  D000               	goto	l9440
 31779  002FDC                     l9440:
 31780  002FDC  0100               	movlb	0	; () banked
 31781  002FDE  07E2               	decf	sprintf@c& (0+255),f,b
 31782  002FE0  0100               	movlb	0	; () banked
 31783  002FE2  29E2               	incf	sprintf@c& (0+255),w,b
 31784  002FE4  B4D8               	btfsc	status,2,c
 31785  002FE6  D010               	goto	l9448
 31786  002FE8  D77E               	goto	l9430
 31787                           
 31788                           ; BSR set to: 0
 31789                           ;doprnt.c: 1233: }
 31790                           ;doprnt.c: 1235: while(prec) {
 31791  002FEA  D00E               	goto	l9448
 31792  002FEC                     l9442:
 31793                           
 31794                           ; BSR set to: 0
 31795                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 31796  002FEC  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 31797  002FF0  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 31798  002FF4  0E30               	movlw	48
 31799  002FF6  6EDF               	movwf	indf2,c
 31800                           
 31801                           ; BSR set to: 0
 31802  002FF8  0100               	movlb	0	; () banked
 31803  002FFA  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 31804  002FFC  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 31805                           
 31806                           ; BSR set to: 0
 31807                           ;doprnt.c: 1237: prec--;
 31808  002FFE  0100               	movlb	0	; () banked
 31809  003000  07CF               	decf	sprintf@prec& (0+255),f,b
 31810  003002  A0D8               	btfss	status,0,c
 31811  003004  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
 31812  003006  D000               	goto	l9448
 31813  003008                     l9448:
 31814                           
 31815                           ; BSR set to: 0
 31816  003008  0100               	movlb	0	; () banked
 31817  00300A  51CF               	movf	sprintf@prec& (0+255),w,b
 31818  00300C  0100               	movlb	0	; () banked
 31819  00300E  11D0               	iorwf	(sprintf@prec+1)& (0+255),w,b
 31820  003010  B4D8               	btfsc	status,2,c
 31821  003012  D235               	goto	l9568
 31822  003014  D7EB               	goto	l9442
 31823                           
 31824                           ; BSR set to: 0
 31825                           ;doprnt.c: 1238: }
 31826                           ;doprnt.c: 1245: continue;
 31827  003016  D233               	goto	l9568
 31828  003018                     l9450:
 31829                           
 31830                           ; BSR set to: 0
 31831                           ;doprnt.c: 1246: }
 31832                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 31833  003018  0EC0               	movlw	192
 31834  00301A  0100               	movlb	0	; () banked
 31835  00301C  15E0               	andwf	sprintf@flag& (0+255),w,b
 31836  00301E  0100               	movlb	0	; () banked
 31837  003020  6FBF               	movwf	??_sprintf& (0+255),b
 31838  003022  0E00               	movlw	0
 31839  003024  0100               	movlb	0	; () banked
 31840  003026  15E1               	andwf	(sprintf@flag+1)& (0+255),w,b
 31841  003028  0100               	movlb	0	; () banked
 31842  00302A  6FC0               	movwf	(??_sprintf+1)& (0+255),b
 31843  00302C  0100               	movlb	0	; () banked
 31844  00302E  51BF               	movf	??_sprintf& (0+255),w,b
 31845  003030  0100               	movlb	0	; () banked
 31846  003032  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
 31847  003034  A4D8               	btfss	status,2,c
 31848  003036  D035               	goto	l2459
 31849                           
 31850                           ; BSR set to: 0
 31851                           ;doprnt.c: 1253: {
 31852                           ;doprnt.c: 1255: if(flag & 0x10)
 31853  003038  0100               	movlb	0	; () banked
 31854  00303A  A9E0               	btfss	sprintf@flag& (0+255),4,b
 31855  00303C  D00E               	goto	l9458
 31856                           
 31857                           ; BSR set to: 0
 31858                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 31859  00303E  C0CD  FFD9         	movff	sprintf@ap,fsr2l
 31860  003042  C0CE  FFDA         	movff	sprintf@ap+1,fsr2h
 31861  003046  CFDE F0D7          	movff	postinc2,sprintf@val
 31862  00304A  CFDE F0D8          	movff	postinc2,sprintf@val+1
 31863  00304E  CFDE F0D9          	movff	postinc2,sprintf@val+2
 31864  003052  CFDE F0DA          	movff	postinc2,sprintf@val+3
 31865                           
 31866                           ; BSR set to: 0
 31867  003056  0E04               	movlw	4
 31868  003058  D00F               	goto	L19
 31869  00305A                     l9458:
 31870                           
 31871                           ; BSR set to: 0
 31872                           ;doprnt.c: 1257: else
 31873                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 31874  00305A  C0CD  FFD9         	movff	sprintf@ap,fsr2l
 31875  00305E  C0CE  FFDA         	movff	sprintf@ap+1,fsr2h
 31876  003062  CFDE F0D7          	movff	postinc2,sprintf@val
 31877  003066  CFDD F0D8          	movff	postdec2,sprintf@val+1
 31878  00306A  0100               	movlb	0	; () banked
 31879  00306C  0E00               	movlw	0
 31880  00306E  BFD8               	btfsc	(sprintf@val+1)& (0+255),7,b
 31881  003070  0EFF               	movlw	-1
 31882  003072  6FD9               	movwf	(sprintf@val+2)& (0+255),b
 31883  003074  6FDA               	movwf	(sprintf@val+3)& (0+255),b
 31884                           
 31885                           ; BSR set to: 0
 31886  003076  0E02               	movlw	2
 31887  003078                     L19:
 31888  003078  0100               	movlb	0	; () banked
 31889  00307A  27CD               	addwf	sprintf@ap& (0+255),f,b
 31890  00307C  0E00               	movlw	0
 31891  00307E  23CE               	addwfc	(sprintf@ap+1)& (0+255),f,b
 31892  003080  D000               	goto	l9462
 31893  003082                     l9462:
 31894                           
 31895                           ; BSR set to: 0
 31896                           ;doprnt.c: 1261: if((long)val < 0) {
 31897  003082  0100               	movlb	0	; () banked
 31898  003084  AFDA               	btfss	(sprintf@val+3)& (0+255),7,b
 31899  003086  D090               	goto	l9506
 31900                           
 31901                           ; BSR set to: 0
 31902                           ;doprnt.c: 1262: flag |= 0x03;
 31903  003088  0E03               	movlw	3
 31904  00308A  0100               	movlb	0	; () banked
 31905  00308C  13E0               	iorwf	sprintf@flag& (0+255),f,b
 31906                           
 31907                           ; BSR set to: 0
 31908                           ;doprnt.c: 1263: val = -val;
 31909  00308E  0100               	movlb	0	; () banked
 31910  003090  1FDA               	comf	(sprintf@val+3)& (0+255),f,b
 31911  003092  1FD9               	comf	(sprintf@val+2)& (0+255),f,b
 31912  003094  1FD8               	comf	(sprintf@val+1)& (0+255),f,b
 31913  003096  6DD7               	negf	sprintf@val& (0+255),b
 31914  003098  0E00               	movlw	0
 31915  00309A  23D8               	addwfc	(sprintf@val+1)& (0+255),f,b
 31916  00309C  23D9               	addwfc	(sprintf@val+2)& (0+255),f,b
 31917  00309E  23DA               	addwfc	(sprintf@val+3)& (0+255),f,b
 31918                           
 31919                           ; BSR set to: 0
 31920                           ;doprnt.c: 1264: }
 31921                           ;doprnt.c: 1266: }
 31922  0030A0  D083               	goto	l9506
 31923  0030A2                     l2459:
 31924                           
 31925                           ; BSR set to: 0
 31926                           ;doprnt.c: 1268: else
 31927                           ;doprnt.c: 1273: {
 31928                           ;doprnt.c: 1281: if(flag & 0x10)
 31929  0030A2  0100               	movlb	0	; () banked
 31930  0030A4  A9E0               	btfss	sprintf@flag& (0+255),4,b
 31931  0030A6  D00E               	goto	l9472
 31932                           
 31933                           ; BSR set to: 0
 31934                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 31935  0030A8  C0CD  FFD9         	movff	sprintf@ap,fsr2l
 31936  0030AC  C0CE  FFDA         	movff	sprintf@ap+1,fsr2h
 31937  0030B0  CFDE F0D7          	movff	postinc2,sprintf@val
 31938  0030B4  CFDE F0D8          	movff	postinc2,sprintf@val+1
 31939  0030B8  CFDE F0D9          	movff	postinc2,sprintf@val+2
 31940  0030BC  CFDE F0DA          	movff	postinc2,sprintf@val+3
 31941                           
 31942                           ; BSR set to: 0
 31943  0030C0  0E04               	movlw	4
 31944  0030C2  D010               	goto	L20
 31945  0030C4                     l9472:
 31946                           
 31947                           ; BSR set to: 0
 31948                           ;doprnt.c: 1283: else
 31949                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 31950  0030C4  C0CD  FFD9         	movff	sprintf@ap,fsr2l
 31951  0030C8  C0CE  FFDA         	movff	sprintf@ap+1,fsr2h
 31952  0030CC  CFDE F0BF          	movff	postinc2,??_sprintf
 31953  0030D0  CFDD F0C0          	movff	postdec2,??_sprintf+1
 31954  0030D4  C0BF  F0D7         	movff	??_sprintf,sprintf@val
 31955  0030D8  C0C0  F0D8         	movff	??_sprintf+1,sprintf@val+1
 31956  0030DC  0100               	movlb	0	; () banked
 31957  0030DE  6BD9               	clrf	(sprintf@val+2)& (0+255),b
 31958  0030E0  6BDA               	clrf	(sprintf@val+3)& (0+255),b
 31959                           
 31960                           ; BSR set to: 0
 31961  0030E2  0E02               	movlw	2
 31962  0030E4                     L20:
 31963  0030E4  0100               	movlb	0	; () banked
 31964  0030E6  27CD               	addwf	sprintf@ap& (0+255),f,b
 31965  0030E8  0E00               	movlw	0
 31966  0030EA  23CE               	addwfc	(sprintf@ap+1)& (0+255),f,b
 31967                           
 31968                           ; BSR set to: 0
 31969                           ;doprnt.c: 1287: }
 31970                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 31971                           
 31972                           ; BSR set to: 0
 31973  0030EC  D05D               	goto	l9506
 31974                           
 31975                           ; BSR set to: 0
 31976                           
 31977                           ;doprnt.c: 1299: case 0x00:
 31978  0030EE  D000               	goto	l9476
 31979  0030F0                     l9476:
 31980                           
 31981                           ; BSR set to: 0
 31982                           ;doprnt.c: 1302: case 0xC0:
 31983                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 31984  0030F0  0E01               	movlw	1
 31985  0030F2  0100               	movlb	0	; () banked
 31986  0030F4  6FE2               	movwf	sprintf@c& (0+255),b
 31987  0030F6                     l9478:
 31988                           
 31989                           ; BSR set to: 0
 31990  0030F6  0E0A               	movlw	10
 31991  0030F8  0100               	movlb	0	; () banked
 31992  0030FA  19E2               	xorwf	sprintf@c& (0+255),w,b
 31993  0030FC  B4D8               	btfsc	status,2,c
 31994  0030FE  D061               	goto	l9508
 31995  003100  D001               	goto	l9482
 31996                           
 31997                           ; BSR set to: 0
 31998  003102  D05F               	goto	l9508
 31999  003104                     l9482:
 32000                           
 32001                           ; BSR set to: 0
 32002                           ;doprnt.c: 1306: if(val < dpowers[c])
 32003  003104  0100               	movlb	0	; () banked
 32004  003106  51E2               	movf	sprintf@c& (0+255),w,b
 32005  003108  0D04               	mullw	4
 32006  00310A  0E77               	movlw	low _dpowers
 32007  00310C  24F3               	addwf	prodl,w,c
 32008  00310E  6EF6               	movwf	tblptrl,c
 32009  003110  0EEF               	movlw	high _dpowers
 32010  003112  20F4               	addwfc	prodh,w,c
 32011  003114  6EF7               	movwf	tblptrh,c
 32012  003116                     	if	1	;There are 3 active tblptr bytes
 32013  003116  6AF8               	clrf	tblptru,c
 32014  003118  0E00               	movlw	low (__mediumconst shr (0+16))
 32015  00311A  22F8               	addwfc	tblptru,f,c
 32016  00311C                     	endif
 32017  00311C  0009               	tblrd		*+
 32018  00311E  50F5               	movf	tablat,w,c
 32019  003120  0100               	movlb	0	; () banked
 32020  003122  5DD7               	subwf	sprintf@val& (0+255),w,b
 32021  003124  0009               	tblrd		*+
 32022  003126  50F5               	movf	tablat,w,c
 32023  003128  0100               	movlb	0	; () banked
 32024  00312A  59D8               	subwfb	(sprintf@val+1)& (0+255),w,b
 32025  00312C  0009               	tblrd		*+
 32026  00312E  50F5               	movf	tablat,w,c
 32027  003130  0100               	movlb	0	; () banked
 32028  003132  59D9               	subwfb	(sprintf@val+2)& (0+255),w,b
 32029  003134  0009               	tblrd		*+
 32030  003136  50F5               	movf	tablat,w,c
 32031  003138  0100               	movlb	0	; () banked
 32032  00313A  59DA               	subwfb	(sprintf@val+3)& (0+255),w,b
 32033  00313C  A0D8               	btfss	status,0,c
 32034  00313E  D041               	goto	l9508
 32035  003140  D001               	goto	l9486
 32036                           
 32037                           ; BSR set to: 0
 32038                           ;doprnt.c: 1307: break;
 32039  003142  D03F               	goto	l9508
 32040  003144                     l9486:
 32041                           
 32042                           ; BSR set to: 0
 32043  003144  0100               	movlb	0	; () banked
 32044  003146  2BE2               	incf	sprintf@c& (0+255),f,b
 32045  003148  D7D6               	goto	l9478
 32046                           
 32047                           ; BSR set to: 0
 32048                           ;doprnt.c: 1309: break;
 32049                           
 32050                           ; BSR set to: 0
 32051  00314A  D03B               	goto	l9508
 32052  00314C                     l9490:
 32053                           
 32054                           ; BSR set to: 0
 32055                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 32056  00314C  0E01               	movlw	1
 32057  00314E  0100               	movlb	0	; () banked
 32058  003150  6FE2               	movwf	sprintf@c& (0+255),b
 32059  003152                     l9492:
 32060                           
 32061                           ; BSR set to: 0
 32062  003152  0E08               	movlw	8
 32063  003154  0100               	movlb	0	; () banked
 32064  003156  19E2               	xorwf	sprintf@c& (0+255),w,b
 32065  003158  B4D8               	btfsc	status,2,c
 32066  00315A  D033               	goto	l9508
 32067  00315C  D001               	goto	l9496
 32068                           
 32069                           ; BSR set to: 0
 32070  00315E  D031               	goto	l9508
 32071  003160                     l9496:
 32072                           
 32073                           ; BSR set to: 0
 32074                           ;doprnt.c: 1317: if(val < hexpowers[c])
 32075  003160  0100               	movlb	0	; () banked
 32076  003162  51E2               	movf	sprintf@c& (0+255),w,b
 32077  003164  0D04               	mullw	4
 32078  003166  0EED               	movlw	low _hexpowers
 32079  003168  24F3               	addwf	prodl,w,c
 32080  00316A  6EF6               	movwf	tblptrl,c
 32081  00316C  0EEF               	movlw	high _hexpowers
 32082  00316E  20F4               	addwfc	prodh,w,c
 32083  003170  6EF7               	movwf	tblptrh,c
 32084  003172                     	if	1	;There are 3 active tblptr bytes
 32085  003172  6AF8               	clrf	tblptru,c
 32086  003174  0E00               	movlw	low (__mediumconst shr (0+16))
 32087  003176  22F8               	addwfc	tblptru,f,c
 32088  003178                     	endif
 32089  003178  0009               	tblrd		*+
 32090  00317A  50F5               	movf	tablat,w,c
 32091  00317C  0100               	movlb	0	; () banked
 32092  00317E  5DD7               	subwf	sprintf@val& (0+255),w,b
 32093  003180  0009               	tblrd		*+
 32094  003182  50F5               	movf	tablat,w,c
 32095  003184  0100               	movlb	0	; () banked
 32096  003186  59D8               	subwfb	(sprintf@val+1)& (0+255),w,b
 32097  003188  0009               	tblrd		*+
 32098  00318A  50F5               	movf	tablat,w,c
 32099  00318C  0100               	movlb	0	; () banked
 32100  00318E  59D9               	subwfb	(sprintf@val+2)& (0+255),w,b
 32101  003190  0009               	tblrd		*+
 32102  003192  50F5               	movf	tablat,w,c
 32103  003194  0100               	movlb	0	; () banked
 32104  003196  59DA               	subwfb	(sprintf@val+3)& (0+255),w,b
 32105  003198  A0D8               	btfss	status,0,c
 32106  00319A  D013               	goto	l9508
 32107  00319C  D001               	goto	l9500
 32108                           
 32109                           ; BSR set to: 0
 32110                           ;doprnt.c: 1318: break;
 32111  00319E  D011               	goto	l9508
 32112  0031A0                     l9500:
 32113                           
 32114                           ; BSR set to: 0
 32115  0031A0  0100               	movlb	0	; () banked
 32116  0031A2  2BE2               	incf	sprintf@c& (0+255),f,b
 32117  0031A4  D7D6               	goto	l9492
 32118                           
 32119                           ; BSR set to: 0
 32120                           ;doprnt.c: 1336: }
 32121                           
 32122                           ; BSR set to: 0
 32123                           ;doprnt.c: 1320: break;
 32124                           
 32125                           ; BSR set to: 0
 32126  0031A6  D00D               	goto	l9508
 32127  0031A8                     l9506:
 32128                           
 32129                           ; BSR set to: 0
 32130  0031A8  0100               	movlb	0	; () banked
 32131  0031AA  51E0               	movf	sprintf@flag& (0+255),w,b
 32132  0031AC  0BC0               	andlw	192
 32133                           
 32134                           ; Switch size 1, requested type "space"
 32135                           ; Number of cases is 3, Range of values is 0 to 192
 32136                           ; switch strategies available:
 32137                           ; Name         Instructions Cycles
 32138                           ; simple_byte           10     6 (average)
 32139                           ;	Chosen strategy is simple_byte
 32140  0031AE  0A00               	xorlw	0	; case 0
 32141  0031B0  B4D8               	btfsc	status,2,c
 32142  0031B2  D79E               	goto	l9476
 32143  0031B4  0A80               	xorlw	128	; case 128
 32144  0031B6  B4D8               	btfsc	status,2,c
 32145  0031B8  D7C9               	goto	l9490
 32146  0031BA  0A40               	xorlw	64	; case 192
 32147  0031BC  B4D8               	btfsc	status,2,c
 32148  0031BE  D798               	goto	l9476
 32149  0031C0  D000               	goto	l9508
 32150  0031C2                     l9508:
 32151                           
 32152                           ; BSR set to: 0
 32153                           ;doprnt.c: 1345: if(width && flag & 0x03)
 32154  0031C2  0100               	movlb	0	; () banked
 32155  0031C4  51DE               	movf	sprintf@width& (0+255),w,b
 32156  0031C6  0100               	movlb	0	; () banked
 32157  0031C8  11DF               	iorwf	(sprintf@width+1)& (0+255),w,b
 32158  0031CA  B4D8               	btfsc	status,2,c
 32159  0031CC  D015               	goto	l9514
 32160                           
 32161                           ; BSR set to: 0
 32162  0031CE  0E03               	movlw	3
 32163  0031D0  0100               	movlb	0	; () banked
 32164  0031D2  15E0               	andwf	sprintf@flag& (0+255),w,b
 32165  0031D4  0100               	movlb	0	; () banked
 32166  0031D6  6FBF               	movwf	??_sprintf& (0+255),b
 32167  0031D8  0E00               	movlw	0
 32168  0031DA  0100               	movlb	0	; () banked
 32169  0031DC  15E1               	andwf	(sprintf@flag+1)& (0+255),w,b
 32170  0031DE  0100               	movlb	0	; () banked
 32171  0031E0  6FC0               	movwf	(??_sprintf+1)& (0+255),b
 32172  0031E2  0100               	movlb	0	; () banked
 32173  0031E4  51BF               	movf	??_sprintf& (0+255),w,b
 32174  0031E6  0100               	movlb	0	; () banked
 32175  0031E8  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
 32176  0031EA  B4D8               	btfsc	status,2,c
 32177  0031EC  D005               	goto	l9514
 32178                           
 32179                           ; BSR set to: 0
 32180                           ;doprnt.c: 1346: width--;
 32181  0031EE  0100               	movlb	0	; () banked
 32182  0031F0  07DE               	decf	sprintf@width& (0+255),f,b
 32183  0031F2  A0D8               	btfss	status,0,c
 32184  0031F4  07DF               	decf	(sprintf@width+1)& (0+255),f,b
 32185  0031F6  D000               	goto	l9514
 32186  0031F8                     l9514:
 32187                           
 32188                           ; BSR set to: 0
 32189                           ;doprnt.c: 1381: if(width > c)
 32190  0031F8  0E80               	movlw	128
 32191  0031FA  0100               	movlb	0	; () banked
 32192  0031FC  BFE2               	btfsc	sprintf@c& (0+255),7,b
 32193  0031FE  0E7F               	movlw	127
 32194  003200  0100               	movlb	0	; () banked
 32195  003202  6FBF               	movwf	??_sprintf& (0+255),b
 32196  003204  0100               	movlb	0	; () banked
 32197  003206  51DE               	movf	sprintf@width& (0+255),w,b
 32198  003208  0100               	movlb	0	; () banked
 32199  00320A  5DE2               	subwf	sprintf@c& (0+255),w,b
 32200  00320C  0100               	movlb	0	; () banked
 32201  00320E  51DF               	movf	(sprintf@width+1)& (0+255),w,b
 32202  003210  0A80               	xorlw	128
 32203  003212  0100               	movlb	0	; () banked
 32204  003214  59BF               	subwfb	??_sprintf& (0+255),w,b
 32205  003216  B0D8               	btfsc	status,0,c
 32206  003218  D00B               	goto	l9518
 32207                           
 32208                           ; BSR set to: 0
 32209                           ;doprnt.c: 1382: width -= c;
 32210  00321A  0100               	movlb	0	; () banked
 32211  00321C  51E2               	movf	sprintf@c& (0+255),w,b
 32212  00321E  0100               	movlb	0	; () banked
 32213  003220  5FDE               	subwf	sprintf@width& (0+255),f,b
 32214  003222  0E00               	movlw	0
 32215  003224  0100               	movlb	0	; () banked
 32216  003226  BFE2               	btfsc	sprintf@c& (0+255),7,b
 32217  003228  0EFF               	movlw	255
 32218  00322A  0100               	movlb	0	; () banked
 32219  00322C  5BDF               	subwfb	(sprintf@width+1)& (0+255),f,b
 32220  00322E  D006               	goto	l9520
 32221  003230                     l9518:
 32222                           
 32223                           ; BSR set to: 0
 32224                           ;doprnt.c: 1383: else
 32225                           ;doprnt.c: 1384: width = 0;
 32226  003230  0E00               	movlw	0
 32227  003232  0100               	movlb	0	; () banked
 32228  003234  6FDF               	movwf	(sprintf@width+1)& (0+255),b
 32229  003236  0E00               	movlw	0
 32230  003238  6FDE               	movwf	sprintf@width& (0+255),b
 32231  00323A  D000               	goto	l9520
 32232  00323C                     l9520:
 32233                           
 32234                           ; BSR set to: 0
 32235                           ;doprnt.c: 1387: if(flag & 0x04) {
 32236  00323C  0100               	movlb	0	; () banked
 32237  00323E  A5E0               	btfss	sprintf@flag& (0+255),2,b
 32238  003240  D035               	goto	l9536
 32239                           
 32240                           ; BSR set to: 0
 32241                           ;doprnt.c: 1392: if(flag & 0x03)
 32242  003242  0E03               	movlw	3
 32243  003244  0100               	movlb	0	; () banked
 32244  003246  15E0               	andwf	sprintf@flag& (0+255),w,b
 32245  003248  0100               	movlb	0	; () banked
 32246  00324A  6FBF               	movwf	??_sprintf& (0+255),b
 32247  00324C  0E00               	movlw	0
 32248  00324E  0100               	movlb	0	; () banked
 32249  003250  15E1               	andwf	(sprintf@flag+1)& (0+255),w,b
 32250  003252  0100               	movlb	0	; () banked
 32251  003254  6FC0               	movwf	(??_sprintf+1)& (0+255),b
 32252  003256  0100               	movlb	0	; () banked
 32253  003258  51BF               	movf	??_sprintf& (0+255),w,b
 32254  00325A  0100               	movlb	0	; () banked
 32255  00325C  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
 32256  00325E  B4D8               	btfsc	status,2,c
 32257  003260  D00A               	goto	l9528
 32258                           
 32259                           ; BSR set to: 0
 32260                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 32261  003262  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 32262  003266  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 32263  00326A  0E2D               	movlw	45
 32264  00326C  6EDF               	movwf	indf2,c
 32265                           
 32266                           ; BSR set to: 0
 32267  00326E  0100               	movlb	0	; () banked
 32268  003270  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 32269  003272  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 32270  003274  D000               	goto	l9528
 32271  003276                     l9528:
 32272                           
 32273                           ; BSR set to: 0
 32274                           ;doprnt.c: 1415: if(width)
 32275  003276  0100               	movlb	0	; () banked
 32276  003278  51DE               	movf	sprintf@width& (0+255),w,b
 32277  00327A  0100               	movlb	0	; () banked
 32278  00327C  11DF               	iorwf	(sprintf@width+1)& (0+255),w,b
 32279  00327E  B4D8               	btfsc	status,2,c
 32280  003280  D04A               	goto	l9550
 32281  003282                     l9530:
 32282                           
 32283                           ; BSR set to: 0
 32284                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 32285  003282  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 32286  003286  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 32287  00328A  0E30               	movlw	48
 32288  00328C  6EDF               	movwf	indf2,c
 32289                           
 32290                           ; BSR set to: 0
 32291  00328E  0100               	movlb	0	; () banked
 32292  003290  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 32293  003292  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 32294                           
 32295                           ; BSR set to: 0
 32296                           ;doprnt.c: 1418: while(--width);
 32297  003294  0100               	movlb	0	; () banked
 32298  003296  07DE               	decf	sprintf@width& (0+255),f,b
 32299  003298  A0D8               	btfss	status,0,c
 32300  00329A  07DF               	decf	(sprintf@width+1)& (0+255),f,b
 32301  00329C  0100               	movlb	0	; () banked
 32302  00329E  51DE               	movf	sprintf@width& (0+255),w,b
 32303  0032A0  0100               	movlb	0	; () banked
 32304  0032A2  11DF               	iorwf	(sprintf@width+1)& (0+255),w,b
 32305  0032A4  B4D8               	btfsc	status,2,c
 32306  0032A6  D037               	goto	l9550
 32307  0032A8  D7EC               	goto	l9530
 32308                           
 32309                           ; BSR set to: 0
 32310                           ;doprnt.c: 1420: } else
 32311                           
 32312                           ; BSR set to: 0
 32313  0032AA  D035               	goto	l9550
 32314  0032AC                     l9536:
 32315                           
 32316                           ; BSR set to: 0
 32317                           ;doprnt.c: 1422: {
 32318                           ;doprnt.c: 1424: if(width
 32319                           ;doprnt.c: 1428: )
 32320  0032AC  0100               	movlb	0	; () banked
 32321  0032AE  51DE               	movf	sprintf@width& (0+255),w,b
 32322  0032B0  0100               	movlb	0	; () banked
 32323  0032B2  11DF               	iorwf	(sprintf@width+1)& (0+255),w,b
 32324  0032B4  B4D8               	btfsc	status,2,c
 32325  0032B6  D015               	goto	l9544
 32326  0032B8                     l9538:
 32327                           
 32328                           ; BSR set to: 0
 32329                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 32330  0032B8  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 32331  0032BC  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 32332  0032C0  0E20               	movlw	32
 32333  0032C2  6EDF               	movwf	indf2,c
 32334                           
 32335                           ; BSR set to: 0
 32336  0032C4  0100               	movlb	0	; () banked
 32337  0032C6  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 32338  0032C8  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 32339                           
 32340                           ; BSR set to: 0
 32341                           ;doprnt.c: 1431: while(--width);
 32342  0032CA  0100               	movlb	0	; () banked
 32343  0032CC  07DE               	decf	sprintf@width& (0+255),f,b
 32344  0032CE  A0D8               	btfss	status,0,c
 32345  0032D0  07DF               	decf	(sprintf@width+1)& (0+255),f,b
 32346  0032D2  0100               	movlb	0	; () banked
 32347  0032D4  51DE               	movf	sprintf@width& (0+255),w,b
 32348  0032D6  0100               	movlb	0	; () banked
 32349  0032D8  11DF               	iorwf	(sprintf@width+1)& (0+255),w,b
 32350  0032DA  B4D8               	btfsc	status,2,c
 32351  0032DC  D002               	goto	l9544
 32352  0032DE  D7EC               	goto	l9538
 32353                           
 32354                           ; BSR set to: 0
 32355  0032E0  D000               	goto	l9544
 32356  0032E2                     l9544:
 32357                           
 32358                           ; BSR set to: 0
 32359                           ;doprnt.c: 1438: if(flag & 0x03)
 32360  0032E2  0E03               	movlw	3
 32361  0032E4  0100               	movlb	0	; () banked
 32362  0032E6  15E0               	andwf	sprintf@flag& (0+255),w,b
 32363  0032E8  0100               	movlb	0	; () banked
 32364  0032EA  6FBF               	movwf	??_sprintf& (0+255),b
 32365  0032EC  0E00               	movlw	0
 32366  0032EE  0100               	movlb	0	; () banked
 32367  0032F0  15E1               	andwf	(sprintf@flag+1)& (0+255),w,b
 32368  0032F2  0100               	movlb	0	; () banked
 32369  0032F4  6FC0               	movwf	(??_sprintf+1)& (0+255),b
 32370  0032F6  0100               	movlb	0	; () banked
 32371  0032F8  51BF               	movf	??_sprintf& (0+255),w,b
 32372  0032FA  0100               	movlb	0	; () banked
 32373  0032FC  11C0               	iorwf	(??_sprintf+1)& (0+255),w,b
 32374  0032FE  B4D8               	btfsc	status,2,c
 32375  003300  D00A               	goto	l9550
 32376                           
 32377                           ; BSR set to: 0
 32378                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 32379  003302  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 32380  003306  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 32381  00330A  0E2D               	movlw	45
 32382  00330C  6EDF               	movwf	indf2,c
 32383                           
 32384                           ; BSR set to: 0
 32385  00330E  0100               	movlb	0	; () banked
 32386  003310  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 32387  003312  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 32388                           
 32389                           ; BSR set to: 0
 32390  003314  D000               	goto	l9550
 32391  003316                     l9550:
 32392                           
 32393                           ; BSR set to: 0
 32394                           ;doprnt.c: 1469: }
 32395                           ;doprnt.c: 1472: prec = c;
 32396  003316  0100               	movlb	0	; () banked
 32397  003318  51E2               	movf	sprintf@c& (0+255),w,b
 32398  00331A  0100               	movlb	0	; () banked
 32399  00331C  6FCF               	movwf	sprintf@prec& (0+255),b
 32400  00331E  6BD0               	clrf	(sprintf@prec+1)& (0+255),b
 32401  003320  BFCF               	btfsc	sprintf@prec& (0+255),7,b
 32402  003322  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
 32403                           
 32404                           ;doprnt.c: 1474: while(prec--) {
 32405  003324  D09F               	goto	l9566
 32406                           
 32407                           ; BSR set to: 0
 32408                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
 32409  003326  D087               	goto	l9560
 32410                           
 32411                           ; BSR set to: 0
 32412                           
 32413                           ;doprnt.c: 1478: {
 32414                           ;doprnt.c: 1483: case 0x00:
 32415  003328  D000               	goto	l9552
 32416  00332A                     l9552:
 32417                           
 32418                           ; BSR set to: 0
 32419                           ;doprnt.c: 1486: case 0xC0:
 32420                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 32421  00332A  C0CF  F0BF         	movff	sprintf@prec,??_sprintf
 32422  00332E  C0D0  F0C0         	movff	sprintf@prec+1,??_sprintf+1
 32423  003332  0100               	movlb	0	; () banked
 32424  003334  90D8               	bcf	status,0,c
 32425  003336  37BF               	rlcf	??_sprintf& (0+255),f,b
 32426  003338  37C0               	rlcf	(??_sprintf+1)& (0+255),f,b
 32427  00333A  0100               	movlb	0	; () banked
 32428  00333C  90D8               	bcf	status,0,c
 32429  00333E  37BF               	rlcf	??_sprintf& (0+255),f,b
 32430  003340  37C0               	rlcf	(??_sprintf+1)& (0+255),f,b
 32431  003342  0E77               	movlw	low _dpowers
 32432  003344  0100               	movlb	0	; () banked
 32433  003346  25BF               	addwf	??_sprintf& (0+255),w,b
 32434  003348  6EF6               	movwf	tblptrl,c
 32435  00334A  0EEF               	movlw	high _dpowers
 32436  00334C  21C0               	addwfc	(??_sprintf+1)& (0+255),w,b
 32437  00334E  6EF7               	movwf	tblptrh,c
 32438  003350                     	if	1	;There are 3 active tblptr bytes
 32439  003350  6AF8               	clrf	tblptru,c
 32440  003352  0E00               	movlw	low (__mediumconst shr (0+16))
 32441  003354  22F8               	addwfc	tblptru,f,c
 32442  003356                     	endif
 32443  003356  0009               	tblrd		*+
 32444  003358  CFF5 F067          	movff	tablat,___lldiv@divisor
 32445  00335C  0009               	tblrd		*+
 32446  00335E  CFF5 F068          	movff	tablat,___lldiv@divisor+1
 32447  003362  0009               	tblrd		*+
 32448  003364  CFF5 F069          	movff	tablat,___lldiv@divisor+2
 32449  003368  000A               	tblrd		*-
 32450  00336A  CFF5 F06A          	movff	tablat,___lldiv@divisor+3
 32451  00336E  C0D7  F063         	movff	sprintf@val,___lldiv@dividend
 32452  003372  C0D8  F064         	movff	sprintf@val+1,___lldiv@dividend+1
 32453  003376  C0D9  F065         	movff	sprintf@val+2,___lldiv@dividend+2
 32454  00337A  C0DA  F066         	movff	sprintf@val+3,___lldiv@dividend+3
 32455  00337E  ECAD  F047         	call	___lldiv	;wreg free
 32456  003382  C063  F070         	movff	?___lldiv,___llmod@dividend
 32457  003386  C064  F071         	movff	?___lldiv+1,___llmod@dividend+1
 32458  00338A  C065  F072         	movff	?___lldiv+2,___llmod@dividend+2
 32459  00338E  C066  F073         	movff	?___lldiv+3,___llmod@dividend+3
 32460  003392  0E0A               	movlw	10
 32461  003394  0100               	movlb	0	; () banked
 32462  003396  6F74               	movwf	___llmod@divisor& (0+255),b
 32463  003398  0E00               	movlw	0
 32464  00339A  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
 32465  00339C  0E00               	movlw	0
 32466  00339E  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
 32467  0033A0  0E00               	movlw	0
 32468  0033A2  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
 32469  0033A4  ECDA  F049         	call	___llmod	;wreg free
 32470  0033A8  0100               	movlb	0	; () banked
 32471  0033AA  5170               	movf	?___llmod& (0+255),w,b
 32472  0033AC  0F30               	addlw	48
 32473  0033AE  0100               	movlb	0	; () banked
 32474  0033B0  6FE2               	movwf	sprintf@c& (0+255),b
 32475                           
 32476                           ;doprnt.c: 1491: break;
 32477  0033B2  D04E               	goto	l9562
 32478  0033B4                     l9554:
 32479                           
 32480                           ; BSR set to: 0
 32481                           ;doprnt.c: 1499: {
 32482                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 32483  0033B4  C0D7  F063         	movff	sprintf@val,___lldiv@dividend
 32484  0033B8  C0D8  F064         	movff	sprintf@val+1,___lldiv@dividend+1
 32485  0033BC  C0D9  F065         	movff	sprintf@val+2,___lldiv@dividend+2
 32486  0033C0  C0DA  F066         	movff	sprintf@val+3,___lldiv@dividend+3
 32487  0033C4  C0CF  F0BF         	movff	sprintf@prec,??_sprintf
 32488  0033C8  C0D0  F0C0         	movff	sprintf@prec+1,??_sprintf+1
 32489  0033CC  0100               	movlb	0	; () banked
 32490  0033CE  90D8               	bcf	status,0,c
 32491  0033D0  37BF               	rlcf	??_sprintf& (0+255),f,b
 32492  0033D2  37C0               	rlcf	(??_sprintf+1)& (0+255),f,b
 32493  0033D4  0100               	movlb	0	; () banked
 32494  0033D6  90D8               	bcf	status,0,c
 32495  0033D8  37BF               	rlcf	??_sprintf& (0+255),f,b
 32496  0033DA  37C0               	rlcf	(??_sprintf+1)& (0+255),f,b
 32497  0033DC  0EED               	movlw	low _hexpowers
 32498  0033DE  0100               	movlb	0	; () banked
 32499  0033E0  25BF               	addwf	??_sprintf& (0+255),w,b
 32500  0033E2  6EF6               	movwf	tblptrl,c
 32501  0033E4  0EEF               	movlw	high _hexpowers
 32502  0033E6  21C0               	addwfc	(??_sprintf+1)& (0+255),w,b
 32503  0033E8  6EF7               	movwf	tblptrh,c
 32504  0033EA                     	if	1	;There are 3 active tblptr bytes
 32505  0033EA  6AF8               	clrf	tblptru,c
 32506  0033EC  0E00               	movlw	low (__mediumconst shr (0+16))
 32507  0033EE  22F8               	addwfc	tblptru,f,c
 32508  0033F0                     	endif
 32509  0033F0  0009               	tblrd		*+
 32510  0033F2  CFF5 F067          	movff	tablat,___lldiv@divisor
 32511  0033F6  0009               	tblrd		*+
 32512  0033F8  CFF5 F068          	movff	tablat,___lldiv@divisor+1
 32513  0033FC  0009               	tblrd		*+
 32514  0033FE  CFF5 F069          	movff	tablat,___lldiv@divisor+2
 32515  003402  000A               	tblrd		*-
 32516  003404  CFF5 F06A          	movff	tablat,___lldiv@divisor+3
 32517  003408  ECAD  F047         	call	___lldiv	;wreg free
 32518  00340C  0100               	movlb	0	; () banked
 32519  00340E  5163               	movf	?___lldiv& (0+255),w,b
 32520  003410  0B0F               	andlw	15
 32521  003412  0100               	movlb	0	; () banked
 32522  003414  6FC8               	movwf	sprintf@idx& (0+255),b
 32523                           
 32524                           ; BSR set to: 0
 32525                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 32526  003416  0100               	movlb	0	; () banked
 32527  003418  51C8               	movf	sprintf@idx& (0+255),w,b
 32528  00341A  0D01               	mullw	1
 32529  00341C  0E01               	movlw	low STR_165
 32530  00341E  24F3               	addwf	prodl,w,c
 32531  003420  6EF6               	movwf	tblptrl,c
 32532  003422  0EFE               	movlw	high STR_165
 32533  003424  20F4               	addwfc	prodh,w,c
 32534  003426  6EF7               	movwf	tblptrh,c
 32535  003428                     	if	1	;There are 3 active tblptr bytes
 32536  003428  6AF8               	clrf	tblptru,c
 32537  00342A  0E00               	movlw	low (__mediumconst shr (0+16))
 32538  00342C  22F8               	addwfc	tblptru,f,c
 32539  00342E                     	endif
 32540  00342E  0008               	tblrd		*
 32541  003430  CFF5 F0E2          	movff	tablat,sprintf@c
 32542                           
 32543                           ; BSR set to: 0
 32544                           ;doprnt.c: 1523: }
 32545                           
 32546                           ;doprnt.c: 1508: }
 32547                           ;doprnt.c: 1510: break;
 32548  003434  D00D               	goto	l9562
 32549  003436                     l9560:
 32550                           
 32551                           ; BSR set to: 0
 32552  003436  0100               	movlb	0	; () banked
 32553  003438  51E0               	movf	sprintf@flag& (0+255),w,b
 32554  00343A  0BC0               	andlw	192
 32555                           
 32556                           ; Switch size 1, requested type "space"
 32557                           ; Number of cases is 3, Range of values is 0 to 192
 32558                           ; switch strategies available:
 32559                           ; Name         Instructions Cycles
 32560                           ; simple_byte           10     6 (average)
 32561                           ;	Chosen strategy is simple_byte
 32562  00343C  0A00               	xorlw	0	; case 0
 32563  00343E  B4D8               	btfsc	status,2,c
 32564  003440  D774               	goto	l9552
 32565  003442  0A80               	xorlw	128	; case 128
 32566  003444  B4D8               	btfsc	status,2,c
 32567  003446  D7B6               	goto	l9554
 32568  003448  0A40               	xorlw	64	; case 192
 32569  00344A  B4D8               	btfsc	status,2,c
 32570  00344C  D76E               	goto	l9552
 32571  00344E  D000               	goto	l9562
 32572  003450                     l9562:
 32573                           
 32574                           ; BSR set to: 0
 32575                           ;doprnt.c: 1524: ((*sp++ = (c)));
 32576  003450  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 32577  003454  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 32578  003458  C0E2  FFDF         	movff	sprintf@c,indf2
 32579                           
 32580                           ; BSR set to: 0
 32581  00345C  0100               	movlb	0	; () banked
 32582  00345E  4BB1               	infsnz	sprintf@sp& (0+255),f,b
 32583  003460  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
 32584  003462  D000               	goto	l9566
 32585  003464                     l9566:
 32586                           
 32587                           ; BSR set to: 0
 32588  003464  0100               	movlb	0	; () banked
 32589  003466  07CF               	decf	sprintf@prec& (0+255),f,b
 32590  003468  A0D8               	btfss	status,0,c
 32591  00346A  07D0               	decf	(sprintf@prec+1)& (0+255),f,b
 32592  00346C  0100               	movlb	0	; () banked
 32593  00346E  29CF               	incf	sprintf@prec& (0+255),w,b
 32594  003470  E1E2               	bnz	l9560
 32595  003472  0100               	movlb	0	; () banked
 32596  003474  29D0               	incf	(sprintf@prec+1)& (0+255),w,b
 32597  003476  B4D8               	btfsc	status,2,c
 32598  003478  D002               	goto	l9568
 32599  00347A  D7DD               	goto	l9560
 32600                           
 32601                           ; BSR set to: 0
 32602  00347C  D000               	goto	l9568
 32603  00347E                     l9568:
 32604                           
 32605                           ; BSR set to: 0
 32606  00347E  C0B3  FFF6         	movff	sprintf@f,tblptrl
 32607  003482  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
 32608  003486  0100               	movlb	0	; () banked
 32609  003488  4BB3               	infsnz	sprintf@f& (0+255),f,b
 32610  00348A  2BB4               	incf	(sprintf@f+1)& (0+255),f,b
 32611  00348C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32612  00348C  6AF8               	clrf	tblptru,c
 32613  00348E                     	endif
 32614  00348E                     	if	0	;tblptru may be non-zero
 32615  00348E                     	endif
 32616  00348E  0008               	tblrd		*
 32617  003490  CFF5 F0E2          	movff	tablat,sprintf@c
 32618  003494  0100               	movlb	0	; () banked
 32619  003496  51E2               	movf	sprintf@c& (0+255),w,b
 32620  003498  B4D8               	btfsc	status,2,c
 32621  00349A  D003               	goto	l9570
 32622  00349C  EFA4  F012         	goto	l9192
 32623                           
 32624                           ; BSR set to: 0
 32625  0034A0  D000               	goto	l9570
 32626  0034A2                     l9570:
 32627                           
 32628                           ;doprnt.c: 1538: *sp = 0;
 32629  0034A2  C0B1  FFD9         	movff	sprintf@sp,fsr2l
 32630  0034A6  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
 32631  0034AA  0E00               	movlw	0
 32632  0034AC  6EDF               	movwf	indf2,c
 32633  0034AE  0012               	return	
 32634                           
 32635                           ;doprnt.c: 1540: return 0;
 32636                           ;	Return value of _sprintf is never used
 32637  0034B0  0012               	return		;funcret
 32638  0034B2                     __end_of_sprintf:
 32639                           	opt stack 0
 32640                           tblptru	equ	0xFF8
 32641                           tblptrh	equ	0xFF7
 32642                           tblptrl	equ	0xFF6
 32643                           tablat	equ	0xFF5
 32644                           prodh	equ	0xFF4
 32645                           prodl	equ	0xFF3
 32646                           intcon	equ	0xFF2
 32647                           intcon2	equ	0xFF1
 32648                           indf0	equ	0xFEF
 32649                           postinc0	equ	0xFEE
 32650                           plusw0	equ	0xFEB
 32651                           fsr0h	equ	0xFEA
 32652                           fsr0l	equ	0xFE9
 32653                           wreg	equ	0xFE8
 32654                           indf1	equ	0xFE7
 32655                           postdec1	equ	0xFE5
 32656                           fsr1h	equ	0xFE2
 32657                           fsr1l	equ	0xFE1
 32658                           indf2	equ	0xFDF
 32659                           postinc2	equ	0xFDE
 32660                           postdec2	equ	0xFDD
 32661                           plusw2	equ	0xFDB
 32662                           fsr2h	equ	0xFDA
 32663                           fsr2l	equ	0xFD9
 32664                           status	equ	0xFD8
 32665                           
 32666 ;; *************** function _scale *****************
 32667 ;; Defined at:
 32668 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 32669 ;; Parameters:    Size  Location     Type
 32670 ;;  scl             1    wreg     char 
 32671 ;; Auto vars:     Size  Location     Type
 32672 ;;  scl             1   50[BANK0 ] char 
 32673 ;; Return value:  Size  Location     Type
 32674 ;;                  3   44[BANK0 ] char 
 32675 ;; Registers used:
 32676 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32677 ;; Tracked objects:
 32678 ;;		On entry : 0/0
 32679 ;;		On exit  : 0/0
 32680 ;;		Unchanged: 0/0
 32681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32682 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32683 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32685 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32686 ;;Total ram usage:        7 bytes
 32687 ;; Hardware stack levels used:    1
 32688 ;; Hardware stack levels required when called:    8
 32689 ;; This function calls:
 32690 ;;		___awdiv
 32691 ;;		___awmod
 32692 ;;		___ftmul
 32693 ;;		___wmul
 32694 ;; This function is called by:
 32695 ;;		_sprintf
 32696 ;; This function uses a non-reentrant model
 32697 ;;
 32698                           
 32699                           	psect	text73
 32700  004DD6                     __ptext73:
 32701                           	opt stack 0
 32702  004DD6                     _scale:
 32703                           	opt stack 20
 32704                           
 32705                           ;incstack = 0
 32706                           ;scale@scl stored from wreg
 32707  004DD6  0100               	movlb	0	; () banked
 32708  004DD8  6F92               	movwf	scale@scl& (0+255),b
 32709                           
 32710                           ; BSR set to: 0
 32711                           ;doprnt.c: 428: if(scl < 0) {
 32712  004DDA  0100               	movlb	0	; () banked
 32713  004DDC  AF92               	btfss	scale@scl& (0+255),7,b
 32714  004DDE  D13F               	goto	l8882
 32715                           
 32716                           ; BSR set to: 0
 32717                           ;doprnt.c: 429: scl = -scl;
 32718  004DE0  0100               	movlb	0	; () banked
 32719  004DE2  6D92               	negf	scale@scl& (0+255),b
 32720                           
 32721                           ;doprnt.c: 430: if(scl>=110)
 32722  004DE4  0100               	movlb	0	; () banked
 32723  004DE6  5192               	movf	scale@scl& (0+255),w,b
 32724  004DE8  0A80               	xorlw	128
 32725  004DEA  0F12               	addlw	-238
 32726  004DEC  A0D8               	btfss	status,0,c
 32727  004DEE  D0B6               	goto	l8872
 32728                           
 32729                           ; BSR set to: 0
 32730                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 32731  004DF0  0E00               	movlw	0
 32732  004DF2  0100               	movlb	0	; () banked
 32733  004DF4  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32734  004DF6  0E03               	movlw	3
 32735  004DF8  6F73               	movwf	___wmul@multiplicand& (0+255),b
 32736  004DFA  0E00               	movlw	0
 32737  004DFC  0100               	movlb	0	; () banked
 32738  004DFE  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
 32739  004E00  0E0A               	movlw	10
 32740  004E02  6F6B               	movwf	___awdiv@divisor& (0+255),b
 32741  004E04  0E00               	movlw	0
 32742  004E06  0100               	movlb	0	; () banked
 32743  004E08  6F66               	movwf	(___awmod@divisor+1)& (0+255),b
 32744  004E0A  0E64               	movlw	100
 32745  004E0C  6F65               	movwf	___awmod@divisor& (0+255),b
 32746  004E0E  0100               	movlb	0	; () banked
 32747  004E10  5192               	movf	scale@scl& (0+255),w,b
 32748  004E12  0100               	movlb	0	; () banked
 32749  004E14  6F63               	movwf	___awmod@dividend& (0+255),b
 32750  004E16  6B64               	clrf	(___awmod@dividend+1)& (0+255),b
 32751  004E18  BF63               	btfsc	___awmod@dividend& (0+255),7,b
 32752  004E1A  0764               	decf	(___awmod@dividend+1)& (0+255),f,b
 32753  004E1C  EC29  F049         	call	___awmod	;wreg free
 32754  004E20  C063  F069         	movff	?___awmod,___awdiv@dividend
 32755  004E24  C064  F06A         	movff	?___awmod+1,___awdiv@dividend+1
 32756  004E28  EC79  F046         	call	___awdiv	;wreg free
 32757  004E2C  0E09               	movlw	9
 32758  004E2E  0100               	movlb	0	; () banked
 32759  004E30  2569               	addwf	?___awdiv& (0+255),w,b
 32760  004E32  0100               	movlb	0	; () banked
 32761  004E34  6F71               	movwf	___wmul@multiplier& (0+255),b
 32762  004E36  0E00               	movlw	0
 32763  004E38  0100               	movlb	0	; () banked
 32764  004E3A  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 32765  004E3C  0100               	movlb	0	; () banked
 32766  004E3E  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
 32767  004E40  EC3E  F050         	call	___wmul	;wreg free
 32768  004E44  0E9F               	movlw	low __npowers_
 32769  004E46  0100               	movlb	0	; () banked
 32770  004E48  2571               	addwf	?___wmul& (0+255),w,b
 32771  004E4A  6EF6               	movwf	tblptrl,c
 32772  004E4C  0EEF               	movlw	high __npowers_
 32773  004E4E  0100               	movlb	0	; () banked
 32774  004E50  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 32775  004E52  6EF7               	movwf	tblptrh,c
 32776  004E54                     	if	1	;There are 3 active tblptr bytes
 32777  004E54  6AF8               	clrf	tblptru,c
 32778  004E56  0E00               	movlw	low (__mediumconst shr (0+16))
 32779  004E58  22F8               	addwfc	tblptru,f,c
 32780  004E5A                     	endif
 32781  004E5A  0009               	tblrd		*+
 32782  004E5C  CFF5 F080          	movff	tablat,___ftmul@f2
 32783  004E60  0009               	tblrd		*+
 32784  004E62  CFF5 F081          	movff	tablat,___ftmul@f2+1
 32785  004E66  000A               	tblrd		*-
 32786  004E68  CFF5 F082          	movff	tablat,___ftmul@f2+2
 32787  004E6C  0E00               	movlw	0
 32788  004E6E  0100               	movlb	0	; () banked
 32789  004E70  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
 32790  004E72  0E64               	movlw	100
 32791  004E74  6F6B               	movwf	___awdiv@divisor& (0+255),b
 32792  004E76  0100               	movlb	0	; () banked
 32793  004E78  5192               	movf	scale@scl& (0+255),w,b
 32794  004E7A  0100               	movlb	0	; () banked
 32795  004E7C  6F69               	movwf	___awdiv@dividend& (0+255),b
 32796  004E7E  6B6A               	clrf	(___awdiv@dividend+1)& (0+255),b
 32797  004E80  BF69               	btfsc	___awdiv@dividend& (0+255),7,b
 32798  004E82  076A               	decf	(___awdiv@dividend+1)& (0+255),f,b
 32799  004E84  EC79  F046         	call	___awdiv	;wreg free
 32800  004E88  0E12               	movlw	18
 32801  004E8A  0100               	movlb	0	; () banked
 32802  004E8C  2569               	addwf	?___awdiv& (0+255),w,b
 32803  004E8E  0100               	movlb	0	; () banked
 32804  004E90  6F71               	movwf	___wmul@multiplier& (0+255),b
 32805  004E92  0E00               	movlw	0
 32806  004E94  0100               	movlb	0	; () banked
 32807  004E96  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 32808  004E98  0100               	movlb	0	; () banked
 32809  004E9A  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
 32810  004E9C  0E00               	movlw	0
 32811  004E9E  0100               	movlb	0	; () banked
 32812  004EA0  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32813  004EA2  0E03               	movlw	3
 32814  004EA4  6F73               	movwf	___wmul@multiplicand& (0+255),b
 32815  004EA6  EC3E  F050         	call	___wmul	;wreg free
 32816  004EAA  0E9F               	movlw	low __npowers_
 32817  004EAC  0100               	movlb	0	; () banked
 32818  004EAE  2571               	addwf	?___wmul& (0+255),w,b
 32819  004EB0  6EF6               	movwf	tblptrl,c
 32820  004EB2  0EEF               	movlw	high __npowers_
 32821  004EB4  0100               	movlb	0	; () banked
 32822  004EB6  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 32823  004EB8  6EF7               	movwf	tblptrh,c
 32824  004EBA                     	if	1	;There are 3 active tblptr bytes
 32825  004EBA  6AF8               	clrf	tblptru,c
 32826  004EBC  0E00               	movlw	low (__mediumconst shr (0+16))
 32827  004EBE  22F8               	addwfc	tblptru,f,c
 32828  004EC0                     	endif
 32829  004EC0  0009               	tblrd		*+
 32830  004EC2  CFF5 F07D          	movff	tablat,___ftmul@f1
 32831  004EC6  0009               	tblrd		*+
 32832  004EC8  CFF5 F07E          	movff	tablat,___ftmul@f1+1
 32833  004ECC  000A               	tblrd		*-
 32834  004ECE  CFF5 F07F          	movff	tablat,___ftmul@f1+2
 32835  004ED2  ECC4  F03C         	call	___ftmul	;wreg free
 32836  004ED6  C07D  F08F         	movff	?___ftmul,_scale$3919
 32837  004EDA  C07E  F090         	movff	?___ftmul+1,_scale$3919+1
 32838  004EDE  C07F  F091         	movff	?___ftmul+2,_scale$3919+2
 32839                           
 32840                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 32841  004EE2  C08F  F07D         	movff	_scale$3919,___ftmul@f1
 32842  004EE6  C090  F07E         	movff	_scale$3919+1,___ftmul@f1+1
 32843  004EEA  C091  F07F         	movff	_scale$3919+2,___ftmul@f1+2
 32844  004EEE  0E00               	movlw	0
 32845  004EF0  0100               	movlb	0	; () banked
 32846  004EF2  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32847  004EF4  0E03               	movlw	3
 32848  004EF6  6F73               	movwf	___wmul@multiplicand& (0+255),b
 32849  004EF8  0E00               	movlw	0
 32850  004EFA  0100               	movlb	0	; () banked
 32851  004EFC  6F66               	movwf	(___awmod@divisor+1)& (0+255),b
 32852  004EFE  0E0A               	movlw	10
 32853  004F00  6F65               	movwf	___awmod@divisor& (0+255),b
 32854  004F02  0100               	movlb	0	; () banked
 32855  004F04  5192               	movf	scale@scl& (0+255),w,b
 32856  004F06  0100               	movlb	0	; () banked
 32857  004F08  6F63               	movwf	___awmod@dividend& (0+255),b
 32858  004F0A  6B64               	clrf	(___awmod@dividend+1)& (0+255),b
 32859  004F0C  BF63               	btfsc	___awmod@dividend& (0+255),7,b
 32860  004F0E  0764               	decf	(___awmod@dividend+1)& (0+255),f,b
 32861  004F10  EC29  F049         	call	___awmod	;wreg free
 32862  004F14  C063  F071         	movff	?___awmod,___wmul@multiplier
 32863  004F18  C064  F072         	movff	?___awmod+1,___wmul@multiplier+1
 32864  004F1C  EC3E  F050         	call	___wmul	;wreg free
 32865  004F20  0E9F               	movlw	low __npowers_
 32866  004F22  0100               	movlb	0	; () banked
 32867  004F24  2571               	addwf	?___wmul& (0+255),w,b
 32868  004F26  6EF6               	movwf	tblptrl,c
 32869  004F28  0EEF               	movlw	high __npowers_
 32870  004F2A  0100               	movlb	0	; () banked
 32871  004F2C  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 32872  004F2E  6EF7               	movwf	tblptrh,c
 32873  004F30                     	if	1	;There are 3 active tblptr bytes
 32874  004F30  6AF8               	clrf	tblptru,c
 32875  004F32  0E00               	movlw	low (__mediumconst shr (0+16))
 32876  004F34  22F8               	addwfc	tblptru,f,c
 32877  004F36                     	endif
 32878  004F36  0009               	tblrd		*+
 32879  004F38  CFF5 F080          	movff	tablat,___ftmul@f2
 32880  004F3C  0009               	tblrd		*+
 32881  004F3E  CFF5 F081          	movff	tablat,___ftmul@f2+1
 32882  004F42  000A               	tblrd		*-
 32883  004F44  CFF5 F082          	movff	tablat,___ftmul@f2+2
 32884  004F48  ECC4  F03C         	call	___ftmul	;wreg free
 32885  004F4C  C07D  F08C         	movff	?___ftmul,?_scale
 32886  004F50  C07E  F08D         	movff	?___ftmul+1,?_scale+1
 32887  004F54  C07F  F08E         	movff	?___ftmul+2,?_scale+2
 32888  004F58  0012               	return	
 32889  004F5A  D06B               	goto	l8878
 32890  004F5C                     l8872:
 32891                           
 32892                           ;doprnt.c: 432: else if(scl > 10)
 32893  004F5C  0100               	movlb	0	; () banked
 32894  004F5E  5192               	movf	scale@scl& (0+255),w,b
 32895  004F60  0A80               	xorlw	128
 32896  004F62  0F75               	addlw	-139
 32897  004F64  A0D8               	btfss	status,0,c
 32898  004F66  D065               	goto	l8878
 32899                           
 32900                           ; BSR set to: 0
 32901                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 32902  004F68  0E00               	movlw	0
 32903  004F6A  0100               	movlb	0	; () banked
 32904  004F6C  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
 32905  004F6E  0E0A               	movlw	10
 32906  004F70  6F6B               	movwf	___awdiv@divisor& (0+255),b
 32907  004F72  0100               	movlb	0	; () banked
 32908  004F74  5192               	movf	scale@scl& (0+255),w,b
 32909  004F76  0100               	movlb	0	; () banked
 32910  004F78  6F69               	movwf	___awdiv@dividend& (0+255),b
 32911  004F7A  6B6A               	clrf	(___awdiv@dividend+1)& (0+255),b
 32912  004F7C  BF69               	btfsc	___awdiv@dividend& (0+255),7,b
 32913  004F7E  076A               	decf	(___awdiv@dividend+1)& (0+255),f,b
 32914  004F80  EC79  F046         	call	___awdiv	;wreg free
 32915  004F84  0E09               	movlw	9
 32916  004F86  0100               	movlb	0	; () banked
 32917  004F88  2569               	addwf	?___awdiv& (0+255),w,b
 32918  004F8A  0100               	movlb	0	; () banked
 32919  004F8C  6F71               	movwf	___wmul@multiplier& (0+255),b
 32920  004F8E  0E00               	movlw	0
 32921  004F90  0100               	movlb	0	; () banked
 32922  004F92  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 32923  004F94  0100               	movlb	0	; () banked
 32924  004F96  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
 32925  004F98  0E00               	movlw	0
 32926  004F9A  0100               	movlb	0	; () banked
 32927  004F9C  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32928  004F9E  0E03               	movlw	3
 32929  004FA0  6F73               	movwf	___wmul@multiplicand& (0+255),b
 32930  004FA2  EC3E  F050         	call	___wmul	;wreg free
 32931  004FA6  0E9F               	movlw	low __npowers_
 32932  004FA8  0100               	movlb	0	; () banked
 32933  004FAA  2571               	addwf	?___wmul& (0+255),w,b
 32934  004FAC  6EF6               	movwf	tblptrl,c
 32935  004FAE  0EEF               	movlw	high __npowers_
 32936  004FB0  0100               	movlb	0	; () banked
 32937  004FB2  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 32938  004FB4  6EF7               	movwf	tblptrh,c
 32939  004FB6                     	if	1	;There are 3 active tblptr bytes
 32940  004FB6  6AF8               	clrf	tblptru,c
 32941  004FB8  0E00               	movlw	low (__mediumconst shr (0+16))
 32942  004FBA  22F8               	addwfc	tblptru,f,c
 32943  004FBC                     	endif
 32944  004FBC  0009               	tblrd		*+
 32945  004FBE  CFF5 F07D          	movff	tablat,___ftmul@f1
 32946  004FC2  0009               	tblrd		*+
 32947  004FC4  CFF5 F07E          	movff	tablat,___ftmul@f1+1
 32948  004FC8  000A               	tblrd		*-
 32949  004FCA  CFF5 F07F          	movff	tablat,___ftmul@f1+2
 32950  004FCE  0E00               	movlw	0
 32951  004FD0  0100               	movlb	0	; () banked
 32952  004FD2  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 32953  004FD4  0E03               	movlw	3
 32954  004FD6  6F73               	movwf	___wmul@multiplicand& (0+255),b
 32955  004FD8  0E00               	movlw	0
 32956  004FDA  0100               	movlb	0	; () banked
 32957  004FDC  6F66               	movwf	(___awmod@divisor+1)& (0+255),b
 32958  004FDE  0E0A               	movlw	10
 32959  004FE0  6F65               	movwf	___awmod@divisor& (0+255),b
 32960  004FE2  0100               	movlb	0	; () banked
 32961  004FE4  5192               	movf	scale@scl& (0+255),w,b
 32962  004FE6  0100               	movlb	0	; () banked
 32963  004FE8  6F63               	movwf	___awmod@dividend& (0+255),b
 32964  004FEA  6B64               	clrf	(___awmod@dividend+1)& (0+255),b
 32965  004FEC  BF63               	btfsc	___awmod@dividend& (0+255),7,b
 32966  004FEE  0764               	decf	(___awmod@dividend+1)& (0+255),f,b
 32967  004FF0  EC29  F049         	call	___awmod	;wreg free
 32968  004FF4  C063  F071         	movff	?___awmod,___wmul@multiplier
 32969  004FF8  C064  F072         	movff	?___awmod+1,___wmul@multiplier+1
 32970  004FFC  EC3E  F050         	call	___wmul	;wreg free
 32971  005000  0E9F               	movlw	low __npowers_
 32972  005002  0100               	movlb	0	; () banked
 32973  005004  2571               	addwf	?___wmul& (0+255),w,b
 32974  005006  6EF6               	movwf	tblptrl,c
 32975  005008  0EEF               	movlw	high __npowers_
 32976  00500A  0100               	movlb	0	; () banked
 32977  00500C  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 32978  00500E  6EF7               	movwf	tblptrh,c
 32979  005010                     	if	1	;There are 3 active tblptr bytes
 32980  005010  6AF8               	clrf	tblptru,c
 32981  005012  0E00               	movlw	low (__mediumconst shr (0+16))
 32982  005014  22F8               	addwfc	tblptru,f,c
 32983  005016                     	endif
 32984  005016  0009               	tblrd		*+
 32985  005018  CFF5 F080          	movff	tablat,___ftmul@f2
 32986  00501C  0009               	tblrd		*+
 32987  00501E  CFF5 F081          	movff	tablat,___ftmul@f2+1
 32988  005022  000A               	tblrd		*-
 32989  005024  CFF5 F082          	movff	tablat,___ftmul@f2+2
 32990  005028  ECC4  F03C         	call	___ftmul	;wreg free
 32991  00502C  D78F               	goto	L21
 32992  00502E  0012               	return	
 32993  005030  D000               	goto	l8878
 32994  005032                     l8878:
 32995                           
 32996                           ;doprnt.c: 434: return _npowers_[scl];
 32997  005032  0100               	movlb	0	; () banked
 32998  005034  5192               	movf	scale@scl& (0+255),w,b
 32999  005036  0D03               	mullw	3
 33000  005038  0E9F               	movlw	low __npowers_
 33001  00503A  24F3               	addwf	prodl,w,c
 33002  00503C  6EF6               	movwf	tblptrl,c
 33003  00503E  0EEF               	movlw	high __npowers_
 33004  005040  20F4               	addwfc	prodh,w,c
 33005  005042  6EF7               	movwf	tblptrh,c
 33006  005044                     	if	1	;There are 3 active tblptr bytes
 33007  005044  6AF8               	clrf	tblptru,c
 33008  005046  0E00               	movlw	low (__mediumconst shr (0+16))
 33009  005048  22F8               	addwfc	tblptru,f,c
 33010  00504A                     	endif
 33011  00504A  0009               	tblrd		*+
 33012  00504C  CFF5 F08C          	movff	tablat,?_scale
 33013  005050  0009               	tblrd		*+
 33014  005052  CFF5 F08D          	movff	tablat,?_scale+1
 33015  005056  000A               	tblrd		*-
 33016  005058  CFF5 F08E          	movff	tablat,?_scale+2
 33017                           
 33018                           ; BSR set to: 0
 33019  00505C  0012               	return	
 33020  00505E                     l8882:
 33021                           
 33022                           ; BSR set to: 0
 33023                           ;doprnt.c: 435: }
 33024                           ;doprnt.c: 436: if(scl>=110)
 33025  00505E  0100               	movlb	0	; () banked
 33026  005060  5192               	movf	scale@scl& (0+255),w,b
 33027  005062  0A80               	xorlw	128
 33028  005064  0F12               	addlw	-238
 33029  005066  A0D8               	btfss	status,0,c
 33030  005068  D0B6               	goto	l8890
 33031                           
 33032                           ; BSR set to: 0
 33033                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 33034  00506A  0E00               	movlw	0
 33035  00506C  0100               	movlb	0	; () banked
 33036  00506E  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33037  005070  0E03               	movlw	3
 33038  005072  6F73               	movwf	___wmul@multiplicand& (0+255),b
 33039  005074  0E00               	movlw	0
 33040  005076  0100               	movlb	0	; () banked
 33041  005078  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
 33042  00507A  0E0A               	movlw	10
 33043  00507C  6F6B               	movwf	___awdiv@divisor& (0+255),b
 33044  00507E  0E00               	movlw	0
 33045  005080  0100               	movlb	0	; () banked
 33046  005082  6F66               	movwf	(___awmod@divisor+1)& (0+255),b
 33047  005084  0E64               	movlw	100
 33048  005086  6F65               	movwf	___awmod@divisor& (0+255),b
 33049  005088  0100               	movlb	0	; () banked
 33050  00508A  5192               	movf	scale@scl& (0+255),w,b
 33051  00508C  0100               	movlb	0	; () banked
 33052  00508E  6F63               	movwf	___awmod@dividend& (0+255),b
 33053  005090  6B64               	clrf	(___awmod@dividend+1)& (0+255),b
 33054  005092  BF63               	btfsc	___awmod@dividend& (0+255),7,b
 33055  005094  0764               	decf	(___awmod@dividend+1)& (0+255),f,b
 33056  005096  EC29  F049         	call	___awmod	;wreg free
 33057  00509A  C063  F069         	movff	?___awmod,___awdiv@dividend
 33058  00509E  C064  F06A         	movff	?___awmod+1,___awdiv@dividend+1
 33059  0050A2  EC79  F046         	call	___awdiv	;wreg free
 33060  0050A6  0E09               	movlw	9
 33061  0050A8  0100               	movlb	0	; () banked
 33062  0050AA  2569               	addwf	?___awdiv& (0+255),w,b
 33063  0050AC  0100               	movlb	0	; () banked
 33064  0050AE  6F71               	movwf	___wmul@multiplier& (0+255),b
 33065  0050B0  0E00               	movlw	0
 33066  0050B2  0100               	movlb	0	; () banked
 33067  0050B4  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 33068  0050B6  0100               	movlb	0	; () banked
 33069  0050B8  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
 33070  0050BA  EC3E  F050         	call	___wmul	;wreg free
 33071  0050BE  0EC6               	movlw	low __powers_
 33072  0050C0  0100               	movlb	0	; () banked
 33073  0050C2  2571               	addwf	?___wmul& (0+255),w,b
 33074  0050C4  6EF6               	movwf	tblptrl,c
 33075  0050C6  0EEF               	movlw	high __powers_
 33076  0050C8  0100               	movlb	0	; () banked
 33077  0050CA  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 33078  0050CC  6EF7               	movwf	tblptrh,c
 33079  0050CE                     	if	1	;There are 3 active tblptr bytes
 33080  0050CE  6AF8               	clrf	tblptru,c
 33081  0050D0  0E00               	movlw	low (__mediumconst shr (0+16))
 33082  0050D2  22F8               	addwfc	tblptru,f,c
 33083  0050D4                     	endif
 33084  0050D4  0009               	tblrd		*+
 33085  0050D6  CFF5 F080          	movff	tablat,___ftmul@f2
 33086  0050DA  0009               	tblrd		*+
 33087  0050DC  CFF5 F081          	movff	tablat,___ftmul@f2+1
 33088  0050E0  000A               	tblrd		*-
 33089  0050E2  CFF5 F082          	movff	tablat,___ftmul@f2+2
 33090  0050E6  0E00               	movlw	0
 33091  0050E8  0100               	movlb	0	; () banked
 33092  0050EA  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
 33093  0050EC  0E64               	movlw	100
 33094  0050EE  6F6B               	movwf	___awdiv@divisor& (0+255),b
 33095  0050F0  0100               	movlb	0	; () banked
 33096  0050F2  5192               	movf	scale@scl& (0+255),w,b
 33097  0050F4  0100               	movlb	0	; () banked
 33098  0050F6  6F69               	movwf	___awdiv@dividend& (0+255),b
 33099  0050F8  6B6A               	clrf	(___awdiv@dividend+1)& (0+255),b
 33100  0050FA  BF69               	btfsc	___awdiv@dividend& (0+255),7,b
 33101  0050FC  076A               	decf	(___awdiv@dividend+1)& (0+255),f,b
 33102  0050FE  EC79  F046         	call	___awdiv	;wreg free
 33103  005102  0E12               	movlw	18
 33104  005104  0100               	movlb	0	; () banked
 33105  005106  2569               	addwf	?___awdiv& (0+255),w,b
 33106  005108  0100               	movlb	0	; () banked
 33107  00510A  6F71               	movwf	___wmul@multiplier& (0+255),b
 33108  00510C  0E00               	movlw	0
 33109  00510E  0100               	movlb	0	; () banked
 33110  005110  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 33111  005112  0100               	movlb	0	; () banked
 33112  005114  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
 33113  005116  0E00               	movlw	0
 33114  005118  0100               	movlb	0	; () banked
 33115  00511A  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33116  00511C  0E03               	movlw	3
 33117  00511E  6F73               	movwf	___wmul@multiplicand& (0+255),b
 33118  005120  EC3E  F050         	call	___wmul	;wreg free
 33119  005124  0EC6               	movlw	low __powers_
 33120  005126  0100               	movlb	0	; () banked
 33121  005128  2571               	addwf	?___wmul& (0+255),w,b
 33122  00512A  6EF6               	movwf	tblptrl,c
 33123  00512C  0EEF               	movlw	high __powers_
 33124  00512E  0100               	movlb	0	; () banked
 33125  005130  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 33126  005132  6EF7               	movwf	tblptrh,c
 33127  005134                     	if	1	;There are 3 active tblptr bytes
 33128  005134  6AF8               	clrf	tblptru,c
 33129  005136  0E00               	movlw	low (__mediumconst shr (0+16))
 33130  005138  22F8               	addwfc	tblptru,f,c
 33131  00513A                     	endif
 33132  00513A  0009               	tblrd		*+
 33133  00513C  CFF5 F07D          	movff	tablat,___ftmul@f1
 33134  005140  0009               	tblrd		*+
 33135  005142  CFF5 F07E          	movff	tablat,___ftmul@f1+1
 33136  005146  000A               	tblrd		*-
 33137  005148  CFF5 F07F          	movff	tablat,___ftmul@f1+2
 33138  00514C  ECC4  F03C         	call	___ftmul	;wreg free
 33139  005150  C07D  F08F         	movff	?___ftmul,_scale$3919
 33140  005154  C07E  F090         	movff	?___ftmul+1,_scale$3919+1
 33141  005158  C07F  F091         	movff	?___ftmul+2,_scale$3919+2
 33142                           
 33143                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 33144  00515C  C08F  F07D         	movff	_scale$3919,___ftmul@f1
 33145  005160  C090  F07E         	movff	_scale$3919+1,___ftmul@f1+1
 33146  005164  C091  F07F         	movff	_scale$3919+2,___ftmul@f1+2
 33147  005168  0E00               	movlw	0
 33148  00516A  0100               	movlb	0	; () banked
 33149  00516C  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33150  00516E  0E03               	movlw	3
 33151  005170  6F73               	movwf	___wmul@multiplicand& (0+255),b
 33152  005172  0E00               	movlw	0
 33153  005174  0100               	movlb	0	; () banked
 33154  005176  6F66               	movwf	(___awmod@divisor+1)& (0+255),b
 33155  005178  0E0A               	movlw	10
 33156  00517A  6F65               	movwf	___awmod@divisor& (0+255),b
 33157  00517C  0100               	movlb	0	; () banked
 33158  00517E  5192               	movf	scale@scl& (0+255),w,b
 33159  005180  0100               	movlb	0	; () banked
 33160  005182  6F63               	movwf	___awmod@dividend& (0+255),b
 33161  005184  6B64               	clrf	(___awmod@dividend+1)& (0+255),b
 33162  005186  BF63               	btfsc	___awmod@dividend& (0+255),7,b
 33163  005188  0764               	decf	(___awmod@dividend+1)& (0+255),f,b
 33164  00518A  EC29  F049         	call	___awmod	;wreg free
 33165  00518E  C063  F071         	movff	?___awmod,___wmul@multiplier
 33166  005192  C064  F072         	movff	?___awmod+1,___wmul@multiplier+1
 33167  005196  EC3E  F050         	call	___wmul	;wreg free
 33168  00519A  0EC6               	movlw	low __powers_
 33169  00519C  0100               	movlb	0	; () banked
 33170  00519E  2571               	addwf	?___wmul& (0+255),w,b
 33171  0051A0  6EF6               	movwf	tblptrl,c
 33172  0051A2  0EEF               	movlw	high __powers_
 33173  0051A4  0100               	movlb	0	; () banked
 33174  0051A6  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 33175  0051A8  6EF7               	movwf	tblptrh,c
 33176  0051AA                     	if	1	;There are 3 active tblptr bytes
 33177  0051AA  6AF8               	clrf	tblptru,c
 33178  0051AC  0E00               	movlw	low (__mediumconst shr (0+16))
 33179  0051AE  22F8               	addwfc	tblptru,f,c
 33180  0051B0                     	endif
 33181  0051B0  0009               	tblrd		*+
 33182  0051B2  CFF5 F080          	movff	tablat,___ftmul@f2
 33183  0051B6  0009               	tblrd		*+
 33184  0051B8  CFF5 F081          	movff	tablat,___ftmul@f2+1
 33185  0051BC  000A               	tblrd		*-
 33186  0051BE  CFF5 F082          	movff	tablat,___ftmul@f2+2
 33187  0051C2  ECC4  F03C         	call	___ftmul	;wreg free
 33188  0051C6  C07D  F08C         	movff	?___ftmul,?_scale
 33189  0051CA  C07E  F08D         	movff	?___ftmul+1,?_scale+1
 33190  0051CE  C07F  F08E         	movff	?___ftmul+2,?_scale+2
 33191  0051D2  0012               	return	
 33192  0051D4  D06B               	goto	l8896
 33193  0051D6                     l8890:
 33194                           
 33195                           ;doprnt.c: 438: else if(scl > 10)
 33196  0051D6  0100               	movlb	0	; () banked
 33197  0051D8  5192               	movf	scale@scl& (0+255),w,b
 33198  0051DA  0A80               	xorlw	128
 33199  0051DC  0F75               	addlw	-139
 33200  0051DE  A0D8               	btfss	status,0,c
 33201  0051E0  D065               	goto	l8896
 33202                           
 33203                           ; BSR set to: 0
 33204                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 33205  0051E2  0E00               	movlw	0
 33206  0051E4  0100               	movlb	0	; () banked
 33207  0051E6  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
 33208  0051E8  0E0A               	movlw	10
 33209  0051EA  6F6B               	movwf	___awdiv@divisor& (0+255),b
 33210  0051EC  0100               	movlb	0	; () banked
 33211  0051EE  5192               	movf	scale@scl& (0+255),w,b
 33212  0051F0  0100               	movlb	0	; () banked
 33213  0051F2  6F69               	movwf	___awdiv@dividend& (0+255),b
 33214  0051F4  6B6A               	clrf	(___awdiv@dividend+1)& (0+255),b
 33215  0051F6  BF69               	btfsc	___awdiv@dividend& (0+255),7,b
 33216  0051F8  076A               	decf	(___awdiv@dividend+1)& (0+255),f,b
 33217  0051FA  EC79  F046         	call	___awdiv	;wreg free
 33218  0051FE  0E09               	movlw	9
 33219  005200  0100               	movlb	0	; () banked
 33220  005202  2569               	addwf	?___awdiv& (0+255),w,b
 33221  005204  0100               	movlb	0	; () banked
 33222  005206  6F71               	movwf	___wmul@multiplier& (0+255),b
 33223  005208  0E00               	movlw	0
 33224  00520A  0100               	movlb	0	; () banked
 33225  00520C  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 33226  00520E  0100               	movlb	0	; () banked
 33227  005210  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
 33228  005212  0E00               	movlw	0
 33229  005214  0100               	movlb	0	; () banked
 33230  005216  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33231  005218  0E03               	movlw	3
 33232  00521A  6F73               	movwf	___wmul@multiplicand& (0+255),b
 33233  00521C  EC3E  F050         	call	___wmul	;wreg free
 33234  005220  0EC6               	movlw	low __powers_
 33235  005222  0100               	movlb	0	; () banked
 33236  005224  2571               	addwf	?___wmul& (0+255),w,b
 33237  005226  6EF6               	movwf	tblptrl,c
 33238  005228  0EEF               	movlw	high __powers_
 33239  00522A  0100               	movlb	0	; () banked
 33240  00522C  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 33241  00522E  6EF7               	movwf	tblptrh,c
 33242  005230                     	if	1	;There are 3 active tblptr bytes
 33243  005230  6AF8               	clrf	tblptru,c
 33244  005232  0E00               	movlw	low (__mediumconst shr (0+16))
 33245  005234  22F8               	addwfc	tblptru,f,c
 33246  005236                     	endif
 33247  005236  0009               	tblrd		*+
 33248  005238  CFF5 F07D          	movff	tablat,___ftmul@f1
 33249  00523C  0009               	tblrd		*+
 33250  00523E  CFF5 F07E          	movff	tablat,___ftmul@f1+1
 33251  005242  000A               	tblrd		*-
 33252  005244  CFF5 F07F          	movff	tablat,___ftmul@f1+2
 33253  005248  0E00               	movlw	0
 33254  00524A  0100               	movlb	0	; () banked
 33255  00524C  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33256  00524E  0E03               	movlw	3
 33257  005250  6F73               	movwf	___wmul@multiplicand& (0+255),b
 33258  005252  0E00               	movlw	0
 33259  005254  0100               	movlb	0	; () banked
 33260  005256  6F66               	movwf	(___awmod@divisor+1)& (0+255),b
 33261  005258  0E0A               	movlw	10
 33262  00525A  6F65               	movwf	___awmod@divisor& (0+255),b
 33263  00525C  0100               	movlb	0	; () banked
 33264  00525E  5192               	movf	scale@scl& (0+255),w,b
 33265  005260  0100               	movlb	0	; () banked
 33266  005262  6F63               	movwf	___awmod@dividend& (0+255),b
 33267  005264  6B64               	clrf	(___awmod@dividend+1)& (0+255),b
 33268  005266  BF63               	btfsc	___awmod@dividend& (0+255),7,b
 33269  005268  0764               	decf	(___awmod@dividend+1)& (0+255),f,b
 33270  00526A  EC29  F049         	call	___awmod	;wreg free
 33271  00526E  C063  F071         	movff	?___awmod,___wmul@multiplier
 33272  005272  C064  F072         	movff	?___awmod+1,___wmul@multiplier+1
 33273  005276  EC3E  F050         	call	___wmul	;wreg free
 33274  00527A  0EC6               	movlw	low __powers_
 33275  00527C  0100               	movlb	0	; () banked
 33276  00527E  2571               	addwf	?___wmul& (0+255),w,b
 33277  005280  6EF6               	movwf	tblptrl,c
 33278  005282  0EEF               	movlw	high __powers_
 33279  005284  0100               	movlb	0	; () banked
 33280  005286  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 33281  005288  6EF7               	movwf	tblptrh,c
 33282  00528A                     	if	1	;There are 3 active tblptr bytes
 33283  00528A  6AF8               	clrf	tblptru,c
 33284  00528C  0E00               	movlw	low (__mediumconst shr (0+16))
 33285  00528E  22F8               	addwfc	tblptru,f,c
 33286  005290                     	endif
 33287  005290  0009               	tblrd		*+
 33288  005292  CFF5 F080          	movff	tablat,___ftmul@f2
 33289  005296  0009               	tblrd		*+
 33290  005298  CFF5 F081          	movff	tablat,___ftmul@f2+1
 33291  00529C  000A               	tblrd		*-
 33292  00529E  CFF5 F082          	movff	tablat,___ftmul@f2+2
 33293  0052A2  ECC4  F03C         	call	___ftmul	;wreg free
 33294  0052A6  D78F               	goto	L22
 33295  0052A8  0012               	return	
 33296  0052AA  D000               	goto	l8896
 33297  0052AC                     l8896:
 33298                           
 33299                           ;doprnt.c: 440: return _powers_[scl];
 33300  0052AC  0100               	movlb	0	; () banked
 33301  0052AE  5192               	movf	scale@scl& (0+255),w,b
 33302  0052B0  0D03               	mullw	3
 33303  0052B2  0EC6               	movlw	low __powers_
 33304  0052B4  24F3               	addwf	prodl,w,c
 33305  0052B6  6EF6               	movwf	tblptrl,c
 33306  0052B8  0EEF               	movlw	high __powers_
 33307  0052BA  20F4               	addwfc	prodh,w,c
 33308  0052BC  6EF7               	movwf	tblptrh,c
 33309  0052BE                     	if	1	;There are 3 active tblptr bytes
 33310  0052BE  6AF8               	clrf	tblptru,c
 33311  0052C0  0E00               	movlw	low (__mediumconst shr (0+16))
 33312  0052C2  22F8               	addwfc	tblptru,f,c
 33313  0052C4                     	endif
 33314  0052C4  0009               	tblrd		*+
 33315  0052C6  CFF5 F08C          	movff	tablat,?_scale
 33316  0052CA  0009               	tblrd		*+
 33317  0052CC  CFF5 F08D          	movff	tablat,?_scale+1
 33318  0052D0  000A               	tblrd		*-
 33319  0052D2  CFF5 F08E          	movff	tablat,?_scale+2
 33320  0052D6  0012               	return	
 33321                           
 33322                           ; BSR set to: 0
 33323  0052D8  0012               	return		;funcret
 33324  0052DA                     __end_of_scale:
 33325                           	opt stack 0
 33326                           tblptru	equ	0xFF8
 33327                           tblptrh	equ	0xFF7
 33328                           tblptrl	equ	0xFF6
 33329                           tablat	equ	0xFF5
 33330                           prodh	equ	0xFF4
 33331                           prodl	equ	0xFF3
 33332                           intcon	equ	0xFF2
 33333                           intcon2	equ	0xFF1
 33334                           indf0	equ	0xFEF
 33335                           postinc0	equ	0xFEE
 33336                           plusw0	equ	0xFEB
 33337                           fsr0h	equ	0xFEA
 33338                           fsr0l	equ	0xFE9
 33339                           wreg	equ	0xFE8
 33340                           indf1	equ	0xFE7
 33341                           postdec1	equ	0xFE5
 33342                           fsr1h	equ	0xFE2
 33343                           fsr1l	equ	0xFE1
 33344                           indf2	equ	0xFDF
 33345                           postinc2	equ	0xFDE
 33346                           postdec2	equ	0xFDD
 33347                           plusw2	equ	0xFDB
 33348                           fsr2h	equ	0xFDA
 33349                           fsr2l	equ	0xFD9
 33350                           status	equ	0xFD8
 33351                           
 33352 ;; *************** function _isdigit *****************
 33353 ;; Defined at:
 33354 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 33355 ;; Parameters:    Size  Location     Type
 33356 ;;  c               1    wreg     unsigned char 
 33357 ;; Auto vars:     Size  Location     Type
 33358 ;;  c               1    5[BANK0 ] unsigned char 
 33359 ;; Return value:  Size  Location     Type
 33360 ;;		None               void
 33361 ;; Registers used:
 33362 ;;		wreg, status,2, status,0
 33363 ;; Tracked objects:
 33364 ;;		On entry : 0/0
 33365 ;;		On exit  : 0/0
 33366 ;;		Unchanged: 0/0
 33367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33369 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33370 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33371 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33372 ;;Total ram usage:        3 bytes
 33373 ;; Hardware stack levels used:    1
 33374 ;; Hardware stack levels required when called:    6
 33375 ;; This function calls:
 33376 ;;		Nothing
 33377 ;; This function is called by:
 33378 ;;		_sprintf
 33379 ;; This function uses a non-reentrant model
 33380 ;;
 33381                           
 33382                           	psect	text74
 33383  00A214                     __ptext74:
 33384                           	opt stack 0
 33385  00A214                     _isdigit:
 33386                           	opt stack 22
 33387                           
 33388                           ;incstack = 0
 33389                           ;isdigit@c stored from wreg
 33390  00A214  0100               	movlb	0	; () banked
 33391  00A216  6F65               	movwf	isdigit@c& (0+255),b
 33392                           
 33393                           ; BSR set to: 0
 33394  00A218  0E00               	movlw	0
 33395  00A21A  0100               	movlb	0	; () banked
 33396  00A21C  6F64               	movwf	_isdigit$3587& (0+255),b
 33397                           
 33398                           ; BSR set to: 0
 33399  00A21E  0E3A               	movlw	58
 33400  00A220  0100               	movlb	0	; () banked
 33401  00A222  6165               	cpfslt	isdigit@c& (0+255),b
 33402  00A224  D008               	goto	l8908
 33403                           
 33404                           ; BSR set to: 0
 33405  00A226  0E2F               	movlw	47
 33406  00A228  0100               	movlb	0	; () banked
 33407  00A22A  6565               	cpfsgt	isdigit@c& (0+255),b
 33408  00A22C  D004               	goto	l8908
 33409                           
 33410                           ; BSR set to: 0
 33411  00A22E  0E01               	movlw	1
 33412  00A230  0100               	movlb	0	; () banked
 33413  00A232  6F64               	movwf	_isdigit$3587& (0+255),b
 33414  00A234  D000               	goto	l8908
 33415  00A236                     l8908:
 33416                           
 33417                           ; BSR set to: 0
 33418  00A236  C064  F063         	movff	_isdigit$3587,??_isdigit
 33419  00A23A  0100               	movlb	0	; () banked
 33420  00A23C  3163               	rrcf	??_isdigit& (0+255),w,b
 33421  00A23E  0012               	return	
 33422                           
 33423                           ; BSR set to: 0
 33424                           
 33425                           ; BSR set to: 0
 33426  00A240  0012               	return		;funcret
 33427  00A242                     __end_of_isdigit:
 33428                           	opt stack 0
 33429                           tblptru	equ	0xFF8
 33430                           tblptrh	equ	0xFF7
 33431                           tblptrl	equ	0xFF6
 33432                           tablat	equ	0xFF5
 33433                           prodh	equ	0xFF4
 33434                           prodl	equ	0xFF3
 33435                           intcon	equ	0xFF2
 33436                           intcon2	equ	0xFF1
 33437                           indf0	equ	0xFEF
 33438                           postinc0	equ	0xFEE
 33439                           plusw0	equ	0xFEB
 33440                           fsr0h	equ	0xFEA
 33441                           fsr0l	equ	0xFE9
 33442                           wreg	equ	0xFE8
 33443                           indf1	equ	0xFE7
 33444                           postdec1	equ	0xFE5
 33445                           fsr1h	equ	0xFE2
 33446                           fsr1l	equ	0xFE1
 33447                           indf2	equ	0xFDF
 33448                           postinc2	equ	0xFDE
 33449                           postdec2	equ	0xFDD
 33450                           plusw2	equ	0xFDB
 33451                           fsr2h	equ	0xFDA
 33452                           fsr2l	equ	0xFD9
 33453                           status	equ	0xFD8
 33454                           
 33455 ;; *************** function _fround *****************
 33456 ;; Defined at:
 33457 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 33458 ;; Parameters:    Size  Location     Type
 33459 ;;  prec            1    wreg     unsigned char 
 33460 ;; Auto vars:     Size  Location     Type
 33461 ;;  prec            1   53[BANK0 ] unsigned char 
 33462 ;; Return value:  Size  Location     Type
 33463 ;;                  3   44[BANK0 ] unsigned char 
 33464 ;; Registers used:
 33465 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33466 ;; Tracked objects:
 33467 ;;		On entry : 0/0
 33468 ;;		On exit  : 0/0
 33469 ;;		Unchanged: 0/0
 33470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33471 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33472 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33474 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33475 ;;Total ram usage:       10 bytes
 33476 ;; Hardware stack levels used:    1
 33477 ;; Hardware stack levels required when called:    8
 33478 ;; This function calls:
 33479 ;;		___awdiv
 33480 ;;		___awmod
 33481 ;;		___ftmul
 33482 ;;		___wmul
 33483 ;; This function is called by:
 33484 ;;		_sprintf
 33485 ;; This function uses a non-reentrant model
 33486 ;;
 33487                           
 33488                           	psect	text75
 33489  0063DC                     __ptext75:
 33490                           	opt stack 0
 33491  0063DC                     _fround:
 33492                           	opt stack 20
 33493                           
 33494                           ; BSR set to: 0
 33495                           ;incstack = 0
 33496                           ;fround@prec stored from wreg
 33497  0063DC  0100               	movlb	0	; () banked
 33498  0063DE  6F95               	movwf	fround@prec& (0+255),b
 33499                           
 33500                           ; BSR set to: 0
 33501                           ;doprnt.c: 413: if(prec>=110)
 33502  0063E0  0E6D               	movlw	109
 33503  0063E2  0100               	movlb	0	; () banked
 33504  0063E4  6595               	cpfsgt	fround@prec& (0+255),b
 33505  0063E6  D0C4               	goto	l8850
 33506                           
 33507                           ; BSR set to: 0
 33508                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 33509  0063E8  0E00               	movlw	0
 33510  0063EA  0100               	movlb	0	; () banked
 33511  0063EC  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33512  0063EE  0E03               	movlw	3
 33513  0063F0  6F73               	movwf	___wmul@multiplicand& (0+255),b
 33514  0063F2  0E00               	movlw	0
 33515  0063F4  0100               	movlb	0	; () banked
 33516  0063F6  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
 33517  0063F8  0E0A               	movlw	10
 33518  0063FA  6F6B               	movwf	___awdiv@divisor& (0+255),b
 33519  0063FC  0E00               	movlw	0
 33520  0063FE  0100               	movlb	0	; () banked
 33521  006400  6F66               	movwf	(___awmod@divisor+1)& (0+255),b
 33522  006402  0E64               	movlw	100
 33523  006404  6F65               	movwf	___awmod@divisor& (0+255),b
 33524  006406  C095  F063         	movff	fround@prec,___awmod@dividend
 33525  00640A  0100               	movlb	0	; () banked
 33526  00640C  6B64               	clrf	(___awmod@dividend+1)& (0+255),b
 33527  00640E  EC29  F049         	call	___awmod	;wreg free
 33528  006412  C063  F069         	movff	?___awmod,___awdiv@dividend
 33529  006416  C064  F06A         	movff	?___awmod+1,___awdiv@dividend+1
 33530  00641A  EC79  F046         	call	___awdiv	;wreg free
 33531  00641E  0E09               	movlw	9
 33532  006420  0100               	movlb	0	; () banked
 33533  006422  2569               	addwf	?___awdiv& (0+255),w,b
 33534  006424  0100               	movlb	0	; () banked
 33535  006426  6F71               	movwf	___wmul@multiplier& (0+255),b
 33536  006428  0E00               	movlw	0
 33537  00642A  0100               	movlb	0	; () banked
 33538  00642C  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 33539  00642E  0100               	movlb	0	; () banked
 33540  006430  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
 33541  006432  EC3E  F050         	call	___wmul	;wreg free
 33542  006436  0E9F               	movlw	low __npowers_
 33543  006438  0100               	movlb	0	; () banked
 33544  00643A  2571               	addwf	?___wmul& (0+255),w,b
 33545  00643C  6EF6               	movwf	tblptrl,c
 33546  00643E  0EEF               	movlw	high __npowers_
 33547  006440  0100               	movlb	0	; () banked
 33548  006442  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 33549  006444  6EF7               	movwf	tblptrh,c
 33550  006446                     	if	1	;There are 3 active tblptr bytes
 33551  006446  6AF8               	clrf	tblptru,c
 33552  006448  0E00               	movlw	low (__mediumconst shr (0+16))
 33553  00644A  22F8               	addwfc	tblptru,f,c
 33554  00644C                     	endif
 33555  00644C  0009               	tblrd		*+
 33556  00644E  CFF5 F080          	movff	tablat,___ftmul@f2
 33557  006452  0009               	tblrd		*+
 33558  006454  CFF5 F081          	movff	tablat,___ftmul@f2+1
 33559  006458  000A               	tblrd		*-
 33560  00645A  CFF5 F082          	movff	tablat,___ftmul@f2+2
 33561  00645E  0E00               	movlw	0
 33562  006460  0100               	movlb	0	; () banked
 33563  006462  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
 33564  006464  0E64               	movlw	100
 33565  006466  6F6B               	movwf	___awdiv@divisor& (0+255),b
 33566  006468  C095  F069         	movff	fround@prec,___awdiv@dividend
 33567  00646C  0100               	movlb	0	; () banked
 33568  00646E  6B6A               	clrf	(___awdiv@dividend+1)& (0+255),b
 33569  006470  EC79  F046         	call	___awdiv	;wreg free
 33570  006474  0E12               	movlw	18
 33571  006476  0100               	movlb	0	; () banked
 33572  006478  2569               	addwf	?___awdiv& (0+255),w,b
 33573  00647A  0100               	movlb	0	; () banked
 33574  00647C  6F71               	movwf	___wmul@multiplier& (0+255),b
 33575  00647E  0E00               	movlw	0
 33576  006480  0100               	movlb	0	; () banked
 33577  006482  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 33578  006484  0100               	movlb	0	; () banked
 33579  006486  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
 33580  006488  0E00               	movlw	0
 33581  00648A  0100               	movlb	0	; () banked
 33582  00648C  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33583  00648E  0E03               	movlw	3
 33584  006490  6F73               	movwf	___wmul@multiplicand& (0+255),b
 33585  006492  EC3E  F050         	call	___wmul	;wreg free
 33586  006496  0E9F               	movlw	low __npowers_
 33587  006498  0100               	movlb	0	; () banked
 33588  00649A  2571               	addwf	?___wmul& (0+255),w,b
 33589  00649C  6EF6               	movwf	tblptrl,c
 33590  00649E  0EEF               	movlw	high __npowers_
 33591  0064A0  0100               	movlb	0	; () banked
 33592  0064A2  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 33593  0064A4  6EF7               	movwf	tblptrh,c
 33594  0064A6                     	if	1	;There are 3 active tblptr bytes
 33595  0064A6  6AF8               	clrf	tblptru,c
 33596  0064A8  0E00               	movlw	low (__mediumconst shr (0+16))
 33597  0064AA  22F8               	addwfc	tblptru,f,c
 33598  0064AC                     	endif
 33599  0064AC  0009               	tblrd		*+
 33600  0064AE  CFF5 F07D          	movff	tablat,___ftmul@f1
 33601  0064B2  0009               	tblrd		*+
 33602  0064B4  CFF5 F07E          	movff	tablat,___ftmul@f1+1
 33603  0064B8  000A               	tblrd		*-
 33604  0064BA  CFF5 F07F          	movff	tablat,___ftmul@f1+2
 33605  0064BE  ECC4  F03C         	call	___ftmul	;wreg free
 33606  0064C2  C07D  F092         	movff	?___ftmul,_fround$3917
 33607  0064C6  C07E  F093         	movff	?___ftmul+1,_fround$3917+1
 33608  0064CA  C07F  F094         	movff	?___ftmul+2,_fround$3917+2
 33609                           
 33610                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 33611  0064CE  0E00               	movlw	0
 33612  0064D0  0100               	movlb	0	; () banked
 33613  0064D2  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33614  0064D4  0E03               	movlw	3
 33615  0064D6  6F73               	movwf	___wmul@multiplicand& (0+255),b
 33616  0064D8  0E00               	movlw	0
 33617  0064DA  0100               	movlb	0	; () banked
 33618  0064DC  6F66               	movwf	(___awmod@divisor+1)& (0+255),b
 33619  0064DE  0E0A               	movlw	10
 33620  0064E0  6F65               	movwf	___awmod@divisor& (0+255),b
 33621  0064E2  C095  F063         	movff	fround@prec,___awmod@dividend
 33622  0064E6  0100               	movlb	0	; () banked
 33623  0064E8  6B64               	clrf	(___awmod@dividend+1)& (0+255),b
 33624  0064EA  EC29  F049         	call	___awmod	;wreg free
 33625  0064EE  C063  F071         	movff	?___awmod,___wmul@multiplier
 33626  0064F2  C064  F072         	movff	?___awmod+1,___wmul@multiplier+1
 33627  0064F6  EC3E  F050         	call	___wmul	;wreg free
 33628  0064FA  0E9F               	movlw	low __npowers_
 33629  0064FC  0100               	movlb	0	; () banked
 33630  0064FE  2571               	addwf	?___wmul& (0+255),w,b
 33631  006500  6EF6               	movwf	tblptrl,c
 33632  006502  0EEF               	movlw	high __npowers_
 33633  006504  0100               	movlb	0	; () banked
 33634  006506  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 33635  006508  6EF7               	movwf	tblptrh,c
 33636  00650A                     	if	1	;There are 3 active tblptr bytes
 33637  00650A  6AF8               	clrf	tblptru,c
 33638  00650C  0E00               	movlw	low (__mediumconst shr (0+16))
 33639  00650E  22F8               	addwfc	tblptru,f,c
 33640  006510                     	endif
 33641  006510  0009               	tblrd		*+
 33642  006512  CFF5 F080          	movff	tablat,___ftmul@f2
 33643  006516  0009               	tblrd		*+
 33644  006518  CFF5 F081          	movff	tablat,___ftmul@f2+1
 33645  00651C  000A               	tblrd		*-
 33646  00651E  CFF5 F082          	movff	tablat,___ftmul@f2+2
 33647  006522  C092  F07D         	movff	_fround$3917,___ftmul@f1
 33648  006526  C093  F07E         	movff	_fround$3917+1,___ftmul@f1+1
 33649  00652A  C094  F07F         	movff	_fround$3917+2,___ftmul@f1+2
 33650  00652E  ECC4  F03C         	call	___ftmul	;wreg free
 33651  006532  C07D  F08F         	movff	?___ftmul,_fround$3918
 33652  006536  C07E  F090         	movff	?___ftmul+1,_fround$3918+1
 33653  00653A  C07F  F091         	movff	?___ftmul+2,_fround$3918+2
 33654                           
 33655                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 33656  00653E  C08F  F07D         	movff	_fround$3918,___ftmul@f1
 33657  006542  C090  F07E         	movff	_fround$3918+1,___ftmul@f1+1
 33658  006546  C091  F07F         	movff	_fround$3918+2,___ftmul@f1+2
 33659  00654A  0E00               	movlw	0
 33660  00654C  0100               	movlb	0	; () banked
 33661  00654E  6F80               	movwf	___ftmul@f2& (0+255),b
 33662  006550  0E00               	movlw	0
 33663  006552  0100               	movlb	0	; () banked
 33664  006554  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
 33665  006556  0E3F               	movlw	63
 33666  006558  0100               	movlb	0	; () banked
 33667  00655A  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
 33668  00655C  ECC4  F03C         	call	___ftmul	;wreg free
 33669  006560  C07D  F08C         	movff	?___ftmul,?_fround
 33670  006564  C07E  F08D         	movff	?___ftmul+1,?_fround+1
 33671  006568  C07F  F08E         	movff	?___ftmul+2,?_fround+2
 33672  00656C  0012               	return	
 33673  00656E  D07A               	goto	l8858
 33674  006570                     l8850:
 33675                           
 33676                           ;doprnt.c: 415: else if(prec > 10)
 33677  006570  0E0A               	movlw	10
 33678  006572  0100               	movlb	0	; () banked
 33679  006574  6595               	cpfsgt	fround@prec& (0+255),b
 33680  006576  D076               	goto	l8858
 33681                           
 33682                           ; BSR set to: 0
 33683                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 33684  006578  0E00               	movlw	0
 33685  00657A  0100               	movlb	0	; () banked
 33686  00657C  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33687  00657E  0E03               	movlw	3
 33688  006580  6F73               	movwf	___wmul@multiplicand& (0+255),b
 33689  006582  0E00               	movlw	0
 33690  006584  0100               	movlb	0	; () banked
 33691  006586  6F66               	movwf	(___awmod@divisor+1)& (0+255),b
 33692  006588  0E0A               	movlw	10
 33693  00658A  6F65               	movwf	___awmod@divisor& (0+255),b
 33694  00658C  C095  F063         	movff	fround@prec,___awmod@dividend
 33695  006590  0100               	movlb	0	; () banked
 33696  006592  6B64               	clrf	(___awmod@dividend+1)& (0+255),b
 33697  006594  EC29  F049         	call	___awmod	;wreg free
 33698  006598  C063  F071         	movff	?___awmod,___wmul@multiplier
 33699  00659C  C064  F072         	movff	?___awmod+1,___wmul@multiplier+1
 33700  0065A0  EC3E  F050         	call	___wmul	;wreg free
 33701  0065A4  0E9F               	movlw	low __npowers_
 33702  0065A6  0100               	movlb	0	; () banked
 33703  0065A8  2571               	addwf	?___wmul& (0+255),w,b
 33704  0065AA  6EF6               	movwf	tblptrl,c
 33705  0065AC  0EEF               	movlw	high __npowers_
 33706  0065AE  0100               	movlb	0	; () banked
 33707  0065B0  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 33708  0065B2  6EF7               	movwf	tblptrh,c
 33709  0065B4                     	if	1	;There are 3 active tblptr bytes
 33710  0065B4  6AF8               	clrf	tblptru,c
 33711  0065B6  0E00               	movlw	low (__mediumconst shr (0+16))
 33712  0065B8  22F8               	addwfc	tblptru,f,c
 33713  0065BA                     	endif
 33714  0065BA  0009               	tblrd		*+
 33715  0065BC  CFF5 F080          	movff	tablat,___ftmul@f2
 33716  0065C0  0009               	tblrd		*+
 33717  0065C2  CFF5 F081          	movff	tablat,___ftmul@f2+1
 33718  0065C6  000A               	tblrd		*-
 33719  0065C8  CFF5 F082          	movff	tablat,___ftmul@f2+2
 33720  0065CC  0E00               	movlw	0
 33721  0065CE  0100               	movlb	0	; () banked
 33722  0065D0  6F6C               	movwf	(___awdiv@divisor+1)& (0+255),b
 33723  0065D2  0E0A               	movlw	10
 33724  0065D4  6F6B               	movwf	___awdiv@divisor& (0+255),b
 33725  0065D6  C095  F069         	movff	fround@prec,___awdiv@dividend
 33726  0065DA  0100               	movlb	0	; () banked
 33727  0065DC  6B6A               	clrf	(___awdiv@dividend+1)& (0+255),b
 33728  0065DE  EC79  F046         	call	___awdiv	;wreg free
 33729  0065E2  0E09               	movlw	9
 33730  0065E4  0100               	movlb	0	; () banked
 33731  0065E6  2569               	addwf	?___awdiv& (0+255),w,b
 33732  0065E8  0100               	movlb	0	; () banked
 33733  0065EA  6F71               	movwf	___wmul@multiplier& (0+255),b
 33734  0065EC  0E00               	movlw	0
 33735  0065EE  0100               	movlb	0	; () banked
 33736  0065F0  216A               	addwfc	(?___awdiv+1)& (0+255),w,b
 33737  0065F2  0100               	movlb	0	; () banked
 33738  0065F4  6F72               	movwf	(___wmul@multiplier+1)& (0+255),b
 33739  0065F6  0E00               	movlw	0
 33740  0065F8  0100               	movlb	0	; () banked
 33741  0065FA  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 33742  0065FC  0E03               	movlw	3
 33743  0065FE  6F73               	movwf	___wmul@multiplicand& (0+255),b
 33744  006600  EC3E  F050         	call	___wmul	;wreg free
 33745  006604  0E9F               	movlw	low __npowers_
 33746  006606  0100               	movlb	0	; () banked
 33747  006608  2571               	addwf	?___wmul& (0+255),w,b
 33748  00660A  6EF6               	movwf	tblptrl,c
 33749  00660C  0EEF               	movlw	high __npowers_
 33750  00660E  0100               	movlb	0	; () banked
 33751  006610  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 33752  006612  6EF7               	movwf	tblptrh,c
 33753  006614                     	if	1	;There are 3 active tblptr bytes
 33754  006614  6AF8               	clrf	tblptru,c
 33755  006616  0E00               	movlw	low (__mediumconst shr (0+16))
 33756  006618  22F8               	addwfc	tblptru,f,c
 33757  00661A                     	endif
 33758  00661A  0009               	tblrd		*+
 33759  00661C  CFF5 F07D          	movff	tablat,___ftmul@f1
 33760  006620  0009               	tblrd		*+
 33761  006622  CFF5 F07E          	movff	tablat,___ftmul@f1+1
 33762  006626  000A               	tblrd		*-
 33763  006628  CFF5 F07F          	movff	tablat,___ftmul@f1+2
 33764  00662C  ECC4  F03C         	call	___ftmul	;wreg free
 33765  006630  C07D  F092         	movff	?___ftmul,_fround$3917
 33766  006634  C07E  F093         	movff	?___ftmul+1,_fround$3917+1
 33767  006638  C07F  F094         	movff	?___ftmul+2,_fround$3917+2
 33768                           
 33769                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 33770  00663C  C092  F07D         	movff	_fround$3917,___ftmul@f1
 33771  006640  C093  F07E         	movff	_fround$3917+1,___ftmul@f1+1
 33772  006644  C094  F07F         	movff	_fround$3917+2,___ftmul@f1+2
 33773  006648  0E00               	movlw	0
 33774  00664A  0100               	movlb	0	; () banked
 33775  00664C  6F80               	movwf	___ftmul@f2& (0+255),b
 33776  00664E  0E00               	movlw	0
 33777  006650  0100               	movlb	0	; () banked
 33778  006652  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
 33779  006654  0E3F               	movlw	63
 33780  006656  0100               	movlb	0	; () banked
 33781  006658  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
 33782  00665A  ECC4  F03C         	call	___ftmul	;wreg free
 33783  00665E  D780               	goto	L23
 33784  006660  0012               	return	
 33785  006662  D000               	goto	l8858
 33786  006664                     l8858:
 33787                           
 33788                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 33789  006664  0100               	movlb	0	; () banked
 33790  006666  5195               	movf	fround@prec& (0+255),w,b
 33791  006668  0D03               	mullw	3
 33792  00666A  0E9F               	movlw	low __npowers_
 33793  00666C  24F3               	addwf	prodl,w,c
 33794  00666E  6EF6               	movwf	tblptrl,c
 33795  006670  0EEF               	movlw	high __npowers_
 33796  006672  20F4               	addwfc	prodh,w,c
 33797  006674  6EF7               	movwf	tblptrh,c
 33798  006676                     	if	1	;There are 3 active tblptr bytes
 33799  006676  6AF8               	clrf	tblptru,c
 33800  006678  0E00               	movlw	low (__mediumconst shr (0+16))
 33801  00667A  22F8               	addwfc	tblptru,f,c
 33802  00667C                     	endif
 33803  00667C  0009               	tblrd		*+
 33804  00667E  CFF5 F07D          	movff	tablat,___ftmul@f1
 33805  006682  0009               	tblrd		*+
 33806  006684  CFF5 F07E          	movff	tablat,___ftmul@f1+1
 33807  006688  000A               	tblrd		*-
 33808  00668A  CFF5 F07F          	movff	tablat,___ftmul@f1+2
 33809  00668E  0E00               	movlw	0
 33810  006690  0100               	movlb	0	; () banked
 33811  006692  6F80               	movwf	___ftmul@f2& (0+255),b
 33812  006694  0E00               	movlw	0
 33813  006696  0100               	movlb	0	; () banked
 33814  006698  6F81               	movwf	(___ftmul@f2+1)& (0+255),b
 33815  00669A  0E3F               	movlw	63
 33816  00669C  0100               	movlb	0	; () banked
 33817  00669E  6F82               	movwf	(___ftmul@f2+2)& (0+255),b
 33818  0066A0  ECC4  F03C         	call	___ftmul	;wreg free
 33819  0066A4  C07D  F08C         	movff	?___ftmul,?_fround
 33820  0066A8  C07E  F08D         	movff	?___ftmul+1,?_fround+1
 33821  0066AC  C07F  F08E         	movff	?___ftmul+2,?_fround+2
 33822  0066B0  0012               	return	
 33823  0066B2  0012               	return		;funcret
 33824  0066B4                     __end_of_fround:
 33825                           	opt stack 0
 33826                           tblptru	equ	0xFF8
 33827                           tblptrh	equ	0xFF7
 33828                           tblptrl	equ	0xFF6
 33829                           tablat	equ	0xFF5
 33830                           prodh	equ	0xFF4
 33831                           prodl	equ	0xFF3
 33832                           intcon	equ	0xFF2
 33833                           intcon2	equ	0xFF1
 33834                           indf0	equ	0xFEF
 33835                           postinc0	equ	0xFEE
 33836                           plusw0	equ	0xFEB
 33837                           fsr0h	equ	0xFEA
 33838                           fsr0l	equ	0xFE9
 33839                           wreg	equ	0xFE8
 33840                           indf1	equ	0xFE7
 33841                           postdec1	equ	0xFE5
 33842                           fsr1h	equ	0xFE2
 33843                           fsr1l	equ	0xFE1
 33844                           indf2	equ	0xFDF
 33845                           postinc2	equ	0xFDE
 33846                           postdec2	equ	0xFDD
 33847                           plusw2	equ	0xFDB
 33848                           fsr2h	equ	0xFDA
 33849                           fsr2l	equ	0xFD9
 33850                           status	equ	0xFD8
 33851                           
 33852 ;; *************** function ___wmul *****************
 33853 ;; Defined at:
 33854 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 33855 ;; Parameters:    Size  Location     Type
 33856 ;;  multiplier      2   17[BANK0 ] unsigned int 
 33857 ;;  multiplicand    2   19[BANK0 ] unsigned int 
 33858 ;; Auto vars:     Size  Location     Type
 33859 ;;  product         2   21[BANK0 ] unsigned int 
 33860 ;; Return value:  Size  Location     Type
 33861 ;;                  2   17[BANK0 ] unsigned int 
 33862 ;; Registers used:
 33863 ;;		wreg, status,2, status,0, prodl, prodh
 33864 ;; Tracked objects:
 33865 ;;		On entry : 0/0
 33866 ;;		On exit  : 0/0
 33867 ;;		Unchanged: 0/0
 33868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33869 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33870 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33872 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33873 ;;Total ram usage:        6 bytes
 33874 ;; Hardware stack levels used:    1
 33875 ;; Hardware stack levels required when called:    6
 33876 ;; This function calls:
 33877 ;;		Nothing
 33878 ;; This function is called by:
 33879 ;;		_fround
 33880 ;;		_scale
 33881 ;;		_sprintf
 33882 ;; This function uses a non-reentrant model
 33883 ;;
 33884                           
 33885                           	psect	text76
 33886  00A07C                     __ptext76:
 33887                           	opt stack 0
 33888  00A07C                     ___wmul:
 33889                           	opt stack 21
 33890                           
 33891                           ;incstack = 0
 33892  00A07C  0100               	movlb	0	; () banked
 33893  00A07E  5171               	movf	___wmul@multiplier& (0+255),w,b
 33894  00A080  0100               	movlb	0	; () banked
 33895  00A082  0373               	mulwf	___wmul@multiplicand& (0+255),b
 33896  00A084  CFF3 F075          	movff	prodl,___wmul@product
 33897  00A088  CFF4 F076          	movff	prodh,___wmul@product+1
 33898  00A08C  0100               	movlb	0	; () banked
 33899  00A08E  5171               	movf	___wmul@multiplier& (0+255),w,b
 33900  00A090  0100               	movlb	0	; () banked
 33901  00A092  0374               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 33902  00A094  50F3               	movf	prodl,w,c
 33903  00A096  0100               	movlb	0	; () banked
 33904  00A098  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 33905  00A09A  0100               	movlb	0	; () banked
 33906  00A09C  5172               	movf	(___wmul@multiplier+1)& (0+255),w,b
 33907  00A09E  0100               	movlb	0	; () banked
 33908  00A0A0  0373               	mulwf	___wmul@multiplicand& (0+255),b
 33909  00A0A2  50F3               	movf	prodl,w,c
 33910  00A0A4  0100               	movlb	0	; () banked
 33911  00A0A6  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 33912                           
 33913                           ; BSR set to: 0
 33914  00A0A8  C075  F071         	movff	___wmul@product,?___wmul
 33915  00A0AC  C076  F072         	movff	___wmul@product+1,?___wmul+1
 33916  00A0B0  0012               	return	
 33917                           
 33918                           ; BSR set to: 0
 33919                           
 33920                           ; BSR set to: 0
 33921  00A0B2  0012               	return		;funcret
 33922  00A0B4                     __end_of___wmul:
 33923                           	opt stack 0
 33924                           tblptru	equ	0xFF8
 33925                           tblptrh	equ	0xFF7
 33926                           tblptrl	equ	0xFF6
 33927                           tablat	equ	0xFF5
 33928                           prodh	equ	0xFF4
 33929                           prodl	equ	0xFF3
 33930                           intcon	equ	0xFF2
 33931                           intcon2	equ	0xFF1
 33932                           indf0	equ	0xFEF
 33933                           postinc0	equ	0xFEE
 33934                           plusw0	equ	0xFEB
 33935                           fsr0h	equ	0xFEA
 33936                           fsr0l	equ	0xFE9
 33937                           wreg	equ	0xFE8
 33938                           indf1	equ	0xFE7
 33939                           postdec1	equ	0xFE5
 33940                           fsr1h	equ	0xFE2
 33941                           fsr1l	equ	0xFE1
 33942                           indf2	equ	0xFDF
 33943                           postinc2	equ	0xFDE
 33944                           postdec2	equ	0xFDD
 33945                           plusw2	equ	0xFDB
 33946                           fsr2h	equ	0xFDA
 33947                           fsr2l	equ	0xFD9
 33948                           status	equ	0xFD8
 33949                           
 33950 ;; *************** function ___ftmul *****************
 33951 ;; Defined at:
 33952 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 33953 ;; Parameters:    Size  Location     Type
 33954 ;;  f1              3   29[BANK0 ] float 
 33955 ;;  f2              3   32[BANK0 ] float 
 33956 ;; Auto vars:     Size  Location     Type
 33957 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
 33958 ;;  sign            1   43[BANK0 ] unsigned char 
 33959 ;;  cntr            1   42[BANK0 ] unsigned char 
 33960 ;;  exp             1   38[BANK0 ] unsigned char 
 33961 ;; Return value:  Size  Location     Type
 33962 ;;                  3   29[BANK0 ] float 
 33963 ;; Registers used:
 33964 ;;		wreg, status,2, status,0, cstack
 33965 ;; Tracked objects:
 33966 ;;		On entry : 0/0
 33967 ;;		On exit  : 0/0
 33968 ;;		Unchanged: 0/0
 33969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33970 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33971 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33972 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33973 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33974 ;;Total ram usage:       15 bytes
 33975 ;; Hardware stack levels used:    1
 33976 ;; Hardware stack levels required when called:    7
 33977 ;; This function calls:
 33978 ;;		___ftpack
 33979 ;; This function is called by:
 33980 ;;		_ReadVoltage
 33981 ;;		_fround
 33982 ;;		_scale
 33983 ;;		_sprintf
 33984 ;; This function uses a non-reentrant model
 33985 ;;
 33986                           
 33987                           	psect	text77
 33988  007988                     __ptext77:
 33989                           	opt stack 0
 33990  007988                     ___ftmul:
 33991                           	opt stack 20
 33992                           
 33993                           ; BSR set to: 0
 33994                           ;incstack = 0
 33995  007988  C07F  F083         	movff	___ftmul@f1+2,??___ftmul
 33996  00798C  0100               	movlb	0	; () banked
 33997  00798E  6B84               	clrf	(??___ftmul+1)& (0+255),b
 33998  007990  6B85               	clrf	(??___ftmul+2)& (0+255),b
 33999  007992  0100               	movlb	0	; () banked
 34000  007994  357E               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 34001  007996  0100               	movlb	0	; () banked
 34002  007998  3783               	rlcf	??___ftmul& (0+255),f,b
 34003  00799A  E301               	bnc	u8431
 34004  00799C  8184               	bsf	(??___ftmul+1)& (0+255),0,b
 34005  00799E                     u8431:
 34006  00799E  0100               	movlb	0	; () banked
 34007  0079A0  5183               	movf	??___ftmul& (0+255),w,b
 34008  0079A2  0100               	movlb	0	; () banked
 34009  0079A4  6F86               	movwf	___ftmul@exp& (0+255),b
 34010  0079A6  0100               	movlb	0	; () banked
 34011  0079A8  5186               	movf	___ftmul@exp& (0+255),w,b
 34012  0079AA  A4D8               	btfss	status,2,c
 34013  0079AC  D00A               	goto	l8642
 34014                           
 34015                           ; BSR set to: 0
 34016  0079AE  0E00               	movlw	0
 34017  0079B0  0100               	movlb	0	; () banked
 34018  0079B2  6F7D               	movwf	?___ftmul& (0+255),b
 34019  0079B4  0E00               	movlw	0
 34020  0079B6  0100               	movlb	0	; () banked
 34021  0079B8  6F7E               	movwf	(?___ftmul+1)& (0+255),b
 34022  0079BA  0E00               	movlw	0
 34023  0079BC  0100               	movlb	0	; () banked
 34024  0079BE  6F7F               	movwf	(?___ftmul+2)& (0+255),b
 34025                           
 34026                           ; BSR set to: 0
 34027  0079C0  0012               	return	
 34028  0079C2                     l8642:
 34029                           
 34030                           ; BSR set to: 0
 34031  0079C2  C082  F083         	movff	___ftmul@f2+2,??___ftmul
 34032  0079C6  0100               	movlb	0	; () banked
 34033  0079C8  6B84               	clrf	(??___ftmul+1)& (0+255),b
 34034  0079CA  6B85               	clrf	(??___ftmul+2)& (0+255),b
 34035  0079CC  0100               	movlb	0	; () banked
 34036  0079CE  3581               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 34037  0079D0  0100               	movlb	0	; () banked
 34038  0079D2  3783               	rlcf	??___ftmul& (0+255),f,b
 34039  0079D4  E301               	bnc	u8451
 34040  0079D6  8184               	bsf	(??___ftmul+1)& (0+255),0,b
 34041  0079D8                     u8451:
 34042  0079D8  0100               	movlb	0	; () banked
 34043  0079DA  5183               	movf	??___ftmul& (0+255),w,b
 34044  0079DC  0100               	movlb	0	; () banked
 34045  0079DE  6F8B               	movwf	___ftmul@sign& (0+255),b
 34046  0079E0  0100               	movlb	0	; () banked
 34047  0079E2  518B               	movf	___ftmul@sign& (0+255),w,b
 34048  0079E4  A4D8               	btfss	status,2,c
 34049  0079E6  D00A               	goto	l8648
 34050                           
 34051                           ; BSR set to: 0
 34052  0079E8  0E00               	movlw	0
 34053  0079EA  0100               	movlb	0	; () banked
 34054  0079EC  6F7D               	movwf	?___ftmul& (0+255),b
 34055  0079EE  0E00               	movlw	0
 34056  0079F0  0100               	movlb	0	; () banked
 34057  0079F2  6F7E               	movwf	(?___ftmul+1)& (0+255),b
 34058  0079F4  0E00               	movlw	0
 34059  0079F6  0100               	movlb	0	; () banked
 34060  0079F8  6F7F               	movwf	(?___ftmul+2)& (0+255),b
 34061                           
 34062                           ; BSR set to: 0
 34063  0079FA  0012               	return	
 34064  0079FC                     l8648:
 34065                           
 34066                           ; BSR set to: 0
 34067  0079FC  0100               	movlb	0	; () banked
 34068  0079FE  518B               	movf	___ftmul@sign& (0+255),w,b
 34069  007A00  0F7B               	addlw	123
 34070  007A02  0100               	movlb	0	; () banked
 34071  007A04  2786               	addwf	___ftmul@exp& (0+255),f,b
 34072                           
 34073                           ; BSR set to: 0
 34074  007A06  C07F  F08B         	movff	___ftmul@f1+2,___ftmul@sign
 34075  007A0A  0100               	movlb	0	; () banked
 34076  007A0C  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
 34077  007A0E  0100               	movlb	0	; () banked
 34078  007A10  1B8B               	xorwf	___ftmul@sign& (0+255),f,b
 34079  007A12  0E80               	movlw	128
 34080  007A14  0100               	movlb	0	; () banked
 34081  007A16  178B               	andwf	___ftmul@sign& (0+255),f,b
 34082                           
 34083                           ; BSR set to: 0
 34084  007A18  0100               	movlb	0	; () banked
 34085  007A1A  8F7E               	bsf	(___ftmul@f1+1)& (0+255),7,b
 34086                           
 34087                           ; BSR set to: 0
 34088  007A1C  0100               	movlb	0	; () banked
 34089  007A1E  8F81               	bsf	(___ftmul@f2+1)& (0+255),7,b
 34090                           
 34091                           ; BSR set to: 0
 34092  007A20  0EFF               	movlw	255
 34093  007A22  0100               	movlb	0	; () banked
 34094  007A24  1780               	andwf	___ftmul@f2& (0+255),f,b
 34095  007A26  0EFF               	movlw	255
 34096  007A28  0100               	movlb	0	; () banked
 34097  007A2A  1781               	andwf	(___ftmul@f2+1)& (0+255),f,b
 34098  007A2C  0E00               	movlw	0
 34099  007A2E  0100               	movlb	0	; () banked
 34100  007A30  1782               	andwf	(___ftmul@f2+2)& (0+255),f,b
 34101                           
 34102                           ; BSR set to: 0
 34103  007A32  0E00               	movlw	0
 34104  007A34  0100               	movlb	0	; () banked
 34105  007A36  6F87               	movwf	___ftmul@f3_as_product& (0+255),b
 34106  007A38  0E00               	movlw	0
 34107  007A3A  0100               	movlb	0	; () banked
 34108  007A3C  6F88               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 34109  007A3E  0E00               	movlw	0
 34110  007A40  0100               	movlb	0	; () banked
 34111  007A42  6F89               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 34112                           
 34113                           ; BSR set to: 0
 34114  007A44  0E07               	movlw	7
 34115  007A46  0100               	movlb	0	; () banked
 34116  007A48  6F8A               	movwf	___ftmul@cntr& (0+255),b
 34117  007A4A  D000               	goto	l8662
 34118  007A4C                     l8662:
 34119                           
 34120                           ; BSR set to: 0
 34121  007A4C  0100               	movlb	0	; () banked
 34122  007A4E  A17D               	btfss	___ftmul@f1& (0+255),0,b
 34123  007A50  D00D               	goto	l8666
 34124                           
 34125                           ; BSR set to: 0
 34126  007A52  0100               	movlb	0	; () banked
 34127  007A54  5180               	movf	___ftmul@f2& (0+255),w,b
 34128  007A56  0100               	movlb	0	; () banked
 34129  007A58  2787               	addwf	___ftmul@f3_as_product& (0+255),f,b
 34130  007A5A  0100               	movlb	0	; () banked
 34131  007A5C  5181               	movf	(___ftmul@f2+1)& (0+255),w,b
 34132  007A5E  0100               	movlb	0	; () banked
 34133  007A60  2388               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 34134  007A62  0100               	movlb	0	; () banked
 34135  007A64  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
 34136  007A66  0100               	movlb	0	; () banked
 34137  007A68  2389               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 34138  007A6A  D000               	goto	l8666
 34139  007A6C                     l8666:
 34140                           
 34141                           ; BSR set to: 0
 34142  007A6C  0100               	movlb	0	; () banked
 34143  007A6E  90D8               	bcf	status,0,c
 34144  007A70  337F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 34145  007A72  337E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 34146  007A74  337D               	rrcf	___ftmul@f1& (0+255),f,b
 34147  007A76  0100               	movlb	0	; () banked
 34148  007A78  90D8               	bcf	status,0,c
 34149  007A7A  3780               	rlcf	___ftmul@f2& (0+255),f,b
 34150  007A7C  3781               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 34151  007A7E  3782               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 34152                           
 34153                           ; BSR set to: 0
 34154  007A80  0100               	movlb	0	; () banked
 34155  007A82  2F8A               	decfsz	___ftmul@cntr& (0+255),f,b
 34156  007A84  D7E3               	goto	l8662
 34157  007A86  D000               	goto	l8670
 34158  007A88                     l8670:
 34159                           
 34160                           ; BSR set to: 0
 34161  007A88  0E09               	movlw	9
 34162  007A8A  0100               	movlb	0	; () banked
 34163  007A8C  6F8A               	movwf	___ftmul@cntr& (0+255),b
 34164  007A8E  D000               	goto	l8672
 34165  007A90                     l8672:
 34166                           
 34167                           ; BSR set to: 0
 34168  007A90  0100               	movlb	0	; () banked
 34169  007A92  A17D               	btfss	___ftmul@f1& (0+255),0,b
 34170  007A94  D00D               	goto	l8676
 34171                           
 34172                           ; BSR set to: 0
 34173  007A96  0100               	movlb	0	; () banked
 34174  007A98  5180               	movf	___ftmul@f2& (0+255),w,b
 34175  007A9A  0100               	movlb	0	; () banked
 34176  007A9C  2787               	addwf	___ftmul@f3_as_product& (0+255),f,b
 34177  007A9E  0100               	movlb	0	; () banked
 34178  007AA0  5181               	movf	(___ftmul@f2+1)& (0+255),w,b
 34179  007AA2  0100               	movlb	0	; () banked
 34180  007AA4  2388               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 34181  007AA6  0100               	movlb	0	; () banked
 34182  007AA8  5182               	movf	(___ftmul@f2+2)& (0+255),w,b
 34183  007AAA  0100               	movlb	0	; () banked
 34184  007AAC  2389               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 34185  007AAE  D000               	goto	l8676
 34186  007AB0                     l8676:
 34187                           
 34188                           ; BSR set to: 0
 34189  007AB0  0100               	movlb	0	; () banked
 34190  007AB2  90D8               	bcf	status,0,c
 34191  007AB4  337F               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 34192  007AB6  337E               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 34193  007AB8  337D               	rrcf	___ftmul@f1& (0+255),f,b
 34194  007ABA  0100               	movlb	0	; () banked
 34195  007ABC  90D8               	bcf	status,0,c
 34196  007ABE  3389               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 34197  007AC0  3388               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 34198  007AC2  3387               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 34199                           
 34200                           ; BSR set to: 0
 34201  007AC4  0100               	movlb	0	; () banked
 34202  007AC6  2F8A               	decfsz	___ftmul@cntr& (0+255),f,b
 34203  007AC8  D7E3               	goto	l8672
 34204  007ACA  D000               	goto	l8680
 34205  007ACC                     l8680:
 34206                           
 34207                           ; BSR set to: 0
 34208  007ACC  C087  F063         	movff	___ftmul@f3_as_product,___ftpack@arg
 34209  007AD0  C088  F064         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 34210  007AD4  C089  F065         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 34211  007AD8  C086  F066         	movff	___ftmul@exp,___ftpack@exp
 34212  007ADC  C08B  F067         	movff	___ftmul@sign,___ftpack@sign
 34213  007AE0  EC54  F041         	call	___ftpack	;wreg free
 34214  007AE4  C063  F07D         	movff	?___ftpack,?___ftmul
 34215  007AE8  C064  F07E         	movff	?___ftpack+1,?___ftmul+1
 34216  007AEC  C065  F07F         	movff	?___ftpack+2,?___ftmul+2
 34217  007AF0  0012               	return	
 34218  007AF2  0012               	return		;funcret
 34219  007AF4                     __end_of___ftmul:
 34220                           	opt stack 0
 34221                           tblptru	equ	0xFF8
 34222                           tblptrh	equ	0xFF7
 34223                           tblptrl	equ	0xFF6
 34224                           tablat	equ	0xFF5
 34225                           prodh	equ	0xFF4
 34226                           prodl	equ	0xFF3
 34227                           intcon	equ	0xFF2
 34228                           intcon2	equ	0xFF1
 34229                           indf0	equ	0xFEF
 34230                           postinc0	equ	0xFEE
 34231                           plusw0	equ	0xFEB
 34232                           fsr0h	equ	0xFEA
 34233                           fsr0l	equ	0xFE9
 34234                           wreg	equ	0xFE8
 34235                           indf1	equ	0xFE7
 34236                           postdec1	equ	0xFE5
 34237                           fsr1h	equ	0xFE2
 34238                           fsr1l	equ	0xFE1
 34239                           indf2	equ	0xFDF
 34240                           postinc2	equ	0xFDE
 34241                           postdec2	equ	0xFDD
 34242                           plusw2	equ	0xFDB
 34243                           fsr2h	equ	0xFDA
 34244                           fsr2l	equ	0xFD9
 34245                           status	equ	0xFD8
 34246                           
 34247 ;; *************** function ___awmod *****************
 34248 ;; Defined at:
 34249 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 34250 ;; Parameters:    Size  Location     Type
 34251 ;;  dividend        2    3[BANK0 ] int 
 34252 ;;  divisor         2    5[BANK0 ] int 
 34253 ;; Auto vars:     Size  Location     Type
 34254 ;;  sign            1    8[BANK0 ] unsigned char 
 34255 ;;  counter         1    7[BANK0 ] unsigned char 
 34256 ;; Return value:  Size  Location     Type
 34257 ;;                  2    3[BANK0 ] int 
 34258 ;; Registers used:
 34259 ;;		wreg, status,2, status,0
 34260 ;; Tracked objects:
 34261 ;;		On entry : 0/0
 34262 ;;		On exit  : 0/0
 34263 ;;		Unchanged: 0/0
 34264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34265 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34266 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34268 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34269 ;;Total ram usage:        6 bytes
 34270 ;; Hardware stack levels used:    1
 34271 ;; Hardware stack levels required when called:    6
 34272 ;; This function calls:
 34273 ;;		Nothing
 34274 ;; This function is called by:
 34275 ;;		_fround
 34276 ;;		_scale
 34277 ;; This function uses a non-reentrant model
 34278 ;;
 34279                           
 34280                           	psect	text78
 34281  009252                     __ptext78:
 34282                           	opt stack 0
 34283  009252                     ___awmod:
 34284                           	opt stack 21
 34285                           
 34286                           ;incstack = 0
 34287  009252  0E00               	movlw	0
 34288  009254  0100               	movlb	0	; () banked
 34289  009256  6F68               	movwf	___awmod@sign& (0+255),b
 34290                           
 34291                           ; BSR set to: 0
 34292  009258  0100               	movlb	0	; () banked
 34293  00925A  AF64               	btfss	(___awmod@dividend+1)& (0+255),7,b
 34294  00925C  D009               	goto	l8736
 34295                           
 34296                           ; BSR set to: 0
 34297  00925E  0100               	movlb	0	; () banked
 34298  009260  6D63               	negf	___awmod@dividend& (0+255),b
 34299  009262  1F64               	comf	(___awmod@dividend+1)& (0+255),f,b
 34300  009264  B0D8               	btfsc	status,0,c
 34301  009266  2B64               	incf	(___awmod@dividend+1)& (0+255),f,b
 34302                           
 34303                           ; BSR set to: 0
 34304  009268  0E01               	movlw	1
 34305  00926A  0100               	movlb	0	; () banked
 34306  00926C  6F68               	movwf	___awmod@sign& (0+255),b
 34307  00926E  D000               	goto	l8736
 34308  009270                     l8736:
 34309                           
 34310                           ; BSR set to: 0
 34311  009270  0100               	movlb	0	; () banked
 34312  009272  AF66               	btfss	(___awmod@divisor+1)& (0+255),7,b
 34313  009274  D006               	goto	l8740
 34314                           
 34315                           ; BSR set to: 0
 34316  009276  0100               	movlb	0	; () banked
 34317  009278  6D65               	negf	___awmod@divisor& (0+255),b
 34318  00927A  1F66               	comf	(___awmod@divisor+1)& (0+255),f,b
 34319  00927C  B0D8               	btfsc	status,0,c
 34320  00927E  2B66               	incf	(___awmod@divisor+1)& (0+255),f,b
 34321  009280  D000               	goto	l8740
 34322  009282                     l8740:
 34323                           
 34324                           ; BSR set to: 0
 34325  009282  0100               	movlb	0	; () banked
 34326  009284  5165               	movf	___awmod@divisor& (0+255),w,b
 34327  009286  0100               	movlb	0	; () banked
 34328  009288  1166               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 34329  00928A  B4D8               	btfsc	status,2,c
 34330  00928C  D02B               	goto	l8756
 34331                           
 34332                           ; BSR set to: 0
 34333  00928E  0E01               	movlw	1
 34334  009290  0100               	movlb	0	; () banked
 34335  009292  6F67               	movwf	___awmod@counter& (0+255),b
 34336  009294  D007               	goto	l8746
 34337  009296                     l8744:
 34338                           
 34339                           ; BSR set to: 0
 34340  009296  0100               	movlb	0	; () banked
 34341  009298  90D8               	bcf	status,0,c
 34342  00929A  3765               	rlcf	___awmod@divisor& (0+255),f,b
 34343  00929C  3766               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 34344  00929E  0100               	movlb	0	; () banked
 34345  0092A0  2B67               	incf	___awmod@counter& (0+255),f,b
 34346  0092A2  D000               	goto	l8746
 34347  0092A4                     l8746:
 34348                           
 34349                           ; BSR set to: 0
 34350  0092A4  0100               	movlb	0	; () banked
 34351  0092A6  BF66               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 34352  0092A8  D002               	goto	l8748
 34353  0092AA  D7F5               	goto	l8744
 34354                           
 34355                           ; BSR set to: 0
 34356  0092AC  D000               	goto	l8748
 34357  0092AE                     l8748:
 34358                           
 34359                           ; BSR set to: 0
 34360  0092AE  0100               	movlb	0	; () banked
 34361  0092B0  5165               	movf	___awmod@divisor& (0+255),w,b
 34362  0092B2  0100               	movlb	0	; () banked
 34363  0092B4  5D63               	subwf	___awmod@dividend& (0+255),w,b
 34364  0092B6  0100               	movlb	0	; () banked
 34365  0092B8  5166               	movf	(___awmod@divisor+1)& (0+255),w,b
 34366  0092BA  0100               	movlb	0	; () banked
 34367  0092BC  5964               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 34368  0092BE  A0D8               	btfss	status,0,c
 34369  0092C0  D009               	goto	l8752
 34370                           
 34371                           ; BSR set to: 0
 34372  0092C2  0100               	movlb	0	; () banked
 34373  0092C4  5165               	movf	___awmod@divisor& (0+255),w,b
 34374  0092C6  0100               	movlb	0	; () banked
 34375  0092C8  5F63               	subwf	___awmod@dividend& (0+255),f,b
 34376  0092CA  0100               	movlb	0	; () banked
 34377  0092CC  5166               	movf	(___awmod@divisor+1)& (0+255),w,b
 34378  0092CE  0100               	movlb	0	; () banked
 34379  0092D0  5B64               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 34380  0092D2  D000               	goto	l8752
 34381  0092D4                     l8752:
 34382                           
 34383                           ; BSR set to: 0
 34384  0092D4  0100               	movlb	0	; () banked
 34385  0092D6  90D8               	bcf	status,0,c
 34386  0092D8  3366               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 34387  0092DA  3365               	rrcf	___awmod@divisor& (0+255),f,b
 34388                           
 34389                           ; BSR set to: 0
 34390  0092DC  0100               	movlb	0	; () banked
 34391  0092DE  2F67               	decfsz	___awmod@counter& (0+255),f,b
 34392  0092E0  D7E6               	goto	l8748
 34393                           
 34394                           ; BSR set to: 0
 34395  0092E2  D000               	goto	l8756
 34396  0092E4                     l8756:
 34397                           
 34398                           ; BSR set to: 0
 34399  0092E4  0100               	movlb	0	; () banked
 34400  0092E6  5168               	movf	___awmod@sign& (0+255),w,b
 34401  0092E8  0100               	movlb	0	; () banked
 34402  0092EA  B4D8               	btfsc	status,2,c
 34403  0092EC  D006               	goto	l8760
 34404                           
 34405                           ; BSR set to: 0
 34406  0092EE  0100               	movlb	0	; () banked
 34407  0092F0  6D63               	negf	___awmod@dividend& (0+255),b
 34408  0092F2  1F64               	comf	(___awmod@dividend+1)& (0+255),f,b
 34409  0092F4  B0D8               	btfsc	status,0,c
 34410  0092F6  2B64               	incf	(___awmod@dividend+1)& (0+255),f,b
 34411  0092F8  D000               	goto	l8760
 34412  0092FA                     l8760:
 34413                           
 34414                           ; BSR set to: 0
 34415  0092FA  C063  F063         	movff	___awmod@dividend,?___awmod
 34416  0092FE  C064  F064         	movff	___awmod@dividend+1,?___awmod+1
 34417  009302  0012               	return	
 34418                           
 34419                           ; BSR set to: 0
 34420                           
 34421                           ; BSR set to: 0
 34422  009304  0012               	return		;funcret
 34423  009306                     __end_of___awmod:
 34424                           	opt stack 0
 34425                           tblptru	equ	0xFF8
 34426                           tblptrh	equ	0xFF7
 34427                           tblptrl	equ	0xFF6
 34428                           tablat	equ	0xFF5
 34429                           prodh	equ	0xFF4
 34430                           prodl	equ	0xFF3
 34431                           intcon	equ	0xFF2
 34432                           intcon2	equ	0xFF1
 34433                           indf0	equ	0xFEF
 34434                           postinc0	equ	0xFEE
 34435                           plusw0	equ	0xFEB
 34436                           fsr0h	equ	0xFEA
 34437                           fsr0l	equ	0xFE9
 34438                           wreg	equ	0xFE8
 34439                           indf1	equ	0xFE7
 34440                           postdec1	equ	0xFE5
 34441                           fsr1h	equ	0xFE2
 34442                           fsr1l	equ	0xFE1
 34443                           indf2	equ	0xFDF
 34444                           postinc2	equ	0xFDE
 34445                           postdec2	equ	0xFDD
 34446                           plusw2	equ	0xFDB
 34447                           fsr2h	equ	0xFDA
 34448                           fsr2l	equ	0xFD9
 34449                           status	equ	0xFD8
 34450                           
 34451 ;; *************** function ___awdiv *****************
 34452 ;; Defined at:
 34453 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 34454 ;; Parameters:    Size  Location     Type
 34455 ;;  dividend        2    9[BANK0 ] int 
 34456 ;;  divisor         2   11[BANK0 ] int 
 34457 ;; Auto vars:     Size  Location     Type
 34458 ;;  quotient        2   15[BANK0 ] int 
 34459 ;;  sign            1   14[BANK0 ] unsigned char 
 34460 ;;  counter         1   13[BANK0 ] unsigned char 
 34461 ;; Return value:  Size  Location     Type
 34462 ;;                  2    9[BANK0 ] int 
 34463 ;; Registers used:
 34464 ;;		wreg, status,2, status,0
 34465 ;; Tracked objects:
 34466 ;;		On entry : 0/0
 34467 ;;		On exit  : 0/0
 34468 ;;		Unchanged: 0/0
 34469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34470 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34471 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34473 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34474 ;;Total ram usage:        8 bytes
 34475 ;; Hardware stack levels used:    1
 34476 ;; Hardware stack levels required when called:    6
 34477 ;; This function calls:
 34478 ;;		Nothing
 34479 ;; This function is called by:
 34480 ;;		_fround
 34481 ;;		_scale
 34482 ;;		_sprintf
 34483 ;; This function uses a non-reentrant model
 34484 ;;
 34485                           
 34486                           	psect	text79
 34487  008CF2                     __ptext79:
 34488                           	opt stack 0
 34489  008CF2                     ___awdiv:
 34490                           	opt stack 21
 34491                           
 34492                           ; BSR set to: 0
 34493                           ;incstack = 0
 34494  008CF2  0E00               	movlw	0
 34495  008CF4  0100               	movlb	0	; () banked
 34496  008CF6  6F6E               	movwf	___awdiv@sign& (0+255),b
 34497                           
 34498                           ; BSR set to: 0
 34499  008CF8  0100               	movlb	0	; () banked
 34500  008CFA  AF6C               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 34501  008CFC  D009               	goto	l8692
 34502                           
 34503                           ; BSR set to: 0
 34504  008CFE  0100               	movlb	0	; () banked
 34505  008D00  6D6B               	negf	___awdiv@divisor& (0+255),b
 34506  008D02  1F6C               	comf	(___awdiv@divisor+1)& (0+255),f,b
 34507  008D04  B0D8               	btfsc	status,0,c
 34508  008D06  2B6C               	incf	(___awdiv@divisor+1)& (0+255),f,b
 34509                           
 34510                           ; BSR set to: 0
 34511  008D08  0E01               	movlw	1
 34512  008D0A  0100               	movlb	0	; () banked
 34513  008D0C  6F6E               	movwf	___awdiv@sign& (0+255),b
 34514  008D0E  D000               	goto	l8692
 34515  008D10                     l8692:
 34516                           
 34517                           ; BSR set to: 0
 34518  008D10  0100               	movlb	0	; () banked
 34519  008D12  AF6A               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 34520  008D14  D009               	goto	l8698
 34521                           
 34522                           ; BSR set to: 0
 34523  008D16  0100               	movlb	0	; () banked
 34524  008D18  6D69               	negf	___awdiv@dividend& (0+255),b
 34525  008D1A  1F6A               	comf	(___awdiv@dividend+1)& (0+255),f,b
 34526  008D1C  B0D8               	btfsc	status,0,c
 34527  008D1E  2B6A               	incf	(___awdiv@dividend+1)& (0+255),f,b
 34528                           
 34529                           ; BSR set to: 0
 34530  008D20  0E01               	movlw	1
 34531  008D22  0100               	movlb	0	; () banked
 34532  008D24  1B6E               	xorwf	___awdiv@sign& (0+255),f,b
 34533  008D26  D000               	goto	l8698
 34534  008D28                     l8698:
 34535                           
 34536                           ; BSR set to: 0
 34537  008D28  0E00               	movlw	0
 34538  008D2A  0100               	movlb	0	; () banked
 34539  008D2C  6F70               	movwf	(___awdiv@quotient+1)& (0+255),b
 34540  008D2E  0E00               	movlw	0
 34541  008D30  6F6F               	movwf	___awdiv@quotient& (0+255),b
 34542                           
 34543                           ; BSR set to: 0
 34544  008D32  0100               	movlb	0	; () banked
 34545  008D34  516B               	movf	___awdiv@divisor& (0+255),w,b
 34546  008D36  0100               	movlb	0	; () banked
 34547  008D38  116C               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 34548  008D3A  B4D8               	btfsc	status,2,c
 34549  008D3C  D031               	goto	l8720
 34550                           
 34551                           ; BSR set to: 0
 34552  008D3E  0E01               	movlw	1
 34553  008D40  0100               	movlb	0	; () banked
 34554  008D42  6F6D               	movwf	___awdiv@counter& (0+255),b
 34555  008D44  D007               	goto	l8706
 34556  008D46                     l8704:
 34557                           
 34558                           ; BSR set to: 0
 34559  008D46  0100               	movlb	0	; () banked
 34560  008D48  90D8               	bcf	status,0,c
 34561  008D4A  376B               	rlcf	___awdiv@divisor& (0+255),f,b
 34562  008D4C  376C               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 34563  008D4E  0100               	movlb	0	; () banked
 34564  008D50  2B6D               	incf	___awdiv@counter& (0+255),f,b
 34565  008D52  D000               	goto	l8706
 34566  008D54                     l8706:
 34567                           
 34568                           ; BSR set to: 0
 34569  008D54  0100               	movlb	0	; () banked
 34570  008D56  BF6C               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 34571  008D58  D002               	goto	l8708
 34572  008D5A  D7F5               	goto	l8704
 34573                           
 34574                           ; BSR set to: 0
 34575  008D5C  D000               	goto	l8708
 34576  008D5E                     l8708:
 34577                           
 34578                           ; BSR set to: 0
 34579  008D5E  0100               	movlb	0	; () banked
 34580  008D60  90D8               	bcf	status,0,c
 34581  008D62  376F               	rlcf	___awdiv@quotient& (0+255),f,b
 34582  008D64  3770               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 34583                           
 34584                           ; BSR set to: 0
 34585  008D66  0100               	movlb	0	; () banked
 34586  008D68  516B               	movf	___awdiv@divisor& (0+255),w,b
 34587  008D6A  0100               	movlb	0	; () banked
 34588  008D6C  5D69               	subwf	___awdiv@dividend& (0+255),w,b
 34589  008D6E  0100               	movlb	0	; () banked
 34590  008D70  516C               	movf	(___awdiv@divisor+1)& (0+255),w,b
 34591  008D72  0100               	movlb	0	; () banked
 34592  008D74  596A               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 34593  008D76  A0D8               	btfss	status,0,c
 34594  008D78  D00B               	goto	l8716
 34595                           
 34596                           ; BSR set to: 0
 34597  008D7A  0100               	movlb	0	; () banked
 34598  008D7C  516B               	movf	___awdiv@divisor& (0+255),w,b
 34599  008D7E  0100               	movlb	0	; () banked
 34600  008D80  5F69               	subwf	___awdiv@dividend& (0+255),f,b
 34601  008D82  0100               	movlb	0	; () banked
 34602  008D84  516C               	movf	(___awdiv@divisor+1)& (0+255),w,b
 34603  008D86  0100               	movlb	0	; () banked
 34604  008D88  5B6A               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 34605                           
 34606                           ; BSR set to: 0
 34607  008D8A  0100               	movlb	0	; () banked
 34608  008D8C  816F               	bsf	___awdiv@quotient& (0+255),0,b
 34609  008D8E  D000               	goto	l8716
 34610  008D90                     l8716:
 34611                           
 34612                           ; BSR set to: 0
 34613  008D90  0100               	movlb	0	; () banked
 34614  008D92  90D8               	bcf	status,0,c
 34615  008D94  336C               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 34616  008D96  336B               	rrcf	___awdiv@divisor& (0+255),f,b
 34617                           
 34618                           ; BSR set to: 0
 34619  008D98  0100               	movlb	0	; () banked
 34620  008D9A  2F6D               	decfsz	___awdiv@counter& (0+255),f,b
 34621  008D9C  D7E0               	goto	l8708
 34622                           
 34623                           ; BSR set to: 0
 34624  008D9E  D000               	goto	l8720
 34625  008DA0                     l8720:
 34626                           
 34627                           ; BSR set to: 0
 34628  008DA0  0100               	movlb	0	; () banked
 34629  008DA2  516E               	movf	___awdiv@sign& (0+255),w,b
 34630  008DA4  0100               	movlb	0	; () banked
 34631  008DA6  B4D8               	btfsc	status,2,c
 34632  008DA8  D006               	goto	l8724
 34633                           
 34634                           ; BSR set to: 0
 34635  008DAA  0100               	movlb	0	; () banked
 34636  008DAC  6D6F               	negf	___awdiv@quotient& (0+255),b
 34637  008DAE  1F70               	comf	(___awdiv@quotient+1)& (0+255),f,b
 34638  008DB0  B0D8               	btfsc	status,0,c
 34639  008DB2  2B70               	incf	(___awdiv@quotient+1)& (0+255),f,b
 34640  008DB4  D000               	goto	l8724
 34641  008DB6                     l8724:
 34642                           
 34643                           ; BSR set to: 0
 34644  008DB6  C06F  F069         	movff	___awdiv@quotient,?___awdiv
 34645  008DBA  C070  F06A         	movff	___awdiv@quotient+1,?___awdiv+1
 34646  008DBE  0012               	return	
 34647                           
 34648                           ; BSR set to: 0
 34649                           
 34650                           ; BSR set to: 0
 34651  008DC0  0012               	return		;funcret
 34652  008DC2                     __end_of___awdiv:
 34653                           	opt stack 0
 34654                           tblptru	equ	0xFF8
 34655                           tblptrh	equ	0xFF7
 34656                           tblptrl	equ	0xFF6
 34657                           tablat	equ	0xFF5
 34658                           prodh	equ	0xFF4
 34659                           prodl	equ	0xFF3
 34660                           intcon	equ	0xFF2
 34661                           intcon2	equ	0xFF1
 34662                           indf0	equ	0xFEF
 34663                           postinc0	equ	0xFEE
 34664                           plusw0	equ	0xFEB
 34665                           fsr0h	equ	0xFEA
 34666                           fsr0l	equ	0xFE9
 34667                           wreg	equ	0xFE8
 34668                           indf1	equ	0xFE7
 34669                           postdec1	equ	0xFE5
 34670                           fsr1h	equ	0xFE2
 34671                           fsr1l	equ	0xFE1
 34672                           indf2	equ	0xFDF
 34673                           postinc2	equ	0xFDE
 34674                           postdec2	equ	0xFDD
 34675                           plusw2	equ	0xFDB
 34676                           fsr2h	equ	0xFDA
 34677                           fsr2l	equ	0xFD9
 34678                           status	equ	0xFD8
 34679                           
 34680 ;; *************** function __tdiv_to_l_ *****************
 34681 ;; Defined at:
 34682 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 34683 ;; Parameters:    Size  Location     Type
 34684 ;;  f1              3    3[BANK0 ] float 
 34685 ;;  f2              3    6[BANK0 ] float 
 34686 ;; Auto vars:     Size  Location     Type
 34687 ;;  quot            4   12[BANK0 ] unsigned long 
 34688 ;;  exp1            1   17[BANK0 ] unsigned char 
 34689 ;;  cntr            1   16[BANK0 ] unsigned char 
 34690 ;; Return value:  Size  Location     Type
 34691 ;;                  4    3[BANK0 ] unsigned long 
 34692 ;; Registers used:
 34693 ;;		wreg, status,2, status,0
 34694 ;; Tracked objects:
 34695 ;;		On entry : 0/0
 34696 ;;		On exit  : 0/0
 34697 ;;		Unchanged: 0/0
 34698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34699 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34700 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34701 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34702 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34703 ;;Total ram usage:       15 bytes
 34704 ;; Hardware stack levels used:    1
 34705 ;; Hardware stack levels required when called:    6
 34706 ;; This function calls:
 34707 ;;		Nothing
 34708 ;; This function is called by:
 34709 ;;		_sprintf
 34710 ;; This function uses a non-reentrant model
 34711 ;;
 34712                           
 34713                           	psect	text80
 34714  007356                     __ptext80:
 34715                           	opt stack 0
 34716  007356                     __tdiv_to_l_:
 34717                           	opt stack 22
 34718                           
 34719                           ; BSR set to: 0
 34720                           ;incstack = 0
 34721  007356  C065  F069         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 34722  00735A  0100               	movlb	0	; () banked
 34723  00735C  6B6A               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 34724  00735E  6B6B               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 34725  007360  0100               	movlb	0	; () banked
 34726  007362  3564               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 34727  007364  0100               	movlb	0	; () banked
 34728  007366  3769               	rlcf	??__tdiv_to_l_& (0+255),f,b
 34729  007368  E301               	bnc	u8761
 34730  00736A  816A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 34731  00736C                     u8761:
 34732  00736C  0100               	movlb	0	; () banked
 34733  00736E  5169               	movf	??__tdiv_to_l_& (0+255),w,b
 34734  007370  0100               	movlb	0	; () banked
 34735  007372  6F71               	movwf	__tdiv_to_l_@exp1& (0+255),b
 34736  007374  0100               	movlb	0	; () banked
 34737  007376  5171               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 34738  007378  A4D8               	btfss	status,2,c
 34739  00737A  D00A               	goto	l8918
 34740                           
 34741                           ; BSR set to: 0
 34742  00737C  0E00               	movlw	0
 34743  00737E  0100               	movlb	0	; () banked
 34744  007380  6F63               	movwf	?__tdiv_to_l_& (0+255),b
 34745  007382  0E00               	movlw	0
 34746  007384  6F64               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 34747  007386  0E00               	movlw	0
 34748  007388  6F65               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 34749  00738A  0E00               	movlw	0
 34750  00738C  6F66               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 34751                           
 34752                           ; BSR set to: 0
 34753  00738E  0012               	return	
 34754  007390                     l8918:
 34755                           
 34756                           ; BSR set to: 0
 34757  007390  C068  F069         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 34758  007394  0100               	movlb	0	; () banked
 34759  007396  6B6A               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 34760  007398  6B6B               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 34761  00739A  0100               	movlb	0	; () banked
 34762  00739C  3567               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 34763  00739E  0100               	movlb	0	; () banked
 34764  0073A0  3769               	rlcf	??__tdiv_to_l_& (0+255),f,b
 34765  0073A2  E301               	bnc	u8781
 34766  0073A4  816A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 34767  0073A6                     u8781:
 34768  0073A6  0100               	movlb	0	; () banked
 34769  0073A8  5169               	movf	??__tdiv_to_l_& (0+255),w,b
 34770  0073AA  0100               	movlb	0	; () banked
 34771  0073AC  6F70               	movwf	__tdiv_to_l_@cntr& (0+255),b
 34772  0073AE  0100               	movlb	0	; () banked
 34773  0073B0  5170               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 34774  0073B2  A4D8               	btfss	status,2,c
 34775  0073B4  D00A               	goto	l8924
 34776                           
 34777                           ; BSR set to: 0
 34778  0073B6  0E00               	movlw	0
 34779  0073B8  0100               	movlb	0	; () banked
 34780  0073BA  6F63               	movwf	?__tdiv_to_l_& (0+255),b
 34781  0073BC  0E00               	movlw	0
 34782  0073BE  6F64               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 34783  0073C0  0E00               	movlw	0
 34784  0073C2  6F65               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 34785  0073C4  0E00               	movlw	0
 34786  0073C6  6F66               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 34787                           
 34788                           ; BSR set to: 0
 34789  0073C8  0012               	return	
 34790  0073CA                     l8924:
 34791                           
 34792                           ; BSR set to: 0
 34793  0073CA  0100               	movlb	0	; () banked
 34794  0073CC  8F64               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 34795                           
 34796                           ; BSR set to: 0
 34797  0073CE  0EFF               	movlw	255
 34798  0073D0  0100               	movlb	0	; () banked
 34799  0073D2  1763               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 34800  0073D4  0EFF               	movlw	255
 34801  0073D6  0100               	movlb	0	; () banked
 34802  0073D8  1764               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 34803  0073DA  0E00               	movlw	0
 34804  0073DC  0100               	movlb	0	; () banked
 34805  0073DE  1765               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 34806  0073E0  0100               	movlb	0	; () banked
 34807  0073E2  8F67               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 34808                           
 34809                           ; BSR set to: 0
 34810  0073E4  0EFF               	movlw	255
 34811  0073E6  0100               	movlb	0	; () banked
 34812  0073E8  1766               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 34813  0073EA  0EFF               	movlw	255
 34814  0073EC  0100               	movlb	0	; () banked
 34815  0073EE  1767               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 34816  0073F0  0E00               	movlw	0
 34817  0073F2  0100               	movlb	0	; () banked
 34818  0073F4  1768               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 34819                           
 34820                           ; BSR set to: 0
 34821  0073F6  0E00               	movlw	0
 34822  0073F8  0100               	movlb	0	; () banked
 34823  0073FA  6F6C               	movwf	__tdiv_to_l_@quot& (0+255),b
 34824  0073FC  0E00               	movlw	0
 34825  0073FE  6F6D               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 34826  007400  0E00               	movlw	0
 34827  007402  6F6E               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 34828  007404  0E00               	movlw	0
 34829  007406  6F6F               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 34830                           
 34831                           ; BSR set to: 0
 34832  007408  0E7F               	movlw	127
 34833  00740A  0100               	movlb	0	; () banked
 34834  00740C  5F71               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 34835                           
 34836                           ; BSR set to: 0
 34837  00740E  0100               	movlb	0	; () banked
 34838  007410  5170               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 34839  007412  0F98               	addlw	152
 34840  007414  0100               	movlb	0	; () banked
 34841  007416  5F71               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 34842                           
 34843                           ; BSR set to: 0
 34844  007418  0E18               	movlw	24
 34845  00741A  0100               	movlb	0	; () banked
 34846  00741C  6F70               	movwf	__tdiv_to_l_@cntr& (0+255),b
 34847  00741E                     l2909:
 34848                           
 34849                           ; BSR set to: 0
 34850  00741E  0100               	movlb	0	; () banked
 34851  007420  90D8               	bcf	status,0,c
 34852  007422  376C               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 34853  007424  376D               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 34854  007426  376E               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 34855  007428  376F               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 34856                           
 34857                           ; BSR set to: 0
 34858  00742A  0100               	movlb	0	; () banked
 34859  00742C  5166               	movf	__tdiv_to_l_@f2& (0+255),w,b
 34860  00742E  0100               	movlb	0	; () banked
 34861  007430  5D63               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 34862  007432  0100               	movlb	0	; () banked
 34863  007434  5167               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 34864  007436  0100               	movlb	0	; () banked
 34865  007438  5964               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 34866  00743A  0100               	movlb	0	; () banked
 34867  00743C  5168               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 34868  00743E  0100               	movlb	0	; () banked
 34869  007440  5965               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 34870  007442  A0D8               	btfss	status,0,c
 34871  007444  D00E               	goto	l2910
 34872                           
 34873                           ; BSR set to: 0
 34874  007446  0100               	movlb	0	; () banked
 34875  007448  5166               	movf	__tdiv_to_l_@f2& (0+255),w,b
 34876  00744A  0100               	movlb	0	; () banked
 34877  00744C  5F63               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 34878  00744E  0100               	movlb	0	; () banked
 34879  007450  5167               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 34880  007452  0100               	movlb	0	; () banked
 34881  007454  5B64               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 34882  007456  0100               	movlb	0	; () banked
 34883  007458  5168               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 34884  00745A  0100               	movlb	0	; () banked
 34885  00745C  5B65               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 34886                           
 34887                           ; BSR set to: 0
 34888  00745E  0100               	movlb	0	; () banked
 34889  007460  816C               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 34890  007462                     l2910:
 34891                           
 34892                           ; BSR set to: 0
 34893  007462  0100               	movlb	0	; () banked
 34894  007464  90D8               	bcf	status,0,c
 34895  007466  3763               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 34896  007468  3764               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 34897  00746A  3765               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 34898                           
 34899                           ; BSR set to: 0
 34900  00746C  0100               	movlb	0	; () banked
 34901  00746E  2F70               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 34902  007470  D7D6               	goto	l2909
 34903  007472  D000               	goto	l8946
 34904  007474                     l8946:
 34905                           
 34906                           ; BSR set to: 0
 34907  007474  0100               	movlb	0	; () banked
 34908  007476  AF71               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 34909  007478  D01B               	goto	l8958
 34910                           
 34911                           ; BSR set to: 0
 34912  00747A  0100               	movlb	0	; () banked
 34913  00747C  5171               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 34914  00747E  0A80               	xorlw	128
 34915  007480  0F97               	addlw	151
 34916  007482  B0D8               	btfsc	status,0,c
 34917  007484  D00B               	goto	l8954
 34918                           
 34919                           ; BSR set to: 0
 34920  007486  0E00               	movlw	0
 34921  007488  0100               	movlb	0	; () banked
 34922  00748A  6F63               	movwf	?__tdiv_to_l_& (0+255),b
 34923  00748C  0E00               	movlw	0
 34924  00748E  6F64               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 34925  007490  0E00               	movlw	0
 34926  007492  6F65               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 34927  007494  0E00               	movlw	0
 34928  007496  6F66               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 34929                           
 34930                           ; BSR set to: 0
 34931  007498  0012               	return	
 34932                           
 34933                           ; BSR set to: 0
 34934  00749A  D000               	goto	l8954
 34935  00749C                     l8954:
 34936                           
 34937                           ; BSR set to: 0
 34938  00749C  0100               	movlb	0	; () banked
 34939  00749E  90D8               	bcf	status,0,c
 34940  0074A0  336F               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 34941  0074A2  336E               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 34942  0074A4  336D               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 34943  0074A6  336C               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 34944                           
 34945                           ; BSR set to: 0
 34946  0074A8  0100               	movlb	0	; () banked
 34947  0074AA  3F71               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 34948  0074AC  D7F7               	goto	l8954
 34949                           
 34950                           ; BSR set to: 0
 34951  0074AE  D01D               	goto	l2916
 34952  0074B0                     l8958:
 34953                           
 34954                           ; BSR set to: 0
 34955  0074B0  0E17               	movlw	23
 34956  0074B2  0100               	movlb	0	; () banked
 34957  0074B4  6571               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 34958  0074B6  D014               	goto	l8966
 34959                           
 34960                           ; BSR set to: 0
 34961  0074B8  0E00               	movlw	0
 34962  0074BA  0100               	movlb	0	; () banked
 34963  0074BC  6F63               	movwf	?__tdiv_to_l_& (0+255),b
 34964  0074BE  0E00               	movlw	0
 34965  0074C0  6F64               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 34966  0074C2  0E00               	movlw	0
 34967  0074C4  6F65               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 34968  0074C6  0E00               	movlw	0
 34969  0074C8  6F66               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 34970                           
 34971                           ; BSR set to: 0
 34972  0074CA  0012               	return	
 34973                           
 34974                           ; BSR set to: 0
 34975  0074CC  D009               	goto	l8966
 34976  0074CE                     l8964:
 34977                           
 34978                           ; BSR set to: 0
 34979  0074CE  0100               	movlb	0	; () banked
 34980  0074D0  90D8               	bcf	status,0,c
 34981  0074D2  376C               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 34982  0074D4  376D               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 34983  0074D6  376E               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 34984  0074D8  376F               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 34985  0074DA  0100               	movlb	0	; () banked
 34986  0074DC  0771               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 34987  0074DE  D000               	goto	l8966
 34988  0074E0                     l8966:
 34989                           
 34990                           ; BSR set to: 0
 34991  0074E0  0100               	movlb	0	; () banked
 34992  0074E2  5171               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 34993  0074E4  0100               	movlb	0	; () banked
 34994  0074E6  A4D8               	btfss	status,2,c
 34995  0074E8  D7F2               	goto	l8964
 34996  0074EA                     l2916:
 34997                           
 34998                           ; BSR set to: 0
 34999  0074EA  C06C  F063         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 35000  0074EE  C06D  F064         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 35001  0074F2  C06E  F065         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 35002  0074F6  C06F  F066         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 35003                           
 35004                           ; BSR set to: 0
 35005  0074FA  0012               	return		;funcret
 35006  0074FC                     __end_of__tdiv_to_l_:
 35007                           	opt stack 0
 35008                           tblptru	equ	0xFF8
 35009                           tblptrh	equ	0xFF7
 35010                           tblptrl	equ	0xFF6
 35011                           tablat	equ	0xFF5
 35012                           prodh	equ	0xFF4
 35013                           prodl	equ	0xFF3
 35014                           intcon	equ	0xFF2
 35015                           intcon2	equ	0xFF1
 35016                           indf0	equ	0xFEF
 35017                           postinc0	equ	0xFEE
 35018                           plusw0	equ	0xFEB
 35019                           fsr0h	equ	0xFEA
 35020                           fsr0l	equ	0xFE9
 35021                           wreg	equ	0xFE8
 35022                           indf1	equ	0xFE7
 35023                           postdec1	equ	0xFE5
 35024                           fsr1h	equ	0xFE2
 35025                           fsr1l	equ	0xFE1
 35026                           indf2	equ	0xFDF
 35027                           postinc2	equ	0xFDE
 35028                           postdec2	equ	0xFDD
 35029                           plusw2	equ	0xFDB
 35030                           fsr2h	equ	0xFDA
 35031                           fsr2l	equ	0xFD9
 35032                           status	equ	0xFD8
 35033                           
 35034 ;; *************** function __div_to_l_ *****************
 35035 ;; Defined at:
 35036 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 35037 ;; Parameters:    Size  Location     Type
 35038 ;;  f1              3    3[BANK0 ] unsigned long 
 35039 ;;  f2              3    6[BANK0 ] unsigned long 
 35040 ;; Auto vars:     Size  Location     Type
 35041 ;;  quot            4    9[BANK0 ] unsigned long 
 35042 ;;  exp1            1   14[BANK0 ] unsigned char 
 35043 ;;  cntr            1   13[BANK0 ] unsigned char 
 35044 ;; Return value:  Size  Location     Type
 35045 ;;                  4    3[BANK0 ] unsigned long 
 35046 ;; Registers used:
 35047 ;;		wreg, status,2, status,0
 35048 ;; Tracked objects:
 35049 ;;		On entry : 0/0
 35050 ;;		On exit  : 0/0
 35051 ;;		Unchanged: 0/0
 35052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35053 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35054 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35056 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35057 ;;Total ram usage:       12 bytes
 35058 ;; Hardware stack levels used:    1
 35059 ;; Hardware stack levels required when called:    6
 35060 ;; This function calls:
 35061 ;;		Nothing
 35062 ;; This function is called by:
 35063 ;;		_sprintf
 35064 ;; This function uses a non-reentrant model
 35065 ;;
 35066                           
 35067                           	psect	text81
 35068  0074FC                     __ptext81:
 35069                           	opt stack 0
 35070  0074FC                     __div_to_l_:
 35071                           	opt stack 22
 35072                           
 35073                           ; BSR set to: 0
 35074                           ;incstack = 0
 35075  0074FC  0100               	movlb	0	; () banked
 35076  0074FE  3565               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 35077  007500  3566               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 35078  007502  0100               	movlb	0	; () banked
 35079  007504  6F6E               	movwf	__div_to_l_@exp1& (0+255),b
 35080  007506  0100               	movlb	0	; () banked
 35081  007508  516E               	movf	__div_to_l_@exp1& (0+255),w,b
 35082  00750A  A4D8               	btfss	status,2,c
 35083  00750C  D00A               	goto	l8974
 35084                           
 35085                           ; BSR set to: 0
 35086  00750E  0E00               	movlw	0
 35087  007510  0100               	movlb	0	; () banked
 35088  007512  6F63               	movwf	?__div_to_l_& (0+255),b
 35089  007514  0E00               	movlw	0
 35090  007516  6F64               	movwf	(?__div_to_l_+1)& (0+255),b
 35091  007518  0E00               	movlw	0
 35092  00751A  6F65               	movwf	(?__div_to_l_+2)& (0+255),b
 35093  00751C  0E00               	movlw	0
 35094  00751E  6F66               	movwf	(?__div_to_l_+3)& (0+255),b
 35095                           
 35096                           ; BSR set to: 0
 35097  007520  0012               	return	
 35098  007522                     l8974:
 35099                           
 35100                           ; BSR set to: 0
 35101  007522  0100               	movlb	0	; () banked
 35102  007524  3568               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 35103  007526  3569               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 35104  007528  0100               	movlb	0	; () banked
 35105  00752A  6F6D               	movwf	__div_to_l_@cntr& (0+255),b
 35106  00752C  0100               	movlb	0	; () banked
 35107  00752E  516D               	movf	__div_to_l_@cntr& (0+255),w,b
 35108  007530  A4D8               	btfss	status,2,c
 35109  007532  D00A               	goto	l8980
 35110                           
 35111                           ; BSR set to: 0
 35112  007534  0E00               	movlw	0
 35113  007536  0100               	movlb	0	; () banked
 35114  007538  6F63               	movwf	?__div_to_l_& (0+255),b
 35115  00753A  0E00               	movlw	0
 35116  00753C  6F64               	movwf	(?__div_to_l_+1)& (0+255),b
 35117  00753E  0E00               	movlw	0
 35118  007540  6F65               	movwf	(?__div_to_l_+2)& (0+255),b
 35119  007542  0E00               	movlw	0
 35120  007544  6F66               	movwf	(?__div_to_l_+3)& (0+255),b
 35121                           
 35122                           ; BSR set to: 0
 35123  007546  0012               	return	
 35124  007548                     l8980:
 35125                           
 35126                           ; BSR set to: 0
 35127  007548  0100               	movlb	0	; () banked
 35128  00754A  8F65               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 35129                           
 35130                           ; BSR set to: 0
 35131  00754C  0EFF               	movlw	255
 35132  00754E  0100               	movlb	0	; () banked
 35133  007550  1763               	andwf	__div_to_l_@f1& (0+255),f,b
 35134  007552  0EFF               	movlw	255
 35135  007554  1764               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 35136  007556  0EFF               	movlw	255
 35137  007558  1765               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 35138  00755A  0E00               	movlw	0
 35139  00755C  1766               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 35140                           
 35141                           ; BSR set to: 0
 35142  00755E  0100               	movlb	0	; () banked
 35143  007560  8F68               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 35144  007562  0EFF               	movlw	255
 35145  007564  0100               	movlb	0	; () banked
 35146  007566  1766               	andwf	__div_to_l_@f2& (0+255),f,b
 35147  007568  0EFF               	movlw	255
 35148  00756A  1767               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 35149  00756C  0EFF               	movlw	255
 35150  00756E  1768               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 35151  007570  0E00               	movlw	0
 35152  007572  1769               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 35153                           
 35154                           ; BSR set to: 0
 35155  007574  0E00               	movlw	0
 35156  007576  0100               	movlb	0	; () banked
 35157  007578  6F69               	movwf	__div_to_l_@quot& (0+255),b
 35158  00757A  0E00               	movlw	0
 35159  00757C  6F6A               	movwf	(__div_to_l_@quot+1)& (0+255),b
 35160  00757E  0E00               	movlw	0
 35161  007580  6F6B               	movwf	(__div_to_l_@quot+2)& (0+255),b
 35162  007582  0E00               	movlw	0
 35163  007584  6F6C               	movwf	(__div_to_l_@quot+3)& (0+255),b
 35164                           
 35165                           ; BSR set to: 0
 35166  007586  0E7F               	movlw	127
 35167  007588  0100               	movlb	0	; () banked
 35168  00758A  5F6E               	subwf	__div_to_l_@exp1& (0+255),f,b
 35169                           
 35170                           ; BSR set to: 0
 35171  00758C  0100               	movlb	0	; () banked
 35172  00758E  516D               	movf	__div_to_l_@cntr& (0+255),w,b
 35173  007590  0FA0               	addlw	160
 35174  007592  0100               	movlb	0	; () banked
 35175  007594  5F6E               	subwf	__div_to_l_@exp1& (0+255),f,b
 35176                           
 35177                           ; BSR set to: 0
 35178  007596  0E20               	movlw	32
 35179  007598  0100               	movlb	0	; () banked
 35180  00759A  6F6D               	movwf	__div_to_l_@cntr& (0+255),b
 35181  00759C  D000               	goto	l8994
 35182  00759E                     l8994:
 35183                           
 35184                           ; BSR set to: 0
 35185  00759E  0100               	movlb	0	; () banked
 35186  0075A0  90D8               	bcf	status,0,c
 35187  0075A2  3769               	rlcf	__div_to_l_@quot& (0+255),f,b
 35188  0075A4  376A               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 35189  0075A6  376B               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 35190  0075A8  376C               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 35191                           
 35192                           ; BSR set to: 0
 35193  0075AA  0100               	movlb	0	; () banked
 35194  0075AC  5166               	movf	__div_to_l_@f2& (0+255),w,b
 35195  0075AE  0100               	movlb	0	; () banked
 35196  0075B0  5D63               	subwf	__div_to_l_@f1& (0+255),w,b
 35197  0075B2  0100               	movlb	0	; () banked
 35198  0075B4  5167               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 35199  0075B6  0100               	movlb	0	; () banked
 35200  0075B8  5964               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 35201  0075BA  0100               	movlb	0	; () banked
 35202  0075BC  5168               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 35203  0075BE  0100               	movlb	0	; () banked
 35204  0075C0  5965               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 35205  0075C2  0100               	movlb	0	; () banked
 35206  0075C4  5169               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 35207  0075C6  0100               	movlb	0	; () banked
 35208  0075C8  5966               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 35209  0075CA  A0D8               	btfss	status,0,c
 35210  0075CC  D013               	goto	l9002
 35211                           
 35212                           ; BSR set to: 0
 35213  0075CE  0100               	movlb	0	; () banked
 35214  0075D0  5166               	movf	__div_to_l_@f2& (0+255),w,b
 35215  0075D2  0100               	movlb	0	; () banked
 35216  0075D4  5F63               	subwf	__div_to_l_@f1& (0+255),f,b
 35217  0075D6  0100               	movlb	0	; () banked
 35218  0075D8  5167               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 35219  0075DA  0100               	movlb	0	; () banked
 35220  0075DC  5B64               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 35221  0075DE  0100               	movlb	0	; () banked
 35222  0075E0  5168               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 35223  0075E2  0100               	movlb	0	; () banked
 35224  0075E4  5B65               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 35225  0075E6  0100               	movlb	0	; () banked
 35226  0075E8  5169               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 35227  0075EA  0100               	movlb	0	; () banked
 35228  0075EC  5B66               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 35229                           
 35230                           ; BSR set to: 0
 35231  0075EE  0100               	movlb	0	; () banked
 35232  0075F0  8169               	bsf	__div_to_l_@quot& (0+255),0,b
 35233  0075F2  D000               	goto	l9002
 35234  0075F4                     l9002:
 35235                           
 35236                           ; BSR set to: 0
 35237  0075F4  0100               	movlb	0	; () banked
 35238  0075F6  90D8               	bcf	status,0,c
 35239  0075F8  3763               	rlcf	__div_to_l_@f1& (0+255),f,b
 35240  0075FA  3764               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 35241  0075FC  3765               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 35242  0075FE  3766               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 35243                           
 35244                           ; BSR set to: 0
 35245  007600  0100               	movlb	0	; () banked
 35246  007602  2F6D               	decfsz	__div_to_l_@cntr& (0+255),f,b
 35247  007604  D7CC               	goto	l8994
 35248  007606  D000               	goto	l9006
 35249  007608                     l9006:
 35250                           
 35251                           ; BSR set to: 0
 35252  007608  0100               	movlb	0	; () banked
 35253  00760A  AF6E               	btfss	__div_to_l_@exp1& (0+255),7,b
 35254  00760C  D01B               	goto	l9018
 35255                           
 35256                           ; BSR set to: 0
 35257  00760E  0100               	movlb	0	; () banked
 35258  007610  516E               	movf	__div_to_l_@exp1& (0+255),w,b
 35259  007612  0A80               	xorlw	128
 35260  007614  0F9F               	addlw	159
 35261  007616  B0D8               	btfsc	status,0,c
 35262  007618  D00B               	goto	l9014
 35263                           
 35264                           ; BSR set to: 0
 35265  00761A  0E00               	movlw	0
 35266  00761C  0100               	movlb	0	; () banked
 35267  00761E  6F63               	movwf	?__div_to_l_& (0+255),b
 35268  007620  0E00               	movlw	0
 35269  007622  6F64               	movwf	(?__div_to_l_+1)& (0+255),b
 35270  007624  0E00               	movlw	0
 35271  007626  6F65               	movwf	(?__div_to_l_+2)& (0+255),b
 35272  007628  0E00               	movlw	0
 35273  00762A  6F66               	movwf	(?__div_to_l_+3)& (0+255),b
 35274                           
 35275                           ; BSR set to: 0
 35276  00762C  0012               	return	
 35277                           
 35278                           ; BSR set to: 0
 35279  00762E  D000               	goto	l9014
 35280  007630                     l9014:
 35281                           
 35282                           ; BSR set to: 0
 35283  007630  0100               	movlb	0	; () banked
 35284  007632  90D8               	bcf	status,0,c
 35285  007634  336C               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 35286  007636  336B               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 35287  007638  336A               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 35288  00763A  3369               	rrcf	__div_to_l_@quot& (0+255),f,b
 35289                           
 35290                           ; BSR set to: 0
 35291  00763C  0100               	movlb	0	; () banked
 35292  00763E  3F6E               	incfsz	__div_to_l_@exp1& (0+255),f,b
 35293  007640  D7F7               	goto	l9014
 35294                           
 35295                           ; BSR set to: 0
 35296  007642  D01D               	goto	l2795
 35297  007644                     l9018:
 35298                           
 35299                           ; BSR set to: 0
 35300  007644  0E1F               	movlw	31
 35301  007646  0100               	movlb	0	; () banked
 35302  007648  656E               	cpfsgt	__div_to_l_@exp1& (0+255),b
 35303  00764A  D014               	goto	l9026
 35304                           
 35305                           ; BSR set to: 0
 35306  00764C  0E00               	movlw	0
 35307  00764E  0100               	movlb	0	; () banked
 35308  007650  6F63               	movwf	?__div_to_l_& (0+255),b
 35309  007652  0E00               	movlw	0
 35310  007654  6F64               	movwf	(?__div_to_l_+1)& (0+255),b
 35311  007656  0E00               	movlw	0
 35312  007658  6F65               	movwf	(?__div_to_l_+2)& (0+255),b
 35313  00765A  0E00               	movlw	0
 35314  00765C  6F66               	movwf	(?__div_to_l_+3)& (0+255),b
 35315                           
 35316                           ; BSR set to: 0
 35317  00765E  0012               	return	
 35318                           
 35319                           ; BSR set to: 0
 35320  007660  D009               	goto	l9026
 35321  007662                     l9024:
 35322                           
 35323                           ; BSR set to: 0
 35324  007662  0100               	movlb	0	; () banked
 35325  007664  90D8               	bcf	status,0,c
 35326  007666  3769               	rlcf	__div_to_l_@quot& (0+255),f,b
 35327  007668  376A               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 35328  00766A  376B               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 35329  00766C  376C               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 35330  00766E  0100               	movlb	0	; () banked
 35331  007670  076E               	decf	__div_to_l_@exp1& (0+255),f,b
 35332  007672  D000               	goto	l9026
 35333  007674                     l9026:
 35334                           
 35335                           ; BSR set to: 0
 35336  007674  0100               	movlb	0	; () banked
 35337  007676  516E               	movf	__div_to_l_@exp1& (0+255),w,b
 35338  007678  0100               	movlb	0	; () banked
 35339  00767A  A4D8               	btfss	status,2,c
 35340  00767C  D7F2               	goto	l9024
 35341  00767E                     l2795:
 35342                           
 35343                           ; BSR set to: 0
 35344  00767E  C069  F063         	movff	__div_to_l_@quot,?__div_to_l_
 35345  007682  C06A  F064         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 35346  007686  C06B  F065         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 35347  00768A  C06C  F066         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 35348                           
 35349                           ; BSR set to: 0
 35350  00768E  0012               	return		;funcret
 35351  007690                     __end_of__div_to_l_:
 35352                           	opt stack 0
 35353                           tblptru	equ	0xFF8
 35354                           tblptrh	equ	0xFF7
 35355                           tblptrl	equ	0xFF6
 35356                           tablat	equ	0xFF5
 35357                           prodh	equ	0xFF4
 35358                           prodl	equ	0xFF3
 35359                           intcon	equ	0xFF2
 35360                           intcon2	equ	0xFF1
 35361                           indf0	equ	0xFEF
 35362                           postinc0	equ	0xFEE
 35363                           plusw0	equ	0xFEB
 35364                           fsr0h	equ	0xFEA
 35365                           fsr0l	equ	0xFE9
 35366                           wreg	equ	0xFE8
 35367                           indf1	equ	0xFE7
 35368                           postdec1	equ	0xFE5
 35369                           fsr1h	equ	0xFE2
 35370                           fsr1l	equ	0xFE1
 35371                           indf2	equ	0xFDF
 35372                           postinc2	equ	0xFDE
 35373                           postdec2	equ	0xFDD
 35374                           plusw2	equ	0xFDB
 35375                           fsr2h	equ	0xFDA
 35376                           fsr2l	equ	0xFD9
 35377                           status	equ	0xFD8
 35378                           
 35379 ;; *************** function ___lltoft *****************
 35380 ;; Defined at:
 35381 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 35382 ;; Parameters:    Size  Location     Type
 35383 ;;  c               4   11[BANK0 ] unsigned long 
 35384 ;; Auto vars:     Size  Location     Type
 35385 ;;  exp             1   19[BANK0 ] unsigned char 
 35386 ;; Return value:  Size  Location     Type
 35387 ;;                  3   11[BANK0 ] float 
 35388 ;; Registers used:
 35389 ;;		wreg, status,2, status,0, cstack
 35390 ;; Tracked objects:
 35391 ;;		On entry : 0/0
 35392 ;;		On exit  : 0/0
 35393 ;;		Unchanged: 0/0
 35394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35395 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35396 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35397 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35398 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35399 ;;Total ram usage:        9 bytes
 35400 ;; Hardware stack levels used:    1
 35401 ;; Hardware stack levels required when called:    7
 35402 ;; This function calls:
 35403 ;;		___ftpack
 35404 ;; This function is called by:
 35405 ;;		_InitUART
 35406 ;;		_sprintf
 35407 ;; This function uses a non-reentrant model
 35408 ;;
 35409                           
 35410                           	psect	text82
 35411  00990C                     __ptext82:
 35412                           	opt stack 0
 35413  00990C                     ___lltoft:
 35414                           	opt stack 21
 35415                           
 35416                           ; BSR set to: 0
 35417                           ;incstack = 0
 35418  00990C  0E8E               	movlw	142
 35419  00990E  0100               	movlb	0	; () banked
 35420  009910  6F73               	movwf	___lltoft@exp& (0+255),b
 35421  009912  D009               	goto	l9146
 35422  009914                     l9144:
 35423                           
 35424                           ; BSR set to: 0
 35425  009914  0100               	movlb	0	; () banked
 35426  009916  90D8               	bcf	status,0,c
 35427  009918  336E               	rrcf	(___lltoft@c+3)& (0+255),f,b
 35428  00991A  336D               	rrcf	(___lltoft@c+2)& (0+255),f,b
 35429  00991C  336C               	rrcf	(___lltoft@c+1)& (0+255),f,b
 35430  00991E  336B               	rrcf	___lltoft@c& (0+255),f,b
 35431  009920  0100               	movlb	0	; () banked
 35432  009922  2B73               	incf	___lltoft@exp& (0+255),f,b
 35433  009924  D000               	goto	l9146
 35434  009926                     l9146:
 35435                           
 35436                           ; BSR set to: 0
 35437  009926  0E00               	movlw	0
 35438  009928  0100               	movlb	0	; () banked
 35439  00992A  156B               	andwf	___lltoft@c& (0+255),w,b
 35440  00992C  0100               	movlb	0	; () banked
 35441  00992E  6F6F               	movwf	??___lltoft& (0+255),b
 35442  009930  0E00               	movlw	0
 35443  009932  0100               	movlb	0	; () banked
 35444  009934  156C               	andwf	(___lltoft@c+1)& (0+255),w,b
 35445  009936  0100               	movlb	0	; () banked
 35446  009938  6F70               	movwf	(??___lltoft+1)& (0+255),b
 35447  00993A  0E00               	movlw	0
 35448  00993C  0100               	movlb	0	; () banked
 35449  00993E  156D               	andwf	(___lltoft@c+2)& (0+255),w,b
 35450  009940  0100               	movlb	0	; () banked
 35451  009942  6F71               	movwf	(??___lltoft+2)& (0+255),b
 35452  009944  0EFF               	movlw	255
 35453  009946  0100               	movlb	0	; () banked
 35454  009948  156E               	andwf	(___lltoft@c+3)& (0+255),w,b
 35455  00994A  0100               	movlb	0	; () banked
 35456  00994C  6F72               	movwf	(??___lltoft+3)& (0+255),b
 35457  00994E  0100               	movlb	0	; () banked
 35458  009950  516F               	movf	??___lltoft& (0+255),w,b
 35459  009952  0100               	movlb	0	; () banked
 35460  009954  1170               	iorwf	(??___lltoft+1)& (0+255),w,b
 35461  009956  0100               	movlb	0	; () banked
 35462  009958  1171               	iorwf	(??___lltoft+2)& (0+255),w,b
 35463  00995A  0100               	movlb	0	; () banked
 35464  00995C  1172               	iorwf	(??___lltoft+3)& (0+255),w,b
 35465  00995E  A4D8               	btfss	status,2,c
 35466  009960  D7D9               	goto	l9144
 35467                           
 35468                           ; BSR set to: 0
 35469                           
 35470                           ; BSR set to: 0
 35471  009962  C06B  F063         	movff	___lltoft@c,___ftpack@arg
 35472  009966  C06C  F064         	movff	___lltoft@c+1,___ftpack@arg+1
 35473  00996A  C06D  F065         	movff	___lltoft@c+2,___ftpack@arg+2
 35474  00996E  C073  F066         	movff	___lltoft@exp,___ftpack@exp
 35475  009972  0E00               	movlw	0
 35476  009974  0100               	movlb	0	; () banked
 35477  009976  6F67               	movwf	___ftpack@sign& (0+255),b
 35478  009978  EC54  F041         	call	___ftpack	;wreg free
 35479  00997C  C063  F06B         	movff	?___ftpack,?___lltoft
 35480  009980  C064  F06C         	movff	?___ftpack+1,?___lltoft+1
 35481  009984  C065  F06D         	movff	?___ftpack+2,?___lltoft+2
 35482  009988  0012               	return	
 35483  00998A  0012               	return		;funcret
 35484  00998C                     __end_of___lltoft:
 35485                           	opt stack 0
 35486                           tblptru	equ	0xFF8
 35487                           tblptrh	equ	0xFF7
 35488                           tblptrl	equ	0xFF6
 35489                           tablat	equ	0xFF5
 35490                           prodh	equ	0xFF4
 35491                           prodl	equ	0xFF3
 35492                           intcon	equ	0xFF2
 35493                           intcon2	equ	0xFF1
 35494                           indf0	equ	0xFEF
 35495                           postinc0	equ	0xFEE
 35496                           plusw0	equ	0xFEB
 35497                           fsr0h	equ	0xFEA
 35498                           fsr0l	equ	0xFE9
 35499                           wreg	equ	0xFE8
 35500                           indf1	equ	0xFE7
 35501                           postdec1	equ	0xFE5
 35502                           fsr1h	equ	0xFE2
 35503                           fsr1l	equ	0xFE1
 35504                           indf2	equ	0xFDF
 35505                           postinc2	equ	0xFDE
 35506                           postdec2	equ	0xFDD
 35507                           plusw2	equ	0xFDB
 35508                           fsr2h	equ	0xFDA
 35509                           fsr2l	equ	0xFD9
 35510                           status	equ	0xFD8
 35511                           
 35512 ;; *************** function ___llmod *****************
 35513 ;; Defined at:
 35514 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 35515 ;; Parameters:    Size  Location     Type
 35516 ;;  dividend        4   16[BANK0 ] unsigned long 
 35517 ;;  divisor         4   20[BANK0 ] unsigned long 
 35518 ;; Auto vars:     Size  Location     Type
 35519 ;;  counter         1   24[BANK0 ] unsigned char 
 35520 ;; Return value:  Size  Location     Type
 35521 ;;                  4   16[BANK0 ] unsigned long 
 35522 ;; Registers used:
 35523 ;;		wreg, status,2, status,0
 35524 ;; Tracked objects:
 35525 ;;		On entry : 0/0
 35526 ;;		On exit  : 0/0
 35527 ;;		Unchanged: 0/0
 35528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35529 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35530 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35532 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35533 ;;Total ram usage:        9 bytes
 35534 ;; Hardware stack levels used:    1
 35535 ;; Hardware stack levels required when called:    6
 35536 ;; This function calls:
 35537 ;;		Nothing
 35538 ;; This function is called by:
 35539 ;;		_sprintf
 35540 ;; This function uses a non-reentrant model
 35541 ;;
 35542                           
 35543                           	psect	text83
 35544  0093B4                     __ptext83:
 35545                           	opt stack 0
 35546  0093B4                     ___llmod:
 35547                           	opt stack 22
 35548                           
 35549                           ;incstack = 0
 35550  0093B4  0100               	movlb	0	; () banked
 35551  0093B6  5174               	movf	___llmod@divisor& (0+255),w,b
 35552  0093B8  0100               	movlb	0	; () banked
 35553  0093BA  1175               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 35554  0093BC  0100               	movlb	0	; () banked
 35555  0093BE  1176               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 35556  0093C0  0100               	movlb	0	; () banked
 35557  0093C2  1177               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 35558  0093C4  B4D8               	btfsc	status,2,c
 35559  0093C6  D03F               	goto	l3006
 35560                           
 35561                           ; BSR set to: 0
 35562  0093C8  0E01               	movlw	1
 35563  0093CA  0100               	movlb	0	; () banked
 35564  0093CC  6F78               	movwf	___llmod@counter& (0+255),b
 35565  0093CE  D009               	goto	l9132
 35566  0093D0                     l9130:
 35567                           
 35568                           ; BSR set to: 0
 35569  0093D0  0100               	movlb	0	; () banked
 35570  0093D2  90D8               	bcf	status,0,c
 35571  0093D4  3774               	rlcf	___llmod@divisor& (0+255),f,b
 35572  0093D6  3775               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 35573  0093D8  3776               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 35574  0093DA  3777               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 35575  0093DC  0100               	movlb	0	; () banked
 35576  0093DE  2B78               	incf	___llmod@counter& (0+255),f,b
 35577  0093E0  D000               	goto	l9132
 35578  0093E2                     l9132:
 35579                           
 35580                           ; BSR set to: 0
 35581  0093E2  0100               	movlb	0	; () banked
 35582  0093E4  BF77               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 35583  0093E6  D002               	goto	l9134
 35584  0093E8  D7F3               	goto	l9130
 35585                           
 35586                           ; BSR set to: 0
 35587  0093EA  D000               	goto	l9134
 35588  0093EC                     l9134:
 35589                           
 35590                           ; BSR set to: 0
 35591  0093EC  0100               	movlb	0	; () banked
 35592  0093EE  5174               	movf	___llmod@divisor& (0+255),w,b
 35593  0093F0  0100               	movlb	0	; () banked
 35594  0093F2  5D70               	subwf	___llmod@dividend& (0+255),w,b
 35595  0093F4  0100               	movlb	0	; () banked
 35596  0093F6  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
 35597  0093F8  0100               	movlb	0	; () banked
 35598  0093FA  5971               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 35599  0093FC  0100               	movlb	0	; () banked
 35600  0093FE  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
 35601  009400  0100               	movlb	0	; () banked
 35602  009402  5972               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 35603  009404  0100               	movlb	0	; () banked
 35604  009406  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
 35605  009408  0100               	movlb	0	; () banked
 35606  00940A  5973               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 35607  00940C  A0D8               	btfss	status,0,c
 35608  00940E  D011               	goto	l9138
 35609                           
 35610                           ; BSR set to: 0
 35611  009410  0100               	movlb	0	; () banked
 35612  009412  5174               	movf	___llmod@divisor& (0+255),w,b
 35613  009414  0100               	movlb	0	; () banked
 35614  009416  5F70               	subwf	___llmod@dividend& (0+255),f,b
 35615  009418  0100               	movlb	0	; () banked
 35616  00941A  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
 35617  00941C  0100               	movlb	0	; () banked
 35618  00941E  5B71               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 35619  009420  0100               	movlb	0	; () banked
 35620  009422  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
 35621  009424  0100               	movlb	0	; () banked
 35622  009426  5B72               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 35623  009428  0100               	movlb	0	; () banked
 35624  00942A  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
 35625  00942C  0100               	movlb	0	; () banked
 35626  00942E  5B73               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 35627  009430  D000               	goto	l9138
 35628  009432                     l9138:
 35629                           
 35630                           ; BSR set to: 0
 35631  009432  0100               	movlb	0	; () banked
 35632  009434  90D8               	bcf	status,0,c
 35633  009436  3377               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 35634  009438  3376               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 35635  00943A  3375               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 35636  00943C  3374               	rrcf	___llmod@divisor& (0+255),f,b
 35637                           
 35638                           ; BSR set to: 0
 35639  00943E  0100               	movlb	0	; () banked
 35640  009440  2F78               	decfsz	___llmod@counter& (0+255),f,b
 35641  009442  D7D4               	goto	l9134
 35642  009444  D000               	goto	l3006
 35643  009446                     l3006:
 35644                           
 35645                           ; BSR set to: 0
 35646  009446  C070  F070         	movff	___llmod@dividend,?___llmod
 35647  00944A  C071  F071         	movff	___llmod@dividend+1,?___llmod+1
 35648  00944E  C072  F072         	movff	___llmod@dividend+2,?___llmod+2
 35649  009452  C073  F073         	movff	___llmod@dividend+3,?___llmod+3
 35650                           
 35651                           ; BSR set to: 0
 35652  009456  0012               	return		;funcret
 35653  009458                     __end_of___llmod:
 35654                           	opt stack 0
 35655                           tblptru	equ	0xFF8
 35656                           tblptrh	equ	0xFF7
 35657                           tblptrl	equ	0xFF6
 35658                           tablat	equ	0xFF5
 35659                           prodh	equ	0xFF4
 35660                           prodl	equ	0xFF3
 35661                           intcon	equ	0xFF2
 35662                           intcon2	equ	0xFF1
 35663                           indf0	equ	0xFEF
 35664                           postinc0	equ	0xFEE
 35665                           plusw0	equ	0xFEB
 35666                           fsr0h	equ	0xFEA
 35667                           fsr0l	equ	0xFE9
 35668                           wreg	equ	0xFE8
 35669                           indf1	equ	0xFE7
 35670                           postdec1	equ	0xFE5
 35671                           fsr1h	equ	0xFE2
 35672                           fsr1l	equ	0xFE1
 35673                           indf2	equ	0xFDF
 35674                           postinc2	equ	0xFDE
 35675                           postdec2	equ	0xFDD
 35676                           plusw2	equ	0xFDB
 35677                           fsr2h	equ	0xFDA
 35678                           fsr2l	equ	0xFD9
 35679                           status	equ	0xFD8
 35680                           
 35681 ;; *************** function ___lldiv *****************
 35682 ;; Defined at:
 35683 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 35684 ;; Parameters:    Size  Location     Type
 35685 ;;  dividend        4    3[BANK0 ] unsigned long 
 35686 ;;  divisor         4    7[BANK0 ] unsigned long 
 35687 ;; Auto vars:     Size  Location     Type
 35688 ;;  quotient        4   11[BANK0 ] unsigned long 
 35689 ;;  counter         1   15[BANK0 ] unsigned char 
 35690 ;; Return value:  Size  Location     Type
 35691 ;;                  4    3[BANK0 ] unsigned long 
 35692 ;; Registers used:
 35693 ;;		wreg, status,2, status,0
 35694 ;; Tracked objects:
 35695 ;;		On entry : 0/0
 35696 ;;		On exit  : 0/0
 35697 ;;		Unchanged: 0/0
 35698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35699 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35700 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35702 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35703 ;;Total ram usage:       13 bytes
 35704 ;; Hardware stack levels used:    1
 35705 ;; Hardware stack levels required when called:    6
 35706 ;; This function calls:
 35707 ;;		Nothing
 35708 ;; This function is called by:
 35709 ;;		_InitUART
 35710 ;;		_sprintf
 35711 ;; This function uses a non-reentrant model
 35712 ;;
 35713                           
 35714                           	psect	text84
 35715  008F5A                     __ptext84:
 35716                           	opt stack 0
 35717  008F5A                     ___lldiv:
 35718                           	opt stack 22
 35719                           
 35720                           ; BSR set to: 0
 35721                           ;incstack = 0
 35722  008F5A  0E00               	movlw	0
 35723  008F5C  0100               	movlb	0	; () banked
 35724  008F5E  6F6B               	movwf	___lldiv@quotient& (0+255),b
 35725  008F60  0E00               	movlw	0
 35726  008F62  6F6C               	movwf	(___lldiv@quotient+1)& (0+255),b
 35727  008F64  0E00               	movlw	0
 35728  008F66  6F6D               	movwf	(___lldiv@quotient+2)& (0+255),b
 35729  008F68  0E00               	movlw	0
 35730  008F6A  6F6E               	movwf	(___lldiv@quotient+3)& (0+255),b
 35731                           
 35732                           ; BSR set to: 0
 35733  008F6C  0100               	movlb	0	; () banked
 35734  008F6E  5167               	movf	___lldiv@divisor& (0+255),w,b
 35735  008F70  0100               	movlb	0	; () banked
 35736  008F72  1168               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35737  008F74  0100               	movlb	0	; () banked
 35738  008F76  1169               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35739  008F78  0100               	movlb	0	; () banked
 35740  008F7A  116A               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35741  008F7C  B4D8               	btfsc	status,2,c
 35742  008F7E  D047               	goto	l2996
 35743                           
 35744                           ; BSR set to: 0
 35745  008F80  0E01               	movlw	1
 35746  008F82  0100               	movlb	0	; () banked
 35747  008F84  6F6F               	movwf	___lldiv@counter& (0+255),b
 35748  008F86  D009               	goto	l9112
 35749  008F88                     l9110:
 35750                           
 35751                           ; BSR set to: 0
 35752  008F88  0100               	movlb	0	; () banked
 35753  008F8A  90D8               	bcf	status,0,c
 35754  008F8C  3767               	rlcf	___lldiv@divisor& (0+255),f,b
 35755  008F8E  3768               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35756  008F90  3769               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35757  008F92  376A               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35758  008F94  0100               	movlb	0	; () banked
 35759  008F96  2B6F               	incf	___lldiv@counter& (0+255),f,b
 35760  008F98  D000               	goto	l9112
 35761  008F9A                     l9112:
 35762                           
 35763                           ; BSR set to: 0
 35764  008F9A  0100               	movlb	0	; () banked
 35765  008F9C  BF6A               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 35766  008F9E  D002               	goto	l9114
 35767  008FA0  D7F3               	goto	l9110
 35768                           
 35769                           ; BSR set to: 0
 35770  008FA2  D000               	goto	l9114
 35771  008FA4                     l9114:
 35772                           
 35773                           ; BSR set to: 0
 35774  008FA4  0100               	movlb	0	; () banked
 35775  008FA6  90D8               	bcf	status,0,c
 35776  008FA8  376B               	rlcf	___lldiv@quotient& (0+255),f,b
 35777  008FAA  376C               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35778  008FAC  376D               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35779  008FAE  376E               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35780                           
 35781                           ; BSR set to: 0
 35782  008FB0  0100               	movlb	0	; () banked
 35783  008FB2  5167               	movf	___lldiv@divisor& (0+255),w,b
 35784  008FB4  0100               	movlb	0	; () banked
 35785  008FB6  5D63               	subwf	___lldiv@dividend& (0+255),w,b
 35786  008FB8  0100               	movlb	0	; () banked
 35787  008FBA  5168               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35788  008FBC  0100               	movlb	0	; () banked
 35789  008FBE  5964               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35790  008FC0  0100               	movlb	0	; () banked
 35791  008FC2  5169               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35792  008FC4  0100               	movlb	0	; () banked
 35793  008FC6  5965               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35794  008FC8  0100               	movlb	0	; () banked
 35795  008FCA  516A               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35796  008FCC  0100               	movlb	0	; () banked
 35797  008FCE  5966               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35798  008FD0  A0D8               	btfss	status,0,c
 35799  008FD2  D013               	goto	l9122
 35800                           
 35801                           ; BSR set to: 0
 35802  008FD4  0100               	movlb	0	; () banked
 35803  008FD6  5167               	movf	___lldiv@divisor& (0+255),w,b
 35804  008FD8  0100               	movlb	0	; () banked
 35805  008FDA  5F63               	subwf	___lldiv@dividend& (0+255),f,b
 35806  008FDC  0100               	movlb	0	; () banked
 35807  008FDE  5168               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35808  008FE0  0100               	movlb	0	; () banked
 35809  008FE2  5B64               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35810  008FE4  0100               	movlb	0	; () banked
 35811  008FE6  5169               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35812  008FE8  0100               	movlb	0	; () banked
 35813  008FEA  5B65               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35814  008FEC  0100               	movlb	0	; () banked
 35815  008FEE  516A               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35816  008FF0  0100               	movlb	0	; () banked
 35817  008FF2  5B66               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35818                           
 35819                           ; BSR set to: 0
 35820  008FF4  0100               	movlb	0	; () banked
 35821  008FF6  816B               	bsf	___lldiv@quotient& (0+255),0,b
 35822  008FF8  D000               	goto	l9122
 35823  008FFA                     l9122:
 35824                           
 35825                           ; BSR set to: 0
 35826  008FFA  0100               	movlb	0	; () banked
 35827  008FFC  90D8               	bcf	status,0,c
 35828  008FFE  336A               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35829  009000  3369               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35830  009002  3368               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35831  009004  3367               	rrcf	___lldiv@divisor& (0+255),f,b
 35832                           
 35833                           ; BSR set to: 0
 35834  009006  0100               	movlb	0	; () banked
 35835  009008  2F6F               	decfsz	___lldiv@counter& (0+255),f,b
 35836  00900A  D7CC               	goto	l9114
 35837  00900C  D000               	goto	l2996
 35838  00900E                     l2996:
 35839                           
 35840                           ; BSR set to: 0
 35841  00900E  C06B  F063         	movff	___lldiv@quotient,?___lldiv
 35842  009012  C06C  F064         	movff	___lldiv@quotient+1,?___lldiv+1
 35843  009016  C06D  F065         	movff	___lldiv@quotient+2,?___lldiv+2
 35844  00901A  C06E  F066         	movff	___lldiv@quotient+3,?___lldiv+3
 35845                           
 35846                           ; BSR set to: 0
 35847  00901E  0012               	return		;funcret
 35848  009020                     __end_of___lldiv:
 35849                           	opt stack 0
 35850                           tblptru	equ	0xFF8
 35851                           tblptrh	equ	0xFF7
 35852                           tblptrl	equ	0xFF6
 35853                           tablat	equ	0xFF5
 35854                           prodh	equ	0xFF4
 35855                           prodl	equ	0xFF3
 35856                           intcon	equ	0xFF2
 35857                           intcon2	equ	0xFF1
 35858                           indf0	equ	0xFEF
 35859                           postinc0	equ	0xFEE
 35860                           plusw0	equ	0xFEB
 35861                           fsr0h	equ	0xFEA
 35862                           fsr0l	equ	0xFE9
 35863                           wreg	equ	0xFE8
 35864                           indf1	equ	0xFE7
 35865                           postdec1	equ	0xFE5
 35866                           fsr1h	equ	0xFE2
 35867                           fsr1l	equ	0xFE1
 35868                           indf2	equ	0xFDF
 35869                           postinc2	equ	0xFDE
 35870                           postdec2	equ	0xFDD
 35871                           plusw2	equ	0xFDB
 35872                           fsr2h	equ	0xFDA
 35873                           fsr2l	equ	0xFD9
 35874                           status	equ	0xFD8
 35875                           
 35876 ;; *************** function ___fttol *****************
 35877 ;; Defined at:
 35878 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 35879 ;; Parameters:    Size  Location     Type
 35880 ;;  f1              3   66[BANK0 ] float 
 35881 ;; Auto vars:     Size  Location     Type
 35882 ;;  lval            4   76[BANK0 ] unsigned long 
 35883 ;;  exp1            1   80[BANK0 ] unsigned char 
 35884 ;;  sign1           1   75[BANK0 ] unsigned char 
 35885 ;; Return value:  Size  Location     Type
 35886 ;;                  4   66[BANK0 ] long 
 35887 ;; Registers used:
 35888 ;;		wreg, status,2, status,0
 35889 ;; Tracked objects:
 35890 ;;		On entry : 0/0
 35891 ;;		On exit  : 0/0
 35892 ;;		Unchanged: 0/0
 35893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35894 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35895 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35896 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35897 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35898 ;;Total ram usage:       15 bytes
 35899 ;; Hardware stack levels used:    1
 35900 ;; Hardware stack levels required when called:    6
 35901 ;; This function calls:
 35902 ;;		Nothing
 35903 ;; This function is called by:
 35904 ;;		_Round
 35905 ;;		_InitUART
 35906 ;;		_sprintf
 35907 ;; This function uses a non-reentrant model
 35908 ;;
 35909                           
 35910                           	psect	text85
 35911  007DA2                     __ptext85:
 35912                           	opt stack 0
 35913  007DA2                     ___fttol:
 35914                           	opt stack 22
 35915                           
 35916                           ; BSR set to: 0
 35917                           ;incstack = 0
 35918  007DA2  C0A4  F0A6         	movff	___fttol@f1+2,??___fttol
 35919  007DA6  0100               	movlb	0	; () banked
 35920  007DA8  6BA7               	clrf	(??___fttol+1)& (0+255),b
 35921  007DAA  6BA8               	clrf	(??___fttol+2)& (0+255),b
 35922  007DAC  0100               	movlb	0	; () banked
 35923  007DAE  35A3               	rlcf	(___fttol@f1+1)& (0+255),w,b
 35924  007DB0  0100               	movlb	0	; () banked
 35925  007DB2  37A6               	rlcf	??___fttol& (0+255),f,b
 35926  007DB4  E301               	bnc	u8971
 35927  007DB6  81A7               	bsf	(??___fttol+1)& (0+255),0,b
 35928  007DB8                     u8971:
 35929  007DB8  0100               	movlb	0	; () banked
 35930  007DBA  51A6               	movf	??___fttol& (0+255),w,b
 35931  007DBC  0100               	movlb	0	; () banked
 35932  007DBE  6FB0               	movwf	___fttol@exp1& (0+255),b
 35933  007DC0  0100               	movlb	0	; () banked
 35934  007DC2  51B0               	movf	___fttol@exp1& (0+255),w,b
 35935  007DC4  A4D8               	btfss	status,2,c
 35936  007DC6  D00A               	goto	l9064
 35937                           
 35938                           ; BSR set to: 0
 35939  007DC8  0E00               	movlw	0
 35940  007DCA  0100               	movlb	0	; () banked
 35941  007DCC  6FA2               	movwf	?___fttol& (0+255),b
 35942  007DCE  0E00               	movlw	0
 35943  007DD0  6FA3               	movwf	(?___fttol+1)& (0+255),b
 35944  007DD2  0E00               	movlw	0
 35945  007DD4  6FA4               	movwf	(?___fttol+2)& (0+255),b
 35946  007DD6  0E00               	movlw	0
 35947  007DD8  6FA5               	movwf	(?___fttol+3)& (0+255),b
 35948                           
 35949                           ; BSR set to: 0
 35950  007DDA  0012               	return	
 35951  007DDC                     l9064:
 35952                           
 35953                           ; BSR set to: 0
 35954  007DDC  0E17               	movlw	23
 35955  007DDE  0100               	movlb	0	; () banked
 35956  007DE0  6FA6               	movwf	??___fttol& (0+255),b
 35957  007DE2  C0A2  F0A7         	movff	___fttol@f1,??___fttol+1
 35958  007DE6  C0A3  F0A8         	movff	___fttol@f1+1,??___fttol+2
 35959  007DEA  C0A4  F0A9         	movff	___fttol@f1+2,??___fttol+3
 35960  007DEE  0100               	movlb	0	; () banked
 35961  007DF0  29A6               	incf	??___fttol& (0+255),w,b
 35962  007DF2  0100               	movlb	0	; () banked
 35963  007DF4  6FAA               	movwf	(??___fttol+4)& (0+255),b
 35964  007DF6  D005               	goto	u8990
 35965  007DF8                     u8995:
 35966  007DF8  0100               	movlb	0	; () banked
 35967  007DFA  90D8               	bcf	status,0,c
 35968  007DFC  33A9               	rrcf	(??___fttol+3)& (0+255),f,b
 35969  007DFE  33A8               	rrcf	(??___fttol+2)& (0+255),f,b
 35970  007E00  33A7               	rrcf	(??___fttol+1)& (0+255),f,b
 35971  007E02                     u8990:
 35972  007E02  0100               	movlb	0	; () banked
 35973  007E04  2FAA               	decfsz	(??___fttol+4)& (0+255),f,b
 35974  007E06  D7F8               	goto	u8995
 35975  007E08  0100               	movlb	0	; () banked
 35976  007E0A  51A7               	movf	(??___fttol+1)& (0+255),w,b
 35977  007E0C  0100               	movlb	0	; () banked
 35978  007E0E  6FAB               	movwf	___fttol@sign1& (0+255),b
 35979                           
 35980                           ; BSR set to: 0
 35981  007E10  0100               	movlb	0	; () banked
 35982  007E12  8FA3               	bsf	(___fttol@f1+1)& (0+255),7,b
 35983                           
 35984                           ; BSR set to: 0
 35985  007E14  0EFF               	movlw	255
 35986  007E16  0100               	movlb	0	; () banked
 35987  007E18  17A2               	andwf	___fttol@f1& (0+255),f,b
 35988  007E1A  0EFF               	movlw	255
 35989  007E1C  0100               	movlb	0	; () banked
 35990  007E1E  17A3               	andwf	(___fttol@f1+1)& (0+255),f,b
 35991  007E20  0E00               	movlw	0
 35992  007E22  0100               	movlb	0	; () banked
 35993  007E24  17A4               	andwf	(___fttol@f1+2)& (0+255),f,b
 35994                           
 35995                           ; BSR set to: 0
 35996  007E26  0100               	movlb	0	; () banked
 35997  007E28  51A2               	movf	___fttol@f1& (0+255),w,b
 35998  007E2A  0100               	movlb	0	; () banked
 35999  007E2C  6FAC               	movwf	___fttol@lval& (0+255),b
 36000  007E2E  0100               	movlb	0	; () banked
 36001  007E30  51A3               	movf	(___fttol@f1+1)& (0+255),w,b
 36002  007E32  0100               	movlb	0	; () banked
 36003  007E34  6FAD               	movwf	(___fttol@lval+1)& (0+255),b
 36004  007E36  0100               	movlb	0	; () banked
 36005  007E38  51A4               	movf	(___fttol@f1+2)& (0+255),w,b
 36006  007E3A  0100               	movlb	0	; () banked
 36007  007E3C  6FAE               	movwf	(___fttol@lval+2)& (0+255),b
 36008  007E3E  0100               	movlb	0	; () banked
 36009  007E40  6BAF               	clrf	(___fttol@lval+3)& (0+255),b
 36010                           
 36011                           ; BSR set to: 0
 36012  007E42  0E8E               	movlw	142
 36013  007E44  0100               	movlb	0	; () banked
 36014  007E46  5FB0               	subwf	___fttol@exp1& (0+255),f,b
 36015                           
 36016                           ; BSR set to: 0
 36017  007E48  0100               	movlb	0	; () banked
 36018  007E4A  AFB0               	btfss	___fttol@exp1& (0+255),7,b
 36019  007E4C  D01B               	goto	l9086
 36020                           
 36021                           ; BSR set to: 0
 36022  007E4E  0100               	movlb	0	; () banked
 36023  007E50  51B0               	movf	___fttol@exp1& (0+255),w,b
 36024  007E52  0A80               	xorlw	128
 36025  007E54  0F8F               	addlw	143
 36026  007E56  B0D8               	btfsc	status,0,c
 36027  007E58  D00B               	goto	l9082
 36028                           
 36029                           ; BSR set to: 0
 36030  007E5A  0E00               	movlw	0
 36031  007E5C  0100               	movlb	0	; () banked
 36032  007E5E  6FA2               	movwf	?___fttol& (0+255),b
 36033  007E60  0E00               	movlw	0
 36034  007E62  6FA3               	movwf	(?___fttol+1)& (0+255),b
 36035  007E64  0E00               	movlw	0
 36036  007E66  6FA4               	movwf	(?___fttol+2)& (0+255),b
 36037  007E68  0E00               	movlw	0
 36038  007E6A  6FA5               	movwf	(?___fttol+3)& (0+255),b
 36039                           
 36040                           ; BSR set to: 0
 36041  007E6C  0012               	return	
 36042                           
 36043                           ; BSR set to: 0
 36044  007E6E  D000               	goto	l9082
 36045  007E70                     l9082:
 36046                           
 36047                           ; BSR set to: 0
 36048  007E70  0100               	movlb	0	; () banked
 36049  007E72  90D8               	bcf	status,0,c
 36050  007E74  33AF               	rrcf	(___fttol@lval+3)& (0+255),f,b
 36051  007E76  33AE               	rrcf	(___fttol@lval+2)& (0+255),f,b
 36052  007E78  33AD               	rrcf	(___fttol@lval+1)& (0+255),f,b
 36053  007E7A  33AC               	rrcf	___fttol@lval& (0+255),f,b
 36054                           
 36055                           ; BSR set to: 0
 36056  007E7C  0100               	movlb	0	; () banked
 36057  007E7E  3FB0               	incfsz	___fttol@exp1& (0+255),f,b
 36058  007E80  D7F7               	goto	l9082
 36059                           
 36060                           ; BSR set to: 0
 36061  007E82  D01F               	goto	l9096
 36062  007E84                     l9086:
 36063                           
 36064                           ; BSR set to: 0
 36065  007E84  0E17               	movlw	23
 36066  007E86  0100               	movlb	0	; () banked
 36067  007E88  65B0               	cpfsgt	___fttol@exp1& (0+255),b
 36068  007E8A  D014               	goto	l9094
 36069                           
 36070                           ; BSR set to: 0
 36071  007E8C  0E00               	movlw	0
 36072  007E8E  0100               	movlb	0	; () banked
 36073  007E90  6FA2               	movwf	?___fttol& (0+255),b
 36074  007E92  0E00               	movlw	0
 36075  007E94  6FA3               	movwf	(?___fttol+1)& (0+255),b
 36076  007E96  0E00               	movlw	0
 36077  007E98  6FA4               	movwf	(?___fttol+2)& (0+255),b
 36078  007E9A  0E00               	movlw	0
 36079  007E9C  6FA5               	movwf	(?___fttol+3)& (0+255),b
 36080                           
 36081                           ; BSR set to: 0
 36082  007E9E  0012               	return	
 36083                           
 36084                           ; BSR set to: 0
 36085  007EA0  D009               	goto	l9094
 36086  007EA2                     l9092:
 36087                           
 36088                           ; BSR set to: 0
 36089  007EA2  0100               	movlb	0	; () banked
 36090  007EA4  90D8               	bcf	status,0,c
 36091  007EA6  37AC               	rlcf	___fttol@lval& (0+255),f,b
 36092  007EA8  37AD               	rlcf	(___fttol@lval+1)& (0+255),f,b
 36093  007EAA  37AE               	rlcf	(___fttol@lval+2)& (0+255),f,b
 36094  007EAC  37AF               	rlcf	(___fttol@lval+3)& (0+255),f,b
 36095  007EAE  0100               	movlb	0	; () banked
 36096  007EB0  07B0               	decf	___fttol@exp1& (0+255),f,b
 36097  007EB2  D000               	goto	l9094
 36098  007EB4                     l9094:
 36099                           
 36100                           ; BSR set to: 0
 36101  007EB4  0100               	movlb	0	; () banked
 36102  007EB6  51B0               	movf	___fttol@exp1& (0+255),w,b
 36103  007EB8  0100               	movlb	0	; () banked
 36104  007EBA  B4D8               	btfsc	status,2,c
 36105  007EBC  D002               	goto	l9096
 36106  007EBE  D7F1               	goto	l9092
 36107                           
 36108                           ; BSR set to: 0
 36109  007EC0  D000               	goto	l9096
 36110  007EC2                     l9096:
 36111                           
 36112                           ; BSR set to: 0
 36113  007EC2  0100               	movlb	0	; () banked
 36114  007EC4  51AB               	movf	___fttol@sign1& (0+255),w,b
 36115  007EC6  0100               	movlb	0	; () banked
 36116  007EC8  B4D8               	btfsc	status,2,c
 36117  007ECA  D00A               	goto	l9100
 36118                           
 36119                           ; BSR set to: 0
 36120  007ECC  0100               	movlb	0	; () banked
 36121  007ECE  1FAF               	comf	(___fttol@lval+3)& (0+255),f,b
 36122  007ED0  1FAE               	comf	(___fttol@lval+2)& (0+255),f,b
 36123  007ED2  1FAD               	comf	(___fttol@lval+1)& (0+255),f,b
 36124  007ED4  6DAC               	negf	___fttol@lval& (0+255),b
 36125  007ED6  0E00               	movlw	0
 36126  007ED8  23AD               	addwfc	(___fttol@lval+1)& (0+255),f,b
 36127  007EDA  23AE               	addwfc	(___fttol@lval+2)& (0+255),f,b
 36128  007EDC  23AF               	addwfc	(___fttol@lval+3)& (0+255),f,b
 36129  007EDE  D000               	goto	l9100
 36130  007EE0                     l9100:
 36131                           
 36132                           ; BSR set to: 0
 36133  007EE0  C0AC  F0A2         	movff	___fttol@lval,?___fttol
 36134  007EE4  C0AD  F0A3         	movff	___fttol@lval+1,?___fttol+1
 36135  007EE8  C0AE  F0A4         	movff	___fttol@lval+2,?___fttol+2
 36136  007EEC  C0AF  F0A5         	movff	___fttol@lval+3,?___fttol+3
 36137  007EF0  0012               	return	
 36138                           
 36139                           ; BSR set to: 0
 36140                           
 36141                           ; BSR set to: 0
 36142  007EF2  0012               	return		;funcret
 36143  007EF4                     __end_of___fttol:
 36144                           	opt stack 0
 36145                           tblptru	equ	0xFF8
 36146                           tblptrh	equ	0xFF7
 36147                           tblptrl	equ	0xFF6
 36148                           tablat	equ	0xFF5
 36149                           prodh	equ	0xFF4
 36150                           prodl	equ	0xFF3
 36151                           intcon	equ	0xFF2
 36152                           intcon2	equ	0xFF1
 36153                           indf0	equ	0xFEF
 36154                           postinc0	equ	0xFEE
 36155                           plusw0	equ	0xFEB
 36156                           fsr0h	equ	0xFEA
 36157                           fsr0l	equ	0xFE9
 36158                           wreg	equ	0xFE8
 36159                           indf1	equ	0xFE7
 36160                           postdec1	equ	0xFE5
 36161                           fsr1h	equ	0xFE2
 36162                           fsr1l	equ	0xFE1
 36163                           indf2	equ	0xFDF
 36164                           postinc2	equ	0xFDE
 36165                           postdec2	equ	0xFDD
 36166                           plusw2	equ	0xFDB
 36167                           fsr2h	equ	0xFDA
 36168                           fsr2l	equ	0xFD9
 36169                           status	equ	0xFD8
 36170                           
 36171 ;; *************** function ___ftsub *****************
 36172 ;; Defined at:
 36173 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
 36174 ;; Parameters:    Size  Location     Type
 36175 ;;  f1              3   66[BANK0 ] float 
 36176 ;;  f2              3   69[BANK0 ] float 
 36177 ;; Auto vars:     Size  Location     Type
 36178 ;;		None
 36179 ;; Return value:  Size  Location     Type
 36180 ;;                  3   66[BANK0 ] float 
 36181 ;; Registers used:
 36182 ;;		wreg, status,2, status,0, cstack
 36183 ;; Tracked objects:
 36184 ;;		On entry : 0/0
 36185 ;;		On exit  : 0/0
 36186 ;;		Unchanged: 0/0
 36187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36188 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36191 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36192 ;;Total ram usage:        6 bytes
 36193 ;; Hardware stack levels used:    1
 36194 ;; Hardware stack levels required when called:    8
 36195 ;; This function calls:
 36196 ;;		___ftadd
 36197 ;; This function is called by:
 36198 ;;		_main
 36199 ;;		_sprintf
 36200 ;; This function uses a non-reentrant model
 36201 ;;
 36202                           
 36203                           	psect	text86
 36204  009DEA                     __ptext86:
 36205                           	opt stack 0
 36206  009DEA                     ___ftsub:
 36207                           	opt stack 22
 36208                           
 36209                           ; BSR set to: 0
 36210                           ;incstack = 0
 36211  009DEA  0100               	movlb	0	; () banked
 36212  009DEC  51A5               	movf	___ftsub@f2& (0+255),w,b
 36213  009DEE  0100               	movlb	0	; () banked
 36214  009DF0  11A6               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 36215  009DF2  0100               	movlb	0	; () banked
 36216  009DF4  11A7               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 36217  009DF6  B4D8               	btfsc	status,2,c
 36218  009DF8  D00A               	goto	l9032
 36219                           
 36220                           ; BSR set to: 0
 36221  009DFA  0E00               	movlw	0
 36222  009DFC  0100               	movlb	0	; () banked
 36223  009DFE  1BA5               	xorwf	___ftsub@f2& (0+255),f,b
 36224  009E00  0E00               	movlw	0
 36225  009E02  0100               	movlb	0	; () banked
 36226  009E04  1BA6               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 36227  009E06  0E80               	movlw	128
 36228  009E08  0100               	movlb	0	; () banked
 36229  009E0A  1BA7               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 36230  009E0C  D000               	goto	l9032
 36231  009E0E                     l9032:
 36232                           
 36233                           ; BSR set to: 0
 36234  009E0E  C0A2  F096         	movff	___ftsub@f1,___ftadd@f1
 36235  009E12  C0A3  F097         	movff	___ftsub@f1+1,___ftadd@f1+1
 36236  009E16  C0A4  F098         	movff	___ftsub@f1+2,___ftadd@f1+2
 36237  009E1A  C0A5  F099         	movff	___ftsub@f2,___ftadd@f2
 36238  009E1E  C0A6  F09A         	movff	___ftsub@f2+1,___ftadd@f2+1
 36239  009E22  C0A7  F09B         	movff	___ftsub@f2+2,___ftadd@f2+2
 36240  009E26  EC5A  F033         	call	___ftadd	;wreg free
 36241  009E2A  C096  F0A2         	movff	?___ftadd,?___ftsub
 36242  009E2E  C097  F0A3         	movff	?___ftadd+1,?___ftsub+1
 36243  009E32  C098  F0A4         	movff	?___ftadd+2,?___ftsub+2
 36244  009E36  0012               	return	
 36245  009E38  0012               	return		;funcret
 36246  009E3A                     __end_of___ftsub:
 36247                           	opt stack 0
 36248                           tblptru	equ	0xFF8
 36249                           tblptrh	equ	0xFF7
 36250                           tblptrl	equ	0xFF6
 36251                           tablat	equ	0xFF5
 36252                           prodh	equ	0xFF4
 36253                           prodl	equ	0xFF3
 36254                           intcon	equ	0xFF2
 36255                           intcon2	equ	0xFF1
 36256                           indf0	equ	0xFEF
 36257                           postinc0	equ	0xFEE
 36258                           plusw0	equ	0xFEB
 36259                           fsr0h	equ	0xFEA
 36260                           fsr0l	equ	0xFE9
 36261                           wreg	equ	0xFE8
 36262                           indf1	equ	0xFE7
 36263                           postdec1	equ	0xFE5
 36264                           fsr1h	equ	0xFE2
 36265                           fsr1l	equ	0xFE1
 36266                           indf2	equ	0xFDF
 36267                           postinc2	equ	0xFDE
 36268                           postdec2	equ	0xFDD
 36269                           plusw2	equ	0xFDB
 36270                           fsr2h	equ	0xFDA
 36271                           fsr2l	equ	0xFD9
 36272                           status	equ	0xFD8
 36273                           
 36274 ;; *************** function ___ftadd *****************
 36275 ;; Defined at:
 36276 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 36277 ;; Parameters:    Size  Location     Type
 36278 ;;  f1              3   54[BANK0 ] float 
 36279 ;;  f2              3   57[BANK0 ] float 
 36280 ;; Auto vars:     Size  Location     Type
 36281 ;;  exp1            1   65[BANK0 ] unsigned char 
 36282 ;;  exp2            1   64[BANK0 ] unsigned char 
 36283 ;;  sign            1   63[BANK0 ] unsigned char 
 36284 ;; Return value:  Size  Location     Type
 36285 ;;                  3   54[BANK0 ] float 
 36286 ;; Registers used:
 36287 ;;		wreg, status,2, status,0, cstack
 36288 ;; Tracked objects:
 36289 ;;		On entry : 0/0
 36290 ;;		On exit  : 0/0
 36291 ;;		Unchanged: 0/0
 36292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36293 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36294 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36295 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36296 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36297 ;;Total ram usage:       12 bytes
 36298 ;; Hardware stack levels used:    1
 36299 ;; Hardware stack levels required when called:    7
 36300 ;; This function calls:
 36301 ;;		___ftpack
 36302 ;; This function is called by:
 36303 ;;		_main
 36304 ;;		_Round
 36305 ;;		_sprintf
 36306 ;;		___ftsub
 36307 ;; This function uses a non-reentrant model
 36308 ;;
 36309                           
 36310                           	psect	text87
 36311  0066B4                     __ptext87:
 36312                           	opt stack 0
 36313  0066B4                     ___ftadd:
 36314                           	opt stack 22
 36315                           
 36316                           ;incstack = 0
 36317  0066B4  C098  F09C         	movff	___ftadd@f1+2,??___ftadd
 36318  0066B8  0100               	movlb	0	; () banked
 36319  0066BA  6B9D               	clrf	(??___ftadd+1)& (0+255),b
 36320  0066BC  6B9E               	clrf	(??___ftadd+2)& (0+255),b
 36321  0066BE  0100               	movlb	0	; () banked
 36322  0066C0  3597               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 36323  0066C2  0100               	movlb	0	; () banked
 36324  0066C4  379C               	rlcf	??___ftadd& (0+255),f,b
 36325  0066C6  E301               	bnc	u8221
 36326  0066C8  819D               	bsf	(??___ftadd+1)& (0+255),0,b
 36327  0066CA                     u8221:
 36328  0066CA  0100               	movlb	0	; () banked
 36329  0066CC  519C               	movf	??___ftadd& (0+255),w,b
 36330  0066CE  0100               	movlb	0	; () banked
 36331  0066D0  6FA1               	movwf	___ftadd@exp1& (0+255),b
 36332  0066D2  C09B  F09C         	movff	___ftadd@f2+2,??___ftadd
 36333  0066D6  0100               	movlb	0	; () banked
 36334  0066D8  6B9D               	clrf	(??___ftadd+1)& (0+255),b
 36335  0066DA  6B9E               	clrf	(??___ftadd+2)& (0+255),b
 36336  0066DC  0100               	movlb	0	; () banked
 36337  0066DE  359A               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 36338  0066E0  0100               	movlb	0	; () banked
 36339  0066E2  379C               	rlcf	??___ftadd& (0+255),f,b
 36340  0066E4  E301               	bnc	u8231
 36341  0066E6  819D               	bsf	(??___ftadd+1)& (0+255),0,b
 36342  0066E8                     u8231:
 36343  0066E8  0100               	movlb	0	; () banked
 36344  0066EA  519C               	movf	??___ftadd& (0+255),w,b
 36345  0066EC  0100               	movlb	0	; () banked
 36346  0066EE  6FA0               	movwf	___ftadd@exp2& (0+255),b
 36347                           
 36348                           ; BSR set to: 0
 36349  0066F0  0100               	movlb	0	; () banked
 36350  0066F2  51A1               	movf	___ftadd@exp1& (0+255),w,b
 36351  0066F4  0100               	movlb	0	; () banked
 36352  0066F6  B4D8               	btfsc	status,2,c
 36353  0066F8  D011               	goto	l2867
 36354                           
 36355                           ; BSR set to: 0
 36356  0066FA  0100               	movlb	0	; () banked
 36357  0066FC  51A0               	movf	___ftadd@exp2& (0+255),w,b
 36358  0066FE  0100               	movlb	0	; () banked
 36359  006700  5DA1               	subwf	___ftadd@exp1& (0+255),w,b
 36360  006702  B0D8               	btfsc	status,0,c
 36361  006704  D012               	goto	l8574
 36362                           
 36363                           ; BSR set to: 0
 36364  006706  0100               	movlb	0	; () banked
 36365  006708  51A1               	movf	___ftadd@exp1& (0+255),w,b
 36366  00670A  0800               	sublw	0
 36367  00670C  0100               	movlb	0	; () banked
 36368  00670E  25A0               	addwf	___ftadd@exp2& (0+255),w,b
 36369  006710  0100               	movlb	0	; () banked
 36370  006712  6F9C               	movwf	??___ftadd& (0+255),b
 36371  006714  0E18               	movlw	24
 36372  006716  0100               	movlb	0	; () banked
 36373  006718  659C               	cpfsgt	??___ftadd& (0+255),b
 36374  00671A  D007               	goto	l8574
 36375  00671C                     l2867:
 36376                           
 36377                           ; BSR set to: 0
 36378  00671C  C099  F096         	movff	___ftadd@f2,?___ftadd
 36379  006720  C09A  F097         	movff	___ftadd@f2+1,?___ftadd+1
 36380  006724  C09B  F098         	movff	___ftadd@f2+2,?___ftadd+2
 36381  006728  0012               	return	
 36382  00672A                     l8574:
 36383                           
 36384                           ; BSR set to: 0
 36385  00672A  0100               	movlb	0	; () banked
 36386  00672C  51A0               	movf	___ftadd@exp2& (0+255),w,b
 36387  00672E  0100               	movlb	0	; () banked
 36388  006730  B4D8               	btfsc	status,2,c
 36389  006732  D011               	goto	l2871
 36390                           
 36391                           ; BSR set to: 0
 36392  006734  0100               	movlb	0	; () banked
 36393  006736  51A1               	movf	___ftadd@exp1& (0+255),w,b
 36394  006738  0100               	movlb	0	; () banked
 36395  00673A  5DA0               	subwf	___ftadd@exp2& (0+255),w,b
 36396  00673C  B0D8               	btfsc	status,0,c
 36397  00673E  D012               	goto	l8580
 36398                           
 36399                           ; BSR set to: 0
 36400  006740  0100               	movlb	0	; () banked
 36401  006742  51A0               	movf	___ftadd@exp2& (0+255),w,b
 36402  006744  0800               	sublw	0
 36403  006746  0100               	movlb	0	; () banked
 36404  006748  25A1               	addwf	___ftadd@exp1& (0+255),w,b
 36405  00674A  0100               	movlb	0	; () banked
 36406  00674C  6F9C               	movwf	??___ftadd& (0+255),b
 36407  00674E  0E18               	movlw	24
 36408  006750  0100               	movlb	0	; () banked
 36409  006752  659C               	cpfsgt	??___ftadd& (0+255),b
 36410  006754  D007               	goto	l8580
 36411  006756                     l2871:
 36412                           
 36413                           ; BSR set to: 0
 36414  006756  C096  F096         	movff	___ftadd@f1,?___ftadd
 36415  00675A  C097  F097         	movff	___ftadd@f1+1,?___ftadd+1
 36416  00675E  C098  F098         	movff	___ftadd@f1+2,?___ftadd+2
 36417  006762  0012               	return	
 36418  006764                     l8580:
 36419                           
 36420                           ; BSR set to: 0
 36421  006764  0E06               	movlw	6
 36422  006766  0100               	movlb	0	; () banked
 36423  006768  6F9F               	movwf	___ftadd@sign& (0+255),b
 36424                           
 36425                           ; BSR set to: 0
 36426  00676A  0100               	movlb	0	; () banked
 36427  00676C  AF98               	btfss	(___ftadd@f1+2)& (0+255),7,b
 36428  00676E  D003               	goto	l8586
 36429                           
 36430                           ; BSR set to: 0
 36431  006770  0100               	movlb	0	; () banked
 36432  006772  8F9F               	bsf	___ftadd@sign& (0+255),7,b
 36433  006774  D000               	goto	l8586
 36434  006776                     l8586:
 36435                           
 36436                           ; BSR set to: 0
 36437  006776  0100               	movlb	0	; () banked
 36438  006778  AF9B               	btfss	(___ftadd@f2+2)& (0+255),7,b
 36439  00677A  D002               	goto	l2873
 36440                           
 36441                           ; BSR set to: 0
 36442  00677C  0100               	movlb	0	; () banked
 36443  00677E  8D9F               	bsf	___ftadd@sign& (0+255),6,b
 36444  006780                     l2873:
 36445                           
 36446                           ; BSR set to: 0
 36447  006780  0100               	movlb	0	; () banked
 36448  006782  8F97               	bsf	(___ftadd@f1+1)& (0+255),7,b
 36449                           
 36450                           ; BSR set to: 0
 36451  006784  0EFF               	movlw	255
 36452  006786  0100               	movlb	0	; () banked
 36453  006788  1796               	andwf	___ftadd@f1& (0+255),f,b
 36454  00678A  0EFF               	movlw	255
 36455  00678C  0100               	movlb	0	; () banked
 36456  00678E  1797               	andwf	(___ftadd@f1+1)& (0+255),f,b
 36457  006790  0E00               	movlw	0
 36458  006792  0100               	movlb	0	; () banked
 36459  006794  1798               	andwf	(___ftadd@f1+2)& (0+255),f,b
 36460  006796  0100               	movlb	0	; () banked
 36461  006798  8F9A               	bsf	(___ftadd@f2+1)& (0+255),7,b
 36462                           
 36463                           ; BSR set to: 0
 36464  00679A  0EFF               	movlw	255
 36465  00679C  0100               	movlb	0	; () banked
 36466  00679E  1799               	andwf	___ftadd@f2& (0+255),f,b
 36467  0067A0  0EFF               	movlw	255
 36468  0067A2  0100               	movlb	0	; () banked
 36469  0067A4  179A               	andwf	(___ftadd@f2+1)& (0+255),f,b
 36470  0067A6  0E00               	movlw	0
 36471  0067A8  0100               	movlb	0	; () banked
 36472  0067AA  179B               	andwf	(___ftadd@f2+2)& (0+255),f,b
 36473                           
 36474                           ; BSR set to: 0
 36475  0067AC  0100               	movlb	0	; () banked
 36476  0067AE  51A0               	movf	___ftadd@exp2& (0+255),w,b
 36477  0067B0  0100               	movlb	0	; () banked
 36478  0067B2  5DA1               	subwf	___ftadd@exp1& (0+255),w,b
 36479  0067B4  B0D8               	btfsc	status,0,c
 36480  0067B6  D028               	goto	l8606
 36481  0067B8                     l8596:
 36482                           
 36483                           ; BSR set to: 0
 36484  0067B8  0100               	movlb	0	; () banked
 36485  0067BA  90D8               	bcf	status,0,c
 36486  0067BC  3799               	rlcf	___ftadd@f2& (0+255),f,b
 36487  0067BE  379A               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 36488  0067C0  379B               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 36489  0067C2  0100               	movlb	0	; () banked
 36490  0067C4  07A0               	decf	___ftadd@exp2& (0+255),f,b
 36491                           
 36492                           ; BSR set to: 0
 36493  0067C6  0100               	movlb	0	; () banked
 36494  0067C8  51A1               	movf	___ftadd@exp1& (0+255),w,b
 36495  0067CA  0100               	movlb	0	; () banked
 36496  0067CC  19A0               	xorwf	___ftadd@exp2& (0+255),w,b
 36497  0067CE  B4D8               	btfsc	status,2,c
 36498  0067D0  D013               	goto	l8604
 36499                           
 36500                           ; BSR set to: 0
 36501  0067D2  0100               	movlb	0	; () banked
 36502  0067D4  079F               	decf	___ftadd@sign& (0+255),f,b
 36503  0067D6  C09F  F09C         	movff	___ftadd@sign,??___ftadd
 36504  0067DA  0E07               	movlw	7
 36505  0067DC  0100               	movlb	0	; () banked
 36506  0067DE  179C               	andwf	??___ftadd& (0+255),f,b
 36507  0067E0  B4D8               	btfsc	status,2,c
 36508  0067E2  D00A               	goto	l8604
 36509  0067E4  D7E9               	goto	l8596
 36510                           
 36511                           ; BSR set to: 0
 36512                           
 36513                           ; BSR set to: 0
 36514  0067E6  D008               	goto	l8604
 36515  0067E8                     l8602:
 36516                           
 36517                           ; BSR set to: 0
 36518  0067E8  0100               	movlb	0	; () banked
 36519  0067EA  90D8               	bcf	status,0,c
 36520  0067EC  3398               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 36521  0067EE  3397               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 36522  0067F0  3396               	rrcf	___ftadd@f1& (0+255),f,b
 36523  0067F2  0100               	movlb	0	; () banked
 36524  0067F4  2BA1               	incf	___ftadd@exp1& (0+255),f,b
 36525  0067F6  D000               	goto	l8604
 36526  0067F8                     l8604:
 36527                           
 36528                           ; BSR set to: 0
 36529  0067F8  0100               	movlb	0	; () banked
 36530  0067FA  51A0               	movf	___ftadd@exp2& (0+255),w,b
 36531  0067FC  0100               	movlb	0	; () banked
 36532  0067FE  19A1               	xorwf	___ftadd@exp1& (0+255),w,b
 36533  006800  B4D8               	btfsc	status,2,c
 36534  006802  D030               	goto	l2882
 36535  006804  D7F1               	goto	l8602
 36536                           
 36537                           ; BSR set to: 0
 36538  006806  D02E               	goto	l2882
 36539  006808                     l8606:
 36540                           
 36541                           ; BSR set to: 0
 36542  006808  0100               	movlb	0	; () banked
 36543  00680A  51A1               	movf	___ftadd@exp1& (0+255),w,b
 36544  00680C  0100               	movlb	0	; () banked
 36545  00680E  5DA0               	subwf	___ftadd@exp2& (0+255),w,b
 36546  006810  B0D8               	btfsc	status,0,c
 36547  006812  D028               	goto	l2882
 36548  006814                     l8608:
 36549                           
 36550                           ; BSR set to: 0
 36551  006814  0100               	movlb	0	; () banked
 36552  006816  90D8               	bcf	status,0,c
 36553  006818  3796               	rlcf	___ftadd@f1& (0+255),f,b
 36554  00681A  3797               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 36555  00681C  3798               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 36556  00681E  0100               	movlb	0	; () banked
 36557  006820  07A1               	decf	___ftadd@exp1& (0+255),f,b
 36558                           
 36559                           ; BSR set to: 0
 36560  006822  0100               	movlb	0	; () banked
 36561  006824  51A1               	movf	___ftadd@exp1& (0+255),w,b
 36562  006826  0100               	movlb	0	; () banked
 36563  006828  19A0               	xorwf	___ftadd@exp2& (0+255),w,b
 36564  00682A  B4D8               	btfsc	status,2,c
 36565  00682C  D013               	goto	l8616
 36566                           
 36567                           ; BSR set to: 0
 36568  00682E  0100               	movlb	0	; () banked
 36569  006830  079F               	decf	___ftadd@sign& (0+255),f,b
 36570  006832  C09F  F09C         	movff	___ftadd@sign,??___ftadd
 36571  006836  0E07               	movlw	7
 36572  006838  0100               	movlb	0	; () banked
 36573  00683A  179C               	andwf	??___ftadd& (0+255),f,b
 36574  00683C  B4D8               	btfsc	status,2,c
 36575  00683E  D00A               	goto	l8616
 36576  006840  D7E9               	goto	l8608
 36577                           
 36578                           ; BSR set to: 0
 36579                           
 36580                           ; BSR set to: 0
 36581  006842  D008               	goto	l8616
 36582  006844                     l8614:
 36583                           
 36584                           ; BSR set to: 0
 36585  006844  0100               	movlb	0	; () banked
 36586  006846  90D8               	bcf	status,0,c
 36587  006848  339B               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 36588  00684A  339A               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 36589  00684C  3399               	rrcf	___ftadd@f2& (0+255),f,b
 36590  00684E  0100               	movlb	0	; () banked
 36591  006850  2BA0               	incf	___ftadd@exp2& (0+255),f,b
 36592  006852  D000               	goto	l8616
 36593  006854                     l8616:
 36594                           
 36595                           ; BSR set to: 0
 36596  006854  0100               	movlb	0	; () banked
 36597  006856  51A0               	movf	___ftadd@exp2& (0+255),w,b
 36598  006858  0100               	movlb	0	; () banked
 36599  00685A  19A1               	xorwf	___ftadd@exp1& (0+255),w,b
 36600  00685C  B4D8               	btfsc	status,2,c
 36601  00685E  D002               	goto	l2882
 36602  006860  D7F1               	goto	l8614
 36603                           
 36604                           ; BSR set to: 0
 36605  006862  D000               	goto	l2882
 36606  006864                     l2882:
 36607                           
 36608                           ; BSR set to: 0
 36609  006864  0100               	movlb	0	; () banked
 36610  006866  AF9F               	btfss	___ftadd@sign& (0+255),7,b
 36611  006868  D012               	goto	l2891
 36612                           
 36613                           ; BSR set to: 0
 36614  00686A  0EFF               	movlw	255
 36615  00686C  0100               	movlb	0	; () banked
 36616  00686E  1B96               	xorwf	___ftadd@f1& (0+255),f,b
 36617  006870  0EFF               	movlw	255
 36618  006872  0100               	movlb	0	; () banked
 36619  006874  1B97               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 36620  006876  0EFF               	movlw	255
 36621  006878  0100               	movlb	0	; () banked
 36622  00687A  1B98               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 36623  00687C  0E01               	movlw	1
 36624  00687E  0100               	movlb	0	; () banked
 36625  006880  2796               	addwf	___ftadd@f1& (0+255),f,b
 36626  006882  0E00               	movlw	0
 36627  006884  0100               	movlb	0	; () banked
 36628  006886  2397               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 36629  006888  0E00               	movlw	0
 36630  00688A  0100               	movlb	0	; () banked
 36631  00688C  2398               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 36632  00688E                     l2891:
 36633                           
 36634                           ; BSR set to: 0
 36635  00688E  0100               	movlb	0	; () banked
 36636  006890  AD9F               	btfss	___ftadd@sign& (0+255),6,b
 36637  006892  D013               	goto	l8622
 36638                           
 36639                           ; BSR set to: 0
 36640  006894  0EFF               	movlw	255
 36641  006896  0100               	movlb	0	; () banked
 36642  006898  1B99               	xorwf	___ftadd@f2& (0+255),f,b
 36643  00689A  0EFF               	movlw	255
 36644  00689C  0100               	movlb	0	; () banked
 36645  00689E  1B9A               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 36646  0068A0  0EFF               	movlw	255
 36647  0068A2  0100               	movlb	0	; () banked
 36648  0068A4  1B9B               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 36649  0068A6  0E01               	movlw	1
 36650  0068A8  0100               	movlb	0	; () banked
 36651  0068AA  2799               	addwf	___ftadd@f2& (0+255),f,b
 36652  0068AC  0E00               	movlw	0
 36653  0068AE  0100               	movlb	0	; () banked
 36654  0068B0  239A               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 36655  0068B2  0E00               	movlw	0
 36656  0068B4  0100               	movlb	0	; () banked
 36657  0068B6  239B               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 36658  0068B8  D000               	goto	l8622
 36659  0068BA                     l8622:
 36660                           
 36661                           ; BSR set to: 0
 36662  0068BA  0E00               	movlw	0
 36663  0068BC  0100               	movlb	0	; () banked
 36664  0068BE  6F9F               	movwf	___ftadd@sign& (0+255),b
 36665                           
 36666                           ; BSR set to: 0
 36667  0068C0  0100               	movlb	0	; () banked
 36668  0068C2  5196               	movf	___ftadd@f1& (0+255),w,b
 36669  0068C4  0100               	movlb	0	; () banked
 36670  0068C6  2799               	addwf	___ftadd@f2& (0+255),f,b
 36671  0068C8  0100               	movlb	0	; () banked
 36672  0068CA  5197               	movf	(___ftadd@f1+1)& (0+255),w,b
 36673  0068CC  0100               	movlb	0	; () banked
 36674  0068CE  239A               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 36675  0068D0  0100               	movlb	0	; () banked
 36676  0068D2  5198               	movf	(___ftadd@f1+2)& (0+255),w,b
 36677  0068D4  0100               	movlb	0	; () banked
 36678  0068D6  239B               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 36679                           
 36680                           ; BSR set to: 0
 36681  0068D8  0100               	movlb	0	; () banked
 36682  0068DA  AF9B               	btfss	(___ftadd@f2+2)& (0+255),7,b
 36683  0068DC  D016               	goto	l8632
 36684                           
 36685                           ; BSR set to: 0
 36686  0068DE  0EFF               	movlw	255
 36687  0068E0  0100               	movlb	0	; () banked
 36688  0068E2  1B99               	xorwf	___ftadd@f2& (0+255),f,b
 36689  0068E4  0EFF               	movlw	255
 36690  0068E6  0100               	movlb	0	; () banked
 36691  0068E8  1B9A               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 36692  0068EA  0EFF               	movlw	255
 36693  0068EC  0100               	movlb	0	; () banked
 36694  0068EE  1B9B               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 36695  0068F0  0E01               	movlw	1
 36696  0068F2  0100               	movlb	0	; () banked
 36697  0068F4  2799               	addwf	___ftadd@f2& (0+255),f,b
 36698  0068F6  0E00               	movlw	0
 36699  0068F8  0100               	movlb	0	; () banked
 36700  0068FA  239A               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 36701  0068FC  0E00               	movlw	0
 36702  0068FE  0100               	movlb	0	; () banked
 36703  006900  239B               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 36704                           
 36705                           ; BSR set to: 0
 36706  006902  0E01               	movlw	1
 36707  006904  0100               	movlb	0	; () banked
 36708  006906  6F9F               	movwf	___ftadd@sign& (0+255),b
 36709  006908  D000               	goto	l8632
 36710  00690A                     l8632:
 36711                           
 36712                           ; BSR set to: 0
 36713  00690A  C099  F063         	movff	___ftadd@f2,___ftpack@arg
 36714  00690E  C09A  F064         	movff	___ftadd@f2+1,___ftpack@arg+1
 36715  006912  C09B  F065         	movff	___ftadd@f2+2,___ftpack@arg+2
 36716  006916  C0A1  F066         	movff	___ftadd@exp1,___ftpack@exp
 36717  00691A  C09F  F067         	movff	___ftadd@sign,___ftpack@sign
 36718  00691E  EC54  F041         	call	___ftpack	;wreg free
 36719  006922  C063  F096         	movff	?___ftpack,?___ftadd
 36720  006926  C064  F097         	movff	?___ftpack+1,?___ftadd+1
 36721  00692A  C065  F098         	movff	?___ftpack+2,?___ftadd+2
 36722  00692E  0012               	return	
 36723  006930  0012               	return		;funcret
 36724  006932                     __end_of___ftadd:
 36725                           	opt stack 0
 36726                           tblptru	equ	0xFF8
 36727                           tblptrh	equ	0xFF7
 36728                           tblptrl	equ	0xFF6
 36729                           tablat	equ	0xFF5
 36730                           prodh	equ	0xFF4
 36731                           prodl	equ	0xFF3
 36732                           intcon	equ	0xFF2
 36733                           intcon2	equ	0xFF1
 36734                           indf0	equ	0xFEF
 36735                           postinc0	equ	0xFEE
 36736                           plusw0	equ	0xFEB
 36737                           fsr0h	equ	0xFEA
 36738                           fsr0l	equ	0xFE9
 36739                           wreg	equ	0xFE8
 36740                           indf1	equ	0xFE7
 36741                           postdec1	equ	0xFE5
 36742                           fsr1h	equ	0xFE2
 36743                           fsr1l	equ	0xFE1
 36744                           indf2	equ	0xFDF
 36745                           postinc2	equ	0xFDE
 36746                           postdec2	equ	0xFDD
 36747                           plusw2	equ	0xFDB
 36748                           fsr2h	equ	0xFDA
 36749                           fsr2l	equ	0xFD9
 36750                           status	equ	0xFD8
 36751                           
 36752 ;; *************** function ___ftpack *****************
 36753 ;; Defined at:
 36754 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 36755 ;; Parameters:    Size  Location     Type
 36756 ;;  arg             3    3[BANK0 ] unsigned um
 36757 ;;  exp             1    6[BANK0 ] unsigned char 
 36758 ;;  sign            1    7[BANK0 ] unsigned char 
 36759 ;; Auto vars:     Size  Location     Type
 36760 ;;		None
 36761 ;; Return value:  Size  Location     Type
 36762 ;;                  3    3[BANK0 ] float 
 36763 ;; Registers used:
 36764 ;;		wreg, status,2, status,0
 36765 ;; Tracked objects:
 36766 ;;		On entry : 0/0
 36767 ;;		On exit  : 0/0
 36768 ;;		Unchanged: 0/0
 36769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36770 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36772 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36773 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36774 ;;Total ram usage:        8 bytes
 36775 ;; Hardware stack levels used:    1
 36776 ;; Hardware stack levels required when called:    6
 36777 ;; This function calls:
 36778 ;;		Nothing
 36779 ;; This function is called by:
 36780 ;;		___altoft
 36781 ;;		___ftadd
 36782 ;;		___ftdiv
 36783 ;;		___ftmul
 36784 ;;		___lltoft
 36785 ;;		___lwtoft
 36786 ;; This function uses a non-reentrant model
 36787 ;;
 36788                           
 36789                           	psect	text88
 36790  0082A8                     __ptext88:
 36791                           	opt stack 0
 36792  0082A8                     ___ftpack:
 36793                           	opt stack 22
 36794                           
 36795                           ;incstack = 0
 36796  0082A8  0100               	movlb	0	; () banked
 36797  0082AA  5166               	movf	___ftpack@exp& (0+255),w,b
 36798  0082AC  0100               	movlb	0	; () banked
 36799  0082AE  B4D8               	btfsc	status,2,c
 36800  0082B0  D008               	goto	l8494
 36801                           
 36802                           ; BSR set to: 0
 36803  0082B2  0100               	movlb	0	; () banked
 36804  0082B4  5163               	movf	___ftpack@arg& (0+255),w,b
 36805  0082B6  0100               	movlb	0	; () banked
 36806  0082B8  1164               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 36807  0082BA  0100               	movlb	0	; () banked
 36808  0082BC  1165               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 36809  0082BE  A4D8               	btfss	status,2,c
 36810  0082C0  D013               	goto	l8500
 36811  0082C2                     l8494:
 36812                           
 36813                           ; BSR set to: 0
 36814  0082C2  0E00               	movlw	0
 36815  0082C4  0100               	movlb	0	; () banked
 36816  0082C6  6F63               	movwf	?___ftpack& (0+255),b
 36817  0082C8  0E00               	movlw	0
 36818  0082CA  0100               	movlb	0	; () banked
 36819  0082CC  6F64               	movwf	(?___ftpack+1)& (0+255),b
 36820  0082CE  0E00               	movlw	0
 36821  0082D0  0100               	movlb	0	; () banked
 36822  0082D2  6F65               	movwf	(?___ftpack+2)& (0+255),b
 36823                           
 36824                           ; BSR set to: 0
 36825  0082D4  0012               	return	
 36826                           
 36827                           ; BSR set to: 0
 36828  0082D6  D008               	goto	l8500
 36829  0082D8                     l8498:
 36830                           
 36831                           ; BSR set to: 0
 36832  0082D8  0100               	movlb	0	; () banked
 36833  0082DA  2B66               	incf	___ftpack@exp& (0+255),f,b
 36834  0082DC  0100               	movlb	0	; () banked
 36835  0082DE  90D8               	bcf	status,0,c
 36836  0082E0  3365               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 36837  0082E2  3364               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 36838  0082E4  3363               	rrcf	___ftpack@arg& (0+255),f,b
 36839  0082E6  D000               	goto	l8500
 36840  0082E8                     l8500:
 36841                           
 36842                           ; BSR set to: 0
 36843  0082E8  0E00               	movlw	0
 36844  0082EA  0100               	movlb	0	; () banked
 36845  0082EC  1563               	andwf	___ftpack@arg& (0+255),w,b
 36846  0082EE  0100               	movlb	0	; () banked
 36847  0082F0  6F68               	movwf	??___ftpack& (0+255),b
 36848  0082F2  0E00               	movlw	0
 36849  0082F4  0100               	movlb	0	; () banked
 36850  0082F6  1564               	andwf	(___ftpack@arg+1)& (0+255),w,b
 36851  0082F8  0100               	movlb	0	; () banked
 36852  0082FA  6F69               	movwf	(??___ftpack+1)& (0+255),b
 36853  0082FC  0EFE               	movlw	254
 36854  0082FE  0100               	movlb	0	; () banked
 36855  008300  1565               	andwf	(___ftpack@arg+2)& (0+255),w,b
 36856  008302  0100               	movlb	0	; () banked
 36857  008304  6F6A               	movwf	(??___ftpack+2)& (0+255),b
 36858  008306  0100               	movlb	0	; () banked
 36859  008308  5168               	movf	??___ftpack& (0+255),w,b
 36860  00830A  0100               	movlb	0	; () banked
 36861  00830C  1169               	iorwf	(??___ftpack+1)& (0+255),w,b
 36862  00830E  0100               	movlb	0	; () banked
 36863  008310  116A               	iorwf	(??___ftpack+2)& (0+255),w,b
 36864  008312  B4D8               	btfsc	status,2,c
 36865  008314  D013               	goto	l8506
 36866  008316  D7E0               	goto	l8498
 36867                           
 36868                           ; BSR set to: 0
 36869  008318  D011               	goto	l8506
 36870  00831A                     l8502:
 36871                           
 36872                           ; BSR set to: 0
 36873  00831A  0100               	movlb	0	; () banked
 36874  00831C  2B66               	incf	___ftpack@exp& (0+255),f,b
 36875                           
 36876                           ; BSR set to: 0
 36877  00831E  0E01               	movlw	1
 36878  008320  0100               	movlb	0	; () banked
 36879  008322  2763               	addwf	___ftpack@arg& (0+255),f,b
 36880  008324  0E00               	movlw	0
 36881  008326  0100               	movlb	0	; () banked
 36882  008328  2364               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 36883  00832A  0E00               	movlw	0
 36884  00832C  0100               	movlb	0	; () banked
 36885  00832E  2365               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 36886  008330  0100               	movlb	0	; () banked
 36887  008332  90D8               	bcf	status,0,c
 36888  008334  3365               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 36889  008336  3364               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 36890  008338  3363               	rrcf	___ftpack@arg& (0+255),f,b
 36891  00833A  D000               	goto	l8506
 36892  00833C                     l8506:
 36893                           
 36894                           ; BSR set to: 0
 36895  00833C  0E00               	movlw	0
 36896  00833E  0100               	movlb	0	; () banked
 36897  008340  1563               	andwf	___ftpack@arg& (0+255),w,b
 36898  008342  0100               	movlb	0	; () banked
 36899  008344  6F68               	movwf	??___ftpack& (0+255),b
 36900  008346  0E00               	movlw	0
 36901  008348  0100               	movlb	0	; () banked
 36902  00834A  1564               	andwf	(___ftpack@arg+1)& (0+255),w,b
 36903  00834C  0100               	movlb	0	; () banked
 36904  00834E  6F69               	movwf	(??___ftpack+1)& (0+255),b
 36905  008350  0EFF               	movlw	255
 36906  008352  0100               	movlb	0	; () banked
 36907  008354  1565               	andwf	(___ftpack@arg+2)& (0+255),w,b
 36908  008356  0100               	movlb	0	; () banked
 36909  008358  6F6A               	movwf	(??___ftpack+2)& (0+255),b
 36910  00835A  0100               	movlb	0	; () banked
 36911  00835C  5168               	movf	??___ftpack& (0+255),w,b
 36912  00835E  0100               	movlb	0	; () banked
 36913  008360  1169               	iorwf	(??___ftpack+1)& (0+255),w,b
 36914  008362  0100               	movlb	0	; () banked
 36915  008364  116A               	iorwf	(??___ftpack+2)& (0+255),w,b
 36916  008366  B4D8               	btfsc	status,2,c
 36917  008368  D00A               	goto	l8510
 36918  00836A  D7D7               	goto	l8502
 36919                           
 36920                           ; BSR set to: 0
 36921  00836C  D008               	goto	l8510
 36922  00836E                     l8508:
 36923                           
 36924                           ; BSR set to: 0
 36925  00836E  0100               	movlb	0	; () banked
 36926  008370  0766               	decf	___ftpack@exp& (0+255),f,b
 36927  008372  0100               	movlb	0	; () banked
 36928  008374  90D8               	bcf	status,0,c
 36929  008376  3763               	rlcf	___ftpack@arg& (0+255),f,b
 36930  008378  3764               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 36931  00837A  3765               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 36932  00837C  D000               	goto	l8510
 36933  00837E                     l8510:
 36934                           
 36935                           ; BSR set to: 0
 36936  00837E  0100               	movlb	0	; () banked
 36937  008380  BF64               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 36938  008382  D005               	goto	l2838
 36939                           
 36940                           ; BSR set to: 0
 36941  008384  0E02               	movlw	2
 36942  008386  0100               	movlb	0	; () banked
 36943  008388  6166               	cpfslt	___ftpack@exp& (0+255),b
 36944  00838A  D7F1               	goto	l8508
 36945  00838C  D000               	goto	l2838
 36946  00838E                     l2838:
 36947                           
 36948                           ; BSR set to: 0
 36949  00838E  0100               	movlb	0	; () banked
 36950  008390  B166               	btfsc	___ftpack@exp& (0+255),0,b
 36951  008392  D003               	goto	l8516
 36952                           
 36953                           ; BSR set to: 0
 36954  008394  0100               	movlb	0	; () banked
 36955  008396  9F64               	bcf	(___ftpack@arg+1)& (0+255),7,b
 36956  008398  D000               	goto	l8516
 36957  00839A                     l8516:
 36958                           
 36959                           ; BSR set to: 0
 36960  00839A  0100               	movlb	0	; () banked
 36961  00839C  90D8               	bcf	status,0,c
 36962  00839E  3366               	rrcf	___ftpack@exp& (0+255),f,b
 36963  0083A0  0100               	movlb	0	; () banked
 36964  0083A2  5166               	movf	___ftpack@exp& (0+255),w,b
 36965  0083A4  0100               	movlb	0	; () banked
 36966  0083A6  1365               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 36967                           
 36968                           ; BSR set to: 0
 36969  0083A8  0100               	movlb	0	; () banked
 36970  0083AA  5167               	movf	___ftpack@sign& (0+255),w,b
 36971  0083AC  0100               	movlb	0	; () banked
 36972  0083AE  B4D8               	btfsc	status,2,c
 36973  0083B0  D003               	goto	l8522
 36974                           
 36975                           ; BSR set to: 0
 36976  0083B2  0100               	movlb	0	; () banked
 36977  0083B4  8F65               	bsf	(___ftpack@arg+2)& (0+255),7,b
 36978  0083B6  D000               	goto	l8522
 36979  0083B8                     l8522:
 36980                           
 36981                           ; BSR set to: 0
 36982  0083B8  C063  F063         	movff	___ftpack@arg,?___ftpack
 36983  0083BC  C064  F064         	movff	___ftpack@arg+1,?___ftpack+1
 36984  0083C0  C065  F065         	movff	___ftpack@arg+2,?___ftpack+2
 36985  0083C4  0012               	return	
 36986                           
 36987                           ; BSR set to: 0
 36988                           
 36989                           ; BSR set to: 0
 36990  0083C6  0012               	return		;funcret
 36991  0083C8                     __end_of___ftpack:
 36992                           	opt stack 0
 36993                           tblptru	equ	0xFF8
 36994                           tblptrh	equ	0xFF7
 36995                           tblptrl	equ	0xFF6
 36996                           tablat	equ	0xFF5
 36997                           prodh	equ	0xFF4
 36998                           prodl	equ	0xFF3
 36999                           intcon	equ	0xFF2
 37000                           intcon2	equ	0xFF1
 37001                           indf0	equ	0xFEF
 37002                           postinc0	equ	0xFEE
 37003                           plusw0	equ	0xFEB
 37004                           fsr0h	equ	0xFEA
 37005                           fsr0l	equ	0xFE9
 37006                           wreg	equ	0xFE8
 37007                           indf1	equ	0xFE7
 37008                           postdec1	equ	0xFE5
 37009                           fsr1h	equ	0xFE2
 37010                           fsr1l	equ	0xFE1
 37011                           indf2	equ	0xFDF
 37012                           postinc2	equ	0xFDE
 37013                           postdec2	equ	0xFDD
 37014                           plusw2	equ	0xFDB
 37015                           fsr2h	equ	0xFDA
 37016                           fsr2l	equ	0xFD9
 37017                           status	equ	0xFD8
 37018                           
 37019 ;; *************** function ___ftneg *****************
 37020 ;; Defined at:
 37021 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
 37022 ;; Parameters:    Size  Location     Type
 37023 ;;  f1              3    3[BANK0 ] float 
 37024 ;; Auto vars:     Size  Location     Type
 37025 ;;		None
 37026 ;; Return value:  Size  Location     Type
 37027 ;;                  3    3[BANK0 ] float 
 37028 ;; Registers used:
 37029 ;;		wreg, status,2, status,0
 37030 ;; Tracked objects:
 37031 ;;		On entry : 0/0
 37032 ;;		On exit  : 0/0
 37033 ;;		Unchanged: 0/0
 37034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37035 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37038 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37039 ;;Total ram usage:        3 bytes
 37040 ;; Hardware stack levels used:    1
 37041 ;; Hardware stack levels required when called:    6
 37042 ;; This function calls:
 37043 ;;		Nothing
 37044 ;; This function is called by:
 37045 ;;		_sprintf
 37046 ;; This function uses a non-reentrant model
 37047 ;;
 37048                           
 37049                           	psect	text89
 37050  00A184                     __ptext89:
 37051                           	opt stack 0
 37052  00A184                     ___ftneg:
 37053                           	opt stack 22
 37054                           
 37055                           ; BSR set to: 0
 37056                           ;incstack = 0
 37057  00A184  0100               	movlb	0	; () banked
 37058  00A186  5163               	movf	___ftneg@f1& (0+255),w,b
 37059  00A188  0100               	movlb	0	; () banked
 37060  00A18A  1164               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 37061  00A18C  0100               	movlb	0	; () banked
 37062  00A18E  1165               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 37063  00A190  B4D8               	btfsc	status,2,c
 37064  00A192  D009               	goto	l2941
 37065                           
 37066                           ; BSR set to: 0
 37067  00A194  0E00               	movlw	0
 37068  00A196  0100               	movlb	0	; () banked
 37069  00A198  1B63               	xorwf	___ftneg@f1& (0+255),f,b
 37070  00A19A  0E00               	movlw	0
 37071  00A19C  0100               	movlb	0	; () banked
 37072  00A19E  1B64               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 37073  00A1A0  0E80               	movlw	128
 37074  00A1A2  0100               	movlb	0	; () banked
 37075  00A1A4  1B65               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 37076  00A1A6                     l2941:
 37077                           
 37078                           ; BSR set to: 0
 37079  00A1A6  C063  F063         	movff	___ftneg@f1,?___ftneg
 37080  00A1AA  C064  F064         	movff	___ftneg@f1+1,?___ftneg+1
 37081  00A1AE  C065  F065         	movff	___ftneg@f1+2,?___ftneg+2
 37082                           
 37083                           ; BSR set to: 0
 37084  00A1B2  0012               	return		;funcret
 37085  00A1B4                     __end_of___ftneg:
 37086                           	opt stack 0
 37087                           tblptru	equ	0xFF8
 37088                           tblptrh	equ	0xFF7
 37089                           tblptrl	equ	0xFF6
 37090                           tablat	equ	0xFF5
 37091                           prodh	equ	0xFF4
 37092                           prodl	equ	0xFF3
 37093                           intcon	equ	0xFF2
 37094                           intcon2	equ	0xFF1
 37095                           indf0	equ	0xFEF
 37096                           postinc0	equ	0xFEE
 37097                           plusw0	equ	0xFEB
 37098                           fsr0h	equ	0xFEA
 37099                           fsr0l	equ	0xFE9
 37100                           wreg	equ	0xFE8
 37101                           indf1	equ	0xFE7
 37102                           postdec1	equ	0xFE5
 37103                           fsr1h	equ	0xFE2
 37104                           fsr1l	equ	0xFE1
 37105                           indf2	equ	0xFDF
 37106                           postinc2	equ	0xFDE
 37107                           postdec2	equ	0xFDD
 37108                           plusw2	equ	0xFDB
 37109                           fsr2h	equ	0xFDA
 37110                           fsr2l	equ	0xFD9
 37111                           status	equ	0xFD8
 37112                           
 37113 ;; *************** function ___ftge *****************
 37114 ;; Defined at:
 37115 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
 37116 ;; Parameters:    Size  Location     Type
 37117 ;;  ff1             3    3[BANK0 ] float 
 37118 ;;  ff2             3    6[BANK0 ] float 
 37119 ;; Auto vars:     Size  Location     Type
 37120 ;;		None
 37121 ;; Return value:  Size  Location     Type
 37122 ;;		None               void
 37123 ;; Registers used:
 37124 ;;		wreg, status,2, status,0
 37125 ;; Tracked objects:
 37126 ;;		On entry : 0/0
 37127 ;;		On exit  : 0/0
 37128 ;;		Unchanged: 0/0
 37129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37130 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37132 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37133 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37134 ;;Total ram usage:        9 bytes
 37135 ;; Hardware stack levels used:    1
 37136 ;; Hardware stack levels required when called:    6
 37137 ;; This function calls:
 37138 ;;		Nothing
 37139 ;; This function is called by:
 37140 ;;		_main
 37141 ;;		_sprintf
 37142 ;; This function uses a non-reentrant model
 37143 ;;
 37144                           
 37145                           	psect	text90
 37146  008DC2                     __ptext90:
 37147                           	opt stack 0
 37148  008DC2                     ___ftge:
 37149                           	opt stack 24
 37150                           
 37151                           ; BSR set to: 0
 37152                           ;incstack = 0
 37153  008DC2  0100               	movlb	0	; () banked
 37154  008DC4  AF65               	btfss	(___ftge@ff1+2)& (0+255),7,b
 37155  008DC6  D01E               	goto	l9040
 37156                           
 37157                           ; BSR set to: 0
 37158  008DC8  C063  F069         	movff	___ftge@ff1,??___ftge
 37159  008DCC  C064  F06A         	movff	___ftge@ff1+1,??___ftge+1
 37160  008DD0  C065  F06B         	movff	___ftge@ff1+2,??___ftge+2
 37161  008DD4  0100               	movlb	0	; () banked
 37162  008DD6  1F69               	comf	??___ftge& (0+255),f,b
 37163  008DD8  1F6A               	comf	(??___ftge+1)& (0+255),f,b
 37164  008DDA  1F6B               	comf	(??___ftge+2)& (0+255),f,b
 37165  008DDC  2B69               	incf	??___ftge& (0+255),f,b
 37166  008DDE  0E00               	movlw	0
 37167  008DE0  236A               	addwfc	(??___ftge+1)& (0+255),f,b
 37168  008DE2  236B               	addwfc	(??___ftge+2)& (0+255),f,b
 37169  008DE4  0E00               	movlw	0
 37170  008DE6  0100               	movlb	0	; () banked
 37171  008DE8  2569               	addwf	??___ftge& (0+255),w,b
 37172  008DEA  0100               	movlb	0	; () banked
 37173  008DEC  6F63               	movwf	___ftge@ff1& (0+255),b
 37174  008DEE  0E00               	movlw	0
 37175  008DF0  0100               	movlb	0	; () banked
 37176  008DF2  216A               	addwfc	(??___ftge+1)& (0+255),w,b
 37177  008DF4  0100               	movlb	0	; () banked
 37178  008DF6  6F64               	movwf	(___ftge@ff1+1)& (0+255),b
 37179  008DF8  0E80               	movlw	128
 37180  008DFA  0100               	movlb	0	; () banked
 37181  008DFC  216B               	addwfc	(??___ftge+2)& (0+255),w,b
 37182  008DFE  0100               	movlb	0	; () banked
 37183  008E00  6F65               	movwf	(___ftge@ff1+2)& (0+255),b
 37184  008E02  D000               	goto	l9040
 37185  008E04                     l9040:
 37186                           
 37187                           ; BSR set to: 0
 37188  008E04  0100               	movlb	0	; () banked
 37189  008E06  AF68               	btfss	(___ftge@ff2+2)& (0+255),7,b
 37190  008E08  D01E               	goto	l9044
 37191                           
 37192                           ; BSR set to: 0
 37193  008E0A  C066  F069         	movff	___ftge@ff2,??___ftge
 37194  008E0E  C067  F06A         	movff	___ftge@ff2+1,??___ftge+1
 37195  008E12  C068  F06B         	movff	___ftge@ff2+2,??___ftge+2
 37196  008E16  0100               	movlb	0	; () banked
 37197  008E18  1F69               	comf	??___ftge& (0+255),f,b
 37198  008E1A  1F6A               	comf	(??___ftge+1)& (0+255),f,b
 37199  008E1C  1F6B               	comf	(??___ftge+2)& (0+255),f,b
 37200  008E1E  2B69               	incf	??___ftge& (0+255),f,b
 37201  008E20  0E00               	movlw	0
 37202  008E22  236A               	addwfc	(??___ftge+1)& (0+255),f,b
 37203  008E24  236B               	addwfc	(??___ftge+2)& (0+255),f,b
 37204  008E26  0E00               	movlw	0
 37205  008E28  0100               	movlb	0	; () banked
 37206  008E2A  2569               	addwf	??___ftge& (0+255),w,b
 37207  008E2C  0100               	movlb	0	; () banked
 37208  008E2E  6F66               	movwf	___ftge@ff2& (0+255),b
 37209  008E30  0E00               	movlw	0
 37210  008E32  0100               	movlb	0	; () banked
 37211  008E34  216A               	addwfc	(??___ftge+1)& (0+255),w,b
 37212  008E36  0100               	movlb	0	; () banked
 37213  008E38  6F67               	movwf	(___ftge@ff2+1)& (0+255),b
 37214  008E3A  0E80               	movlw	128
 37215  008E3C  0100               	movlb	0	; () banked
 37216  008E3E  216B               	addwfc	(??___ftge+2)& (0+255),w,b
 37217  008E40  0100               	movlb	0	; () banked
 37218  008E42  6F68               	movwf	(___ftge@ff2+2)& (0+255),b
 37219  008E44  D000               	goto	l9044
 37220  008E46                     l9044:
 37221                           
 37222                           ; BSR set to: 0
 37223  008E46  0E00               	movlw	0
 37224  008E48  0100               	movlb	0	; () banked
 37225  008E4A  1B63               	xorwf	___ftge@ff1& (0+255),f,b
 37226  008E4C  0E00               	movlw	0
 37227  008E4E  0100               	movlb	0	; () banked
 37228  008E50  1B64               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 37229  008E52  0E80               	movlw	128
 37230  008E54  0100               	movlb	0	; () banked
 37231  008E56  1B65               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 37232                           
 37233                           ; BSR set to: 0
 37234  008E58  0E00               	movlw	0
 37235  008E5A  0100               	movlb	0	; () banked
 37236  008E5C  1B66               	xorwf	___ftge@ff2& (0+255),f,b
 37237  008E5E  0E00               	movlw	0
 37238  008E60  0100               	movlb	0	; () banked
 37239  008E62  1B67               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 37240  008E64  0E80               	movlw	128
 37241  008E66  0100               	movlb	0	; () banked
 37242  008E68  1B68               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 37243  008E6A  0100               	movlb	0	; () banked
 37244  008E6C  5166               	movf	___ftge@ff2& (0+255),w,b
 37245  008E6E  0100               	movlb	0	; () banked
 37246  008E70  5D63               	subwf	___ftge@ff1& (0+255),w,b
 37247  008E72  0100               	movlb	0	; () banked
 37248  008E74  5167               	movf	(___ftge@ff2+1)& (0+255),w,b
 37249  008E76  0100               	movlb	0	; () banked
 37250  008E78  5964               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 37251  008E7A  0100               	movlb	0	; () banked
 37252  008E7C  5168               	movf	(___ftge@ff2+2)& (0+255),w,b
 37253  008E7E  0100               	movlb	0	; () banked
 37254  008E80  5965               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 37255  008E82  B0D8               	btfsc	status,0,c
 37256  008E84  D002               	goto	l9050
 37257                           
 37258                           ; BSR set to: 0
 37259  008E86  90D8               	bcf	status,0,c
 37260  008E88  0012               	return	
 37261  008E8A                     l9050:
 37262                           
 37263                           ; BSR set to: 0
 37264  008E8A  80D8               	bsf	status,0,c
 37265                           
 37266                           ; BSR set to: 0
 37267  008E8C  0012               	return	
 37268                           
 37269                           ; BSR set to: 0
 37270                           
 37271                           ; BSR set to: 0
 37272  008E8E  0012               	return		;funcret
 37273  008E90                     __end_of___ftge:
 37274                           	opt stack 0
 37275                           tblptru	equ	0xFF8
 37276                           tblptrh	equ	0xFF7
 37277                           tblptrl	equ	0xFF6
 37278                           tablat	equ	0xFF5
 37279                           prodh	equ	0xFF4
 37280                           prodl	equ	0xFF3
 37281                           intcon	equ	0xFF2
 37282                           intcon2	equ	0xFF1
 37283                           indf0	equ	0xFEF
 37284                           postinc0	equ	0xFEE
 37285                           plusw0	equ	0xFEB
 37286                           fsr0h	equ	0xFEA
 37287                           fsr0l	equ	0xFE9
 37288                           wreg	equ	0xFE8
 37289                           indf1	equ	0xFE7
 37290                           postdec1	equ	0xFE5
 37291                           fsr1h	equ	0xFE2
 37292                           fsr1l	equ	0xFE1
 37293                           indf2	equ	0xFDF
 37294                           postinc2	equ	0xFDE
 37295                           postdec2	equ	0xFDD
 37296                           plusw2	equ	0xFDB
 37297                           fsr2h	equ	0xFDA
 37298                           fsr2l	equ	0xFD9
 37299                           status	equ	0xFD8
 37300                           
 37301 ;; *************** function _UARTstring_CONST *****************
 37302 ;; Defined at:
 37303 ;;		line 238 in file "UART.c"
 37304 ;; Parameters:    Size  Location     Type
 37305 ;;  data            2   14[BANK0 ] PTR const unsigned char 
 37306 ;;		 -> STR_162(28), STR_103(13), STR_84(24), STR_81(60), 
 37307 ;;		 -> STR_76(32), STR_65(14), SYNTAX_ERR(14), STR_15(5), 
 37308 ;;		 -> STR_13(3), STR_12(6), STR_11(9), STR_10(20), 
 37309 ;;		 -> STR_9(9), STR_6(3), STR_4(4), CRLN(3), 
 37310 ;; Auto vars:     Size  Location     Type
 37311 ;;		None
 37312 ;; Return value:  Size  Location     Type
 37313 ;;		None               void
 37314 ;; Registers used:
 37315 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37316 ;; Tracked objects:
 37317 ;;		On entry : 0/0
 37318 ;;		On exit  : 0/0
 37319 ;;		Unchanged: 0/0
 37320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37324 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37325 ;;Total ram usage:        2 bytes
 37326 ;; Hardware stack levels used:    1
 37327 ;; Hardware stack levels required when called:    8
 37328 ;; This function calls:
 37329 ;;		_UARTchar_CONST
 37330 ;; This function is called by:
 37331 ;;		_main
 37332 ;;		_UARTstringCRLN
 37333 ;;		_UARTstringCRLN_CONST
 37334 ;;		_UARTcommandMenu
 37335 ;;		_EnterCommandMode
 37336 ;;		_BluetoothInitialSetup
 37337 ;;		_UseBluetooth
 37338 ;;		_WaitForIRsignal
 37339 ;; This function uses a non-reentrant model
 37340 ;;
 37341                           
 37342                           	psect	text91
 37343  00A152                     __ptext91:
 37344                           	opt stack 0
 37345  00A152                     _UARTstring_CONST:
 37346                           	opt stack 20
 37347                           
 37348                           ;UART.c: 240: while(*data != 0)
 37349                           
 37350                           ; BSR set to: 0
 37351                           ;incstack = 0
 37352  00A152  D00D               	goto	l9176
 37353  00A154                     l9172:
 37354                           
 37355                           ;UART.c: 241: {
 37356                           ;UART.c: 242: UARTchar_CONST(*data);
 37357  00A154  C06E  FFF6         	movff	UARTstring_CONST@data,tblptrl
 37358  00A158  C06F  FFF7         	movff	UARTstring_CONST@data+1,tblptrh
 37359  00A15C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37360  00A15C  6AF8               	clrf	tblptru,c
 37361  00A15E                     	endif
 37362  00A15E                     	if	0	;tblptru may be non-zero
 37363  00A15E                     	endif
 37364  00A15E  0008               	tblrd		*
 37365  00A160  50F5               	movf	tablat,w,c
 37366  00A162  EC5A  F050         	call	_UARTchar_CONST
 37367                           
 37368                           ;UART.c: 243: *data++;
 37369  00A166  0100               	movlb	0	; () banked
 37370  00A168  4B6E               	infsnz	UARTstring_CONST@data& (0+255),f,b
 37371  00A16A  2B6F               	incf	(UARTstring_CONST@data+1)& (0+255),f,b
 37372  00A16C  D000               	goto	l9176
 37373  00A16E                     l9176:
 37374  00A16E  C06E  FFF6         	movff	UARTstring_CONST@data,tblptrl
 37375  00A172  C06F  FFF7         	movff	UARTstring_CONST@data+1,tblptrh
 37376  00A176                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37377  00A176  6AF8               	clrf	tblptru,c
 37378  00A178                     	endif
 37379  00A178                     	if	0	;tblptru may be non-zero
 37380  00A178                     	endif
 37381  00A178  0008               	tblrd		*
 37382  00A17A  50F5               	movf	tablat,w,c
 37383  00A17C  0900               	iorlw	0
 37384  00A17E  A4D8               	btfss	status,2,c
 37385  00A180  D7E9               	goto	l9172
 37386  00A182  0012               	return		;funcret
 37387  00A184                     __end_of_UARTstring_CONST:
 37388                           	opt stack 0
 37389                           tblptru	equ	0xFF8
 37390                           tblptrh	equ	0xFF7
 37391                           tblptrl	equ	0xFF6
 37392                           tablat	equ	0xFF5
 37393                           prodh	equ	0xFF4
 37394                           prodl	equ	0xFF3
 37395                           intcon	equ	0xFF2
 37396                           intcon2	equ	0xFF1
 37397                           indf0	equ	0xFEF
 37398                           postinc0	equ	0xFEE
 37399                           plusw0	equ	0xFEB
 37400                           fsr0h	equ	0xFEA
 37401                           fsr0l	equ	0xFE9
 37402                           wreg	equ	0xFE8
 37403                           indf1	equ	0xFE7
 37404                           postdec1	equ	0xFE5
 37405                           fsr1h	equ	0xFE2
 37406                           fsr1l	equ	0xFE1
 37407                           indf2	equ	0xFDF
 37408                           postinc2	equ	0xFDE
 37409                           postdec2	equ	0xFDD
 37410                           plusw2	equ	0xFDB
 37411                           fsr2h	equ	0xFDA
 37412                           fsr2l	equ	0xFD9
 37413                           status	equ	0xFD8
 37414                           
 37415 ;; *************** function _UARTchar_CONST *****************
 37416 ;; Defined at:
 37417 ;;		line 206 in file "UART.c"
 37418 ;; Parameters:    Size  Location     Type
 37419 ;;  data            1    wreg     const unsigned char 
 37420 ;; Auto vars:     Size  Location     Type
 37421 ;;  data            1   12[BANK0 ] const unsigned char 
 37422 ;;  temp            1   13[BANK0 ] unsigned char 
 37423 ;; Return value:  Size  Location     Type
 37424 ;;		None               void
 37425 ;; Registers used:
 37426 ;;		wreg, status,2, status,0, cstack
 37427 ;; Tracked objects:
 37428 ;;		On entry : 0/0
 37429 ;;		On exit  : 0/0
 37430 ;;		Unchanged: 0/0
 37431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37433 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37435 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37436 ;;Total ram usage:        2 bytes
 37437 ;; Hardware stack levels used:    1
 37438 ;; Hardware stack levels required when called:    7
 37439 ;; This function calls:
 37440 ;;		_delayUS
 37441 ;; This function is called by:
 37442 ;;		_main
 37443 ;;		_UARTstring_CONST
 37444 ;;		_UARTstringCRLN_CONST
 37445 ;;		_UseBluetooth
 37446 ;;		_WaitForIRsignal
 37447 ;; This function uses a non-reentrant model
 37448 ;;
 37449                           
 37450                           	psect	text92
 37451  00A0B4                     __ptext92:
 37452                           	opt stack 0
 37453  00A0B4                     _UARTchar_CONST:
 37454                           	opt stack 20
 37455                           
 37456                           ;incstack = 0
 37457                           ;UARTchar_CONST@data stored from wreg
 37458  00A0B4  0100               	movlb	0	; () banked
 37459  00A0B6  6F6C               	movwf	UARTchar_CONST@data& (0+255),b
 37460                           
 37461                           ; BSR set to: 0
 37462                           ;UART.c: 208: unsigned char temp = data;
 37463  00A0B8  C06C  F06D         	movff	UARTchar_CONST@data,UARTchar_CONST@temp
 37464                           
 37465                           ; BSR set to: 0
 37466                           ;UART.c: 209: RCSTAbits.CREN = 0;
 37467  00A0BC  98AB               	bcf	4011,4,c	;volatile
 37468                           
 37469                           ; BSR set to: 0
 37470                           ;UART.c: 210: if(temp != 0)
 37471  00A0BE  0100               	movlb	0	; () banked
 37472  00A0C0  516D               	movf	UARTchar_CONST@temp& (0+255),w,b
 37473  00A0C2  0100               	movlb	0	; () banked
 37474  00A0C4  B4D8               	btfsc	status,2,c
 37475  00A0C6  D010               	goto	l743
 37476                           
 37477                           ; BSR set to: 0
 37478                           ;UART.c: 211: {
 37479                           ;UART.c: 212: TXREG = temp;
 37480  00A0C8  C06D  FFAD         	movff	UARTchar_CONST@temp,4013	;volatile
 37481                           
 37482                           ; BSR set to: 0
 37483                           ;UART.c: 213: delayUS(100);
 37484  00A0CC  0E64               	movlw	100
 37485  00A0CE  0100               	movlb	0	; () banked
 37486  00A0D0  6F63               	movwf	delayUS@US& (0+255),b
 37487  00A0D2  0E00               	movlw	0
 37488  00A0D4  6F64               	movwf	(delayUS@US+1)& (0+255),b
 37489  00A0D6  0E00               	movlw	0
 37490  00A0D8  6F65               	movwf	(delayUS@US+2)& (0+255),b
 37491  00A0DA  0E00               	movlw	0
 37492  00A0DC  6F66               	movwf	(delayUS@US+3)& (0+255),b
 37493  00A0DE  ECA0  F04E         	call	_delayUS	;wreg free
 37494                           
 37495                           ;UART.c: 214: while(!TXSTAbits.TRMT);
 37496  00A0E2  D000               	goto	l744
 37497  00A0E4                     l744:
 37498  00A0E4  A2AC               	btfss	4012,1,c	;volatile
 37499  00A0E6  D7FE               	goto	l744
 37500  00A0E8                     l743:
 37501                           
 37502                           ;UART.c: 215: }
 37503                           ;UART.c: 216: RCSTAbits.CREN = 1;
 37504  00A0E8  88AB               	bsf	4011,4,c	;volatile
 37505  00A0EA  0012               	return		;funcret
 37506  00A0EC                     __end_of_UARTchar_CONST:
 37507                           	opt stack 0
 37508                           tblptru	equ	0xFF8
 37509                           tblptrh	equ	0xFF7
 37510                           tblptrl	equ	0xFF6
 37511                           tablat	equ	0xFF5
 37512                           prodh	equ	0xFF4
 37513                           prodl	equ	0xFF3
 37514                           intcon	equ	0xFF2
 37515                           intcon2	equ	0xFF1
 37516                           indf0	equ	0xFEF
 37517                           postinc0	equ	0xFEE
 37518                           plusw0	equ	0xFEB
 37519                           fsr0h	equ	0xFEA
 37520                           fsr0l	equ	0xFE9
 37521                           wreg	equ	0xFE8
 37522                           indf1	equ	0xFE7
 37523                           postdec1	equ	0xFE5
 37524                           fsr1h	equ	0xFE2
 37525                           fsr1l	equ	0xFE1
 37526                           indf2	equ	0xFDF
 37527                           postinc2	equ	0xFDE
 37528                           postdec2	equ	0xFDD
 37529                           plusw2	equ	0xFDB
 37530                           fsr2h	equ	0xFDA
 37531                           fsr2l	equ	0xFD9
 37532                           status	equ	0xFD8
 37533                           
 37534 ;; *************** function _StringContains *****************
 37535 ;; Defined at:
 37536 ;;		line 252 in file "MISC.c"
 37537 ;; Parameters:    Size  Location     Type
 37538 ;;  This            2    3[BANK0 ] PTR const unsigned char 
 37539 ;;		 -> CommandString(100), main@BluetoothString(100), 
 37540 ;;  That            2    5[BANK0 ] PTR const unsigned char 
 37541 ;;		 -> STR_32(2), BluetoothInitialSetup@buf(50), EnterCommandMode@buf(50), 
 37542 ;; Auto vars:     Size  Location     Type
 37543 ;;  i               1   11[BANK0 ] unsigned char 
 37544 ;;  MatchCount      1   10[BANK0 ] unsigned char 
 37545 ;;  MatchAmount     1    9[BANK0 ] unsigned char 
 37546 ;; Return value:  Size  Location     Type
 37547 ;;                  1    wreg      unsigned char 
 37548 ;; Registers used:
 37549 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 37550 ;; Tracked objects:
 37551 ;;		On entry : 0/0
 37552 ;;		On exit  : 0/0
 37553 ;;		Unchanged: 0/0
 37554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37555 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37556 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37558 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37559 ;;Total ram usage:        9 bytes
 37560 ;; Hardware stack levels used:    1
 37561 ;; Hardware stack levels required when called:    6
 37562 ;; This function calls:
 37563 ;;		Nothing
 37564 ;; This function is called by:
 37565 ;;		_EnterCommandMode
 37566 ;;		_BluetoothInitialSetup
 37567 ;;		_UseBluetooth
 37568 ;; This function uses a non-reentrant model
 37569 ;;
 37570                           
 37571                           	psect	text93
 37572  008042                     __ptext93:
 37573                           	opt stack 0
 37574  008042                     _StringContains:
 37575                           	opt stack 23
 37576                           
 37577                           ;MISC.c: 254: unsigned char MatchCount = 0;
 37578                           
 37579                           ;incstack = 0
 37580  008042  0E00               	movlw	0
 37581  008044  0100               	movlb	0	; () banked
 37582  008046  6F6A               	movwf	StringContains@MatchCount& (0+255),b
 37583                           
 37584                           ;MISC.c: 255: unsigned char MatchAmount = 0;
 37585  008048  0E00               	movlw	0
 37586  00804A  0100               	movlb	0	; () banked
 37587  00804C  6F69               	movwf	StringContains@MatchAmount& (0+255),b
 37588                           
 37589                           ;MISC.c: 256: unsigned char i = 0;
 37590  00804E  0E00               	movlw	0
 37591  008050  0100               	movlb	0	; () banked
 37592  008052  6F6B               	movwf	StringContains@i& (0+255),b
 37593                           
 37594                           ;MISC.c: 258: for(i=0;i<254;i++)
 37595  008054  0E00               	movlw	0
 37596  008056  0100               	movlb	0	; () banked
 37597  008058  6F6B               	movwf	StringContains@i& (0+255),b
 37598  00805A                     l9582:
 37599                           
 37600                           ; BSR set to: 0
 37601  00805A  0EFD               	movlw	253
 37602  00805C  0100               	movlb	0	; () banked
 37603  00805E  656B               	cpfsgt	StringContains@i& (0+255),b
 37604  008060  D001               	goto	l9586
 37605                           
 37606                           ; BSR set to: 0
 37607  008062  D082               	goto	l9622
 37608  008064                     l9586:
 37609                           
 37610                           ; BSR set to: 0
 37611                           ;MISC.c: 259: {
 37612                           ;MISC.c: 260: if(That[i] == 0)
 37613  008064  0100               	movlb	0	; () banked
 37614  008066  516B               	movf	StringContains@i& (0+255),w,b
 37615  008068  0D01               	mullw	1
 37616  00806A  C065  F067         	movff	StringContains@That,??_StringContains
 37617  00806E  C066  F068         	movff	StringContains@That+1,??_StringContains+1
 37618  008072  50F3               	movf	prodl,w,c
 37619  008074  0100               	movlb	0	; () banked
 37620  008076  2767               	addwf	??_StringContains& (0+255),f,b
 37621  008078  50F4               	movf	prodh,w,c
 37622  00807A  0100               	movlb	0	; () banked
 37623  00807C  2368               	addwfc	(??_StringContains+1)& (0+255),f,b
 37624  00807E  C067  FFF6         	movff	??_StringContains,tblptrl
 37625  008082  C068  FFF7         	movff	??_StringContains+1,tblptrh
 37626  008086  0E00               	movlw	low (__mediumconst shr (0+16))
 37627  008088  6EF8               	movwf	tblptru,c
 37628  00808A  0E0F               	movlw	(high __ramtop+-1)
 37629  00808C  64F7               	cpfsgt	tblptrh,c
 37630  00808E  D003               	bra	u9817
 37631  008090  0008               	tblrd		*
 37632  008092  50F5               	movf	tablat,w,c
 37633  008094  D005               	bra	u9810
 37634  008096                     u9817:
 37635  008096  CFF6 FFE9          	movff	tblptrl,fsr0l
 37636  00809A  CFF7 FFEA          	movff	tblptrh,fsr0h
 37637  00809E  50EF               	movf	indf0,w,c
 37638  0080A0                     u9810:
 37639  0080A0  0900               	iorlw	0
 37640  0080A2  A4D8               	btfss	status,2,c
 37641  0080A4  D003               	goto	l9590
 37642                           
 37643                           ;MISC.c: 261: {
 37644                           ;MISC.c: 262: MatchAmount = i;
 37645  0080A6  C06B  F069         	movff	StringContains@i,StringContains@MatchAmount
 37646                           
 37647                           ;MISC.c: 263: break;
 37648  0080AA  D05E               	goto	l9622
 37649  0080AC                     l9590:
 37650  0080AC  0100               	movlb	0	; () banked
 37651  0080AE  2B6B               	incf	StringContains@i& (0+255),f,b
 37652  0080B0  D7D4               	goto	l9582
 37653                           
 37654                           ; BSR set to: 0
 37655                           ;MISC.c: 264: }
 37656                           ;MISC.c: 265: }
 37657                           ;MISC.c: 266: while(*This != 0)
 37658                           
 37659                           ; BSR set to: 0
 37660  0080B2  D05A               	goto	l9622
 37661  0080B4                     l9594:
 37662                           
 37663                           ;MISC.c: 267: {
 37664                           ;MISC.c: 268: if(*This == *That)
 37665  0080B4  C063  FFD9         	movff	StringContains@This,fsr2l
 37666  0080B8  C064  FFDA         	movff	StringContains@This+1,fsr2h
 37667  0080BC  50DF               	movf	indf2,w,c
 37668  0080BE  0100               	movlb	0	; () banked
 37669  0080C0  6F67               	movwf	??_StringContains& (0+255),b
 37670  0080C2  C065  FFF6         	movff	StringContains@That,tblptrl
 37671  0080C6  C066  FFF7         	movff	StringContains@That+1,tblptrh
 37672  0080CA  0E00               	movlw	low (__mediumconst shr (0+16))
 37673  0080CC  6EF8               	movwf	tblptru,c
 37674  0080CE  0E0F               	movlw	(high __ramtop+-1)
 37675  0080D0  64F7               	cpfsgt	tblptrh,c
 37676  0080D2  D003               	bra	u9847
 37677  0080D4  0008               	tblrd		*
 37678  0080D6  50F5               	movf	tablat,w,c
 37679  0080D8  D005               	bra	u9840
 37680  0080DA                     u9847:
 37681  0080DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 37682  0080DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 37683  0080E2  50EF               	movf	indf0,w,c
 37684  0080E4                     u9840:
 37685  0080E4  0100               	movlb	0	; () banked
 37686  0080E6  1967               	xorwf	??_StringContains& (0+255),w,b
 37687  0080E8  A4D8               	btfss	status,2,c
 37688  0080EA  D02D               	goto	l9616
 37689                           
 37690                           ; BSR set to: 0
 37691                           ;MISC.c: 269: {
 37692                           ;MISC.c: 270: MatchCount++;
 37693  0080EC  0100               	movlb	0	; () banked
 37694  0080EE  2B6A               	incf	StringContains@MatchCount& (0+255),f,b
 37695                           
 37696                           ;MISC.c: 271: That++;
 37697  0080F0  0100               	movlb	0	; () banked
 37698  0080F2  4B65               	infsnz	StringContains@That& (0+255),f,b
 37699  0080F4  2B66               	incf	(StringContains@That+1)& (0+255),f,b
 37700                           
 37701                           ; BSR set to: 0
 37702                           ;MISC.c: 272: if(*That == 0)
 37703  0080F6  C065  FFF6         	movff	StringContains@That,tblptrl
 37704  0080FA  C066  FFF7         	movff	StringContains@That+1,tblptrh
 37705  0080FE  0E00               	movlw	low (__mediumconst shr (0+16))
 37706  008100  6EF8               	movwf	tblptru,c
 37707  008102  0E0F               	movlw	(high __ramtop+-1)
 37708  008104  64F7               	cpfsgt	tblptrh,c
 37709  008106  D003               	bra	u9867
 37710  008108  0008               	tblrd		*
 37711  00810A  50F5               	movf	tablat,w,c
 37712  00810C  D005               	bra	u9860
 37713  00810E                     u9867:
 37714  00810E  CFF6 FFE9          	movff	tblptrl,fsr0l
 37715  008112  CFF7 FFEA          	movff	tblptrh,fsr0h
 37716  008116  50EF               	movf	indf0,w,c
 37717  008118                     u9860:
 37718  008118  0900               	iorlw	0
 37719  00811A  A4D8               	btfss	status,2,c
 37720  00811C  D00A               	goto	l9610
 37721                           
 37722                           ;MISC.c: 273: {
 37723                           ;MISC.c: 274: if(MatchAmount == MatchCount)
 37724  00811E  0100               	movlb	0	; () banked
 37725  008120  516A               	movf	StringContains@MatchCount& (0+255),w,b
 37726  008122  0100               	movlb	0	; () banked
 37727  008124  1969               	xorwf	StringContains@MatchAmount& (0+255),w,b
 37728  008126  A4D8               	btfss	status,2,c
 37729  008128  D002               	goto	l9606
 37730                           
 37731                           ; BSR set to: 0
 37732                           ;MISC.c: 275: {
 37733                           ;MISC.c: 276: return 1;
 37734  00812A  0E01               	movlw	1
 37735                           
 37736                           ; BSR set to: 0
 37737  00812C  0012               	return	
 37738  00812E                     l9606:
 37739                           
 37740                           ; BSR set to: 0
 37741                           ;MISC.c: 277: }
 37742                           ;MISC.c: 278: return 0;
 37743  00812E  0E00               	movlw	0
 37744                           
 37745                           ; BSR set to: 0
 37746  008130  0012               	return	
 37747  008132                     l9610:
 37748                           
 37749                           ;MISC.c: 279: }
 37750                           ;MISC.c: 280: if(*This == 0)
 37751  008132  C063  FFD9         	movff	StringContains@This,fsr2l
 37752  008136  C064  FFDA         	movff	StringContains@This+1,fsr2h
 37753  00813A  50DF               	movf	indf2,w,c
 37754  00813C  A4D8               	btfss	status,2,c
 37755  00813E  D010               	goto	l9620
 37756                           
 37757                           ;MISC.c: 281: {
 37758                           ;MISC.c: 282: return 0;
 37759  008140  0E00               	movlw	0
 37760  008142  0012               	return	
 37761                           
 37762                           ;MISC.c: 283: }
 37763                           ;MISC.c: 284: }
 37764  008144  D00D               	goto	l9620
 37765  008146                     l9616:
 37766                           
 37767                           ;MISC.c: 285: else
 37768                           ;MISC.c: 286: {
 37769                           ;MISC.c: 287: That -= MatchCount;
 37770  008146  0100               	movlb	0	; () banked
 37771  008148  516A               	movf	StringContains@MatchCount& (0+255),w,b
 37772  00814A  0D01               	mullw	1
 37773  00814C  50F3               	movf	prodl,w,c
 37774  00814E  0100               	movlb	0	; () banked
 37775  008150  5F65               	subwf	StringContains@That& (0+255),f,b
 37776  008152  50F4               	movf	prodh,w,c
 37777  008154  0100               	movlb	0	; () banked
 37778  008156  5B66               	subwfb	(StringContains@That+1)& (0+255),f,b
 37779                           
 37780                           ; BSR set to: 0
 37781                           ;MISC.c: 288: MatchCount = 0;
 37782  008158  0E00               	movlw	0
 37783  00815A  0100               	movlb	0	; () banked
 37784  00815C  6F6A               	movwf	StringContains@MatchCount& (0+255),b
 37785  00815E  D000               	goto	l9620
 37786  008160                     l9620:
 37787                           
 37788                           ;MISC.c: 289: }
 37789                           ;MISC.c: 290: This++;
 37790  008160  0100               	movlb	0	; () banked
 37791  008162  4B63               	infsnz	StringContains@This& (0+255),f,b
 37792  008164  2B64               	incf	(StringContains@This+1)& (0+255),f,b
 37793  008166  D000               	goto	l9622
 37794  008168                     l9622:
 37795  008168  C063  FFD9         	movff	StringContains@This,fsr2l
 37796  00816C  C064  FFDA         	movff	StringContains@This+1,fsr2h
 37797  008170  50DF               	movf	indf2,w,c
 37798  008172  A4D8               	btfss	status,2,c
 37799  008174  D79F               	goto	l9594
 37800                           
 37801                           ;MISC.c: 291: }
 37802                           ;MISC.c: 292: return 0;
 37803  008176  0E00               	movlw	0
 37804  008178  0012               	return	
 37805  00817A  0012               	return		;funcret
 37806  00817C                     __end_of_StringContains:
 37807                           	opt stack 0
 37808                           tblptru	equ	0xFF8
 37809                           tblptrh	equ	0xFF7
 37810                           tblptrl	equ	0xFF6
 37811                           tablat	equ	0xFF5
 37812                           prodh	equ	0xFF4
 37813                           prodl	equ	0xFF3
 37814                           intcon	equ	0xFF2
 37815                           intcon2	equ	0xFF1
 37816                           indf0	equ	0xFEF
 37817                           postinc0	equ	0xFEE
 37818                           plusw0	equ	0xFEB
 37819                           fsr0h	equ	0xFEA
 37820                           fsr0l	equ	0xFE9
 37821                           wreg	equ	0xFE8
 37822                           indf1	equ	0xFE7
 37823                           postdec1	equ	0xFE5
 37824                           fsr1h	equ	0xFE2
 37825                           fsr1l	equ	0xFE1
 37826                           indf2	equ	0xFDF
 37827                           postinc2	equ	0xFDE
 37828                           postdec2	equ	0xFDD
 37829                           plusw2	equ	0xFDB
 37830                           fsr2h	equ	0xFDA
 37831                           fsr2l	equ	0xFD9
 37832                           status	equ	0xFD8
 37833                           
 37834 ;; *************** function _ResetBlue *****************
 37835 ;; Defined at:
 37836 ;;		line 118 in file "Bluetooth.c"
 37837 ;; Parameters:    Size  Location     Type
 37838 ;;		None
 37839 ;; Auto vars:     Size  Location     Type
 37840 ;;		None
 37841 ;; Return value:  Size  Location     Type
 37842 ;;		None               void
 37843 ;; Registers used:
 37844 ;;		wreg, status,2, status,0, cstack
 37845 ;; Tracked objects:
 37846 ;;		On entry : 0/0
 37847 ;;		On exit  : 0/0
 37848 ;;		Unchanged: 0/0
 37849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37854 ;;Total ram usage:        0 bytes
 37855 ;; Hardware stack levels used:    1
 37856 ;; Hardware stack levels required when called:    7
 37857 ;; This function calls:
 37858 ;;		_delayUS
 37859 ;; This function is called by:
 37860 ;;		_InitBluetooth
 37861 ;;		_EnterCommandMode
 37862 ;; This function uses a non-reentrant model
 37863 ;;
 37864                           
 37865                           	psect	text94
 37866  008B34                     __ptext94:
 37867                           	opt stack 0
 37868  008B34                     _ResetBlue:
 37869                           	opt stack 21
 37870                           
 37871                           ;Bluetooth.c: 120: LATA &= ~0x04;
 37872                           
 37873                           ;incstack = 0
 37874  008B34  9489               	bcf	3977,2,c	;volatile
 37875                           
 37876                           ;Bluetooth.c: 121: delayUS(50000);
 37877  008B36  0E50               	movlw	80
 37878  008B38  0100               	movlb	0	; () banked
 37879  008B3A  6F63               	movwf	delayUS@US& (0+255),b
 37880  008B3C  0EC3               	movlw	195
 37881  008B3E  6F64               	movwf	(delayUS@US+1)& (0+255),b
 37882  008B40  0E00               	movlw	0
 37883  008B42  6F65               	movwf	(delayUS@US+2)& (0+255),b
 37884  008B44  0E00               	movlw	0
 37885  008B46  6F66               	movwf	(delayUS@US+3)& (0+255),b
 37886  008B48  ECA0  F04E         	call	_delayUS	;wreg free
 37887                           
 37888                           ;Bluetooth.c: 122: delayUS(50000);
 37889  008B4C  0E50               	movlw	80
 37890  008B4E  0100               	movlb	0	; () banked
 37891  008B50  6F63               	movwf	delayUS@US& (0+255),b
 37892  008B52  0EC3               	movlw	195
 37893  008B54  6F64               	movwf	(delayUS@US+1)& (0+255),b
 37894  008B56  0E00               	movlw	0
 37895  008B58  6F65               	movwf	(delayUS@US+2)& (0+255),b
 37896  008B5A  0E00               	movlw	0
 37897  008B5C  6F66               	movwf	(delayUS@US+3)& (0+255),b
 37898  008B5E  ECA0  F04E         	call	_delayUS	;wreg free
 37899                           
 37900                           ;Bluetooth.c: 123: delayUS(50000);
 37901  008B62  0E50               	movlw	80
 37902  008B64  0100               	movlb	0	; () banked
 37903  008B66  6F63               	movwf	delayUS@US& (0+255),b
 37904  008B68  0EC3               	movlw	195
 37905  008B6A  6F64               	movwf	(delayUS@US+1)& (0+255),b
 37906  008B6C  0E00               	movlw	0
 37907  008B6E  6F65               	movwf	(delayUS@US+2)& (0+255),b
 37908  008B70  0E00               	movlw	0
 37909  008B72  6F66               	movwf	(delayUS@US+3)& (0+255),b
 37910  008B74  ECA0  F04E         	call	_delayUS	;wreg free
 37911                           
 37912                           ;Bluetooth.c: 124: delayUS(50000);
 37913  008B78  0E50               	movlw	80
 37914  008B7A  0100               	movlb	0	; () banked
 37915  008B7C  6F63               	movwf	delayUS@US& (0+255),b
 37916  008B7E  0EC3               	movlw	195
 37917  008B80  6F64               	movwf	(delayUS@US+1)& (0+255),b
 37918  008B82  0E00               	movlw	0
 37919  008B84  6F65               	movwf	(delayUS@US+2)& (0+255),b
 37920  008B86  0E00               	movlw	0
 37921  008B88  6F66               	movwf	(delayUS@US+3)& (0+255),b
 37922  008B8A  ECA0  F04E         	call	_delayUS	;wreg free
 37923                           
 37924                           ;Bluetooth.c: 125: delayUS(50000);
 37925  008B8E  0E50               	movlw	80
 37926  008B90  0100               	movlb	0	; () banked
 37927  008B92  6F63               	movwf	delayUS@US& (0+255),b
 37928  008B94  0EC3               	movlw	195
 37929  008B96  6F64               	movwf	(delayUS@US+1)& (0+255),b
 37930  008B98  0E00               	movlw	0
 37931  008B9A  6F65               	movwf	(delayUS@US+2)& (0+255),b
 37932  008B9C  0E00               	movlw	0
 37933  008B9E  6F66               	movwf	(delayUS@US+3)& (0+255),b
 37934  008BA0  ECA0  F04E         	call	_delayUS	;wreg free
 37935                           
 37936                           ;Bluetooth.c: 126: LATA |= 0x04;
 37937  008BA4  8489               	bsf	3977,2,c	;volatile
 37938                           
 37939                           ;Bluetooth.c: 127: delayUS(50000);
 37940  008BA6  0E50               	movlw	80
 37941  008BA8  0100               	movlb	0	; () banked
 37942  008BAA  6F63               	movwf	delayUS@US& (0+255),b
 37943  008BAC  0EC3               	movlw	195
 37944  008BAE  6F64               	movwf	(delayUS@US+1)& (0+255),b
 37945  008BB0  0E00               	movlw	0
 37946  008BB2  6F65               	movwf	(delayUS@US+2)& (0+255),b
 37947  008BB4  0E00               	movlw	0
 37948  008BB6  6F66               	movwf	(delayUS@US+3)& (0+255),b
 37949  008BB8  ECA0  F04E         	call	_delayUS	;wreg free
 37950                           
 37951                           ;Bluetooth.c: 128: delayUS(50000);
 37952  008BBC  0E50               	movlw	80
 37953  008BBE  0100               	movlb	0	; () banked
 37954  008BC0  6F63               	movwf	delayUS@US& (0+255),b
 37955  008BC2  0EC3               	movlw	195
 37956  008BC4  6F64               	movwf	(delayUS@US+1)& (0+255),b
 37957  008BC6  0E00               	movlw	0
 37958  008BC8  6F65               	movwf	(delayUS@US+2)& (0+255),b
 37959  008BCA  0E00               	movlw	0
 37960  008BCC  6F66               	movwf	(delayUS@US+3)& (0+255),b
 37961  008BCE  ECA0  F04E         	call	_delayUS	;wreg free
 37962                           
 37963                           ;Bluetooth.c: 129: delayUS(50000);
 37964  008BD2  0E50               	movlw	80
 37965  008BD4  0100               	movlb	0	; () banked
 37966  008BD6  6F63               	movwf	delayUS@US& (0+255),b
 37967  008BD8  0EC3               	movlw	195
 37968  008BDA  6F64               	movwf	(delayUS@US+1)& (0+255),b
 37969  008BDC  0E00               	movlw	0
 37970  008BDE  6F65               	movwf	(delayUS@US+2)& (0+255),b
 37971  008BE0  0E00               	movlw	0
 37972  008BE2  6F66               	movwf	(delayUS@US+3)& (0+255),b
 37973  008BE4  ECA0  F04E         	call	_delayUS	;wreg free
 37974                           
 37975                           ;Bluetooth.c: 130: delayUS(50000);
 37976  008BE8  0E50               	movlw	80
 37977  008BEA  0100               	movlb	0	; () banked
 37978  008BEC  6F63               	movwf	delayUS@US& (0+255),b
 37979  008BEE  0EC3               	movlw	195
 37980  008BF0  6F64               	movwf	(delayUS@US+1)& (0+255),b
 37981  008BF2  0E00               	movlw	0
 37982  008BF4  6F65               	movwf	(delayUS@US+2)& (0+255),b
 37983  008BF6  0E00               	movlw	0
 37984  008BF8  6F66               	movwf	(delayUS@US+3)& (0+255),b
 37985  008BFA  ECA0  F04E         	call	_delayUS	;wreg free
 37986                           
 37987                           ;Bluetooth.c: 131: delayUS(50000);
 37988  008BFE  0E50               	movlw	80
 37989  008C00  0100               	movlb	0	; () banked
 37990  008C02  6F63               	movwf	delayUS@US& (0+255),b
 37991  008C04  0EC3               	movlw	195
 37992  008C06  6F64               	movwf	(delayUS@US+1)& (0+255),b
 37993  008C08  0E00               	movlw	0
 37994  008C0A  6F65               	movwf	(delayUS@US+2)& (0+255),b
 37995  008C0C  0E00               	movlw	0
 37996  008C0E  6F66               	movwf	(delayUS@US+3)& (0+255),b
 37997  008C10  ECA0  F04E         	call	_delayUS	;wreg free
 37998  008C14  0012               	return		;funcret
 37999  008C16                     __end_of_ResetBlue:
 38000                           	opt stack 0
 38001                           tblptru	equ	0xFF8
 38002                           tblptrh	equ	0xFF7
 38003                           tblptrl	equ	0xFF6
 38004                           tablat	equ	0xFF5
 38005                           prodh	equ	0xFF4
 38006                           prodl	equ	0xFF3
 38007                           intcon	equ	0xFF2
 38008                           intcon2	equ	0xFF1
 38009                           indf0	equ	0xFEF
 38010                           postinc0	equ	0xFEE
 38011                           plusw0	equ	0xFEB
 38012                           fsr0h	equ	0xFEA
 38013                           fsr0l	equ	0xFE9
 38014                           wreg	equ	0xFE8
 38015                           indf1	equ	0xFE7
 38016                           postdec1	equ	0xFE5
 38017                           fsr1h	equ	0xFE2
 38018                           fsr1l	equ	0xFE1
 38019                           indf2	equ	0xFDF
 38020                           postinc2	equ	0xFDE
 38021                           postdec2	equ	0xFDD
 38022                           plusw2	equ	0xFDB
 38023                           fsr2h	equ	0xFDA
 38024                           fsr2l	equ	0xFD9
 38025                           status	equ	0xFD8
 38026                           
 38027 ;; *************** function _delayUS *****************
 38028 ;; Defined at:
 38029 ;;		line 51 in file "MISC.c"
 38030 ;; Parameters:    Size  Location     Type
 38031 ;;  US              4    3[BANK0 ] long 
 38032 ;; Auto vars:     Size  Location     Type
 38033 ;;  i               4    8[BANK0 ] long 
 38034 ;; Return value:  Size  Location     Type
 38035 ;;		None               void
 38036 ;; Registers used:
 38037 ;;		wreg, status,2, status,0
 38038 ;; Tracked objects:
 38039 ;;		On entry : 0/0
 38040 ;;		On exit  : 0/0
 38041 ;;		Unchanged: 0/0
 38042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38043 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38044 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38045 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38046 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38047 ;;Total ram usage:        9 bytes
 38048 ;; Hardware stack levels used:    1
 38049 ;; Hardware stack levels required when called:    6
 38050 ;; This function calls:
 38051 ;;		Nothing
 38052 ;; This function is called by:
 38053 ;;		_main
 38054 ;;		_UARTchar
 38055 ;;		_UARTchar_CONST
 38056 ;;		_ReadVoltage
 38057 ;;		_InternalADC_Read
 38058 ;;		_UseIRCode
 38059 ;;		_SendNEC_wait
 38060 ;;		_ReadCodeButtons
 38061 ;;		_ResetBlue
 38062 ;;		_EnterCommandMode
 38063 ;;		_BluetoothInitialSetup
 38064 ;;		_UseBluetooth
 38065 ;;		_WaitForIRsignal
 38066 ;;		_CalibrateDelay
 38067 ;; This function uses a non-reentrant model
 38068 ;;
 38069                           
 38070                           	psect	text95
 38071  009D40                     __ptext95:
 38072                           	opt stack 0
 38073  009D40                     _delayUS:
 38074                           	opt stack 24
 38075                           
 38076                           ;MISC.c: 53: long i;
 38077                           ;MISC.c: 54: for(i=0; i<US; i += 2)
 38078                           
 38079                           ;incstack = 0
 38080  009D40  0E00               	movlw	0
 38081  009D42  0100               	movlb	0	; () banked
 38082  009D44  6F68               	movwf	delayUS@i& (0+255),b
 38083  009D46  0E00               	movlw	0
 38084  009D48  6F69               	movwf	(delayUS@i+1)& (0+255),b
 38085  009D4A  0E00               	movlw	0
 38086  009D4C  6F6A               	movwf	(delayUS@i+2)& (0+255),b
 38087  009D4E  0E00               	movlw	0
 38088  009D50  6F6B               	movwf	(delayUS@i+3)& (0+255),b
 38089  009D52  D008               	goto	l323
 38090  009D54                     l324:
 38091                           
 38092                           ; BSR set to: 0
 38093                           ;MISC.c: 55: {
 38094                           ;MISC.c: 56: __nop();
 38095  009D54  F000               	nop	
 38096  009D56  0E02               	movlw	2
 38097  009D58  0100               	movlb	0	; () banked
 38098  009D5A  2768               	addwf	delayUS@i& (0+255),f,b
 38099  009D5C  0E00               	movlw	0
 38100  009D5E  2369               	addwfc	(delayUS@i+1)& (0+255),f,b
 38101  009D60  236A               	addwfc	(delayUS@i+2)& (0+255),f,b
 38102  009D62  236B               	addwfc	(delayUS@i+3)& (0+255),f,b
 38103  009D64                     l323:
 38104                           
 38105                           ; BSR set to: 0
 38106  009D64  0100               	movlb	0	; () banked
 38107  009D66  5163               	movf	delayUS@US& (0+255),w,b
 38108  009D68  0100               	movlb	0	; () banked
 38109  009D6A  5D68               	subwf	delayUS@i& (0+255),w,b
 38110  009D6C  0100               	movlb	0	; () banked
 38111  009D6E  5164               	movf	(delayUS@US+1)& (0+255),w,b
 38112  009D70  0100               	movlb	0	; () banked
 38113  009D72  5969               	subwfb	(delayUS@i+1)& (0+255),w,b
 38114  009D74  0100               	movlb	0	; () banked
 38115  009D76  5165               	movf	(delayUS@US+2)& (0+255),w,b
 38116  009D78  0100               	movlb	0	; () banked
 38117  009D7A  596A               	subwfb	(delayUS@i+2)& (0+255),w,b
 38118  009D7C  0100               	movlb	0	; () banked
 38119  009D7E  516B               	movf	(delayUS@i+3)& (0+255),w,b
 38120  009D80  0A80               	xorlw	128
 38121  009D82  0100               	movlb	0	; () banked
 38122  009D84  6F67               	movwf	??_delayUS& (0+255),b
 38123  009D86  0100               	movlb	0	; () banked
 38124  009D88  5166               	movf	(delayUS@US+3)& (0+255),w,b
 38125  009D8A  0A80               	xorlw	128
 38126  009D8C  0100               	movlb	0	; () banked
 38127  009D8E  5967               	subwfb	??_delayUS& (0+255),w,b
 38128  009D90  A0D8               	btfss	status,0,c
 38129  009D92  D7E0               	goto	l324
 38130                           
 38131                           ; BSR set to: 0
 38132                           
 38133                           ; BSR set to: 0
 38134  009D94  0012               	return		;funcret
 38135  009D96                     __end_of_delayUS:
 38136                           	opt stack 0
 38137                           tblptru	equ	0xFF8
 38138                           tblptrh	equ	0xFF7
 38139                           tblptrl	equ	0xFF6
 38140                           tablat	equ	0xFF5
 38141                           prodh	equ	0xFF4
 38142                           prodl	equ	0xFF3
 38143                           intcon	equ	0xFF2
 38144                           intcon2	equ	0xFF1
 38145                           indf0	equ	0xFEF
 38146                           postinc0	equ	0xFEE
 38147                           plusw0	equ	0xFEB
 38148                           fsr0h	equ	0xFEA
 38149                           fsr0l	equ	0xFE9
 38150                           wreg	equ	0xFE8
 38151                           indf1	equ	0xFE7
 38152                           postdec1	equ	0xFE5
 38153                           fsr1h	equ	0xFE2
 38154                           fsr1l	equ	0xFE1
 38155                           indf2	equ	0xFDF
 38156                           postinc2	equ	0xFDE
 38157                           postdec2	equ	0xFDD
 38158                           plusw2	equ	0xFDB
 38159                           fsr2h	equ	0xFDA
 38160                           fsr2l	equ	0xFD9
 38161                           status	equ	0xFD8
 38162                           
 38163 ;; *************** function _ClearUSART *****************
 38164 ;; Defined at:
 38165 ;;		line 252 in file "UART.c"
 38166 ;; Parameters:    Size  Location     Type
 38167 ;;		None
 38168 ;; Auto vars:     Size  Location     Type
 38169 ;;		None
 38170 ;; Return value:  Size  Location     Type
 38171 ;;		None               void
 38172 ;; Registers used:
 38173 ;;		wreg, status,2, cstack
 38174 ;; Tracked objects:
 38175 ;;		On entry : 0/0
 38176 ;;		On exit  : 0/0
 38177 ;;		Unchanged: 0/0
 38178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38183 ;;Total ram usage:        0 bytes
 38184 ;; Hardware stack levels used:    1
 38185 ;; Hardware stack levels required when called:    7
 38186 ;; This function calls:
 38187 ;;		_ReadUSART
 38188 ;; This function is called by:
 38189 ;;		_main
 38190 ;;		_InitUART
 38191 ;;		_InitBluetooth
 38192 ;;		_EnterCommandMode
 38193 ;;		_BluetoothInitialSetup
 38194 ;;		_UseBluetooth
 38195 ;; This function uses a non-reentrant model
 38196 ;;
 38197                           
 38198                           	psect	text96
 38199  00A442                     __ptext96:
 38200                           	opt stack 0
 38201  00A442                     _ClearUSART:
 38202                           	opt stack 22
 38203                           
 38204                           ;UART.c: 254: RCSTAbits.CREN = 0;
 38205                           
 38206                           ; BSR set to: 0
 38207                           ;incstack = 0
 38208  00A442  98AB               	bcf	4011,4,c	;volatile
 38209                           
 38210                           ;UART.c: 255: RCSTAbits.CREN = 1;
 38211  00A444  88AB               	bsf	4011,4,c	;volatile
 38212                           
 38213                           ;UART.c: 256: ReadUSART();
 38214  00A446  ECC2  F051         	call	_ReadUSART	;wreg free
 38215                           
 38216                           ;UART.c: 257: ReadUSART();
 38217  00A44A  ECC2  F051         	call	_ReadUSART	;wreg free
 38218                           
 38219                           ;UART.c: 258: ReadUSART();
 38220  00A44E  ECC2  F051         	call	_ReadUSART	;wreg free
 38221  00A452  0012               	return		;funcret
 38222  00A454                     __end_of_ClearUSART:
 38223                           	opt stack 0
 38224                           tblptru	equ	0xFF8
 38225                           tblptrh	equ	0xFF7
 38226                           tblptrl	equ	0xFF6
 38227                           tablat	equ	0xFF5
 38228                           prodh	equ	0xFF4
 38229                           prodl	equ	0xFF3
 38230                           intcon	equ	0xFF2
 38231                           intcon2	equ	0xFF1
 38232                           indf0	equ	0xFEF
 38233                           postinc0	equ	0xFEE
 38234                           plusw0	equ	0xFEB
 38235                           fsr0h	equ	0xFEA
 38236                           fsr0l	equ	0xFE9
 38237                           wreg	equ	0xFE8
 38238                           indf1	equ	0xFE7
 38239                           postdec1	equ	0xFE5
 38240                           fsr1h	equ	0xFE2
 38241                           fsr1l	equ	0xFE1
 38242                           indf2	equ	0xFDF
 38243                           postinc2	equ	0xFDE
 38244                           postdec2	equ	0xFDD
 38245                           plusw2	equ	0xFDB
 38246                           fsr2h	equ	0xFDA
 38247                           fsr2l	equ	0xFD9
 38248                           status	equ	0xFD8
 38249                           
 38250 ;; *************** function _ReadUSART *****************
 38251 ;; Defined at:
 38252 ;;		line 265 in file "UART.c"
 38253 ;; Parameters:    Size  Location     Type
 38254 ;;		None
 38255 ;; Auto vars:     Size  Location     Type
 38256 ;;  data            1    3[BANK0 ] unsigned char 
 38257 ;; Return value:  Size  Location     Type
 38258 ;;                  1    wreg      unsigned char 
 38259 ;; Registers used:
 38260 ;;		wreg, status,2
 38261 ;; Tracked objects:
 38262 ;;		On entry : 0/0
 38263 ;;		On exit  : 0/0
 38264 ;;		Unchanged: 0/0
 38265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38267 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38269 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38270 ;;Total ram usage:        1 bytes
 38271 ;; Hardware stack levels used:    1
 38272 ;; Hardware stack levels required when called:    6
 38273 ;; This function calls:
 38274 ;;		Nothing
 38275 ;; This function is called by:
 38276 ;;		_ClearUSART
 38277 ;; This function uses a non-reentrant model
 38278 ;;
 38279                           
 38280                           	psect	text97
 38281  00A384                     __ptext97:
 38282                           	opt stack 0
 38283  00A384                     _ReadUSART:
 38284                           	opt stack 22
 38285                           
 38286                           ;UART.c: 267: unsigned char data;
 38287                           ;UART.c: 269: if(RCSTAbits.OERR)
 38288                           
 38289                           ;incstack = 0
 38290  00A384  A2AB               	btfss	4011,1,c	;volatile
 38291  00A386  D004               	goto	l765
 38292                           
 38293                           ;UART.c: 270: {
 38294                           ;UART.c: 272: RCSTAbits.CREN = 0;
 38295  00A388  98AB               	bcf	4011,4,c	;volatile
 38296                           
 38297                           ;UART.c: 273: RCSTAbits.CREN = 1;
 38298  00A38A  88AB               	bsf	4011,4,c	;volatile
 38299                           
 38300                           ;UART.c: 274: return 0;
 38301  00A38C  0E00               	movlw	0
 38302  00A38E  0012               	return	
 38303  00A390                     l765:
 38304                           
 38305                           ;UART.c: 275: }
 38306                           ;UART.c: 277: data = RCREG;
 38307  00A390  CFAE F063          	movff	4014,ReadUSART@data	;volatile
 38308                           
 38309                           ;UART.c: 278: return (data);
 38310  00A394  0100               	movlb	0	; () banked
 38311  00A396  5163               	movf	ReadUSART@data& (0+255),w,b
 38312  00A398  0012               	return	
 38313                           
 38314                           ; BSR set to: 0
 38315  00A39A  0012               	return		;funcret
 38316  00A39C                     __end_of_ReadUSART:
 38317                           	opt stack 0
 38318                           tblptru	equ	0xFF8
 38319                           tblptrh	equ	0xFF7
 38320                           tblptrl	equ	0xFF6
 38321                           tablat	equ	0xFF5
 38322                           prodh	equ	0xFF4
 38323                           prodl	equ	0xFF3
 38324                           intcon	equ	0xFF2
 38325                           intcon2	equ	0xFF1
 38326                           indf0	equ	0xFEF
 38327                           postinc0	equ	0xFEE
 38328                           plusw0	equ	0xFEB
 38329                           fsr0h	equ	0xFEA
 38330                           fsr0l	equ	0xFE9
 38331                           wreg	equ	0xFE8
 38332                           indf1	equ	0xFE7
 38333                           postdec1	equ	0xFE5
 38334                           fsr1h	equ	0xFE2
 38335                           fsr1l	equ	0xFE1
 38336                           indf2	equ	0xFDF
 38337                           postinc2	equ	0xFDE
 38338                           postdec2	equ	0xFDD
 38339                           plusw2	equ	0xFDB
 38340                           fsr2h	equ	0xFDA
 38341                           fsr2l	equ	0xFD9
 38342                           status	equ	0xFD8
 38343                           
 38344 ;; *************** function _BlueConnected *****************
 38345 ;; Defined at:
 38346 ;;		line 103 in file "Bluetooth.c"
 38347 ;; Parameters:    Size  Location     Type
 38348 ;;		None
 38349 ;; Auto vars:     Size  Location     Type
 38350 ;;		None
 38351 ;; Return value:  Size  Location     Type
 38352 ;;                  1    wreg      unsigned char 
 38353 ;; Registers used:
 38354 ;;		wreg
 38355 ;; Tracked objects:
 38356 ;;		On entry : 0/0
 38357 ;;		On exit  : 0/0
 38358 ;;		Unchanged: 0/0
 38359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38364 ;;Total ram usage:        0 bytes
 38365 ;; Hardware stack levels used:    1
 38366 ;; Hardware stack levels required when called:    6
 38367 ;; This function calls:
 38368 ;;		Nothing
 38369 ;; This function is called by:
 38370 ;;		_main
 38371 ;;		_EnterCommandMode
 38372 ;; This function uses a non-reentrant model
 38373 ;;
 38374                           
 38375                           	psect	text98
 38376  00A4BC                     __ptext98:
 38377                           	opt stack 0
 38378  00A4BC                     _BlueConnected:
 38379                           	opt stack 20
 38380                           
 38381                           ;Bluetooth.c: 106: if((PORTA & 0x02) == 0x02)
 38382                           
 38383                           ;incstack = 0
 38384  00A4BC  A280               	btfss	3968,1,c	;volatile
 38385  00A4BE  D002               	goto	l9166
 38386                           
 38387                           ;Bluetooth.c: 107: {
 38388                           ;Bluetooth.c: 108: return 1;
 38389  00A4C0  0E01               	movlw	1
 38390  00A4C2  0012               	return	
 38391  00A4C4                     l9166:
 38392                           
 38393                           ;Bluetooth.c: 109: }
 38394                           ;Bluetooth.c: 110: return 0;
 38395  00A4C4  0E00               	movlw	0
 38396  00A4C6  0012               	return	
 38397  00A4C8  0012               	return		;funcret
 38398  00A4CA                     __end_of_BlueConnected:
 38399                           	opt stack 0
 38400                           tblptru	equ	0xFF8
 38401                           tblptrh	equ	0xFF7
 38402                           tblptrl	equ	0xFF6
 38403                           tablat	equ	0xFF5
 38404                           prodh	equ	0xFF4
 38405                           prodl	equ	0xFF3
 38406                           intcon	equ	0xFF2
 38407                           intcon2	equ	0xFF1
 38408                           indf0	equ	0xFEF
 38409                           postinc0	equ	0xFEE
 38410                           plusw0	equ	0xFEB
 38411                           fsr0h	equ	0xFEA
 38412                           fsr0l	equ	0xFE9
 38413                           wreg	equ	0xFE8
 38414                           indf1	equ	0xFE7
 38415                           postdec1	equ	0xFE5
 38416                           fsr1h	equ	0xFE2
 38417                           fsr1l	equ	0xFE1
 38418                           indf2	equ	0xFDF
 38419                           postinc2	equ	0xFDE
 38420                           postdec2	equ	0xFDD
 38421                           plusw2	equ	0xFDB
 38422                           fsr2h	equ	0xFDA
 38423                           fsr2l	equ	0xFD9
 38424                           status	equ	0xFD8
 38425                           
 38426 ;; *************** function _BufferCopy *****************
 38427 ;; Defined at:
 38428 ;;		line 167 in file "MISC.c"
 38429 ;; Parameters:    Size  Location     Type
 38430 ;;  from            2   11[BANK0 ] PTR unsigned char 
 38431 ;;		 -> BluetoothInitialSetup@BluetoothVersionLine2(30), BluetoothInitialSetup@BluetoothVersionLine1(30), StringAddEqual
      +@temp(255), Init_System@buf(50), 
 38432 ;;		 -> ReceivedString(100), 
 38433 ;;  to              2   13[BANK0 ] PTR unsigned char 
 38434 ;;		 -> BluetoothFirmware2(30), BluetoothFirmware1(30), ReceivedString(100), main@BluetoothString(100), 
 38435 ;;  count           1   15[BANK0 ] unsigned char 
 38436 ;;  shift           1   16[BANK0 ] unsigned char 
 38437 ;; Auto vars:     Size  Location     Type
 38438 ;;  i               1   17[BANK0 ] unsigned char 
 38439 ;; Return value:  Size  Location     Type
 38440 ;;		None               void
 38441 ;; Registers used:
 38442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38443 ;; Tracked objects:
 38444 ;;		On entry : 0/0
 38445 ;;		On exit  : 0/0
 38446 ;;		Unchanged: 0/0
 38447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38448 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38451 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38452 ;;Total ram usage:        7 bytes
 38453 ;; Hardware stack levels used:    1
 38454 ;; Hardware stack levels required when called:    7
 38455 ;; This function calls:
 38456 ;;		_cleanBuffer
 38457 ;; This function is called by:
 38458 ;;		_main
 38459 ;;		_Init_System
 38460 ;;		_StringAddEqual
 38461 ;;		_BluetoothInitialSetup
 38462 ;; This function uses a non-reentrant model
 38463 ;;
 38464                           
 38465                           	psect	text99
 38466  0097FC                     __ptext99:
 38467                           	opt stack 0
 38468  0097FC                     _BufferCopy:
 38469                           	opt stack 21
 38470                           
 38471                           ;MISC.c: 169: unsigned char i=0;
 38472                           
 38473                           ;incstack = 0
 38474  0097FC  0E00               	movlw	0
 38475  0097FE  0100               	movlb	0	; () banked
 38476  009800  6F71               	movwf	BufferCopy@i& (0+255),b
 38477                           
 38478                           ; BSR set to: 0
 38479                           ;MISC.c: 170: cleanBuffer(to,count);
 38480  009802  C06D  F063         	movff	BufferCopy@to,cleanBuffer@data
 38481  009806  C06E  F064         	movff	BufferCopy@to+1,cleanBuffer@data+1
 38482  00980A  C06F  F065         	movff	BufferCopy@count,cleanBuffer@count
 38483  00980E  0100               	movlb	0	; () banked
 38484  009810  6B66               	clrf	(cleanBuffer@count+1)& (0+255),b
 38485  009812  EC47  F04E         	call	_cleanBuffer	;wreg free
 38486                           
 38487                           ;MISC.c: 171: for(i = shift; i>0;i--)
 38488  009816  C070  F071         	movff	BufferCopy@shift,BufferCopy@i
 38489  00981A                     l9690:
 38490  00981A  0100               	movlb	0	; () banked
 38491  00981C  5171               	movf	BufferCopy@i& (0+255),w,b
 38492  00981E  0100               	movlb	0	; () banked
 38493  009820  B4D8               	btfsc	status,2,c
 38494  009822  D022               	goto	l9710
 38495  009824  D001               	goto	l9694
 38496                           
 38497                           ; BSR set to: 0
 38498  009826  D020               	goto	l9710
 38499  009828                     l9694:
 38500                           
 38501                           ; BSR set to: 0
 38502                           ;MISC.c: 172: {
 38503                           ;MISC.c: 173: *to = ' ';
 38504  009828  C06D  FFD9         	movff	BufferCopy@to,fsr2l
 38505  00982C  C06E  FFDA         	movff	BufferCopy@to+1,fsr2h
 38506  009830  0E20               	movlw	32
 38507  009832  6EDF               	movwf	indf2,c
 38508                           
 38509                           ; BSR set to: 0
 38510                           ;MISC.c: 174: to++;
 38511  009834  0100               	movlb	0	; () banked
 38512  009836  4B6D               	infsnz	BufferCopy@to& (0+255),f,b
 38513  009838  2B6E               	incf	(BufferCopy@to+1)& (0+255),f,b
 38514                           
 38515                           ; BSR set to: 0
 38516  00983A  0100               	movlb	0	; () banked
 38517  00983C  0771               	decf	BufferCopy@i& (0+255),f,b
 38518  00983E  D7ED               	goto	l9690
 38519                           
 38520                           ; BSR set to: 0
 38521                           ;MISC.c: 175: }
 38522                           ;MISC.c: 176: while(*from != 0 && count >0)
 38523                           
 38524                           ; BSR set to: 0
 38525  009840  D013               	goto	l9710
 38526  009842                     l9702:
 38527                           
 38528                           ; BSR set to: 0
 38529                           ;MISC.c: 177: {
 38530                           ;MISC.c: 178: *to = *from;
 38531  009842  C06B  FFD9         	movff	BufferCopy@from,fsr2l
 38532  009846  C06C  FFDA         	movff	BufferCopy@from+1,fsr2h
 38533  00984A  C06D  FFE1         	movff	BufferCopy@to,fsr1l
 38534  00984E  C06E  FFE2         	movff	BufferCopy@to+1,fsr1h
 38535  009852  CFDF FFE7          	movff	indf2,indf1
 38536                           
 38537                           ; BSR set to: 0
 38538                           ;MISC.c: 179: from++;
 38539  009856  0100               	movlb	0	; () banked
 38540  009858  4B6B               	infsnz	BufferCopy@from& (0+255),f,b
 38541  00985A  2B6C               	incf	(BufferCopy@from+1)& (0+255),f,b
 38542                           
 38543                           ; BSR set to: 0
 38544                           ;MISC.c: 180: to++;
 38545  00985C  0100               	movlb	0	; () banked
 38546  00985E  4B6D               	infsnz	BufferCopy@to& (0+255),f,b
 38547  009860  2B6E               	incf	(BufferCopy@to+1)& (0+255),f,b
 38548                           
 38549                           ; BSR set to: 0
 38550                           ;MISC.c: 181: count--;
 38551  009862  0100               	movlb	0	; () banked
 38552  009864  076F               	decf	BufferCopy@count& (0+255),f,b
 38553  009866  D000               	goto	l9710
 38554  009868                     l9710:
 38555                           
 38556                           ; BSR set to: 0
 38557  009868  C06B  FFD9         	movff	BufferCopy@from,fsr2l
 38558  00986C  C06C  FFDA         	movff	BufferCopy@from+1,fsr2h
 38559  009870  50DF               	movf	indf2,w,c
 38560  009872  B4D8               	btfsc	status,2,c
 38561  009874  0012               	return	
 38562                           
 38563                           ; BSR set to: 0
 38564  009876  0100               	movlb	0	; () banked
 38565  009878  516F               	movf	BufferCopy@count& (0+255),w,b
 38566  00987A  0100               	movlb	0	; () banked
 38567  00987C  B4D8               	btfsc	status,2,c
 38568  00987E  0012               	return	
 38569  009880  D7E0               	goto	l9702
 38570                           
 38571                           ; BSR set to: 0
 38572  009882  0012               	return	
 38573                           
 38574                           ; BSR set to: 0
 38575                           
 38576                           ; BSR set to: 0
 38577  009884  0012               	return		;funcret
 38578  009886                     __end_of_BufferCopy:
 38579                           	opt stack 0
 38580                           tblptru	equ	0xFF8
 38581                           tblptrh	equ	0xFF7
 38582                           tblptrl	equ	0xFF6
 38583                           tablat	equ	0xFF5
 38584                           prodh	equ	0xFF4
 38585                           prodl	equ	0xFF3
 38586                           intcon	equ	0xFF2
 38587                           intcon2	equ	0xFF1
 38588                           indf0	equ	0xFEF
 38589                           postinc0	equ	0xFEE
 38590                           plusw0	equ	0xFEB
 38591                           fsr0h	equ	0xFEA
 38592                           fsr0l	equ	0xFE9
 38593                           wreg	equ	0xFE8
 38594                           indf1	equ	0xFE7
 38595                           postdec1	equ	0xFE5
 38596                           fsr1h	equ	0xFE2
 38597                           fsr1l	equ	0xFE1
 38598                           indf2	equ	0xFDF
 38599                           postinc2	equ	0xFDE
 38600                           postdec2	equ	0xFDD
 38601                           plusw2	equ	0xFDB
 38602                           fsr2h	equ	0xFDA
 38603                           fsr2l	equ	0xFD9
 38604                           status	equ	0xFD8
 38605                           
 38606 ;; *************** function _cleanBuffer *****************
 38607 ;; Defined at:
 38608 ;;		line 127 in file "MISC.c"
 38609 ;; Parameters:    Size  Location     Type
 38610 ;;  data            2    3[BANK0 ] PTR unsigned char 
 38611 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(100), BluetoothInitialSetup@BluetoothVersionLine2(30), Bluetooth
      +InitialSetup@BluetoothVersionLine1(30), 
 38612 ;;		 -> BluetoothInitialSetup@buf(50), CommandString(100), StringAddEqual@temp(255), BluetoothFirmware2(30), 
 38613 ;;		 -> BluetoothFirmware1(30), ReceivedString(100), main@BluetoothString(100), 
 38614 ;;  count           2    5[BANK0 ] int 
 38615 ;; Auto vars:     Size  Location     Type
 38616 ;;  i               1   10[BANK0 ] unsigned char 
 38617 ;; Return value:  Size  Location     Type
 38618 ;;		None               void
 38619 ;; Registers used:
 38620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38621 ;; Tracked objects:
 38622 ;;		On entry : 0/0
 38623 ;;		On exit  : 0/0
 38624 ;;		Unchanged: 0/0
 38625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38626 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38628 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38629 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38630 ;;Total ram usage:        8 bytes
 38631 ;; Hardware stack levels used:    1
 38632 ;; Hardware stack levels required when called:    6
 38633 ;; This function calls:
 38634 ;;		Nothing
 38635 ;; This function is called by:
 38636 ;;		_main
 38637 ;;		_Init_System
 38638 ;;		_BufferCopy
 38639 ;;		_StringAddEqual
 38640 ;;		_InitBluetooth
 38641 ;;		_EnterCommandMode
 38642 ;;		_BluetoothInitialSetup
 38643 ;;		_UseBluetooth
 38644 ;; This function uses a non-reentrant model
 38645 ;;
 38646                           
 38647                           	psect	text100
 38648  009C8E                     __ptext100:
 38649                           	opt stack 0
 38650  009C8E                     _cleanBuffer:
 38651                           	opt stack 24
 38652                           
 38653                           ;MISC.c: 129: unsigned char i=0;
 38654                           
 38655                           ; BSR set to: 0
 38656                           ;incstack = 0
 38657  009C8E  0E00               	movlw	0
 38658  009C90  0100               	movlb	0	; () banked
 38659  009C92  6F6A               	movwf	cleanBuffer@i& (0+255),b
 38660                           
 38661                           ;MISC.c: 130: for(i=0; i<count;i++)
 38662  009C94  0E00               	movlw	0
 38663  009C96  0100               	movlb	0	; () banked
 38664  009C98  6F6A               	movwf	cleanBuffer@i& (0+255),b
 38665  009C9A  D010               	goto	l9158
 38666  009C9C                     l9154:
 38667                           
 38668                           ; BSR set to: 0
 38669                           ;MISC.c: 131: {
 38670                           ;MISC.c: 132: data[i]= 0;
 38671  009C9C  0100               	movlb	0	; () banked
 38672  009C9E  516A               	movf	cleanBuffer@i& (0+255),w,b
 38673  009CA0  0D01               	mullw	1
 38674  009CA2  50F3               	movf	prodl,w,c
 38675  009CA4  0100               	movlb	0	; () banked
 38676  009CA6  2563               	addwf	cleanBuffer@data& (0+255),w,b
 38677  009CA8  6ED9               	movwf	fsr2l,c
 38678  009CAA  50F4               	movf	prodh,w,c
 38679  009CAC  0100               	movlb	0	; () banked
 38680  009CAE  2164               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 38681  009CB0  6EDA               	movwf	fsr2h,c
 38682  009CB2  0E00               	movlw	0
 38683  009CB4  6EDF               	movwf	indf2,c
 38684                           
 38685                           ; BSR set to: 0
 38686  009CB6  0100               	movlb	0	; () banked
 38687  009CB8  2B6A               	incf	cleanBuffer@i& (0+255),f,b
 38688  009CBA  D000               	goto	l9158
 38689  009CBC                     l9158:
 38690                           
 38691                           ; BSR set to: 0
 38692  009CBC  0100               	movlb	0	; () banked
 38693  009CBE  516A               	movf	cleanBuffer@i& (0+255),w,b
 38694  009CC0  0100               	movlb	0	; () banked
 38695  009CC2  6F67               	movwf	??_cleanBuffer& (0+255),b
 38696  009CC4  6B68               	clrf	(??_cleanBuffer+1)& (0+255),b
 38697  009CC6  0100               	movlb	0	; () banked
 38698  009CC8  5165               	movf	cleanBuffer@count& (0+255),w,b
 38699  009CCA  0100               	movlb	0	; () banked
 38700  009CCC  5D67               	subwf	??_cleanBuffer& (0+255),w,b
 38701  009CCE  0100               	movlb	0	; () banked
 38702  009CD0  5168               	movf	(??_cleanBuffer+1)& (0+255),w,b
 38703  009CD2  0A80               	xorlw	128
 38704  009CD4  0100               	movlb	0	; () banked
 38705  009CD6  6F69               	movwf	(??_cleanBuffer+2)& (0+255),b
 38706  009CD8  0100               	movlb	0	; () banked
 38707  009CDA  5166               	movf	(cleanBuffer@count+1)& (0+255),w,b
 38708  009CDC  0A80               	xorlw	128
 38709  009CDE  0100               	movlb	0	; () banked
 38710  009CE0  5969               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 38711  009CE2  A0D8               	btfss	status,0,c
 38712  009CE4  D7DB               	goto	l9154
 38713                           
 38714                           ; BSR set to: 0
 38715                           
 38716                           ; BSR set to: 0
 38717  009CE6  0012               	return		;funcret
 38718  009CE8                     __end_of_cleanBuffer:
 38719                           	opt stack 0
 38720                           tblptru	equ	0xFF8
 38721                           tblptrh	equ	0xFF7
 38722                           tblptrl	equ	0xFF6
 38723                           tablat	equ	0xFF5
 38724                           prodh	equ	0xFF4
 38725                           prodl	equ	0xFF3
 38726                           intcon	equ	0xFF2
 38727                           intcon2	equ	0xFF1
 38728                           indf0	equ	0xFEF
 38729                           postinc0	equ	0xFEE
 38730                           plusw0	equ	0xFEB
 38731                           fsr0h	equ	0xFEA
 38732                           fsr0l	equ	0xFE9
 38733                           wreg	equ	0xFE8
 38734                           indf1	equ	0xFE7
 38735                           postdec1	equ	0xFE5
 38736                           fsr1h	equ	0xFE2
 38737                           fsr1l	equ	0xFE1
 38738                           indf2	equ	0xFDF
 38739                           postinc2	equ	0xFDE
 38740                           postdec2	equ	0xFDD
 38741                           plusw2	equ	0xFDB
 38742                           fsr2h	equ	0xFDA
 38743                           fsr2l	equ	0xFD9
 38744                           status	equ	0xFD8
 38745                           
 38746 ;; *************** function _BluetoothConfigured *****************
 38747 ;; Defined at:
 38748 ;;		line 387 in file "Bluetooth.c"
 38749 ;; Parameters:    Size  Location     Type
 38750 ;;		None
 38751 ;; Auto vars:     Size  Location     Type
 38752 ;;		None
 38753 ;; Return value:  Size  Location     Type
 38754 ;;                  1    wreg      unsigned char 
 38755 ;; Registers used:
 38756 ;;		wreg, status,2, status,0
 38757 ;; Tracked objects:
 38758 ;;		On entry : 0/0
 38759 ;;		On exit  : 0/0
 38760 ;;		Unchanged: 0/0
 38761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38766 ;;Total ram usage:        0 bytes
 38767 ;; Hardware stack levels used:    1
 38768 ;; Hardware stack levels required when called:    6
 38769 ;; This function calls:
 38770 ;;		Nothing
 38771 ;; This function is called by:
 38772 ;;		_InitBluetooth
 38773 ;; This function uses a non-reentrant model
 38774 ;;
 38775                           
 38776                           	psect	text101
 38777  00A454                     __ptext101:
 38778                           	opt stack 0
 38779  00A454                     _BluetoothConfigured:
 38780                           	opt stack 22
 38781                           
 38782                           ;Bluetooth.c: 389: if(Global1.BlueToothFlag != 1)
 38783                           
 38784                           ; BSR set to: 0
 38785                           ;incstack = 0
 38786  00A454  0103               	movlb	3	; () banked
 38787  00A456  05DA               	decf	_Global1& (0+255),w,b
 38788  00A458  B4D8               	btfsc	status,2,c
 38789  00A45A  D002               	goto	l10354
 38790                           
 38791                           ; BSR set to: 3
 38792                           ;Bluetooth.c: 390: {
 38793                           ;Bluetooth.c: 391: return 0;
 38794  00A45C  0E00               	movlw	0
 38795                           
 38796                           ; BSR set to: 3
 38797  00A45E  0012               	return	
 38798  00A460                     l10354:
 38799                           
 38800                           ; BSR set to: 3
 38801                           ;Bluetooth.c: 392: }
 38802                           ;Bluetooth.c: 393: return 1;
 38803  00A460  0E01               	movlw	1
 38804  00A462  0012               	return	
 38805                           
 38806                           ; BSR set to: 3
 38807                           
 38808                           ; BSR set to: 3
 38809  00A464  0012               	return		;funcret
 38810  00A466                     __end_of_BluetoothConfigured:
 38811                           	opt stack 0
 38812                           tblptru	equ	0xFF8
 38813                           tblptrh	equ	0xFF7
 38814                           tblptrl	equ	0xFF6
 38815                           tablat	equ	0xFF5
 38816                           prodh	equ	0xFF4
 38817                           prodl	equ	0xFF3
 38818                           intcon	equ	0xFF2
 38819                           intcon2	equ	0xFF1
 38820                           indf0	equ	0xFEF
 38821                           postinc0	equ	0xFEE
 38822                           plusw0	equ	0xFEB
 38823                           fsr0h	equ	0xFEA
 38824                           fsr0l	equ	0xFE9
 38825                           wreg	equ	0xFE8
 38826                           indf1	equ	0xFE7
 38827                           postdec1	equ	0xFE5
 38828                           fsr1h	equ	0xFE2
 38829                           fsr1l	equ	0xFE1
 38830                           indf2	equ	0xFDF
 38831                           postinc2	equ	0xFDE
 38832                           postdec2	equ	0xFDD
 38833                           plusw2	equ	0xFDB
 38834                           fsr2h	equ	0xFDA
 38835                           fsr2l	equ	0xFD9
 38836                           status	equ	0xFD8
 38837                           
 38838 ;; *************** function _InitADC *****************
 38839 ;; Defined at:
 38840 ;;		line 135 in file "ADC.c"
 38841 ;; Parameters:    Size  Location     Type
 38842 ;;		None
 38843 ;; Auto vars:     Size  Location     Type
 38844 ;;		None
 38845 ;; Return value:  Size  Location     Type
 38846 ;;		None               void
 38847 ;; Registers used:
 38848 ;;		wreg, status,2, cstack
 38849 ;; Tracked objects:
 38850 ;;		On entry : 0/0
 38851 ;;		On exit  : 0/0
 38852 ;;		Unchanged: 0/0
 38853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38858 ;;Total ram usage:        0 bytes
 38859 ;; Hardware stack levels used:    1
 38860 ;; Hardware stack levels required when called:    7
 38861 ;; This function calls:
 38862 ;;		_ResetADC
 38863 ;; This function is called by:
 38864 ;;		_Init_System
 38865 ;; This function uses a non-reentrant model
 38866 ;;
 38867                           
 38868                           	psect	text102
 38869  00A3CA                     __ptext102:
 38870                           	opt stack 0
 38871  00A3CA                     _InitADC:
 38872                           	opt stack 22
 38873                           
 38874                           ;ADC.c: 137: ResetADC();
 38875                           
 38876                           ; BSR set to: 3
 38877                           ;incstack = 0
 38878  00A3CA  EC65  F052         	call	_ResetADC	;wreg free
 38879                           
 38880                           ;ADC.c: 138: ADCON2bits.ADFM = 1;
 38881  00A3CE  8EC0               	bsf	4032,7,c	;volatile
 38882                           
 38883                           ;ADC.c: 139: ADCON2bits.ACQT = 0x7;
 38884  00A3D0  86C0               	bsf	4032,3,c	;volatile
 38885  00A3D2  88C0               	bsf	4032,4,c	;volatile
 38886  00A3D4  8AC0               	bsf	4032,5,c	;volatile
 38887                           
 38888                           ;ADC.c: 140: ADCON2bits.ADCS = 0x4;
 38889  00A3D6  50C0               	movf	4032,w,c	;volatile
 38890  00A3D8  0BF8               	andlw	-8
 38891  00A3DA  0904               	iorlw	4
 38892  00A3DC  6EC0               	movwf	4032,c	;volatile
 38893  00A3DE  0012               	return		;funcret
 38894  00A3E0                     __end_of_InitADC:
 38895                           	opt stack 0
 38896                           tblptru	equ	0xFF8
 38897                           tblptrh	equ	0xFF7
 38898                           tblptrl	equ	0xFF6
 38899                           tablat	equ	0xFF5
 38900                           prodh	equ	0xFF4
 38901                           prodl	equ	0xFF3
 38902                           intcon	equ	0xFF2
 38903                           intcon2	equ	0xFF1
 38904                           indf0	equ	0xFEF
 38905                           postinc0	equ	0xFEE
 38906                           plusw0	equ	0xFEB
 38907                           fsr0h	equ	0xFEA
 38908                           fsr0l	equ	0xFE9
 38909                           wreg	equ	0xFE8
 38910                           indf1	equ	0xFE7
 38911                           postdec1	equ	0xFE5
 38912                           fsr1h	equ	0xFE2
 38913                           fsr1l	equ	0xFE1
 38914                           indf2	equ	0xFDF
 38915                           postinc2	equ	0xFDE
 38916                           postdec2	equ	0xFDD
 38917                           plusw2	equ	0xFDB
 38918                           fsr2h	equ	0xFDA
 38919                           fsr2l	equ	0xFD9
 38920                           status	equ	0xFD8
 38921                           
 38922 ;; *************** function _ResetADC *****************
 38923 ;; Defined at:
 38924 ;;		line 123 in file "ADC.c"
 38925 ;; Parameters:    Size  Location     Type
 38926 ;;		None
 38927 ;; Auto vars:     Size  Location     Type
 38928 ;;		None
 38929 ;; Return value:  Size  Location     Type
 38930 ;;		None               void
 38931 ;; Registers used:
 38932 ;;		wreg, status,2
 38933 ;; Tracked objects:
 38934 ;;		On entry : 0/0
 38935 ;;		On exit  : 0/0
 38936 ;;		Unchanged: 0/0
 38937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38942 ;;Total ram usage:        0 bytes
 38943 ;; Hardware stack levels used:    1
 38944 ;; Hardware stack levels required when called:    6
 38945 ;; This function calls:
 38946 ;;		Nothing
 38947 ;; This function is called by:
 38948 ;;		_InitADC
 38949 ;; This function uses a non-reentrant model
 38950 ;;
 38951                           
 38952                           	psect	text103
 38953  00A4CA                     __ptext103:
 38954                           	opt stack 0
 38955  00A4CA                     _ResetADC:
 38956                           	opt stack 22
 38957                           
 38958                           ;ADC.c: 125: ADCON0 =0;
 38959                           
 38960                           ;incstack = 0
 38961  00A4CA  0E00               	movlw	0
 38962  00A4CC  6EC2               	movwf	4034,c	;volatile
 38963                           
 38964                           ;ADC.c: 126: ADCON1 =0;
 38965  00A4CE  0E00               	movlw	0
 38966  00A4D0  6EC1               	movwf	4033,c	;volatile
 38967                           
 38968                           ;ADC.c: 127: ADCON2 =0;
 38969  00A4D2  0E00               	movlw	0
 38970  00A4D4  6EC0               	movwf	4032,c	;volatile
 38971  00A4D6  0012               	return		;funcret
 38972  00A4D8                     __end_of_ResetADC:
 38973                           	opt stack 0
 38974                           tblptru	equ	0xFF8
 38975                           tblptrh	equ	0xFF7
 38976                           tblptrl	equ	0xFF6
 38977                           tablat	equ	0xFF5
 38978                           prodh	equ	0xFF4
 38979                           prodl	equ	0xFF3
 38980                           intcon	equ	0xFF2
 38981                           intcon2	equ	0xFF1
 38982                           indf0	equ	0xFEF
 38983                           postinc0	equ	0xFEE
 38984                           plusw0	equ	0xFEB
 38985                           fsr0h	equ	0xFEA
 38986                           fsr0l	equ	0xFE9
 38987                           wreg	equ	0xFE8
 38988                           indf1	equ	0xFE7
 38989                           postdec1	equ	0xFE5
 38990                           fsr1h	equ	0xFE2
 38991                           fsr1l	equ	0xFE1
 38992                           indf2	equ	0xFDF
 38993                           postinc2	equ	0xFDE
 38994                           postdec2	equ	0xFDD
 38995                           plusw2	equ	0xFDB
 38996                           fsr2h	equ	0xFDA
 38997                           fsr2l	equ	0xFD9
 38998                           status	equ	0xFD8
 38999                           
 39000 ;; *************** function _EEPROMinitialized *****************
 39001 ;; Defined at:
 39002 ;;		line 332 in file "EEPROM.c"
 39003 ;; Parameters:    Size  Location     Type
 39004 ;;		None
 39005 ;; Auto vars:     Size  Location     Type
 39006 ;;		None
 39007 ;; Return value:  Size  Location     Type
 39008 ;;                  1    wreg      unsigned char 
 39009 ;; Registers used:
 39010 ;;		wreg, status,2, status,0
 39011 ;; Tracked objects:
 39012 ;;		On entry : 0/0
 39013 ;;		On exit  : 0/0
 39014 ;;		Unchanged: 0/0
 39015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39020 ;;Total ram usage:        0 bytes
 39021 ;; Hardware stack levels used:    1
 39022 ;; Hardware stack levels required when called:    6
 39023 ;; This function calls:
 39024 ;;		Nothing
 39025 ;; This function is called by:
 39026 ;;		_Init_System
 39027 ;; This function uses a non-reentrant model
 39028 ;;
 39029                           
 39030                           	psect	text104
 39031  00A40A                     __ptext104:
 39032                           	opt stack 0
 39033  00A40A                     _EEPROMinitialized:
 39034                           	opt stack 23
 39035                           
 39036                           ;EEPROM.c: 334: if(Global1.EEPROMinitFlag == 59)
 39037                           
 39038                           ;incstack = 0
 39039  00A40A  0E3B               	movlw	59
 39040  00A40C  0103               	movlb	3	; () banked
 39041  00A40E  19F7               	xorwf	(_Global1+29)& (0+255),w,b
 39042  00A410  A4D8               	btfss	status,2,c
 39043  00A412  D002               	goto	l10772
 39044                           
 39045                           ; BSR set to: 3
 39046                           ;EEPROM.c: 335: {
 39047                           ;EEPROM.c: 336: return 1;
 39048  00A414  0E01               	movlw	1
 39049                           
 39050                           ; BSR set to: 3
 39051  00A416  0012               	return	
 39052  00A418                     l10772:
 39053                           
 39054                           ; BSR set to: 3
 39055                           ;EEPROM.c: 337: }
 39056                           ;EEPROM.c: 338: return 0;
 39057  00A418  0E00               	movlw	0
 39058  00A41A  0012               	return	
 39059                           
 39060                           ; BSR set to: 3
 39061                           
 39062                           ; BSR set to: 3
 39063  00A41C  0012               	return		;funcret
 39064  00A41E                     __end_of_EEPROMinitialized:
 39065                           	opt stack 0
 39066                           tblptru	equ	0xFF8
 39067                           tblptrh	equ	0xFF7
 39068                           tblptrl	equ	0xFF6
 39069                           tablat	equ	0xFF5
 39070                           prodh	equ	0xFF4
 39071                           prodl	equ	0xFF3
 39072                           intcon	equ	0xFF2
 39073                           intcon2	equ	0xFF1
 39074                           indf0	equ	0xFEF
 39075                           postinc0	equ	0xFEE
 39076                           plusw0	equ	0xFEB
 39077                           fsr0h	equ	0xFEA
 39078                           fsr0l	equ	0xFE9
 39079                           wreg	equ	0xFE8
 39080                           indf1	equ	0xFE7
 39081                           postdec1	equ	0xFE5
 39082                           fsr1h	equ	0xFE2
 39083                           fsr1l	equ	0xFE1
 39084                           indf2	equ	0xFDF
 39085                           postinc2	equ	0xFDE
 39086                           postdec2	equ	0xFDD
 39087                           plusw2	equ	0xFDB
 39088                           fsr2h	equ	0xFDA
 39089                           fsr2l	equ	0xFD9
 39090                           status	equ	0xFD8
 39091                           
 39092 ;; *************** function _InitApp *****************
 39093 ;; Defined at:
 39094 ;;		line 64 in file "user.c"
 39095 ;; Parameters:    Size  Location     Type
 39096 ;;		None
 39097 ;; Auto vars:     Size  Location     Type
 39098 ;;		None
 39099 ;; Return value:  Size  Location     Type
 39100 ;;		None               void
 39101 ;; Registers used:
 39102 ;;		wreg, status,2, status,0
 39103 ;; Tracked objects:
 39104 ;;		On entry : 0/0
 39105 ;;		On exit  : 0/0
 39106 ;;		Unchanged: 0/0
 39107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39112 ;;Total ram usage:        0 bytes
 39113 ;; Hardware stack levels used:    1
 39114 ;; Hardware stack levels required when called:    6
 39115 ;; This function calls:
 39116 ;;		Nothing
 39117 ;; This function is called by:
 39118 ;;		_main
 39119 ;; This function uses a non-reentrant model
 39120 ;;
 39121                           
 39122                           	psect	text105
 39123  009E80                     __ptext105:
 39124                           	opt stack 0
 39125  009E80                     _InitApp:
 39126                           	opt stack 24
 39127                           
 39128                           ;user.c: 66: LATA = 0;
 39129                           
 39130                           ; BSR set to: 3
 39131                           ;incstack = 0
 39132  009E80  0E00               	movlw	0
 39133  009E82  6E89               	movwf	3977,c	;volatile
 39134                           
 39135                           ;user.c: 67: LATB = 0;
 39136  009E84  0E00               	movlw	0
 39137  009E86  6E8A               	movwf	3978,c	;volatile
 39138                           
 39139                           ;user.c: 68: LATC = 0;
 39140  009E88  0E00               	movlw	0
 39141  009E8A  6E8B               	movwf	3979,c	;volatile
 39142                           
 39143                           ;user.c: 69: LATA |= 0x04;
 39144  009E8C  8489               	bsf	3977,2,c	;volatile
 39145                           
 39146                           ;user.c: 71: TRISAbits.TRISA0 = 1;
 39147  009E8E  8092               	bsf	3986,0,c	;volatile
 39148                           
 39149                           ;user.c: 72: TRISAbits.TRISA1 = 1;
 39150  009E90  8292               	bsf	3986,1,c	;volatile
 39151                           
 39152                           ;user.c: 73: TRISAbits.TRISA2 = 0;
 39153  009E92  9492               	bcf	3986,2,c	;volatile
 39154                           
 39155                           ;user.c: 74: TRISAbits.TRISA3 = 0;
 39156  009E94  9692               	bcf	3986,3,c	;volatile
 39157                           
 39158                           ;user.c: 75: TRISAbits.TRISA4 = 0;
 39159  009E96  9892               	bcf	3986,4,c	;volatile
 39160                           
 39161                           ;user.c: 76: TRISAbits.TRISA5 = 0;
 39162  009E98  9A92               	bcf	3986,5,c	;volatile
 39163                           
 39164                           ;user.c: 77: TRISCbits.TRISC0 = 1;
 39165  009E9A  8094               	bsf	3988,0,c	;volatile
 39166                           
 39167                           ;user.c: 78: TRISCbits.TRISC1 = 0;
 39168  009E9C  9294               	bcf	3988,1,c	;volatile
 39169                           
 39170                           ;user.c: 79: TRISCbits.TRISC2 = 0;
 39171  009E9E  9494               	bcf	3988,2,c	;volatile
 39172                           
 39173                           ;user.c: 80: TRISCbits.TRISC3 = 0;
 39174  009EA0  9694               	bcf	3988,3,c	;volatile
 39175                           
 39176                           ;user.c: 81: TRISCbits.TRISC4 = 0;
 39177  009EA2  9894               	bcf	3988,4,c	;volatile
 39178                           
 39179                           ;user.c: 82: TRISCbits.TRISC5 = 0;
 39180  009EA4  9A94               	bcf	3988,5,c	;volatile
 39181                           
 39182                           ;user.c: 83: TRISCbits.TRISC6 = 0;
 39183  009EA6  9C94               	bcf	3988,6,c	;volatile
 39184                           
 39185                           ;user.c: 84: TRISCbits.TRISC7 = 1;
 39186  009EA8  8E94               	bsf	3988,7,c	;volatile
 39187                           
 39188                           ;user.c: 85: TRISBbits.TRISB0 = 1;
 39189  009EAA  8093               	bsf	3987,0,c	;volatile
 39190                           
 39191                           ;user.c: 86: TRISBbits.TRISB1 = 1;
 39192  009EAC  8293               	bsf	3987,1,c	;volatile
 39193                           
 39194                           ;user.c: 87: TRISBbits.TRISB2 = 1;
 39195  009EAE  8493               	bsf	3987,2,c	;volatile
 39196                           
 39197                           ;user.c: 88: TRISBbits.TRISB3 = 1;
 39198  009EB0  8693               	bsf	3987,3,c	;volatile
 39199                           
 39200                           ;user.c: 89: TRISBbits.TRISB4 = 1;
 39201  009EB2  8893               	bsf	3987,4,c	;volatile
 39202                           
 39203                           ;user.c: 90: TRISBbits.TRISB5 = 1;
 39204  009EB4  8A93               	bsf	3987,5,c	;volatile
 39205                           
 39206                           ;user.c: 93: ANSEL = 0x01;
 39207  009EB6  0E01               	movlw	1
 39208  009EB8  6E7E               	movwf	3966,c	;volatile
 39209                           
 39210                           ;user.c: 94: ANSELH = 0x00;
 39211  009EBA  0E00               	movlw	0
 39212  009EBC  6E7F               	movwf	3967,c	;volatile
 39213                           
 39214                           ;user.c: 97: INTCON2bits.RBPU = 0;
 39215  009EBE  9EF1               	bcf	intcon2,7,c	;volatile
 39216                           
 39217                           ;user.c: 99: WPUB = 0x0F;
 39218  009EC0  0E0F               	movlw	15
 39219  009EC2  6E7C               	movwf	3964,c	;volatile
 39220  009EC4  0012               	return		;funcret
 39221  009EC6                     __end_of_InitApp:
 39222                           	opt stack 0
 39223                           tblptru	equ	0xFF8
 39224                           tblptrh	equ	0xFF7
 39225                           tblptrl	equ	0xFF6
 39226                           tablat	equ	0xFF5
 39227                           prodh	equ	0xFF4
 39228                           prodl	equ	0xFF3
 39229                           intcon	equ	0xFF2
 39230                           intcon2	equ	0xFF1
 39231                           indf0	equ	0xFEF
 39232                           postinc0	equ	0xFEE
 39233                           plusw0	equ	0xFEB
 39234                           fsr0h	equ	0xFEA
 39235                           fsr0l	equ	0xFE9
 39236                           wreg	equ	0xFE8
 39237                           indf1	equ	0xFE7
 39238                           postdec1	equ	0xFE5
 39239                           fsr1h	equ	0xFE2
 39240                           fsr1l	equ	0xFE1
 39241                           indf2	equ	0xFDF
 39242                           postinc2	equ	0xFDE
 39243                           postdec2	equ	0xFDD
 39244                           plusw2	equ	0xFDB
 39245                           fsr2h	equ	0xFDA
 39246                           fsr2l	equ	0xFD9
 39247                           status	equ	0xFD8
 39248                           
 39249 ;; *************** function _ConfigureOscillator *****************
 39250 ;; Defined at:
 39251 ;;		line 43 in file "system.c"
 39252 ;; Parameters:    Size  Location     Type
 39253 ;;		None
 39254 ;; Auto vars:     Size  Location     Type
 39255 ;;		None
 39256 ;; Return value:  Size  Location     Type
 39257 ;;		None               void
 39258 ;; Registers used:
 39259 ;;		None
 39260 ;; Tracked objects:
 39261 ;;		On entry : 0/0
 39262 ;;		On exit  : 0/0
 39263 ;;		Unchanged: 0/0
 39264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39269 ;;Total ram usage:        0 bytes
 39270 ;; Hardware stack levels used:    1
 39271 ;; Hardware stack levels required when called:    6
 39272 ;; This function calls:
 39273 ;;		Nothing
 39274 ;; This function is called by:
 39275 ;;		_main
 39276 ;; This function uses a non-reentrant model
 39277 ;;
 39278                           
 39279                           	psect	text106
 39280  00A544                     __ptext106:
 39281                           	opt stack 0
 39282  00A544                     _ConfigureOscillator:
 39283                           	opt stack 24
 39284                           
 39285                           ;incstack = 0
 39286  00A544  0012               	return		;funcret
 39287  00A546                     __end_of_ConfigureOscillator:
 39288                           	opt stack 0
 39289                           tblptru	equ	0xFF8
 39290                           tblptrh	equ	0xFF7
 39291                           tblptrl	equ	0xFF6
 39292                           tablat	equ	0xFF5
 39293                           prodh	equ	0xFF4
 39294                           prodl	equ	0xFF3
 39295                           intcon	equ	0xFF2
 39296                           intcon2	equ	0xFF1
 39297                           indf0	equ	0xFEF
 39298                           postinc0	equ	0xFEE
 39299                           plusw0	equ	0xFEB
 39300                           fsr0h	equ	0xFEA
 39301                           fsr0l	equ	0xFE9
 39302                           wreg	equ	0xFE8
 39303                           indf1	equ	0xFE7
 39304                           postdec1	equ	0xFE5
 39305                           fsr1h	equ	0xFE2
 39306                           fsr1l	equ	0xFE1
 39307                           indf2	equ	0xFDF
 39308                           postinc2	equ	0xFDE
 39309                           postdec2	equ	0xFDD
 39310                           plusw2	equ	0xFDB
 39311                           fsr2h	equ	0xFDA
 39312                           fsr2l	equ	0xFD9
 39313                           status	equ	0xFD8
 39314                           
 39315 ;; *************** function _low_isr *****************
 39316 ;; Defined at:
 39317 ;;		line 607 in file "interrupts.c"
 39318 ;; Parameters:    Size  Location     Type
 39319 ;;		None
 39320 ;; Auto vars:     Size  Location     Type
 39321 ;;  data            1   30[COMRAM] unsigned char 
 39322 ;; Return value:  Size  Location     Type
 39323 ;;		None               void
 39324 ;; Registers used:
 39325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39326 ;; Tracked objects:
 39327 ;;		On entry : 0/0
 39328 ;;		On exit  : 0/0
 39329 ;;		Unchanged: 0/0
 39330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39332 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39333 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39334 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39335 ;;Total ram usage:       18 bytes
 39336 ;; Hardware stack levels used:    1
 39337 ;; Hardware stack levels required when called:    5
 39338 ;; This function calls:
 39339 ;;		_EraseScreen
 39340 ;;		_IsCharacter
 39341 ;;		i1_BlueConnected
 39342 ;;		i1_ReadUSART
 39343 ;;		i1_UARTchar
 39344 ;;		i1_UARTchar_CONST
 39345 ;;		i1_UARTstring
 39346 ;;		i1_UARTstring_CONST
 39347 ;; This function is called by:
 39348 ;;		Interrupt level 1
 39349 ;; This function uses a non-reentrant model
 39350 ;;
 39351                           
 39352                           	psect	intcodelo
 39353  000018                     __pintcodelo:
 39354                           	opt stack 0
 39355  000018                     _low_isr:
 39356                           	opt stack 17
 39357                           
 39358                           ;incstack = 0
 39359  000018  CFD8 F00E          	movff	status,??_low_isr
 39360  00001C  CFE8 F00F          	movff	wreg,??_low_isr+1
 39361  000020  CFE0 F010          	movff	bsr,??_low_isr+2
 39362  000024  CFFA F011          	movff	pclath,??_low_isr+3
 39363  000028  CFFB F012          	movff	pclatu,??_low_isr+4
 39364  00002C  CFE9 F013          	movff	fsr0l,??_low_isr+5
 39365  000030  CFEA F014          	movff	fsr0h,??_low_isr+6
 39366  000034  CFE1 F015          	movff	fsr1l,??_low_isr+7
 39367  000038  CFE2 F016          	movff	fsr1h,??_low_isr+8
 39368  00003C  CFD9 F017          	movff	fsr2l,??_low_isr+9
 39369  000040  CFDA F018          	movff	fsr2h,??_low_isr+10
 39370  000044  CFF3 F019          	movff	prodl,??_low_isr+11
 39371  000048  CFF4 F01A          	movff	prodh,??_low_isr+12
 39372  00004C  CFF6 F01B          	movff	tblptrl,??_low_isr+13
 39373  000050  CFF7 F01C          	movff	tblptrh,??_low_isr+14
 39374  000054  CFF8 F01D          	movff	tblptru,??_low_isr+15
 39375  000058  CFF5 F01E          	movff	tablat,??_low_isr+16
 39376                           
 39377                           ;interrupts.c: 616: char data = 0;
 39378  00005C  0E00               	movlw	0
 39379  00005E  6E1F               	movwf	low_isr@data,c
 39380                           
 39381                           ;interrupts.c: 618: INTCONbits.PEIE = 0;
 39382  000060  9CF2               	bcf	intcon,6,c	;volatile
 39383                           
 39384                           ;interrupts.c: 620: if(PIR1bits.RCIF)
 39385  000062  AA9E               	btfss	3998,5,c	;volatile
 39386  000064  D07F               	goto	i1l1458
 39387                           
 39388                           ;interrupts.c: 621: {
 39389                           ;interrupts.c: 623: data = ReadUSART();
 39390  000066  ECF0  F051         	call	i1_ReadUSART	;wreg free
 39391  00006A  6E1F               	movwf	low_isr@data,c
 39392                           
 39393                           ;interrupts.c: 625: if(!BlueConnected())
 39394  00006C  EC6C  F052         	call	i1_BlueConnected	;wreg free
 39395  000070  0900               	iorlw	0
 39396  000072  A4D8               	btfss	status,2,c
 39397  000074  D00F               	goto	i1l13696
 39398                           
 39399                           ;interrupts.c: 626: {
 39400                           ;interrupts.c: 627: if(CommandStringPos < (100 - 1))
 39401  000076  0E63               	movlw	99
 39402  000078  6043               	cpfslt	_CommandStringPos,c	;volatile
 39403  00007A  D072               	goto	i1l13740
 39404                           
 39405                           ;interrupts.c: 628: {
 39406                           ;interrupts.c: 629: CommandString[CommandStringPos] = data;
 39407  00007C  5043               	movf	_CommandStringPos,w,c	;volatile
 39408  00007E  0D01               	mullw	1
 39409  000080  0E18               	movlw	low _CommandString
 39410  000082  24F3               	addwf	prodl,w,c
 39411  000084  6ED9               	movwf	fsr2l,c
 39412  000086  0E03               	movlw	high _CommandString
 39413  000088  20F4               	addwfc	prodh,w,c
 39414  00008A  6EDA               	movwf	fsr2h,c
 39415  00008C  C01F  FFDF         	movff	low_isr@data,indf2
 39416                           
 39417                           ;interrupts.c: 630: CommandStringPos++;
 39418  000090  2A43               	incf	_CommandStringPos,f,c	;volatile
 39419                           
 39420                           ;interrupts.c: 631: }
 39421                           ;interrupts.c: 632: }
 39422  000092  D066               	goto	i1l13740
 39423  000094                     i1l13696:
 39424                           
 39425                           ;interrupts.c: 633: else
 39426                           ;interrupts.c: 634: {
 39427                           ;interrupts.c: 635: if(data != '\r' && data != '\n')
 39428  000094  0E0D               	movlw	13
 39429  000096  181F               	xorwf	low_isr@data,w,c
 39430  000098  B4D8               	btfsc	status,2,c
 39431  00009A  D04F               	goto	i1l13730
 39432  00009C  0E0A               	movlw	10
 39433  00009E  181F               	xorwf	low_isr@data,w,c
 39434  0000A0  B4D8               	btfsc	status,2,c
 39435  0000A2  D04B               	goto	i1l13730
 39436                           
 39437                           ;interrupts.c: 636: {
 39438                           ;interrupts.c: 637: if((data == 127 || data == 8) && (ReceivedStringPos > 0))
 39439  0000A4  0E7F               	movlw	127
 39440  0000A6  181F               	xorwf	low_isr@data,w,c
 39441  0000A8  B4D8               	btfsc	status,2,c
 39442  0000AA  D004               	goto	i1l13704
 39443  0000AC  0E08               	movlw	8
 39444  0000AE  181F               	xorwf	low_isr@data,w,c
 39445  0000B0  A4D8               	btfss	status,2,c
 39446  0000B2  D01F               	goto	i1l13716
 39447  0000B4                     i1l13704:
 39448  0000B4  0102               	movlb	2	; () banked
 39449  0000B6  51FF               	movf	_ReceivedStringPos& (0+255),w,b	;volatile
 39450  0000B8  B4D8               	btfsc	status,2,c
 39451  0000BA  D01B               	goto	i1l13716
 39452                           
 39453                           ; BSR set to: 2
 39454                           ;interrupts.c: 638: {
 39455                           ;interrupts.c: 640: EraseScreen(ReceivedStringPos + 1);
 39456  0000BC  0102               	movlb	2	; () banked
 39457  0000BE  29FF               	incf	_ReceivedStringPos& (0+255),w,b	;volatile
 39458  0000C0  EC8C  F051         	call	_EraseScreen
 39459                           
 39460                           ;interrupts.c: 641: ReceivedStringPos--;
 39461  0000C4  0102               	movlb	2	; () banked
 39462  0000C6  07FF               	decf	_ReceivedStringPos& (0+255),f,b	;volatile
 39463                           
 39464                           ; BSR set to: 2
 39465                           ;interrupts.c: 642: ReceivedString[ReceivedStringPos] = '\0';
 39466  0000C8  0102               	movlb	2	; () banked
 39467  0000CA  51FF               	movf	_ReceivedStringPos& (0+255),w,b	;volatile
 39468  0000CC  0D01               	mullw	1
 39469  0000CE  0E00               	movlw	low _ReceivedString
 39470  0000D0  24F3               	addwf	prodl,w,c
 39471  0000D2  6ED9               	movwf	fsr2l,c
 39472  0000D4  0E04               	movlw	high _ReceivedString
 39473  0000D6  20F4               	addwfc	prodh,w,c
 39474  0000D8  6EDA               	movwf	fsr2h,c
 39475  0000DA  0E00               	movlw	0
 39476  0000DC  6EDF               	movwf	indf2,c
 39477                           
 39478                           ; BSR set to: 2
 39479                           ;interrupts.c: 643: UARTchar_CONST('>');
 39480  0000DE  0E3E               	movlw	62
 39481  0000E0  ECF2  F050         	call	i1_UARTchar_CONST
 39482                           
 39483                           ;interrupts.c: 644: UARTstring(ReceivedString);
 39484  0000E4  0E00               	movlw	low _ReceivedString
 39485  0000E6  6E0B               	movwf	i1UARTstring@data,c
 39486  0000E8  0E04               	movlw	high _ReceivedString
 39487  0000EA  6E0C               	movwf	i1UARTstring@data+1,c
 39488  0000EC  ECA0  F051         	call	i1_UARTstring	;wreg free
 39489                           
 39490                           ;interrupts.c: 645: }
 39491  0000F0  D037               	goto	i1l13740
 39492  0000F2                     i1l13716:
 39493                           
 39494                           ;interrupts.c: 646: else if(ReceivedStringPos < (100 - 2))
 39495  0000F2  0E62               	movlw	98
 39496  0000F4  0102               	movlb	2	; () banked
 39497  0000F6  61FF               	cpfslt	_ReceivedStringPos& (0+255),b	;volatile
 39498  0000F8  D01B               	goto	i1l1467
 39499                           
 39500                           ; BSR set to: 2
 39501                           ;interrupts.c: 647: {
 39502                           ;interrupts.c: 648: if(!NewReceivedString)
 39503  0000FA  0100               	movlb	0	; () banked
 39504  0000FC  51F9               	movf	_NewReceivedString& (0+255),w,b	;volatile
 39505  0000FE  A4D8               	btfss	status,2,c
 39506  000100  D02F               	goto	i1l13740
 39507                           
 39508                           ; BSR set to: 0
 39509                           ;interrupts.c: 649: {
 39510                           ;interrupts.c: 650: if(IsCharacter(data))
 39511  000102  501F               	movf	low_isr@data,w,c
 39512  000104  ECCE  F051         	call	_IsCharacter
 39513  000108  0900               	iorlw	0
 39514  00010A  B4D8               	btfsc	status,2,c
 39515  00010C  D029               	goto	i1l13740
 39516                           
 39517                           ;interrupts.c: 651: {
 39518                           ;interrupts.c: 652: UARTchar(data);
 39519  00010E  501F               	movf	low_isr@data,w,c
 39520  000110  EC4D  F051         	call	i1_UARTchar
 39521                           
 39522                           ;interrupts.c: 653: ReceivedString[ReceivedStringPos] = data;
 39523  000114  0102               	movlb	2	; () banked
 39524  000116  51FF               	movf	_ReceivedStringPos& (0+255),w,b	;volatile
 39525  000118  0D01               	mullw	1
 39526  00011A  0E00               	movlw	low _ReceivedString
 39527  00011C  24F3               	addwf	prodl,w,c
 39528  00011E  6ED9               	movwf	fsr2l,c
 39529  000120  0E04               	movlw	high _ReceivedString
 39530  000122  20F4               	addwfc	prodh,w,c
 39531  000124  6EDA               	movwf	fsr2h,c
 39532  000126  C01F  FFDF         	movff	low_isr@data,indf2
 39533                           
 39534                           ; BSR set to: 2
 39535                           ;interrupts.c: 654: ReceivedStringPos++;
 39536  00012A  0102               	movlb	2	; () banked
 39537  00012C  2BFF               	incf	_ReceivedStringPos& (0+255),f,b	;volatile
 39538                           
 39539                           ; BSR set to: 2
 39540                           ;interrupts.c: 655: }
 39541                           ;interrupts.c: 656: }
 39542                           ;interrupts.c: 657: }
 39543                           
 39544                           ; BSR set to: 2
 39545  00012E  D018               	goto	i1l13740
 39546  000130                     i1l1467:
 39547                           
 39548                           ; BSR set to: 2
 39549                           ;interrupts.c: 658: else
 39550                           ;interrupts.c: 659: {
 39551                           ;interrupts.c: 660: PIE1bits.RCIE = 0;
 39552  000130  9A9D               	bcf	3997,5,c	;volatile
 39553                           
 39554                           ; BSR set to: 2
 39555                           ;interrupts.c: 661: BufferOverflow = 1;
 39556  000132  0E01               	movlw	1
 39557  000134  0101               	movlb	1	; () banked
 39558  000136  6FFF               	movwf	_BufferOverflow& (0+255),b
 39559                           
 39560                           ; BSR set to: 1
 39561                           ;interrupts.c: 662: }
 39562                           ;interrupts.c: 663: }
 39563                           
 39564                           ; BSR set to: 1
 39565  000138  D013               	goto	i1l13740
 39566  00013A                     i1l13730:
 39567                           
 39568                           ;interrupts.c: 664: else if(ReceivedStringPos > 0 && (NewReceivedString == 0))
 39569  00013A  0102               	movlb	2	; () banked
 39570  00013C  51FF               	movf	_ReceivedStringPos& (0+255),w,b	;volatile
 39571  00013E  B4D8               	btfsc	status,2,c
 39572  000140  D00F               	goto	i1l13740
 39573                           
 39574                           ; BSR set to: 2
 39575  000142  0100               	movlb	0	; () banked
 39576  000144  51F9               	movf	_NewReceivedString& (0+255),w,b	;volatile
 39577  000146  A4D8               	btfss	status,2,c
 39578  000148  D00B               	goto	i1l13740
 39579                           
 39580                           ; BSR set to: 0
 39581                           ;interrupts.c: 665: {
 39582                           ;interrupts.c: 666: PIE1bits.RCIE = 0;
 39583  00014A  9A9D               	bcf	3997,5,c	;volatile
 39584                           
 39585                           ; BSR set to: 0
 39586                           ;interrupts.c: 667: UARTstring_CONST(CRLN);
 39587  00014C  0E05               	movlw	low _CRLN
 39588  00014E  6E0C               	movwf	i1UARTstring_CONST@data,c
 39589  000150  0EF2               	movlw	high _CRLN
 39590  000152  6E0D               	movwf	i1UARTstring_CONST@data+1,c
 39591  000154  ECDA  F050         	call	i1_UARTstring_CONST	;wreg free
 39592                           
 39593                           ;interrupts.c: 668: NewReceivedString = 1;
 39594  000158  0E01               	movlw	1
 39595  00015A  0100               	movlb	0	; () banked
 39596  00015C  6FF9               	movwf	_NewReceivedString& (0+255),b	;volatile
 39597                           
 39598                           ; BSR set to: 0
 39599                           
 39600                           ; BSR set to: 0
 39601  00015E  D000               	goto	i1l13740
 39602  000160                     i1l13740:
 39603                           
 39604                           ;interrupts.c: 669: }
 39605                           ;interrupts.c: 670: }
 39606                           ;interrupts.c: 671: PIR1bits.RCIF = 0;
 39607  000160  9A9E               	bcf	3998,5,c	;volatile
 39608                           
 39609                           ;interrupts.c: 672: }
 39610  000162  D00F               	goto	i1l1473
 39611  000164                     i1l1458:
 39612                           
 39613                           ;interrupts.c: 673: else if(PIR1bits.TMR1IF)
 39614  000164  A09E               	btfss	3998,0,c	;volatile
 39615  000166  D00B               	goto	i1l1474
 39616                           
 39617                           ;interrupts.c: 674: {
 39618                           ;interrupts.c: 675: Timer1_Postscaler++;
 39619  000168  2A52               	incf	_Timer1_Postscaler,f,c
 39620                           
 39621                           ;interrupts.c: 676: if(Timer1_Postscaler == 3)
 39622  00016A  0E03               	movlw	3
 39623  00016C  1852               	xorwf	_Timer1_Postscaler,w,c
 39624  00016E  A4D8               	btfss	status,2,c
 39625  000170  D004               	goto	i1l13750
 39626                           
 39627                           ;interrupts.c: 677: {
 39628                           ;interrupts.c: 678: (LATC &= ~0x04);
 39629  000172  948B               	bcf	3979,2,c	;volatile
 39630                           
 39631                           ;interrupts.c: 679: (LATC &= ~0x02);
 39632  000174  928B               	bcf	3979,1,c	;volatile
 39633                           
 39634                           ;interrupts.c: 680: (T1CONbits.TMR1ON = 0);
 39635  000176  90CD               	bcf	4045,0,c	;volatile
 39636  000178  D000               	goto	i1l13750
 39637  00017A                     i1l13750:
 39638                           
 39639                           ;interrupts.c: 681: }
 39640                           ;interrupts.c: 682: PIR1bits.TMR1IF = 0;
 39641  00017A  909E               	bcf	3998,0,c	;volatile
 39642                           
 39643                           ;interrupts.c: 683: }
 39644  00017C  D002               	goto	i1l1473
 39645  00017E                     i1l1474:
 39646                           
 39647                           ;interrupts.c: 684: else
 39648                           ;interrupts.c: 685: {
 39649                           ;interrupts.c: 687: __nop();
 39650  00017E  F000               	nop	
 39651  000180  D000               	goto	i1l1473
 39652  000182                     i1l1473:
 39653                           
 39654                           ;interrupts.c: 688: }
 39655                           ;interrupts.c: 689: INTCONbits.PEIE = 1;
 39656  000182  8CF2               	bsf	intcon,6,c	;volatile
 39657  000184  C01E  FFF5         	movff	??_low_isr+16,tablat
 39658  000188  C01D  FFF8         	movff	??_low_isr+15,tblptru
 39659  00018C  C01C  FFF7         	movff	??_low_isr+14,tblptrh
 39660  000190  C01B  FFF6         	movff	??_low_isr+13,tblptrl
 39661  000194  C01A  FFF4         	movff	??_low_isr+12,prodh
 39662  000198  C019  FFF3         	movff	??_low_isr+11,prodl
 39663  00019C  C018  FFDA         	movff	??_low_isr+10,fsr2h
 39664  0001A0  C017  FFD9         	movff	??_low_isr+9,fsr2l
 39665  0001A4  C016  FFE2         	movff	??_low_isr+8,fsr1h
 39666  0001A8  C015  FFE1         	movff	??_low_isr+7,fsr1l
 39667  0001AC  C014  FFEA         	movff	??_low_isr+6,fsr0h
 39668  0001B0  C013  FFE9         	movff	??_low_isr+5,fsr0l
 39669  0001B4  C012  FFFB         	movff	??_low_isr+4,pclatu
 39670  0001B8  C011  FFFA         	movff	??_low_isr+3,pclath
 39671  0001BC  C010  FFE0         	movff	??_low_isr+2,bsr
 39672  0001C0  C00F  FFE8         	movff	??_low_isr+1,wreg
 39673  0001C4  C00E  FFD8         	movff	??_low_isr,status
 39674  0001C8  0010               	retfie	
 39675  0001CA                     __end_of_low_isr:
 39676                           	opt stack 0
 39677                           pclatu	equ	0xFFB
 39678                           pclath	equ	0xFFA
 39679                           tblptru	equ	0xFF8
 39680                           tblptrh	equ	0xFF7
 39681                           tblptrl	equ	0xFF6
 39682                           tablat	equ	0xFF5
 39683                           prodh	equ	0xFF4
 39684                           prodl	equ	0xFF3
 39685                           intcon	equ	0xFF2
 39686                           intcon2	equ	0xFF1
 39687                           indf0	equ	0xFEF
 39688                           postinc0	equ	0xFEE
 39689                           plusw0	equ	0xFEB
 39690                           fsr0h	equ	0xFEA
 39691                           fsr0l	equ	0xFE9
 39692                           wreg	equ	0xFE8
 39693                           indf1	equ	0xFE7
 39694                           postdec1	equ	0xFE5
 39695                           fsr1h	equ	0xFE2
 39696                           fsr1l	equ	0xFE1
 39697                           bsr	equ	0xFE0
 39698                           indf2	equ	0xFDF
 39699                           postinc2	equ	0xFDE
 39700                           postdec2	equ	0xFDD
 39701                           plusw2	equ	0xFDB
 39702                           fsr2h	equ	0xFDA
 39703                           fsr2l	equ	0xFD9
 39704                           status	equ	0xFD8
 39705                           
 39706 ;; *************** function i1_UARTstring_CONST *****************
 39707 ;; Defined at:
 39708 ;;		line 238 in file "UART.c"
 39709 ;; Parameters:    Size  Location     Type
 39710 ;;  data            2   11[COMRAM] PTR const unsigned char 
 39711 ;;		 -> STR_162(28), STR_103(13), STR_84(24), STR_81(60), 
 39712 ;;		 -> STR_76(32), STR_65(14), SYNTAX_ERR(14), STR_15(5), 
 39713 ;;		 -> STR_13(3), STR_12(6), STR_11(9), STR_10(20), 
 39714 ;;		 -> STR_9(9), STR_6(3), STR_4(4), CRLN(3), 
 39715 ;; Auto vars:     Size  Location     Type
 39716 ;;		None
 39717 ;; Return value:  Size  Location     Type
 39718 ;;		None               void
 39719 ;; Registers used:
 39720 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 39721 ;; Tracked objects:
 39722 ;;		On entry : 0/0
 39723 ;;		On exit  : 0/0
 39724 ;;		Unchanged: 0/0
 39725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39730 ;;Total ram usage:        2 bytes
 39731 ;; Hardware stack levels used:    1
 39732 ;; Hardware stack levels required when called:    4
 39733 ;; This function calls:
 39734 ;;		i1_UARTchar_CONST
 39735 ;; This function is called by:
 39736 ;;		_low_isr
 39737 ;; This function uses a non-reentrant model
 39738 ;;
 39739                           
 39740                           	psect	text108
 39741  00A1B4                     __ptext108:
 39742                           	opt stack 0
 39743  00A1B4                     i1_UARTstring_CONST:
 39744                           	opt stack 17
 39745                           
 39746                           ;UART.c: 240: while(*data != 0)
 39747                           
 39748                           ;incstack = 0
 39749  00A1B4  D00C               	goto	i1l12970
 39750  00A1B6                     i1l12966:
 39751                           
 39752                           ;UART.c: 241: {
 39753                           ;UART.c: 242: UARTchar_CONST(*data);
 39754  00A1B6  C00C  FFF6         	movff	i1UARTstring_CONST@data,tblptrl
 39755  00A1BA  C00D  FFF7         	movff	i1UARTstring_CONST@data+1,tblptrh
 39756  00A1BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 39757  00A1BE  6AF8               	clrf	tblptru,c
 39758  00A1C0                     	endif
 39759  00A1C0                     	if	0	;tblptru may be non-zero
 39760  00A1C0                     	endif
 39761  00A1C0  0008               	tblrd		*
 39762  00A1C2  50F5               	movf	tablat,w,c
 39763  00A1C4  ECF2  F050         	call	i1_UARTchar_CONST
 39764                           
 39765                           ;UART.c: 243: *data++;
 39766  00A1C8  4A0C               	infsnz	i1UARTstring_CONST@data,f,c
 39767  00A1CA  2A0D               	incf	i1UARTstring_CONST@data+1,f,c
 39768  00A1CC  D000               	goto	i1l12970
 39769  00A1CE                     i1l12970:
 39770  00A1CE  C00C  FFF6         	movff	i1UARTstring_CONST@data,tblptrl
 39771  00A1D2  C00D  FFF7         	movff	i1UARTstring_CONST@data+1,tblptrh
 39772  00A1D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 39773  00A1D6  6AF8               	clrf	tblptru,c
 39774  00A1D8                     	endif
 39775  00A1D8                     	if	0	;tblptru may be non-zero
 39776  00A1D8                     	endif
 39777  00A1D8  0008               	tblrd		*
 39778  00A1DA  50F5               	movf	tablat,w,c
 39779  00A1DC  0900               	iorlw	0
 39780  00A1DE  A4D8               	btfss	status,2,c
 39781  00A1E0  D7EA               	goto	i1l12966
 39782  00A1E2  0012               	return		;funcret
 39783  00A1E4                     __end_ofi1_UARTstring_CONST:
 39784                           	opt stack 0
 39785                           pclatu	equ	0xFFB
 39786                           pclath	equ	0xFFA
 39787                           tblptru	equ	0xFF8
 39788                           tblptrh	equ	0xFF7
 39789                           tblptrl	equ	0xFF6
 39790                           tablat	equ	0xFF5
 39791                           prodh	equ	0xFF4
 39792                           prodl	equ	0xFF3
 39793                           intcon	equ	0xFF2
 39794                           intcon2	equ	0xFF1
 39795                           indf0	equ	0xFEF
 39796                           postinc0	equ	0xFEE
 39797                           plusw0	equ	0xFEB
 39798                           fsr0h	equ	0xFEA
 39799                           fsr0l	equ	0xFE9
 39800                           wreg	equ	0xFE8
 39801                           indf1	equ	0xFE7
 39802                           postdec1	equ	0xFE5
 39803                           fsr1h	equ	0xFE2
 39804                           fsr1l	equ	0xFE1
 39805                           bsr	equ	0xFE0
 39806                           indf2	equ	0xFDF
 39807                           postinc2	equ	0xFDE
 39808                           postdec2	equ	0xFDD
 39809                           plusw2	equ	0xFDB
 39810                           fsr2h	equ	0xFDA
 39811                           fsr2l	equ	0xFD9
 39812                           status	equ	0xFD8
 39813                           
 39814 ;; *************** function i1_UARTchar_CONST *****************
 39815 ;; Defined at:
 39816 ;;		line 206 in file "UART.c"
 39817 ;; Parameters:    Size  Location     Type
 39818 ;;  data            1    wreg     const unsigned char 
 39819 ;; Auto vars:     Size  Location     Type
 39820 ;;  data            1    9[COMRAM] const unsigned char 
 39821 ;;  UARTchar_CON    1   10[COMRAM] unsigned char 
 39822 ;; Return value:  Size  Location     Type
 39823 ;;		None               void
 39824 ;; Registers used:
 39825 ;;		wreg, status,2, status,0, cstack
 39826 ;; Tracked objects:
 39827 ;;		On entry : 0/0
 39828 ;;		On exit  : 0/0
 39829 ;;		Unchanged: 0/0
 39830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39832 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39835 ;;Total ram usage:        2 bytes
 39836 ;; Hardware stack levels used:    1
 39837 ;; Hardware stack levels required when called:    3
 39838 ;; This function calls:
 39839 ;;		i1_delayUS
 39840 ;; This function is called by:
 39841 ;;		_low_isr
 39842 ;;		i1_UARTstring_CONST
 39843 ;; This function uses a non-reentrant model
 39844 ;;
 39845                           
 39846                           	psect	text109
 39847  00A1E4                     __ptext109:
 39848                           	opt stack 0
 39849  00A1E4                     i1_UARTchar_CONST:
 39850                           	opt stack 17
 39851                           
 39852                           ;incstack = 0
 39853                           ;i1UARTchar_CONST@data stored from wreg
 39854  00A1E4  6E0A               	movwf	i1UARTchar_CONST@data,c
 39855                           
 39856                           ;UART.c: 208: unsigned char temp = data;
 39857  00A1E6  C00A  F00B         	movff	i1UARTchar_CONST@data,i1UARTchar_CONST@temp
 39858                           
 39859                           ;UART.c: 209: RCSTAbits.CREN = 0;
 39860  00A1EA  98AB               	bcf	4011,4,c	;volatile
 39861                           
 39862                           ;UART.c: 210: if(temp != 0)
 39863  00A1EC  500B               	movf	i1UARTchar_CONST@temp,w,c
 39864  00A1EE  B4D8               	btfsc	status,2,c
 39865  00A1F0  D00F               	goto	i1l743
 39866                           
 39867                           ;UART.c: 211: {
 39868                           ;UART.c: 212: TXREG = temp;
 39869  00A1F2  C00B  FFAD         	movff	i1UARTchar_CONST@temp,4013	;volatile
 39870                           
 39871                           ;UART.c: 213: delayUS(100);
 39872  00A1F6  0E64               	movlw	100
 39873  00A1F8  6E01               	movwf	i1delayUS@US,c
 39874  00A1FA  0E00               	movlw	0
 39875  00A1FC  6E02               	movwf	i1delayUS@US+1,c
 39876  00A1FE  0E00               	movlw	0
 39877  00A200  6E03               	movwf	i1delayUS@US+2,c
 39878  00A202  0E00               	movlw	0
 39879  00A204  6E04               	movwf	i1delayUS@US+3,c
 39880  00A206  ECE6  F04F         	call	i1_delayUS	;wreg free
 39881                           
 39882                           ;UART.c: 214: while(!TXSTAbits.TRMT);
 39883  00A20A  D000               	goto	i1l744
 39884  00A20C                     i1l744:
 39885  00A20C  A2AC               	btfss	4012,1,c	;volatile
 39886  00A20E  D7FE               	goto	i1l744
 39887  00A210                     i1l743:
 39888                           
 39889                           ;UART.c: 215: }
 39890                           ;UART.c: 216: RCSTAbits.CREN = 1;
 39891  00A210  88AB               	bsf	4011,4,c	;volatile
 39892  00A212  0012               	return		;funcret
 39893  00A214                     __end_ofi1_UARTchar_CONST:
 39894                           	opt stack 0
 39895                           pclatu	equ	0xFFB
 39896                           pclath	equ	0xFFA
 39897                           tblptru	equ	0xFF8
 39898                           tblptrh	equ	0xFF7
 39899                           tblptrl	equ	0xFF6
 39900                           tablat	equ	0xFF5
 39901                           prodh	equ	0xFF4
 39902                           prodl	equ	0xFF3
 39903                           intcon	equ	0xFF2
 39904                           intcon2	equ	0xFF1
 39905                           indf0	equ	0xFEF
 39906                           postinc0	equ	0xFEE
 39907                           plusw0	equ	0xFEB
 39908                           fsr0h	equ	0xFEA
 39909                           fsr0l	equ	0xFE9
 39910                           wreg	equ	0xFE8
 39911                           indf1	equ	0xFE7
 39912                           postdec1	equ	0xFE5
 39913                           fsr1h	equ	0xFE2
 39914                           fsr1l	equ	0xFE1
 39915                           bsr	equ	0xFE0
 39916                           indf2	equ	0xFDF
 39917                           postinc2	equ	0xFDE
 39918                           postdec2	equ	0xFDD
 39919                           plusw2	equ	0xFDB
 39920                           fsr2h	equ	0xFDA
 39921                           fsr2l	equ	0xFD9
 39922                           status	equ	0xFD8
 39923                           
 39924 ;; *************** function i1_UARTstring *****************
 39925 ;; Defined at:
 39926 ;;		line 224 in file "UART.c"
 39927 ;; Parameters:    Size  Location     Type
 39928 ;;  data            2   10[COMRAM] PTR unsigned char 
 39929 ;;		 -> UseBluetooth@buf(100), BluetoothInitialSetup@buf(50), ReceivedString(100), 
 39930 ;; Auto vars:     Size  Location     Type
 39931 ;;		None
 39932 ;; Return value:  Size  Location     Type
 39933 ;;		None               void
 39934 ;; Registers used:
 39935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39936 ;; Tracked objects:
 39937 ;;		On entry : 0/0
 39938 ;;		On exit  : 0/0
 39939 ;;		Unchanged: 0/0
 39940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39945 ;;Total ram usage:        2 bytes
 39946 ;; Hardware stack levels used:    1
 39947 ;; Hardware stack levels required when called:    4
 39948 ;; This function calls:
 39949 ;;		i1_UARTchar
 39950 ;; This function is called by:
 39951 ;;		_low_isr
 39952 ;; This function uses a non-reentrant model
 39953 ;;
 39954                           
 39955                           	psect	text110
 39956  00A340                     __ptext110:
 39957                           	opt stack 0
 39958  00A340                     i1_UARTstring:
 39959                           	opt stack 17
 39960                           
 39961                           ;UART.c: 226: while(*data != 0)
 39962                           
 39963                           ;incstack = 0
 39964  00A340  D00A               	goto	i1l12962
 39965  00A342                     i1l12958:
 39966                           
 39967                           ;UART.c: 227: {
 39968                           ;UART.c: 228: UARTchar(*data);
 39969  00A342  C00B  FFD9         	movff	i1UARTstring@data,fsr2l
 39970  00A346  C00C  FFDA         	movff	i1UARTstring@data+1,fsr2h
 39971  00A34A  50DF               	movf	indf2,w,c
 39972  00A34C  EC4D  F051         	call	i1_UARTchar
 39973                           
 39974                           ;UART.c: 229: *data++;
 39975  00A350  4A0B               	infsnz	i1UARTstring@data,f,c
 39976  00A352  2A0C               	incf	i1UARTstring@data+1,f,c
 39977  00A354  D000               	goto	i1l12962
 39978  00A356                     i1l12962:
 39979  00A356  C00B  FFD9         	movff	i1UARTstring@data,fsr2l
 39980  00A35A  C00C  FFDA         	movff	i1UARTstring@data+1,fsr2h
 39981  00A35E  50DF               	movf	indf2,w,c
 39982  00A360  A4D8               	btfss	status,2,c
 39983  00A362  D7EF               	goto	i1l12958
 39984  00A364  0012               	return		;funcret
 39985  00A366                     __end_ofi1_UARTstring:
 39986                           	opt stack 0
 39987                           pclatu	equ	0xFFB
 39988                           pclath	equ	0xFFA
 39989                           tblptru	equ	0xFF8
 39990                           tblptrh	equ	0xFF7
 39991                           tblptrl	equ	0xFF6
 39992                           tablat	equ	0xFF5
 39993                           prodh	equ	0xFF4
 39994                           prodl	equ	0xFF3
 39995                           intcon	equ	0xFF2
 39996                           intcon2	equ	0xFF1
 39997                           indf0	equ	0xFEF
 39998                           postinc0	equ	0xFEE
 39999                           plusw0	equ	0xFEB
 40000                           fsr0h	equ	0xFEA
 40001                           fsr0l	equ	0xFE9
 40002                           wreg	equ	0xFE8
 40003                           indf1	equ	0xFE7
 40004                           postdec1	equ	0xFE5
 40005                           fsr1h	equ	0xFE2
 40006                           fsr1l	equ	0xFE1
 40007                           bsr	equ	0xFE0
 40008                           indf2	equ	0xFDF
 40009                           postinc2	equ	0xFDE
 40010                           postdec2	equ	0xFDD
 40011                           plusw2	equ	0xFDB
 40012                           fsr2h	equ	0xFDA
 40013                           fsr2l	equ	0xFD9
 40014                           status	equ	0xFD8
 40015                           
 40016 ;; *************** function i1_ReadUSART *****************
 40017 ;; Defined at:
 40018 ;;		line 265 in file "UART.c"
 40019 ;; Parameters:    Size  Location     Type
 40020 ;;		None
 40021 ;; Auto vars:     Size  Location     Type
 40022 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 40023 ;; Return value:  Size  Location     Type
 40024 ;;                  1    wreg      unsigned char 
 40025 ;; Registers used:
 40026 ;;		wreg, status,2
 40027 ;; Tracked objects:
 40028 ;;		On entry : 0/0
 40029 ;;		On exit  : 0/0
 40030 ;;		Unchanged: 0/0
 40031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40036 ;;Total ram usage:        1 bytes
 40037 ;; Hardware stack levels used:    1
 40038 ;; Hardware stack levels required when called:    2
 40039 ;; This function calls:
 40040 ;;		Nothing
 40041 ;; This function is called by:
 40042 ;;		_low_isr
 40043 ;; This function uses a non-reentrant model
 40044 ;;
 40045                           
 40046                           	psect	text111
 40047  00A3E0                     __ptext111:
 40048                           	opt stack 0
 40049  00A3E0                     i1_ReadUSART:
 40050                           	opt stack 19
 40051                           
 40052                           ;UART.c: 267: unsigned char data;
 40053                           ;UART.c: 269: if(RCSTAbits.OERR)
 40054                           
 40055                           ;incstack = 0
 40056  00A3E0  A2AB               	btfss	4011,1,c	;volatile
 40057  00A3E2  D004               	goto	i1l765
 40058                           
 40059                           ;UART.c: 270: {
 40060                           ;UART.c: 272: RCSTAbits.CREN = 0;
 40061  00A3E4  98AB               	bcf	4011,4,c	;volatile
 40062                           
 40063                           ;UART.c: 273: RCSTAbits.CREN = 1;
 40064  00A3E6  88AB               	bsf	4011,4,c	;volatile
 40065                           
 40066                           ;UART.c: 274: return 0;
 40067  00A3E8  0E00               	movlw	0
 40068  00A3EA  0012               	return	
 40069  00A3EC                     i1l765:
 40070                           
 40071                           ;UART.c: 275: }
 40072                           ;UART.c: 277: data = RCREG;
 40073  00A3EC  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 40074                           
 40075                           ;UART.c: 278: return (data);
 40076  00A3F0  5001               	movf	i1ReadUSART@data,w,c
 40077  00A3F2  0012               	return	
 40078  00A3F4  0012               	return		;funcret
 40079  00A3F6                     __end_ofi1_ReadUSART:
 40080                           	opt stack 0
 40081                           pclatu	equ	0xFFB
 40082                           pclath	equ	0xFFA
 40083                           tblptru	equ	0xFF8
 40084                           tblptrh	equ	0xFF7
 40085                           tblptrl	equ	0xFF6
 40086                           tablat	equ	0xFF5
 40087                           prodh	equ	0xFF4
 40088                           prodl	equ	0xFF3
 40089                           intcon	equ	0xFF2
 40090                           intcon2	equ	0xFF1
 40091                           indf0	equ	0xFEF
 40092                           postinc0	equ	0xFEE
 40093                           plusw0	equ	0xFEB
 40094                           fsr0h	equ	0xFEA
 40095                           fsr0l	equ	0xFE9
 40096                           wreg	equ	0xFE8
 40097                           indf1	equ	0xFE7
 40098                           postdec1	equ	0xFE5
 40099                           fsr1h	equ	0xFE2
 40100                           fsr1l	equ	0xFE1
 40101                           bsr	equ	0xFE0
 40102                           indf2	equ	0xFDF
 40103                           postinc2	equ	0xFDE
 40104                           postdec2	equ	0xFDD
 40105                           plusw2	equ	0xFDB
 40106                           fsr2h	equ	0xFDA
 40107                           fsr2l	equ	0xFD9
 40108                           status	equ	0xFD8
 40109                           
 40110 ;; *************** function i1_BlueConnected *****************
 40111 ;; Defined at:
 40112 ;;		line 103 in file "Bluetooth.c"
 40113 ;; Parameters:    Size  Location     Type
 40114 ;;		None
 40115 ;; Auto vars:     Size  Location     Type
 40116 ;;		None
 40117 ;; Return value:  Size  Location     Type
 40118 ;;                  1    wreg      unsigned char 
 40119 ;; Registers used:
 40120 ;;		wreg
 40121 ;; Tracked objects:
 40122 ;;		On entry : 0/0
 40123 ;;		On exit  : 0/0
 40124 ;;		Unchanged: 0/0
 40125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40130 ;;Total ram usage:        0 bytes
 40131 ;; Hardware stack levels used:    1
 40132 ;; Hardware stack levels required when called:    2
 40133 ;; This function calls:
 40134 ;;		Nothing
 40135 ;; This function is called by:
 40136 ;;		_low_isr
 40137 ;; This function uses a non-reentrant model
 40138 ;;
 40139                           
 40140                           	psect	text112
 40141  00A4D8                     __ptext112:
 40142                           	opt stack 0
 40143  00A4D8                     i1_BlueConnected:
 40144                           	opt stack 19
 40145                           
 40146                           ;Bluetooth.c: 106: if((PORTA & 0x02) == 0x02)
 40147                           
 40148                           ;incstack = 0
 40149  00A4D8  A280               	btfss	3968,1,c	;volatile
 40150  00A4DA  D002               	goto	i1l13004
 40151                           
 40152                           ;Bluetooth.c: 107: {
 40153                           ;Bluetooth.c: 108: return 1;
 40154  00A4DC  0E01               	movlw	1
 40155  00A4DE  0012               	return	
 40156  00A4E0                     i1l13004:
 40157                           
 40158                           ;Bluetooth.c: 109: }
 40159                           ;Bluetooth.c: 110: return 0;
 40160  00A4E0  0E00               	movlw	0
 40161  00A4E2  0012               	return	
 40162  00A4E4  0012               	return		;funcret
 40163  00A4E6                     __end_ofi1_BlueConnected:
 40164                           	opt stack 0
 40165                           pclatu	equ	0xFFB
 40166                           pclath	equ	0xFFA
 40167                           tblptru	equ	0xFF8
 40168                           tblptrh	equ	0xFF7
 40169                           tblptrl	equ	0xFF6
 40170                           tablat	equ	0xFF5
 40171                           prodh	equ	0xFF4
 40172                           prodl	equ	0xFF3
 40173                           intcon	equ	0xFF2
 40174                           intcon2	equ	0xFF1
 40175                           indf0	equ	0xFEF
 40176                           postinc0	equ	0xFEE
 40177                           plusw0	equ	0xFEB
 40178                           fsr0h	equ	0xFEA
 40179                           fsr0l	equ	0xFE9
 40180                           wreg	equ	0xFE8
 40181                           indf1	equ	0xFE7
 40182                           postdec1	equ	0xFE5
 40183                           fsr1h	equ	0xFE2
 40184                           fsr1l	equ	0xFE1
 40185                           bsr	equ	0xFE0
 40186                           indf2	equ	0xFDF
 40187                           postinc2	equ	0xFDE
 40188                           postdec2	equ	0xFDD
 40189                           plusw2	equ	0xFDB
 40190                           fsr2h	equ	0xFDA
 40191                           fsr2l	equ	0xFD9
 40192                           status	equ	0xFD8
 40193                           
 40194 ;; *************** function _IsCharacter *****************
 40195 ;; Defined at:
 40196 ;;		line 113 in file "MISC.c"
 40197 ;; Parameters:    Size  Location     Type
 40198 ;;  data            1    wreg     unsigned char 
 40199 ;; Auto vars:     Size  Location     Type
 40200 ;;  data            1    0[COMRAM] unsigned char 
 40201 ;; Return value:  Size  Location     Type
 40202 ;;                  1    wreg      unsigned char 
 40203 ;; Registers used:
 40204 ;;		wreg, status,2, status,0
 40205 ;; Tracked objects:
 40206 ;;		On entry : 0/0
 40207 ;;		On exit  : 0/0
 40208 ;;		Unchanged: 0/0
 40209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40213 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40214 ;;Total ram usage:        1 bytes
 40215 ;; Hardware stack levels used:    1
 40216 ;; Hardware stack levels required when called:    2
 40217 ;; This function calls:
 40218 ;;		Nothing
 40219 ;; This function is called by:
 40220 ;;		_low_isr
 40221 ;; This function uses a non-reentrant model
 40222 ;;
 40223                           
 40224                           	psect	text113
 40225  00A39C                     __ptext113:
 40226                           	opt stack 0
 40227  00A39C                     _IsCharacter:
 40228                           	opt stack 19
 40229                           
 40230                           ;incstack = 0
 40231                           ;IsCharacter@data stored from wreg
 40232  00A39C  6E01               	movwf	IsCharacter@data,c
 40233                           
 40234                           ;MISC.c: 115: if(data >= 32 && data <= 126)
 40235  00A39E  0E1F               	movlw	31
 40236  00A3A0  6401               	cpfsgt	IsCharacter@data,c
 40237  00A3A2  D005               	goto	i1l12774
 40238  00A3A4  0E7F               	movlw	127
 40239  00A3A6  6001               	cpfslt	IsCharacter@data,c
 40240  00A3A8  D002               	goto	i1l12774
 40241                           
 40242                           ;MISC.c: 116: {
 40243                           ;MISC.c: 117: return 1;
 40244  00A3AA  0E01               	movlw	1
 40245  00A3AC  0012               	return	
 40246  00A3AE                     i1l12774:
 40247                           
 40248                           ;MISC.c: 118: }
 40249                           ;MISC.c: 119: return 0;
 40250  00A3AE  0E00               	movlw	0
 40251  00A3B0  0012               	return	
 40252  00A3B2  0012               	return		;funcret
 40253  00A3B4                     __end_of_IsCharacter:
 40254                           	opt stack 0
 40255                           pclatu	equ	0xFFB
 40256                           pclath	equ	0xFFA
 40257                           tblptru	equ	0xFF8
 40258                           tblptrh	equ	0xFF7
 40259                           tblptrl	equ	0xFF6
 40260                           tablat	equ	0xFF5
 40261                           prodh	equ	0xFF4
 40262                           prodl	equ	0xFF3
 40263                           intcon	equ	0xFF2
 40264                           intcon2	equ	0xFF1
 40265                           indf0	equ	0xFEF
 40266                           postinc0	equ	0xFEE
 40267                           plusw0	equ	0xFEB
 40268                           fsr0h	equ	0xFEA
 40269                           fsr0l	equ	0xFE9
 40270                           wreg	equ	0xFE8
 40271                           indf1	equ	0xFE7
 40272                           postdec1	equ	0xFE5
 40273                           fsr1h	equ	0xFE2
 40274                           fsr1l	equ	0xFE1
 40275                           bsr	equ	0xFE0
 40276                           indf2	equ	0xFDF
 40277                           postinc2	equ	0xFDE
 40278                           postdec2	equ	0xFDD
 40279                           plusw2	equ	0xFDB
 40280                           fsr2h	equ	0xFDA
 40281                           fsr2l	equ	0xFD9
 40282                           status	equ	0xFD8
 40283                           
 40284 ;; *************** function _EraseScreen *****************
 40285 ;; Defined at:
 40286 ;;		line 363 in file "UART.c"
 40287 ;; Parameters:    Size  Location     Type
 40288 ;;  characters      1    wreg     unsigned char 
 40289 ;; Auto vars:     Size  Location     Type
 40290 ;;  characters      1   10[COMRAM] unsigned char 
 40291 ;;  i               1   11[COMRAM] unsigned char 
 40292 ;; Return value:  Size  Location     Type
 40293 ;;		None               void
 40294 ;; Registers used:
 40295 ;;		wreg, status,2, status,0, cstack
 40296 ;; Tracked objects:
 40297 ;;		On entry : 0/0
 40298 ;;		On exit  : 0/0
 40299 ;;		Unchanged: 0/0
 40300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40305 ;;Total ram usage:        2 bytes
 40306 ;; Hardware stack levels used:    1
 40307 ;; Hardware stack levels required when called:    4
 40308 ;; This function calls:
 40309 ;;		i1_UARTchar
 40310 ;; This function is called by:
 40311 ;;		_low_isr
 40312 ;; This function uses a non-reentrant model
 40313 ;;
 40314                           
 40315                           	psect	text114
 40316  00A318                     __ptext114:
 40317                           	opt stack 0
 40318  00A318                     _EraseScreen:
 40319                           	opt stack 17
 40320                           
 40321                           ;incstack = 0
 40322                           ;EraseScreen@characters stored from wreg
 40323  00A318  6E0B               	movwf	EraseScreen@characters,c
 40324                           
 40325                           ;UART.c: 365: unsigned char i;
 40326                           ;UART.c: 367: UARTchar('\r');
 40327  00A31A  0E0D               	movlw	13
 40328  00A31C  EC4D  F051         	call	i1_UARTchar
 40329                           
 40330                           ;UART.c: 368: for (i = 0; i < characters; i++)
 40331  00A320  0E00               	movlw	0
 40332  00A322  6E0C               	movwf	EraseScreen@i,c
 40333  00A324  D005               	goto	i1l12786
 40334  00A326                     i1l12782:
 40335                           
 40336                           ;UART.c: 369: {
 40337                           ;UART.c: 370: UARTchar(' ');
 40338  00A326  0E20               	movlw	32
 40339  00A328  EC4D  F051         	call	i1_UARTchar
 40340  00A32C  2A0C               	incf	EraseScreen@i,f,c
 40341  00A32E  D000               	goto	i1l12786
 40342  00A330                     i1l12786:
 40343  00A330  500B               	movf	EraseScreen@characters,w,c
 40344  00A332  5C0C               	subwf	EraseScreen@i,w,c
 40345  00A334  A0D8               	btfss	status,0,c
 40346  00A336  D7F7               	goto	i1l12782
 40347                           
 40348                           ;UART.c: 371: }
 40349                           ;UART.c: 372: UARTchar('\r');
 40350  00A338  0E0D               	movlw	13
 40351  00A33A  EC4D  F051         	call	i1_UARTchar
 40352  00A33E  0012               	return		;funcret
 40353  00A340                     __end_of_EraseScreen:
 40354                           	opt stack 0
 40355                           pclatu	equ	0xFFB
 40356                           pclath	equ	0xFFA
 40357                           tblptru	equ	0xFF8
 40358                           tblptrh	equ	0xFF7
 40359                           tblptrl	equ	0xFF6
 40360                           tablat	equ	0xFF5
 40361                           prodh	equ	0xFF4
 40362                           prodl	equ	0xFF3
 40363                           intcon	equ	0xFF2
 40364                           intcon2	equ	0xFF1
 40365                           indf0	equ	0xFEF
 40366                           postinc0	equ	0xFEE
 40367                           plusw0	equ	0xFEB
 40368                           fsr0h	equ	0xFEA
 40369                           fsr0l	equ	0xFE9
 40370                           wreg	equ	0xFE8
 40371                           indf1	equ	0xFE7
 40372                           postdec1	equ	0xFE5
 40373                           fsr1h	equ	0xFE2
 40374                           fsr1l	equ	0xFE1
 40375                           bsr	equ	0xFE0
 40376                           indf2	equ	0xFDF
 40377                           postinc2	equ	0xFDE
 40378                           postdec2	equ	0xFDD
 40379                           plusw2	equ	0xFDB
 40380                           fsr2h	equ	0xFDA
 40381                           fsr2l	equ	0xFD9
 40382                           status	equ	0xFD8
 40383                           
 40384 ;; *************** function i1_UARTchar *****************
 40385 ;; Defined at:
 40386 ;;		line 189 in file "UART.c"
 40387 ;; Parameters:    Size  Location     Type
 40388 ;;  data            1    wreg     unsigned char 
 40389 ;; Auto vars:     Size  Location     Type
 40390 ;;  data            1    9[COMRAM] unsigned char 
 40391 ;; Return value:  Size  Location     Type
 40392 ;;		None               void
 40393 ;; Registers used:
 40394 ;;		wreg, status,2, status,0, cstack
 40395 ;; Tracked objects:
 40396 ;;		On entry : 0/0
 40397 ;;		On exit  : 0/0
 40398 ;;		Unchanged: 0/0
 40399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40404 ;;Total ram usage:        1 bytes
 40405 ;; Hardware stack levels used:    1
 40406 ;; Hardware stack levels required when called:    3
 40407 ;; This function calls:
 40408 ;;		i1_delayUS
 40409 ;; This function is called by:
 40410 ;;		_EraseScreen
 40411 ;;		_low_isr
 40412 ;;		i1_UARTstring
 40413 ;; This function uses a non-reentrant model
 40414 ;;
 40415                           
 40416                           	psect	text115
 40417  00A29A                     __ptext115:
 40418                           	opt stack 0
 40419  00A29A                     i1_UARTchar:
 40420                           	opt stack 17
 40421                           
 40422                           ;incstack = 0
 40423                           ;i1UARTchar@data stored from wreg
 40424  00A29A  6E0A               	movwf	i1UARTchar@data,c
 40425                           
 40426                           ;UART.c: 191: RCSTAbits.CREN = 0;
 40427  00A29C  98AB               	bcf	4011,4,c	;volatile
 40428                           
 40429                           ;UART.c: 192: if(data != 0)
 40430  00A29E  500A               	movf	i1UARTchar@data,w,c
 40431  00A2A0  B4D8               	btfsc	status,2,c
 40432  00A2A2  D00F               	goto	i1l736
 40433                           
 40434                           ;UART.c: 193: {
 40435                           ;UART.c: 194: TXREG = data;
 40436  00A2A4  C00A  FFAD         	movff	i1UARTchar@data,4013	;volatile
 40437                           
 40438                           ;UART.c: 195: delayUS(100);
 40439  00A2A8  0E64               	movlw	100
 40440  00A2AA  6E01               	movwf	i1delayUS@US,c
 40441  00A2AC  0E00               	movlw	0
 40442  00A2AE  6E02               	movwf	i1delayUS@US+1,c
 40443  00A2B0  0E00               	movlw	0
 40444  00A2B2  6E03               	movwf	i1delayUS@US+2,c
 40445  00A2B4  0E00               	movlw	0
 40446  00A2B6  6E04               	movwf	i1delayUS@US+3,c
 40447  00A2B8  ECE6  F04F         	call	i1_delayUS	;wreg free
 40448                           
 40449                           ;UART.c: 196: while(!TXSTAbits.TRMT);
 40450  00A2BC  D000               	goto	i1l737
 40451  00A2BE                     i1l737:
 40452  00A2BE  A2AC               	btfss	4012,1,c	;volatile
 40453  00A2C0  D7FE               	goto	i1l737
 40454  00A2C2                     i1l736:
 40455                           
 40456                           ;UART.c: 197: }
 40457                           ;UART.c: 198: RCSTAbits.CREN = 1;
 40458  00A2C2  88AB               	bsf	4011,4,c	;volatile
 40459  00A2C4  0012               	return		;funcret
 40460  00A2C6                     __end_ofi1_UARTchar:
 40461                           	opt stack 0
 40462                           pclatu	equ	0xFFB
 40463                           pclath	equ	0xFFA
 40464                           tblptru	equ	0xFF8
 40465                           tblptrh	equ	0xFF7
 40466                           tblptrl	equ	0xFF6
 40467                           tablat	equ	0xFF5
 40468                           prodh	equ	0xFF4
 40469                           prodl	equ	0xFF3
 40470                           intcon	equ	0xFF2
 40471                           intcon2	equ	0xFF1
 40472                           indf0	equ	0xFEF
 40473                           postinc0	equ	0xFEE
 40474                           plusw0	equ	0xFEB
 40475                           fsr0h	equ	0xFEA
 40476                           fsr0l	equ	0xFE9
 40477                           wreg	equ	0xFE8
 40478                           indf1	equ	0xFE7
 40479                           postdec1	equ	0xFE5
 40480                           fsr1h	equ	0xFE2
 40481                           fsr1l	equ	0xFE1
 40482                           bsr	equ	0xFE0
 40483                           indf2	equ	0xFDF
 40484                           postinc2	equ	0xFDE
 40485                           postdec2	equ	0xFDD
 40486                           plusw2	equ	0xFDB
 40487                           fsr2h	equ	0xFDA
 40488                           fsr2l	equ	0xFD9
 40489                           status	equ	0xFD8
 40490                           
 40491 ;; *************** function i1_delayUS *****************
 40492 ;; Defined at:
 40493 ;;		line 51 in file "MISC.c"
 40494 ;; Parameters:    Size  Location     Type
 40495 ;;  US              4    0[COMRAM] long 
 40496 ;; Auto vars:     Size  Location     Type
 40497 ;;  delayUS         4    5[COMRAM] long 
 40498 ;; Return value:  Size  Location     Type
 40499 ;;		None               void
 40500 ;; Registers used:
 40501 ;;		wreg, status,2, status,0
 40502 ;; Tracked objects:
 40503 ;;		On entry : 0/0
 40504 ;;		On exit  : 0/0
 40505 ;;		Unchanged: 0/0
 40506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40508 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40510 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40511 ;;Total ram usage:        9 bytes
 40512 ;; Hardware stack levels used:    1
 40513 ;; Hardware stack levels required when called:    2
 40514 ;; This function calls:
 40515 ;;		Nothing
 40516 ;; This function is called by:
 40517 ;;		i1_UARTchar
 40518 ;;		i1_UARTchar_CONST
 40519 ;; This function uses a non-reentrant model
 40520 ;;
 40521                           
 40522                           	psect	text116
 40523  009FCC                     __ptext116:
 40524                           	opt stack 0
 40525  009FCC                     i1_delayUS:
 40526                           	opt stack 17
 40527                           
 40528                           ;MISC.c: 53: long i;
 40529                           ;MISC.c: 54: for(i=0; i<US; i += 2)
 40530                           
 40531                           ;incstack = 0
 40532  009FCC  0E00               	movlw	0
 40533  009FCE  6E06               	movwf	i1delayUS@i,c
 40534  009FD0  0E00               	movlw	0
 40535  009FD2  6E07               	movwf	i1delayUS@i+1,c
 40536  009FD4  0E00               	movlw	0
 40537  009FD6  6E08               	movwf	i1delayUS@i+2,c
 40538  009FD8  0E00               	movlw	0
 40539  009FDA  6E09               	movwf	i1delayUS@i+3,c
 40540  009FDC  D007               	goto	i1l323
 40541  009FDE                     i1l324:
 40542                           
 40543                           ;MISC.c: 55: {
 40544                           ;MISC.c: 56: __nop();
 40545  009FDE  F000               	nop	
 40546  009FE0  0E02               	movlw	2
 40547  009FE2  2606               	addwf	i1delayUS@i,f,c
 40548  009FE4  0E00               	movlw	0
 40549  009FE6  2207               	addwfc	i1delayUS@i+1,f,c
 40550  009FE8  2208               	addwfc	i1delayUS@i+2,f,c
 40551  009FEA  2209               	addwfc	i1delayUS@i+3,f,c
 40552  009FEC                     i1l323:
 40553  009FEC  5001               	movf	i1delayUS@US,w,c
 40554  009FEE  5C06               	subwf	i1delayUS@i,w,c
 40555  009FF0  5002               	movf	i1delayUS@US+1,w,c
 40556  009FF2  5807               	subwfb	i1delayUS@i+1,w,c
 40557  009FF4  5003               	movf	i1delayUS@US+2,w,c
 40558  009FF6  5808               	subwfb	i1delayUS@i+2,w,c
 40559  009FF8  5009               	movf	i1delayUS@i+3,w,c
 40560  009FFA  0A80               	xorlw	128
 40561  009FFC  6E05               	movwf	??i1_delayUS& (0+255),c
 40562  009FFE  5004               	movf	i1delayUS@US+3,w,c
 40563  00A000  0A80               	xorlw	128
 40564  00A002  5805               	subwfb	??i1_delayUS& (0+255),w,c
 40565  00A004  A0D8               	btfss	status,0,c
 40566  00A006  D7EB               	goto	i1l324
 40567  00A008  0012               	return		;funcret
 40568  00A00A                     __end_ofi1_delayUS:
 40569                           	opt stack 0
 40570                           pclatu	equ	0xFFB
 40571                           pclath	equ	0xFFA
 40572                           tblptru	equ	0xFF8
 40573                           tblptrh	equ	0xFF7
 40574                           tblptrl	equ	0xFF6
 40575                           tablat	equ	0xFF5
 40576                           prodh	equ	0xFF4
 40577                           prodl	equ	0xFF3
 40578                           intcon	equ	0xFF2
 40579                           intcon2	equ	0xFF1
 40580                           indf0	equ	0xFEF
 40581                           postinc0	equ	0xFEE
 40582                           plusw0	equ	0xFEB
 40583                           fsr0h	equ	0xFEA
 40584                           fsr0l	equ	0xFE9
 40585                           wreg	equ	0xFE8
 40586                           indf1	equ	0xFE7
 40587                           postdec1	equ	0xFE5
 40588                           fsr1h	equ	0xFE2
 40589                           fsr1l	equ	0xFE1
 40590                           bsr	equ	0xFE0
 40591                           indf2	equ	0xFDF
 40592                           postinc2	equ	0xFDE
 40593                           postdec2	equ	0xFDD
 40594                           plusw2	equ	0xFDB
 40595                           fsr2h	equ	0xFDA
 40596                           fsr2l	equ	0xFD9
 40597                           status	equ	0xFD8
 40598                           
 40599 ;; *************** function _high_isr *****************
 40600 ;; Defined at:
 40601 ;;		line 59 in file "interrupts.c"
 40602 ;; Parameters:    Size  Location     Type
 40603 ;;		None
 40604 ;; Auto vars:     Size  Location     Type
 40605 ;;  Time0           2    1[BANK0 ] unsigned int 
 40606 ;;  IRpin           1    0[BANK0 ] unsigned char 
 40607 ;; Return value:  Size  Location     Type
 40608 ;;		None               void
 40609 ;; Registers used:
 40610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40611 ;; Tracked objects:
 40612 ;;		On entry : 0/0
 40613 ;;		On exit  : 0/0
 40614 ;;		Unchanged: 0/0
 40615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40617 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40618 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40619 ;;      Totals:        18       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40620 ;;Total ram usage:       21 bytes
 40621 ;; Hardware stack levels used:    1
 40622 ;; Hardware stack levels required when called:    1
 40623 ;; This function calls:
 40624 ;;		_IRrawToNEC
 40625 ;;		_ResetTimer3
 40626 ;;		_SetTimer0
 40627 ;;		i2_ReadIRpin
 40628 ;;		i2_ResetTimer0
 40629 ;;		i2_cleanBuffer16bit
 40630 ;; This function is called by:
 40631 ;;		Interrupt level 2
 40632 ;; This function uses a non-reentrant model
 40633 ;;
 40634                           
 40635                           	psect	intcode
 40636  000008                     __pintcode:
 40637                           	opt stack 0
 40638  000008                     _high_isr:
 40639                           	opt stack 17
 40640                           
 40641                           ;incstack = 0
 40642  000008  CFFA F032          	movff	pclath,??_high_isr+4
 40643  00000C  CFFB F033          	movff	pclatu,??_high_isr+5
 40644  000010  CFE9 F034          	movff	fsr0l,??_high_isr+6
 40645  000014  EFE4  F023         	goto	int_func
 40646                           pclatu	equ	0xFFB
 40647                           pclath	equ	0xFFA
 40648                           tblptru	equ	0xFF8
 40649                           tblptrh	equ	0xFF7
 40650                           tblptrl	equ	0xFF6
 40651                           tablat	equ	0xFF5
 40652                           prodh	equ	0xFF4
 40653                           prodl	equ	0xFF3
 40654                           intcon	equ	0xFF2
 40655                           intcon2	equ	0xFF1
 40656                           indf0	equ	0xFEF
 40657                           postinc0	equ	0xFEE
 40658                           plusw0	equ	0xFEB
 40659                           fsr0h	equ	0xFEA
 40660                           fsr0l	equ	0xFE9
 40661                           wreg	equ	0xFE8
 40662                           indf1	equ	0xFE7
 40663                           postdec1	equ	0xFE5
 40664                           fsr1h	equ	0xFE2
 40665                           fsr1l	equ	0xFE1
 40666                           bsr	equ	0xFE0
 40667                           indf2	equ	0xFDF
 40668                           postinc2	equ	0xFDE
 40669                           postdec2	equ	0xFDD
 40670                           plusw2	equ	0xFDB
 40671                           fsr2h	equ	0xFDA
 40672                           fsr2l	equ	0xFD9
 40673                           status	equ	0xFD8
 40674                           
 40675                           	psect	intcode_body
 40676  0047C8                     __pintcode_body:
 40677                           	opt stack 17
 40678  0047C8                     int_func:
 40679                           	opt stack 17
 40680  0047C8  CFEA F035          	movff	fsr0h,??_high_isr+7
 40681  0047CC  CFE1 F036          	movff	fsr1l,??_high_isr+8
 40682  0047D0  CFE2 F037          	movff	fsr1h,??_high_isr+9
 40683  0047D4  CFD9 F038          	movff	fsr2l,??_high_isr+10
 40684  0047D8  CFDA F039          	movff	fsr2h,??_high_isr+11
 40685  0047DC  CFF3 F03A          	movff	prodl,??_high_isr+12
 40686  0047E0  CFF4 F03B          	movff	prodh,??_high_isr+13
 40687  0047E4  CFF6 F03C          	movff	tblptrl,??_high_isr+14
 40688  0047E8  CFF7 F03D          	movff	tblptrh,??_high_isr+15
 40689  0047EC  CFF8 F03E          	movff	tblptru,??_high_isr+16
 40690  0047F0  CFF5 F03F          	movff	tablat,??_high_isr+17
 40691                           
 40692                           ;interrupts.c: 68: unsigned char IRpin;
 40693                           ;interrupts.c: 69: unsigned int Time0;
 40694                           ;interrupts.c: 71: INTCONbits.GIE = 0;
 40695  0047F4  9EF2               	bcf	intcon,7,c	;volatile
 40696                           
 40697                           ;interrupts.c: 73: if(INTCONbits.RBIF)
 40698  0047F6  A0F2               	btfss	intcon,0,c	;volatile
 40699  0047F8  D08B               	goto	i2l1331
 40700                           
 40701                           ;interrupts.c: 74: {
 40702                           ;interrupts.c: 75: __nop();
 40703  0047FA  F000               	nop	
 40704                           
 40705                           ;interrupts.c: 76: __nop();
 40706  0047FC  F000               	nop	
 40707                           
 40708                           ;interrupts.c: 77: IRtimeout = 0;
 40709  0047FE  0E00               	movlw	0
 40710  004800  0103               	movlb	3	; () banked
 40711  004802  6FF8               	movwf	_IRtimeout& (0+255),b
 40712  004804  0E00               	movlw	0
 40713  004806  6FF9               	movwf	(_IRtimeout+1)& (0+255),b
 40714  004808  0E00               	movlw	0
 40715  00480A  6FFA               	movwf	(_IRtimeout+2)& (0+255),b
 40716  00480C  0E00               	movlw	0
 40717  00480E  6FFB               	movwf	(_IRtimeout+3)& (0+255),b
 40718                           
 40719                           ; BSR set to: 3
 40720                           ;interrupts.c: 78: IRpin = ReadIRpin();
 40721  004810  EC73  F052         	call	i2_ReadIRpin	;wreg free
 40722  004814  0100               	movlb	0	; () banked
 40723  004816  6F60               	movwf	high_isr@IRpin& (0+255),b
 40724                           
 40725                           ; BSR set to: 0
 40726                           ;interrupts.c: 79: if(IRpin != IRpinOLD)
 40727  004818  504C               	movf	_IRpinOLD,w,c
 40728  00481A  0100               	movlb	0	; () banked
 40729  00481C  1960               	xorwf	high_isr@IRpin& (0+255),w,b
 40730  00481E  B4D8               	btfsc	status,2,c
 40731  004820  D071               	goto	i2l1332
 40732                           
 40733                           ; BSR set to: 0
 40734                           ;interrupts.c: 80: {
 40735                           ;interrupts.c: 81: (T0CONbits.TMR0ON = 1);
 40736  004822  8ED5               	bsf	4053,7,c	;volatile
 40737                           
 40738                           ;interrupts.c: 82: (INTCONbits.TMR0IE = 1);
 40739  004824  8AF2               	bsf	intcon,5,c	;volatile
 40740                           
 40741                           ; BSR set to: 0
 40742                           ;interrupts.c: 83: ReceivingIR = 19;
 40743  004826  0E13               	movlw	19
 40744  004828  6E5E               	movwf	_ReceivingIR,c	;volatile
 40745                           
 40746                           ;interrupts.c: 84: IR_New_Code = 0;
 40747  00482A  0E00               	movlw	0
 40748  00482C  0100               	movlb	0	; () banked
 40749  00482E  6FFD               	movwf	_IR_New_Code& (0+255),b
 40750                           
 40751                           ; BSR set to: 0
 40752                           ;interrupts.c: 85: Time0 = TMR0L;
 40753  004830  CFD6 F061          	movff	4054,high_isr@Time0	;volatile
 40754  004834  0100               	movlb	0	; () banked
 40755  004836  6B62               	clrf	(high_isr@Time0+1)& (0+255),b
 40756                           
 40757                           ;interrupts.c: 86: Time0 += (TMR0H << 8);
 40758  004838  50D7               	movf	4055,w,c	;volatile
 40759  00483A  0100               	movlb	0	; () banked
 40760  00483C  2762               	addwf	(high_isr@Time0+1)& (0+255),f,b
 40761                           
 40762                           ; BSR set to: 0
 40763                           ;interrupts.c: 87: if(IRrawCodeNum < 100)
 40764  00483E  0E64               	movlw	100
 40765  004840  0100               	movlb	0	; () banked
 40766  004842  61F8               	cpfslt	_IRrawCodeNum& (0+255),b
 40767  004844  D05A               	goto	i2l1333
 40768                           
 40769                           ; BSR set to: 0
 40770                           ;interrupts.c: 88: {
 40771                           ;interrupts.c: 89: if((IRrawCodeNum > 0) && (IRrawCodeNum <= 100))
 40772  004846  0100               	movlb	0	; () banked
 40773  004848  51F8               	movf	_IRrawCodeNum& (0+255),w,b
 40774  00484A  B4D8               	btfsc	status,2,c
 40775  00484C  D04C               	goto	i2l13274
 40776                           
 40777                           ; BSR set to: 0
 40778  00484E  0E65               	movlw	101
 40779  004850  0100               	movlb	0	; () banked
 40780  004852  61F8               	cpfslt	_IRrawCodeNum& (0+255),b
 40781  004854  D048               	goto	i2l13274
 40782                           
 40783                           ; BSR set to: 0
 40784                           ;interrupts.c: 90: {
 40785                           ;interrupts.c: 91: IRRawCode[IRrawCodeNum - 1] = Time0;
 40786  004856  0EFE               	movlw	254
 40787  004858  6E2E               	movwf	??_high_isr& (0+255),c
 40788  00485A  0EFF               	movlw	255
 40789  00485C  6E2F               	movwf	(??_high_isr+1)& (0+255),c
 40790  00485E  0100               	movlb	0	; () banked
 40791  004860  51F8               	movf	_IRrawCodeNum& (0+255),w,b
 40792  004862  6E30               	movwf	(??_high_isr+2)& (0+255),c
 40793  004864  6A31               	clrf	(??_high_isr+3)& (0+255),c
 40794  004866  90D8               	bcf	status,0,c
 40795  004868  3630               	rlcf	??_high_isr+2,f,c
 40796  00486A  3631               	rlcf	??_high_isr+3,f,c
 40797  00486C  502E               	movf	??_high_isr,w,c
 40798  00486E  2630               	addwf	??_high_isr+2,f,c
 40799  004870  502F               	movf	??_high_isr+1,w,c
 40800  004872  2231               	addwfc	??_high_isr+3,f,c
 40801  004874  0E00               	movlw	low _IRRawCode
 40802  004876  2430               	addwf	??_high_isr+2,w,c
 40803  004878  6ED9               	movwf	fsr2l,c
 40804  00487A  0E05               	movlw	high _IRRawCode
 40805  00487C  2031               	addwfc	??_high_isr+3,w,c
 40806  00487E  6EDA               	movwf	fsr2h,c
 40807  004880  C061  FFDE         	movff	high_isr@Time0,postinc2
 40808  004884  C062  FFDD         	movff	high_isr@Time0+1,postdec2
 40809                           
 40810                           ; BSR set to: 0
 40811                           ;interrupts.c: 92: if((Time0 <= 21000 && Time0 >= 19000))
 40812  004888  0E09               	movlw	9
 40813  00488A  0100               	movlb	0	; () banked
 40814  00488C  5D61               	subwf	high_isr@Time0& (0+255),w,b
 40815  00488E  0E52               	movlw	82
 40816  004890  0100               	movlb	0	; () banked
 40817  004892  5962               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 40818  004894  B0D8               	btfsc	status,0,c
 40819  004896  D00C               	goto	i2l13264
 40820                           
 40821                           ; BSR set to: 0
 40822  004898  0E38               	movlw	56
 40823  00489A  0100               	movlb	0	; () banked
 40824  00489C  5D61               	subwf	high_isr@Time0& (0+255),w,b
 40825  00489E  0E4A               	movlw	74
 40826  0048A0  0100               	movlb	0	; () banked
 40827  0048A2  5962               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 40828  0048A4  A0D8               	btfss	status,0,c
 40829  0048A6  D004               	goto	i2l13264
 40830                           
 40831                           ; BSR set to: 0
 40832                           ;interrupts.c: 93: {
 40833                           ;interrupts.c: 95: (IOCBbits.IOCB4 = 0);
 40834  0048A8  987D               	bcf	3965,4,c	;volatile
 40835                           
 40836                           ;interrupts.c: 96: INTCONbits.RBIE = 0;
 40837  0048AA  96F2               	bcf	intcon,3,c	;volatile
 40838                           
 40839                           ;interrupts.c: 98: INTCONbits.TMR0IF = 1;
 40840  0048AC  84F2               	bsf	intcon,2,c	;volatile
 40841                           
 40842                           ;interrupts.c: 99: }
 40843  0048AE  D01E               	goto	i2l13276
 40844  0048B0                     i2l13264:
 40845                           
 40846                           ; BSR set to: 0
 40847                           ;interrupts.c: 100: else if(Time0 <= 50000 && Time0 >= 45000)
 40848  0048B0  0E51               	movlw	81
 40849  0048B2  0100               	movlb	0	; () banked
 40850  0048B4  5D61               	subwf	high_isr@Time0& (0+255),w,b
 40851  0048B6  0EC3               	movlw	195
 40852  0048B8  0100               	movlb	0	; () banked
 40853  0048BA  5962               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 40854  0048BC  B0D8               	btfsc	status,0,c
 40855  0048BE  D010               	goto	i2l13272
 40856                           
 40857                           ; BSR set to: 0
 40858  0048C0  0EC8               	movlw	200
 40859  0048C2  0100               	movlb	0	; () banked
 40860  0048C4  5D61               	subwf	high_isr@Time0& (0+255),w,b
 40861  0048C6  0EAF               	movlw	175
 40862  0048C8  0100               	movlb	0	; () banked
 40863  0048CA  5962               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 40864  0048CC  A0D8               	btfss	status,0,c
 40865  0048CE  D008               	goto	i2l13272
 40866                           
 40867                           ; BSR set to: 0
 40868                           ;interrupts.c: 101: {
 40869                           ;interrupts.c: 103: (IOCBbits.IOCB4 = 0);
 40870  0048D0  987D               	bcf	3965,4,c	;volatile
 40871                           
 40872                           ;interrupts.c: 104: INTCONbits.RBIE = 0;
 40873  0048D2  96F2               	bcf	intcon,3,c	;volatile
 40874                           
 40875                           ; BSR set to: 0
 40876                           ;interrupts.c: 106: SetTimer0(0x8FFF);
 40877  0048D4  0E8F               	movlw	143
 40878  0048D6  6E21               	movwf	SetTimer0@temp+1,c
 40879  0048D8  6820               	setf	SetTimer0@temp,c
 40880  0048DA  EC8E  F052         	call	_SetTimer0	;wreg free
 40881                           
 40882                           ;interrupts.c: 107: }
 40883  0048DE  D006               	goto	i2l13276
 40884  0048E0                     i2l13272:
 40885                           
 40886                           ;interrupts.c: 108: else
 40887                           ;interrupts.c: 109: {
 40888                           ;interrupts.c: 110: ResetTimer0();
 40889  0048E0  EC89  F052         	call	i2_ResetTimer0	;wreg free
 40890                           
 40891                           ;interrupts.c: 111: }
 40892                           ;interrupts.c: 112: }
 40893  0048E4  D003               	goto	i2l13276
 40894  0048E6                     i2l13274:
 40895                           
 40896                           ;interrupts.c: 113: else
 40897                           ;interrupts.c: 114: {
 40898                           ;interrupts.c: 115: ResetTimer0();
 40899  0048E6  EC89  F052         	call	i2_ResetTimer0	;wreg free
 40900  0048EA  D000               	goto	i2l13276
 40901  0048EC                     i2l13276:
 40902                           
 40903                           ;interrupts.c: 116: }
 40904                           ;interrupts.c: 117: if(IRrawCodeNum <= 100)
 40905  0048EC  0E65               	movlw	101
 40906  0048EE  0100               	movlb	0	; () banked
 40907  0048F0  61F8               	cpfslt	_IRrawCodeNum& (0+255),b
 40908  0048F2  D005               	goto	i2l1341
 40909                           
 40910                           ; BSR set to: 0
 40911                           ;interrupts.c: 118: {
 40912                           ;interrupts.c: 119: IRrawCodeNum++;
 40913  0048F4  0100               	movlb	0	; () banked
 40914  0048F6  2BF8               	incf	_IRrawCodeNum& (0+255),f,b
 40915                           
 40916                           ; BSR set to: 0
 40917                           ;interrupts.c: 120: }
 40918                           ;interrupts.c: 121: }
 40919  0048F8  D002               	goto	i2l1341
 40920  0048FA                     i2l1333:
 40921                           
 40922                           ; BSR set to: 0
 40923                           ;interrupts.c: 122: else
 40924                           ;interrupts.c: 123: {
 40925                           ;interrupts.c: 124: (IOCBbits.IOCB4 = 0);
 40926  0048FA  987D               	bcf	3965,4,c	;volatile
 40927                           
 40928                           ;interrupts.c: 125: INTCONbits.RBIE = 0;
 40929  0048FC  96F2               	bcf	intcon,3,c	;volatile
 40930  0048FE                     i2l1341:
 40931                           
 40932                           ; BSR set to: 0
 40933                           ;interrupts.c: 126: }
 40934                           ;interrupts.c: 127: IRpinOLD = IRpin;
 40935  0048FE  C060  F04C         	movff	high_isr@IRpin,_IRpinOLD
 40936                           
 40937                           ;interrupts.c: 128: }
 40938  004902  D002               	goto	i2l13280
 40939  004904                     i2l1332:
 40940                           
 40941                           ; BSR set to: 0
 40942                           ;interrupts.c: 129: else
 40943                           ;interrupts.c: 130: {
 40944                           ;interrupts.c: 132: __nop();
 40945  004904  F000               	nop	
 40946  004906  D000               	goto	i2l13280
 40947  004908                     i2l13280:
 40948                           
 40949                           ;interrupts.c: 133: }
 40950                           ;interrupts.c: 135: ReadIRpin();
 40951  004908  EC73  F052         	call	i2_ReadIRpin	;wreg free
 40952                           
 40953                           ;interrupts.c: 136: INTCONbits.RBIF = 0;
 40954  00490C  90F2               	bcf	intcon,0,c	;volatile
 40955                           
 40956                           ;interrupts.c: 137: }
 40957  00490E  D245               	goto	i2l1343
 40958  004910                     i2l1331:
 40959                           
 40960                           ;interrupts.c: 138: else if(INTCONbits.TMR0IF)
 40961  004910  A4F2               	btfss	intcon,2,c	;volatile
 40962  004912  D032               	goto	i2l1344
 40963                           
 40964                           ;interrupts.c: 139: {
 40965                           ;interrupts.c: 141: (INTCONbits.TMR0IE = 0);
 40966  004914  9AF2               	bcf	intcon,5,c	;volatile
 40967                           
 40968                           ;interrupts.c: 142: (T0CONbits.TMR0ON = 0);
 40969  004916  9ED5               	bcf	4053,7,c	;volatile
 40970                           
 40971                           ;interrupts.c: 143: if(IRrawCodeNum >= (4))
 40972  004918  0E03               	movlw	3
 40973  00491A  0100               	movlb	0	; () banked
 40974  00491C  65F8               	cpfsgt	_IRrawCodeNum& (0+255),b
 40975  00491E  D00E               	goto	i2l1345
 40976                           
 40977                           ; BSR set to: 0
 40978                           ;interrupts.c: 144: {
 40979                           ;interrupts.c: 145: IR_New_Code = IRrawToNEC(IRRawCode, &IR_NEC, 1);
 40980  004920  0E00               	movlw	low _IRRawCode
 40981  004922  6E20               	movwf	IRrawToNEC@Raw,c
 40982  004924  0E05               	movlw	high _IRRawCode
 40983  004926  6E21               	movwf	IRrawToNEC@Raw+1,c
 40984  004928  0E55               	movlw	low _IR_NEC
 40985  00492A  6E22               	movwf	IRrawToNEC@NEC,c
 40986  00492C  0E00               	movlw	high _IR_NEC
 40987  00492E  6E23               	movwf	IRrawToNEC@NEC+1,c
 40988  004930  0E01               	movlw	1
 40989  004932  6E24               	movwf	IRrawToNEC@Invert,c
 40990  004934  EC58  F030         	call	_IRrawToNEC	;wreg free
 40991  004938  0100               	movlb	0	; () banked
 40992  00493A  6FFD               	movwf	_IR_New_Code& (0+255),b
 40993  00493C                     i2l1345:
 40994                           
 40995                           ; BSR set to: 0
 40996                           ;interrupts.c: 146: }
 40997                           ;interrupts.c: 147: cleanBuffer16bit(IRRawCode,100);
 40998  00493C  0E00               	movlw	low _IRRawCode
 40999  00493E  6E20               	movwf	i2cleanBuffer16bit@data,c
 41000  004940  0E05               	movlw	high _IRRawCode
 41001  004942  6E21               	movwf	i2cleanBuffer16bit@data+1,c
 41002  004944  0E00               	movlw	0
 41003  004946  6E23               	movwf	i2cleanBuffer16bit@count+1,c
 41004  004948  0E64               	movlw	100
 41005  00494A  6E22               	movwf	i2cleanBuffer16bit@count,c
 41006  00494C  ECA6  F04F         	call	i2_cleanBuffer16bit	;wreg free
 41007                           
 41008                           ;interrupts.c: 148: IRrawCodeNum = 0;
 41009  004950  0E00               	movlw	0
 41010  004952  0100               	movlb	0	; () banked
 41011  004954  6FF8               	movwf	_IRrawCodeNum& (0+255),b
 41012                           
 41013                           ; BSR set to: 0
 41014                           ;interrupts.c: 149: if(!IR_New_Code)
 41015  004956  0100               	movlb	0	; () banked
 41016  004958  51FD               	movf	_IR_New_Code& (0+255),w,b
 41017  00495A  A4D8               	btfss	status,2,c
 41018  00495C  D009               	goto	i2l13304
 41019                           
 41020                           ; BSR set to: 0
 41021                           ;interrupts.c: 150: {
 41022                           ;interrupts.c: 151: ReadIRpin();
 41023  00495E  EC73  F052         	call	i2_ReadIRpin	;wreg free
 41024                           
 41025                           ;interrupts.c: 152: IRpinOLD = ReadIRpin();
 41026  004962  EC73  F052         	call	i2_ReadIRpin	;wreg free
 41027  004966  6E4C               	movwf	_IRpinOLD,c
 41028                           
 41029                           ;interrupts.c: 153: INTCONbits.RBIF = 0;
 41030  004968  90F2               	bcf	intcon,0,c	;volatile
 41031                           
 41032                           ;interrupts.c: 154: (IOCBbits.IOCB4 = 1);
 41033  00496A  887D               	bsf	3965,4,c	;volatile
 41034                           
 41035                           ;interrupts.c: 155: INTCONbits.RBIE = 1;
 41036  00496C  86F2               	bsf	intcon,3,c	;volatile
 41037  00496E  D000               	goto	i2l13304
 41038  004970                     i2l13304:
 41039                           
 41040                           ;interrupts.c: 156: }
 41041                           ;interrupts.c: 157: ReceivingIR = 13;
 41042  004970  0E0D               	movlw	13
 41043  004972  6E5E               	movwf	_ReceivingIR,c	;volatile
 41044                           
 41045                           ;interrupts.c: 158: INTCONbits.TMR0IF = 0;
 41046  004974  94F2               	bcf	intcon,2,c	;volatile
 41047                           
 41048                           ;interrupts.c: 159: }
 41049  004976  D211               	goto	i2l1343
 41050  004978                     i2l1344:
 41051                           
 41052                           ;interrupts.c: 160: else if(PIR1bits.TMR2IF)
 41053  004978  A29E               	btfss	3998,1,c	;volatile
 41054  00497A  D1FC               	goto	i2l1348
 41055                           
 41056                           ;interrupts.c: 161: {
 41057                           ;interrupts.c: 164: Timer2_Postscaler++;
 41058  00497C  2A53               	incf	_Timer2_Postscaler,f,c
 41059                           
 41060                           ;interrupts.c: 165: if(RF_IR == 55)
 41061  00497E  0E37               	movlw	55
 41062  004980  185C               	xorwf	_RF_IR,w,c
 41063  004982  A4D8               	btfss	status,2,c
 41064  004984  D12F               	goto	i2l13542
 41065                           
 41066                           ;interrupts.c: 166: {
 41067                           ;interrupts.c: 168: if(Timer2_Postscaler >= RF_IR_Postscaler)
 41068  004986  505D               	movf	_RF_IR_Postscaler,w,c	;volatile
 41069  004988  5C53               	subwf	_Timer2_Postscaler,w,c
 41070  00498A  A0D8               	btfss	status,0,c
 41071  00498C  D125               	goto	i2l13538
 41072                           
 41073                           ;interrupts.c: 169: {
 41074                           ;interrupts.c: 170: Timer2_Postscaler = 0;
 41075  00498E  0E00               	movlw	0
 41076  004990  6E53               	movwf	_Timer2_Postscaler,c
 41077                           
 41078                           ;interrupts.c: 171: if(RFsendCode[RFcodeBit] != 99)
 41079  004992  5050               	movf	_RFcodeBit,w,c
 41080  004994  0D01               	mullw	1
 41081  004996  0E00               	movlw	low _RFsendCode
 41082  004998  24F3               	addwf	prodl,w,c
 41083  00499A  6ED9               	movwf	fsr2l,c
 41084  00499C  0E03               	movlw	high _RFsendCode
 41085  00499E  20F4               	addwfc	prodh,w,c
 41086  0049A0  6EDA               	movwf	fsr2h,c
 41087  0049A2  0E63               	movlw	99
 41088  0049A4  18DE               	xorwf	postinc2,w,c
 41089  0049A6  B4D8               	btfsc	status,2,c
 41090  0049A8  D0CD               	goto	i2l13488
 41091                           
 41092                           ;interrupts.c: 172: {
 41093                           ;interrupts.c: 174: if(RFsendFlag)
 41094  0049AA  0100               	movlb	0	; () banked
 41095  0049AC  51FC               	movf	_RFsendFlag& (0+255),w,b	;volatile
 41096  0049AE  B4D8               	btfsc	status,2,c
 41097  0049B0  D113               	goto	i2l13538
 41098                           
 41099                           ; BSR set to: 0
 41100                           ;interrupts.c: 175: {
 41101                           ;interrupts.c: 176: if(RFsendCode[RFcodeBit] == 0)
 41102  0049B2  5050               	movf	_RFcodeBit,w,c
 41103  0049B4  0D01               	mullw	1
 41104  0049B6  0E00               	movlw	low _RFsendCode
 41105  0049B8  24F3               	addwf	prodl,w,c
 41106  0049BA  6ED9               	movwf	fsr2l,c
 41107  0049BC  0E03               	movlw	high _RFsendCode
 41108  0049BE  20F4               	addwfc	prodh,w,c
 41109  0049C0  6EDA               	movwf	fsr2h,c
 41110  0049C2  50DF               	movf	indf2,w,c
 41111  0049C4  A4D8               	btfss	status,2,c
 41112  0049C6  D04A               	goto	i2l13380
 41113                           
 41114                           ; BSR set to: 0
 41115                           ;interrupts.c: 177: {
 41116                           ;interrupts.c: 179: if(RFConfig == 1)
 41117  0049C8  0100               	movlb	0	; () banked
 41118  0049CA  05FA               	decf	_RFConfig& (0+255),w,b
 41119  0049CC  A4D8               	btfss	status,2,c
 41120  0049CE  D02B               	goto	i2l13358
 41121                           
 41122                           ; BSR set to: 0
 41123                           ;interrupts.c: 180: {
 41124                           ;interrupts.c: 181: if(RFcodePlace == 1)
 41125  0049D0  0100               	movlb	0	; () banked
 41126  0049D2  05FB               	decf	_RFcodePlace& (0+255),w,b
 41127  0049D4  A4D8               	btfss	status,2,c
 41128  0049D6  D007               	goto	i2l13332
 41129  0049D8  D088               	goto	i2l13446
 41130  0049DA                     i2l13328:
 41131                           
 41132                           ; BSR set to: 0
 41133                           ;interrupts.c: 184: (PR2 = 8);
 41134  0049DA  0E08               	movlw	8
 41135  0049DC                     L25:
 41136  0049DC  6ECB               	movwf	4043,c	;volatile
 41137  0049DE  D087               	goto	i2l13450
 41138  0049E0                     L27:
 41139                           
 41140                           ;interrupts.c: 186: (TMR2 = 0);
 41141  0049E0  0E00               	movlw	0
 41142  0049E2  6ECC               	movwf	4044,c	;volatile
 41143                           
 41144                           ;interrupts.c: 187: }
 41145  0049E4  D0F9               	goto	i2l13538
 41146  0049E6                     i2l13332:
 41147                           
 41148                           ; BSR set to: 0
 41149                           ;interrupts.c: 188: else if(RFcodePlace == 2)
 41150  0049E6  0E02               	movlw	2
 41151  0049E8  0100               	movlb	0	; () banked
 41152  0049EA  19FB               	xorwf	_RFcodePlace& (0+255),w,b
 41153  0049EC  A4D8               	btfss	status,2,c
 41154  0049EE  D005               	goto	i2l13340
 41155  0049F0  D086               	goto	L41
 41156                           
 41157                           ; BSR set to: 0
 41158                           ;interrupts.c: 189: {
 41159                           ;interrupts.c: 190: (LATC &= ~0x20);
 41160  0049F2  D048               	goto	i2l13388
 41161  0049F4                     i2l13338:
 41162                           
 41163                           ; BSR set to: 0
 41164                           ;interrupts.c: 192: RFcodePlace++;
 41165  0049F4  0100               	movlb	0	; () banked
 41166  0049F6  2BFB               	incf	_RFcodePlace& (0+255),f,b
 41167                           
 41168                           ;interrupts.c: 193: }
 41169  0049F8  D0EF               	goto	i2l13538
 41170  0049FA                     i2l13340:
 41171                           
 41172                           ; BSR set to: 0
 41173                           ;interrupts.c: 194: else if(RFcodePlace == 3)
 41174  0049FA  0E03               	movlw	3
 41175  0049FC  0100               	movlb	0	; () banked
 41176  0049FE  19FB               	xorwf	_RFcodePlace& (0+255),w,b
 41177  004A00  A4D8               	btfss	status,2,c
 41178  004A02  D002               	goto	i2l13348
 41179  004A04  D072               	goto	i2l13446
 41180                           
 41181                           ; BSR set to: 0
 41182                           ;interrupts.c: 195: {
 41183                           ;interrupts.c: 196: (LATC |= 0x20);
 41184  004A06  D7E9               	goto	i2l13328
 41185  004A08                     i2l13348:
 41186                           
 41187                           ; BSR set to: 0
 41188                           ;interrupts.c: 201: else if(RFcodePlace == 4)
 41189  004A08  0E04               	movlw	4
 41190  004A0A  0100               	movlb	0	; () banked
 41191  004A0C  19FB               	xorwf	_RFcodePlace& (0+255),w,b
 41192  004A0E  A4D8               	btfss	status,2,c
 41193  004A10  D004               	goto	i2l1361
 41194                           
 41195                           ; BSR set to: 0
 41196                           ;interrupts.c: 202: {
 41197                           ;interrupts.c: 203: (LATC &= ~0x20);
 41198  004A12  9A8B               	bcf	3979,5,c	;volatile
 41199                           
 41200                           ; BSR set to: 0
 41201                           ;interrupts.c: 204: (PR2 = 24);
 41202  004A14  0E18               	movlw	24
 41203  004A16  D05C               	goto	L26
 41204  004A18  D01A               	goto	i2l13374
 41205  004A1A                     i2l1361:
 41206                           
 41207                           ; BSR set to: 0
 41208                           ;interrupts.c: 208: else
 41209                           ;interrupts.c: 209: {
 41210                           ;interrupts.c: 211: (T2CONbits.TMR2ON = 0);
 41211  004A1A  94CA               	bcf	4042,2,c	;volatile
 41212  004A1C  D08E               	goto	i2l13486
 41213  004A1E                     L30:
 41214                           
 41215                           ;interrupts.c: 213: RFsendFlag = 0;
 41216  004A1E  0E00               	movlw	0
 41217  004A20  0100               	movlb	0	; () banked
 41218  004A22  6FFC               	movwf	_RFsendFlag& (0+255),b	;volatile
 41219                           
 41220                           ; BSR set to: 0
 41221                           ;interrupts.c: 214: }
 41222                           ;interrupts.c: 215: }
 41223                           
 41224                           ; BSR set to: 0
 41225                           
 41226                           ; BSR set to: 0
 41227                           
 41228                           ; BSR set to: 0
 41229  004A24  D0D9               	goto	i2l13538
 41230  004A26                     i2l13358:
 41231                           
 41232                           ; BSR set to: 0
 41233                           ;interrupts.c: 216: else if(RFConfig == 2)
 41234  004A26  0E02               	movlw	2
 41235  004A28  0100               	movlb	0	; () banked
 41236  004A2A  19FA               	xorwf	_RFConfig& (0+255),w,b
 41237  004A2C  A4D8               	btfss	status,2,c
 41238  004A2E  D7F5               	goto	i2l1361
 41239                           
 41240                           ; BSR set to: 0
 41241                           ;interrupts.c: 217: {
 41242                           ;interrupts.c: 219: if(RFcodePlace == 1)
 41243  004A30  0100               	movlb	0	; () banked
 41244  004A32  05FB               	decf	_RFcodePlace& (0+255),w,b
 41245  004A34  A4D8               	btfss	status,2,c
 41246  004A36  D003               	goto	i2l13368
 41247                           
 41248                           ; BSR set to: 0
 41249                           ;interrupts.c: 220: {
 41250                           ;interrupts.c: 221: (LATC |= 0x20);
 41251  004A38  8A8B               	bsf	3979,5,c	;volatile
 41252                           
 41253                           ; BSR set to: 0
 41254                           ;interrupts.c: 222: (PR2 = 11);
 41255  004A3A  0E0B               	movlw	11
 41256  004A3C  D7CF               	goto	L25
 41257  004A3E                     i2l13368:
 41258                           
 41259                           ; BSR set to: 0
 41260                           ;interrupts.c: 226: else if(RFcodePlace == 2)
 41261  004A3E  0E02               	movlw	2
 41262  004A40  0100               	movlb	0	; () banked
 41263  004A42  19FB               	xorwf	_RFcodePlace& (0+255),w,b
 41264  004A44  A4D8               	btfss	status,2,c
 41265  004A46  D7E9               	goto	i2l1361
 41266                           
 41267                           ; BSR set to: 0
 41268                           ;interrupts.c: 227: {
 41269                           ;interrupts.c: 228: (LATC &= ~0x20);
 41270  004A48  9A8B               	bcf	3979,5,c	;volatile
 41271                           
 41272                           ; BSR set to: 0
 41273                           ;interrupts.c: 229: (PR2 = 29);
 41274  004A4A  0E1D               	movlw	29
 41275  004A4C  D041               	goto	L26
 41276  004A4E                     i2l13374:
 41277                           
 41278                           ; BSR set to: 0
 41279                           ;interrupts.c: 230: RFcodePlace = 1;
 41280  004A4E  0E01               	movlw	1
 41281  004A50  0100               	movlb	0	; () banked
 41282  004A52  6FFB               	movwf	_RFcodePlace& (0+255),b
 41283                           
 41284                           ;interrupts.c: 231: RFcodeBit++;
 41285  004A54  2A50               	incf	_RFcodeBit,f,c
 41286                           
 41287                           ; BSR set to: 0
 41288                           ;interrupts.c: 239: }
 41289                           ;interrupts.c: 240: }
 41290                           
 41291                           ; BSR set to: 0
 41292                           
 41293                           ;interrupts.c: 238: RFsendFlag = 0;
 41294                           
 41295                           ; BSR set to: 0
 41296                           ;interrupts.c: 237: Sent = 1;
 41297                           
 41298                           ; BSR set to: 0
 41299                           ;interrupts.c: 233: else
 41300                           ;interrupts.c: 234: {
 41301                           ;interrupts.c: 236: (T2CONbits.TMR2ON = 0);
 41302                           
 41303                           ;interrupts.c: 232: }
 41304  004A56  D0C0               	goto	i2l13538
 41305                           
 41306                           ; BSR set to: 0
 41307                           ;interrupts.c: 241: else
 41308                           ;interrupts.c: 242: {
 41309                           ;interrupts.c: 244: (T2CONbits.TMR2ON = 0);
 41310  004A58  D070               	goto	i2l13486
 41311                           
 41312                           ; BSR set to: 0
 41313                           ;interrupts.c: 247: }
 41314                           ;interrupts.c: 248: }
 41315                           
 41316                           ; BSR set to: 0
 41317                           
 41318                           ;interrupts.c: 246: RFsendFlag = 0;
 41319                           
 41320                           ; BSR set to: 0
 41321                           ;interrupts.c: 245: Sent = 1;
 41322  004A5A  D0BE               	goto	i2l13538
 41323  004A5C                     i2l13380:
 41324                           
 41325                           ; BSR set to: 0
 41326                           ;interrupts.c: 249: else if(RFsendCode[RFcodeBit] == 1)
 41327  004A5C  5050               	movf	_RFcodeBit,w,c
 41328  004A5E  0D01               	mullw	1
 41329  004A60  0E00               	movlw	low _RFsendCode
 41330  004A62  24F3               	addwf	prodl,w,c
 41331  004A64  6ED9               	movwf	fsr2l,c
 41332  004A66  0E03               	movlw	high _RFsendCode
 41333  004A68  20F4               	addwfc	prodh,w,c
 41334  004A6A  6EDA               	movwf	fsr2h,c
 41335  004A6C  04DE               	decf	postinc2,w,c
 41336  004A6E  A4D8               	btfss	status,2,c
 41337  004A70  D034               	goto	i2l13442
 41338                           
 41339                           ; BSR set to: 0
 41340                           ;interrupts.c: 250: {
 41341                           ;interrupts.c: 251: if(RFConfig == 1)
 41342  004A72  0100               	movlb	0	; () banked
 41343  004A74  05FA               	decf	_RFConfig& (0+255),w,b
 41344  004A76  A4D8               	btfss	status,2,c
 41345  004A78  D018               	goto	i2l13420
 41346                           
 41347                           ; BSR set to: 0
 41348                           ;interrupts.c: 252: {
 41349                           ;interrupts.c: 253: if(RFcodePlace == 1)
 41350  004A7A  0100               	movlb	0	; () banked
 41351  004A7C  05FB               	decf	_RFcodePlace& (0+255),w,b
 41352  004A7E  A4D8               	btfss	status,2,c
 41353  004A80  D004               	goto	i2l13392
 41354  004A82  D045               	goto	L42
 41355  004A84                     i2l13388:
 41356                           
 41357                           ; BSR set to: 0
 41358                           ;interrupts.c: 256: (PR2 = 24);
 41359  004A84  0E18               	movlw	24
 41360  004A86  6ECB               	movwf	4043,c	;volatile
 41361  004A88  D7B5               	goto	i2l13338
 41362  004A8A                     i2l13392:
 41363                           
 41364                           ; BSR set to: 0
 41365                           ;interrupts.c: 259: else if(RFcodePlace == 2)
 41366  004A8A  0E02               	movlw	2
 41367  004A8C  0100               	movlb	0	; () banked
 41368  004A8E  19FB               	xorwf	_RFcodePlace& (0+255),w,b
 41369  004A90  A4D8               	btfss	status,2,c
 41370  004A92  D038               	goto	i2l13460
 41371                           
 41372                           ; BSR set to: 0
 41373                           ;interrupts.c: 260: {
 41374                           ;interrupts.c: 261: (LATC &= ~0x20);
 41375  004A94  9A8B               	bcf	3979,5,c	;volatile
 41376  004A96  D7A1               	goto	i2l13328
 41377                           
 41378                           ; BSR set to: 0
 41379                           
 41380                           ;interrupts.c: 265: }
 41381                           
 41382                           ;interrupts.c: 264: (TMR2 = 0);
 41383                           
 41384                           ; BSR set to: 0
 41385                           ;interrupts.c: 263: RFcodePlace++;
 41386                           
 41387                           ; BSR set to: 0
 41388                           ;interrupts.c: 262: (PR2 = 8);
 41389  004A98  D035               	goto	i2l13460
 41390                           
 41391                           ; BSR set to: 0
 41392                           ;interrupts.c: 267: {
 41393                           ;interrupts.c: 268: (LATC |= 0x20);
 41394                           
 41395                           ; BSR set to: 0
 41396                           ;interrupts.c: 266: else if(RFcodePlace == 3)
 41397  004A9A  D7F4               	goto	i2l13388
 41398                           
 41399                           ; BSR set to: 0
 41400                           ;interrupts.c: 269: (PR2 = 24);
 41401  004A9C  D7AB               	goto	i2l13338
 41402                           
 41403                           ; BSR set to: 0
 41404                           
 41405                           ;interrupts.c: 271: }
 41406                           
 41407                           ; BSR set to: 0
 41408                           ;interrupts.c: 270: RFcodePlace++;
 41409  004A9E  D03A               	goto	i2l13468
 41410  004AA0                     i2l13412:
 41411                           
 41412                           ; BSR set to: 0
 41413                           ;interrupts.c: 275: (PR2 = 8);
 41414  004AA0  0E08               	movlw	8
 41415  004AA2  6ECB               	movwf	4043,c	;volatile
 41416  004AA4  D03E               	goto	i2l13474
 41417                           
 41418                           ;interrupts.c: 277: RFcodeBit++;
 41419                           
 41420                           ; BSR set to: 0
 41421                           ;interrupts.c: 276: RFcodePlace = 1;
 41422  004AA6  D79C               	goto	L27
 41423                           
 41424                           ; BSR set to: 0
 41425                           ;interrupts.c: 286: }
 41426                           ;interrupts.c: 287: }
 41427                           
 41428                           ; BSR set to: 0
 41429                           
 41430                           ; BSR set to: 0
 41431                           
 41432                           ; BSR set to: 0
 41433                           
 41434                           ;interrupts.c: 285: RFsendFlag = 0;
 41435                           
 41436                           ; BSR set to: 0
 41437                           ;interrupts.c: 284: Sent = 1;
 41438                           
 41439                           ; BSR set to: 0
 41440                           ;interrupts.c: 280: else
 41441                           ;interrupts.c: 281: {
 41442                           ;interrupts.c: 283: (T2CONbits.TMR2ON = 0);
 41443                           
 41444                           ;interrupts.c: 279: }
 41445                           
 41446                           ; BSR set to: 0
 41447                           ;interrupts.c: 278: (TMR2 = 0);
 41448  004AA8  D097               	goto	i2l13538
 41449  004AAA                     i2l13420:
 41450                           
 41451                           ; BSR set to: 0
 41452                           ;interrupts.c: 288: else if(RFConfig == 2)
 41453  004AAA  0E02               	movlw	2
 41454  004AAC  0100               	movlb	0	; () banked
 41455  004AAE  19FA               	xorwf	_RFConfig& (0+255),w,b
 41456  004AB0  A4D8               	btfss	status,2,c
 41457  004AB2  D7B3               	goto	i2l1361
 41458                           
 41459                           ; BSR set to: 0
 41460                           ;interrupts.c: 289: {
 41461                           ;interrupts.c: 291: if(RFcodePlace == 1)
 41462  004AB4  0100               	movlb	0	; () banked
 41463  004AB6  05FB               	decf	_RFcodePlace& (0+255),w,b
 41464  004AB8  A4D8               	btfss	status,2,c
 41465  004ABA  D003               	goto	i2l13430
 41466                           
 41467                           ; BSR set to: 0
 41468                           ;interrupts.c: 292: {
 41469                           ;interrupts.c: 293: (LATC |= 0x20);
 41470  004ABC  8A8B               	bsf	3979,5,c	;volatile
 41471                           
 41472                           ; BSR set to: 0
 41473                           ;interrupts.c: 294: (PR2 = 29);
 41474  004ABE  0E1D               	movlw	29
 41475  004AC0  D78D               	goto	L25
 41476  004AC2                     i2l13430:
 41477                           
 41478                           ; BSR set to: 0
 41479                           ;interrupts.c: 298: else if(RFcodePlace == 2)
 41480  004AC2  0E02               	movlw	2
 41481  004AC4  0100               	movlb	0	; () banked
 41482  004AC6  19FB               	xorwf	_RFcodePlace& (0+255),w,b
 41483  004AC8  A4D8               	btfss	status,2,c
 41484  004ACA  D004               	goto	i2l1385
 41485                           
 41486                           ; BSR set to: 0
 41487                           ;interrupts.c: 299: {
 41488                           ;interrupts.c: 300: (LATC &= ~0x20);
 41489  004ACC  9A8B               	bcf	3979,5,c	;volatile
 41490                           
 41491                           ; BSR set to: 0
 41492                           ;interrupts.c: 301: (PR2 = 11);
 41493  004ACE  0E0B               	movlw	11
 41494  004AD0                     L26:
 41495  004AD0  6ECB               	movwf	4043,c	;volatile
 41496  004AD2  D7BD               	goto	i2l13374
 41497  004AD4                     i2l1385:
 41498                           
 41499                           ; BSR set to: 0
 41500                           ;interrupts.c: 305: else
 41501                           ;interrupts.c: 306: {
 41502                           ;interrupts.c: 308: (T2CONbits.TMR2ON = 0);
 41503  004AD4  94CA               	bcf	4042,2,c	;volatile
 41504  004AD6  D031               	goto	i2l13486
 41505                           
 41506                           ; BSR set to: 0
 41507                           ;interrupts.c: 319: }
 41508                           ;interrupts.c: 320: }
 41509                           
 41510                           ; BSR set to: 0
 41511                           
 41512                           ;interrupts.c: 318: RFsendFlag = 0;
 41513                           
 41514                           ; BSR set to: 0
 41515                           ;interrupts.c: 317: Sent = 1;
 41516                           
 41517                           ; BSR set to: 0
 41518                           ;interrupts.c: 313: else
 41519                           ;interrupts.c: 314: {
 41520                           ;interrupts.c: 316: (T2CONbits.TMR2ON = 0);
 41521                           
 41522                           ; BSR set to: 0
 41523                           ;interrupts.c: 311: }
 41524                           ;interrupts.c: 312: }
 41525                           
 41526                           ; BSR set to: 0
 41527                           
 41528                           ;interrupts.c: 310: RFsendFlag = 0;
 41529                           
 41530                           ; BSR set to: 0
 41531                           ;interrupts.c: 309: Sent = 1;
 41532  004AD8  D07F               	goto	i2l13538
 41533  004ADA                     i2l13442:
 41534                           
 41535                           ; BSR set to: 0
 41536                           ;interrupts.c: 321: else
 41537                           ;interrupts.c: 322: {
 41538                           ;interrupts.c: 323: if(RFConfig == 1)
 41539  004ADA  0100               	movlb	0	; () banked
 41540  004ADC  05FA               	decf	_RFConfig& (0+255),w,b
 41541  004ADE  A4D8               	btfss	status,2,c
 41542  004AE0  D026               	goto	i2l13480
 41543                           
 41544                           ; BSR set to: 0
 41545                           ;interrupts.c: 324: {
 41546                           ;interrupts.c: 326: if(RFcodePlace == 1)
 41547  004AE2  0100               	movlb	0	; () banked
 41548  004AE4  05FB               	decf	_RFcodePlace& (0+255),w,b
 41549  004AE6  A4D8               	btfss	status,2,c
 41550  004AE8  D005               	goto	i2l13452
 41551  004AEA                     i2l13446:
 41552                           
 41553                           ; BSR set to: 0
 41554                           ;interrupts.c: 327: {
 41555                           ;interrupts.c: 328: (LATC |= 0x20);
 41556  004AEA  8A8B               	bsf	3979,5,c	;volatile
 41557  004AEC  D776               	goto	i2l13328
 41558  004AEE                     i2l13450:
 41559                           
 41560                           ; BSR set to: 0
 41561                           ;interrupts.c: 330: RFcodePlace++;
 41562  004AEE  0100               	movlb	0	; () banked
 41563  004AF0  2BFB               	incf	_RFcodePlace& (0+255),f,b
 41564  004AF2  D776               	goto	L27
 41565  004AF4                     i2l13452:
 41566                           
 41567                           ; BSR set to: 0
 41568                           ;interrupts.c: 333: else if(RFcodePlace == 2)
 41569  004AF4  0E02               	movlw	2
 41570  004AF6  0100               	movlb	0	; () banked
 41571  004AF8  19FB               	xorwf	_RFcodePlace& (0+255),w,b
 41572  004AFA  A4D8               	btfss	status,2,c
 41573  004AFC  D003               	goto	i2l13460
 41574  004AFE                     L41:
 41575                           
 41576                           ; BSR set to: 0
 41577                           ;interrupts.c: 334: {
 41578                           ;interrupts.c: 335: (LATC &= ~0x20);
 41579  004AFE  9A8B               	bcf	3979,5,c	;volatile
 41580  004B00  D7C1               	goto	i2l13388
 41581                           
 41582                           ; BSR set to: 0
 41583                           ;interrupts.c: 336: (PR2 = 24);
 41584  004B02  D778               	goto	i2l13338
 41585  004B04                     i2l13460:
 41586                           
 41587                           ; BSR set to: 0
 41588                           ;interrupts.c: 339: else if(RFcodePlace == 3)
 41589  004B04  0E03               	movlw	3
 41590  004B06  0100               	movlb	0	; () banked
 41591  004B08  19FB               	xorwf	_RFcodePlace& (0+255),w,b
 41592  004B0A  A4D8               	btfss	status,2,c
 41593  004B0C  D003               	goto	i2l13468
 41594  004B0E                     L42:
 41595                           
 41596                           ; BSR set to: 0
 41597                           ;interrupts.c: 340: {
 41598                           ;interrupts.c: 341: (LATC |= 0x20);
 41599  004B0E  8A8B               	bsf	3979,5,c	;volatile
 41600  004B10  D7B9               	goto	i2l13388
 41601                           
 41602                           ; BSR set to: 0
 41603                           ;interrupts.c: 342: (PR2 = 24);
 41604  004B12  D770               	goto	i2l13338
 41605  004B14                     i2l13468:
 41606                           
 41607                           ; BSR set to: 0
 41608                           ;interrupts.c: 345: else if(RFcodePlace == 4)
 41609  004B14  0E04               	movlw	4
 41610  004B16  0100               	movlb	0	; () banked
 41611  004B18  19FB               	xorwf	_RFcodePlace& (0+255),w,b
 41612  004B1A  A4D8               	btfss	status,2,c
 41613  004B1C  D77E               	goto	i2l1361
 41614                           
 41615                           ; BSR set to: 0
 41616                           ;interrupts.c: 346: {
 41617                           ;interrupts.c: 347: (LATC &= ~0x20);
 41618  004B1E  9A8B               	bcf	3979,5,c	;volatile
 41619  004B20  D7BF               	goto	i2l13412
 41620  004B22                     i2l13474:
 41621                           
 41622                           ; BSR set to: 0
 41623                           ;interrupts.c: 349: RFcodePlace = 1;
 41624  004B22  0E01               	movlw	1
 41625  004B24  0100               	movlb	0	; () banked
 41626  004B26  6FFB               	movwf	_RFcodePlace& (0+255),b
 41627                           
 41628                           ;interrupts.c: 350: RFcodeBit++;
 41629  004B28  2A50               	incf	_RFcodeBit,f,c
 41630  004B2A  D75A               	goto	L27
 41631                           
 41632                           ; BSR set to: 0
 41633                           ;interrupts.c: 359: }
 41634                           ;interrupts.c: 360: }
 41635                           
 41636                           ; BSR set to: 0
 41637                           
 41638                           ; BSR set to: 0
 41639                           
 41640                           ; BSR set to: 0
 41641                           
 41642                           ;interrupts.c: 358: RFsendFlag = 0;
 41643                           
 41644                           ; BSR set to: 0
 41645                           ;interrupts.c: 357: Sent = 1;
 41646                           
 41647                           ; BSR set to: 0
 41648                           ;interrupts.c: 353: else
 41649                           ;interrupts.c: 354: {
 41650                           ;interrupts.c: 356: (T2CONbits.TMR2ON = 0);
 41651                           
 41652                           ;interrupts.c: 352: }
 41653                           
 41654                           ; BSR set to: 0
 41655                           ;interrupts.c: 351: (TMR2 = 0);
 41656  004B2C  D055               	goto	i2l13538
 41657  004B2E                     i2l13480:
 41658                           
 41659                           ; BSR set to: 0
 41660                           ;interrupts.c: 361: else if(RFConfig == 2)
 41661  004B2E  0E02               	movlw	2
 41662  004B30  0100               	movlb	0	; () banked
 41663  004B32  19FA               	xorwf	_RFConfig& (0+255),w,b
 41664  004B34  A4D8               	btfss	status,2,c
 41665  004B36  D771               	goto	i2l1361
 41666  004B38  D770               	goto	i2l1361
 41667  004B3A                     i2l13486:
 41668                           
 41669                           ; BSR set to: 0
 41670                           ;interrupts.c: 372: Sent = 1;
 41671  004B3A  0E01               	movlw	1
 41672  004B3C  0100               	movlb	0	; () banked
 41673  004B3E  6FFF               	movwf	_Sent& (0+255),b	;volatile
 41674  004B40  D76E               	goto	L30
 41675                           
 41676                           ; BSR set to: 0
 41677                           ;interrupts.c: 374: }
 41678                           ;interrupts.c: 375: }
 41679                           ;interrupts.c: 376: }
 41680                           ;interrupts.c: 377: }
 41681                           
 41682                           ; BSR set to: 0
 41683                           
 41684                           ; BSR set to: 0
 41685                           
 41686                           ; BSR set to: 0
 41687                           
 41688                           ; BSR set to: 0
 41689                           
 41690                           ;interrupts.c: 373: RFsendFlag = 0;
 41691  004B42  D04A               	goto	i2l13538
 41692  004B44                     i2l13488:
 41693                           
 41694                           ;interrupts.c: 378: else
 41695                           ;interrupts.c: 379: {
 41696                           ;interrupts.c: 381: if(RFcodePlace == 1)
 41697  004B44  0100               	movlb	0	; () banked
 41698  004B46  05FB               	decf	_RFcodePlace& (0+255),w,b
 41699  004B48  A4D8               	btfss	status,2,c
 41700  004B4A  D018               	goto	i2l13506
 41701                           
 41702                           ; BSR set to: 0
 41703                           ;interrupts.c: 382: {
 41704                           ;interrupts.c: 383: if(RFConfig == 1)
 41705  004B4C  0100               	movlb	0	; () banked
 41706  004B4E  05FA               	decf	_RFConfig& (0+255),w,b
 41707  004B50  A4D8               	btfss	status,2,c
 41708  004B52  D003               	goto	i2l13496
 41709                           
 41710                           ; BSR set to: 0
 41711                           ;interrupts.c: 384: {
 41712                           ;interrupts.c: 385: (LATC |= 0x20);
 41713  004B54  8A8B               	bsf	3979,5,c	;volatile
 41714                           
 41715                           ; BSR set to: 0
 41716                           ;interrupts.c: 386: (PR2 = 8);
 41717  004B56  0E08               	movlw	8
 41718  004B58  D007               	goto	L28
 41719  004B5A                     i2l13496:
 41720                           
 41721                           ; BSR set to: 0
 41722                           ;interrupts.c: 388: else if(RFConfig == 2)
 41723  004B5A  0E02               	movlw	2
 41724  004B5C  0100               	movlb	0	; () banked
 41725  004B5E  19FA               	xorwf	_RFConfig& (0+255),w,b
 41726  004B60  A4D8               	btfss	status,2,c
 41727  004B62  D004               	goto	i2l1405
 41728                           
 41729                           ; BSR set to: 0
 41730                           ;interrupts.c: 389: {
 41731                           ;interrupts.c: 390: (LATC &= ~0x20);
 41732  004B64  9A8B               	bcf	3979,5,c	;volatile
 41733                           
 41734                           ; BSR set to: 0
 41735                           ;interrupts.c: 391: (PR2 = 11);
 41736  004B66  0E0B               	movlw	11
 41737  004B68                     L28:
 41738  004B68  6ECB               	movwf	4043,c	;volatile
 41739                           
 41740                           ;interrupts.c: 392: }
 41741  004B6A  D005               	goto	i2l1404
 41742  004B6C                     i2l1405:
 41743                           
 41744                           ; BSR set to: 0
 41745                           ;interrupts.c: 393: else
 41746                           ;interrupts.c: 394: {
 41747                           ;interrupts.c: 396: (T2CONbits.TMR2ON = 0);
 41748  004B6C  94CA               	bcf	4042,2,c	;volatile
 41749                           
 41750                           ; BSR set to: 0
 41751                           ;interrupts.c: 397: Sent = 1;
 41752  004B6E  0E01               	movlw	1
 41753  004B70  0100               	movlb	0	; () banked
 41754  004B72  6FFF               	movwf	_Sent& (0+255),b	;volatile
 41755  004B74  D000               	goto	i2l1404
 41756  004B76                     i2l1404:
 41757                           
 41758                           ; BSR set to: 0
 41759                           ;interrupts.c: 398: }
 41760                           ;interrupts.c: 399: (TMR2 = 0);
 41761  004B76  0E00               	movlw	0
 41762  004B78  6ECC               	movwf	4044,c	;volatile
 41763  004B7A  D73C               	goto	i2l13338
 41764  004B7C                     i2l13506:
 41765                           
 41766                           ; BSR set to: 0
 41767                           ;interrupts.c: 402: else if( RFcodePlace == 2)
 41768  004B7C  0E02               	movlw	2
 41769  004B7E  0100               	movlb	0	; () banked
 41770  004B80  19FB               	xorwf	_RFcodePlace& (0+255),w,b
 41771  004B82  A4D8               	btfss	status,2,c
 41772  004B84  D020               	goto	i2l13526
 41773                           
 41774                           ; BSR set to: 0
 41775                           ;interrupts.c: 403: {
 41776                           ;interrupts.c: 404: if(RFConfig == 1)
 41777  004B86  0100               	movlb	0	; () banked
 41778  004B88  05FA               	decf	_RFConfig& (0+255),w,b
 41779  004B8A  A4D8               	btfss	status,2,c
 41780  004B8C  D003               	goto	i2l13514
 41781                           
 41782                           ; BSR set to: 0
 41783                           ;interrupts.c: 405: {
 41784                           ;interrupts.c: 406: (LATC &= ~0x20);
 41785  004B8E  9A8B               	bcf	3979,5,c	;volatile
 41786                           
 41787                           ; BSR set to: 0
 41788                           ;interrupts.c: 407: (PR2 = 250);
 41789  004B90  0EFA               	movlw	250
 41790  004B92  D006               	goto	L29
 41791  004B94                     i2l13514:
 41792                           
 41793                           ; BSR set to: 0
 41794                           ;interrupts.c: 409: else if(RFConfig == 2)
 41795  004B94  0E02               	movlw	2
 41796  004B96  0100               	movlb	0	; () banked
 41797  004B98  19FA               	xorwf	_RFConfig& (0+255),w,b
 41798  004B9A  A4D8               	btfss	status,2,c
 41799  004B9C  D003               	goto	i2l1411
 41800                           
 41801                           ; BSR set to: 0
 41802                           ;interrupts.c: 410: {
 41803                           ;interrupts.c: 411: (PR2 = 149);
 41804  004B9E  0E95               	movlw	149
 41805  004BA0                     L29:
 41806  004BA0  6ECB               	movwf	4043,c	;volatile
 41807                           
 41808                           ;interrupts.c: 412: }
 41809  004BA2  D005               	goto	i2l13520
 41810  004BA4                     i2l1411:
 41811                           
 41812                           ; BSR set to: 0
 41813                           ;interrupts.c: 413: else
 41814                           ;interrupts.c: 414: {
 41815                           ;interrupts.c: 416: (T2CONbits.TMR2ON = 0);
 41816  004BA4  94CA               	bcf	4042,2,c	;volatile
 41817                           
 41818                           ; BSR set to: 0
 41819                           ;interrupts.c: 417: Sent = 1;
 41820  004BA6  0E01               	movlw	1
 41821  004BA8  0100               	movlb	0	; () banked
 41822  004BAA  6FFF               	movwf	_Sent& (0+255),b	;volatile
 41823                           
 41824                           ; BSR set to: 0
 41825  004BAC  D000               	goto	i2l13520
 41826  004BAE                     i2l13520:
 41827                           
 41828                           ; BSR set to: 0
 41829                           ;interrupts.c: 418: }
 41830                           ;interrupts.c: 419: RFcodePlace++;
 41831  004BAE  0100               	movlb	0	; () banked
 41832  004BB0  2BFB               	incf	_RFcodePlace& (0+255),f,b
 41833                           
 41834                           ; BSR set to: 0
 41835                           ;interrupts.c: 420: Sendcount--;
 41836  004BB2  0651               	decf	_Sendcount,f,c	;volatile
 41837                           
 41838                           ;interrupts.c: 421: if(Sendcount)
 41839  004BB4  5051               	movf	_Sendcount,w,c	;volatile
 41840  004BB6  B4D8               	btfsc	status,2,c
 41841  004BB8  D00F               	goto	i2l13538
 41842                           
 41843                           ; BSR set to: 0
 41844                           ;interrupts.c: 422: {
 41845                           ;interrupts.c: 424: RFcodePlace = 1;
 41846  004BBA  0E01               	movlw	1
 41847  004BBC  0100               	movlb	0	; () banked
 41848  004BBE  6FFB               	movwf	_RFcodePlace& (0+255),b
 41849                           
 41850                           ;interrupts.c: 425: RFcodeBit = 0;
 41851  004BC0  0E00               	movlw	0
 41852  004BC2  6E50               	movwf	_RFcodeBit,c
 41853                           
 41854                           ; BSR set to: 0
 41855                           ;interrupts.c: 426: }
 41856                           ;interrupts.c: 427: }
 41857  004BC4  D009               	goto	i2l13538
 41858  004BC6                     i2l13526:
 41859                           
 41860                           ; BSR set to: 0
 41861                           ;interrupts.c: 428: else
 41862                           ;interrupts.c: 429: {
 41863                           ;interrupts.c: 431: ResetTimer3();
 41864  004BC6  EC93  F052         	call	_ResetTimer3	;wreg free
 41865                           
 41866                           ;interrupts.c: 432: PIR2bits.TMR3IF = 0;
 41867  004BCA  92A1               	bcf	4001,1,c	;volatile
 41868                           
 41869                           ;interrupts.c: 433: Timer3_Postscaler = 0;
 41870  004BCC  0E00               	movlw	0
 41871  004BCE  6E54               	movwf	_Timer3_Postscaler,c
 41872                           
 41873                           ;interrupts.c: 434: (T3CONbits.TMR3ON = 1);
 41874  004BD0  80B1               	bsf	4017,0,c	;volatile
 41875                           
 41876                           ;interrupts.c: 435: (T2CONbits.TMR2ON = 0);
 41877  004BD2  94CA               	bcf	4042,2,c	;volatile
 41878  004BD4  D724               	goto	L30
 41879                           
 41880                           ; BSR set to: 0
 41881                           
 41882                           ; BSR set to: 0
 41883                           
 41884                           ; BSR set to: 0
 41885                           
 41886                           ;interrupts.c: 436: RFsendFlag = 0;
 41887  004BD6  D000               	goto	i2l13538
 41888  004BD8                     i2l13538:
 41889                           
 41890                           ;interrupts.c: 437: }
 41891                           ;interrupts.c: 438: }
 41892                           ;interrupts.c: 439: }
 41893                           ;interrupts.c: 440: if(RFsendFlag)
 41894  004BD8  0100               	movlb	0	; () banked
 41895  004BDA  51FC               	movf	_RFsendFlag& (0+255),w,b	;volatile
 41896  004BDC  B4D8               	btfsc	status,2,c
 41897  004BDE  D0C8               	goto	i2l13666
 41898                           
 41899                           ; BSR set to: 0
 41900                           ;interrupts.c: 441: {
 41901                           ;interrupts.c: 443: (T2CONbits.TMR2ON = 1);
 41902  004BE0  84CA               	bsf	4042,2,c	;volatile
 41903                           
 41904                           ; BSR set to: 0
 41905                           ;interrupts.c: 444: }
 41906                           ;interrupts.c: 445: }
 41907  004BE2  D0C6               	goto	i2l13666
 41908  004BE4                     i2l13542:
 41909                           
 41910                           ;interrupts.c: 446: else
 41911                           ;interrupts.c: 447: {
 41912                           ;interrupts.c: 449: if(Timer2_Postscaler >= RF_IR_Postscaler)
 41913  004BE4  505D               	movf	_RF_IR_Postscaler,w,c	;volatile
 41914  004BE6  5C53               	subwf	_Timer2_Postscaler,w,c
 41915  004BE8  A0D8               	btfss	status,0,c
 41916  004BEA  D0C2               	goto	i2l13666
 41917                           
 41918                           ;interrupts.c: 450: {
 41919                           ;interrupts.c: 451: Timer2_Postscaler = 0;
 41920  004BEC  0E00               	movlw	0
 41921  004BEE  6E53               	movwf	_Timer2_Postscaler,c
 41922                           
 41923                           ;interrupts.c: 452: if(IRcodePlace == 7)
 41924  004BF0  0E07               	movlw	7
 41925  004BF2  0100               	movlb	0	; () banked
 41926  004BF4  19FE               	xorwf	_IRcodePlace& (0+255),w,b
 41927  004BF6  A4D8               	btfss	status,2,c
 41928  004BF8  D00D               	goto	i2l13558
 41929                           
 41930                           ; BSR set to: 0
 41931                           ;interrupts.c: 453: {
 41932                           ;interrupts.c: 454: IRbitPosition = 32;
 41933  004BFA  0E20               	movlw	32
 41934  004BFC  6E5B               	movwf	_IRbitPosition,c	;volatile
 41935                           
 41936                           ;interrupts.c: 455: (IRmod = 0);
 41937  004BFE  0E00               	movlw	0
 41938  004C00  6E4B               	movwf	_IRmod,c	;volatile
 41939                           
 41940                           ; BSR set to: 0
 41941                           ;interrupts.c: 456: (LATC &= ~0x08);
 41942  004C02  968B               	bcf	3979,3,c	;volatile
 41943                           
 41944                           ; BSR set to: 0
 41945                           ;interrupts.c: 457: IRcodePlace = 8;
 41946  004C04  0E08               	movlw	8
 41947  004C06  0100               	movlb	0	; () banked
 41948  004C08  6FFE               	movwf	_IRcodePlace& (0+255),b
 41949                           
 41950                           ; BSR set to: 0
 41951                           ;interrupts.c: 458: RF_IR_Postscaler = 4;
 41952  004C0A  0E04               	movlw	4
 41953  004C0C  6E5D               	movwf	_RF_IR_Postscaler,c	;volatile
 41954                           
 41955                           ; BSR set to: 0
 41956                           ;interrupts.c: 459: (PR2 = 75);
 41957  004C0E  0E4B               	movlw	75
 41958  004C10  6ECB               	movwf	4043,c	;volatile
 41959                           
 41960                           ;interrupts.c: 460: }
 41961  004C12  D0AE               	goto	i2l13666
 41962  004C14                     i2l13558:
 41963                           
 41964                           ; BSR set to: 0
 41965                           ;interrupts.c: 461: else if(IRcodePlace == 8 || IRcodePlace == 10)
 41966  004C14  0E08               	movlw	8
 41967  004C16  0100               	movlb	0	; () banked
 41968  004C18  19FE               	xorwf	_IRcodePlace& (0+255),w,b
 41969  004C1A  B4D8               	btfsc	status,2,c
 41970  004C1C  D005               	goto	i2l13562
 41971                           
 41972                           ; BSR set to: 0
 41973  004C1E  0E0A               	movlw	10
 41974  004C20  0100               	movlb	0	; () banked
 41975  004C22  19FE               	xorwf	_IRcodePlace& (0+255),w,b
 41976  004C24  A4D8               	btfss	status,2,c
 41977  004C26  D012               	goto	i2l13572
 41978  004C28                     i2l13562:
 41979                           
 41980                           ; BSR set to: 0
 41981                           ;interrupts.c: 462: {
 41982                           ;interrupts.c: 463: (IRmod = 1);
 41983  004C28  0E01               	movlw	1
 41984  004C2A  6E4B               	movwf	_IRmod,c	;volatile
 41985                           
 41986                           ;interrupts.c: 464: RF_IR_Postscaler = 1;
 41987  004C2C  0E01               	movlw	1
 41988  004C2E  6E5D               	movwf	_RF_IR_Postscaler,c	;volatile
 41989                           
 41990                           ; BSR set to: 0
 41991                           ;interrupts.c: 465: IRbit = (unsigned char) (IRsendCode & 0x01);
 41992  004C30  0103               	movlb	3	; () banked
 41993  004C32  5114               	movf	_IRsendCode& (0+255),w,b
 41994  004C34  0B01               	andlw	1
 41995  004C36  6E49               	movwf	_IRbit,c
 41996                           
 41997                           ; BSR set to: 3
 41998                           ;interrupts.c: 466: IRsendCode >>= 1;
 41999  004C38  0103               	movlb	3	; () banked
 42000  004C3A  90D8               	bcf	status,0,c
 42001  004C3C  3317               	rrcf	(_IRsendCode+3)& (0+255),f,b
 42002  004C3E  3316               	rrcf	(_IRsendCode+2)& (0+255),f,b
 42003  004C40  3315               	rrcf	(_IRsendCode+1)& (0+255),f,b
 42004  004C42  3314               	rrcf	_IRsendCode& (0+255),f,b
 42005                           
 42006                           ; BSR set to: 3
 42007                           ;interrupts.c: 467: (PR2 = 38);
 42008  004C44  0E26               	movlw	38
 42009  004C46  6ECB               	movwf	4043,c	;volatile
 42010                           
 42011                           ; BSR set to: 3
 42012                           ;interrupts.c: 468: IRcodePlace = 9;
 42013  004C48  0E09               	movlw	9
 42014  004C4A  D07C               	goto	L40
 42015  004C4C                     i2l13572:
 42016                           
 42017                           ; BSR set to: 0
 42018                           ;interrupts.c: 470: else if(IRcodePlace == 9)
 42019  004C4C  0E09               	movlw	9
 42020  004C4E  0100               	movlb	0	; () banked
 42021  004C50  19FE               	xorwf	_IRcodePlace& (0+255),w,b
 42022  004C52  A4D8               	btfss	status,2,c
 42023  004C54  D016               	goto	i2l13594
 42024                           
 42025                           ; BSR set to: 0
 42026                           ;interrupts.c: 471: {
 42027                           ;interrupts.c: 472: (IRmod = 0);
 42028  004C56  0E00               	movlw	0
 42029  004C58  6E4B               	movwf	_IRmod,c	;volatile
 42030                           
 42031                           ; BSR set to: 0
 42032                           ;interrupts.c: 473: (LATC &= ~0x08);
 42033  004C5A  968B               	bcf	3979,3,c	;volatile
 42034                           
 42035                           ; BSR set to: 0
 42036                           ;interrupts.c: 474: RF_IR_Postscaler = 1;
 42037  004C5C  0E01               	movlw	1
 42038  004C5E  6E5D               	movwf	_RF_IR_Postscaler,c	;volatile
 42039                           
 42040                           ; BSR set to: 0
 42041                           ;interrupts.c: 475: if(IRbit)
 42042  004C60  5049               	movf	_IRbit,w,c
 42043  004C62  B4D8               	btfsc	status,2,c
 42044  004C64  D002               	goto	i2l13584
 42045                           
 42046                           ; BSR set to: 0
 42047                           ;interrupts.c: 476: {
 42048                           ;interrupts.c: 478: (PR2 = 113);
 42049  004C66  0E71               	movlw	113
 42050  004C68  D001               	goto	L32
 42051  004C6A                     i2l13584:
 42052                           
 42053                           ; BSR set to: 0
 42054                           ;interrupts.c: 480: else
 42055                           ;interrupts.c: 481: {
 42056                           ;interrupts.c: 483: (PR2 = 38);
 42057  004C6A  0E26               	movlw	38
 42058  004C6C                     L32:
 42059  004C6C  6ECB               	movwf	4043,c	;volatile
 42060  004C6E  D000               	goto	i2l13586
 42061  004C70                     i2l13586:
 42062                           
 42063                           ; BSR set to: 0
 42064                           ;interrupts.c: 484: }
 42065                           ;interrupts.c: 485: IRbitPosition--;
 42066  004C70  065B               	decf	_IRbitPosition,f,c	;volatile
 42067                           
 42068                           ; BSR set to: 0
 42069                           ;interrupts.c: 486: if(IRbitPosition == 0)
 42070  004C72  505B               	movf	_IRbitPosition,w,c	;volatile
 42071  004C74  A4D8               	btfss	status,2,c
 42072  004C76  D002               	goto	i2l13592
 42073                           
 42074                           ; BSR set to: 0
 42075                           ;interrupts.c: 487: {
 42076                           ;interrupts.c: 488: IRcodePlace = 11;
 42077  004C78  0E0B               	movlw	11
 42078  004C7A  D064               	goto	L40
 42079  004C7C                     i2l13592:
 42080                           
 42081                           ; BSR set to: 0
 42082                           ;interrupts.c: 490: else
 42083                           ;interrupts.c: 491: {
 42084                           ;interrupts.c: 492: IRcodePlace = 10;
 42085  004C7C  0E0A               	movlw	10
 42086  004C7E  D062               	goto	L40
 42087                           
 42088                           ; BSR set to: 0
 42089                           ;interrupts.c: 493: }
 42090                           ;interrupts.c: 494: }
 42091  004C80  D077               	goto	i2l13666
 42092  004C82                     i2l13594:
 42093                           
 42094                           ; BSR set to: 0
 42095                           ;interrupts.c: 495: else if(IRcodePlace == 11)
 42096  004C82  0E0B               	movlw	11
 42097  004C84  0100               	movlb	0	; () banked
 42098  004C86  19FE               	xorwf	_IRcodePlace& (0+255),w,b
 42099  004C88  A4D8               	btfss	status,2,c
 42100  004C8A  D006               	goto	i2l13598
 42101                           
 42102                           ; BSR set to: 0
 42103                           ;interrupts.c: 496: {
 42104                           ;interrupts.c: 497: (IRmod = 1);
 42105  004C8C  0E01               	movlw	1
 42106  004C8E  6E4B               	movwf	_IRmod,c	;volatile
 42107                           
 42108                           ;interrupts.c: 498: (PR2 = 38);
 42109  004C90  0E26               	movlw	38
 42110  004C92  6ECB               	movwf	4043,c	;volatile
 42111                           
 42112                           ;interrupts.c: 499: IRcodePlace = 12;
 42113  004C94  0E0C               	movlw	12
 42114  004C96  D056               	goto	L40
 42115  004C98                     i2l13598:
 42116                           
 42117                           ; BSR set to: 0
 42118                           ;interrupts.c: 501: else if(IRcodePlace == 12)
 42119  004C98  0E0C               	movlw	12
 42120  004C9A  0100               	movlb	0	; () banked
 42121  004C9C  19FE               	xorwf	_IRcodePlace& (0+255),w,b
 42122  004C9E  A4D8               	btfss	status,2,c
 42123  004CA0  D011               	goto	i2l13612
 42124                           
 42125                           ; BSR set to: 0
 42126                           ;interrupts.c: 502: {
 42127                           ;interrupts.c: 503: (IRmod = 0);
 42128  004CA2  0E00               	movlw	0
 42129  004CA4  6E4B               	movwf	_IRmod,c	;volatile
 42130                           
 42131                           ; BSR set to: 0
 42132                           ;interrupts.c: 504: (LATC &= ~0x08);
 42133  004CA6  968B               	bcf	3979,3,c	;volatile
 42134                           
 42135                           ; BSR set to: 0
 42136                           ;interrupts.c: 505: if(!IRrepeatflag)
 42137  004CA8  504E               	movf	_IRrepeatflag,w,c
 42138  004CAA  A4D8               	btfss	status,2,c
 42139  004CAC  D004               	goto	i2l13610
 42140                           
 42141                           ; BSR set to: 0
 42142                           ;interrupts.c: 506: {
 42143                           ;interrupts.c: 508: IRcodePlace = 13;
 42144  004CAE  0E0D               	movlw	13
 42145  004CB0  0100               	movlb	0	; () banked
 42146  004CB2  6FFE               	movwf	_IRcodePlace& (0+255),b
 42147  004CB4  D05A               	goto	i2l13662
 42148  004CB6                     i2l13610:
 42149                           
 42150                           ; BSR set to: 0
 42151                           ;interrupts.c: 512: else
 42152                           ;interrupts.c: 513: {
 42153                           ;interrupts.c: 514: RF_IR_Postscaler = 11;
 42154  004CB6  0E0B               	movlw	11
 42155  004CB8  6E5D               	movwf	_RF_IR_Postscaler,c	;volatile
 42156                           
 42157                           ;interrupts.c: 515: (PR2 = 242);
 42158  004CBA  0EF2               	movlw	242
 42159  004CBC  6ECB               	movwf	4043,c	;volatile
 42160                           
 42161                           ;interrupts.c: 516: IRcodePlace = 14;
 42162  004CBE  0E0E               	movlw	14
 42163  004CC0  D041               	goto	L40
 42164                           
 42165                           ; BSR set to: 0
 42166                           ;interrupts.c: 517: }
 42167                           ;interrupts.c: 518: }
 42168  004CC2  D056               	goto	i2l13666
 42169  004CC4                     i2l13612:
 42170                           
 42171                           ; BSR set to: 0
 42172                           ;interrupts.c: 519: else if(IRcodePlace == 14 || IRcodePlace == 18)
 42173  004CC4  0E0E               	movlw	14
 42174  004CC6  0100               	movlb	0	; () banked
 42175  004CC8  19FE               	xorwf	_IRcodePlace& (0+255),w,b
 42176  004CCA  B4D8               	btfsc	status,2,c
 42177  004CCC  D005               	goto	i2l13616
 42178                           
 42179                           ; BSR set to: 0
 42180  004CCE  0E12               	movlw	18
 42181  004CD0  0100               	movlb	0	; () banked
 42182  004CD2  19FE               	xorwf	_IRcodePlace& (0+255),w,b
 42183  004CD4  A4D8               	btfss	status,2,c
 42184  004CD6  D008               	goto	i2l13618
 42185  004CD8                     i2l13616:
 42186                           
 42187                           ; BSR set to: 0
 42188                           ;interrupts.c: 520: {
 42189                           ;interrupts.c: 521: (IRmod = 1);
 42190  004CD8  0E01               	movlw	1
 42191  004CDA  6E4B               	movwf	_IRmod,c	;volatile
 42192                           
 42193                           ;interrupts.c: 522: RF_IR_Postscaler = 4;
 42194  004CDC  0E04               	movlw	4
 42195  004CDE  6E5D               	movwf	_RF_IR_Postscaler,c	;volatile
 42196                           
 42197                           ;interrupts.c: 523: (PR2 = 150);
 42198  004CE0  0E96               	movlw	150
 42199  004CE2  6ECB               	movwf	4043,c	;volatile
 42200                           
 42201                           ;interrupts.c: 524: IRcodePlace = 15;
 42202  004CE4  0E0F               	movlw	15
 42203  004CE6  D02E               	goto	L40
 42204  004CE8                     i2l13618:
 42205                           
 42206                           ; BSR set to: 0
 42207                           ;interrupts.c: 526: else if(IRcodePlace == 15)
 42208  004CE8  0E0F               	movlw	15
 42209  004CEA  0100               	movlb	0	; () banked
 42210  004CEC  19FE               	xorwf	_IRcodePlace& (0+255),w,b
 42211  004CEE  A4D8               	btfss	status,2,c
 42212  004CF0  D009               	goto	i2l13630
 42213                           
 42214                           ; BSR set to: 0
 42215                           ;interrupts.c: 527: {
 42216                           ;interrupts.c: 528: (IRmod = 0);
 42217  004CF2  0E00               	movlw	0
 42218  004CF4  6E4B               	movwf	_IRmod,c	;volatile
 42219                           
 42220                           ; BSR set to: 0
 42221                           ;interrupts.c: 529: (LATC &= ~0x08);
 42222  004CF6  968B               	bcf	3979,3,c	;volatile
 42223                           
 42224                           ; BSR set to: 0
 42225                           ;interrupts.c: 530: RF_IR_Postscaler = 1;
 42226  004CF8  0E01               	movlw	1
 42227  004CFA  6E5D               	movwf	_RF_IR_Postscaler,c	;volatile
 42228                           
 42229                           ; BSR set to: 0
 42230                           ;interrupts.c: 531: (PR2 = 149);
 42231  004CFC  0E95               	movlw	149
 42232  004CFE  6ECB               	movwf	4043,c	;volatile
 42233                           
 42234                           ; BSR set to: 0
 42235                           ;interrupts.c: 532: IRcodePlace = 16;
 42236  004D00  0E10               	movlw	16
 42237  004D02  D020               	goto	L40
 42238  004D04                     i2l13630:
 42239                           
 42240                           ; BSR set to: 0
 42241                           ;interrupts.c: 534: else if(IRcodePlace == 16)
 42242  004D04  0E10               	movlw	16
 42243  004D06  0100               	movlb	0	; () banked
 42244  004D08  19FE               	xorwf	_IRcodePlace& (0+255),w,b
 42245  004D0A  A4D8               	btfss	status,2,c
 42246  004D0C  D008               	goto	i2l13634
 42247                           
 42248                           ; BSR set to: 0
 42249                           ;interrupts.c: 535: {
 42250                           ;interrupts.c: 536: (IRmod = 1);
 42251  004D0E  0E01               	movlw	1
 42252  004D10  6E4B               	movwf	_IRmod,c	;volatile
 42253                           
 42254                           ;interrupts.c: 537: RF_IR_Postscaler = 1;
 42255  004D12  0E01               	movlw	1
 42256  004D14  6E5D               	movwf	_RF_IR_Postscaler,c	;volatile
 42257                           
 42258                           ;interrupts.c: 538: (PR2 = 38);
 42259  004D16  0E26               	movlw	38
 42260  004D18  6ECB               	movwf	4043,c	;volatile
 42261                           
 42262                           ;interrupts.c: 539: IRcodePlace = 17;
 42263  004D1A  0E11               	movlw	17
 42264  004D1C  D013               	goto	L40
 42265  004D1E                     i2l13634:
 42266                           
 42267                           ; BSR set to: 0
 42268                           ;interrupts.c: 541: else if(IRcodePlace == 17)
 42269  004D1E  0E11               	movlw	17
 42270  004D20  0100               	movlb	0	; () banked
 42271  004D22  19FE               	xorwf	_IRcodePlace& (0+255),w,b
 42272  004D24  A4D8               	btfss	status,2,c
 42273  004D26  D011               	goto	i2l13650
 42274                           
 42275                           ; BSR set to: 0
 42276                           ;interrupts.c: 542: {
 42277                           ;interrupts.c: 543: (IRmod = 0);
 42278  004D28  0E00               	movlw	0
 42279  004D2A  6E4B               	movwf	_IRmod,c	;volatile
 42280                           
 42281                           ; BSR set to: 0
 42282                           ;interrupts.c: 544: (LATC &= ~0x08);
 42283  004D2C  968B               	bcf	3979,3,c	;volatile
 42284                           
 42285                           ; BSR set to: 0
 42286                           ;interrupts.c: 545: RF_IR_Postscaler = 26;
 42287  004D2E  0E1A               	movlw	26
 42288  004D30  6E5D               	movwf	_RF_IR_Postscaler,c	;volatile
 42289                           
 42290                           ; BSR set to: 0
 42291                           ;interrupts.c: 546: (PR2 = 246);
 42292  004D32  0EF6               	movlw	246
 42293  004D34  6ECB               	movwf	4043,c	;volatile
 42294                           
 42295                           ; BSR set to: 0
 42296                           ;interrupts.c: 547: IRrepeatAmount--;
 42297  004D36  064D               	decf	_IRrepeatAmount,f,c
 42298                           
 42299                           ;interrupts.c: 548: if(IRrepeatAmount)
 42300  004D38  504D               	movf	_IRrepeatAmount,w,c
 42301  004D3A  B4D8               	btfsc	status,2,c
 42302  004D3C  D002               	goto	i2l13648
 42303                           
 42304                           ; BSR set to: 0
 42305                           ;interrupts.c: 549: {
 42306                           ;interrupts.c: 550: IRcodePlace = 18;
 42307  004D3E  0E12               	movlw	18
 42308  004D40  D001               	goto	L40
 42309  004D42                     i2l13648:
 42310                           
 42311                           ; BSR set to: 0
 42312                           ;interrupts.c: 552: else
 42313                           ;interrupts.c: 553: {
 42314                           ;interrupts.c: 554: IRcodePlace = 13;
 42315  004D42  0E0D               	movlw	13
 42316  004D44                     L40:
 42317  004D44  0100               	movlb	0	; () banked
 42318  004D46  6FFE               	movwf	_IRcodePlace& (0+255),b
 42319                           
 42320                           ; BSR set to: 0
 42321                           ;interrupts.c: 555: }
 42322                           ;interrupts.c: 556: }
 42323  004D48  D013               	goto	i2l13666
 42324  004D4A                     i2l13650:
 42325                           
 42326                           ; BSR set to: 0
 42327                           ;interrupts.c: 557: else if(IRcodePlace == 13)
 42328  004D4A  0E0D               	movlw	13
 42329  004D4C  0100               	movlb	0	; () banked
 42330  004D4E  19FE               	xorwf	_IRcodePlace& (0+255),w,b
 42331  004D50  A4D8               	btfss	status,2,c
 42332  004D52  D005               	goto	i2l13656
 42333  004D54  D00A               	goto	i2l13662
 42334  004D56                     i2l13654:
 42335                           
 42336                           ; BSR set to: 0
 42337                           ;interrupts.c: 561: Sent = 1;
 42338  004D56  0E01               	movlw	1
 42339  004D58  0100               	movlb	0	; () banked
 42340  004D5A  6FFF               	movwf	_Sent& (0+255),b	;volatile
 42341                           
 42342                           ;interrupts.c: 562: }
 42343  004D5C  D009               	goto	i2l13666
 42344  004D5E                     i2l13656:
 42345                           
 42346                           ; BSR set to: 0
 42347                           ;interrupts.c: 563: else
 42348                           ;interrupts.c: 564: {
 42349                           ;interrupts.c: 566: (IRmod = 0);
 42350  004D5E  0E00               	movlw	0
 42351  004D60  6E4B               	movwf	_IRmod,c	;volatile
 42352                           
 42353                           ; BSR set to: 0
 42354                           ;interrupts.c: 567: (LATC &= ~0x08);
 42355  004D62  968B               	bcf	3979,3,c	;volatile
 42356                           
 42357                           ; BSR set to: 0
 42358                           ;interrupts.c: 568: IRcodePlace = 0;
 42359  004D64  0E00               	movlw	0
 42360  004D66  0100               	movlb	0	; () banked
 42361  004D68  6FFE               	movwf	_IRcodePlace& (0+255),b
 42362  004D6A                     i2l13662:
 42363                           
 42364                           ; BSR set to: 0
 42365                           ;interrupts.c: 569: (T2CONbits.TMR2ON = 0);
 42366  004D6A  94CA               	bcf	4042,2,c	;volatile
 42367  004D6C  D7F4               	goto	i2l13654
 42368                           
 42369                           ; BSR set to: 0
 42370                           
 42371                           ; BSR set to: 0
 42372                           
 42373                           ; BSR set to: 0
 42374                           
 42375                           ; BSR set to: 0
 42376                           
 42377                           ; BSR set to: 0
 42378                           
 42379                           ; BSR set to: 0
 42380                           
 42381                           ; BSR set to: 0
 42382                           
 42383                           ; BSR set to: 0
 42384                           
 42385                           ; BSR set to: 0
 42386                           
 42387                           ; BSR set to: 0
 42388                           
 42389                           ; BSR set to: 0
 42390                           
 42391                           ; BSR set to: 0
 42392                           ;interrupts.c: 570: Sent = 1;
 42393  004D6E  D000               	goto	i2l13666
 42394  004D70                     i2l13666:
 42395                           
 42396                           ;interrupts.c: 571: }
 42397                           ;interrupts.c: 572: }
 42398                           ;interrupts.c: 573: }
 42399                           ;interrupts.c: 574: PIR1bits.TMR2IF = 0;
 42400  004D70  929E               	bcf	3998,1,c	;volatile
 42401                           
 42402                           ;interrupts.c: 575: }
 42403  004D72  D013               	goto	i2l1343
 42404  004D74                     i2l1348:
 42405                           
 42406                           ;interrupts.c: 576: else if(PIR2bits.TMR3IF)
 42407  004D74  A2A1               	btfss	4001,1,c	;volatile
 42408  004D76  D00F               	goto	i2l1451
 42409                           
 42410                           ;interrupts.c: 577: {
 42411                           ;interrupts.c: 578: (T3CONbits.TMR3ON = 0);
 42412  004D78  90B1               	bcf	4017,0,c	;volatile
 42413                           
 42414                           ;interrupts.c: 579: if(Timer3_Postscaler < 3)
 42415  004D7A  0E03               	movlw	3
 42416  004D7C  6054               	cpfslt	_Timer3_Postscaler,c
 42417  004D7E  D005               	goto	i2l13678
 42418                           
 42419                           ;interrupts.c: 580: {
 42420                           ;interrupts.c: 581: ResetTimer3();
 42421  004D80  EC93  F052         	call	_ResetTimer3	;wreg free
 42422                           
 42423                           ;interrupts.c: 582: (T3CONbits.TMR3ON = 1);
 42424  004D84  80B1               	bsf	4017,0,c	;volatile
 42425                           
 42426                           ;interrupts.c: 583: Timer3_Postscaler++;
 42427  004D86  2A54               	incf	_Timer3_Postscaler,f,c
 42428                           
 42429                           ;interrupts.c: 584: }
 42430  004D88  D004               	goto	i2l13680
 42431  004D8A                     i2l13678:
 42432                           
 42433                           ;interrupts.c: 585: else
 42434                           ;interrupts.c: 586: {
 42435                           ;interrupts.c: 591: Sent = 1;
 42436  004D8A  0E01               	movlw	1
 42437  004D8C  0100               	movlb	0	; () banked
 42438  004D8E  6FFF               	movwf	_Sent& (0+255),b	;volatile
 42439  004D90  D000               	goto	i2l13680
 42440  004D92                     i2l13680:
 42441                           
 42442                           ;interrupts.c: 592: }
 42443                           ;interrupts.c: 593: PIR2bits.TMR3IF = 0;
 42444  004D92  92A1               	bcf	4001,1,c	;volatile
 42445                           
 42446                           ;interrupts.c: 594: }
 42447  004D94  D002               	goto	i2l1343
 42448  004D96                     i2l1451:
 42449                           
 42450                           ;interrupts.c: 595: else
 42451                           ;interrupts.c: 596: {
 42452                           ;interrupts.c: 598: __nop();
 42453  004D96  F000               	nop	
 42454  004D98  D000               	goto	i2l1343
 42455  004D9A                     i2l1343:
 42456                           
 42457                           ;interrupts.c: 599: }
 42458                           ;interrupts.c: 600: INTCONbits.GIE = 1;
 42459  004D9A  8EF2               	bsf	intcon,7,c	;volatile
 42460  004D9C  C03F  FFF5         	movff	??_high_isr+17,tablat
 42461  004DA0  C03E  FFF8         	movff	??_high_isr+16,tblptru
 42462  004DA4  C03D  FFF7         	movff	??_high_isr+15,tblptrh
 42463  004DA8  C03C  FFF6         	movff	??_high_isr+14,tblptrl
 42464  004DAC  C03B  FFF4         	movff	??_high_isr+13,prodh
 42465  004DB0  C03A  FFF3         	movff	??_high_isr+12,prodl
 42466  004DB4  C039  FFDA         	movff	??_high_isr+11,fsr2h
 42467  004DB8  C038  FFD9         	movff	??_high_isr+10,fsr2l
 42468  004DBC  C037  FFE2         	movff	??_high_isr+9,fsr1h
 42469  004DC0  C036  FFE1         	movff	??_high_isr+8,fsr1l
 42470  004DC4  C035  FFEA         	movff	??_high_isr+7,fsr0h
 42471  004DC8  C034  FFE9         	movff	??_high_isr+6,fsr0l
 42472  004DCC  C033  FFFB         	movff	??_high_isr+5,pclatu
 42473  004DD0  C032  FFFA         	movff	??_high_isr+4,pclath
 42474  004DD4  0011               	retfie		f
 42475  004DD6                     __end_of_high_isr:
 42476                           	opt stack 0
 42477                           pclatu	equ	0xFFB
 42478                           pclath	equ	0xFFA
 42479                           tblptru	equ	0xFF8
 42480                           tblptrh	equ	0xFF7
 42481                           tblptrl	equ	0xFF6
 42482                           tablat	equ	0xFF5
 42483                           prodh	equ	0xFF4
 42484                           prodl	equ	0xFF3
 42485                           intcon	equ	0xFF2
 42486                           intcon2	equ	0xFF1
 42487                           indf0	equ	0xFEF
 42488                           postinc0	equ	0xFEE
 42489                           plusw0	equ	0xFEB
 42490                           fsr0h	equ	0xFEA
 42491                           fsr0l	equ	0xFE9
 42492                           wreg	equ	0xFE8
 42493                           indf1	equ	0xFE7
 42494                           postdec1	equ	0xFE5
 42495                           fsr1h	equ	0xFE2
 42496                           fsr1l	equ	0xFE1
 42497                           bsr	equ	0xFE0
 42498                           indf2	equ	0xFDF
 42499                           postinc2	equ	0xFDE
 42500                           postdec2	equ	0xFDD
 42501                           plusw2	equ	0xFDB
 42502                           fsr2h	equ	0xFDA
 42503                           fsr2l	equ	0xFD9
 42504                           status	equ	0xFD8
 42505                           
 42506 ;; *************** function i2_cleanBuffer16bit *****************
 42507 ;; Defined at:
 42508 ;;		line 141 in file "MISC.c"
 42509 ;; Parameters:    Size  Location     Type
 42510 ;;  data            2   31[COMRAM] PTR unsigned int 
 42511 ;;		 -> IRRawCode(200), 
 42512 ;;  count           2   33[COMRAM] int 
 42513 ;; Auto vars:     Size  Location     Type
 42514 ;;  cleanBuffer1    1   38[COMRAM] unsigned char 
 42515 ;; Return value:  Size  Location     Type
 42516 ;;		None               void
 42517 ;; Registers used:
 42518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42519 ;; Tracked objects:
 42520 ;;		On entry : 0/0
 42521 ;;		On exit  : 0/0
 42522 ;;		Unchanged: 0/0
 42523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42524 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42526 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42527 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42528 ;;Total ram usage:        8 bytes
 42529 ;; Hardware stack levels used:    1
 42530 ;; This function calls:
 42531 ;;		Nothing
 42532 ;; This function is called by:
 42533 ;;		_high_isr
 42534 ;; This function uses a non-reentrant model
 42535 ;;
 42536                           
 42537                           	psect	text118
 42538  009F4C                     __ptext118:
 42539                           	opt stack 0
 42540  009F4C                     i2_cleanBuffer16bit:
 42541                           	opt stack 17
 42542                           
 42543                           ;MISC.c: 143: unsigned char i=0;
 42544                           
 42545                           ;incstack = 0
 42546  009F4C  0E00               	movlw	0
 42547  009F4E  6E27               	movwf	i2cleanBuffer16bit@i,c
 42548                           
 42549                           ;MISC.c: 144: for(i=0; i<count;i++)
 42550  009F50  0E00               	movlw	0
 42551  009F52  6E27               	movwf	i2cleanBuffer16bit@i,c
 42552  009F54  D00E               	goto	i2l12954
 42553  009F56                     i2l12950:
 42554                           
 42555                           ;MISC.c: 145: {
 42556                           ;MISC.c: 146: data[i]= 0;
 42557  009F56  5027               	movf	i2cleanBuffer16bit@i,w,c
 42558  009F58  0D02               	mullw	2
 42559  009F5A  50F3               	movf	prodl,w,c
 42560  009F5C  2420               	addwf	i2cleanBuffer16bit@data,w,c
 42561  009F5E  6ED9               	movwf	fsr2l,c
 42562  009F60  50F4               	movf	prodh,w,c
 42563  009F62  2021               	addwfc	i2cleanBuffer16bit@data+1,w,c
 42564  009F64  6EDA               	movwf	fsr2h,c
 42565  009F66  0E00               	movlw	0
 42566  009F68  6EDE               	movwf	postinc2,c
 42567  009F6A  0E00               	movlw	0
 42568  009F6C  6EDD               	movwf	postdec2,c
 42569  009F6E  2A27               	incf	i2cleanBuffer16bit@i,f,c
 42570  009F70  D000               	goto	i2l12954
 42571  009F72                     i2l12954:
 42572  009F72  5027               	movf	i2cleanBuffer16bit@i,w,c
 42573  009F74  6E24               	movwf	??i2_cleanBuffer16bit& (0+255),c
 42574  009F76  6A25               	clrf	(??i2_cleanBuffer16bit+1)& (0+255),c
 42575  009F78  5022               	movf	i2cleanBuffer16bit@count,w,c
 42576  009F7A  5C24               	subwf	??i2_cleanBuffer16bit,w,c
 42577  009F7C  5025               	movf	??i2_cleanBuffer16bit+1,w,c
 42578  009F7E  0A80               	xorlw	128
 42579  009F80  6E26               	movwf	(??i2_cleanBuffer16bit+2)& (0+255),c
 42580  009F82  5023               	movf	i2cleanBuffer16bit@count+1,w,c
 42581  009F84  0A80               	xorlw	128
 42582  009F86  5826               	subwfb	(??i2_cleanBuffer16bit+2)& (0+255),w,c
 42583  009F88  A0D8               	btfss	status,0,c
 42584  009F8A  D7E5               	goto	i2l12950
 42585  009F8C  0012               	return		;funcret
 42586  009F8E                     __end_ofi2_cleanBuffer16bit:
 42587                           	opt stack 0
 42588                           pclatu	equ	0xFFB
 42589                           pclath	equ	0xFFA
 42590                           tblptru	equ	0xFF8
 42591                           tblptrh	equ	0xFF7
 42592                           tblptrl	equ	0xFF6
 42593                           tablat	equ	0xFF5
 42594                           prodh	equ	0xFF4
 42595                           prodl	equ	0xFF3
 42596                           intcon	equ	0xFF2
 42597                           intcon2	equ	0xFF1
 42598                           indf0	equ	0xFEF
 42599                           postinc0	equ	0xFEE
 42600                           plusw0	equ	0xFEB
 42601                           fsr0h	equ	0xFEA
 42602                           fsr0l	equ	0xFE9
 42603                           wreg	equ	0xFE8
 42604                           indf1	equ	0xFE7
 42605                           postdec1	equ	0xFE5
 42606                           fsr1h	equ	0xFE2
 42607                           fsr1l	equ	0xFE1
 42608                           bsr	equ	0xFE0
 42609                           indf2	equ	0xFDF
 42610                           postinc2	equ	0xFDE
 42611                           postdec2	equ	0xFDD
 42612                           plusw2	equ	0xFDB
 42613                           fsr2h	equ	0xFDA
 42614                           fsr2l	equ	0xFD9
 42615                           status	equ	0xFD8
 42616                           
 42617 ;; *************** function i2_ResetTimer0 *****************
 42618 ;; Defined at:
 42619 ;;		line 79 in file "Timer.c"
 42620 ;; Parameters:    Size  Location     Type
 42621 ;;		None
 42622 ;; Auto vars:     Size  Location     Type
 42623 ;;		None
 42624 ;; Return value:  Size  Location     Type
 42625 ;;		None               void
 42626 ;; Registers used:
 42627 ;;		wreg, status,2
 42628 ;; Tracked objects:
 42629 ;;		On entry : 0/0
 42630 ;;		On exit  : 0/0
 42631 ;;		Unchanged: 0/0
 42632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42637 ;;Total ram usage:        0 bytes
 42638 ;; Hardware stack levels used:    1
 42639 ;; This function calls:
 42640 ;;		Nothing
 42641 ;; This function is called by:
 42642 ;;		_high_isr
 42643 ;; This function uses a non-reentrant model
 42644 ;;
 42645                           
 42646                           	psect	text119
 42647  00A512                     __ptext119:
 42648                           	opt stack 0
 42649  00A512                     i2_ResetTimer0:
 42650                           	opt stack 17
 42651                           
 42652                           ;Timer.c: 85: TMR0H = 0;
 42653                           
 42654                           ;incstack = 0
 42655  00A512  0E00               	movlw	0
 42656  00A514  6ED7               	movwf	4055,c	;volatile
 42657                           
 42658                           ;Timer.c: 86: TMR0L = 2;
 42659  00A516  0E02               	movlw	2
 42660  00A518  6ED6               	movwf	4054,c	;volatile
 42661  00A51A  0012               	return		;funcret
 42662  00A51C                     __end_ofi2_ResetTimer0:
 42663                           	opt stack 0
 42664                           pclatu	equ	0xFFB
 42665                           pclath	equ	0xFFA
 42666                           tblptru	equ	0xFF8
 42667                           tblptrh	equ	0xFF7
 42668                           tblptrl	equ	0xFF6
 42669                           tablat	equ	0xFF5
 42670                           prodh	equ	0xFF4
 42671                           prodl	equ	0xFF3
 42672                           intcon	equ	0xFF2
 42673                           intcon2	equ	0xFF1
 42674                           indf0	equ	0xFEF
 42675                           postinc0	equ	0xFEE
 42676                           plusw0	equ	0xFEB
 42677                           fsr0h	equ	0xFEA
 42678                           fsr0l	equ	0xFE9
 42679                           wreg	equ	0xFE8
 42680                           indf1	equ	0xFE7
 42681                           postdec1	equ	0xFE5
 42682                           fsr1h	equ	0xFE2
 42683                           fsr1l	equ	0xFE1
 42684                           bsr	equ	0xFE0
 42685                           indf2	equ	0xFDF
 42686                           postinc2	equ	0xFDE
 42687                           postdec2	equ	0xFDD
 42688                           plusw2	equ	0xFDB
 42689                           fsr2h	equ	0xFDA
 42690                           fsr2l	equ	0xFD9
 42691                           status	equ	0xFD8
 42692                           
 42693 ;; *************** function i2_ReadIRpin *****************
 42694 ;; Defined at:
 42695 ;;		line 107 in file "IR.c"
 42696 ;; Parameters:    Size  Location     Type
 42697 ;;		None
 42698 ;; Auto vars:     Size  Location     Type
 42699 ;;		None
 42700 ;; Return value:  Size  Location     Type
 42701 ;;                  1    wreg      unsigned char 
 42702 ;; Registers used:
 42703 ;;		wreg
 42704 ;; Tracked objects:
 42705 ;;		On entry : 0/0
 42706 ;;		On exit  : 0/0
 42707 ;;		Unchanged: 0/0
 42708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42713 ;;Total ram usage:        0 bytes
 42714 ;; Hardware stack levels used:    1
 42715 ;; This function calls:
 42716 ;;		Nothing
 42717 ;; This function is called by:
 42718 ;;		_high_isr
 42719 ;; This function uses a non-reentrant model
 42720 ;;
 42721                           
 42722                           	psect	text120
 42723  00A4E6                     __ptext120:
 42724                           	opt stack 0
 42725  00A4E6                     i2_ReadIRpin:
 42726                           	opt stack 17
 42727                           
 42728                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 42729                           
 42730                           ;incstack = 0
 42731  00A4E6  A881               	btfss	3969,4,c	;volatile
 42732  00A4E8  D002               	goto	i2l12994
 42733                           
 42734                           ;IR.c: 111: {
 42735                           ;IR.c: 112: return (1);
 42736  00A4EA  0E01               	movlw	1
 42737                           
 42738                           ;IR.c: 113: }
 42739  00A4EC  0012               	return	
 42740  00A4EE                     i2l12994:
 42741                           
 42742                           ;IR.c: 114: else
 42743                           ;IR.c: 115: {
 42744                           ;IR.c: 116: return 0;
 42745  00A4EE  0E00               	movlw	0
 42746  00A4F0  0012               	return	
 42747  00A4F2  0012               	return		;funcret
 42748  00A4F4                     __end_ofi2_ReadIRpin:
 42749                           	opt stack 0
 42750                           pclatu	equ	0xFFB
 42751                           pclath	equ	0xFFA
 42752                           tblptru	equ	0xFF8
 42753                           tblptrh	equ	0xFF7
 42754                           tblptrl	equ	0xFF6
 42755                           tablat	equ	0xFF5
 42756                           prodh	equ	0xFF4
 42757                           prodl	equ	0xFF3
 42758                           intcon	equ	0xFF2
 42759                           intcon2	equ	0xFF1
 42760                           indf0	equ	0xFEF
 42761                           postinc0	equ	0xFEE
 42762                           plusw0	equ	0xFEB
 42763                           fsr0h	equ	0xFEA
 42764                           fsr0l	equ	0xFE9
 42765                           wreg	equ	0xFE8
 42766                           indf1	equ	0xFE7
 42767                           postdec1	equ	0xFE5
 42768                           fsr1h	equ	0xFE2
 42769                           fsr1l	equ	0xFE1
 42770                           bsr	equ	0xFE0
 42771                           indf2	equ	0xFDF
 42772                           postinc2	equ	0xFDE
 42773                           postdec2	equ	0xFDD
 42774                           plusw2	equ	0xFDB
 42775                           fsr2h	equ	0xFDA
 42776                           fsr2l	equ	0xFD9
 42777                           status	equ	0xFD8
 42778                           
 42779 ;; *************** function _SetTimer0 *****************
 42780 ;; Defined at:
 42781 ;;		line 94 in file "Timer.c"
 42782 ;; Parameters:    Size  Location     Type
 42783 ;;  temp            2   31[COMRAM] unsigned int 
 42784 ;; Auto vars:     Size  Location     Type
 42785 ;;		None
 42786 ;; Return value:  Size  Location     Type
 42787 ;;		None               void
 42788 ;; Registers used:
 42789 ;;		wreg, status,2
 42790 ;; Tracked objects:
 42791 ;;		On entry : 0/0
 42792 ;;		On exit  : 0/0
 42793 ;;		Unchanged: 0/0
 42794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42798 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42799 ;;Total ram usage:        2 bytes
 42800 ;; Hardware stack levels used:    1
 42801 ;; This function calls:
 42802 ;;		Nothing
 42803 ;; This function is called by:
 42804 ;;		_high_isr
 42805 ;; This function uses a non-reentrant model
 42806 ;;
 42807                           
 42808                           	psect	text121
 42809  00A51C                     __ptext121:
 42810                           	opt stack 0
 42811  00A51C                     _SetTimer0:
 42812                           	opt stack 17
 42813                           
 42814                           ;Timer.c: 100: TMR0H = (temp & 0xFF00)>> 8;;
 42815                           
 42816                           ;incstack = 0
 42817  00A51C  5021               	movf	SetTimer0@temp+1,w,c
 42818  00A51E  6ED7               	movwf	4055,c	;volatile
 42819                           
 42820                           ;Timer.c: 101: TMR0L = temp & 0xFF;
 42821  00A520  C020  FFD6         	movff	SetTimer0@temp,4054	;volatile
 42822  00A524  0012               	return		;funcret
 42823  00A526                     __end_of_SetTimer0:
 42824                           	opt stack 0
 42825                           pclatu	equ	0xFFB
 42826                           pclath	equ	0xFFA
 42827                           tblptru	equ	0xFF8
 42828                           tblptrh	equ	0xFF7
 42829                           tblptrl	equ	0xFF6
 42830                           tablat	equ	0xFF5
 42831                           prodh	equ	0xFF4
 42832                           prodl	equ	0xFF3
 42833                           intcon	equ	0xFF2
 42834                           intcon2	equ	0xFF1
 42835                           indf0	equ	0xFEF
 42836                           postinc0	equ	0xFEE
 42837                           plusw0	equ	0xFEB
 42838                           fsr0h	equ	0xFEA
 42839                           fsr0l	equ	0xFE9
 42840                           wreg	equ	0xFE8
 42841                           indf1	equ	0xFE7
 42842                           postdec1	equ	0xFE5
 42843                           fsr1h	equ	0xFE2
 42844                           fsr1l	equ	0xFE1
 42845                           bsr	equ	0xFE0
 42846                           indf2	equ	0xFDF
 42847                           postinc2	equ	0xFDE
 42848                           postdec2	equ	0xFDD
 42849                           plusw2	equ	0xFDB
 42850                           fsr2h	equ	0xFDA
 42851                           fsr2l	equ	0xFD9
 42852                           status	equ	0xFD8
 42853                           
 42854 ;; *************** function _ResetTimer3 *****************
 42855 ;; Defined at:
 42856 ;;		line 175 in file "Timer.c"
 42857 ;; Parameters:    Size  Location     Type
 42858 ;;		None
 42859 ;; Auto vars:     Size  Location     Type
 42860 ;;		None
 42861 ;; Return value:  Size  Location     Type
 42862 ;;		None               void
 42863 ;; Registers used:
 42864 ;;		wreg, status,2
 42865 ;; Tracked objects:
 42866 ;;		On entry : 0/0
 42867 ;;		On exit  : 0/0
 42868 ;;		Unchanged: 0/0
 42869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42874 ;;Total ram usage:        0 bytes
 42875 ;; Hardware stack levels used:    1
 42876 ;; This function calls:
 42877 ;;		Nothing
 42878 ;; This function is called by:
 42879 ;;		_high_isr
 42880 ;; This function uses a non-reentrant model
 42881 ;;
 42882                           
 42883                           	psect	text122
 42884  00A526                     __ptext122:
 42885                           	opt stack 0
 42886  00A526                     _ResetTimer3:
 42887                           	opt stack 17
 42888                           
 42889                           ;Timer.c: 181: TMR3H = 0;
 42890                           
 42891                           ;incstack = 0
 42892  00A526  0E00               	movlw	0
 42893  00A528  6EB3               	movwf	4019,c	;volatile
 42894                           
 42895                           ;Timer.c: 182: TMR3L = 2;
 42896  00A52A  0E02               	movlw	2
 42897  00A52C  6EB2               	movwf	4018,c	;volatile
 42898  00A52E  0012               	return		;funcret
 42899  00A530                     __end_of_ResetTimer3:
 42900                           	opt stack 0
 42901                           pclatu	equ	0xFFB
 42902                           pclath	equ	0xFFA
 42903                           tblptru	equ	0xFF8
 42904                           tblptrh	equ	0xFF7
 42905                           tblptrl	equ	0xFF6
 42906                           tablat	equ	0xFF5
 42907                           prodh	equ	0xFF4
 42908                           prodl	equ	0xFF3
 42909                           intcon	equ	0xFF2
 42910                           intcon2	equ	0xFF1
 42911                           indf0	equ	0xFEF
 42912                           postinc0	equ	0xFEE
 42913                           plusw0	equ	0xFEB
 42914                           fsr0h	equ	0xFEA
 42915                           fsr0l	equ	0xFE9
 42916                           wreg	equ	0xFE8
 42917                           indf1	equ	0xFE7
 42918                           postdec1	equ	0xFE5
 42919                           fsr1h	equ	0xFE2
 42920                           fsr1l	equ	0xFE1
 42921                           bsr	equ	0xFE0
 42922                           indf2	equ	0xFDF
 42923                           postinc2	equ	0xFDE
 42924                           postdec2	equ	0xFDD
 42925                           plusw2	equ	0xFDB
 42926                           fsr2h	equ	0xFDA
 42927                           fsr2l	equ	0xFD9
 42928                           status	equ	0xFD8
 42929                           
 42930 ;; *************** function _IRrawToNEC *****************
 42931 ;; Defined at:
 42932 ;;		line 125 in file "IR.c"
 42933 ;; Parameters:    Size  Location     Type
 42934 ;;  Raw             2   31[COMRAM] PTR unsigned int 
 42935 ;;		 -> IRRawCode(200), 
 42936 ;;  NEC             2   33[COMRAM] PTR unsigned long 
 42937 ;;		 -> IR_NEC(4), 
 42938 ;;  Invert          1   35[COMRAM] unsigned char 
 42939 ;; Auto vars:     Size  Location     Type
 42940 ;;  NECtemp         4   38[COMRAM] unsigned long 
 42941 ;;  StartBit        1   44[COMRAM] unsigned char 
 42942 ;;  i               1   43[COMRAM] unsigned char 
 42943 ;;  first           1   42[COMRAM] unsigned char 
 42944 ;; Return value:  Size  Location     Type
 42945 ;;                  1    wreg      unsigned char 
 42946 ;; Registers used:
 42947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42948 ;; Tracked objects:
 42949 ;;		On entry : 0/0
 42950 ;;		On exit  : 0/0
 42951 ;;		Unchanged: 0/0
 42952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42953 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42954 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42956 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42957 ;;Total ram usage:       14 bytes
 42958 ;; Hardware stack levels used:    1
 42959 ;; This function calls:
 42960 ;;		Nothing
 42961 ;; This function is called by:
 42962 ;;		_high_isr
 42963 ;; This function uses a non-reentrant model
 42964 ;;
 42965                           
 42966                           	psect	text123
 42967  0060B0                     __ptext123:
 42968                           	opt stack 0
 42969  0060B0                     _IRrawToNEC:
 42970                           	opt stack 17
 42971                           
 42972                           ;IR.c: 153: unsigned char i;
 42973                           ;IR.c: 154: unsigned char first =0;
 42974                           
 42975                           ;incstack = 0
 42976  0060B0  0E00               	movlw	0
 42977  0060B2  6E2B               	movwf	IRrawToNEC@first,c
 42978                           
 42979                           ;IR.c: 155: unsigned char StartBit=100;
 42980  0060B4  0E64               	movlw	100
 42981  0060B6  6E2D               	movwf	IRrawToNEC@StartBit,c
 42982                           
 42983                           ;IR.c: 156: unsigned long NECtemp = 0;
 42984  0060B8  0E00               	movlw	0
 42985  0060BA  6E27               	movwf	IRrawToNEC@NECtemp,c
 42986  0060BC  0E00               	movlw	0
 42987  0060BE  6E28               	movwf	IRrawToNEC@NECtemp+1,c
 42988  0060C0  0E00               	movlw	0
 42989  0060C2  6E29               	movwf	IRrawToNEC@NECtemp+2,c
 42990  0060C4  0E00               	movlw	0
 42991  0060C6  6E2A               	movwf	IRrawToNEC@NECtemp+3,c
 42992                           
 42993                           ;IR.c: 159: for (i =0; i < 100; i++)
 42994  0060C8  0E00               	movlw	0
 42995  0060CA  6E2C               	movwf	IRrawToNEC@i,c
 42996  0060CC                     i2l12810:
 42997  0060CC  0E63               	movlw	99
 42998  0060CE  642C               	cpfsgt	IRrawToNEC@i,c
 42999  0060D0  D001               	goto	i2l12814
 43000  0060D2  D021               	goto	i2l12824
 43001  0060D4                     i2l12814:
 43002                           
 43003                           ;IR.c: 160: {
 43004                           ;IR.c: 161: if(Raw[i] >= 4000 && Raw[i] <= 5000 )
 43005  0060D4  502C               	movf	IRrawToNEC@i,w,c
 43006  0060D6  0D02               	mullw	2
 43007  0060D8  50F3               	movf	prodl,w,c
 43008  0060DA  2420               	addwf	IRrawToNEC@Raw,w,c
 43009  0060DC  6ED9               	movwf	fsr2l,c
 43010  0060DE  50F4               	movf	prodh,w,c
 43011  0060E0  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43012  0060E2  6EDA               	movwf	fsr2h,c
 43013  0060E4  0EA0               	movlw	160
 43014  0060E6  5CDE               	subwf	postinc2,w,c
 43015  0060E8  0E0F               	movlw	15
 43016  0060EA  58DE               	subwfb	postinc2,w,c
 43017  0060EC  A0D8               	btfss	status,0,c
 43018  0060EE  D011               	goto	i2l12820
 43019  0060F0  502C               	movf	IRrawToNEC@i,w,c
 43020  0060F2  0D02               	mullw	2
 43021  0060F4  50F3               	movf	prodl,w,c
 43022  0060F6  2420               	addwf	IRrawToNEC@Raw,w,c
 43023  0060F8  6ED9               	movwf	fsr2l,c
 43024  0060FA  50F4               	movf	prodh,w,c
 43025  0060FC  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43026  0060FE  6EDA               	movwf	fsr2h,c
 43027  006100  0E89               	movlw	137
 43028  006102  5CDE               	subwf	postinc2,w,c
 43029  006104  0E13               	movlw	19
 43030  006106  58DE               	subwfb	postinc2,w,c
 43031  006108  B0D8               	btfsc	status,0,c
 43032  00610A  D003               	goto	i2l12820
 43033                           
 43034                           ;IR.c: 162: {
 43035                           ;IR.c: 164: StartBit = i;
 43036  00610C  C02C  F02D         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 43037                           
 43038                           ;IR.c: 165: break;
 43039  006110  D002               	goto	i2l12824
 43040  006112                     i2l12820:
 43041  006112  2A2C               	incf	IRrawToNEC@i,f,c
 43042  006114  D7DB               	goto	i2l12810
 43043  006116                     i2l12824:
 43044                           
 43045                           ;IR.c: 166: }
 43046                           ;IR.c: 167: }
 43047                           ;IR.c: 168: if((100 - StartBit) < 50)
 43048  006116  502D               	movf	IRrawToNEC@StartBit,w,c
 43049  006118  6E25               	movwf	??_IRrawToNEC& (0+255),c
 43050  00611A  6A26               	clrf	(??_IRrawToNEC+1)& (0+255),c
 43051  00611C  1E25               	comf	??_IRrawToNEC,f,c
 43052  00611E  1E26               	comf	??_IRrawToNEC+1,f,c
 43053  006120  4A25               	infsnz	??_IRrawToNEC,f,c
 43054  006122  2A26               	incf	??_IRrawToNEC+1,f,c
 43055  006124  0E64               	movlw	100
 43056  006126  2625               	addwf	??_IRrawToNEC,f,c
 43057  006128  0E00               	movlw	0
 43058  00612A  2226               	addwfc	??_IRrawToNEC+1,f,c
 43059  00612C  BE26               	btfsc	??_IRrawToNEC+1,7,c
 43060  00612E  D006               	goto	i2l12826
 43061  006130  5026               	movf	??_IRrawToNEC+1,w,c
 43062  006132  E106               	bnz	i2l12830
 43063  006134  0E32               	movlw	50
 43064  006136  5C25               	subwf	??_IRrawToNEC,w,c
 43065  006138  B0D8               	btfsc	status,0,c
 43066  00613A  D002               	goto	i2l12830
 43067  00613C                     i2l12826:
 43068                           
 43069                           ;IR.c: 169: {
 43070                           ;IR.c: 171: return 0;
 43071  00613C  0E00               	movlw	0
 43072  00613E  0012               	return	
 43073  006140                     i2l12830:
 43074                           
 43075                           ;IR.c: 172: }
 43076                           ;IR.c: 174: StartBit++;
 43077  006140  2A2D               	incf	IRrawToNEC@StartBit,f,c
 43078                           
 43079                           ;IR.c: 175: if(Raw[StartBit] >= 925 && Raw[StartBit] <= 1250 )
 43080  006142  502D               	movf	IRrawToNEC@StartBit,w,c
 43081  006144  0D02               	mullw	2
 43082  006146  50F3               	movf	prodl,w,c
 43083  006148  2420               	addwf	IRrawToNEC@Raw,w,c
 43084  00614A  6ED9               	movwf	fsr2l,c
 43085  00614C  50F4               	movf	prodh,w,c
 43086  00614E  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43087  006150  6EDA               	movwf	fsr2h,c
 43088  006152  0E9D               	movlw	157
 43089  006154  5CDE               	subwf	postinc2,w,c
 43090  006156  0E03               	movlw	3
 43091  006158  58DE               	subwfb	postinc2,w,c
 43092  00615A  A0D8               	btfss	status,0,c
 43093  00615C  D04C               	goto	i2l12852
 43094  00615E  502D               	movf	IRrawToNEC@StartBit,w,c
 43095  006160  0D02               	mullw	2
 43096  006162  50F3               	movf	prodl,w,c
 43097  006164  2420               	addwf	IRrawToNEC@Raw,w,c
 43098  006166  6ED9               	movwf	fsr2l,c
 43099  006168  50F4               	movf	prodh,w,c
 43100  00616A  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43101  00616C  6EDA               	movwf	fsr2h,c
 43102  00616E  0EE3               	movlw	227
 43103  006170  5CDE               	subwf	postinc2,w,c
 43104  006172  0E04               	movlw	4
 43105  006174  58DE               	subwfb	postinc2,w,c
 43106  006176  B0D8               	btfsc	status,0,c
 43107  006178  D03E               	goto	i2l12852
 43108                           
 43109                           ;IR.c: 176: {
 43110                           ;IR.c: 178: StartBit++;
 43111  00617A  2A2D               	incf	IRrawToNEC@StartBit,f,c
 43112                           
 43113                           ;IR.c: 179: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 43114  00617C  502D               	movf	IRrawToNEC@StartBit,w,c
 43115  00617E  0D02               	mullw	2
 43116  006180  50F3               	movf	prodl,w,c
 43117  006182  2420               	addwf	IRrawToNEC@Raw,w,c
 43118  006184  6ED9               	movwf	fsr2l,c
 43119  006186  50F4               	movf	prodh,w,c
 43120  006188  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43121  00618A  6EDA               	movwf	fsr2h,c
 43122  00618C  0E01               	movlw	1
 43123  00618E  50DB               	movf	plusw2,w,c
 43124  006190  E104               	bnz	i2u1467_40
 43125  006192  0E7D               	movlw	125
 43126  006194  5CDE               	subwf	postinc2,w,c
 43127  006196  A0D8               	btfss	status,0,c
 43128  006198  D04D               	goto	i2l12860
 43129  00619A                     i2u1467_40:
 43130  00619A  502D               	movf	IRrawToNEC@StartBit,w,c
 43131  00619C  0D02               	mullw	2
 43132  00619E  50F3               	movf	prodl,w,c
 43133  0061A0  2420               	addwf	IRrawToNEC@Raw,w,c
 43134  0061A2  6ED9               	movwf	fsr2l,c
 43135  0061A4  50F4               	movf	prodh,w,c
 43136  0061A6  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43137  0061A8  6EDA               	movwf	fsr2h,c
 43138  0061AA  0E59               	movlw	89
 43139  0061AC  5CDE               	subwf	postinc2,w,c
 43140  0061AE  0E02               	movlw	2
 43141  0061B0  58DE               	subwfb	postinc2,w,c
 43142  0061B2  B0D8               	btfsc	status,0,c
 43143  0061B4  D03F               	goto	i2l12860
 43144                           
 43145                           ;IR.c: 180: {
 43146                           ;IR.c: 182: StartBit++;
 43147  0061B6  2A2D               	incf	IRrawToNEC@StartBit,f,c
 43148                           
 43149                           ;IR.c: 183: if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 43150  0061B8  502D               	movf	IRrawToNEC@StartBit,w,c
 43151  0061BA  0D02               	mullw	2
 43152  0061BC  50F3               	movf	prodl,w,c
 43153  0061BE  2420               	addwf	IRrawToNEC@Raw,w,c
 43154  0061C0  6ED9               	movwf	fsr2l,c
 43155  0061C2  50F4               	movf	prodh,w,c
 43156  0061C4  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43157  0061C6  6EDA               	movwf	fsr2h,c
 43158  0061C8  0EC8               	movlw	200
 43159  0061CA  5CDE               	subwf	postinc2,w,c
 43160  0061CC  0EAF               	movlw	175
 43161  0061CE  58DE               	subwfb	postinc2,w,c
 43162  0061D0  A0D8               	btfss	status,0,c
 43163  0061D2  D030               	goto	i2l12860
 43164  0061D4  502D               	movf	IRrawToNEC@StartBit,w,c
 43165  0061D6  0D02               	mullw	2
 43166  0061D8  50F3               	movf	prodl,w,c
 43167  0061DA  2420               	addwf	IRrawToNEC@Raw,w,c
 43168  0061DC  6ED9               	movwf	fsr2l,c
 43169  0061DE  50F4               	movf	prodh,w,c
 43170  0061E0  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43171  0061E2  6EDA               	movwf	fsr2h,c
 43172  0061E4  0E51               	movlw	81
 43173  0061E6  5CDE               	subwf	postinc2,w,c
 43174  0061E8  0EC3               	movlw	195
 43175  0061EA  58DE               	subwfb	postinc2,w,c
 43176  0061EC  B0D8               	btfsc	status,0,c
 43177  0061EE  D022               	goto	i2l12860
 43178                           
 43179                           ;IR.c: 184: {
 43180                           ;IR.c: 186: return 2;
 43181  0061F0  0E02               	movlw	2
 43182  0061F2  0012               	return	
 43183                           
 43184                           ;IR.c: 187: }
 43185                           ;IR.c: 188: }
 43186                           ;IR.c: 189: }
 43187  0061F4  D01F               	goto	i2l12860
 43188  0061F6                     i2l12852:
 43189                           
 43190                           ;IR.c: 190: else if(Raw[StartBit] < 1750 || Raw[StartBit] > 2750 )
 43191  0061F6  502D               	movf	IRrawToNEC@StartBit,w,c
 43192  0061F8  0D02               	mullw	2
 43193  0061FA  50F3               	movf	prodl,w,c
 43194  0061FC  2420               	addwf	IRrawToNEC@Raw,w,c
 43195  0061FE  6ED9               	movwf	fsr2l,c
 43196  006200  50F4               	movf	prodh,w,c
 43197  006202  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43198  006204  6EDA               	movwf	fsr2h,c
 43199  006206  0ED6               	movlw	214
 43200  006208  5CDE               	subwf	postinc2,w,c
 43201  00620A  0E06               	movlw	6
 43202  00620C  58DE               	subwfb	postinc2,w,c
 43203  00620E  A0D8               	btfss	status,0,c
 43204  006210  D00E               	goto	i2l12856
 43205  006212  502D               	movf	IRrawToNEC@StartBit,w,c
 43206  006214  0D02               	mullw	2
 43207  006216  50F3               	movf	prodl,w,c
 43208  006218  2420               	addwf	IRrawToNEC@Raw,w,c
 43209  00621A  6ED9               	movwf	fsr2l,c
 43210  00621C  50F4               	movf	prodh,w,c
 43211  00621E  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43212  006220  6EDA               	movwf	fsr2h,c
 43213  006222  0EBF               	movlw	191
 43214  006224  5CDE               	subwf	postinc2,w,c
 43215  006226  0E0A               	movlw	10
 43216  006228  58DE               	subwfb	postinc2,w,c
 43217  00622A  A0D8               	btfss	status,0,c
 43218  00622C  D003               	goto	i2l12860
 43219  00622E                     i2l12856:
 43220                           
 43221                           ;IR.c: 191: {
 43222                           ;IR.c: 193: return 0;
 43223  00622E  0E00               	movlw	0
 43224  006230  0012               	return	
 43225  006232  D000               	goto	i2l12860
 43226  006234                     i2l12860:
 43227                           
 43228                           ;IR.c: 194: }
 43229                           ;IR.c: 196: StartBit++;
 43230  006234  2A2D               	incf	IRrawToNEC@StartBit,f,c
 43231                           
 43232                           ;IR.c: 197: for(i = StartBit; i < 100;i++)
 43233  006236  C02D  F02C         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 43234  00623A                     i2l12864:
 43235  00623A  0E63               	movlw	99
 43236  00623C  642C               	cpfsgt	IRrawToNEC@i,c
 43237  00623E  D001               	goto	i2l12868
 43238  006240  D0CA               	goto	i2l12944
 43239  006242                     i2l12868:
 43240                           
 43241                           ;IR.c: 198: {
 43242                           ;IR.c: 199: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 43243  006242  502D               	movf	IRrawToNEC@StartBit,w,c
 43244  006244  0D02               	mullw	2
 43245  006246  50F3               	movf	prodl,w,c
 43246  006248  2420               	addwf	IRrawToNEC@Raw,w,c
 43247  00624A  6ED9               	movwf	fsr2l,c
 43248  00624C  50F4               	movf	prodh,w,c
 43249  00624E  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43250  006250  6EDA               	movwf	fsr2h,c
 43251  006252  0E01               	movlw	1
 43252  006254  50DB               	movf	plusw2,w,c
 43253  006256  E104               	bnz	i2u1474_40
 43254  006258  0E7D               	movlw	125
 43255  00625A  5CDE               	subwf	postinc2,w,c
 43256  00625C  A0D8               	btfss	status,0,c
 43257  00625E  D024               	goto	i2l12884
 43258  006260                     i2u1474_40:
 43259  006260  502D               	movf	IRrawToNEC@StartBit,w,c
 43260  006262  0D02               	mullw	2
 43261  006264  50F3               	movf	prodl,w,c
 43262  006266  2420               	addwf	IRrawToNEC@Raw,w,c
 43263  006268  6ED9               	movwf	fsr2l,c
 43264  00626A  50F4               	movf	prodh,w,c
 43265  00626C  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43266  00626E  6EDA               	movwf	fsr2h,c
 43267  006270  0E59               	movlw	89
 43268  006272  5CDE               	subwf	postinc2,w,c
 43269  006274  0E02               	movlw	2
 43270  006276  58DE               	subwfb	postinc2,w,c
 43271  006278  B0D8               	btfsc	status,0,c
 43272  00627A  D016               	goto	i2l12884
 43273                           
 43274                           ;IR.c: 200: {
 43275                           ;IR.c: 201: if(!first)
 43276  00627C  502B               	movf	IRrawToNEC@first,w,c
 43277  00627E  A4D8               	btfss	status,2,c
 43278  006280  D002               	goto	i2l12876
 43279                           
 43280                           ;IR.c: 202: {
 43281                           ;IR.c: 204: first = 1;
 43282  006282  0E01               	movlw	1
 43283  006284  D040               	goto	L43
 43284  006286                     i2l12876:
 43285                           
 43286                           ;IR.c: 206: else
 43287                           ;IR.c: 207: {
 43288                           ;IR.c: 209: first = 0;
 43289  006286  0E00               	movlw	0
 43290  006288  6E2B               	movwf	IRrawToNEC@first,c
 43291                           
 43292                           ;IR.c: 210: NECtemp <<= 1;
 43293  00628A  90D8               	bcf	status,0,c
 43294  00628C  3627               	rlcf	IRrawToNEC@NECtemp,f,c
 43295  00628E  3628               	rlcf	IRrawToNEC@NECtemp+1,f,c
 43296  006290  3629               	rlcf	IRrawToNEC@NECtemp+2,f,c
 43297  006292  362A               	rlcf	IRrawToNEC@NECtemp+3,f,c
 43298                           
 43299                           ;IR.c: 211: if(!Invert)
 43300  006294  5024               	movf	IRrawToNEC@Invert,w,c
 43301  006296  A4D8               	btfss	status,2,c
 43302  006298  D09B               	goto	i2l12940
 43303                           
 43304                           ;IR.c: 212: {
 43305                           ;IR.c: 213: NECtemp++;
 43306  00629A  0E01               	movlw	1
 43307  00629C  2627               	addwf	IRrawToNEC@NECtemp,f,c
 43308  00629E  0E00               	movlw	0
 43309  0062A0  2228               	addwfc	IRrawToNEC@NECtemp+1,f,c
 43310  0062A2  2229               	addwfc	IRrawToNEC@NECtemp+2,f,c
 43311  0062A4  222A               	addwfc	IRrawToNEC@NECtemp+3,f,c
 43312                           
 43313                           ;IR.c: 214: }
 43314                           ;IR.c: 215: }
 43315                           ;IR.c: 216: }
 43316  0062A6  D094               	goto	i2l12940
 43317  0062A8                     i2l12884:
 43318                           
 43319                           ;IR.c: 217: else if(Raw[StartBit] >= 700 && Raw[StartBit] <= 950)
 43320  0062A8  502D               	movf	IRrawToNEC@StartBit,w,c
 43321  0062AA  0D02               	mullw	2
 43322  0062AC  50F3               	movf	prodl,w,c
 43323  0062AE  2420               	addwf	IRrawToNEC@Raw,w,c
 43324  0062B0  6ED9               	movwf	fsr2l,c
 43325  0062B2  50F4               	movf	prodh,w,c
 43326  0062B4  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43327  0062B6  6EDA               	movwf	fsr2h,c
 43328  0062B8  0EBC               	movlw	188
 43329  0062BA  5CDE               	subwf	postinc2,w,c
 43330  0062BC  0E02               	movlw	2
 43331  0062BE  58DE               	subwfb	postinc2,w,c
 43332  0062C0  A0D8               	btfss	status,0,c
 43333  0062C2  D026               	goto	i2l12902
 43334  0062C4  502D               	movf	IRrawToNEC@StartBit,w,c
 43335  0062C6  0D02               	mullw	2
 43336  0062C8  50F3               	movf	prodl,w,c
 43337  0062CA  2420               	addwf	IRrawToNEC@Raw,w,c
 43338  0062CC  6ED9               	movwf	fsr2l,c
 43339  0062CE  50F4               	movf	prodh,w,c
 43340  0062D0  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43341  0062D2  6EDA               	movwf	fsr2h,c
 43342  0062D4  0EB7               	movlw	183
 43343  0062D6  5CDE               	subwf	postinc2,w,c
 43344  0062D8  0E03               	movlw	3
 43345  0062DA  58DE               	subwfb	postinc2,w,c
 43346  0062DC  B0D8               	btfsc	status,0,c
 43347  0062DE  D018               	goto	i2l12902
 43348                           
 43349                           ;IR.c: 218: {
 43350                           ;IR.c: 219: if(first)
 43351  0062E0  502B               	movf	IRrawToNEC@first,w,c
 43352  0062E2  B4D8               	btfsc	status,2,c
 43353  0062E4  D012               	goto	i2l12898
 43354                           
 43355                           ;IR.c: 220: {
 43356                           ;IR.c: 222: NECtemp <<= 1;
 43357  0062E6  90D8               	bcf	status,0,c
 43358  0062E8  3627               	rlcf	IRrawToNEC@NECtemp,f,c
 43359  0062EA  3628               	rlcf	IRrawToNEC@NECtemp+1,f,c
 43360  0062EC  3629               	rlcf	IRrawToNEC@NECtemp+2,f,c
 43361  0062EE  362A               	rlcf	IRrawToNEC@NECtemp+3,f,c
 43362                           
 43363                           ;IR.c: 223: if(Invert)
 43364  0062F0  5024               	movf	IRrawToNEC@Invert,w,c
 43365  0062F2  B4D8               	btfsc	status,2,c
 43366  0062F4  D007               	goto	i2l12896
 43367                           
 43368                           ;IR.c: 224: {
 43369                           ;IR.c: 225: NECtemp++;
 43370  0062F6  0E01               	movlw	1
 43371  0062F8  2627               	addwf	IRrawToNEC@NECtemp,f,c
 43372  0062FA  0E00               	movlw	0
 43373  0062FC  2228               	addwfc	IRrawToNEC@NECtemp+1,f,c
 43374  0062FE  2229               	addwfc	IRrawToNEC@NECtemp+2,f,c
 43375  006300  222A               	addwfc	IRrawToNEC@NECtemp+3,f,c
 43376  006302  D000               	goto	i2l12896
 43377  006304                     i2l12896:
 43378                           
 43379                           ;IR.c: 226: }
 43380                           ;IR.c: 227: first = 0;
 43381  006304  0E00               	movlw	0
 43382  006306                     L43:
 43383  006306  6E2B               	movwf	IRrawToNEC@first,c
 43384                           
 43385                           ;IR.c: 228: }
 43386  006308  D063               	goto	i2l12940
 43387  00630A                     i2l12898:
 43388                           
 43389                           ;IR.c: 229: else
 43390                           ;IR.c: 230: {
 43391                           ;IR.c: 232: return 0;
 43392  00630A  0E00               	movlw	0
 43393  00630C  0012               	return	
 43394                           
 43395                           ;IR.c: 233: }
 43396                           ;IR.c: 234: }
 43397  00630E  D060               	goto	i2l12940
 43398  006310                     i2l12902:
 43399                           
 43400                           ;IR.c: 235: else if(Raw[StartBit] == 0 && first == 1)
 43401  006310  502D               	movf	IRrawToNEC@StartBit,w,c
 43402  006312  0D02               	mullw	2
 43403  006314  50F3               	movf	prodl,w,c
 43404  006316  2420               	addwf	IRrawToNEC@Raw,w,c
 43405  006318  6ED9               	movwf	fsr2l,c
 43406  00631A  50F4               	movf	prodh,w,c
 43407  00631C  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43408  00631E  6EDA               	movwf	fsr2h,c
 43409  006320  50DE               	movf	postinc2,w,c
 43410  006322  10DE               	iorwf	postinc2,w,c
 43411  006324  A4D8               	btfss	status,2,c
 43412  006326  D012               	goto	i2l12914
 43413  006328  042B               	decf	IRrawToNEC@first,w,c
 43414  00632A  A4D8               	btfss	status,2,c
 43415  00632C  D00F               	goto	i2l12914
 43416  00632E                     i2l12906:
 43417                           
 43418                           ;IR.c: 236: {
 43419                           ;IR.c: 241: *NEC = NECtemp;
 43420  00632E  C022  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 43421  006332  C023  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 43422  006336  C027  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 43423  00633A  C028  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 43424  00633E  C029  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 43425  006342  C02A  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 43426  006346  D01F               	goto	i2l12920
 43427                           
 43428                           ;IR.c: 242: return 1;
 43429  006348  0012               	return	
 43430                           
 43431                           ;IR.c: 243: }
 43432  00634A  D042               	goto	i2l12940
 43433  00634C                     i2l12914:
 43434                           
 43435                           ;IR.c: 244: else if(Raw[StartBit] >= 19000 && Raw[StartBit] <= 21000)
 43436  00634C  502D               	movf	IRrawToNEC@StartBit,w,c
 43437  00634E  0D02               	mullw	2
 43438  006350  50F3               	movf	prodl,w,c
 43439  006352  2420               	addwf	IRrawToNEC@Raw,w,c
 43440  006354  6ED9               	movwf	fsr2l,c
 43441  006356  50F4               	movf	prodh,w,c
 43442  006358  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43443  00635A  6EDA               	movwf	fsr2h,c
 43444  00635C  0E38               	movlw	56
 43445  00635E  5CDE               	subwf	postinc2,w,c
 43446  006360  0E4A               	movlw	74
 43447  006362  58DE               	subwfb	postinc2,w,c
 43448  006364  A0D8               	btfss	status,0,c
 43449  006366  D012               	goto	i2l12926
 43450  006368  502D               	movf	IRrawToNEC@StartBit,w,c
 43451  00636A  0D02               	mullw	2
 43452  00636C  50F3               	movf	prodl,w,c
 43453  00636E  2420               	addwf	IRrawToNEC@Raw,w,c
 43454  006370  6ED9               	movwf	fsr2l,c
 43455  006372  50F4               	movf	prodh,w,c
 43456  006374  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43457  006376  6EDA               	movwf	fsr2h,c
 43458  006378  0E09               	movlw	9
 43459  00637A  5CDE               	subwf	postinc2,w,c
 43460  00637C  0E52               	movlw	82
 43461  00637E  58DE               	subwfb	postinc2,w,c
 43462  006380  B0D8               	btfsc	status,0,c
 43463  006382  D004               	goto	i2l12926
 43464  006384  D7D4               	goto	i2l12906
 43465  006386                     i2l12920:
 43466                           
 43467                           ;IR.c: 248: return 1;
 43468  006386  0E01               	movlw	1
 43469  006388  0012               	return	
 43470                           
 43471                           ;IR.c: 249: }
 43472  00638A  D022               	goto	i2l12940
 43473  00638C                     i2l12926:
 43474                           
 43475                           ;IR.c: 250: else if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 43476  00638C  502D               	movf	IRrawToNEC@StartBit,w,c
 43477  00638E  0D02               	mullw	2
 43478  006390  50F3               	movf	prodl,w,c
 43479  006392  2420               	addwf	IRrawToNEC@Raw,w,c
 43480  006394  6ED9               	movwf	fsr2l,c
 43481  006396  50F4               	movf	prodh,w,c
 43482  006398  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43483  00639A  6EDA               	movwf	fsr2h,c
 43484  00639C  0EC8               	movlw	200
 43485  00639E  5CDE               	subwf	postinc2,w,c
 43486  0063A0  0EAF               	movlw	175
 43487  0063A2  58DE               	subwfb	postinc2,w,c
 43488  0063A4  A0D8               	btfss	status,0,c
 43489  0063A6  D011               	goto	i2l12936
 43490  0063A8  502D               	movf	IRrawToNEC@StartBit,w,c
 43491  0063AA  0D02               	mullw	2
 43492  0063AC  50F3               	movf	prodl,w,c
 43493  0063AE  2420               	addwf	IRrawToNEC@Raw,w,c
 43494  0063B0  6ED9               	movwf	fsr2l,c
 43495  0063B2  50F4               	movf	prodh,w,c
 43496  0063B4  2021               	addwfc	IRrawToNEC@Raw+1,w,c
 43497  0063B6  6EDA               	movwf	fsr2h,c
 43498  0063B8  0E51               	movlw	81
 43499  0063BA  5CDE               	subwf	postinc2,w,c
 43500  0063BC  0EC3               	movlw	195
 43501  0063BE  58DE               	subwfb	postinc2,w,c
 43502  0063C0  B0D8               	btfsc	status,0,c
 43503  0063C2  D003               	goto	i2l12936
 43504                           
 43505                           ;IR.c: 251: {
 43506                           ;IR.c: 253: return 2;
 43507  0063C4  0E02               	movlw	2
 43508  0063C6  0012               	return	
 43509                           
 43510                           ;IR.c: 254: }
 43511  0063C8  D003               	goto	i2l12940
 43512  0063CA                     i2l12936:
 43513                           
 43514                           ;IR.c: 255: else
 43515                           ;IR.c: 256: {
 43516                           ;IR.c: 257: return 0;
 43517  0063CA  0E00               	movlw	0
 43518  0063CC  0012               	return	
 43519  0063CE  D000               	goto	i2l12940
 43520  0063D0                     i2l12940:
 43521                           
 43522                           ;IR.c: 258: }
 43523                           ;IR.c: 259: StartBit++;
 43524  0063D0  2A2D               	incf	IRrawToNEC@StartBit,f,c
 43525  0063D2  2A2C               	incf	IRrawToNEC@i,f,c
 43526  0063D4  D732               	goto	i2l12864
 43527  0063D6                     i2l12944:
 43528                           
 43529                           ;IR.c: 260: }
 43530                           ;IR.c: 262: return 0;
 43531  0063D6  0E00               	movlw	0
 43532  0063D8  0012               	return	
 43533  0063DA  0012               	return		;funcret
 43534  0063DC                     __end_of_IRrawToNEC:
 43535                           	opt stack 0
 43536                           pclatu	equ	0xFFB
 43537                           pclath	equ	0xFFA
 43538                           tblptru	equ	0xFF8
 43539                           tblptrh	equ	0xFF7
 43540                           tblptrl	equ	0xFF6
 43541                           tablat	equ	0xFF5
 43542                           prodh	equ	0xFF4
 43543                           prodl	equ	0xFF3
 43544                           intcon	equ	0xFF2
 43545                           intcon2	equ	0xFF1
 43546                           indf0	equ	0xFEF
 43547                           postinc0	equ	0xFEE
 43548                           plusw0	equ	0xFEB
 43549                           fsr0h	equ	0xFEA
 43550                           fsr0l	equ	0xFE9
 43551                           wreg	equ	0xFE8
 43552                           indf1	equ	0xFE7
 43553                           postdec1	equ	0xFE5
 43554                           fsr1h	equ	0xFE2
 43555                           fsr1l	equ	0xFE1
 43556                           bsr	equ	0xFE0
 43557                           indf2	equ	0xFDF
 43558                           postinc2	equ	0xFDE
 43559                           postdec2	equ	0xFDD
 43560                           plusw2	equ	0xFDB
 43561                           fsr2h	equ	0xFDA
 43562                           fsr2l	equ	0xFD9
 43563                           status	equ	0xFD8
 43564                           pclatu	equ	0xFFB
 43565                           pclath	equ	0xFFA
 43566                           tblptru	equ	0xFF8
 43567                           tblptrh	equ	0xFF7
 43568                           tblptrl	equ	0xFF6
 43569                           tablat	equ	0xFF5
 43570                           prodh	equ	0xFF4
 43571                           prodl	equ	0xFF3
 43572                           intcon	equ	0xFF2
 43573                           intcon2	equ	0xFF1
 43574                           indf0	equ	0xFEF
 43575                           postinc0	equ	0xFEE
 43576                           plusw0	equ	0xFEB
 43577                           fsr0h	equ	0xFEA
 43578                           fsr0l	equ	0xFE9
 43579                           wreg	equ	0xFE8
 43580                           indf1	equ	0xFE7
 43581                           postdec1	equ	0xFE5
 43582                           fsr1h	equ	0xFE2
 43583                           fsr1l	equ	0xFE1
 43584                           bsr	equ	0xFE0
 43585                           indf2	equ	0xFDF
 43586                           postinc2	equ	0xFDE
 43587                           postdec2	equ	0xFDD
 43588                           plusw2	equ	0xFDB
 43589                           fsr2h	equ	0xFDA
 43590                           fsr2l	equ	0xFD9
 43591                           status	equ	0xFD8
 43592                           
 43593                           	psect	rparam
 43594  0000                     pclatu	equ	0xFFB
 43595                           pclath	equ	0xFFA
 43596                           tblptru	equ	0xFF8
 43597                           tblptrh	equ	0xFF7
 43598                           tblptrl	equ	0xFF6
 43599                           tablat	equ	0xFF5
 43600                           prodh	equ	0xFF4
 43601                           prodl	equ	0xFF3
 43602                           intcon	equ	0xFF2
 43603                           intcon2	equ	0xFF1
 43604                           indf0	equ	0xFEF
 43605                           postinc0	equ	0xFEE
 43606                           plusw0	equ	0xFEB
 43607                           fsr0h	equ	0xFEA
 43608                           fsr0l	equ	0xFE9
 43609                           wreg	equ	0xFE8
 43610                           indf1	equ	0xFE7
 43611                           postdec1	equ	0xFE5
 43612                           fsr1h	equ	0xFE2
 43613                           fsr1l	equ	0xFE1
 43614                           bsr	equ	0xFE0
 43615                           indf2	equ	0xFDF
 43616                           postinc2	equ	0xFDE
 43617                           postdec2	equ	0xFDD
 43618                           plusw2	equ	0xFDB
 43619                           fsr2h	equ	0xFDA
 43620                           fsr2l	equ	0xFD9
 43621                           status	equ	0xFD8


Data Sizes:
    Strings     3575
    Constant    657
    Data        60
    BSS         613
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     63      94
    BANK0           160    152     160
    BANK1           256    255     256
    BANK2           256    255     256
    BANK3           256      0     252
    BANK4           256      0     180
    BANK5           256      0     200
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_164(CODE[7]), sprintf@c(BANK0[1]), Frequency(CODE[4]), PCBVersion(CODE[5]), 
		 -> FirmVersion(CODE[9]), GetNumber@temp(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_119(CODE[19]), STR_117(CODE[15]), STR_101(CODE[19]), STR_99(CODE[27]), 
		 -> STR_98(CODE[16]), STR_95(CODE[21]), STR_93(CODE[20]), STR_87(CODE[27]), 
		 -> STR_73(CODE[44]), STR_72(CODE[54]), STR_71(CODE[54]), STR_70(CODE[63]), 
		 -> STR_48(CODE[44]), STR_47(CODE[46]), STR_45(CODE[44]), STR_44(CODE[21]), 
		 -> STR_30(CODE[17]), STR_29(CODE[17]), STR_28(CODE[20]), STR_26(CODE[23]), 
		 -> STR_25(CODE[21]), STR_24(CODE[21]), STR_16(CODE[4]), STR_14(CODE[28]), 
		 -> STR_8(CODE[4]), STR_7(CODE[24]), STR_5(CODE[4]), STR_3(CODE[23]), 
		 -> STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@buf(BANK1[50]), EnterCommandMode@buf(BANK1[50]), Init_System@buf(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    SendRF_wait@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    SendRF@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    UseBluetooth@String	PTR unsigned char  size(2) Largest target is 100
		 -> main@BluetoothString(BANK2[100]), 

    DecodeNEC@address	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecAddress(BANK2[1]), IRaddress(COMRAM[1]), 

    DecodeNEC@command	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecCommand(BANK2[1]), IRcommand(COMRAM[1]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK0[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(COMRAM[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 200
		 -> IRRawCode(BANK5[200]), 

    GetEEPROM2@Temp	PTR struct EEdata2 size(2) Largest target is 64
		 -> SyncEEPROMToGlobal@Temp2(BANK0[64]), 

    GetEEPROM1@Temp	PTR struct EEdata size(2) Largest target is 30
		 -> SyncEEPROMToGlobal@Temp1(BANK0[30]), 

    InternalADC_Read@ADCcounts	PTR unsigned int  size(2) Largest target is 2
		 -> ReadVoltage@temp(BANK0[2]), 

    UARTcommandMenu@Desc	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_160(CODE[32]), STR_159(CODE[31]), STR_158(CODE[32]), STR_157(CODE[31]), 
		 -> STR_156(CODE[32]), STR_155(CODE[31]), STR_154(CODE[20]), STR_153(CODE[19]), 
		 -> STR_152(CODE[23]), STR_151(CODE[22]), STR_150(CODE[19]), STR_149(CODE[19]), 
		 -> STR_148(CODE[19]), STR_146(CODE[40]), STR_144(CODE[46]), STR_142(CODE[46]), 
		 -> STR_140(CODE[46]), STR_138(CODE[46]), STR_136(CODE[46]), STR_134(CODE[46]), 
		 -> STR_132(CODE[49]), STR_130(CODE[49]), STR_128(CODE[49]), STR_126(CODE[49]), 
		 -> STR_124(CODE[49]), STR_122(CODE[49]), STR_120(CODE[24]), STR_118(CODE[25]), 
		 -> STR_115(CODE[28]), STR_112(CODE[22]), STR_110(CODE[35]), STR_108(CODE[32]), 
		 -> STR_106(CODE[10]), 

    UARTcommandMenu@Command	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_145(CODE[5]), STR_143(CODE[13]), STR_141(CODE[13]), STR_139(CODE[13]), 
		 -> STR_137(CODE[13]), STR_135(CODE[13]), STR_133(CODE[13]), STR_131(CODE[11]), 
		 -> STR_129(CODE[11]), STR_127(CODE[11]), STR_125(CODE[11]), STR_123(CODE[11]), 
		 -> STR_121(CODE[11]), STR_114(CODE[8]), STR_111(CODE[10]), STR_109(CODE[8]), 
		 -> STR_107(CODE[6]), STR_105(CODE[4]), Conf2_ChannelH_3_OFF_STR(CODE[21]), Conf2_ChannelH_3_ON_STR(CODE[20]), 
		 -> Conf2_ChannelH_2_OFF_STR(CODE[21]), Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), Conf2_ChannelH_1_ON_STR(CODE[20]), 
		 -> Conf2_ChannelD_OFF_STR(CODE[19]), Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), Conf2_ChannelB_ON_STR(CODE[18]), 
		 -> Conf1_ChannelF_STR(CODE[15]), Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), UseBluetooth@buf(BANK2[100]), 

    UARTstringCRLN_CONST@data	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_163(CODE[36]), STR_161(CODE[27]), STR_147(CODE[13]), STR_116(CODE[13]), 
		 -> STR_113(CODE[21]), STR_104(CODE[17]), STR_100(CODE[5]), STR_97(CODE[23]), 
		 -> STR_96(CODE[29]), STR_91(CODE[24]), STR_90(CODE[34]), STR_89(CODE[44]), 
		 -> STR_88(CODE[18]), STR_86(CODE[44]), STR_85(CODE[46]), STR_82(CODE[46]), 
		 -> STR_79(CODE[29]), STR_78(CODE[18]), STR_77(CODE[29]), STR_74(CODE[44]), 
		 -> STR_69(CODE[46]), STR_68(CODE[42]), STR_67(CODE[50]), STR_66(CODE[50]), 
		 -> STR_64(CODE[31]), STR_63(CODE[31]), STR_62(CODE[37]), STR_61(CODE[37]), 
		 -> STR_60(CODE[37]), STR_56(CODE[18]), STR_55(CODE[14]), STR_54(CODE[9]), 
		 -> STR_53(CODE[20]), STR_52(CODE[16]), STR_51(CODE[7]), STR_50(CODE[35]), 
		 -> STR_49(CODE[37]), STR_46(CODE[47]), STR_41(CODE[17]), STR_40(CODE[9]), 
		 -> STR_39(CODE[18]), STR_38(CODE[9]), STR_37(CODE[22]), STR_36(CODE[11]), 
		 -> STR_35(CODE[20]), STR_34(CODE[7]), STR_33(CODE[31]), STR_31(CODE[33]), 
		 -> STR_27(CODE[32]), STR_23(CODE[31]), STR_22(CODE[31]), STR_20(CODE[29]), 
		 -> STR_18(CODE[29]), SYNTAX_ERR(CODE[14]), STR_1(CODE[16]), ProjectName(CODE[26]), 

    UARTstringCRLN@data	PTR unsigned char  size(2) Largest target is 100
		 -> UseBluetooth@buf(BANK2[100]), BluetoothFirmware2(BANK4[30]), BluetoothFirmware1(BANK3[30]), 

    UARTstring_CONST@data	PTR const unsigned char  size(2) Largest target is 60
		 -> STR_162(CODE[28]), STR_103(CODE[13]), STR_84(CODE[24]), STR_81(CODE[60]), 
		 -> STR_76(CODE[32]), STR_65(CODE[14]), SYNTAX_ERR(CODE[14]), STR_15(CODE[5]), 
		 -> STR_13(CODE[3]), STR_12(CODE[6]), STR_11(CODE[9]), STR_10(CODE[20]), 
		 -> STR_9(CODE[9]), STR_6(CODE[3]), STR_4(CODE[4]), CRLN(CODE[3]), 

    UARTstring@data	PTR unsigned char  size(2) Largest target is 100
		 -> UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@buf(BANK1[50]), ReceivedString(BANK4[100]), 

    GetStringAfterComma@result	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    GetStringAfterComma@This	PTR unsigned char  size(2) Largest target is 100
		 -> main@BluetoothString(BANK2[100]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 100
		 -> ReceivedString(BANK4[100]), main@BluetoothString(BANK2[100]), 

    GetNumberUnsigned@result	PTR unsigned long  size(2) Largest target is 4
		 -> UseBluetooth@temp(BANK2[4]), UseBluetooth@EnteredNEC(BANK2[4]), 

    GetNumberUnsigned@This	PTR unsigned char  size(2) Largest target is 100
		 -> main@BluetoothString(BANK2[100]), 

    GetNumber@result	PTR long  size(2) Largest target is 4
		 -> UseBluetooth@SerialNumberTEMP(BANK2[4]), 

    GetNumber@This	PTR unsigned char  size(2) Largest target is 100
		 -> ReceivedString(BANK4[100]), 

    lowercaseChar@Input	PTR unsigned char  size(2) Largest target is 1
		 -> GetNumberUnsigned@tempThis(BANK0[1]), GetNumber@tempThis(BANK0[1]), StringContainsCaseInsensitive@tempThat(BANK0[1]), StringContainsCaseInsensitive@tempThis(BANK0[1]), 
		 -> StringMatchCaseInsensitive@tempThat(BANK0[1]), StringMatchCaseInsensitive@tempThis(BANK0[1]), 

    lowercaseString@Input	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@This	PTR const unsigned char  size(2) Largest target is 100
		 -> Conf2_Channels(CODE[4]), Conf1_Channels(CODE[4]), CommandString(BANK3[100]), main@BluetoothString(BANK2[100]), 

    StringContainsCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_59(CODE[7]), STR_58(CODE[9]), STR_57(CODE[7]), STR_43(CODE[4]), 
		 -> STR_42(CODE[13]), STR_21(CODE[4]), STR_19(CODE[6]), STR_17(CODE[6]), 
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), BluetoothInitialSetup@buf(BANK1[50]), 

    StringContains@This	PTR const unsigned char  size(2) Largest target is 100
		 -> CommandString(BANK3[100]), main@BluetoothString(BANK2[100]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_32(CODE[2]), BluetoothInitialSetup@buf(BANK1[50]), EnterCommandMode@buf(BANK1[50]), 

    StringMatchCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_94(CODE[8]), STR_92(CODE[8]), STR_80(CODE[10]), STR_75(CODE[6]), 
		 -> Conf2_ChannelH_3_OFF_STR(CODE[21]), Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), Conf2_ChannelH_2_ON_STR(CODE[20]), 
		 -> Conf2_ChannelH_1_OFF_STR(CODE[21]), Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), Conf2_ChannelD_ON_STR(CODE[18]), 
		 -> Conf2_ChannelB_OFF_STR(CODE[19]), Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), Conf1_ChannelE_STR(CODE[15]), 
		 -> Conf1_ChannelD_STR(CODE[15]), 

    StringMatchCaseInsensitive@This	PTR const unsigned char  size(2) Largest target is 100
		 -> main@BluetoothString(BANK2[100]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_102(CODE[4]), STR_83(CODE[5]), 

    StringMatch@This	PTR const unsigned char  size(2) Largest target is 100
		 -> ReceivedString(BANK4[100]), main@BluetoothString(BANK2[100]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 255
		 -> BluetoothInitialSetup@BluetoothVersionLine2(BANK1[30]), BluetoothInitialSetup@BluetoothVersionLine1(BANK1[30]), StringAddEqual@temp(BANK1[255]), Init_System@buf(BANK1[50]), 
		 -> ReceivedString(BANK4[100]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 100
		 -> BluetoothFirmware2(BANK4[30]), BluetoothFirmware1(BANK3[30]), ReceivedString(BANK4[100]), main@BluetoothString(BANK2[100]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 200
		 -> IRRawCode(BANK5[200]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 255
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@BluetoothVersionLine2(BANK1[30]), BluetoothInitialSetup@BluetoothVersionLine1(BANK1[30]), 
		 -> BluetoothInitialSetup@buf(BANK1[50]), CommandString(BANK3[100]), StringAddEqual@temp(BANK1[255]), BluetoothFirmware2(BANK4[30]), 
		 -> BluetoothFirmware1(BANK3[30]), ReceivedString(BANK4[100]), main@BluetoothString(BANK2[100]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_IRrawToNEC

Critical Paths under _low_isr in COMRAM

    _low_isr->i1_UARTstring_CONST
    i1_UARTstring_CONST->i1_UARTchar_CONST
    i1_UARTchar_CONST->i1_delayUS
    i1_UARTstring->i1_UARTchar
    _EraseScreen->i1_UARTchar
    i1_UARTchar->i1_delayUS

Critical Paths under _main in BANK0

    _main->_UseBluetooth
    _UseIRCode->_SyncGlobalToEEPROM
    _SendRF_Channel->_SendRF_wait
    _ReadCodeButtons->_delayUS
    _UseBluetooth->_SyncEEPROMToGlobal
    _WaitForIRsignal->_UARTstringCRLN_CONST
    _UARTstringCRLN_CONST->_UARTstring_CONST
    _UARTstringCRLN->_UARTstring_CONST
    _UARTcommandMenu->_UARTstring_CONST
    _StringMatchCaseInsensitive->_lowercaseChar
    _StringAddEqual->_BufferCopy
    _SendRF_wait->_SendRF
    _SendNEC_wait->_SendNEC_bytes
    _SendNEC_bytes->_Reverse_4Byte
    _ReadVoltage->___ftmul
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft
    _InternalADC_Read->_delayUS
    _GetNumberUnsigned->___lmul
    _GetNumber->___lmul
    _EncodeNEC->_Reverse_Byte
    _DecodeNEC->_Reverse_Byte
    _Init_System->_SyncEEPROMToGlobal
    _SyncEEPROMToGlobal->_GetEEPROM2
    _GetEEPROM2->_GetMemoryLong
    _GetEEPROM1->_GetMemoryLong
    _SetEEPROMdefault->_SyncGlobalToEEPROM
    _InitUART->_Round
    _Round->___fttol
    ___altoft->___ftpack
    _InitIR->_cleanBuffer16bit
    _InitBluetooth->_SyncGlobalToEEPROM
    _SyncGlobalToEEPROM->_SetEEPROM2
    _SetEEPROM2->_SetMemoryLong
    _SetEEPROM1->_SetMemoryLong
    _SetMemoryLong->_GetMemoryLong
    _GetMemoryLong->_ReadEEPROM_1Byte
    _SetMemoryChar->_GetMemoryChar
    _GetMemoryChar->_ReadEEPROM_1Byte
    _BluetoothInitialSetup->_sprintf
    _UARTstring->_UARTchar
    _UARTchar->_delayUS
    _StringContainsCaseInsensitive->_lowercaseChar
    _EnterCommandMode->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftadd
    ___ftsub->___ftadd
    ___ftadd->_fround
    _UARTstring_CONST->_UARTchar_CONST
    _UARTchar_CONST->_delayUS
    _ResetBlue->_delayUS
    _ClearUSART->_ReadUSART
    _BufferCopy->_cleanBuffer

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _UseBluetooth->_StringAddEqual
    _InitBluetooth->_BluetoothInitialSetup
    _BluetoothInitialSetup->_EnterCommandMode

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_UseBluetooth

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               107   107      0  611658
                                            148 BANK2    107   107      0
                      _BlueConnected
                         _BufferCopy
                         _ClearUSART
                _ConfigureOscillator
                            _InitApp
                        _Init_System
                          _ReadIRpin
                        _ReadVoltage
                           _UARTchar
                     _UARTchar_CONST
               _UARTstringCRLN_CONST
                   _UARTstring_CONST
                       _UseBluetooth
                          _UseIRCode
                            ___ftadd
                             ___ftge
                            ___ftsub
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _UseIRCode                                           12     6      6   25990
                                            137 BANK0     12     6      6
                          _DecodeNEC
                         _LEDTimerON
                    _ReadCodeButtons
                          _ReadIRpin
                     _ReadPushButton
                     _SendRF_Channel
                 _SyncGlobalToEEPROM
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SendRF_Channel                                       1     1      0    7332
                                             16 BANK0      1     1      0
                        _SendRF_wait
 ---------------------------------------------------------------------------------
 (2) _ReadPushButton                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadCodeButtons                                      1     1      0    3465
                                             12 BANK0      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _UseBluetooth                                       151   148      3  237103
                                            149 BANK0      3     0      3
                                              0 BANK2    148   148      0
                         _ClearUSART
                          _DecodeNEC
                          _EncodeNEC
                          _GetNumber
                  _GetNumberUnsigned
                _GetStringAfterComma
                        _ReadVoltage
                       _SendNEC_wait
                        _SendRF_wait
                         _SetEEPROM2
                     _StringAddEqual
                     _StringContains
      _StringContainsCaseInsensitive
                        _StringMatch
         _StringMatchCaseInsensitive
                 _SyncEEPROMToGlobal
                 _SyncGlobalToEEPROM
                           _UARTchar
                     _UARTchar_CONST
                    _UARTcommandMenu
                         _UARTstring
                     _UARTstringCRLN
               _UARTstringCRLN_CONST
                   _UARTstring_CONST
                    _WaitForIRsignal
                        _cleanBuffer
                            _delayUS
                    _lowercaseString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercaseString                                      3     1      2     153
                                              3 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _WaitForIRsignal                                      1     1      0   32158
                                             18 BANK0      1     1      0
                         _LEDTimerON
                     _UARTchar_CONST
               _UARTstringCRLN_CONST
                   _UARTstring_CONST
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _UARTstringCRLN_CONST                                 2     0      2   16162
                                             16 BANK0      2     0      2
                     _UARTchar_CONST
                   _UARTstring_CONST
 ---------------------------------------------------------------------------------
 (2) _UARTstringCRLN                                       2     0      2   13707
                                             16 BANK0      2     0      2
                           _UARTchar
                   _UARTstring_CONST
 ---------------------------------------------------------------------------------
 (2) _UARTcommandMenu                                     11     7      4   16918
                                             16 BANK0     11     7      4
                           _UARTchar
                   _UARTstring_CONST
 ---------------------------------------------------------------------------------
 (2) _StringMatchCaseInsensitive                           6     2      4    2836
                                              6 BANK0      6     2      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          5     1      4     368
                                              3 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     263   261      2   12703
                                             18 BANK0      8     6      2
                                              0 BANK1    255   255      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _SendRF_wait                                          5     0      5    7310
                                             11 BANK0      5     0      5
                         _LEDTimerON
                          _ReadIRpin
                             _SendRF
 ---------------------------------------------------------------------------------
 (4) _SendRF                                               8     3      5     566
                                              3 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _LEDTimerON                                           0     0      0       0
                        _ResetTimer1
 ---------------------------------------------------------------------------------
 (5) _ResetTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SendNEC_wait                                         6     1      5    4953
                                             24 BANK0      6     1      5
                   _CheckReceivingIR
                          _ReadIRpin
                      _SendNEC_bytes
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _SendNEC_bytes                                        5     0      5    1039
                                             19 BANK0      5     0      5
                      _Reverse_4Byte
 ---------------------------------------------------------------------------------
 (4) _Reverse_4Byte                                       16    12      4     823
                                              3 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (3) _CheckReceivingIR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadVoltage                                          8     5      3   16534
                                             44 BANK0      8     5      3
                   _InternalADC_Read
                  _VoltageDividerOFF
                   _VoltageDividerON
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2234
                                             11 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    2658
                                             14 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerOFF                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InternalADC_Read                                     6     4      2    3636
                                             12 BANK0      6     4      2
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _GetStringAfterComma                                  8     3      5     532
                                              3 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _GetNumberUnsigned                                   19    14      5    2992
                                             15 BANK0     19    14      5
                           _IsLetter
                             ___lmul
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _GetNumber                                           20    15      5    2275
                                             15 BANK0     20    15      5
                           _IsLetter
                             ___lmul
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     450
                                              3 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _IsLetter                                             1     1      0      44
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EncodeNEC                                           41    37      4     515
                                              7 BANK0     41    37      4
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (2) _DecodeNEC                                           15     7      8    1243
                                              7 BANK0     15     7      8
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (3) _Reverse_Byte                                         4     4      0     207
                                              3 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Init_System                                         50    50      0  275528
                                            165 BANK1     50    50      0
                         _BufferCopy
                  _EEPROMinitialized
                            _InitADC
                      _InitBluetooth
                             _InitIR
                         _InitTimers
                           _InitUART
                         _SetEEPROM2
                   _SetEEPROMdefault
                 _SyncEEPROMToGlobal
                 _SyncGlobalToEEPROM
                        _cleanBuffer
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _SyncEEPROMToGlobal                                 101   101      0    3960
                                             48 BANK0    101   101      0
                         _GetEEPROM1
                         _GetEEPROM2
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM2                                           8     6      2    1661
                                             40 BANK0      8     6      2
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM1                                           8     6      2    1637
                                             40 BANK0      7     5      2
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (2) _SetEEPROMdefault                                     5     5      0   10229
                                            137 BANK0      5     5      0
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _InitUART                                            18    14      4   10863
                                             88 BANK0     18    14      4
                         _ClearUSART
                   _Local_CloseUSART
                          _OpenUSART
                              _Round
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) _Round                                                7     4      3    6633
                                             81 BANK0      7     4      3
                           ___altoft
                            ___ftadd
                            ___fttol
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2350
                                             11 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     284
                                              3 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _Local_CloseUSART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimers                                           0     0      0       0
                         _InitTimer1
                         _InitTimer2
                         _InitTimer3
 ---------------------------------------------------------------------------------
 (3) _InitTimer3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitIR                                               0     0      0     295
                         _InitTimer0
                          _ReadIRpin
                        _ResetTimer0
                   _cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (3) _cleanBuffer16bit                                     8     4      4     295
                                              3 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _ResetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitBluetooth                                        0     0      0  173332
                _BluetoothConfigured
              _BluetoothInitialSetup
                         _ClearUSART
                          _ResetBlue
                 _SyncGlobalToEEPROM
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _SyncGlobalToEEPROM                                   1     1      0    9889
                                            136 BANK0      1     1      0
                         _SetEEPROM1
                         _SetEEPROM2
 ---------------------------------------------------------------------------------
 (3) _SetEEPROM2                                          79    11     68    5049
                                             57 BANK0     79    11     68
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (3) _SetEEPROM1                                          45    11     34    4815
                                             57 BANK0     44    10     34
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (4) _SetMemoryLong                                       17    12      5    2341
                                             40 BANK0     17    12      5
                      _GetMemoryLong
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _GetMemoryLong                                       33    29      4     742
                                              7 BANK0     33    29      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (4) _SetMemoryChar                                        3     2      1    1958
                                             13 BANK0      3     2      1
                      _GetMemoryChar
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _WriteEEPROM_1Byte                                    5     2      3    1008
                                              3 BANK0      5     2      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (6) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _GetMemoryChar                                        6     2      4     583
                                              7 BANK0      6     2      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (6) _ReadEEPROM_1Byte                                     4     2      2     538
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _BluetoothInitialSetup                              115   115      0  155027
                                            131 BANK0      1     1      0
                                             51 BANK1    114   114      0
                         _BufferCopy
                         _ClearUSART
                   _EnterCommandMode
                     _StringContains
      _StringContainsCaseInsensitive
                         _UARTstring
                   _UARTstring_CONST
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _UARTstring                                           2     0      2    3757
                                             13 BANK0      2     0      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (3) _UARTchar                                             1     1      0    3482
                                             12 BANK0      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _StringContainsCaseInsensitive                       11     7      4    2253
                                              6 BANK0     11     7      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (3) _lowercaseChar                                        3     1      2     450
                                              3 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _EnterCommandMode                                    51    51      0   72422
                                              0 BANK1     51    51      0
                      _BlueConnected
                         _ClearUSART
                          _ResetBlue
                     _StringContains
                   _UARTstring_CONST
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             51    37     14   50112
                                             81 BANK0     50    36     14
                        _ReadVoltage (ARG)
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   10348
                                             44 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              3 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   10150
                                             44 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2335
                                             17 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    4496
                                             29 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1448
                                              3 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1580
                                              9 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     431
                                              3 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     574
                                              3 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2345
                                             11 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     671
                                             16 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     802
                                              3 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     572
                                             66 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    4027
                                             66 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3602
                                             54 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2148
                                              3 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     109
                                              3 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1032
                                              3 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _UARTstring_CONST                                     2     0      2    9028
                                             14 BANK0      2     0      2
                     _UARTchar_CONST
 ---------------------------------------------------------------------------------
 (4) _UARTchar_CONST                                       2     2      0    3505
                                             12 BANK0      2     2      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _StringContains                                       9     5      4    1321
                                              3 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _ResetBlue                                            0     0      0    3438
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _delayUS                                              9     5      4    3438
                                              3 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _ClearUSART                                           0     0      0      23
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (3) _ReadUSART                                            1     1      0      23
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _BlueConnected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    6718
                                             11 BANK0      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    4955
                                              3 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _BluetoothConfigured                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
                           _ResetADC
 ---------------------------------------------------------------------------------
 (3) _ResetADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMinitialized                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             18    18      0    1189
                                             13 COMRAM    18    18      0
                        _EraseScreen
                        _IsCharacter
                    i1_BlueConnected
                        i1_ReadUSART
                         i1_UARTchar
                   i1_UARTchar_CONST
                       i1_UARTstring
                 i1_UARTstring_CONST
 ---------------------------------------------------------------------------------
 (10) i1_UARTstring_CONST                                  2     0      2     236
                                             11 COMRAM     2     0      2
                   i1_UARTchar_CONST
 ---------------------------------------------------------------------------------
 (11) i1_UARTchar_CONST                                    2     2      0     165
                                              9 COMRAM     2     2      0
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_UARTstring                                        2     0      2     213
                                             10 COMRAM     2     0      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (10) i1_ReadUSART                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i1_BlueConnected                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IsCharacter                                         1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EraseScreen                                         2     2      0     188
                                             10 COMRAM     2     2      0
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (11) i1_UARTchar                                          1     1      0     142
                                              9 COMRAM     1     1      0
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (12) i1_delayUS                                           9     5      4      98
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _high_isr                                           21    21      0    1808
                                             45 COMRAM    18    18      0
                                              0 BANK0      3     3      0
                         _IRrawToNEC
                        _ResetTimer3
                          _SetTimer0
                        i2_ReadIRpin
                      i2_ResetTimer0
                 i2_cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (14) i2_cleanBuffer16bit                                  8     4      4     143
                                             31 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (14) i2_ResetTimer0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_ReadIRpin                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _SetTimer0                                           2     0      2     108
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ResetTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _IRrawToNEC                                         14     9      5    1400
                                             31 COMRAM    14     9      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueConnected
   _BufferCopy
     _cleanBuffer
   _ClearUSART
     _ReadUSART
   _ConfigureOscillator
   _InitApp
   _Init_System
     _BufferCopy
       _cleanBuffer
     _EEPROMinitialized
     _InitADC
       _ResetADC
     _InitBluetooth
       _BluetoothConfigured
       _BluetoothInitialSetup
         _BufferCopy
           _cleanBuffer
         _ClearUSART
           _ReadUSART
         _EnterCommandMode
           _BlueConnected
           _ClearUSART
             _ReadUSART
           _ResetBlue
             _delayUS
           _StringContains
           _UARTstring_CONST
             _UARTchar_CONST
               _delayUS
           _cleanBuffer
           _delayUS
           _sprintf
             _ReadVoltage (ARG)
               _InternalADC_Read
                 _delayUS
               _VoltageDividerOFF
               _VoltageDividerON
               ___ftdiv
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lwtoft
                 ___ftpack
               _delayUS
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftadd (ARG)
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftge (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftsub (ARG)
               ___ftadd
                 ___ftpack
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftdiv (ARG)
                       ___ftpack
                       ___lwtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___ftpack
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftdiv (ARG)
                       ___ftpack
                       ___lwtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
               ___lldiv (ARG)
             ___lltoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_ (ARG)
             __tdiv_to_l_ (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _isdigit (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _StringContains
         _StringContainsCaseInsensitive
           _lowercaseChar
         _UARTstring
           _UARTchar
             _delayUS
         _UARTstring_CONST
           _UARTchar_CONST
             _delayUS
         _cleanBuffer
         _delayUS
         _sprintf
           _ReadVoltage (ARG)
             _InternalADC_Read
               _delayUS
             _VoltageDividerOFF
             _VoltageDividerON
             ___ftdiv
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lwtoft
               ___ftpack
             _delayUS
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftsub (ARG)
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_ (ARG)
           __tdiv_to_l_ (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _ClearUSART
         _ReadUSART
       _ResetBlue
         _delayUS
       _SyncGlobalToEEPROM
         _SetEEPROM1
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
         _SetEEPROM2
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
       _cleanBuffer
     _InitIR
       _InitTimer0
       _ReadIRpin
       _ResetTimer0
       _cleanBuffer16bit
     _InitTimers
       _InitTimer1
       _InitTimer2
       _InitTimer3
     _InitUART
       _ClearUSART
         _ReadUSART
       _Local_CloseUSART
       _OpenUSART
       _Round
         ___altoft
           ___ftpack
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___fttol
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___lltoft
         ___ftpack
     _SetEEPROM2
       _SetMemoryChar
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
       _SetMemoryLong
         _GetMemoryLong
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
     _SetEEPROMdefault
       _SyncGlobalToEEPROM
         _SetEEPROM1
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
         _SetEEPROM2
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
     _SyncEEPROMToGlobal
       _GetEEPROM1
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
       _GetEEPROM2
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _SyncGlobalToEEPROM
       _SetEEPROM1
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
       _SetEEPROM2
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _cleanBuffer
     _sprintf
       _ReadVoltage (ARG)
         _InternalADC_Read
           _delayUS
         _VoltageDividerOFF
         _VoltageDividerON
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft
           ___ftpack
         _delayUS
       ___awdiv (ARG)
         ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _ReadIRpin
   _ReadVoltage
     _InternalADC_Read
       _delayUS
     _VoltageDividerOFF
     _VoltageDividerON
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
     _delayUS
   _UARTchar
     _delayUS
   _UARTchar_CONST
     _delayUS
   _UARTstringCRLN_CONST
     _UARTchar_CONST
       _delayUS
     _UARTstring_CONST
       _UARTchar_CONST
         _delayUS
   _UARTstring_CONST
     _UARTchar_CONST
       _delayUS
   _UseBluetooth
     _ClearUSART
       _ReadUSART
     _DecodeNEC
       _Reverse_Byte
     _EncodeNEC
       _Reverse_Byte
     _GetNumber
       _IsLetter
       ___lmul
       _lowercaseChar
     _GetNumberUnsigned
       _IsLetter
       ___lmul
       _lowercaseChar
     _GetStringAfterComma
     _ReadVoltage
       _InternalADC_Read
         _delayUS
       _VoltageDividerOFF
       _VoltageDividerON
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
       _delayUS
     _SendNEC_wait
       _CheckReceivingIR
       _ReadIRpin
       _SendNEC_bytes
         _Reverse_4Byte
       _delayUS
     _SendRF_wait
       _LEDTimerON
         _ResetTimer1
       _ReadIRpin
       _SendRF
     _SetEEPROM2
       _SetMemoryChar
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
       _SetMemoryLong
         _GetMemoryLong
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContains
     _StringContainsCaseInsensitive
       _lowercaseChar
     _StringMatch
     _StringMatchCaseInsensitive
       _lowercaseChar
     _SyncEEPROMToGlobal
       _GetEEPROM1
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
       _GetEEPROM2
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _SyncGlobalToEEPROM
       _SetEEPROM1
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
       _SetEEPROM2
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _UARTchar
       _delayUS
     _UARTchar_CONST
       _delayUS
     _UARTcommandMenu
       _UARTchar
         _delayUS
       _UARTstring_CONST
         _UARTchar_CONST
           _delayUS
     _UARTstring
       _UARTchar
         _delayUS
     _UARTstringCRLN
       _UARTchar
         _delayUS
       _UARTstring_CONST
         _UARTchar_CONST
           _delayUS
     _UARTstringCRLN_CONST
       _UARTchar_CONST
         _delayUS
       _UARTstring_CONST
         _UARTchar_CONST
           _delayUS
     _UARTstring_CONST
       _UARTchar_CONST
         _delayUS
     _WaitForIRsignal
       _LEDTimerON
         _ResetTimer1
       _UARTchar_CONST
         _delayUS
       _UARTstringCRLN_CONST
         _UARTchar_CONST
           _delayUS
         _UARTstring_CONST
           _UARTchar_CONST
             _delayUS
       _UARTstring_CONST
         _UARTchar_CONST
           _delayUS
       _delayUS
     _cleanBuffer
     _delayUS
     _lowercaseString
     _sprintf
       _ReadVoltage (ARG)
         _InternalADC_Read
           _delayUS
         _VoltageDividerOFF
         _VoltageDividerON
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft
           ___ftpack
         _delayUS
       ___awdiv (ARG)
         ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _UseIRCode
     _DecodeNEC
       _Reverse_Byte
     _LEDTimerON
       _ResetTimer1
     _ReadCodeButtons
       _delayUS
     _ReadIRpin
     _ReadPushButton
     _SendRF_Channel
       _SendRF_wait
         _LEDTimerON
           _ResetTimer1
         _ReadIRpin
         _SendRF
     _SyncGlobalToEEPROM
       _SetEEPROM1
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
       _SetEEPROM2
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _delayUS
   ___ftadd
     ___ftpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftge
   ___ftsub
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lltoft (ARG)
       ___ftpack
   _cleanBuffer
   _delayUS

 _low_isr (ROOT)
   _EraseScreen
     i1_UARTchar
       i1_delayUS
   _IsCharacter
   i1_BlueConnected
   i1_ReadUSART
   i1_UARTchar
     i1_delayUS
   i1_UARTchar_CONST
     i1_delayUS
   i1_UARTstring
     i1_UARTchar
       i1_delayUS
   i1_UARTstring_CONST
     i1_UARTchar_CONST
       i1_delayUS

 _high_isr (ROOT)
   _IRrawToNEC
   _ResetTimer3
   _SetTimer0
   i2_ReadIRpin
   i2_ResetTimer0
   i2_cleanBuffer16bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      C8      15       78.1%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      B4      13       70.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FC      11       98.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100     FF     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FF     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      A0       5      100.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3F      5E       1       98.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     576      32        0.0%
DATA                 0      0     576       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Apr 18 19:08:50 2015

                           BufferCopy@shift 0070                          UARTstringCRLN@data 0070  
                    __end_of_Conf1_ChannelD F1D3                      __end_of_Conf1_ChannelE F1DF  
                    __end_of_Conf1_ChannelF F1EB                       UseBluetooth@StringPos 00F7  
                              ___altoft@exp 0073                      __end_of_Conf1_Channels F1FD  
                   __size_of_StringContains 013A                               ??_EraseScreen 000B  
                               _IRcodePlace 00FE                               ___altoft@sign 0074  
                      ?_BluetoothConfigured 0001                                ___awdiv@sign 006E  
                       ?_SyncGlobalToEEPROM 0001                                          bsr 000FE0  
                    __end_of_Conf2_Channels F201                         ___wmul@multiplicand 0073  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
                              ___ftadd@exp1 00A1                                ___ftadd@exp2 00A0  
                               ?_LEDTimerON 0001                          lowercaseChar@Input 0063  
                              ___ftadd@sign 009F                                  _SYNTAX_ERR F1B9  
                                       l150 54C4                                         l153 5524  
                                       l323 9D64                                         l324 9D54  
                                       l158 55DE       StringContainsCaseInsensitive@tempThat 006F  
                                       l731 99F6                                         l732 99F8  
                                       l725 99C2                                         l743 A0E8  
                                       l744 A0E4                                         l736 A11C  
                                       l568 6EAA                                         l737 A118  
                                       l729 99E6                                         l765 A390  
     StringContainsCaseInsensitive@tempThis 006E                                         l849 94C4  
                              __CFG_CPB$OFF 000000                                         _PR2 000FCB  
                              __CFG_CPD$OFF 000000                  StringAddEqual@NullPosition 0076  
                      lowercaseString@Input 0063                                  _IRrawToNEC 60B0  
                             _IRbitPosition 005B                         __end_of_IsCharacter A3B4  
                              __CFG_BORV$27 000000                                ___awmod@sign 0068  
                                       prod 000FF3                                         wreg 000FE8  
                                _IRsendCode 0314                                  _IRsendFlag 004F  
                                _GetEEPROM1 8C16                                  _GetEEPROM2 8E90  
                             main@Connected 02FD                               _InitBluetooth 9AFA  
                              __CFG_LVP$OFF 000000                                ___ftdiv@cntr 0077  
                              ___ftdiv@sign 007C                                        l1024 9D16  
                                      l1032 A3C0                                        l1114 70C0  
                                      l1038 9C6A                                        l1118 7196  
                                      l1071 8268                                        l2032 0700  
                                      l2041 09D4                                        l1066 8274  
                                      l2034 075C                                        l1091 9628  
                                      l1084 88F4                                        l1077 8906  
                                      l3006 9446                                        l2039 0984  
                                      l2073 1230                                        l2450 2E5C  
                                      l2287 8A62                                        l1761 9DE0  
                                      l2459 30A2                                        l2910 7462  
                                      l2902 7D68                                        l2916 74EA  
                                      l2941 A1A6                                        l2909 741E  
                                      l2838 838E                                        l2871 6756  
                                      l1975 4378                                        l2873 6780  
                                      l2882 6864                                        l2891 688E  
                                      l2867 671C                                        l2795 767E  
                                      l9002 75F4                                        l9100 7EE0  
                                      l2996 900E                                        l9110 8F88  
                                      l9014 7630                                        l9006 7608  
                                      l9040 8E04                                        l9032 9E0E  
                                      l9112 8F9A                                        l9024 7662  
                                      l9200 257E                                        l9050 8E8A  
                                      l9122 8FFA                                        l9114 8FA4  
                                      l9130 93D0                                        l9026 7674  
                                      l9018 7644                                        l9210 25C6  
                                      l9044 8E46                                        l8500 82E8  
                                      l9132 93E2                                        l9220 264E  
                                      l9204 258C                                        l8510 837E  
                                      l8502 831A                                        l9134 93EC  
                                      l9310 29B4                                        l9302 2944  
                                      l9222 2656                                        l9206 25A4  
                                      l9064 7DDC                                        l9144 9914  
                                      l9320 2A42                                        l9232 2690  
                                      l9224 265C                                        l9154 9C9C  
                                      l8522 83B8                                        l8506 833C  
                                      l8602 67E8                                        l9082 7E70  
                                      l9138 9432                                        l9146 9926  
                                      l9330 2ABE                                        l9314 29E4  
                                      l9250 2748                                        l9242 270E  
                                      l9234 269C                                        l9218 2648  
                                      l9172 A154                                        l8516 839A  
                                      l8508 836E                                        l8604 67F8  
                                      l9092 7EA2                                        l9500 31A0  
                                      l9412 2E2A                                        l9404 2DFE  
                                      l9332 2ACA                                        l9340 2B50  
                                      l9316 29FA                                        l9244 271A  
                                      l9236 26A4                                        l9158 9CBC  
                                      l9166 A4C4                                        l8622 68BA  
                                      l8614 6844                                        l8606 6808  
                                      l9094 7EB4                                        l9086 7E84  
                                      l9430 2EE6                                        l9414 2E3E  
                                      l9406 2E0E                                        l9350 2BCC  
                                      l9326 2A90                                        l9318 2A2C  
                                      l9262 27BA                                        l9238 26E8  
                                      l9270 27DA                                        l9176 A16E  
                                      l8632 690A                                        l8616 6854  
                                      l8608 6814                                        l9096 7EC2  
                                      l8704 8D46                                        l8720 8DA0  
                                      l9520 323C                                        l9440 2FDC  
                                      l9344 2BB8                                        l9336 2B0E  
                                      l9256 2782                                        l9248 272E  
                                      l9272 2834                                        l9192 2548  
                                      l8552 9D2C                                        l9610 8132  
                                      l8706 8D54                                        l8642 79C2  
                                      l9530 3282                                        l9514 31F8  
                                      l9506 31A8                                        l9442 2FEC  
                                      l9426 2E94                                        l9418 2E62  
                                      l9362 2C64                                        l9354 2C0C  
                                      l9346 2BBE                                        l9338 2B3C  
                                      l9450 3018                                        l9266 27D2  
                                      l9258 27A0                                        l9620 8160  
                                      l8580 6764                                        l8724 8DB6  
                                      l8716 8D90                                        l8708 8D5E  
                                      l8740 9282                                        l9508 31C2  
                                      l9380 2CE4                                        l9702 9842  
                                      l9710 9868                                        l9606 812E  
                                      l9622 8168                                        l8494 82C2  
                                      l8574 672A                                        l8670 7A88  
                                      l8662 7A4C                                        l9550 3316  
                                      l9518 3230                                        l9462 3082  
                                      l9390 2D2E                                        l9382 2CFE  
                                      l9374 2CC8                                        l9366 2C8E  
                                      l9358 2C12                                        l9286 2890  
                                      l9198 2568                                        l8814 9C7E  
                                      l9616 8146                                        l8760 92FA  
                                      l8752 92D4                                        l8744 9296  
                                      l8736 9270                                        l8680 7ACC  
                                      l8672 7A90                                        l8648 79FC  
                                      l9552 332A                                        l9560 3436  
                                      l9544 32E2                                        l9528 3276  
                                      l9536 32AC                                        l9472 30C4  
                                      l9448 3008                                        l8498 82D8  
                                      l8586 6776                                        l8746 92A4  
                                      l8666 7A6C                                        l8850 6570  
                                      l9554 33B4                                        l9562 3450  
                                      l9538 32B8                                        l9490 314C  
                                      l9482 3104                                        l9458 305A  
                                      l9394 2D5A                                        l9570 34A2  
                                      l9722 A4B6                                        l8596 67B8  
                                      l8924 73CA                                        l8692 8D10  
                                      l8748 92AE                                        l8756 92E4  
                                      l8676 7AB0                                        l8908 A236  
                                      l9492 3152                                        l9476 30F0  
                                      l9396 2D62                                        l9388 2D1A  
                                      l9804 72D4                                        l9820 7328  
                                      l9732 8862                                        l9590 80AC  
                                      l9582 805A                                        l8918 7390  
                                      l9566 3464                                        l9486 3144  
                                      l9478 30F6                                        l9814 7306  
                                      l9902 A308                                        l9638 A03E  
                                      l9742 887C                                        l8872 4F5C  
                                      l9496 3160                                        l9568 347E  
                                      l9808 72D8                                        l9744 8882  
                                      l9760 8900                                        l9736 886C  
                                      l9690 981A                                        l9594 80B4  
                                      l9586 8064                                        l8954 749C  
                                      l8946 7474                                        l8698 8D28  
                                      l8858 6664                                        l8890 51D6  
                                      l8882 505E                                        l9818 7320  
                                      l9666 8A3A                                        l9922 81B4  
                                      l9738 8872                                        l8980 7548  
                                      l8964 74CE                                        l9932 81EC  
                                      l9756 88FA                                        l9748 888C  
                                      l9694 9828                                        l8974 7522  
                                      l8966 74E0                                        l8958 74B0  
                                      l8878 5032                                        l9782 7212  
                                      l9774 71C0                                        l9950 826E  
                                      l9942 8206                                        STR_1 FE54  
                                      l8896 52AC                                        l9936 81F6  
                                      l9928 81E0                                        l9768 8932  
                                      STR_2 FE73                                        STR_3 FC1F  
                                      l8994 759E                                        l9786 721A  
                                      l9778 71CA                                        l9938 81FC  
                                      STR_4 FFE1                                        STR_5 FFED  
                                      l9964 7AFC                                        STR_6 FFFC  
                                      STR_7 FB7A                                        l9974 7B10  
                                      l9958 8294                                        STR_8 FFF5  
                                      STR_9 FF7D                                        l9976 7B96  
                                      l9898 A2F2                        ??_SyncGlobalToEEPROM 00E8  
                                      _CRLN F205                                        _LATA 000F89  
                                      _LATB 000F8A                                        _LATC 000F8B  
                                      u8221 66CA                                        u8231 66E8  
                                      u9210 26DE                                        u9300 28D6  
                                      u8431 799E                                        u9305 28CA  
                                      u9217 26D4                                        u9250 2772  
                                      u8451 79D8                                        u9520 2E54  
                                      u9257 2768                                        u8761 736C  
                                      u9810 80A0                                        u8781 73A6  
                                      u9840 80E4                                        u9920 897E  
                                      u9817 8096                                        u8971 7DB8  
                                      u9860 8118                                        u9925 8972  
                                      u8990 7E02                                        u9847 80DA  
                                      _TMR2 000FCC                                        u9867 810E  
                                      u8995 7DF8                                        _WPUB 000F7C  
                                i1delayUS@i 0006                              ?i2_ResetTimer0 0001  
                                      _Sent 00FF                  WriteEEPROM_1Byte@GIEstatus 0066  
                                _ClearUSART A442                   SetMemoryChar@AddressFirst 006D  
                                      _main 52DA                                ___ftpack@arg 0063  
                              ___ftpack@exp 0066                                        fsr0h 000FEA  
                                      fsr1h 000FE2                                        indf0 000FEF  
                                      fsr0l 000FE9                                        fsr2h 000FDA  
                                      indf1 000FE7                                        fsr1l 000FE1  
                                      indf2 000FDF                                        fsr2l 000FD9  
                                _RFsendCode 0300                                  _RFsendFlag 00FC  
                                      pclat 000FFA                            _UARTstring_CONST A152  
                               _RFcodePlace 00FB                                        prodh 000FF4  
                       main@BluetoothString 0294                                        prodl 000FF3  
                                      start 01CA                               __CFG_IESO$OFF 000000  
                          Reverse_Byte@This 0066                    __end_ofi1_UARTchar_CONST A214  
                              _sprintf$3920 00C5                            Reverse_Byte@temp 0065  
                             __CFG_MCLRE$ON 000000                                ___ftmul@cntr 008A  
                            UARTstring@data 006D                                 ?i1_UARTchar 0001  
                              ___param_bank 000010                                ___ftmul@sign 008B  
                           __end_of_InitADC A3E0                             __end_of_InitApp 9EC6  
                        i2_cleanBuffer16bit 9F4C       __end_of_StringContainsCaseInsensitive 7356  
    __size_of_StringContainsCaseInsensitive 01AE               _StringContainsCaseInsensitive 71A8  
                   __size_of_ReadPushButton 000E                       ??_BluetoothConfigured 0063  
                              ___fttol@exp1 00B0                        GetNumberUnsigned@Hex 007B  
                             ??_Init_System 00F5                                ___fttol@lval 00AC  
                      _Conf2_ChannelH_1_OFF F12C                           IRrawToNEC@NECtemp 0027  
                      _Conf2_ChannelH_2_OFF F14C                        _Conf2_ChannelH_3_OFF F16C  
                                     l10002 7C2E                                       l10020 8A72  
                                     l10112 9BE2                                       l11000 57FE  
                                     l10200 947E                                       l10032 8AAC  
                                     l10024 8A86                                       l10106 A37E  
                                     l10050 8B2E                                       l10034 8AB4  
                                     l10116 9C06                                       l10300 8EC6  
                                     l11020 586E                                       l10204 9488  
                                     l10062 9526                                       l10038 8AF6  
                                     l10160 99B8                                       l10152 99A2  
                                     l10064 9538                                       l10312 8F26  
                                     l11120 5AD0                                       l11112 5A94  
                                     l11040 58D8                                       l11032 58C4  
                                     l11008 5838                                       l11016 5862  
                                     l10208 949A                                       l10048 8B28  
                                     l10072 9F0C                                       l12000 0608  
                                     l10410 42C0                                       l10402 425A  
                                     l11106 5A86                                       l11026 5892  
                                     l11210 5D78                                       l10500 4540  
                                     l10412 42C6                                       l10420 42D8  
                                     l10172 99DA                                       l10164 99C6  
                                     l10156 99AE                                       l10308 8F20  
                                     l10316 8F2C                                       l11124 5AEE  
                                     l11116 5AB2                                       l11044 58F8  
                                     l11220 5DA4                                       l10332 98F2  
                                     l10324 98A6                                       l10076 9F26  
                                     l12004 064A                                       l10094 9636  
                                     l10086 95E6                                       l10262 8C6C  
                                     l11134 5B6E                                       l11070 5960  
                                     l11054 5924                                       l11302 5FEA  
                                     l11230 5DE2                                       l11214 5D92  
                                     l11206 5D58                                       l12110 0D4A  
                                     l12014 068A                                       l10424 42EC  
                                     l10416 42D2                                       l10176 99EA  
                                     l10168 99D0                                       l10264 8C72  
                                     l10280 8CD6                                       l11136 5BC2  
                                     l11144 5BCC                                       l11064 595A  
                                     l11048 5912                                       l11304 603E  
                                     l11312 6048                                       l10344 A43C  
                                     l12120 0D7C                                       l12008 066E  
                                     l10354 A460                                       l10602 47C2  
                                     l10522 45C0                                       l10426 42F4  
                                     l10258 8C62                                       l10290 8EAC  
                                     l11154 5C16                                       l11146 5BD4  
                                     l11074 5976                                       l11082 5992  
                                     l11322 6092                                       l11314 6050  
                                     l11250 5E12                                       l11226 5DC2  
                                     l11402 84F6                                       l12210 11AC  
                                     l12202 1166                                       l12050 085E  
                                     l10372 41A4                                       l10276 8CD0  
                                     l10268 8C7C                                       l10284 8E9C  
                                     l11076 597E                                       l11244 5DFE  
                                     l11236 5DE8                                       l11420 8556  
                                     l11340 6E0A                                       l11332 6DEA  
                                     l12116 0D6E                                       l10390 41E4  
                                     l10294 8EB6                                       l10630 9A44  
                                     l11158 5C34                                       l11094 59D4  
                                     l11086 59A4                                       l11262 5E50  
                                     l11254 5E20                                       l11174 5CB8  
                                     l11182 5CE2                                       l11166 5C7E  
                                     l11414 852C                                       l11406 8518  
                                     l10614 9FB4                                       l11350 6E52  
                                     l11502 84B6                                       l12302 13A0  
                                     l10544 4640                                       l10456 4440  
                                     l10800 8696                                       l10296 8EBC  
                                     l10288 8EA6                                       l10720 7022  
                                     l11088 59AC                                       l11280 5F10  
                                     l11256 5E28                                       l11192 5D12  
                                     l11440 859C                                       l11432 8586  
                                     l10640 7C8A                                       l11360 6ED2  
                                     l11344 6E16                                       l11336 6DF6  
                                     l12240 1272                                       l12224 1206  
                                     l12216 11CE                                       l12160 0F82  
                                     l12072 0996                                       l12048 084C  
                                     l11600 6A7E                                       l13120 55E2  
                                     l13032 5398                                       l13024 535A  
                                     l10570 4706                                       l10386 41DA  
                                     l10810 86B0                                       l10730 70B4  
                                     l10626 9A1C                                       l11274 5F02  
                                     l11186 5CEE                                       l11426 8568  
                                     l11354 6E8C                                       l11506 84D4  
                                     l12410 1770                                       l12330 144C  
                                     l12322 1404                                       l12234 125C  
                                     l12170 1072                                       l12146 0F0C  
                                     l12066 0974                                       l11610 6AD4  
                                     l13210 57C2                                       l13050 53E0  
                                     l10396 4220                                       l10812 86B6  
                                     l10804 86A0                                       l10740 70CE  
                                     l10732 70B8                                       l10724 702C  
                                     l11524 9396                                       l11516 9330  
                                     l11292 5F6A                                       l11284 5F2E  
                                     l11460 85FE                                       l11372 6F18  
                                     l11356 6EB0                                       l12500 1A1E  
                                     l12404 1760                                       l12244 1280  
                                     l12316 13EC                                       l12156 0F4E  
                                     l11620 6B2A                                       l11604 6AA6  
                                     l13140 567E                                       l13052 53E6  
                                     l13036 53A2                                       l13028 538A  
                                     l10478 44C0                                       l10398 4228  
                                     l10910 9B5E                                       l10822 8710  
                                     l10806 86A6                                       l10830 871C  
                                     l10742 70D4                                       l10718 701C  
                                     l11198 5D44                                       l11446 85B0  
                                     l11454 85D6                                       l10646 7CC4  
                                     l11630 9644                                       l11382 6F4A  
                                     l11366 6EDE                                       l11358 6EB6  
                                     l11470 A05C                                       l12510 1A44  
                                     l12422 1836                                       l12406 1766  
                                     l12342 14E2                                       l12334 1456  
                                     l12254 12AA                                       l12190 110E  
                                     l12182 10D0                                       l12174 1094  
                                     l12166 1034                                       l12078 0A86  
                                     l11550 9DC0                                       l11614 6AFC  
                                     l13070 5438                                       l10592 4798  
                                     l10816 86C0                                       l10752 70EE  
                                     l11288 5F4C                                       l11640 9680  
                                     l11392 6FAE                                       l11368 6EE6  
                                     l12424 1864                                       l12416 17F2  
                                     l12352 1504                                       l12280 1320  
                                     l12248 1292                                       l12176 109C  
                                     l11536 A47E                                       l13080 548A  
                                     l13056 53F0                                       l13048 53DC  
                                     l10826 8716                                       l10762 718A  
                                     l10746 70DE                                       l11810 7796  
                                     l10666 7D26                                       l11634 966E  
                                     l11378 6F3E                                       l11482 8402  
                                     l11466 A046                                       l12434 1896  
                                     l12362 15AE                                       l12346 14E8  
                                     l12290 1366                                       l12258 12BC  
                                     l12194 1130                                       l11554 9DCC  
                                     l11570 695C                                       l11626 6B52  
                                     l13154 56C8                                       l13090 551C  
                                     l13066 5428                                       l10772 A418  
                                     l10764 718E                                       l10748 70E4  
                                     l10676 7D7A                                       l11644 968C  
                                     l11652 96A4                                       l11388 6FA8  
                                     l10932 9ABC                                       l11492 8448  
                                     l11476 83D0                                       l12700 2012  
                                     l12612 1D10                                       l12532 1ABC  
                                     l12380 16B0                                       l12372 15E0  
                                     l12356 151C                                       l12364 15B4  
                                     l12444 18D6                                       l11580 69D2  
                                     l11572 6980                                       l13172 5708  
                                     l10782 8632                                       l10758 7184  
                                     l11646 9694                                       l11486 8434  
                                     l12622 1D56                                       l12542 1B02  
                                     l12470 1970                                       l12382 16EE  
                                     l12366 15C4                                       l12198 1144  
                                     l11558 9DD8                                       l11590 6A28  
                                     l11574 69A4                                       l11910 6DA6  
                                     l13086 54F0                                       l10784 8638  
                                     l10696 9174                                       l11648 969A  
                                     l10936 9AC0                                       l10928 9A84  
                                     l11496 8498                                       l11488 843C  
                                     l11680 979A                                       l12616 1D34  
                                     l12480 19B6                                       l12392 1720  
                                     l12448 18F8                                       l11584 69FA  
                                     l11568 6938                                       l13168 56DE  
                                     l13096 555C                                       l10794 868A  
                                     l10778 8628                                       l11818 77F0  
                                     l10698 9188                                       l10938 9ACE  
                                     l10970 9732                                       l10954 96DA  
                                     l12706 201E                                       l12298 1388  
                                     l11594 6A50                                       l11906 6D96  
                                     l11914 6DAC                                       l11850 6C12  
                                     l11922 6DC0                                       l10788 8642  
                                     l10948 9AF4                                       l10972 9740  
                                     l11692 97E8                                       l12740 2190  
                                     l12724 2120                                       l12628 1D78  
                                     l11860 6C4A                                       l11836 6BB2  
                                     l13188 5754                                       l10798 8690  
                                     l10982 9766                                       l10966 972E  
                                     l12638 1DF4                                       l12566 1B88  
                                     l11918 6DB2                                       l11862 6C50  
                                     l11846 6C08                                       l12744 219A  
                                     l12728 212A                                       l12576 1BCE  
                                     l12488 19DC                                       l11952 0358  
                                     l11944 02D4                                       l10994 9EF2  
                                     l12754 21FA                                       l12738 218A  
                                     l12682 1FDC                                       l12762 2504  
                                     l12498 19FC                                       l11962 0398  
                                     l11866 6C5A                                       l10988 9EC8  
                                     l10996 9EFA                                       l12692 1FF2  
                                     l12676 1FA8                                       l11980 04BE  
                                     l11972 043A                                       l11948 0316  
                                     l11956 037C                                       l11892 6CEE  
                                     l11876 6C92                                       l12686 1FE6  
                                     l11894 6CF4                                       l11886 6CDE  
                                     l12696 2008                                       l11992 0584  
                                     l11984 0500                                       l11976 047C  
                                     l11968 03F8                                       l11888 6CE4  
                                     l11898 6CFE                                       l11996 05C6  
                                     l11988 0542                               ??_ReadVoltage 008F  
                                     ?_main 0001                             __end_of___awdiv 8DC2  
                                     _EEADR 000FA9                             __end_of___ftadd 6932  
                                     STR_10 FCE1                                       STR_11 FF74  
                                     STR_12 FFB5                                       STR_20 FA82  
                                     STR_13 FFF9                                       STR_21 FFE9  
                                     STR_30 F661                                       STR_14 FABC  
                                     STR_22 F950                                       STR_15 FFCD  
                                     STR_23 F96F                                       STR_31 F86F  
                                     STR_32 FFE7                                       STR_40 FF57  
                                     STR_16 FFF1                                       STR_24 FC8D  
                                     STR_17 FFBB                                       STR_41 FE23  
                                     STR_25 FC78                                       STR_33 FA29  
                                     STR_34 FFA7                                       STR_42 FF06  
                                     STR_26 FBDA                                       STR_18 FA65  
                                     STR_50 F807                                       STR_51 FFA7  
                                     STR_43 FD55                                       STR_19 FFC1  
                                     STR_35 FCF5                                       STR_27 F930  
                                     STR_36 FF55                                       STR_52 FE34  
                                     STR_28 FD1D                                       STR_44 FCA2  
                                     STR_60 F774                             __end_of___awmod 9306  
                                     STR_29 FC91                                       STR_61 F774  
                                     STR_53 FD45                                       STR_37 FC4C  
                                     STR_45 F646                                       STR_54 FF86  
                                     STR_38 FF86                                       STR_62 F799  
                                     STR_46 F479                                       STR_70 F208  
                                     STR_55 FE82                                       STR_39 FDCB  
                                     STR_63 F9EB                                       STR_47 F4A8  
                                     STR_71 F283                                       STR_48 F646  
                                     STR_80 FF60                                       STR_56 FDDD  
                                     STR_64 FA0A                                       STR_72 F2B9  
                                     STR_57 FFAE                                       STR_65 FE90  
                                     STR_49 F7BE                                       STR_73 F6CA  
                                     STR_81 F247                                       STR_58 FF8F  
                                     STR_90 F84D                                       STR_74 F6F6  
                                     STR_82 F618                                       STR_66 F2EF  
                                     STR_59 FFAE                                       STR_83 FFD7  
                                     STR_75 FFC7                                       STR_91 FB92  
                                     STR_67 F321                                       STR_92 FF98  
                                     STR_84 FBAA                                       STR_76 F910  
                                     STR_68 F722                                       STR_85 F618  
                                     STR_93 FD31                                       STR_77 FA48  
                                     STR_69 F5EA                                       STR_94 F845  
                                     STR_78 FDEF                                       STR_86 F69E  
                                     STR_79 FA48                                       STR_95 FCCC  
                                     STR_87 FB10                                       STR_88 FDEF  
                                     STR_96 FA9F                                       STR_97 FBF1  
                                     STR_89 F672                                       STR_98 FE44  
                                     STR_99 FB2B                             __end_of___ftdiv 7DA2  
                       ?i2_cleanBuffer16bit 0020                             __end_of___ftneg A1B4  
                                     _ANSEL 000F7E                             __end_of___lldiv 9020  
                                     u10100 7206                                       u10210 734A  
                                     u10130 723C                                       u10107 71FC  
                                     u10140 7262                                       u10160 72BE  
                                     u10400 3BD0                                       u10217 7340  
                                     u10137 7232                                       u10305 3764  
                                     u10410 3C3C                                       u10147 7258  
                                     u10315 37BE                                       u10235 34EE  
                                     u10500 4008                                       u10420 3CA8  
                           __end_of___ftmul 7AF4                                       u10405 3BC4  
                                     u10325 3818                                       u10245 3548  
                                     u10190 72FA                                       u10510 4074  
                                     u10430 3D14                                       u10167 72B4  
                                     u10415 3C30                                       u10335 3872  
                                     u10255 35A2                                       u10520 40F8  
                                     u10440 3D80                                       u10505 3FFC  
                                     u10425 3C9C                                       u10345 38CC  
                                     u10265 35FC                                       u11410 46FE  
                                     u13010 9376                                       u10450 3DEC  
                                     u10515 4068                                       u10435 3D08  
                                     u10355 3926                                       u10275 3656  
                                     u10460 3E58                                       u10380 3AF8  
                           ___awdiv@divisor 006B                                       u10197 72F0  
                                     u10525 40EC                                       u10445 3D74  
                                     u10365 3980                                       u10285 36B0  
                                     u10470 3EC4                                       u10390 3B64  
                                     u13015 936A                                       u12215 5AF2  
                                     u10455 3DE0                                       u10375 39DA  
                                     u10295 370A                                       u10480 3F30  
                           __end_of___llmod 9458                                       u10801 95AC  
                                     u10465 3E4C                                       u10385 3AEC  
                                     u10490 3F9C                             __end_of___ftsub 9E3A  
                                     u10475 3EB8                                       u10395 3B58  
                           __end_of___fttol 7EF4                                       u10821 95F0  
                                     u10485 3F24                                       u11471 7C66  
                                     u10495 3F90                                       u11491 7CA0  
                       __end_of_FirmVersion F1F4                                       u11750 87A6  
                   ReadEEPROM_1Byte@address 0063                                       u13271 77CC  
                                     u12615 5F6E                                       u11755 879A  
                                     u10885 91D0                                       u14430 1C34  
                                     u14441 1C4E                                       u12930 83F2  
                                     u13650 06DE                                       u12940 8424  
                                     u13741 0AF4                                       u13670 073A  
                                     u12937 83E8                                       u13770 0BF8  
                                     u12947 841A                                       i1l323 9FEC  
                                     i1l324 9FDE                                       i1l743 A210  
                                     i1l736 A2C2                                       i1l744 A20C  
                                     i1l737 A2BE                                       i1l765 A3EC  
                       __end_of_EraseScreen A340                             ___awdiv@counter 006D  
                                     _RCREG 000FAE                                       _RCSTA 000FAB  
                                     _TMR0H 000FD7                                       _TMR1H 000FCF  
                                     _TMR0L 000FD6                                       _TMR3H 000FB3  
                                     _TMR1L 000FCE                                       _TMR3L 000FB2  
                                     _SPBRG 000FAF                                  _BufferCopy 97FC  
                                     _PORTA 000F80                                       _PORTB 000F81  
                                     _PORTC 000F82                                       _RF_IR 005C  
                              InitUART@Baud 00B8                                       _IRbit 0049  
                                     _IRmod 004B                                       _TXREG 000FAD  
                                     _TXSTA 000FAC                         _ConfigureOscillator A544  
                           __end_of_delayUS 9D96                               __CFG_PWRT$OFF 000000  
                          _InternalADC_Read 9458                               __CFG_WRT0$OFF 000000  
                               i1delayUS@US 0001                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                         ___lmul@multiplicand 0067  
                             __CFG_WRT3$OFF 000000                           _NewReceivedString 00F9  
                              ___lltoft@exp 0073                              __CFG_EBTR0$OFF 000000  
                            __CFG_FCMEN$OFF 000000                              ?_InitBluetooth 0001  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                            __CFG_EBTR3$OFF 000000                                  SendRF@Code 0063  
                              InitUART@temp 00C6                                _IRrawCodeNum 00F8  
                                     _Round 9B6E                               __CFG_WRTB$OFF 000000  
                     _BluetoothInitialSetup 4130                    __end_of_Local_CloseUSART A492  
                             __CFG_WRTC$OFF 000000                       __end_of_BlueConnected A4CA  
                 GetNumberUnsigned@tempThis 0081                               __CFG_WRTD$OFF 000000  
                          ?_lowercaseString 0063                            __end_of_UARTchar A120  
                            __CFG_EBTRB$OFF 000000                             __end_of_dpowers EF9F  
                                     _scale 4DD6                                  SendRF@size 0066  
                           __end_of_isdigit A242                                 SetEEPROM1@i 00C3  
                               SetEEPROM1@j 00C4                                 SetEEPROM2@i 00E5  
                               SetEEPROM2@j 00E6                                 SetEEPROM2@k 00E7  
                             ___ftpack@sign 0067                                       main@i 02FE  
                           __end_of_low_isr 01CA                                       tablat 000FF5  
                          _RF_IR_Postscaler 005D                                       plusw0 000FEB  
                                     plusw2 000FDB                                 ?_UARTstring 006D  
                   InternalADC_Read@channel 0071                                       status 000FD8  
                      ??i2_cleanBuffer16bit 0024                             __end_of_sprintf 34B2  
                            __CFG_HFOFST$ON 000000                 WriteEEPROM_1Byte@PEIEstatus 0067  
                      __size_of_cleanBuffer 005A                         __size_of_LEDTimerON 0012  
                     __end_of_GetMemoryChar A2F0                        ?_ConfigureOscillator 0001  
                     __end_of_GetMemoryLong 7988                               ??_SendRF_wait 0070  
                        StringContains@That 0065                          StringContains@This 0063  
                              __end_of_CRLN F208                          __size_ofi1_delayUS 003E  
                             high_isr@IRpin 0060                             __initialization 9020  
                        StringAddEqual@temp 0100                       __end_of_EEPROM_UNLOCK A3CA  
                                _SetEEPROM1 817C                                  _SetEEPROM2 8838  
                          __end_of_IsLetter A384                                  _InitTimer0 A466  
                                _InitTimer1 A4A0                          _Conf1_ChannelD_STR F18C  
                                _InitTimer2 A492                                  _InitTimer3 A4FE  
                             high_isr@Time0 0061                          _Conf1_ChannelE_STR F19B  
                        _Conf1_ChannelF_STR F1AA            __end_of_Conf2_ChannelH_1_OFF_STR F03C  
                                _InitTimers A3F6                                _IRrepeatflag 004E  
                        __size_of_DecodeNEC 00AE                                __end_of_main 57CC  
                     __end_of_Reverse_4Byte 4130                            ??_UARTstringCRLN 0072  
                          __end_of_InitUART 8838            __end_of_Conf2_ChannelH_2_OFF_STR F051  
                    WaitForIRsignal@timeout 0072                __size_of_GetStringAfterComma 011E  
                            GetNumber@count 007B            __end_of_Conf2_ChannelH_3_OFF_STR F066  
                               _IsCharacter A39C                                      ??_main 00F8  
                     GetNumberUnsigned@This 006F                               ___fttol@sign1 00AB  
                          __end_of_ResetADC A4D8                           GetNumber@negative 007A  
                             __activetblptr 000003                       GetNumberUnsigned@temp 007D  
                        SendRF@RepeatAmount 0067                                 ?_IRrawToNEC 0020  
                        __size_of_GetNumber 0486                             _WaitForIRsignal 976C  
                      __size_of__tdiv_to_l_ 01A6                          __size_of_EncodeNEC 014E  
                       __end_of_Init_System 7818                           SetEEPROMdefault@i 00EC  
                         SetEEPROMdefault@j 00ED                           SetEEPROMdefault@k 00EB  
                     _Conf2_ChannelB_ON_STR F0C8                  BluetoothInitialSetup@first 01A1  
                             ?_SendNEC_wait 0078                                 ?_GetEEPROM1 0088  
                               ?_GetEEPROM2 0088                       _Conf2_ChannelD_ON_STR F0DA  
                    __size_of_SendNEC_bytes 0086                                      ?_Round 00B1  
                       __end_of_ReadVoltage 919C                           GetNumber@tempThis 007E  
                                UseIRCode@i 00F4                                  UseIRCode@j 00F3  
                            _StringAddEqual 6DDA                                      _ADCON0 000FC2  
                                    _ADCON1 000FC1                                      _ADCON2 000FC0  
                       __size_ofi1_UARTchar 002C                            __end_of___altoft 959C  
                          ___llmod@dividend 0070                                      ?_scale 008C  
                                    STR_100 FFDC                                      STR_101 FDB8  
                                    STR_102 FFE5                                      STR_110 F82A  
                                    STR_111 FF60                                      STR_103 FB54  
                                    STR_104 FE12                                      STR_112 FC62  
                                    STR_120 FBC2                                      STR_105 FFE5  
                                    STR_121 FF1E                                      STR_113 FCB7  
                                    STR_114 FF98                                      STR_106 FF6A  
                                    STR_130 F3B5                                      STR_122 F384  
                                    _ADRESH 000FC4                                      STR_107 FFC7  
                                    STR_131 FF4A                                      STR_123 FF34  
                                    STR_115 FAD8                                      STR_116 FEAB  
                                    STR_108 F8F0                                      STR_140 F4D6  
                                    STR_132 F448                                      STR_124 F3E6  
                                    _EEADRH 000FAA                                      STR_109 F845  
                                    STR_125 FF3F                                      STR_141 FED2  
                                    STR_133 FEC5                                      STR_117 FE64  
                                    STR_150 FD7F                                      STR_118 FB61  
                                    STR_142 F532                                      STR_134 F504  
                                    STR_126 F417                                      _ADRESL 000FC3  
                                    STR_127 FF13                                      STR_143 FEF9  
                                    STR_135 FEDF                                      STR_119 FDA5  
                                    STR_151 FC36                                      STR_152 FC08  
                                    STR_160 F8D0                                      STR_144 F5BC  
                                    STR_136 F560                                      STR_128 F353  
                                    STR_145 FFD2                                      STR_129 FF29  
                                    STR_137 FEEC                                      STR_153 FD92  
                                    STR_161 FB46                                      STR_154 FD09  
                                    STR_162 FAF4                                      STR_146 F74C  
                                    STR_138 F58E                                      STR_139 FEB8  
                                    STR_147 FE9E                                      STR_155 F98E  
                                    STR_163 F7E3                                      STR_164 FFA0  
                                    STR_148 FD59                                      STR_156 F890  
                                    STR_165 FE01                                      STR_149 FD6C  
                                    STR_157 F9AD                                      _EEDATA 000FA8  
                                    STR_158 F8B0                                      STR_159 F9CC  
                                    _EECON2 000FA7                            ___awdiv@dividend 0069  
                           ??i2_ResetTimer0 0020                            __end_of___ftpack 83C8  
                                    _ANSELH 000F7F                           ?_VoltageDividerON 0001  
                     _Conf2_ChannelB_Status 0044                               ??_ResetTimer0 0063  
                             ??_ResetTimer1 0063                               ??_ResetTimer3 0020  
                          __end_of___lltoft 998C                                      i1l1473 0182  
                                    i1l1474 017E                                      i1l1458 0164  
                                    i1l1467 0130                                      i2l1411 4BA4  
                                    i2l1331 4910                                      i2l1404 4B76  
                                    i2l1332 4904                                      i2l1405 4B6C  
                                    i2l1341 48FE                                      i2l1333 48FA  
                                    i2l1343 4D9A                                      i2l1344 4978  
                                    i2l1361 4A1A                                      i2l1345 493C  
                                    i2l1451 4D96                                      i2l1348 4D74  
                                    i2l1385 4AD4                              __CFG_WDTEN$OFF 000000  
                  StringContains@MatchCount 006A                            __end_of___lwtoft A26E  
                        __size_of_ReadUSART 0018                       _Conf2_ChannelD_Status 0045  
                             SetTimer0@temp 0020                                      _IR_NEC 0055  
                        __size_of_ReadIRpin 000E                                      _SPBRGH 000FB0  
                        ??_VoltageDividerON 0063                                 ?_ClearUSART 0001  
                            SetMemoryLong@H 0095                              SetMemoryLong@L 0098  
                                 ??_InitADC 0063                                   ??_InitApp 0063  
                     ??_ConfigureOscillator 0063                                      _InitIR 9E3A  
                                    _SendRF 8A40                              __CFG_XINST$OFF 000000  
                           _UARTcommandMenu 83C8                    GetStringAfterComma@count 006A  
                          __end_of__powers_ EFED                               InitUART@spbrg 00C3  
                          __end_of_high_isr 4DD6                             _ReadCodeButtons 9D96  
                        __size_of_OpenUSART 007C                              _StringContains 8042  
                                    ___ftge 8DC2                                      ___lmul 9A08  
                  SendNEC_wait@RepeatAmount 007C                                      ___wmul A07C  
                __end_of_SyncEEPROMToGlobal 71A8                                   ??___awdiv 006D  
                               _FirmVersion F1EB                                   ??___ftadd 009C  
                            __CFG_STVREN$ON 000000                                   ??___awmod 0067  
                                 ??___ftdiv 0074                 ?_StringMatchCaseInsensitive 0066  
                                 ??___ftneg 0066                                   ??___lldiv 006B  
                                 ??___ftmul 0083                                 _EraseScreen A318  
                                 ??___llmod 0078                                   ??___ftsub 00A8  
                                 ??___fttol 00A6                           cleanBuffer16bit@i 006A  
                        __size_of_SetTimer0 000A                          __size_of_ResetBlue 00E2  
                       __end_of_SendRF_wait 9FCC                                ?i1_ReadUSART 0001  
                                    _fround 63DC                           ?_SetEEPROMdefault 0001  
                                    clear_0 9026                                      clear_1 9032  
                                    clear_2 903E                                      clear_3 9060  
                          ___awdiv@quotient 006F                                   ??_delayUS 0067  
                           ___awmod@divisor 0065                          __size_of_UseIRCode 0250  
                           ___awmod@counter 0067                          ??_SetEEPROMdefault 00E9  
                     ___ftmul@f3_as_product 0087                         __size_of_UARTstring 0028  
                           ??_InitBluetooth 00E9                                 ?_BufferCopy 006B  
                         ?_cleanBuffer16bit 0063                                __pdataCOMRAM 005B  
                                 ??_isdigit 0063                              ??_SendNEC_wait 007D  
                    ?_BluetoothInitialSetup 0001                      __end_of_StringAddEqual 6FDA  
                              __mediumconst EF76                              EncodeNEC@temp1 007F  
                            EncodeNEC@temp2 0083                              EncodeNEC@temp3 0087  
                            EncodeNEC@temp4 008B                                ?i2_ReadIRpin 0001  
                         __end_ofi1_delayUS A00A                                   ??_low_isr 000E  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                          ??_cleanBuffer16bit 0067  
                        IRrawToNEC@StartBit 002D                            _CommandStringPos 0043  
                     __end_of_lowercaseChar A29A                           __end_of_DecodeNEC 93B4  
                        i1_UARTstring_CONST A1B4                                   ??_sprintf 00BF  
                           __CFG_FOSC$HSPLL 000000                GetNumberUnsigned@CommaNumber 0071  
                      UARTcommandMenu@place 007A                          UseBluetooth@String 00F5  
                                __accesstop 0060                     __end_of__initialization 90DE  
                                ___altoft@c 006B                                  Round@input 00B1  
                           __CFG_PBADEN$OFF 000000                                  ___ftadd@f1 0096  
                                ___ftadd@f2 0099                                  ___ftge@ff1 0063  
                                ___ftge@ff2 0066                         ?i1_UARTstring_CONST 000C  
                        UseBluetooth@device 0284                               ___rparam_used 000001  
             __size_of_UARTstringCRLN_CONST 0042                         StringAddEqual@Input 0072  
                                ___ftdiv@f1 006E                                  ___ftdiv@f2 0071  
                                ___ftdiv@f3 0078                                  ___ftneg@f1 0063  
                         __end_of_GetNumber 5C52                      __end_of_StringContains 817C  
                        UseBluetooth@rfconf 028C                           __end_of_EncodeNEC 8042  
                 __size_of_ReadEEPROM_1Byte 0058                         __end_of_ResetTimer0 A512  
                       __end_of_ResetTimer1 A4FE                         __end_of_ResetTimer3 A530  
                       __size_of_IRrawToNEC 032C                                  ___ftmul@f1 007D  
                                ___ftmul@f2 0080                               _SendNEC_bytes 9886  
                                ___ftsub@f1 00A2                                  ___ftsub@f2 00A5  
                                ___fttol@f1 00A2                                 ?_SetEEPROM1 0099  
                               ?_SetEEPROM2 0099                              __pcstackCOMRAM 0001  
                               ?_InitTimer0 0001                                 ?_InitTimer1 0001  
                               ?_InitTimer2 0001                                 ?_InitTimer3 0001  
                               ?_InitTimers 0001                          _Conf2_ChannelB_OFF F0EC  
                        _Conf2_ChannelD_OFF F10C                         __size_of_GetEEPROM1 00DC  
                             __end_of_Round 9BD4                         __size_of_GetEEPROM2 00CA  
                            _ReadPushButton A476                      i2cleanBuffer16bit@data 0020  
                              __pidataBANK0 A542                                __pidataBANK3 A53A  
                              __pidataBANK4 A120                            main@ConnectedOLD 02FB  
                 __size_of_EnterCommandMode 015C                                  ___lltoft@c 006B  
                                 ?_UARTchar 0001                     __end_of_WaitForIRsignal 97FC  
                             __end_of_scale 52DA             __end_of_Conf2_ChannelH_1_ON_STR F07A  
                               _Init_System 7690                         SyncEEPROMToGlobal@i 00F3  
                       SyncEEPROMToGlobal@j 00F4                         SyncEEPROMToGlobal@k 00D4  
           __end_of_Conf2_ChannelH_2_ON_STR F08E             __end_of_Conf2_ChannelH_3_ON_STR F0A2  
                  _Conf2_ChannelH_1_OFF_STR F027                           __end_of_ReadUSART A39C  
                         __end_of_ReadIRpin A4BC                               ?i1_UARTstring 000B  
                              ??_LEDTimerON 0063                                  ___lwtoft@c 006B  
                         __end_of_Frequency F205                   __size_of_CheckReceivingIR 0012  
                      ??i1_UARTstring_CONST 000E                                 _ReadVoltage 90E4  
                  _Conf2_ChannelH_2_OFF_STR F03C                             ReadVoltage@temp 0092  
                       __size_of_ClearUSART 0012                    __end_of_UARTstring_CONST A184  
                                __div_to_l_ 74FC                    _Conf2_ChannelH_3_OFF_STR F051  
                           GetNumber@result 0072                             ?_StringAddEqual 0072  
                                   ??_Round 00B4                               ReadUSART@data 0063  
                         __end_of_OpenUSART 9A08                             __div_to_l_@exp1 006E  
                           __div_to_l_@cntr 006D                                     ??_scale 008F  
                    i1UARTstring_CONST@data 000C                                   ?_IsLetter 0001  
                           __div_to_l_@quot 0069                                sprintf@width 00DE  
                    __size_of_SetMemoryChar 003A                      GetNumberUnsigned@count 007A  
                         __end_of_SetTimer0 A526                                  __pbssBANK0 00F8  
                                __pbssBANK1 01FF                                  __pbssBANK2 02FF  
                                __pbssBANK3 0300                                  __pbssBANK4 0400  
                                __pbssBANK5 0500                      __size_of_SetMemoryLong 00FA  
                         _EEPROMinitialized A40A                                   ?_InitUART 00B8  
                         __end_of_ResetBlue 8C16                     __end_of_UARTcommandMenu 84E6  
                    _Conf2_ChannelB_OFF_STR F0A2                           __end_of_UseIRCode 6DDA  
                        ReadVoltage@voltage 008F                     __end_of_ReadCodeButtons 9DEA  
                               _ReceivingIR 005E                          ?_EEPROMinitialized 0001  
                             ??_StringMatch 0067                      _Conf2_ChannelD_OFF_STR F0B5  
                       __end_of_ProjectName F027                               __div_to_l_@f1 0063  
                             __div_to_l_@f2 0066                    __size_ofi1_BlueConnected 000E  
                     WriteEEPROM_1Byte@data 0065                                   ?_ResetADC 0001  
                        __end_of_LEDTimerON A430                                     ?_InitIR 0001  
                           ?_StringContains 0063                              ?_SendNEC_bytes 0073  
                    __end_of_ReadPushButton A484                    __end_of_InternalADC_Read 94FA  
                       __size_of_BufferCopy 008A                                     ?_SendRF 0063  
                               _SendRF_wait 9F8E                    UARTstringCRLN_CONST@data 0070  
                         ?i1_UARTchar_CONST 0001                                ??i1_UARTchar 000A  
                   __size_of_UARTchar_CONST 0038                                     ?___ftge 0063  
                       ??_EEPROMinitialized 0063                                     ?___lmul 0063  
                                   ?___wmul 0071                          ??i1_UARTchar_CONST 000A  
                             ?_Reverse_Byte 0001                                  ??_UARTchar 006C  
                         _VoltageDividerOFF A53E                                   ?___altoft 006B  
                                   ?_fround 008C                              ___lmul@product 006B  
                            ??i1_UARTstring 000D                         GetEEPROM1@Arrayspot 008C  
                                 ?___ftpack 0063                       EnterCommandMode@count 0132  
                     cleanBuffer16bit@count 0065                         SetEEPROM1@Arrayspot 00BE  
                                 ?___lltoft 006B                          __end_of_PCBVersion F1F9  
                        ?_VoltageDividerOFF 0001                   SendNEC_bytes@RepeatAmount 0077  
                                 ?___lwtoft 006B                                     i1l13004 A4E0  
                                   i1l13704 00B4                                     i1l13730 013A  
                                   i1l13716 00F2                                     i1l13740 0160  
                                   i1l12782 A326                                     i1l12774 A3AE  
                                   i1l13750 017A                                     i1l12786 A330  
                                   i1l12962 A356                                     i1l12970 A1CE  
                                   i1l12958 A342                                     i1l12966 A1B6  
                                   i1l13696 0094                                     i2l13304 4970  
                                   i2l13412 4AA0                                     i2l13420 4AAA  
                                   i2l13340 49FA                                     i2l13332 49E6  
                                   i2l13430 4AC2                                     i2l13520 4BAE  
                                   i2l13328 49DA                                     i2l13280 4908  
                                   i2l13272 48E0                                     i2l13264 48B0  
                                   i2l12810 60CC                                     i2l13610 4CB6  
                                   i2l13514 4B94                                     i2l13506 4B7C  
                                   i2l13450 4AEE                                     i2l13442 4ADA  
                                   i2l13338 49F4                                     i2l13274 48E6  
                                   i2l12820 6112                                     i2l13612 4CC4  
                                   i2l13460 4B04                                     i2l13452 4AF4  
                                   i2l13348 4A08                                     i2l13380 4A5C  
                                   i2l13276 48EC                                     i2l12902 6310  
                                   i2l12830 6140                                     i2l12814 60D4  
                                   i2l13630 4D04                                     i2l13526 4BC6  
                                   i2l13446 4AEA                                     i2l13374 4A4E  
                                   i2l13358 4A26                                     i2l13542 4BE4  
                                   i2l12920 6386                                     i2l12824 6116  
                                   i2l13616 4CD8                                     i2l13480 4B2E  
                                   i2l13392 4A8A                                     i2l13368 4A3E  
                                   i2l12906 632E                                     i2l12914 634C  
                                   i2l12826 613C                                     i2l13650 4D4A  
                                   i2l13634 4D1E                                     i2l13618 4CE8  
                                   i2l13562 4C28                                     i2l13474 4B22  
                                   i2l13538 4BD8                                     i2l12940 63D0  
                                   i2l12860 6234                                     i2l12852 61F6  
                                   i2l13572 4C4C                                     i2l13468 4B14  
                                   i2l13388 4A84                                     i2l12926 638C  
                                   i2l12950 9F56                                     i2l13662 4D6A  
                                   i2l13654 4D56                                     i2l13558 4C14  
                                   i2l13486 4B3A                                     i2l12936 63CA  
                                   i2l12944 63D6                                     i2l12864 623A  
                                   i2l12856 622E                                     i2l13680 4D92  
                                   i2l13656 4D5E                                     i2l13648 4D42  
                                   i2l13592 4C7C                                     i2l13584 4C6A  
                                   i2l13496 4B5A                                     i2l13488 4B44  
                                   i2l12954 9F72                                     i2l13586 4C70  
                                   i2l13594 4C82                                     i2l13666 4D70  
                                   i2l12876 6286                                     i2l12884 62A8  
                                   i2l12868 6242                                     i2l13678 4D8A  
                                   i2l13598 4C98                                     i2l12896 6304  
                                   i2l12898 630A                                     i2l12994 A4EE  
                          i1UARTstring@data 000B                               UseIRCode@Code 00E9  
                         _ReceivedStringPos 02FF                         GetEEPROM2@Arrayspot 008C  
                       SetEEPROM2@Arrayspot 00E4                         ??_VoltageDividerOFF 0063  
                           SetMemoryLong@MH 0096                             SetMemoryLong@ML 0097  
                         ?_Local_CloseUSART 0001                   __end_of_EEPROMinitialized A41E  
                       __size_of_SetEEPROM1 012C                         __size_of_SetEEPROM2 010E  
                   BluetoothInitialSetup@ok 01A3                         __size_of_InitTimer0 0010  
                       __size_of_InitTimer1 000E                         __size_of_InitTimer2 000E  
                       __size_of_InitTimer3 000A                                  ??_IsLetter 0063  
                       __size_of_InitTimers 0014                                   ?_high_isr 0001  
                        __end_ofi1_UARTchar A2C6                         _GetStringAfterComma 84E6  
                      UARTstring_CONST@data 006E                          ??_Local_CloseUSART 0063  
               __size_of_SyncGlobalToEEPROM 00A0                                  ??_InitUART 00BC  
                               _ResetTimer0 A508                                 _ResetTimer1 A4F4  
                               _ResetTimer3 A526         __size_of_StringMatchCaseInsensitive 0094  
                              ??_UARTstring 006F                                     _Global1 03DA  
                                   _Global2 037C                                     SendRF@i 006A  
                             ?_UseBluetooth 00F5                                     _InitADC A3CA  
                                   _InitApp 9E80                              UseBluetooth@ok 028A  
                               low_isr@data 001F                 __end_of_BluetoothConfigured A466  
                   UseBluetooth@tempRFArray 028B                                  ??_ResetADC 0063  
                            InitUART@config 00C5                           __end_of__npowers_ EFC6  
                                   __Hparam 0000                             ?_ReadPushButton 0001  
                           __size_of_InitIR 0046                                  _scale$3919 008F  
                                   __Lparam 0000                        __end_of_SendNEC_wait 96D8  
                   __size_of_SendRF_Channel 0258                             __size_of_SendRF 00F4  
                              SendRF@Config 0065                   __end_of_VoltageDividerOFF A542  
                            ??_Reverse_Byte 0063                             __size_of___ftge 00CE  
                                   ___awdiv 8CF2                             __size_of___lmul 007A  
                                   ___ftadd 66B4                                     ___awmod 9252  
                                   ___ftdiv 7C50                                     ___ftneg A184  
                                   ___lldiv 8F5A                         __end_of_StringMatch 9AFA  
                      ?_GetStringAfterComma 0063                             __size_of___wmul 0038  
                                   ___ftmul 7988                                     ___llmod 93B4  
                                   ___ftsub 9DEA                                     ___fttol 7DA2  
                             _SetMemoryChar A00A                                ?_IsCharacter 0001  
                             _SetMemoryLong 8946                            ?_WaitForIRsignal 0001  
                                ??___altoft 006F                                     __pcinit 9020  
                                   _delayUS 9D40                                  ??___ftpack 0068  
                           __size_of_fround 02D8                                     __ramtop 1000  
                                ??___lltoft 006F                                     __ptext0 52DA  
                                   __ptext1 6B8A                                     __ptext2 6932  
                                   __ptext3 A476                                     __ptext4 9D96  
                                   __ptext5 01CE                                     __ptext6 9EC6  
                                   __ptext7 976C                                     __ptext8 9F0A  
                                   __ptext9 A044                                  ??___lwtoft 006E  
                                 _T0CONbits 000FD5                        __size_ofi1_ReadUSART 0016  
                         __end_of_hexpowers F00D                                   _T1CONbits 000FCD  
                               ?__div_to_l_ 0063                           SetMemoryChar@Data 006F  
                                   _dpowers EF77                                ??_IRrawToNEC 0025  
                                 _T2CONbits 000FCA                        i1UARTchar_CONST@data 000A  
                        __end_of_UARTstring A318                           SetMemoryChar@Test 006E  
                                   _isdigit A214                                   _T3CONbits 000FB1  
                      i1UARTchar_CONST@temp 000B                            ___awmod@dividend 0063  
                 GetMemoryLong@AddressFirst 0087                                ??_GetEEPROM1 008A  
                              ??_GetEEPROM2 008A                                     _low_isr 0018  
                              DecodeNEC@Nec 0067                                     _sprintf 2538  
                      __size_ofi2_ReadIRpin 000E                                  ??_high_isr 002E  
                            __pintcode_body 47C8                                 _ProjectName F00D  
                      end_of_initialization 90DE                            SendNEC_wait@code 0078  
                             ??_cleanBuffer 0067                                 _ProductName 0482  
                          ?_UARTcommandMenu 0070                             i1ReadUSART@data 0001  
                              ??_ClearUSART 0064                              ??_UseBluetooth 0200  
                                   int_func 47C8                            ?_ReadCodeButtons 0001  
               __size_ofi2_cleanBuffer16bit 0042                             ??_SendNEC_bytes 0078  
                  __size_of_lowercaseString 0044                                   i2u1474_40 6260  
                                 i2u1467_40 619A                             ___lldiv@divisor 0067  
                     EraseScreen@characters 000B                          __end_of_SYNTAX_ERR F1C7  
                          _ReadEEPROM_1Byte 9CE8                             ___lldiv@counter 006F  
                        __end_of_IRrawToNEC 63DC                      main@BluetoothStringPos 02FA  
                         _GetNumberUnsigned 5C52                                   _RCSTAbits 000FAB  
                   SyncEEPROMToGlobal@Temp1 00D5                     SyncEEPROMToGlobal@Temp2 0094  
                                   postdec1 000FE5                                     postdec2 000FDD  
                     ??_GetStringAfterComma 0068                            _EnterCommandMode 7AF4  
                                   postinc0 000FEE                                     postinc2 000FDE  
                            ?_SetMemoryChar 006D                   __size_of_VoltageDividerON 0006  
                    __size_of_BlueConnected 000E                                ?_EraseScreen 0001  
                            ?_SetMemoryLong 0088                          __end_of_GetEEPROM1 8CF2  
                        __end_of_GetEEPROM2 8F5A                           ??i1_BlueConnected 0001  
                            __tdiv_to_l_@f1 0063                              __tdiv_to_l_@f2 0066  
                        ?_GetNumberUnsigned 006F                                   _IRRawCode 0500  
                             ??__tdiv_to_l_ 0069                     ??_BluetoothInitialSetup 00E3  
                         SetMemoryLong@Data 0088                            _CheckReceivingIR A430  
                         SetMemoryLong@Test 0091                           GetMemoryLong@temp 007F  
                              ??_BufferCopy 0071                         ??_GetNumberUnsigned 0074  
                        __end_of_ClearUSART A454                                   _IRaddress 0059  
                    __size_of_GetMemoryChar 002A                                   _TRISAbits 000F92  
                                 _TRISBbits 000F93                          _SyncEEPROMToGlobal 6FDA  
                                 _TRISCbits 000F94                              BufferCopy@from 006B  
                                main@IRtask 02F8                      __size_of_GetMemoryLong 0170  
                                 _IRcodeBit 004A                  __size_of_EEPROMinitialized 0014  
                    __size_of_EEPROM_UNLOCK 0016           StringContainsCaseInsensitive@That 0068  
         StringContainsCaseInsensitive@This 0066                                   _IRcommand 005A  
               __end_of_ConfigureOscillator A546                              _BufferOverflow 01FF  
                    __size_of_Reverse_4Byte 0C7E                   __size_of_SetEEPROMdefault 011E  
                                 i1_delayUS 9FCC                                   _RFcodeBit 0050  
                       ?_SyncEEPROMToGlobal 0001                       __end_ofi2_ResetTimer0 A51C  
                         main@Bluetoothtask 02F9                        __end_ofi1_UARTstring A366  
                                 _DecodeNEC 9306                          GetNumberUnsigned@i 007C  
                               ___ftdiv@exp 007B                  ReadEEPROM_1Byte@PEIEstatus 0066  
                                 _IRtimeout 03F8                                   _TXSTAbits 000FAC  
                 __size_of_cleanBuffer16bit 005E                         UseBluetooth@tempNec 027B  
                               _StringMatch 9A82                   __end_of_GetNumberUnsigned 60B0  
                       __size_of__div_to_l_ 0194                         UseBluetooth@timeout 0285  
        __end_of_StringMatchCaseInsensitive 976C                  _StringMatchCaseInsensitive 96D8  
                       __end_of_cleanBuffer 9CE8                           _Timer1_Postscaler 0052  
                            _UARTchar_CONST A0B4                              _IRrepeatAmount 004D  
                              ??_SetEEPROM1 00BB                                ??_SetEEPROM2 00DD  
                        __end_of_BufferCopy 9886                                 ___ftmul@exp 0086  
                              ??_InitTimer0 0063                                ??_InitTimer1 0063  
                              ??_InitTimer2 0063                                ??_InitTimer3 0063  
                            __end_of_InitIR 9E80                                ??_InitTimers 0063  
                __size_of_VoltageDividerOFF 0004                              __end_of_SendRF 8B34  
                       _Conf2_ChannelH_1_ON F13C                         _Conf2_ChannelH_2_ON F15C  
                       _Conf2_ChannelH_3_ON F17C                                   _GetNumber 57CC  
                      SyncGlobalToEEPROM@ok 00E8                                   _EncodeNEC 7EF4  
            GetStringAfterComma@CommaNumber 0065                              __end_of___ftge 8E90  
                              ?_Init_System 0001                              __end_of___lmul 9A82  
                   i2cleanBuffer16bit@count 0022                              _ReceivedString 0400  
                            __end_of___wmul A0B4                        ??_SyncEEPROMToGlobal 0090  
                               _BAUDCONbits 000FB8                               __pidataCOMRAM A536  
                          ??_StringAddEqual 0074                           __size_of_UARTchar 0034  
                              ?_ReadVoltage 008C                              __end_of_fround 66B4  
              __end_of_UARTstringCRLN_CONST 9F4C                            IRrawToNEC@Invert 0024  
                         ?_UARTstring_CONST 006E                         start_initialization 9020  
                                 _ReadUSART A384                     __size_of_UARTstringCRLN 0038  
                         _Timer2_Postscaler 0053                                   _ReadIRpin A4AE  
                     __end_of_InitBluetooth 9B6E                            UseBluetooth@temp 028F  
                                 _Frequency F201                         __end_of__tdiv_to_l_ 74FC  
                        ??_UARTstring_CONST 0070                               GetNumber@This 006F  
                             _BlueConnected A4BC                               GetNumber@temp 007F  
                      __end_of_Reverse_Byte 9252                          __end_of_SetEEPROM1 82A8  
                        __end_of_SetEEPROM2 8946                          __end_of_InitTimer0 A476  
                        __end_of_InitTimer1 A4AE                          __end_of_InitTimer2 A4A0  
                        __end_of_InitTimer3 A508                                  ?i1_delayUS 0001  
                        __end_of_InitTimers A40A                            ??_StringContains 0067  
                                 _OpenUSART 998C                           __size_of_IsLetter 001E  
                     __size_of_SendNEC_wait 009C                                  ?_DecodeNEC 0067  
                           ___llmod@divisor 0074                           __size_of_InitUART 0116  
                           ___llmod@counter 0078                                   _SetTimer0 A51C  
                    __end_of_UARTchar_CONST A0EC                                   _ResetBlue 8B34  
                                 _Sendcount 0051                                    ??_InitIR 006B  
                            _SendRF_Channel 6932                     GetStringAfterComma@This 0063  
                              ?_SendRF_wait 006B                                   _UseIRCode 6B8A  
                             _GetMemoryChar A2C6                                    ??_SendRF 0068  
                         _Timer3_Postscaler 0054                   StringAddEqual@firstnumber 0077  
                           ??_SetMemoryChar 006E                               _GetMemoryLong 7818  
                         ?_InternalADC_Read 006C                             ??_SetMemoryLong 008D  
                                  ??___ftge 0069                           __size_of_ResetADC 000E  
                                  ??___lmul 006B                               _EEPROM_UNLOCK A3B4  
                                  ??___wmul 0075                              GetEEPROM1@Temp 0088  
                            GetEEPROM2@Temp 0088                           ??_lowercaseString 0065  
                                ?_GetNumber 006F                          ??_InternalADC_Read 006E  
                                ?_EncodeNEC 0067                               _Reverse_4Byte 34B2  
        StringMatchCaseInsensitive@tempThat 006B          StringMatchCaseInsensitive@tempThis 006A  
                    __size_of_lowercaseChar 002C                                 __pdataBANK0 00FE  
                               __pdataBANK3 03F8                                 __pdataBANK4 0482  
                          __CFG_LPT1OSC$OFF 000000                                    ??_fround 008F  
                             sprintf@tmpval 00D1                         UARTcommandMenu@Desc 0072  
                      GetNumber@CommaNumber 0071                    WriteEEPROM_1Byte@address 0063  
                      __size_of_IsCharacter 0018                        __end_of_UseBluetooth 2538  
                         __size_of___altoft 00A2                 __size_ofi1_UARTstring_CONST 0030  
                                fround@prec 0095                           __size_of___ftpack 0120  
                 SetMemoryLong@AddressFirst 008C                                   Round@temp 00B4  
                          cleanBuffer@count 0065                           __size_of___lltoft 0080  
                   GetNumberUnsigned@result 0072                                 __pbssCOMRAM 0040  
                 __size_ofi1_UARTchar_CONST 0030                                  ?_ReadUSART 0001  
            ?_StringContainsCaseInsensitive 0066                           __size_of___lwtoft 002C  
                                ?_ReadIRpin 0001              __end_of_Conf2_ChannelB_OFF_STR F0B5  
                             __pcstackBANK0 0060                               __pcstackBANK1 0100  
                             __pcstackBANK2 0200                                _SendNEC_wait 963C  
                         _Conf2_ChannelB_ON F0FC                           _Conf2_ChannelD_ON F11C  
                            ?_BlueConnected 0001                                _isdigit$3587 0064  
            __end_of_Conf2_ChannelD_OFF_STR F0C8              StringMatchCaseInsensitive@That 0068  
            StringMatchCaseInsensitive@This 0066                    GetNumber@tempCommaNumber 0079  
                   _Conf2_ChannelH_1_ON_STR F066                                ?_ResetTimer0 0001  
                              ?_ResetTimer1 0001                                ?_ResetTimer3 0001  
                               _cleanBuffer 9C8E                     _Conf2_ChannelH_2_ON_STR F07A  
                          ??_ReadPushButton 0063                                  ?_OpenUSART 0063  
                   _Conf2_ChannelH_3_ON_STR F08E                           __size_of_high_isr 4DCE  
                               sprintf@flag 00E0                                 sprintf@fval 00DB  
                               sprintf@prec 00CF                      __end_of_SendRF_Channel 6B8A  
                                  ?_InitADC 0001                                    ?_InitApp 0001  
                                ?_SetTimer0 0020                             ?_UARTchar_CONST 0001  
                                ?_ResetBlue 0001                              ?_GetMemoryChar 0067  
                __size_of_GetNumberUnsigned 045E                              ?_GetMemoryLong 0067  
                   _Conf2_ChannelH_1_Status 0046                                  ?_UseIRCode 00E9  
                   _Conf2_ChannelH_2_Status 0047                           __CFG_CCP2MX$PORTC 000000  
                   _Conf2_ChannelH_3_Status 0048                              ?_EEPROM_UNLOCK 0001  
                           SendRF_wait@Code 006B                   __size_of_Local_CloseUSART 000E  
                                 __pintcode 0008                               __pmediumconst EF76  
                            ?_Reverse_4Byte 0063                            _VoltageDividerON A530  
                                  ?___awdiv 0069                                   __ptext100 9C8E  
                                 __ptext101 A454                                   __ptext110 A340  
                                 __ptext102 A3CA                                   __ptext111 A3E0  
                                 __ptext103 A4CA                                   __ptext120 A4E6  
                                 __ptext112 A4D8                                   __ptext104 A40A  
                                 __ptext121 A51C                                   __ptext113 A39C  
                                 __ptext105 9E80                                   __ptext122 A526  
                                 __ptext114 A318                                   __ptext106 A544  
                                 __ptext123 60B0                                   __ptext115 A29A  
                                 __ptext116 9FCC                                   __ptext108 A1B4  
                                 __ptext109 A1E4                                    ?___ftadd 0096  
                                 __ptext118 9F4C                                   __ptext119 A512  
                         SendRF_wait@Config 006D                                 IRrawToNEC@i 002C  
                                  ?___awmod 0063                                    ?___ftdiv 006E  
                      cleanBuffer16bit@data 0063                                    ?___ftneg 0063  
                           SendRF_wait@size 006E                                    ?___lldiv 0063  
                                  ?___ftmul 007D                                    ?___llmod 0070  
                                  ?___ftsub 00A2                                   __npowers_ EF9F  
                                  ?___fttol 00A2                                UseIRCode@NEC 00EB  
                               __pintcodelo 0018                                    ?_delayUS 0063  
              UseBluetooth@SerialNumberTEMP 027F                        __size_of_EraseScreen 0028  
                               __tdiv_to_l_ 7356                      BluetoothInitialSetup@i 01A4  
                    BluetoothInitialSetup@j 01A2                                ??__div_to_l_ 0069  
                         SendRF_wait@amount 006F                               IRrawToNEC@NEC 0022  
                         _WriteEEPROM_1Byte 9C32                          UARTchar_CONST@data 006C  
                                  ?_isdigit 0001                   __end_of_Conf2_ChannelB_ON F10C  
                 __end_of_Conf2_ChannelD_ON F12C                               IRrawToNEC@Raw 0020  
                             UseBluetooth@i 0293                          UARTchar_CONST@temp 006D  
                  __end_of_ReadEEPROM_1Byte 9D40                                    ?_low_isr 0001  
                               GetEEPROM1@i 008D                                 GetEEPROM1@j 008E  
                               GetEEPROM2@i 008D                                 GetEEPROM2@j 008E  
                               GetEEPROM2@k 008F                          ?_WriteEEPROM_1Byte 0063  
                            __size_of_Round 0066                                   _hexpowers EFED  
                __end_of_SyncGlobalToEEPROM 963C                       __size_ofi1_UARTstring 0026  
                  __end_of_EnterCommandMode 7C50                                    ?_sprintf 00B1  
                            __size_of_scale 0504                               _lowercaseChar A26E  
                  UseBluetooth@rfchannelSTR 0270                            _SetEEPROMdefault 8604  
                               ??i1_delayUS 0005                                   delayUS@US 0063  
                           IsCharacter@data 0001                         ??_WriteEEPROM_1Byte 0066  
                               ??_DecodeNEC 006F                              ___wmul@product 0075  
                                  _IOCBbits 000F7D                             i1_BlueConnected A4D8  
                  __end_of_CheckReceivingIR A442                            _cleanBuffer16bit 9BD4  
                           ?_SendRF_Channel 0001                                    _IPR1bits 000F9F  
                                  _IPR2bits 000FA2                                    _PIE1bits 000F9D  
                      _UARTstringCRLN_CONST 9F0A                                    _PIE2bits 000FA0  
                              cleanBuffer@i 006A                                    _PIR1bits 000F9E  
                        __end_of__div_to_l_ 7690                                    _PIR2bits 000FA1  
                                  _RCONbits 000FD0                            __CFG_WDTPS$32768 000000  
                            UseIRCode@found 00F2                                 ??_GetNumber 0074  
                               ??_EncodeNEC 006B                              DecodeNEC@temp1 0075  
                            DecodeNEC@temp2 0073                              DecodeNEC@temp3 0074  
                                  _RFConfig 00FA                                    _UARTchar A0EC  
              ??_StringMatchCaseInsensitive 006A                               ??i1_ReadUSART 0001  
              __size_of_BluetoothConfigured 0012                    BluetoothInitialSetup@buf 016F  
                 ReadEEPROM_1Byte@GIEstatus 0065                   __end_of_WriteEEPROM_1Byte 9C8E  
                                _ADCON0bits 000FC2                                  _ADCON1bits 000FC1  
                                _ADCON2bits 000FC0                           ___wmul@multiplier 0071  
                              i1_UARTstring A340                        __size_of_Init_System 0188  
                                  _IRpinOLD 004C              __size_of_BluetoothInitialSetup 0698  
                       ReadCodeButtons@temp 006C               __end_of_BluetoothInitialSetup 47C8  
                     __size_of_Reverse_Byte 00B6                              _UARTstringCRLN A044  
                           ??_BlueConnected 0063                                 ??_ReadUSART 0063  
                             ??i2_ReadIRpin 0020                        __size_of_ReadVoltage 00B8  
                               ??_ReadIRpin 0063                    __size_of_WaitForIRsignal 0090  
                           StringAddEqual@i 0078                             StringAddEqual@j 0079  
                            ?_lowercaseChar 0063                           ___lmul@multiplier 0063  
                               _INTCON2bits 000FF1                                    _IsLetter A366  
                                 copy_data0 907A                                   copy_data1 909A  
                                 copy_data2 90D2                  __end_ofi2_cleanBuffer16bit 9F8E  
                             _CommandString 0318                                    _InitUART 8722  
                           UseBluetooth@buf 020C                             UseBluetooth@set 027A  
                               ??_OpenUSART 0065                                GetNumber@Hex 007C  
                           IRrawToNEC@first 002B                             ??_GetMemoryChar 006B  
                           OpenUSART@config 0065                             ??_GetMemoryLong 006B  
                        SendNEC_wait@toggle 007D                       ?_UARTstringCRLN_CONST 0070  
                               ??_SetTimer0 0022                 __end_of_GetStringAfterComma 8604  
                                _EECON1bits 000FA6                                ?_StringMatch 0063  
                               ??_ResetBlue 006C                            __size_of_InitADC 0016  
                           ??_EEPROM_UNLOCK 0063                                    _ResetADC A4CA  
                     __end_of_SendNEC_bytes 990C                            __size_of_InitApp 0046  
                                  __Hrparam 0000                                 ??_UseIRCode 00EF  
                           ??_Reverse_4Byte 0067                                    __Lrparam 0000  
                        __CFG_BOREN$SBORDIS 000000                    __size_of_UARTcommandMenu 011E  
                      __size_of_SendRF_wait 003E                       __size_of_UseBluetooth 236A  
                  __size_of_ReadCodeButtons 0054                                _Reverse_Byte 919C  
                 InternalADC_Read@ADCcounts 006C                           Reverse_4Byte@This 0063  
                          __size_of___awdiv 00D0                            __size_of___ftadd 027E  
                          __size_of___awmod 00B4                            __size_of___ftdiv 0152  
                           cleanBuffer@data 0063                            __size_of___ftneg 0030  
                          __size_of___lldiv 00C6                                    ___altoft 94FA  
                          __size_of___ftmul 016C                            __size_of___llmod 00A4  
                          __size_of___ftsub 0050                            __size_of___fttol 0152  
                         Reverse_4Byte@temp 006F                                    ___ftpack 82A8  
                InternalADC_Read@AnaChanSel 0070                                 _fround$3917 0092  
                               _fround$3918 008F                                    ___lltoft 990C  
                    __end_of_UARTstringCRLN A07C                            __size_of_delayUS 0056  
             __end_of_Conf2_ChannelB_ON_STR F0DA                                    ___lwtoft A242  
             __end_of_Conf2_ChannelD_ON_STR F0EC                           main@VoltageStatus 02FC  
                                sprintf@idx 00C8                                  sprintf@len 00CB  
                                sprintf@exp 00D5                                  sprintf@val 00D7  
                    UseBluetooth@NecAddress 028D                            i1_UARTchar_CONST A1E4  
                       __end_ofi1_ReadUSART A3F6                            __size_of_isdigit 002E  
                    UseBluetooth@NecCommand 028E                            __size_of_low_isr 01B2  
                                  __ptext10 83C8                                    __ptext11 96D8  
                                  __ptext20 34B2                                    __ptext12 9A82  
                                  __ptext21 A430                                    __ptext13 6DDA  
                                  __ptext30 57CC                                    __ptext22 90E4  
                                  __ptext14 9F8E                                    __ptext31 9A08  
                                  __ptext23 A242                                    __ptext15 8A40  
                                  __ptext40 8604                                    __ptext32 A366  
                                  __ptext24 7C50                                    __ptext16 A41E  
                                  __ptext41 8722                                    __ptext33 7EF4  
                                  __ptext25 A530                                    __ptext17 A4F4  
                                  __ptext50 9E3A                                    __ptext42 9B6E  
                                  __ptext34 9306                                    __ptext26 A53E  
                                  __ptext18 963C                                    __ptext51 9BD4  
                                  __ptext43 94FA                                    __ptext35 919C  
                                  __ptext27 9458                                    __ptext19 9886  
                                  __ptext60 7818                                    __ptext52 A508  
                                  __ptext44 998C                                    __ptext36 7690  
                                  __ptext28 84E6                                    __ptext61 A00A  
                                  __ptext53 A4AE                                    __ptext45 A484  
                                  __ptext37 6FDA                                    __ptext29 5C52  
                                  __ptext70 A26E                                    __ptext62 9C32  
                                  __ptext54 A466                                    __ptext46 A3F6  
                                  __ptext38 8E90                                    __ptext71 7AF4  
                                  __ptext63 A3B4                                    __ptext55 9AFA  
                                  __ptext47 A4FE                                    __ptext39 8C16  
                                  __ptext80 7356                                    __ptext72 2538  
                                  __ptext64 A2C6                                    __ptext56 959C  
                                  __ptext48 A492                         EnterCommandMode@buf 0100  
                                  __ptext81 74FC                                    __ptext73 4DD6  
                                  __ptext65 9CE8                                    __ptext57 8838  
                                  __ptext49 A4A0                                    __ptext90 8DC2  
                                  __ptext82 990C                                    __ptext74 A214  
                                  __ptext66 4130                                    __ptext58 817C  
                                  __ptext91 A152                                    __ptext83 93B4  
                                  __ptext75 63DC                                    __ptext67 A2F0  
                                  __ptext59 8946                                    __ptext92 A0B4  
                                  __ptext84 8F5A                                    __ptext76 A07C  
                                  __ptext68 A0EC                                    __ptext93 8042  
                                  __ptext85 7DA2                                    __ptext77 7988  
                                  __ptext69 71A8                           SendNEC_bytes@code 0073  
                                  __ptext94 8B34                                    __ptext86 9DEA  
                                  __ptext78 9252                                    __ptext95 9D40  
                                  __ptext87 66B4                                    __ptext79 8CF2  
                                  __ptext96 A442                                    __ptext88 82A8  
                                  __ptext97 A384                                    __ptext89 A184  
                   __end_ofi1_BlueConnected A4E6                                    __ptext98 A4BC  
                                  __ptext99 97FC                                    __powers_ EFC6  
                                  _high_isr 0008                  __end_of_Conf1_ChannelD_STR F19B  
                __end_of_Conf1_ChannelE_STR F1AA                  __end_of_Conf1_ChannelF_STR F1B9  
                          __size_of_sprintf 0F7A                         __end_ofi2_ReadIRpin A4F4  
  StringContainsCaseInsensitive@MatchAmount 006C                             _lowercaseString 9EC6  
                             __size_of_main 04F2                       SendRF_Channel@channel 0070  
                            SetEEPROM1@Temp 0099                                _UseBluetooth 01CE  
                                  delayUS@i 0068                              SetEEPROM2@Temp 0099  
                      __size_of_ResetTimer0 000A                        __size_of_ResetTimer1 000A  
                      __size_of_ResetTimer3 000A                   __size_of_UARTstring_CONST 0032  
                            SetEEPROM1@fail 00BF                   GetMemoryChar@AddressFirst 006B  
                            SetEEPROM2@fail 00E0                              SetEEPROM1@burn 00B7  
                            SetEEPROM2@burn 00D9                              SetEEPROM1@temp 00BD  
                            SetEEPROM2@temp 00DF                __size_of_ConfigureOscillator 0002  
                    UseBluetooth@EnteredNEC 0286                            _Local_CloseUSART A484  
                           GetMemoryLong@MH 0084                             GetMemoryLong@ML 0085  
                    UseBluetooth@EmptyPlace 0283                                BufferCopy@to 006D  
               __size_of_SyncEEPROMToGlobal 01CE                  __size_of_WriteEEPROM_1Byte 005C  
                                _LEDTimerON A41E                             ?_UARTstringCRLN 0070  
                    __size_ofi2_ResetTimer0 000A                             StringContains@i 006B  
                                _INTCONbits 000FF2                   __size_of_InternalADC_Read 00A2  
                            OpenUSART@spbrg 0063                             ??_lowercaseChar 0065  
                              UARTchar@data 006C                             StringMatch@That 0065  
                           StringMatch@This 0063                                    isdigit@c 0065  
                                  scale@scl 0092                            EncodeNEC@address 008F  
                  __end_of_VoltageDividerON A536                         i2cleanBuffer16bit@i 0027  
              __end_of_Conf2_ChannelH_1_OFF F13C                __end_of_Conf2_ChannelH_2_OFF F15C  
              __end_of_Conf2_ChannelH_3_OFF F17C                            ??_UARTchar_CONST 006C  
                                  intlevel1 0000                                    intlevel2 0000  
                                _PCBVersion F1F4                                   sprintf@ap 00CD  
                                 sprintf@cp 00C9                            __tdiv_to_l_@exp1 0071  
                                 sprintf@sp 00B1                            __tdiv_to_l_@cntr 0070  
                              ?_cleanBuffer 0063          GetStringAfterComma@tempCommaNumber 0069  
                          __tdiv_to_l_@quot 006C                           ??_WaitForIRsignal 0072  
                          EncodeNEC@command 0067                      ??_UARTstringCRLN_CONST 0072  
                          ___lldiv@dividend 0063                                IsLetter@data 0063  
           ??_StringContainsCaseInsensitive 006A     StringContainsCaseInsensitive@MatchCount 006D  
                            _BatteryVoltage 0040                              GetMemoryChar@H 006C  
                               _IR_New_Code 00FD                                  i1_UARTchar A29A  
                            GetMemoryLong@H 0083                              GetMemoryLong@L 0086  
                    __size_of_InitBluetooth 0074                                 BufferCopy@i 0071  
                     __end_of_SetMemoryChar A044                       __end_of_SetMemoryLong 8A40  
                             ??_IsCharacter 0001                               _InitUART$3916 00C0  
                  __end_of_SetEEPROMdefault 8722                              _Conf1_ChannelD F1C7  
                            _Conf1_ChannelE F1D3                              _Conf1_ChannelF F1DF  
                                GetNumber@i 007D                              _Conf1_Channels F1F9  
                __end_ofi1_UARTstring_CONST A1E4                                 i1_ReadUSART A3E0  
                          DecodeNEC@address 006B                   StringContains@MatchAmount 0069  
                              ?__tdiv_to_l_ 0063                            UARTcommandMenu@i 0079  
                    UARTcommandMenu@Command 0070                           ??_UARTcommandMenu 0074  
               __end_of_Conf2_ChannelH_1_ON F14C                 __end_of_Conf2_ChannelH_2_ON F16C  
               __end_of_Conf2_ChannelH_3_ON F18C                              _Conf2_Channels F1FD  
                                  sprintf@c 00E2                    __end_of_cleanBuffer16bit 9C32  
                                  sprintf@f 00B3                            DecodeNEC@command 006D  
                         ??_ReadCodeButtons 006C                            ___lldiv@quotient 006B  
                               i2_ReadIRpin A4E6                           ?_ReadEEPROM_1Byte 0063  
                              EraseScreen@i 000C                     __end_of_lowercaseString 9F0A  
          GetNumberUnsigned@tempCommaNumber 0079                            ?i1_BlueConnected 0001  
                   __size_of_StringAddEqual 0200                              i1UARTchar@data 000A  
                          ??_SendRF_Channel 0070                          ??_ReadEEPROM_1Byte 0065  
                         ?_EnterCommandMode 0001                  __end_of_Conf2_ChannelB_OFF F0FC  
                __end_of_Conf2_ChannelD_OFF F11C                         _BluetoothConfigured A454  
BluetoothInitialSetup@BluetoothVersionLine1 0133  BluetoothInitialSetup@BluetoothVersionLine2 0151  
                        ??_EnterCommandMode 00E3                                  _UARTstring A2F0  
                             i2_ResetTimer0 A512                           ?_CheckReceivingIR 0001  
                 GetStringAfterComma@result 0066              StringContainsCaseInsensitive@i 0070  
                        _SyncGlobalToEEPROM 959C                              Init_System@buf 01A5  
                        ??_CheckReceivingIR 0063                          _BluetoothFirmware1 03BC  
                        _BluetoothFirmware2 0464                             BufferCopy@count 006F  
                      __size_of_StringMatch 0078  
