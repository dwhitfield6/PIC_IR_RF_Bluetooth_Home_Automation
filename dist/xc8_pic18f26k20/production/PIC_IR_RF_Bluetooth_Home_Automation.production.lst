

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Apr 04 00:41:59 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   106                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   107  0000                     
   108                           	psect	idataCOMRAM
   109  003DB8                     __pidataCOMRAM:
   110                           	opt stack 0
   111                           
   112                           ;initializer for _Sent
   113  003DB8  01                 	db	1
   114                           
   115                           	psect	idataBANK0
   116  003D62                     __pidataBANK0:
   117                           	opt stack 0
   118                           
   119                           ;initializer for _ChannelF
   120  003D62  03                 	db	3
   121  003D63  00                 	db	0
   122  003D64  03                 	db	3
   123  003D65  03                 	db	3
   124  003D66  03                 	db	3
   125  003D67  03                 	db	3
   126  003D68  00                 	db	0
   127  003D69  00                 	db	0
   128  003D6A  01                 	db	1
   129  003D6B  00                 	db	0
   130  003D6C  00                 	db	0
   131  003D6D  00                 	db	0
   132                           
   133                           	psect	idataBANK1
   134  003A96                     __pidataBANK1:
   135                           	opt stack 0
   136                           
   137                           ;initializer for _ProductName
   138  003A96  48                 	db	72
   139  003A97  6F                 	db	111
   140  003A98  6D                 	db	109
   141  003A99  65                 	db	101
   142  003A9A  20                 	db	32
   143  003A9B  41                 	db	65
   144  003A9C  75                 	db	117
   145  003A9D  74                 	db	116
   146  003A9E  6F                 	db	111
   147  003A9F  6D                 	db	109
   148  003AA0  61                 	db	97
   149  003AA1  74                 	db	116
   150  003AA2  69                 	db	105
   151  003AA3  6F                 	db	111
   152  003AA4  6E                 	db	110
   153  003AA5  00                 	db	0
   154  003AA6  00                 	db	0
   155  003AA7  00                 	db	0
   156  003AA8  00                 	db	0
   157  003AA9  00                 	db	0
   158  003AAA  00                 	db	0
   159  003AAB  00                 	db	0
   160  003AAC  00                 	db	0
   161  003AAD  00                 	db	0
   162  003AAE  00                 	db	0
   163  003AAF  00                 	db	0
   164  003AB0  00                 	db	0
   165  003AB1  00                 	db	0
   166  003AB2  00                 	db	0
   167  003AB3  00                 	db	0
   168  003AB4  00                 	db	0
   169  003AB5  00                 	db	0
   170  003AB6  00                 	db	0
   171  003AB7  00                 	db	0
   172  003AB8  00                 	db	0
   173  003AB9  00                 	db	0
   174  003ABA  00                 	db	0
   175  003ABB  00                 	db	0
   176  003ABC  00                 	db	0
   177  003ABD  00                 	db	0
   178  003ABE  00                 	db	0
   179  003ABF  00                 	db	0
   180  003AC0  00                 	db	0
   181  003AC1  00                 	db	0
   182  003AC2  00                 	db	0
   183  003AC3  00                 	db	0
   184  003AC4  00                 	db	0
   185  003AC5  00                 	db	0
   186  003AC6  00                 	db	0
   187  003AC7  00                 	db	0
   188                           
   189                           ;initializer for _SN
   190  003AC8  0001               	dw	1
   191  003ACA  0000               	dw	0
   192                           
   193                           	psect	smallconst
   194  001000                     __psmallconst:
   195                           	opt stack 0
   196  001000  00                 	db	0
   197  001001                     _dpowers:
   198                           	opt stack 0
   199  001001  0001               	dw	1
   200  001003  0000               	dw	0
   201  001005  000A               	dw	10
   202  001007  0000               	dw	0
   203  001009  0064               	dw	100
   204  00100B  0000               	dw	0
   205  00100D  03E8               	dw	1000
   206  00100F  0000               	dw	0
   207  001011  2710               	dw	10000
   208  001013  0000               	dw	0
   209  001015  86A0               	dw	34464
   210  001017  0001               	dw	1
   211  001019  4240               	dw	16960
   212  00101B  000F               	dw	15
   213  00101D  9680               	dw	38528
   214  00101F  0098               	dw	152
   215  001021  E100               	dw	57600
   216  001023  05F5               	dw	1525
   217  001025  CA00               	dw	51712
   218  001027  3B9A               	dw	15258
   219  001029                     __end_of_dpowers:
   220                           	opt stack 0
   221  001029                     _Version:
   222                           	opt stack 0
   223  001029  31                 	db	49
   224  00102A  2E                 	db	46
   225  00102B  30                 	db	48
   226  00102C  5F                 	db	95
   227  00102D  44                 	db	68
   228  00102E  57                 	db	87
   229  00102F  30                 	db	48
   230  001030  61                 	db	97
   231  001031  00                 	db	0
   232  001032                     __end_of_Version:
   233                           	opt stack 0
   234  0000                     _ADCON0	set	4034
   235  0000                     _ADCON0bits	set	4034
   236  0000                     _ADCON1	set	4033
   237  0000                     _ADCON1bits	set	4033
   238  0000                     _ADCON2	set	4032
   239  0000                     _ADCON2bits	set	4032
   240  0000                     _ADRESH	set	4036
   241  0000                     _ADRESL	set	4035
   242  0000                     _ANSEL	set	3966
   243  0000                     _ANSELH	set	3967
   244  0000                     _BAUDCONbits	set	4024
   245  0000                     _EEADR	set	4009
   246  0000                     _EEADRH	set	4010
   247  0000                     _EECON1bits	set	4006
   248  0000                     _EECON2	set	4007
   249  0000                     _EEDATA	set	4008
   250  0000                     _INTCON2bits	set	4081
   251  0000                     _INTCONbits	set	4082
   252  0000                     _IOCBbits	set	3965
   253  0000                     _IPR1bits	set	3999
   254  0000                     _IPR2bits	set	4002
   255  0000                     _LATA	set	3977
   256  0000                     _LATB	set	3978
   257  0000                     _LATC	set	3979
   258  0000                     _PIE1bits	set	3997
   259  0000                     _PIE2bits	set	4000
   260  0000                     _PIR1bits	set	3998
   261  0000                     _PIR2bits	set	4001
   262  0000                     _PORTA	set	3968
   263  0000                     _PORTB	set	3969
   264  0000                     _PORTC	set	3970
   265  0000                     _PR2	set	4043
   266  0000                     _RCONbits	set	4048
   267  0000                     _RCREG	set	4014
   268  0000                     _RCSTA	set	4011
   269  0000                     _RCSTAbits	set	4011
   270  0000                     _SPBRG	set	4015
   271  0000                     _SPBRGH	set	4016
   272  0000                     _T0CONbits	set	4053
   273  0000                     _T1CONbits	set	4045
   274  0000                     _T2CONbits	set	4042
   275  0000                     _T3CONbits	set	4017
   276  0000                     _TMR0H	set	4055
   277  0000                     _TMR0L	set	4054
   278  0000                     _TMR1H	set	4047
   279  0000                     _TMR1L	set	4046
   280  0000                     _TMR2	set	4044
   281  0000                     _TMR3H	set	4019
   282  0000                     _TMR3L	set	4018
   283  0000                     _TRISAbits	set	3986
   284  0000                     _TRISBbits	set	3987
   285  0000                     _TRISCbits	set	3988
   286  0000                     _TXREG	set	4013
   287  0000                     _TXSTA	set	4012
   288  0000                     _TXSTAbits	set	4012
   289  0000                     _WPUB	set	3964
   290  001032                     STR_14:
   291  001032  42                 	db	66	;'B'
   292  001033  54                 	db	84	;'T'
   293  001034  4E                 	db	78	;'N'
   294  001035  61                 	db	97	;'a'
   295  001036  6D                 	db	109	;'m'
   296  001037  65                 	db	101	;'e'
   297  001038  3D                 	db	61	;'='
   298  001039  48                 	db	72	;'H'
   299  00103A  6F                 	db	111	;'o'
   300  00103B  6D                 	db	109	;'m'
   301  00103C  65                 	db	101	;'e'
   302  00103D  20                 	db	32
   303  00103E  41                 	db	65	;'A'
   304  00103F  75                 	db	117	;'u'
   305  001040  74                 	db	116	;'t'
   306  001041  6F                 	db	111	;'o'
   307  001042  6D                 	db	109	;'m'
   308  001043  61                 	db	97	;'a'
   309  001044  74                 	db	116	;'t'
   310  001045  69                 	db	105	;'i'
   311  001046  6F                 	db	111	;'o'
   312  001047  6E                 	db	110	;'n'
   313  001048  20                 	db	32
   314  001049  25                 	db	37
   315  00104A  6C                 	db	108	;'l'
   316  00104B  64                 	db	100	;'d'
   317  00104C  0D                 	db	13
   318  00104D  00                 	db	0
   319  00104E                     STR_3:
   320  00104E  53                 	db	83	;'S'
   321  00104F  4E                 	db	78	;'N'
   322  001050  2C                 	db	44
   323  001051  48                 	db	72	;'H'
   324  001052  6F                 	db	111	;'o'
   325  001053  6D                 	db	109	;'m'
   326  001054  65                 	db	101	;'e'
   327  001055  20                 	db	32
   328  001056  41                 	db	65	;'A'
   329  001057  75                 	db	117	;'u'
   330  001058  74                 	db	116	;'t'
   331  001059  6F                 	db	111	;'o'
   332  00105A  6D                 	db	109	;'m'
   333  00105B  61                 	db	97	;'a'
   334  00105C  74                 	db	116	;'t'
   335  00105D  69                 	db	105	;'i'
   336  00105E  6F                 	db	111	;'o'
   337  00105F  6E                 	db	110	;'n'
   338  001060  20                 	db	32
   339  001061  25                 	db	37
   340  001062  6C                 	db	108	;'l'
   341  001063  64                 	db	100	;'d'
   342  001064  0D                 	db	13
   343  001065  00                 	db	0
   344  001066                     STR_5:
   345  001066  53                 	db	83	;'S'
   346  001067  53                 	db	83	;'S'
   347  001068  2C                 	db	44
   348  001069  20                 	db	32
   349  00106A  48                 	db	72	;'H'
   350  00106B  6F                 	db	111	;'o'
   351  00106C  6D                 	db	109	;'m'
   352  00106D  65                 	db	101	;'e'
   353  00106E  20                 	db	32
   354  00106F  41                 	db	65	;'A'
   355  001070  75                 	db	117	;'u'
   356  001071  74                 	db	116	;'t'
   357  001072  6F                 	db	111	;'o'
   358  001073  6D                 	db	109	;'m'
   359  001074  61                 	db	97	;'a'
   360  001075  74                 	db	116	;'t'
   361  001076  69                 	db	105	;'i'
   362  001077  6F                 	db	111	;'o'
   363  001078  6E                 	db	110	;'n'
   364  001079  0D                 	db	13
   365  00107A  00                 	db	0
   366  00107B                     STR_7:
   367  00107B  53                 	db	83	;'S'
   368  00107C  59                 	db	89	;'Y'
   369  00107D  2C                 	db	44
   370  00107E  30                 	db	48	;'0'
   371  00107F  30                 	db	48	;'0'
   372  001080  31                 	db	49	;'1'
   373  001081  30                 	db	48	;'0'
   374  001082  0D                 	db	13
   375  001083  00                 	db	0
   376  001084                     STR_9:
   377  001084  53                 	db	83	;'S'
   378  001085  7E                 	db	126
   379  001086  2C                 	db	44
   380  001087  30                 	db	48	;'0'
   381  001088  0D                 	db	13
   382  001089  00                 	db	0
   383  00108A                     STR_15:
   384  00108A  2D                 	db	45
   385  00108B  2D                 	db	45
   386  00108C  2D                 	db	45
   387  00108D  0D                 	db	13
   388  00108E  00                 	db	0
   389  00108F                     STR_13:
   390  00108F  44                 	db	68	;'D'
   391  001090  2C                 	db	44
   392  001091  30                 	db	48	;'0'
   393  001092  0D                 	db	13
   394  001093  00                 	db	0
   395  001094                     STR_1:
   396  001094  24                 	db	36
   397  001095  24                 	db	36
   398  001096  24                 	db	36
   399  001097  00                 	db	0
   400  001098                     STR_2:
   401  001098  43                 	db	67	;'C'
   402  001099  4D                 	db	77	;'M'
   403  00109A  44                 	db	68	;'D'
   404  00109B  00                 	db	0
   405  00109C                     STR_16:
   406  00109C  45                 	db	69	;'E'
   407  00109D  4E                 	db	78	;'N'
   408  00109E  44                 	db	68	;'D'
   409  00109F  00                 	db	0
   410  0010A0                     STR_4:
   411  0010A0  41                 	db	65	;'A'
   412  0010A1  4F                 	db	79	;'O'
   413  0010A2  4B                 	db	75	;'K'
   414  0010A3  00                 	db	0
   415  0000                     
   416                           ; #config settings
   417  0010A4  00                 	db	0	; dummy byte at the end
   418  0000                     
   419                           	psect	cinit
   420  002FD6                     __pcinit:
   421                           	opt stack 0
   422  002FD6                     start_initialization:
   423                           	opt stack 0
   424  002FD6                     __initialization:
   425                           	opt stack 0
   426                           
   427                           ; Clear objects allocated to BANK3 (255 bytes)
   428  002FD6  EE03  F000         	lfsr	0,__pbssBANK3
   429  002FDA  EE10 F0FF          	lfsr	1,255
   430  002FDE                     clear_0:
   431  002FDE  6AEE               	clrf	postinc0,c
   432  002FE0  50E5               	movf	postdec1,w,c
   433  002FE2  50E1               	movf	fsr1l,w,c
   434  002FE4  E1FC               	bnz	clear_0
   435  002FE6  50E2               	movf	fsr1h,w,c
   436  002FE8  E1FA               	bnz	clear_0
   437                           
   438                           ; Clear objects allocated to BANK2 (255 bytes)
   439  002FEA  EE02  F000         	lfsr	0,__pbssBANK2
   440  002FEE  EE10 F0FF          	lfsr	1,255
   441  002FF2                     clear_1:
   442  002FF2  6AEE               	clrf	postinc0,c
   443  002FF4  50E5               	movf	postdec1,w,c
   444  002FF6  50E1               	movf	fsr1l,w,c
   445  002FF8  E1FC               	bnz	clear_1
   446  002FFA  50E2               	movf	fsr1h,w,c
   447  002FFC  E1FA               	bnz	clear_1
   448                           
   449                           ; Clear objects allocated to BANK1 (144 bytes)
   450  002FFE  EE01  F000         	lfsr	0,__pbssBANK1
   451  003002  0E90               	movlw	144
   452  003004                     clear_2:
   453  003004  6AEE               	clrf	postinc0,c
   454  003006  06E8               	decf	wreg,f,c
   455  003008  E1FD               	bnz	clear_2
   456                           
   457                           ; Clear objects allocated to BANK0 (41 bytes)
   458  00300A  EE00  F09F         	lfsr	0,__pbssBANK0
   459  00300E  0E29               	movlw	41
   460  003010                     clear_3:
   461  003010  6AEE               	clrf	postinc0,c
   462  003012  06E8               	decf	wreg,f,c
   463  003014  E1FD               	bnz	clear_3
   464                           
   465                           ; Clear objects allocated to COMRAM (4 bytes)
   466  003016  6A4A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   467  003018  6A49               	clrf	(__pbssCOMRAM+2)& (0+255),c
   468  00301A  6A48               	clrf	(__pbssCOMRAM+1)& (0+255),c
   469  00301C  6A47               	clrf	__pbssCOMRAM& (0+255),c
   470                           
   471                           ; Initialize objects allocated to BANK1 (54 bytes)
   472                           ; load TBLPTR registers with __pidataBANK1
   473  00301E  0E96               	movlw	low __pidataBANK1
   474  003020  6EF6               	movwf	tblptrl,c
   475  003022  0E3A               	movlw	high __pidataBANK1
   476  003024  6EF7               	movwf	tblptrh,c
   477  003026  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   478  003028  6EF8               	movwf	tblptru,c
   479  00302A  EE01  F090         	lfsr	0,__pdataBANK1
   480  00302E  EE10 F036          	lfsr	1,54
   481  003032                     copy_data0:
   482  003032  0009               	tblrd		*+
   483  003034  CFF5 FFEE          	movff	tablat,postinc0
   484  003038  50E5               	movf	postdec1,w,c
   485  00303A  50E1               	movf	fsr1l,w,c
   486  00303C  E1FA               	bnz	copy_data0
   487                           
   488                           ; Initialize objects allocated to BANK0 (12 bytes)
   489                           ; load TBLPTR registers with __pidataBANK0
   490  00303E  0E62               	movlw	low __pidataBANK0
   491  003040  6EF6               	movwf	tblptrl,c
   492  003042  0E3D               	movlw	high __pidataBANK0
   493  003044  6EF7               	movwf	tblptrh,c
   494  003046  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   495  003048  6EF8               	movwf	tblptru,c
   496  00304A  EE00  F0C8         	lfsr	0,__pdataBANK0
   497  00304E  EE10 F00C          	lfsr	1,12
   498  003052                     copy_data1:
   499  003052  0009               	tblrd		*+
   500  003054  CFF5 FFEE          	movff	tablat,postinc0
   501  003058  50E5               	movf	postdec1,w,c
   502  00305A  50E1               	movf	fsr1l,w,c
   503  00305C  E1FA               	bnz	copy_data1
   504                           
   505                           ; Initialize objects allocated to COMRAM (1 bytes)
   506                           ; load TBLPTR registers with __pidataCOMRAM
   507  00305E  0EB8               	movlw	low __pidataCOMRAM
   508  003060  6EF6               	movwf	tblptrl,c
   509  003062  0E3D               	movlw	high __pidataCOMRAM
   510  003064  6EF7               	movwf	tblptrh,c
   511  003066  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   512  003068  6EF8               	movwf	tblptru,c
   513  00306A  0009               	tblrd		*+	;fetch initializer
   514  00306C  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   515  003070                     end_of_initialization:
   516                           	opt stack 0
   517  003070                     __end_of__initialization:
   518                           	opt stack 0
   519  003070  0E00               	movlw	low (__Lmediumconst shr (0+16))
   520  003072  6EF8               	movwf	tblptru,c
   521  003074  0100               	movlb	0
   522  003076  EF2D  F017         	goto	_main	;jump to C main() function
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           postdec1	equ	0xFE5
   530                           fsr1h	equ	0xFE2
   531                           fsr1l	equ	0xFE1
   532                           
   533                           	psect	bssCOMRAM
   534  000047                     __pbssCOMRAM:
   535                           	opt stack 0
   536  000047                     _CommandStringPos:
   537                           	opt stack 0
   538  000047                     	ds	1
   539  000048                     _NewReceivedString:
   540                           	opt stack 0
   541  000048                     	ds	1
   542  000049                     _ReceivedStringPos:
   543                           	opt stack 0
   544  000049                     	ds	1
   545  00004A                     _Timer1_Postscaler:
   546                           	opt stack 0
   547  00004A                     	ds	1
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1h	equ	0xFE2
   556                           fsr1l	equ	0xFE1
   557                           
   558                           	psect	dataCOMRAM
   559  00004B                     __pdataCOMRAM:
   560                           	opt stack 0
   561  00004B                     _Sent:
   562                           	opt stack 0
   563  00004B                     	ds	1
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           postinc0	equ	0xFEE
   569                           wreg	equ	0xFE8
   570                           postdec1	equ	0xFE5
   571                           fsr1h	equ	0xFE2
   572                           fsr1l	equ	0xFE1
   573                           
   574                           	psect	bssBANK0
   575  00009F                     __pbssBANK0:
   576                           	opt stack 0
   577  00009F                     _RFsendCode:
   578                           	opt stack 0
   579  00009F                     	ds	20
   580  0000B3                     _Global:
   581                           	opt stack 0
   582  0000B3                     	ds	5
   583  0000B8                     _BatteryVoltage:
   584                           	opt stack 0
   585  0000B8                     	ds	3
   586  0000BB                     _IRpinOLD:
   587                           	opt stack 0
   588  0000BB                     	ds	1
   589  0000BC                     _IRrawCodeNum:
   590                           	opt stack 0
   591  0000BC                     	ds	1
   592  0000BD                     _RFcodeBit:
   593                           	opt stack 0
   594  0000BD                     	ds	1
   595  0000BE                     _RFcodePlace:
   596                           	opt stack 0
   597  0000BE                     	ds	1
   598  0000BF                     _RFsendFlag:
   599                           	opt stack 0
   600  0000BF                     	ds	1
   601  0000C0                     _Sendcount:
   602                           	opt stack 0
   603  0000C0                     	ds	1
   604  0000C1                     _Timer2_Postscaler:
   605                           	opt stack 0
   606  0000C1                     	ds	1
   607  0000C2                     _Timer3_Postscaler:
   608                           	opt stack 0
   609  0000C2                     	ds	1
   610  0000C3                     _IR_NEC:
   611                           	opt stack 0
   612  0000C3                     	ds	4
   613  0000C7                     _IR_New_Code:
   614                           	opt stack 0
   615  0000C7                     	ds	1
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           postinc0	equ	0xFEE
   621                           wreg	equ	0xFE8
   622                           postdec1	equ	0xFE5
   623                           fsr1h	equ	0xFE2
   624                           fsr1l	equ	0xFE1
   625                           
   626                           	psect	dataBANK0
   627  0000C8                     __pdataBANK0:
   628                           	opt stack 0
   629  0000C8                     _ChannelF:
   630                           	opt stack 0
   631  0000C8                     	ds	12
   632                           tblptru	equ	0xFF8
   633                           tblptrh	equ	0xFF7
   634                           tblptrl	equ	0xFF6
   635                           tablat	equ	0xFF5
   636                           postinc0	equ	0xFEE
   637                           wreg	equ	0xFE8
   638                           postdec1	equ	0xFE5
   639                           fsr1h	equ	0xFE2
   640                           fsr1l	equ	0xFE1
   641                           
   642                           	psect	bssBANK1
   643  000100                     __pbssBANK1:
   644                           	opt stack 0
   645  000100                     _IRRawCode:
   646                           	opt stack 0
   647  000100                     	ds	144
   648                           tblptru	equ	0xFF8
   649                           tblptrh	equ	0xFF7
   650                           tblptrl	equ	0xFF6
   651                           tablat	equ	0xFF5
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           postdec1	equ	0xFE5
   655                           fsr1h	equ	0xFE2
   656                           fsr1l	equ	0xFE1
   657                           
   658                           	psect	dataBANK1
   659  000190                     __pdataBANK1:
   660                           	opt stack 0
   661  000190                     _ProductName:
   662                           	opt stack 0
   663  000190                     	ds	50
   664  0001C2                     _SN:
   665                           	opt stack 0
   666  0001C2                     	ds	4
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           postinc0	equ	0xFEE
   672                           wreg	equ	0xFE8
   673                           postdec1	equ	0xFE5
   674                           fsr1h	equ	0xFE2
   675                           fsr1l	equ	0xFE1
   676                           
   677                           	psect	bssBANK2
   678  000200                     __pbssBANK2:
   679                           	opt stack 0
   680  000200                     _CommandString:
   681                           	opt stack 0
   682  000200                     	ds	255
   683                           tblptru	equ	0xFF8
   684                           tblptrh	equ	0xFF7
   685                           tblptrl	equ	0xFF6
   686                           tablat	equ	0xFF5
   687                           postinc0	equ	0xFEE
   688                           wreg	equ	0xFE8
   689                           postdec1	equ	0xFE5
   690                           fsr1h	equ	0xFE2
   691                           fsr1l	equ	0xFE1
   692                           
   693                           	psect	bssBANK3
   694  000300                     __pbssBANK3:
   695                           	opt stack 0
   696  000300                     _ReceivedString:
   697                           	opt stack 0
   698  000300                     	ds	255
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           postinc0	equ	0xFEE
   704                           wreg	equ	0xFE8
   705                           postdec1	equ	0xFE5
   706                           fsr1h	equ	0xFE2
   707                           fsr1l	equ	0xFE1
   708                           
   709                           	psect	cstackBANK4
   710  000400                     __pcstackBANK4:
   711                           	opt stack 0
   712  000400                     BluetoothInitialSetup@buf:
   713                           	opt stack 0
   714                           
   715                           ; 50 bytes @ 0x0
   716  000400                     	ds	50
   717  000432                     BluetoothInitialSetup@ok:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x32
   721  000432                     	ds	1
   722                           tblptru	equ	0xFF8
   723                           tblptrh	equ	0xFF7
   724                           tblptrl	equ	0xFF6
   725                           tablat	equ	0xFF5
   726                           postinc0	equ	0xFEE
   727                           wreg	equ	0xFE8
   728                           postdec1	equ	0xFE5
   729                           fsr1h	equ	0xFE2
   730                           fsr1l	equ	0xFE1
   731                           
   732                           	psect	cstackBANK1
   733  0001C6                     __pcstackBANK1:
   734                           	opt stack 0
   735  0001C6                     ??_GetMemoryLong:
   736  0001C6                     ??___ftdiv:
   737  0001C6                     ?___llmod:
   738                           	opt stack 0
   739  0001C6                     ___ftadd@sign:
   740                           	opt stack 0
   741  0001C6                     ___llmod@dividend:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x0
   745  0001C6                     	ds	1
   746  0001C7                     ___ftadd@exp2:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x1
   750  0001C7                     	ds	1
   751  0001C8                     ___ftadd@exp1:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x2
   755  0001C8                     	ds	1
   756  0001C9                     ?___fttol:
   757                           	opt stack 0
   758  0001C9                     ___ftdiv@cntr:
   759                           	opt stack 0
   760  0001C9                     ___fttol@f1:
   761                           	opt stack 0
   762                           
   763                           ; 3 bytes @ 0x3
   764  0001C9                     	ds	1
   765  0001CA                     ___ftdiv@f3:
   766                           	opt stack 0
   767  0001CA                     ___llmod@divisor:
   768                           	opt stack 0
   769                           
   770                           ; 4 bytes @ 0x4
   771  0001CA                     	ds	3
   772  0001CD                     ??___fttol:
   773  0001CD                     ___ftdiv@exp:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x7
   777  0001CD                     	ds	1
   778  0001CE                     ?_sprintf:
   779                           	opt stack 0
   780  0001CE                     ___ftdiv@sign:
   781                           	opt stack 0
   782  0001CE                     sprintf@sp:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x8
   786  0001CE                     	ds	1
   787  0001CF                     ?___ftmul:
   788                           	opt stack 0
   789  0001CF                     ___ftmul@f1:
   790                           	opt stack 0
   791                           
   792                           ; 3 bytes @ 0x9
   793  0001CF                     	ds	1
   794  0001D0                     sprintf@f:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0xA
   798  0001D0                     	ds	2
   799  0001D2                     ___fttol@sign1:
   800                           	opt stack 0
   801  0001D2                     ___ftmul@f2:
   802                           	opt stack 0
   803                           
   804                           ; 3 bytes @ 0xC
   805  0001D2                     	ds	1
   806  0001D3                     ___fttol@lval:
   807                           	opt stack 0
   808                           
   809                           ; 4 bytes @ 0xD
   810  0001D3                     	ds	2
   811  0001D5                     ??___ftmul:
   812                           
   813                           ; 0 bytes @ 0xF
   814  0001D5                     	ds	1
   815  0001D6                     sprintf@prec:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x10
   819  0001D6                     	ds	1
   820  0001D7                     ___fttol@exp1:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x11
   824  0001D7                     	ds	1
   825  0001D8                     ?_Round:
   826                           	opt stack 0
   827  0001D8                     ___ftmul@exp:
   828                           	opt stack 0
   829  0001D8                     sprintf@ap:
   830                           	opt stack 0
   831  0001D8                     Round@input:
   832                           	opt stack 0
   833                           
   834                           ; 3 bytes @ 0x12
   835  0001D8                     	ds	1
   836  0001D9                     ___ftmul@f3_as_product:
   837                           	opt stack 0
   838                           
   839                           ; 3 bytes @ 0x13
   840  0001D9                     	ds	1
   841  0001DA                     ?_GetEEPROM:
   842                           	opt stack 0
   843  0001DA                     sprintf@flag:
   844                           	opt stack 0
   845  0001DA                     SetMemoryLong@Data:
   846                           	opt stack 0
   847                           
   848                           ; 4 bytes @ 0x14
   849  0001DA                     	ds	1
   850  0001DB                     Round@temp:
   851                           	opt stack 0
   852  0001DB                     sprintf@val:
   853                           	opt stack 0
   854                           
   855                           ; 4 bytes @ 0x15
   856  0001DB                     	ds	1
   857  0001DC                     ___ftmul@cntr:
   858                           	opt stack 0
   859                           
   860                           ; 1 bytes @ 0x16
   861  0001DC                     	ds	1
   862  0001DD                     ___ftmul@sign:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x17
   866  0001DD                     	ds	1
   867  0001DE                     ?_ReadVoltage:
   868                           	opt stack 0
   869  0001DE                     SetMemoryLong@AddressFirst:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x18
   873  0001DE                     	ds	1
   874  0001DF                     ??_SetMemoryLong:
   875  0001DF                     sprintf@c:
   876                           	opt stack 0
   877  0001DF                     InitUART@Baud:
   878                           	opt stack 0
   879  0001DF                     GetEEPROM@Temp:
   880                           	opt stack 0
   881                           
   882                           ; 5 bytes @ 0x19
   883  0001DF                     	ds	2
   884  0001E1                     ReadVoltage@voltage:
   885                           	opt stack 0
   886                           
   887                           ; 3 bytes @ 0x1B
   888  0001E1                     	ds	2
   889  0001E3                     ??_InitUART:
   890  0001E3                     SetMemoryLong@Test:
   891                           	opt stack 0
   892                           
   893                           ; 4 bytes @ 0x1D
   894  0001E3                     	ds	1
   895  0001E4                     ReadVoltage@temp:
   896                           	opt stack 0
   897  0001E4                     SyncEEPROMToGlobal@Temp:
   898                           	opt stack 0
   899                           
   900                           ; 5 bytes @ 0x1E
   901  0001E4                     	ds	3
   902  0001E7                     SetMemoryLong@H:
   903                           	opt stack 0
   904  0001E7                     _InitUART$2732:
   905                           	opt stack 0
   906                           
   907                           ; 3 bytes @ 0x21
   908  0001E7                     	ds	1
   909  0001E8                     SetMemoryLong@MH:
   910                           	opt stack 0
   911                           
   912                           ; 1 bytes @ 0x22
   913  0001E8                     	ds	1
   914  0001E9                     SetMemoryLong@ML:
   915                           	opt stack 0
   916                           
   917                           ; 1 bytes @ 0x23
   918  0001E9                     	ds	1
   919  0001EA                     SetMemoryLong@L:
   920                           	opt stack 0
   921  0001EA                     InitUART@spbrg:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x24
   925  0001EA                     	ds	1
   926  0001EB                     ?_SetEEPROM:
   927                           	opt stack 0
   928  0001EB                     SetEEPROM@Temp:
   929                           	opt stack 0
   930                           
   931                           ; 5 bytes @ 0x25
   932  0001EB                     	ds	1
   933  0001EC                     InitUART@config:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x26
   937  0001EC                     	ds	1
   938  0001ED                     InitUART@temp:
   939                           	opt stack 0
   940                           
   941                           ; 4 bytes @ 0x27
   942  0001ED                     	ds	3
   943  0001F0                     SetEEPROM@burn:
   944                           	opt stack 0
   945                           
   946                           ; 4 bytes @ 0x2A
   947  0001F0                     	ds	4
   948  0001F4                     SetEEPROM@fail:
   949                           	opt stack 0
   950                           
   951                           ; 4 bytes @ 0x2E
   952  0001F4                     	ds	4
   953                           tblptru	equ	0xFF8
   954                           tblptrh	equ	0xFF7
   955                           tblptrl	equ	0xFF6
   956                           tablat	equ	0xFF5
   957                           postinc0	equ	0xFEE
   958                           wreg	equ	0xFE8
   959                           postdec1	equ	0xFE5
   960                           fsr1h	equ	0xFE2
   961                           fsr1l	equ	0xFE1
   962                           
   963                           	psect	cstackBANK0
   964  000060                     __pcstackBANK0:
   965                           	opt stack 0
   966  000060                     i2SetMemoryLong@Test:
   967                           	opt stack 0
   968                           
   969                           ; 4 bytes @ 0x0
   970  000060                     	ds	4
   971  000064                     i2SetMemoryLong@H:
   972                           	opt stack 0
   973                           
   974                           ; 1 bytes @ 0x4
   975  000064                     	ds	1
   976  000065                     i2SetMemoryLong@MH:
   977                           	opt stack 0
   978                           
   979                           ; 1 bytes @ 0x5
   980  000065                     	ds	1
   981  000066                     i2SetMemoryLong@ML:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x6
   985  000066                     	ds	1
   986  000067                     i2SetMemoryLong@L:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x7
   990  000067                     	ds	1
   991  000068                     ?i2_SetEEPROM:
   992                           	opt stack 0
   993  000068                     i2SetEEPROM@Temp:
   994                           	opt stack 0
   995                           
   996                           ; 5 bytes @ 0x8
   997  000068                     	ds	5
   998  00006D                     i2SetEEPROM@burn:
   999                           	opt stack 0
  1000                           
  1001                           ; 4 bytes @ 0xD
  1002  00006D                     	ds	4
  1003  000071                     UseIRCode@Code:
  1004                           	opt stack 0
  1005                           
  1006                           ; 2 bytes @ 0x11
  1007  000071                     	ds	2
  1008  000073                     UseIRCode@NEC:
  1009                           	opt stack 0
  1010                           
  1011                           ; 4 bytes @ 0x13
  1012  000073                     	ds	4
  1013  000077                     ??_high_isr:
  1014                           
  1015                           ; 0 bytes @ 0x17
  1016  000077                     	ds	18
  1017  000089                     high_isr@IRpin:
  1018                           	opt stack 0
  1019                           
  1020                           ; 1 bytes @ 0x29
  1021  000089                     	ds	1
  1022  00008A                     high_isr@Time0:
  1023                           	opt stack 0
  1024                           
  1025                           ; 2 bytes @ 0x2A
  1026  00008A                     	ds	2
  1027  00008C                     ?_ReadEEPROM_1Byte:
  1028                           	opt stack 0
  1029  00008C                     ?___ftpack:
  1030                           	opt stack 0
  1031  00008C                     ?___lldiv:
  1032                           	opt stack 0
  1033  00008C                     UARTchar@data:
  1034                           	opt stack 0
  1035  00008C                     cleanBuffer@data:
  1036                           	opt stack 0
  1037  00008C                     cleanBuffer16bit@data:
  1038                           	opt stack 0
  1039  00008C                     StringContains@This:
  1040                           	opt stack 0
  1041  00008C                     OpenUSART@spbrg:
  1042                           	opt stack 0
  1043  00008C                     ReadEEPROM_1Byte@address:
  1044                           	opt stack 0
  1045  00008C                     WriteEEPROM_1Byte@address:
  1046                           	opt stack 0
  1047  00008C                     ___ftpack@arg:
  1048                           	opt stack 0
  1049  00008C                     ___ftge@ff1:
  1050                           	opt stack 0
  1051  00008C                     delayUS@US:
  1052                           	opt stack 0
  1053  00008C                     ___lldiv@dividend:
  1054                           	opt stack 0
  1055                           
  1056                           ; 4 bytes @ 0x2C
  1057  00008C                     	ds	1
  1058  00008D                     UARTstring@data:
  1059                           	opt stack 0
  1060                           
  1061                           ; 2 bytes @ 0x2D
  1062  00008D                     	ds	1
  1063  00008E                     OpenUSART@config:
  1064                           	opt stack 0
  1065  00008E                     ReadEEPROM_1Byte@GIEstatus:
  1066                           	opt stack 0
  1067  00008E                     WriteEEPROM_1Byte@data:
  1068                           	opt stack 0
  1069  00008E                     cleanBuffer@count:
  1070                           	opt stack 0
  1071  00008E                     cleanBuffer16bit@count:
  1072                           	opt stack 0
  1073  00008E                     StringContains@That:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x2E
  1077  00008E                     	ds	1
  1078  00008F                     ?_GetMemoryChar:
  1079                           	opt stack 0
  1080  00008F                     ?_GetMemoryLong:
  1081                           	opt stack 0
  1082  00008F                     WriteEEPROM_1Byte@GIEstatus:
  1083                           	opt stack 0
  1084  00008F                     ___ftpack@exp:
  1085                           	opt stack 0
  1086  00008F                     ___ftge@ff2:
  1087                           	opt stack 0
  1088                           
  1089                           ; 3 bytes @ 0x2F
  1090  00008F                     	ds	1
  1091  000090                     ??_delayUS:
  1092  000090                     ??_cleanBuffer:
  1093  000090                     ??_cleanBuffer16bit:
  1094  000090                     ??_StringContains:
  1095  000090                     ___ftpack@sign:
  1096                           	opt stack 0
  1097  000090                     ___lldiv@divisor:
  1098                           	opt stack 0
  1099                           
  1100                           ; 4 bytes @ 0x30
  1101  000090                     	ds	1
  1102  000091                     ??___ftpack:
  1103  000091                     delayUS@i:
  1104                           	opt stack 0
  1105                           
  1106                           ; 4 bytes @ 0x31
  1107  000091                     	ds	1
  1108  000092                     ??___ftge:
  1109                           
  1110                           ; 0 bytes @ 0x32
  1111  000092                     	ds	1
  1112  000093                     cleanBuffer@i:
  1113                           	opt stack 0
  1114  000093                     cleanBuffer16bit@i:
  1115                           	opt stack 0
  1116  000093                     GetMemoryChar@AddressFirst:
  1117                           	opt stack 0
  1118  000093                     GetMemoryLong@temp:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0x33
  1122  000093                     	ds	1
  1123  000094                     ?___ftadd:
  1124                           	opt stack 0
  1125  000094                     ?___altoft:
  1126                           	opt stack 0
  1127  000094                     ?___lltoft:
  1128                           	opt stack 0
  1129  000094                     ?___lwtoft:
  1130                           	opt stack 0
  1131  000094                     GetMemoryChar@H:
  1132                           	opt stack 0
  1133  000094                     ___lwtoft@c:
  1134                           	opt stack 0
  1135  000094                     ___ftadd@f1:
  1136                           	opt stack 0
  1137  000094                     ___altoft@c:
  1138                           	opt stack 0
  1139  000094                     ___lldiv@quotient:
  1140                           	opt stack 0
  1141  000094                     ___lltoft@c:
  1142                           	opt stack 0
  1143                           
  1144                           ; 4 bytes @ 0x34
  1145  000094                     	ds	1
  1146  000095                     delayUS@j:
  1147                           	opt stack 0
  1148  000095                     SetMemoryChar@AddressFirst:
  1149                           	opt stack 0
  1150                           
  1151                           ; 1 bytes @ 0x35
  1152  000095                     	ds	1
  1153  000096                     SetMemoryChar@Test:
  1154                           	opt stack 0
  1155  000096                     EnterCommandMode@count:
  1156                           	opt stack 0
  1157  000096                     InternalADC_Read@ADCcounts:
  1158                           	opt stack 0
  1159                           
  1160                           ; 2 bytes @ 0x36
  1161  000096                     	ds	1
  1162  000097                     ?___ftdiv:
  1163                           	opt stack 0
  1164  000097                     GetMemoryLong@H:
  1165                           	opt stack 0
  1166  000097                     SetMemoryChar@Data:
  1167                           	opt stack 0
  1168  000097                     ___ftadd@f2:
  1169                           	opt stack 0
  1170  000097                     ___ftdiv@f1:
  1171                           	opt stack 0
  1172                           
  1173                           ; 3 bytes @ 0x37
  1174  000097                     	ds	1
  1175  000098                     ??_InternalADC_Read:
  1176  000098                     ??___altoft:
  1177  000098                     ??___lltoft:
  1178  000098                     GetMemoryLong@MH:
  1179                           	opt stack 0
  1180  000098                     ___lldiv@counter:
  1181                           	opt stack 0
  1182                           
  1183                           ; 1 bytes @ 0x38
  1184  000098                     	ds	1
  1185  000099                     GetMemoryLong@ML:
  1186                           	opt stack 0
  1187  000099                     ___llmod@counter:
  1188                           	opt stack 0
  1189                           
  1190                           ; 1 bytes @ 0x39
  1191  000099                     	ds	1
  1192  00009A                     ??_sprintf:
  1193  00009A                     ??___ftadd:
  1194  00009A                     InternalADC_Read@AnaChanSel:
  1195                           	opt stack 0
  1196  00009A                     GetMemoryLong@L:
  1197                           	opt stack 0
  1198  00009A                     ___ftdiv@f2:
  1199                           	opt stack 0
  1200                           
  1201                           ; 3 bytes @ 0x3A
  1202  00009A                     	ds	1
  1203  00009B                     InternalADC_Read@channel:
  1204                           	opt stack 0
  1205  00009B                     GetMemoryLong@AddressFirst:
  1206                           	opt stack 0
  1207                           
  1208                           ; 1 bytes @ 0x3B
  1209  00009B                     	ds	1
  1210  00009C                     ___altoft@exp:
  1211                           	opt stack 0
  1212  00009C                     ___lltoft@exp:
  1213                           	opt stack 0
  1214                           
  1215                           ; 1 bytes @ 0x3C
  1216  00009C                     	ds	1
  1217  00009D                     ___altoft@sign:
  1218                           	opt stack 0
  1219                           
  1220                           ; 1 bytes @ 0x3D
  1221  00009D                     	ds	1
  1222  00009E                     main@i:
  1223                           	opt stack 0
  1224                           
  1225                           ; 1 bytes @ 0x3E
  1226  00009E                     	ds	1
  1227                           tblptru	equ	0xFF8
  1228                           tblptrh	equ	0xFF7
  1229                           tblptrl	equ	0xFF6
  1230                           tablat	equ	0xFF5
  1231                           postinc0	equ	0xFEE
  1232                           wreg	equ	0xFE8
  1233                           postdec1	equ	0xFE5
  1234                           fsr1h	equ	0xFE2
  1235                           fsr1l	equ	0xFE1
  1236                           
  1237                           	psect	cstackCOMRAM
  1238  000001                     __pcstackCOMRAM:
  1239                           	opt stack 0
  1240  000001                     IsCharacter@data:
  1241                           	opt stack 0
  1242  000001                     ReadUSART@data:
  1243                           	opt stack 0
  1244                           
  1245                           ; 1 bytes @ 0x0
  1246  000001                     	ds	1
  1247  000002                     ??_low_isr:
  1248                           
  1249                           ; 0 bytes @ 0x1
  1250  000002                     	ds	17
  1251  000013                     low_isr@data:
  1252                           	opt stack 0
  1253                           
  1254                           ; 1 bytes @ 0x12
  1255  000013                     	ds	1
  1256  000014                     ?i2_ReadEEPROM_1Byte:
  1257                           	opt stack 0
  1258  000014                     IRrawToNEC@Raw:
  1259                           	opt stack 0
  1260  000014                     SendRF@Code:
  1261                           	opt stack 0
  1262  000014                     i2ReadEEPROM_1Byte@address:
  1263                           	opt stack 0
  1264  000014                     i2WriteEEPROM_1Byte@address:
  1265                           	opt stack 0
  1266  000014                     i2delayUS@US:
  1267                           	opt stack 0
  1268                           
  1269                           ; 4 bytes @ 0x13
  1270  000014                     	ds	2
  1271  000016                     SendRF@size:
  1272                           	opt stack 0
  1273  000016                     i2ReadEEPROM_1Byte@GIEstatus:
  1274                           	opt stack 0
  1275  000016                     i2WriteEEPROM_1Byte@data:
  1276                           	opt stack 0
  1277  000016                     IRrawToNEC@NEC:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0x15
  1281  000016                     	ds	1
  1282  000017                     ?i2_GetMemoryLong:
  1283                           	opt stack 0
  1284  000017                     ?i2_GetMemoryChar:
  1285                           	opt stack 0
  1286  000017                     SendRF@RepeatAmount:
  1287                           	opt stack 0
  1288  000017                     i2WriteEEPROM_1Byte@GIEstatus:
  1289                           	opt stack 0
  1290                           
  1291                           ; 1 bytes @ 0x16
  1292  000017                     	ds	1
  1293  000018                     ??i2_delayUS:
  1294  000018                     IRrawToNEC@Invert:
  1295                           	opt stack 0
  1296  000018                     SendRF@i:
  1297                           	opt stack 0
  1298                           
  1299                           ; 1 bytes @ 0x17
  1300  000018                     	ds	1
  1301  000019                     ??_IRrawToNEC:
  1302  000019                     SendRF_wait@Code:
  1303                           	opt stack 0
  1304  000019                     i2delayUS@i:
  1305                           	opt stack 0
  1306                           
  1307                           ; 4 bytes @ 0x18
  1308  000019                     	ds	2
  1309  00001B                     ??i2_GetMemoryLong:
  1310  00001B                     SendRF_wait@size:
  1311                           	opt stack 0
  1312  00001B                     i2GetMemoryChar@AddressFirst:
  1313                           	opt stack 0
  1314  00001B                     IRrawToNEC@NECtemp:
  1315                           	opt stack 0
  1316                           
  1317                           ; 4 bytes @ 0x1A
  1318  00001B                     	ds	1
  1319  00001C                     SendRF_wait@amount:
  1320                           	opt stack 0
  1321  00001C                     i2GetMemoryChar@H:
  1322                           	opt stack 0
  1323                           
  1324                           ; 1 bytes @ 0x1B
  1325  00001C                     	ds	1
  1326  00001D                     i2delayUS@j:
  1327                           	opt stack 0
  1328  00001D                     i2SetMemoryChar@AddressFirst:
  1329                           	opt stack 0
  1330                           
  1331                           ; 1 bytes @ 0x1C
  1332  00001D                     	ds	1
  1333  00001E                     i2SetMemoryChar@Test:
  1334                           	opt stack 0
  1335                           
  1336                           ; 1 bytes @ 0x1D
  1337  00001E                     	ds	1
  1338  00001F                     IRrawToNEC@first:
  1339                           	opt stack 0
  1340  00001F                     i2SetMemoryChar@Data:
  1341                           	opt stack 0
  1342                           
  1343                           ; 1 bytes @ 0x1E
  1344  00001F                     	ds	1
  1345  000020                     IRrawToNEC@i:
  1346                           	opt stack 0
  1347                           
  1348                           ; 1 bytes @ 0x1F
  1349  000020                     	ds	1
  1350  000021                     IRrawToNEC@StartBit:
  1351                           	opt stack 0
  1352                           
  1353                           ; 1 bytes @ 0x20
  1354  000021                     	ds	14
  1355  00002F                     i2GetMemoryLong@temp:
  1356                           	opt stack 0
  1357                           
  1358                           ; 4 bytes @ 0x2E
  1359  00002F                     	ds	4
  1360  000033                     i2GetMemoryLong@H:
  1361                           	opt stack 0
  1362                           
  1363                           ; 1 bytes @ 0x32
  1364  000033                     	ds	1
  1365  000034                     i2GetMemoryLong@MH:
  1366                           	opt stack 0
  1367                           
  1368                           ; 1 bytes @ 0x33
  1369  000034                     	ds	1
  1370  000035                     i2GetMemoryLong@ML:
  1371                           	opt stack 0
  1372                           
  1373                           ; 1 bytes @ 0x34
  1374  000035                     	ds	1
  1375  000036                     i2GetMemoryLong@L:
  1376                           	opt stack 0
  1377                           
  1378                           ; 1 bytes @ 0x35
  1379  000036                     	ds	1
  1380  000037                     i2GetMemoryLong@AddressFirst:
  1381                           	opt stack 0
  1382                           
  1383                           ; 1 bytes @ 0x36
  1384  000037                     	ds	1
  1385  000038                     i2SetMemoryLong@Data:
  1386                           	opt stack 0
  1387                           
  1388                           ; 4 bytes @ 0x37
  1389  000038                     	ds	4
  1390  00003C                     i2SetMemoryLong@AddressFirst:
  1391                           	opt stack 0
  1392                           
  1393                           ; 1 bytes @ 0x3B
  1394  00003C                     	ds	1
  1395  00003D                     ??i2_SetMemoryLong:
  1396                           
  1397                           ; 0 bytes @ 0x3C
  1398  00003D                     	ds	4
  1399  000041                     i2SetEEPROM@fail:
  1400                           	opt stack 0
  1401                           
  1402                           ; 4 bytes @ 0x40
  1403  000041                     	ds	4
  1404  000045                     
  1405                           ; 0 bytes @ 0x44
  1406  000045                     	ds	1
  1407  000046                     UseIRCode@i:
  1408                           	opt stack 0
  1409                           
  1410                           ; 1 bytes @ 0x45
  1411  000046                     	ds	1
  1412                           tblptru	equ	0xFF8
  1413                           tblptrh	equ	0xFF7
  1414                           tblptrl	equ	0xFF6
  1415                           tablat	equ	0xFF5
  1416                           postinc0	equ	0xFEE
  1417                           wreg	equ	0xFE8
  1418                           postdec1	equ	0xFE5
  1419                           fsr1h	equ	0xFE2
  1420                           fsr1l	equ	0xFE1
  1421                           
  1422 ;;
  1423 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1424 ;;
  1425 ;; *************** function _main *****************
  1426 ;; Defined at:
  1427 ;;		line 63 in file "main.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  i               1   62[BANK0 ] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;		None               void
  1434 ;; Registers used:
  1435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;Total ram usage:        1 bytes
  1446 ;; Hardware stack levels required when called:   17
  1447 ;; This function calls:
  1448 ;;		_ConfigureOscillator
  1449 ;;		_InitApp
  1450 ;;		_Init_System
  1451 ;;		_ReadVoltage
  1452 ;;		___ftge
  1453 ;;		_delayUS
  1454 ;; This function is called by:
  1455 ;;		Startup code after reset
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text0
  1460  002E5A                     __ptext0:
  1461                           	opt stack 0
  1462  002E5A                     _main:
  1463                           	opt stack 14
  1464                           
  1465                           ;main.c: 65: unsigned char i=0;
  1466                           
  1467                           ;incstack = 0
  1468  002E5A  0E00               	movlw	0
  1469  002E5C  0100               	movlb	0	; () banked
  1470  002E5E  6F9E               	movwf	main@i& (0+255),b
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;main.c: 67: ConfigureOscillator();
  1474  002E60  ECDB  F01E         	call	_ConfigureOscillator	;wreg free
  1475                           
  1476                           ;main.c: 68: InitApp();
  1477  002E64  EC13  F01D         	call	_InitApp	;wreg free
  1478                           
  1479                           ;main.c: 69: Init_System();
  1480  002E68  ECB4  F01B         	call	_Init_System	;wreg free
  1481                           
  1482                           ;main.c: 72: for(i =0;i<10;i++)
  1483  002E6C  0E00               	movlw	0
  1484  002E6E  0100               	movlb	0	; () banked
  1485  002E70  6F9E               	movwf	main@i& (0+255),b
  1486  002E72                     l6562:
  1487                           
  1488                           ; BSR set to: 0
  1489  002E72  0E09               	movlw	9
  1490  002E74  0100               	movlb	0	; () banked
  1491  002E76  659E               	cpfsgt	main@i& (0+255),b
  1492  002E78  D001               	goto	l6566
  1493                           
  1494                           ; BSR set to: 0
  1495  002E7A  D01D               	goto	l6578
  1496  002E7C                     l6566:
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;main.c: 73: {
  1500                           ;main.c: 74: (LATC |= 0x02);
  1501  002E7C  828B               	bsf	3979,1,c	;volatile
  1502                           
  1503                           ;main.c: 75: (LATC &= ~0x04);
  1504  002E7E  948B               	bcf	3979,2,c	;volatile
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;main.c: 76: delayUS(10000);
  1508  002E80  0E10               	movlw	16
  1509  002E82  0100               	movlb	0	; () banked
  1510  002E84  6F8C               	movwf	delayUS@US& (0+255),b
  1511  002E86  0E27               	movlw	39
  1512  002E88  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  1513  002E8A  0E00               	movlw	0
  1514  002E8C  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  1515  002E8E  0E00               	movlw	0
  1516  002E90  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  1517  002E92  ECC2  F01A         	call	_delayUS	;wreg free
  1518                           
  1519                           ;main.c: 77: (LATC &= ~0x02);
  1520  002E96  928B               	bcf	3979,1,c	;volatile
  1521                           
  1522                           ;main.c: 78: (LATC |= 0x04);
  1523  002E98  848B               	bsf	3979,2,c	;volatile
  1524                           
  1525                           ;main.c: 79: delayUS(10000);
  1526  002E9A  0E10               	movlw	16
  1527  002E9C  0100               	movlb	0	; () banked
  1528  002E9E  6F8C               	movwf	delayUS@US& (0+255),b
  1529  002EA0  0E27               	movlw	39
  1530  002EA2  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  1531  002EA4  0E00               	movlw	0
  1532  002EA6  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  1533  002EA8  0E00               	movlw	0
  1534  002EAA  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  1535  002EAC  ECC2  F01A         	call	_delayUS	;wreg free
  1536  002EB0  0100               	movlb	0	; () banked
  1537  002EB2  2B9E               	incf	main@i& (0+255),f,b
  1538  002EB4  D7DE               	goto	l6562
  1539  002EB6                     l6578:
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;main.c: 80: }
  1543                           ;main.c: 81: (LATC &= ~0x04);
  1544  002EB6  948B               	bcf	3979,2,c	;volatile
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 83: BatteryVoltage = ReadVoltage();
  1548  002EB8  EC8F  F017         	call	_ReadVoltage	;wreg free
  1549  002EBC  C1DE  F0B8         	movff	?_ReadVoltage,_BatteryVoltage
  1550  002EC0  C1DF  F0B9         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  1551  002EC4  C1E0  F0BA         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  1552                           
  1553                           ;main.c: 84: if(BatteryVoltage < 3.7 )
  1554  002EC8  C0B8  F08C         	movff	_BatteryVoltage,___ftge@ff1
  1555  002ECC  C0B9  F08D         	movff	_BatteryVoltage+1,___ftge@ff1+1
  1556  002ED0  C0BA  F08E         	movff	_BatteryVoltage+2,___ftge@ff1+2
  1557  002ED4  0ECD               	movlw	205
  1558  002ED6  0100               	movlb	0	; () banked
  1559  002ED8  6F8F               	movwf	___ftge@ff2& (0+255),b
  1560  002EDA  0E6C               	movlw	108
  1561  002EDC  0100               	movlb	0	; () banked
  1562  002EDE  6F90               	movwf	(___ftge@ff2+1)& (0+255),b
  1563  002EE0  0E40               	movlw	64
  1564  002EE2  0100               	movlb	0	; () banked
  1565  002EE4  6F91               	movwf	(___ftge@ff2+2)& (0+255),b
  1566  002EE6  EC9B  F015         	call	___ftge	;wreg free
  1567  002EEA  0100               	movlb	0	; () banked
  1568  002EEC  A0D8               	btfss	status,0,c
  1569  002EEE  D013               	goto	l6588
  1570                           
  1571                           ;main.c: 88: else if (BatteryVoltage > 30.0)
  1572                           
  1573                           ;main.c: 87: }
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;main.c: 85: {
  1577                           ;main.c: 86: __nop();
  1578  002EF0  0E00               	movlw	0
  1579  002EF2  0100               	movlb	0	; () banked
  1580  002EF4  6F8C               	movwf	___ftge@ff1& (0+255),b
  1581  002EF6  0EF0               	movlw	240
  1582  002EF8  0100               	movlb	0	; () banked
  1583  002EFA  6F8D               	movwf	(___ftge@ff1+1)& (0+255),b
  1584  002EFC  0E41               	movlw	65
  1585  002EFE  0100               	movlb	0	; () banked
  1586  002F00  6F8E               	movwf	(___ftge@ff1+2)& (0+255),b
  1587  002F02  C0B8  F08F         	movff	_BatteryVoltage,___ftge@ff2
  1588  002F06  C0B9  F090         	movff	_BatteryVoltage+1,___ftge@ff2+1
  1589  002F0A  C0BA  F091         	movff	_BatteryVoltage+2,___ftge@ff2+2
  1590  002F0E  EC9B  F015         	call	___ftge	;wreg free
  1591  002F12  0100               	movlb	0	; () banked
  1592  002F14  A0D8               	btfss	status,0,c
  1593  002F16                     l6588:
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;main.c: 89: {
  1597                           ;main.c: 90: __nop();
  1598  002F16  F000               	nop	
  1599  002F18  D7FF               	goto	l31
  1600  002F1A  EFA3  F000         	goto	start
  1601  002F1E                     __end_of_main:
  1602                           	opt stack 0
  1603                           tblptru	equ	0xFF8
  1604                           tblptrh	equ	0xFF7
  1605                           tblptrl	equ	0xFF6
  1606                           tablat	equ	0xFF5
  1607                           postinc0	equ	0xFEE
  1608                           wreg	equ	0xFE8
  1609                           postdec1	equ	0xFE5
  1610                           fsr1h	equ	0xFE2
  1611                           fsr1l	equ	0xFE1
  1612                           status	equ	0xFD8
  1613                           
  1614 ;; *************** function ___ftge *****************
  1615 ;; Defined at:
  1616 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  ff1             3   44[BANK0 ] float 
  1619 ;;  ff2             3   47[BANK0 ] float 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;		None               void
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1631 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;Total ram usage:        9 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    9
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text1
  1646  002B36                     __ptext1:
  1647                           	opt stack 0
  1648  002B36                     ___ftge:
  1649                           	opt stack 21
  1650                           
  1651                           ;incstack = 0
  1652  002B36  0100               	movlb	0	; () banked
  1653  002B38  AF8E               	btfss	(___ftge@ff1+2)& (0+255),7,b
  1654  002B3A  D01E               	goto	l4916
  1655                           
  1656                           ; BSR set to: 0
  1657  002B3C  C08C  F092         	movff	___ftge@ff1,??___ftge
  1658  002B40  C08D  F093         	movff	___ftge@ff1+1,??___ftge+1
  1659  002B44  C08E  F094         	movff	___ftge@ff1+2,??___ftge+2
  1660  002B48  0100               	movlb	0	; () banked
  1661  002B4A  1F92               	comf	??___ftge& (0+255),f,b
  1662  002B4C  1F93               	comf	(??___ftge+1)& (0+255),f,b
  1663  002B4E  1F94               	comf	(??___ftge+2)& (0+255),f,b
  1664  002B50  2B92               	incf	??___ftge& (0+255),f,b
  1665  002B52  0E00               	movlw	0
  1666  002B54  2393               	addwfc	(??___ftge+1)& (0+255),f,b
  1667  002B56  2394               	addwfc	(??___ftge+2)& (0+255),f,b
  1668  002B58  0E00               	movlw	0
  1669  002B5A  0100               	movlb	0	; () banked
  1670  002B5C  2592               	addwf	??___ftge& (0+255),w,b
  1671  002B5E  0100               	movlb	0	; () banked
  1672  002B60  6F8C               	movwf	___ftge@ff1& (0+255),b
  1673  002B62  0E00               	movlw	0
  1674  002B64  0100               	movlb	0	; () banked
  1675  002B66  2193               	addwfc	(??___ftge+1)& (0+255),w,b
  1676  002B68  0100               	movlb	0	; () banked
  1677  002B6A  6F8D               	movwf	(___ftge@ff1+1)& (0+255),b
  1678  002B6C  0E80               	movlw	128
  1679  002B6E  0100               	movlb	0	; () banked
  1680  002B70  2194               	addwfc	(??___ftge+2)& (0+255),w,b
  1681  002B72  0100               	movlb	0	; () banked
  1682  002B74  6F8E               	movwf	(___ftge@ff1+2)& (0+255),b
  1683  002B76  D000               	goto	l4916
  1684  002B78                     l4916:
  1685                           
  1686                           ; BSR set to: 0
  1687  002B78  0100               	movlb	0	; () banked
  1688  002B7A  AF91               	btfss	(___ftge@ff2+2)& (0+255),7,b
  1689  002B7C  D01E               	goto	l4920
  1690                           
  1691                           ; BSR set to: 0
  1692  002B7E  C08F  F092         	movff	___ftge@ff2,??___ftge
  1693  002B82  C090  F093         	movff	___ftge@ff2+1,??___ftge+1
  1694  002B86  C091  F094         	movff	___ftge@ff2+2,??___ftge+2
  1695  002B8A  0100               	movlb	0	; () banked
  1696  002B8C  1F92               	comf	??___ftge& (0+255),f,b
  1697  002B8E  1F93               	comf	(??___ftge+1)& (0+255),f,b
  1698  002B90  1F94               	comf	(??___ftge+2)& (0+255),f,b
  1699  002B92  2B92               	incf	??___ftge& (0+255),f,b
  1700  002B94  0E00               	movlw	0
  1701  002B96  2393               	addwfc	(??___ftge+1)& (0+255),f,b
  1702  002B98  2394               	addwfc	(??___ftge+2)& (0+255),f,b
  1703  002B9A  0E00               	movlw	0
  1704  002B9C  0100               	movlb	0	; () banked
  1705  002B9E  2592               	addwf	??___ftge& (0+255),w,b
  1706  002BA0  0100               	movlb	0	; () banked
  1707  002BA2  6F8F               	movwf	___ftge@ff2& (0+255),b
  1708  002BA4  0E00               	movlw	0
  1709  002BA6  0100               	movlb	0	; () banked
  1710  002BA8  2193               	addwfc	(??___ftge+1)& (0+255),w,b
  1711  002BAA  0100               	movlb	0	; () banked
  1712  002BAC  6F90               	movwf	(___ftge@ff2+1)& (0+255),b
  1713  002BAE  0E80               	movlw	128
  1714  002BB0  0100               	movlb	0	; () banked
  1715  002BB2  2194               	addwfc	(??___ftge+2)& (0+255),w,b
  1716  002BB4  0100               	movlb	0	; () banked
  1717  002BB6  6F91               	movwf	(___ftge@ff2+2)& (0+255),b
  1718  002BB8  D000               	goto	l4920
  1719  002BBA                     l4920:
  1720                           
  1721                           ; BSR set to: 0
  1722  002BBA  0E00               	movlw	0
  1723  002BBC  0100               	movlb	0	; () banked
  1724  002BBE  1B8C               	xorwf	___ftge@ff1& (0+255),f,b
  1725  002BC0  0E00               	movlw	0
  1726  002BC2  0100               	movlb	0	; () banked
  1727  002BC4  1B8D               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  1728  002BC6  0E80               	movlw	128
  1729  002BC8  0100               	movlb	0	; () banked
  1730  002BCA  1B8E               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  1731                           
  1732                           ; BSR set to: 0
  1733  002BCC  0E00               	movlw	0
  1734  002BCE  0100               	movlb	0	; () banked
  1735  002BD0  1B8F               	xorwf	___ftge@ff2& (0+255),f,b
  1736  002BD2  0E00               	movlw	0
  1737  002BD4  0100               	movlb	0	; () banked
  1738  002BD6  1B90               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  1739  002BD8  0E80               	movlw	128
  1740  002BDA  0100               	movlb	0	; () banked
  1741  002BDC  1B91               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  1742  002BDE  0100               	movlb	0	; () banked
  1743  002BE0  518F               	movf	___ftge@ff2& (0+255),w,b
  1744  002BE2  0100               	movlb	0	; () banked
  1745  002BE4  5D8C               	subwf	___ftge@ff1& (0+255),w,b
  1746  002BE6  0100               	movlb	0	; () banked
  1747  002BE8  5190               	movf	(___ftge@ff2+1)& (0+255),w,b
  1748  002BEA  0100               	movlb	0	; () banked
  1749  002BEC  598D               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  1750  002BEE  0100               	movlb	0	; () banked
  1751  002BF0  5191               	movf	(___ftge@ff2+2)& (0+255),w,b
  1752  002BF2  0100               	movlb	0	; () banked
  1753  002BF4  598E               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  1754  002BF6  B0D8               	btfsc	status,0,c
  1755  002BF8  D002               	goto	l4926
  1756                           
  1757                           ; BSR set to: 0
  1758  002BFA  90D8               	bcf	status,0,c
  1759  002BFC  0012               	return	
  1760  002BFE                     l4926:
  1761                           
  1762                           ; BSR set to: 0
  1763  002BFE  80D8               	bsf	status,0,c
  1764                           
  1765                           ; BSR set to: 0
  1766  002C00  0012               	return	
  1767                           
  1768                           ; BSR set to: 0
  1769                           
  1770                           ; BSR set to: 0
  1771  002C02  0012               	return		;funcret
  1772  002C04                     __end_of___ftge:
  1773                           	opt stack 0
  1774                           tblptru	equ	0xFF8
  1775                           tblptrh	equ	0xFF7
  1776                           tblptrl	equ	0xFF6
  1777                           tablat	equ	0xFF5
  1778                           postinc0	equ	0xFEE
  1779                           wreg	equ	0xFE8
  1780                           postdec1	equ	0xFE5
  1781                           fsr1h	equ	0xFE2
  1782                           fsr1l	equ	0xFE1
  1783                           status	equ	0xFD8
  1784                           
  1785 ;; *************** function _ReadVoltage *****************
  1786 ;; Defined at:
  1787 ;;		line 58 in file "ADC.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  voltage         3   27[BANK1 ] float 
  1792 ;;  temp            2   30[BANK1 ] unsigned int 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  3   24[BANK1 ] unsigned int 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1802 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;Total ram usage:        8 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:   11
  1809 ;; This function calls:
  1810 ;;		_InternalADC_Read
  1811 ;;		_VoltageDividerOFF
  1812 ;;		_VoltageDividerON
  1813 ;;		___ftdiv
  1814 ;;		___ftmul
  1815 ;;		___lwtoft
  1816 ;;		_delayUS
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text2
  1823  002F1E                     __ptext2:
  1824                           	opt stack 0
  1825  002F1E                     _ReadVoltage:
  1826                           	opt stack 19
  1827                           
  1828                           ;ADC.c: 60: unsigned int temp;
  1829                           ;ADC.c: 61: double voltage;
  1830                           ;ADC.c: 63: VoltageDividerON();
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;incstack = 0
  1834  002F1E  ECD6  F01E         	call	_VoltageDividerON	;wreg free
  1835                           
  1836                           ;ADC.c: 64: delayUS(5);
  1837  002F22  0E05               	movlw	5
  1838  002F24  0100               	movlb	0	; () banked
  1839  002F26  6F8C               	movwf	delayUS@US& (0+255),b
  1840  002F28  0E00               	movlw	0
  1841  002F2A  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  1842  002F2C  0E00               	movlw	0
  1843  002F2E  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  1844  002F30  0E00               	movlw	0
  1845  002F32  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  1846  002F34  ECC2  F01A         	call	_delayUS	;wreg free
  1847                           
  1848                           ;ADC.c: 65: if(InternalADC_Read(0, &temp))
  1849  002F38  0EE4               	movlw	low ReadVoltage@temp
  1850  002F3A  0100               	movlb	0	; () banked
  1851  002F3C  6F96               	movwf	InternalADC_Read@ADCcounts& (0+255),b
  1852  002F3E  0E01               	movlw	high ReadVoltage@temp
  1853  002F40  0100               	movlb	0	; () banked
  1854  002F42  6F97               	movwf	(InternalADC_Read@ADCcounts+1)& (0+255),b
  1855  002F44  0E00               	movlw	0
  1856  002F46  ECE1  F018         	call	_InternalADC_Read
  1857  002F4A  0900               	iorlw	0
  1858  002F4C  B4D8               	btfsc	status,2,c
  1859  002F4E  D02F               	goto	l6470
  1860                           
  1861                           ;ADC.c: 66: {
  1862                           ;ADC.c: 67: voltage = ((double)temp / 1024.0) * 11 * 3.3;
  1863  002F50  0E00               	movlw	0
  1864  002F52  0100               	movlb	0	; () banked
  1865  002F54  6F9A               	movwf	___ftdiv@f2& (0+255),b
  1866  002F56  0E80               	movlw	128
  1867  002F58  0100               	movlb	0	; () banked
  1868  002F5A  6F9B               	movwf	(___ftdiv@f2+1)& (0+255),b
  1869  002F5C  0E44               	movlw	68
  1870  002F5E  0100               	movlb	0	; () banked
  1871  002F60  6F9C               	movwf	(___ftdiv@f2+2)& (0+255),b
  1872  002F62  C1E4  F094         	movff	ReadVoltage@temp,___lwtoft@c
  1873  002F66  C1E5  F095         	movff	ReadVoltage@temp+1,___lwtoft@c+1
  1874  002F6A  EC98  F01D         	call	___lwtoft	;wreg free
  1875  002F6E  C094  F097         	movff	?___lwtoft,___ftdiv@f1
  1876  002F72  C095  F098         	movff	?___lwtoft+1,___ftdiv@f1+1
  1877  002F76  C096  F099         	movff	?___lwtoft+2,___ftdiv@f1+2
  1878  002F7A  EC93  F011         	call	___ftdiv	;wreg free
  1879  002F7E  C097  F1CF         	movff	?___ftdiv,___ftmul@f1
  1880  002F82  C098  F1D0         	movff	?___ftdiv+1,___ftmul@f1+1
  1881  002F86  C099  F1D1         	movff	?___ftdiv+2,___ftmul@f1+2
  1882  002F8A  0E33               	movlw	51
  1883  002F8C  0101               	movlb	1	; () banked
  1884  002F8E  6FD2               	movwf	___ftmul@f2& (0+255),b
  1885  002F90  0E11               	movlw	17
  1886  002F92  0101               	movlb	1	; () banked
  1887  002F94  6FD3               	movwf	(___ftmul@f2+1)& (0+255),b
  1888  002F96  0E42               	movlw	66
  1889  002F98  0101               	movlb	1	; () banked
  1890  002F9A  6FD4               	movwf	(___ftmul@f2+2)& (0+255),b
  1891  002F9C  ECDD  F010         	call	___ftmul	;wreg free
  1892  002FA0  C1CF  F1E1         	movff	?___ftmul,ReadVoltage@voltage
  1893  002FA4  C1D0  F1E2         	movff	?___ftmul+1,ReadVoltage@voltage+1
  1894  002FA8  C1D1  F1E3         	movff	?___ftmul+2,ReadVoltage@voltage+2
  1895                           
  1896                           ;ADC.c: 68: }
  1897  002FAC  D00A               	goto	l6472
  1898  002FAE                     l6470:
  1899                           
  1900                           ;ADC.c: 69: else
  1901                           ;ADC.c: 70: {
  1902                           ;ADC.c: 71: voltage = 0.0;
  1903  002FAE  0E00               	movlw	0
  1904  002FB0  0101               	movlb	1	; () banked
  1905  002FB2  6FE1               	movwf	ReadVoltage@voltage& (0+255),b
  1906  002FB4  0E00               	movlw	0
  1907  002FB6  0101               	movlb	1	; () banked
  1908  002FB8  6FE2               	movwf	(ReadVoltage@voltage+1)& (0+255),b
  1909  002FBA  0E00               	movlw	0
  1910  002FBC  0101               	movlb	1	; () banked
  1911  002FBE  6FE3               	movwf	(ReadVoltage@voltage+2)& (0+255),b
  1912  002FC0  D000               	goto	l6472
  1913  002FC2                     l6472:
  1914                           
  1915                           ;ADC.c: 72: }
  1916                           ;ADC.c: 73: VoltageDividerOFF();
  1917  002FC2  ECD9  F01E         	call	_VoltageDividerOFF	;wreg free
  1918                           
  1919                           ;ADC.c: 74: return voltage;
  1920  002FC6  C1E1  F1DE         	movff	ReadVoltage@voltage,?_ReadVoltage
  1921  002FCA  C1E2  F1DF         	movff	ReadVoltage@voltage+1,?_ReadVoltage+1
  1922  002FCE  C1E3  F1E0         	movff	ReadVoltage@voltage+2,?_ReadVoltage+2
  1923  002FD2  0012               	return	
  1924  002FD4  0012               	return		;funcret
  1925  002FD6                     __end_of_ReadVoltage:
  1926                           	opt stack 0
  1927                           tblptru	equ	0xFF8
  1928                           tblptrh	equ	0xFF7
  1929                           tblptrl	equ	0xFF6
  1930                           tablat	equ	0xFF5
  1931                           postinc0	equ	0xFEE
  1932                           wreg	equ	0xFE8
  1933                           postdec1	equ	0xFE5
  1934                           fsr1h	equ	0xFE2
  1935                           fsr1l	equ	0xFE1
  1936                           status	equ	0xFD8
  1937                           
  1938 ;; *************** function ___lwtoft *****************
  1939 ;; Defined at:
  1940 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  c               2   52[BANK0 ] unsigned int 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;		None
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  3   52[BANK0 ] float 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1954 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;Total ram usage:        3 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:   10
  1961 ;; This function calls:
  1962 ;;		___ftpack
  1963 ;; This function is called by:
  1964 ;;		_ReadVoltage
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text3
  1969  003B30                     __ptext3:
  1970                           	opt stack 0
  1971  003B30                     ___lwtoft:
  1972                           	opt stack 19
  1973                           
  1974                           ;incstack = 0
  1975  003B30  C094  F08C         	movff	___lwtoft@c,___ftpack@arg
  1976  003B34  C095  F08D         	movff	___lwtoft@c+1,___ftpack@arg+1
  1977  003B38  0100               	movlb	0	; () banked
  1978  003B3A  6B8E               	clrf	(___ftpack@arg+2)& (0+255),b
  1979  003B3C  0E8E               	movlw	142
  1980  003B3E  0100               	movlb	0	; () banked
  1981  003B40  6F8F               	movwf	___ftpack@exp& (0+255),b
  1982  003B42  0E00               	movlw	0
  1983  003B44  0100               	movlb	0	; () banked
  1984  003B46  6F90               	movwf	___ftpack@sign& (0+255),b
  1985  003B48  EC88  F013         	call	___ftpack	;wreg free
  1986  003B4C  C08C  F094         	movff	?___ftpack,?___lwtoft
  1987  003B50  C08D  F095         	movff	?___ftpack+1,?___lwtoft+1
  1988  003B54  C08E  F096         	movff	?___ftpack+2,?___lwtoft+2
  1989  003B58  0012               	return	
  1990  003B5A  0012               	return		;funcret
  1991  003B5C                     __end_of___lwtoft:
  1992                           	opt stack 0
  1993                           tblptru	equ	0xFF8
  1994                           tblptrh	equ	0xFF7
  1995                           tblptrl	equ	0xFF6
  1996                           tablat	equ	0xFF5
  1997                           postinc0	equ	0xFEE
  1998                           wreg	equ	0xFE8
  1999                           postdec1	equ	0xFE5
  2000                           fsr1h	equ	0xFE2
  2001                           fsr1l	equ	0xFE1
  2002                           status	equ	0xFD8
  2003                           
  2004 ;; *************** function ___ftmul *****************
  2005 ;; Defined at:
  2006 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  f1              3    9[BANK1 ] float 
  2009 ;;  f2              3   12[BANK1 ] float 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  f3_as_produc    3   19[BANK1 ] unsigned um
  2012 ;;  sign            1   23[BANK1 ] unsigned char 
  2013 ;;  cntr            1   22[BANK1 ] unsigned char 
  2014 ;;  exp             1   18[BANK1 ] unsigned char 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  3    9[BANK1 ] float 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2024 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;Total ram usage:       15 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:   10
  2031 ;; This function calls:
  2032 ;;		___ftpack
  2033 ;; This function is called by:
  2034 ;;		_ReadVoltage
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text4
  2039  0021BA                     __ptext4:
  2040                           	opt stack 0
  2041  0021BA                     ___ftmul:
  2042                           	opt stack 19
  2043                           
  2044                           ;incstack = 0
  2045  0021BA  C1D1  F1D5         	movff	___ftmul@f1+2,??___ftmul
  2046  0021BE  0101               	movlb	1	; () banked
  2047  0021C0  6BD6               	clrf	(??___ftmul+1)& (0+255),b
  2048  0021C2  6BD7               	clrf	(??___ftmul+2)& (0+255),b
  2049  0021C4  0101               	movlb	1	; () banked
  2050  0021C6  35D0               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  2051  0021C8  0101               	movlb	1	; () banked
  2052  0021CA  37D5               	rlcf	??___ftmul& (0+255),f,b
  2053  0021CC  E301               	bnc	u6691
  2054  0021CE  81D6               	bsf	(??___ftmul+1)& (0+255),0,b
  2055  0021D0                     u6691:
  2056  0021D0  0101               	movlb	1	; () banked
  2057  0021D2  51D5               	movf	??___ftmul& (0+255),w,b
  2058  0021D4  0101               	movlb	1	; () banked
  2059  0021D6  6FD8               	movwf	___ftmul@exp& (0+255),b
  2060  0021D8  0101               	movlb	1	; () banked
  2061  0021DA  51D8               	movf	___ftmul@exp& (0+255),w,b
  2062  0021DC  A4D8               	btfss	status,2,c
  2063  0021DE  D00A               	goto	l6360
  2064                           
  2065                           ; BSR set to: 1
  2066  0021E0  0E00               	movlw	0
  2067  0021E2  0101               	movlb	1	; () banked
  2068  0021E4  6FCF               	movwf	?___ftmul& (0+255),b
  2069  0021E6  0E00               	movlw	0
  2070  0021E8  0101               	movlb	1	; () banked
  2071  0021EA  6FD0               	movwf	(?___ftmul+1)& (0+255),b
  2072  0021EC  0E00               	movlw	0
  2073  0021EE  0101               	movlb	1	; () banked
  2074  0021F0  6FD1               	movwf	(?___ftmul+2)& (0+255),b
  2075                           
  2076                           ; BSR set to: 1
  2077  0021F2  0012               	return	
  2078  0021F4                     l6360:
  2079                           
  2080                           ; BSR set to: 1
  2081  0021F4  C1D4  F1D5         	movff	___ftmul@f2+2,??___ftmul
  2082  0021F8  0101               	movlb	1	; () banked
  2083  0021FA  6BD6               	clrf	(??___ftmul+1)& (0+255),b
  2084  0021FC  6BD7               	clrf	(??___ftmul+2)& (0+255),b
  2085  0021FE  0101               	movlb	1	; () banked
  2086  002200  35D3               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  2087  002202  0101               	movlb	1	; () banked
  2088  002204  37D5               	rlcf	??___ftmul& (0+255),f,b
  2089  002206  E301               	bnc	u6711
  2090  002208  81D6               	bsf	(??___ftmul+1)& (0+255),0,b
  2091  00220A                     u6711:
  2092  00220A  0101               	movlb	1	; () banked
  2093  00220C  51D5               	movf	??___ftmul& (0+255),w,b
  2094  00220E  0101               	movlb	1	; () banked
  2095  002210  6FDD               	movwf	___ftmul@sign& (0+255),b
  2096  002212  0101               	movlb	1	; () banked
  2097  002214  51DD               	movf	___ftmul@sign& (0+255),w,b
  2098  002216  A4D8               	btfss	status,2,c
  2099  002218  D00A               	goto	l6366
  2100                           
  2101                           ; BSR set to: 1
  2102  00221A  0E00               	movlw	0
  2103  00221C  0101               	movlb	1	; () banked
  2104  00221E  6FCF               	movwf	?___ftmul& (0+255),b
  2105  002220  0E00               	movlw	0
  2106  002222  0101               	movlb	1	; () banked
  2107  002224  6FD0               	movwf	(?___ftmul+1)& (0+255),b
  2108  002226  0E00               	movlw	0
  2109  002228  0101               	movlb	1	; () banked
  2110  00222A  6FD1               	movwf	(?___ftmul+2)& (0+255),b
  2111                           
  2112                           ; BSR set to: 1
  2113  00222C  0012               	return	
  2114  00222E                     l6366:
  2115                           
  2116                           ; BSR set to: 1
  2117  00222E  0101               	movlb	1	; () banked
  2118  002230  51DD               	movf	___ftmul@sign& (0+255),w,b
  2119  002232  0F7B               	addlw	123
  2120  002234  0101               	movlb	1	; () banked
  2121  002236  27D8               	addwf	___ftmul@exp& (0+255),f,b
  2122                           
  2123                           ; BSR set to: 1
  2124  002238  C1D1  F1DD         	movff	___ftmul@f1+2,___ftmul@sign
  2125  00223C  0101               	movlb	1	; () banked
  2126  00223E  51D4               	movf	(___ftmul@f2+2)& (0+255),w,b
  2127  002240  0101               	movlb	1	; () banked
  2128  002242  1BDD               	xorwf	___ftmul@sign& (0+255),f,b
  2129  002244  0E80               	movlw	128
  2130  002246  0101               	movlb	1	; () banked
  2131  002248  17DD               	andwf	___ftmul@sign& (0+255),f,b
  2132                           
  2133                           ; BSR set to: 1
  2134  00224A  0101               	movlb	1	; () banked
  2135  00224C  8FD0               	bsf	(___ftmul@f1+1)& (0+255),7,b
  2136                           
  2137                           ; BSR set to: 1
  2138  00224E  0101               	movlb	1	; () banked
  2139  002250  8FD3               	bsf	(___ftmul@f2+1)& (0+255),7,b
  2140                           
  2141                           ; BSR set to: 1
  2142  002252  0EFF               	movlw	255
  2143  002254  0101               	movlb	1	; () banked
  2144  002256  17D2               	andwf	___ftmul@f2& (0+255),f,b
  2145  002258  0EFF               	movlw	255
  2146  00225A  0101               	movlb	1	; () banked
  2147  00225C  17D3               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2148  00225E  0E00               	movlw	0
  2149  002260  0101               	movlb	1	; () banked
  2150  002262  17D4               	andwf	(___ftmul@f2+2)& (0+255),f,b
  2151                           
  2152                           ; BSR set to: 1
  2153  002264  0E00               	movlw	0
  2154  002266  0101               	movlb	1	; () banked
  2155  002268  6FD9               	movwf	___ftmul@f3_as_product& (0+255),b
  2156  00226A  0E00               	movlw	0
  2157  00226C  0101               	movlb	1	; () banked
  2158  00226E  6FDA               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2159  002270  0E00               	movlw	0
  2160  002272  0101               	movlb	1	; () banked
  2161  002274  6FDB               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2162                           
  2163                           ; BSR set to: 1
  2164  002276  0E07               	movlw	7
  2165  002278  0101               	movlb	1	; () banked
  2166  00227A  6FDC               	movwf	___ftmul@cntr& (0+255),b
  2167  00227C  D000               	goto	l6380
  2168  00227E                     l6380:
  2169                           
  2170                           ; BSR set to: 1
  2171  00227E  0101               	movlb	1	; () banked
  2172  002280  A1CF               	btfss	___ftmul@f1& (0+255),0,b
  2173  002282  D00D               	goto	l6384
  2174                           
  2175                           ; BSR set to: 1
  2176  002284  0101               	movlb	1	; () banked
  2177  002286  51D2               	movf	___ftmul@f2& (0+255),w,b
  2178  002288  0101               	movlb	1	; () banked
  2179  00228A  27D9               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2180  00228C  0101               	movlb	1	; () banked
  2181  00228E  51D3               	movf	(___ftmul@f2+1)& (0+255),w,b
  2182  002290  0101               	movlb	1	; () banked
  2183  002292  23DA               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2184  002294  0101               	movlb	1	; () banked
  2185  002296  51D4               	movf	(___ftmul@f2+2)& (0+255),w,b
  2186  002298  0101               	movlb	1	; () banked
  2187  00229A  23DB               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2188  00229C  D000               	goto	l6384
  2189  00229E                     l6384:
  2190                           
  2191                           ; BSR set to: 1
  2192  00229E  0101               	movlb	1	; () banked
  2193  0022A0  90D8               	bcf	status,0,c
  2194  0022A2  33D1               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2195  0022A4  33D0               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2196  0022A6  33CF               	rrcf	___ftmul@f1& (0+255),f,b
  2197  0022A8  0101               	movlb	1	; () banked
  2198  0022AA  90D8               	bcf	status,0,c
  2199  0022AC  37D2               	rlcf	___ftmul@f2& (0+255),f,b
  2200  0022AE  37D3               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  2201  0022B0  37D4               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2202                           
  2203                           ; BSR set to: 1
  2204  0022B2  0101               	movlb	1	; () banked
  2205  0022B4  2FDC               	decfsz	___ftmul@cntr& (0+255),f,b
  2206  0022B6  D7E3               	goto	l6380
  2207  0022B8  D000               	goto	l6388
  2208  0022BA                     l6388:
  2209                           
  2210                           ; BSR set to: 1
  2211  0022BA  0E09               	movlw	9
  2212  0022BC  0101               	movlb	1	; () banked
  2213  0022BE  6FDC               	movwf	___ftmul@cntr& (0+255),b
  2214  0022C0  D000               	goto	l6390
  2215  0022C2                     l6390:
  2216                           
  2217                           ; BSR set to: 1
  2218  0022C2  0101               	movlb	1	; () banked
  2219  0022C4  A1CF               	btfss	___ftmul@f1& (0+255),0,b
  2220  0022C6  D00D               	goto	l6394
  2221                           
  2222                           ; BSR set to: 1
  2223  0022C8  0101               	movlb	1	; () banked
  2224  0022CA  51D2               	movf	___ftmul@f2& (0+255),w,b
  2225  0022CC  0101               	movlb	1	; () banked
  2226  0022CE  27D9               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2227  0022D0  0101               	movlb	1	; () banked
  2228  0022D2  51D3               	movf	(___ftmul@f2+1)& (0+255),w,b
  2229  0022D4  0101               	movlb	1	; () banked
  2230  0022D6  23DA               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2231  0022D8  0101               	movlb	1	; () banked
  2232  0022DA  51D4               	movf	(___ftmul@f2+2)& (0+255),w,b
  2233  0022DC  0101               	movlb	1	; () banked
  2234  0022DE  23DB               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2235  0022E0  D000               	goto	l6394
  2236  0022E2                     l6394:
  2237                           
  2238                           ; BSR set to: 1
  2239  0022E2  0101               	movlb	1	; () banked
  2240  0022E4  90D8               	bcf	status,0,c
  2241  0022E6  33D1               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2242  0022E8  33D0               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2243  0022EA  33CF               	rrcf	___ftmul@f1& (0+255),f,b
  2244  0022EC  0101               	movlb	1	; () banked
  2245  0022EE  90D8               	bcf	status,0,c
  2246  0022F0  33DB               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2247  0022F2  33DA               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2248  0022F4  33D9               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2249                           
  2250                           ; BSR set to: 1
  2251  0022F6  0101               	movlb	1	; () banked
  2252  0022F8  2FDC               	decfsz	___ftmul@cntr& (0+255),f,b
  2253  0022FA  D7E3               	goto	l6390
  2254  0022FC  D000               	goto	l6398
  2255  0022FE                     l6398:
  2256                           
  2257                           ; BSR set to: 1
  2258  0022FE  C1D9  F08C         	movff	___ftmul@f3_as_product,___ftpack@arg
  2259  002302  C1DA  F08D         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2260  002306  C1DB  F08E         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2261  00230A  C1D8  F08F         	movff	___ftmul@exp,___ftpack@exp
  2262  00230E  C1DD  F090         	movff	___ftmul@sign,___ftpack@sign
  2263  002312  EC88  F013         	call	___ftpack	;wreg free
  2264  002316  C08C  F1CF         	movff	?___ftpack,?___ftmul
  2265  00231A  C08D  F1D0         	movff	?___ftpack+1,?___ftmul+1
  2266  00231E  C08E  F1D1         	movff	?___ftpack+2,?___ftmul+2
  2267  002322  0012               	return	
  2268  002324  0012               	return		;funcret
  2269  002326                     __end_of___ftmul:
  2270                           	opt stack 0
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           postdec1	equ	0xFE5
  2278                           fsr1h	equ	0xFE2
  2279                           fsr1l	equ	0xFE1
  2280                           status	equ	0xFD8
  2281                           
  2282 ;; *************** function ___ftdiv *****************
  2283 ;; Defined at:
  2284 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  f1              3   55[BANK0 ] float 
  2287 ;;  f2              3   58[BANK0 ] float 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  f3              3    4[BANK1 ] float 
  2290 ;;  sign            1    8[BANK1 ] unsigned char 
  2291 ;;  exp             1    7[BANK1 ] unsigned char 
  2292 ;;  cntr            1    3[BANK1 ] unsigned char 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  3   55[BANK0 ] float 
  2295 ;; Registers used:
  2296 ;;		wreg, status,2, status,0, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2302 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Totals:         0       6       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;Total ram usage:       15 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:   10
  2309 ;; This function calls:
  2310 ;;		___ftpack
  2311 ;; This function is called by:
  2312 ;;		_ReadVoltage
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text5
  2317  002326                     __ptext5:
  2318                           	opt stack 0
  2319  002326                     ___ftdiv:
  2320                           	opt stack 19
  2321                           
  2322                           ;incstack = 0
  2323  002326  C099  F1C6         	movff	___ftdiv@f1+2,??___ftdiv
  2324  00232A  0101               	movlb	1	; () banked
  2325  00232C  6BC7               	clrf	(??___ftdiv+1)& (0+255),b
  2326  00232E  6BC8               	clrf	(??___ftdiv+2)& (0+255),b
  2327  002330  0100               	movlb	0	; () banked
  2328  002332  3598               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2329  002334  0101               	movlb	1	; () banked
  2330  002336  37C6               	rlcf	??___ftdiv& (0+255),f,b
  2331  002338  E301               	bnc	u6641
  2332  00233A  81C7               	bsf	(??___ftdiv+1)& (0+255),0,b
  2333  00233C                     u6641:
  2334  00233C  0101               	movlb	1	; () banked
  2335  00233E  51C6               	movf	??___ftdiv& (0+255),w,b
  2336  002340  0101               	movlb	1	; () banked
  2337  002342  6FCD               	movwf	___ftdiv@exp& (0+255),b
  2338  002344  0101               	movlb	1	; () banked
  2339  002346  51CD               	movf	___ftdiv@exp& (0+255),w,b
  2340  002348  A4D8               	btfss	status,2,c
  2341  00234A  D00A               	goto	l6314
  2342                           
  2343                           ; BSR set to: 1
  2344  00234C  0E00               	movlw	0
  2345  00234E  0100               	movlb	0	; () banked
  2346  002350  6F97               	movwf	?___ftdiv& (0+255),b
  2347  002352  0E00               	movlw	0
  2348  002354  0100               	movlb	0	; () banked
  2349  002356  6F98               	movwf	(?___ftdiv+1)& (0+255),b
  2350  002358  0E00               	movlw	0
  2351  00235A  0100               	movlb	0	; () banked
  2352  00235C  6F99               	movwf	(?___ftdiv+2)& (0+255),b
  2353                           
  2354                           ; BSR set to: 0
  2355  00235E  0012               	return	
  2356  002360                     l6314:
  2357  002360  C09C  F1C6         	movff	___ftdiv@f2+2,??___ftdiv
  2358  002364  0101               	movlb	1	; () banked
  2359  002366  6BC7               	clrf	(??___ftdiv+1)& (0+255),b
  2360  002368  6BC8               	clrf	(??___ftdiv+2)& (0+255),b
  2361  00236A  0100               	movlb	0	; () banked
  2362  00236C  359B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2363  00236E  0101               	movlb	1	; () banked
  2364  002370  37C6               	rlcf	??___ftdiv& (0+255),f,b
  2365  002372  E301               	bnc	u6661
  2366  002374  81C7               	bsf	(??___ftdiv+1)& (0+255),0,b
  2367  002376                     u6661:
  2368  002376  0101               	movlb	1	; () banked
  2369  002378  51C6               	movf	??___ftdiv& (0+255),w,b
  2370  00237A  0101               	movlb	1	; () banked
  2371  00237C  6FCE               	movwf	___ftdiv@sign& (0+255),b
  2372  00237E  0101               	movlb	1	; () banked
  2373  002380  51CE               	movf	___ftdiv@sign& (0+255),w,b
  2374  002382  A4D8               	btfss	status,2,c
  2375  002384  D00A               	goto	l6320
  2376                           
  2377                           ; BSR set to: 1
  2378  002386  0E00               	movlw	0
  2379  002388  0100               	movlb	0	; () banked
  2380  00238A  6F97               	movwf	?___ftdiv& (0+255),b
  2381  00238C  0E00               	movlw	0
  2382  00238E  0100               	movlb	0	; () banked
  2383  002390  6F98               	movwf	(?___ftdiv+1)& (0+255),b
  2384  002392  0E00               	movlw	0
  2385  002394  0100               	movlb	0	; () banked
  2386  002396  6F99               	movwf	(?___ftdiv+2)& (0+255),b
  2387                           
  2388                           ; BSR set to: 0
  2389  002398  0012               	return	
  2390  00239A                     l6320:
  2391  00239A  0E00               	movlw	0
  2392  00239C  0101               	movlb	1	; () banked
  2393  00239E  6FCA               	movwf	___ftdiv@f3& (0+255),b
  2394  0023A0  0E00               	movlw	0
  2395  0023A2  0101               	movlb	1	; () banked
  2396  0023A4  6FCB               	movwf	(___ftdiv@f3+1)& (0+255),b
  2397  0023A6  0E00               	movlw	0
  2398  0023A8  0101               	movlb	1	; () banked
  2399  0023AA  6FCC               	movwf	(___ftdiv@f3+2)& (0+255),b
  2400                           
  2401                           ; BSR set to: 1
  2402  0023AC  0101               	movlb	1	; () banked
  2403  0023AE  51CE               	movf	___ftdiv@sign& (0+255),w,b
  2404  0023B0  0F89               	addlw	137
  2405  0023B2  0101               	movlb	1	; () banked
  2406  0023B4  5FCD               	subwf	___ftdiv@exp& (0+255),f,b
  2407                           
  2408                           ; BSR set to: 1
  2409  0023B6  C099  F1CE         	movff	___ftdiv@f1+2,___ftdiv@sign
  2410                           
  2411                           ; BSR set to: 1
  2412  0023BA  0100               	movlb	0	; () banked
  2413  0023BC  519C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2414  0023BE  0101               	movlb	1	; () banked
  2415  0023C0  1BCE               	xorwf	___ftdiv@sign& (0+255),f,b
  2416                           
  2417                           ; BSR set to: 1
  2418  0023C2  0E80               	movlw	128
  2419  0023C4  0101               	movlb	1	; () banked
  2420  0023C6  17CE               	andwf	___ftdiv@sign& (0+255),f,b
  2421                           
  2422                           ; BSR set to: 1
  2423  0023C8  0100               	movlb	0	; () banked
  2424  0023CA  8F98               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2425                           
  2426                           ; BSR set to: 0
  2427  0023CC  0EFF               	movlw	255
  2428  0023CE  0100               	movlb	0	; () banked
  2429  0023D0  1797               	andwf	___ftdiv@f1& (0+255),f,b
  2430  0023D2  0EFF               	movlw	255
  2431  0023D4  0100               	movlb	0	; () banked
  2432  0023D6  1798               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2433  0023D8  0E00               	movlw	0
  2434  0023DA  0100               	movlb	0	; () banked
  2435  0023DC  1799               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2436                           
  2437                           ; BSR set to: 0
  2438  0023DE  0100               	movlb	0	; () banked
  2439  0023E0  8F9B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2440                           
  2441                           ; BSR set to: 0
  2442  0023E2  0EFF               	movlw	255
  2443  0023E4  0100               	movlb	0	; () banked
  2444  0023E6  179A               	andwf	___ftdiv@f2& (0+255),f,b
  2445  0023E8  0EFF               	movlw	255
  2446  0023EA  0100               	movlb	0	; () banked
  2447  0023EC  179B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2448  0023EE  0E00               	movlw	0
  2449  0023F0  0100               	movlb	0	; () banked
  2450  0023F2  179C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2451                           
  2452                           ; BSR set to: 0
  2453  0023F4  0E18               	movlw	24
  2454  0023F6  0101               	movlb	1	; () banked
  2455  0023F8  6FC9               	movwf	___ftdiv@cntr& (0+255),b
  2456  0023FA  D000               	goto	l6340
  2457  0023FC                     l6340:
  2458                           
  2459                           ; BSR set to: 1
  2460  0023FC  0101               	movlb	1	; () banked
  2461  0023FE  90D8               	bcf	status,0,c
  2462  002400  37CA               	rlcf	___ftdiv@f3& (0+255),f,b
  2463  002402  37CB               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2464  002404  37CC               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2465                           
  2466                           ; BSR set to: 1
  2467  002406  0100               	movlb	0	; () banked
  2468  002408  519A               	movf	___ftdiv@f2& (0+255),w,b
  2469  00240A  0100               	movlb	0	; () banked
  2470  00240C  5D97               	subwf	___ftdiv@f1& (0+255),w,b
  2471  00240E  0100               	movlb	0	; () banked
  2472  002410  519B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2473  002412  0100               	movlb	0	; () banked
  2474  002414  5998               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2475  002416  0100               	movlb	0	; () banked
  2476  002418  519C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2477  00241A  0100               	movlb	0	; () banked
  2478  00241C  5999               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2479  00241E  A0D8               	btfss	status,0,c
  2480  002420  D00E               	goto	l1278
  2481                           
  2482                           ; BSR set to: 0
  2483  002422  0100               	movlb	0	; () banked
  2484  002424  519A               	movf	___ftdiv@f2& (0+255),w,b
  2485  002426  0100               	movlb	0	; () banked
  2486  002428  5F97               	subwf	___ftdiv@f1& (0+255),f,b
  2487  00242A  0100               	movlb	0	; () banked
  2488  00242C  519B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2489  00242E  0100               	movlb	0	; () banked
  2490  002430  5B98               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2491  002432  0100               	movlb	0	; () banked
  2492  002434  519C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2493  002436  0100               	movlb	0	; () banked
  2494  002438  5B99               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2495                           
  2496                           ; BSR set to: 0
  2497  00243A  0101               	movlb	1	; () banked
  2498  00243C  81CA               	bsf	___ftdiv@f3& (0+255),0,b
  2499  00243E                     l1278:
  2500  00243E  0100               	movlb	0	; () banked
  2501  002440  90D8               	bcf	status,0,c
  2502  002442  3797               	rlcf	___ftdiv@f1& (0+255),f,b
  2503  002444  3798               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2504  002446  3799               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2505                           
  2506                           ; BSR set to: 0
  2507  002448  0101               	movlb	1	; () banked
  2508  00244A  2FC9               	decfsz	___ftdiv@cntr& (0+255),f,b
  2509  00244C  D7D7               	goto	l6340
  2510  00244E  D000               	goto	l6350
  2511  002450                     l6350:
  2512                           
  2513                           ; BSR set to: 1
  2514  002450  C1CA  F08C         	movff	___ftdiv@f3,___ftpack@arg
  2515  002454  C1CB  F08D         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2516  002458  C1CC  F08E         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2517  00245C  C1CD  F08F         	movff	___ftdiv@exp,___ftpack@exp
  2518  002460  C1CE  F090         	movff	___ftdiv@sign,___ftpack@sign
  2519  002464  EC88  F013         	call	___ftpack	;wreg free
  2520  002468  C08C  F097         	movff	?___ftpack,?___ftdiv
  2521  00246C  C08D  F098         	movff	?___ftpack+1,?___ftdiv+1
  2522  002470  C08E  F099         	movff	?___ftpack+2,?___ftdiv+2
  2523  002474  0012               	return	
  2524  002476  0012               	return		;funcret
  2525  002478                     __end_of___ftdiv:
  2526                           	opt stack 0
  2527                           tblptru	equ	0xFF8
  2528                           tblptrh	equ	0xFF7
  2529                           tblptrl	equ	0xFF6
  2530                           tablat	equ	0xFF5
  2531                           postinc0	equ	0xFEE
  2532                           wreg	equ	0xFE8
  2533                           postdec1	equ	0xFE5
  2534                           fsr1h	equ	0xFE2
  2535                           fsr1l	equ	0xFE1
  2536                           status	equ	0xFD8
  2537                           
  2538 ;; *************** function _VoltageDividerON *****************
  2539 ;; Defined at:
  2540 ;;		line 146 in file "ADC.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;		None               void
  2547 ;; Registers used:
  2548 ;;		status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;Total ram usage:        0 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    9
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_ReadVoltage
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text6
  2569  003DAC                     __ptext6:
  2570                           	opt stack 0
  2571  003DAC                     _VoltageDividerON:
  2572                           	opt stack 20
  2573                           
  2574                           ;ADC.c: 148: TRISBbits.TRISB5 = 0;
  2575                           
  2576                           ;incstack = 0
  2577  003DAC  9A93               	bcf	3987,5,c	;volatile
  2578                           
  2579                           ;ADC.c: 149: LATB &= ~0x20;
  2580  003DAE  9A8A               	bcf	3978,5,c	;volatile
  2581  003DB0  0012               	return		;funcret
  2582  003DB2                     __end_of_VoltageDividerON:
  2583                           	opt stack 0
  2584                           tblptru	equ	0xFF8
  2585                           tblptrh	equ	0xFF7
  2586                           tblptrl	equ	0xFF6
  2587                           tablat	equ	0xFF5
  2588                           postinc0	equ	0xFEE
  2589                           wreg	equ	0xFE8
  2590                           postdec1	equ	0xFE5
  2591                           fsr1h	equ	0xFE2
  2592                           fsr1l	equ	0xFE1
  2593                           status	equ	0xFD8
  2594                           
  2595 ;; *************** function _VoltageDividerOFF *****************
  2596 ;; Defined at:
  2597 ;;		line 157 in file "ADC.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;		None               void
  2604 ;; Registers used:
  2605 ;;		None
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;Total ram usage:        0 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; Hardware stack levels required when called:    9
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_ReadVoltage
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text7
  2626  003DB2                     __ptext7:
  2627                           	opt stack 0
  2628  003DB2                     _VoltageDividerOFF:
  2629                           	opt stack 20
  2630                           
  2631                           ;ADC.c: 159: TRISBbits.TRISB5 = 1;
  2632                           
  2633                           ;incstack = 0
  2634  003DB2  8A93               	bsf	3987,5,c	;volatile
  2635  003DB4  0012               	return		;funcret
  2636  003DB6                     __end_of_VoltageDividerOFF:
  2637                           	opt stack 0
  2638                           tblptru	equ	0xFF8
  2639                           tblptrh	equ	0xFF7
  2640                           tblptrl	equ	0xFF6
  2641                           tablat	equ	0xFF5
  2642                           postinc0	equ	0xFEE
  2643                           wreg	equ	0xFE8
  2644                           postdec1	equ	0xFE5
  2645                           fsr1h	equ	0xFE2
  2646                           fsr1l	equ	0xFE1
  2647                           status	equ	0xFD8
  2648                           
  2649 ;; *************** function _InternalADC_Read *****************
  2650 ;; Defined at:
  2651 ;;		line 82 in file "ADC.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  channel         1    wreg     unsigned char 
  2654 ;;  ADCcounts       2   54[BANK0 ] PTR unsigned int 
  2655 ;;		 -> ReadVoltage@temp(2), 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  channel         1   59[BANK0 ] unsigned char 
  2658 ;;  AnaChanSel      1   58[BANK0 ] unsigned char 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      unsigned char 
  2661 ;; Registers used:
  2662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2668 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;Total ram usage:        6 bytes
  2673 ;; Hardware stack levels used:    1
  2674 ;; Hardware stack levels required when called:   10
  2675 ;; This function calls:
  2676 ;;		_delayUS
  2677 ;; This function is called by:
  2678 ;;		_ReadVoltage
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text8
  2683  0031C2                     __ptext8:
  2684                           	opt stack 0
  2685  0031C2                     _InternalADC_Read:
  2686                           	opt stack 19
  2687                           
  2688                           ;incstack = 0
  2689                           ;InternalADC_Read@channel stored from wreg
  2690  0031C2  0100               	movlb	0	; () banked
  2691  0031C4  6F9B               	movwf	InternalADC_Read@channel& (0+255),b
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;ADC.c: 84: unsigned char AnaChanSel = 1;
  2695  0031C6  0E01               	movlw	1
  2696  0031C8  0100               	movlb	0	; () banked
  2697  0031CA  6F9A               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;ADC.c: 85: if(channel > 0b1100)
  2701  0031CC  0E0C               	movlw	12
  2702  0031CE  0100               	movlb	0	; () banked
  2703  0031D0  659B               	cpfsgt	InternalADC_Read@channel& (0+255),b
  2704  0031D2  D00A               	goto	l6260
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;ADC.c: 86: {
  2708                           ;ADC.c: 87: *ADCcounts = 0;
  2709  0031D4  C096  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
  2710  0031D8  C097  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
  2711  0031DC  0E00               	movlw	0
  2712  0031DE  6EDE               	movwf	postinc2,c
  2713  0031E0  0E00               	movlw	0
  2714  0031E2  6EDD               	movwf	postdec2,c
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;ADC.c: 88: return 0;
  2718  0031E4  0E00               	movlw	0
  2719                           
  2720                           ; BSR set to: 0
  2721  0031E6  0012               	return	
  2722  0031E8                     l6260:
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;ADC.c: 89: }
  2726                           ;ADC.c: 90: if(channel > 1)
  2727  0031E8  0E01               	movlw	1
  2728  0031EA  0100               	movlb	0	; () banked
  2729  0031EC  659B               	cpfsgt	InternalADC_Read@channel& (0+255),b
  2730  0031EE  D001               	goto	l6264
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;ADC.c: 93: }
  2734  0031F0  D009               	goto	l6268
  2735  0031F2                     l6264:
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;ADC.c: 94: else if (channel == 0)
  2739  0031F2  0100               	movlb	0	; () banked
  2740  0031F4  519B               	movf	InternalADC_Read@channel& (0+255),w,b
  2741  0031F6  0100               	movlb	0	; () banked
  2742  0031F8  A4D8               	btfss	status,2,c
  2743  0031FA  D004               	goto	l6268
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;ADC.c: 95: {
  2747                           ;ADC.c: 96: AnaChanSel = 0;
  2748  0031FC  0E00               	movlw	0
  2749  0031FE  0100               	movlb	0	; () banked
  2750  003200  6F9A               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
  2751                           
  2752                           ; BSR set to: 0
  2753  003202  D000               	goto	l6268
  2754  003204                     l6268:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;ADC.c: 97: }
  2758                           ;ADC.c: 99: ADCON0 |= (AnaChanSel << 2);
  2759  003204  0100               	movlb	0	; () banked
  2760  003206  459A               	rlncf	InternalADC_Read@AnaChanSel& (0+255),w,b
  2761  003208  46E8               	rlncf	wreg,f,c
  2762  00320A  0BFC               	andlw	252
  2763  00320C  12C2               	iorwf	4034,f,c	;volatile
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;ADC.c: 101: ADCON1bits.VCFG0 = 0;
  2767  00320E  98C1               	bcf	4033,4,c	;volatile
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;ADC.c: 102: ADCON1bits.VCFG1 = 0;
  2771  003210  9AC1               	bcf	4033,5,c	;volatile
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;ADC.c: 104: (ADCON0bits.ADON = 1);
  2775  003212  80C2               	bsf	4034,0,c	;volatile
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;ADC.c: 105: delayUS(50);
  2779  003214  0E32               	movlw	50
  2780  003216  0100               	movlb	0	; () banked
  2781  003218  6F8C               	movwf	delayUS@US& (0+255),b
  2782  00321A  0E00               	movlw	0
  2783  00321C  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  2784  00321E  0E00               	movlw	0
  2785  003220  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  2786  003222  0E00               	movlw	0
  2787  003224  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  2788  003226  ECC2  F01A         	call	_delayUS	;wreg free
  2789                           
  2790                           ;ADC.c: 107: ADCON0bits.GO = 1;
  2791  00322A  82C2               	bsf	4034,1,c	;volatile
  2792                           
  2793                           ;ADC.c: 108: while(ADCON0bits.GO);
  2794  00322C  D000               	goto	l289
  2795  00322E                     l289:
  2796  00322E  B2C2               	btfsc	4034,1,c	;volatile
  2797  003230  D7FE               	goto	l289
  2798                           
  2799                           ;ADC.c: 109: (ADCON0bits.ADON = 0);
  2800  003232  90C2               	bcf	4034,0,c	;volatile
  2801                           
  2802                           ;ADC.c: 111: *ADCcounts = ((ADRESH << 8) + ADRESL);
  2803  003234  50C3               	movf	4035,w,c	;volatile
  2804  003236  CFC4 F098          	movff	4036,??_InternalADC_Read	;volatile
  2805  00323A  0100               	movlb	0	; () banked
  2806  00323C  6B99               	clrf	(??_InternalADC_Read+1)& (0+255),b
  2807  00323E  C098  F099         	movff	??_InternalADC_Read,??_InternalADC_Read+1
  2808  003242  0100               	movlb	0	; () banked
  2809  003244  6B98               	clrf	??_InternalADC_Read& (0+255),b
  2810  003246  0100               	movlb	0	; () banked
  2811  003248  2798               	addwf	??_InternalADC_Read& (0+255),f,b
  2812  00324A  0E00               	movlw	0
  2813  00324C  2399               	addwfc	(??_InternalADC_Read+1)& (0+255),f,b
  2814  00324E  C096  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
  2815  003252  C097  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
  2816  003256  C098  FFDE         	movff	??_InternalADC_Read,postinc2
  2817  00325A  C099  FFDD         	movff	??_InternalADC_Read+1,postdec2
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;ADC.c: 112: return 1;
  2821  00325E  0E01               	movlw	1
  2822  003260  0012               	return	
  2823                           
  2824                           ; BSR set to: 0
  2825                           
  2826                           ; BSR set to: 0
  2827  003262  0012               	return		;funcret
  2828  003264                     __end_of_InternalADC_Read:
  2829                           	opt stack 0
  2830                           tblptru	equ	0xFF8
  2831                           tblptrh	equ	0xFF7
  2832                           tblptrl	equ	0xFF6
  2833                           tablat	equ	0xFF5
  2834                           postinc0	equ	0xFEE
  2835                           wreg	equ	0xFE8
  2836                           postdec1	equ	0xFE5
  2837                           fsr1h	equ	0xFE2
  2838                           fsr1l	equ	0xFE1
  2839                           postinc2	equ	0xFDE
  2840                           postdec2	equ	0xFDD
  2841                           fsr2h	equ	0xFDA
  2842                           fsr2l	equ	0xFD9
  2843                           status	equ	0xFD8
  2844                           
  2845 ;; *************** function _Init_System *****************
  2846 ;; Defined at:
  2847 ;;		line 98 in file "user.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;		None
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;		None               void
  2854 ;; Registers used:
  2855 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;Total ram usage:        0 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:   16
  2868 ;; This function calls:
  2869 ;;		_InitADC
  2870 ;;		_InitBluetooth
  2871 ;;		_InitIR
  2872 ;;		_InitTimers
  2873 ;;		_InitUART
  2874 ;;		_SyncEEPROMToGlobal
  2875 ;;		_cleanBuffer
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text9
  2882  003768                     __ptext9:
  2883                           	opt stack 0
  2884  003768                     _Init_System:
  2885                           	opt stack 14
  2886                           
  2887                           ;user.c: 100: cleanBuffer(&ReceivedString, 255);
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;incstack = 0
  2891  003768  0E00               	movlw	low _ReceivedString
  2892  00376A  0100               	movlb	0	; () banked
  2893  00376C  6F8C               	movwf	cleanBuffer@data& (0+255),b
  2894  00376E  0E03               	movlw	high _ReceivedString
  2895  003770  0100               	movlb	0	; () banked
  2896  003772  6F8D               	movwf	(cleanBuffer@data+1)& (0+255),b
  2897  003774  0E00               	movlw	0
  2898  003776  0100               	movlb	0	; () banked
  2899  003778  6F8F               	movwf	(cleanBuffer@count+1)& (0+255),b
  2900  00377A  698E               	setf	cleanBuffer@count& (0+255),b
  2901  00377C  EC5A  F01B         	call	_cleanBuffer	;wreg free
  2902                           
  2903                           ;user.c: 103: IPR1bits.RCIP = 0;
  2904  003780  9A9F               	bcf	3999,5,c	;volatile
  2905                           
  2906                           ;user.c: 104: INTCON2bits.RBIP = 1;
  2907  003782  80F1               	bsf	intcon2,0,c	;volatile
  2908                           
  2909                           ;user.c: 105: INTCON2bits.TMR0IP = 1;
  2910  003784  84F1               	bsf	intcon2,2,c	;volatile
  2911                           
  2912                           ;user.c: 106: IPR1bits.TMR2IP = 1;
  2913  003786  829F               	bsf	3999,1,c	;volatile
  2914                           
  2915                           ;user.c: 107: IPR1bits.TMR1IP = 0;
  2916  003788  909F               	bcf	3999,0,c	;volatile
  2917                           
  2918                           ;user.c: 108: IPR2bits.TMR3IP = 1;
  2919  00378A  82A2               	bsf	4002,1,c	;volatile
  2920                           
  2921                           ;user.c: 111: RCONbits.IPEN = 1;
  2922  00378C  8ED0               	bsf	4048,7,c	;volatile
  2923                           
  2924                           ;user.c: 112: INTCONbits.PEIE = 1;
  2925  00378E  8CF2               	bsf	intcon,6,c	;volatile
  2926                           
  2927                           ;user.c: 113: INTCONbits.GIE = 1;
  2928  003790  8EF2               	bsf	intcon,7,c	;volatile
  2929                           
  2930                           ;user.c: 115: SyncEEPROMToGlobal();
  2931  003792  ECD9  F01D         	call	_SyncEEPROMToGlobal	;wreg free
  2932                           
  2933                           ;user.c: 116: InitADC();
  2934  003796  EC3F  F01E         	call	_InitADC	;wreg free
  2935                           
  2936                           ;user.c: 117: InitIR();
  2937  00379A  EC30  F01C         	call	_InitIR	;wreg free
  2938                           
  2939                           ;user.c: 118: InitUART(115200);
  2940  00379E  0E00               	movlw	0
  2941  0037A0  0101               	movlb	1	; () banked
  2942  0037A2  6FDF               	movwf	InitUART@Baud& (0+255),b
  2943  0037A4  0EC2               	movlw	194
  2944  0037A6  6FE0               	movwf	(InitUART@Baud+1)& (0+255),b
  2945  0037A8  0E01               	movlw	1
  2946  0037AA  6FE1               	movwf	(InitUART@Baud+2)& (0+255),b
  2947  0037AC  0E00               	movlw	0
  2948  0037AE  6FE2               	movwf	(InitUART@Baud+3)& (0+255),b
  2949  0037B0  EC18  F014         	call	_InitUART	;wreg free
  2950                           
  2951                           ;user.c: 119: InitBluetooth();
  2952  0037B4  ECDF  F01B         	call	_InitBluetooth	;wreg free
  2953                           
  2954                           ;user.c: 120: InitTimers();
  2955  0037B8  EC60  F01E         	call	_InitTimers	;wreg free
  2956  0037BC  0012               	return		;funcret
  2957  0037BE                     __end_of_Init_System:
  2958                           	opt stack 0
  2959                           tblptru	equ	0xFF8
  2960                           tblptrh	equ	0xFF7
  2961                           tblptrl	equ	0xFF6
  2962                           tablat	equ	0xFF5
  2963                           intcon	equ	0xFF2
  2964                           intcon2	equ	0xFF1
  2965                           postinc0	equ	0xFEE
  2966                           wreg	equ	0xFE8
  2967                           postdec1	equ	0xFE5
  2968                           fsr1h	equ	0xFE2
  2969                           fsr1l	equ	0xFE1
  2970                           postinc2	equ	0xFDE
  2971                           postdec2	equ	0xFDD
  2972                           fsr2h	equ	0xFDA
  2973                           fsr2l	equ	0xFD9
  2974                           status	equ	0xFD8
  2975                           
  2976 ;; *************** function _SyncEEPROMToGlobal *****************
  2977 ;; Defined at:
  2978 ;;		line 172 in file "EEPROM.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  Temp            5   30[BANK1 ] struct EEdata
  2983 ;; Return value:  Size  Location     Type
  2984 ;;		None               void
  2985 ;; Registers used:
  2986 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;Total ram usage:        5 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:   12
  2999 ;; This function calls:
  3000 ;;		_GetEEPROM
  3001 ;; This function is called by:
  3002 ;;		_Init_System
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text10
  3007  003BB2                     __ptext10:
  3008                           	opt stack 0
  3009  003BB2                     _SyncEEPROMToGlobal:
  3010                           	opt stack 17
  3011                           
  3012                           ;EEPROM.c: 174: GBLdata Temp;
  3013                           ;EEPROM.c: 176: Temp = GetEEPROM();
  3014                           
  3015                           ;incstack = 0
  3016  003BB2  ECD9  F01C         	call	_GetEEPROM	;wreg free
  3017  003BB6  EE21  F0E4         	lfsr	2,SyncEEPROMToGlobal@Temp
  3018  003BBA  0E04               	movlw	4
  3019  003BBC                     u6551:
  3020  003BBC  CFEB FFDB          	movff	plusw0,plusw2
  3021  003BC0  06E8               	decf	wreg,f,c
  3022  003BC2  E2FC               	bc	u6551
  3023                           
  3024                           ;EEPROM.c: 178: Global.BlueToothFlag = Temp.BlueToothFlag;
  3025  003BC4  C1E4  F0B3         	movff	SyncEEPROMToGlobal@Temp,_Global
  3026                           
  3027                           ;EEPROM.c: 179: Global.NECcode = Temp.NECcode;
  3028  003BC8  C1E5  F0B4         	movff	SyncEEPROMToGlobal@Temp+1,_Global+1
  3029  003BCC  C1E6  F0B5         	movff	SyncEEPROMToGlobal@Temp+2,_Global+2
  3030  003BD0  C1E7  F0B6         	movff	SyncEEPROMToGlobal@Temp+3,_Global+3
  3031  003BD4  C1E8  F0B7         	movff	SyncEEPROMToGlobal@Temp+4,_Global+4
  3032  003BD8  0012               	return		;funcret
  3033  003BDA                     __end_of_SyncEEPROMToGlobal:
  3034                           	opt stack 0
  3035                           tblptru	equ	0xFF8
  3036                           tblptrh	equ	0xFF7
  3037                           tblptrl	equ	0xFF6
  3038                           tablat	equ	0xFF5
  3039                           intcon	equ	0xFF2
  3040                           intcon2	equ	0xFF1
  3041                           postinc0	equ	0xFEE
  3042                           plusw0	equ	0xFEB
  3043                           wreg	equ	0xFE8
  3044                           postdec1	equ	0xFE5
  3045                           fsr1h	equ	0xFE2
  3046                           fsr1l	equ	0xFE1
  3047                           postinc2	equ	0xFDE
  3048                           postdec2	equ	0xFDD
  3049                           plusw2	equ	0xFDB
  3050                           fsr2h	equ	0xFDA
  3051                           fsr2l	equ	0xFD9
  3052                           status	equ	0xFD8
  3053                           
  3054 ;; *************** function _GetEEPROM *****************
  3055 ;; Defined at:
  3056 ;;		line 118 in file "EEPROM.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;		None
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  Temp            5   25[BANK1 ] struct EEdata
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  5   20[BANK1 ] struct EEdata
  3063 ;; Registers used:
  3064 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3070 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;Total ram usage:       10 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:   11
  3077 ;; This function calls:
  3078 ;;		_GetMemoryChar
  3079 ;;		_GetMemoryLong
  3080 ;; This function is called by:
  3081 ;;		_SyncEEPROMToGlobal
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           	psect	text11
  3086  0039B2                     __ptext11:
  3087                           	opt stack 0
  3088  0039B2                     _GetEEPROM:
  3089                           	opt stack 17
  3090                           
  3091                           ;EEPROM.c: 120: GBLdata Temp;
  3092                           ;EEPROM.c: 121: Temp.BlueToothFlag = GetMemoryChar(0);
  3093                           
  3094                           ;incstack = 0
  3095  0039B2  0E00               	movlw	0
  3096  0039B4  ECC4  F01D         	call	_GetMemoryChar
  3097  0039B8  0100               	movlb	0	; () banked
  3098  0039BA  518F               	movf	?_GetMemoryChar& (0+255),w,b
  3099  0039BC  0101               	movlb	1	; () banked
  3100  0039BE  6FDF               	movwf	GetEEPROM@Temp& (0+255),b
  3101                           
  3102                           ;EEPROM.c: 122: Temp.NECcode = GetMemoryLong(1);
  3103  0039C0  0E01               	movlw	1
  3104  0039C2  EC25  F010         	call	_GetMemoryLong
  3105  0039C6  C08F  F1E0         	movff	?_GetMemoryLong,GetEEPROM@Temp+1
  3106  0039CA  C090  F1E1         	movff	?_GetMemoryLong+1,GetEEPROM@Temp+2
  3107  0039CE  C091  F1E2         	movff	?_GetMemoryLong+2,GetEEPROM@Temp+3
  3108  0039D2  C092  F1E3         	movff	?_GetMemoryLong+3,GetEEPROM@Temp+4
  3109                           
  3110                           ;EEPROM.c: 123: return Temp;
  3111  0039D6  EE21  F0DF         	lfsr	2,GetEEPROM@Temp
  3112  0039DA  EE01  F0DA         	lfsr	0,?_GetEEPROM
  3113  0039DE  0E04               	movlw	4
  3114  0039E0                     u6321:
  3115  0039E0  CFDB FFEB          	movff	plusw2,plusw0
  3116  0039E4  06E8               	decf	wreg,f,c
  3117  0039E6  E2FC               	bc	u6321
  3118  0039E8  0012               	return	
  3119  0039EA  0012               	return		;funcret
  3120  0039EC                     __end_of_GetEEPROM:
  3121                           	opt stack 0
  3122                           tblptru	equ	0xFF8
  3123                           tblptrh	equ	0xFF7
  3124                           tblptrl	equ	0xFF6
  3125                           tablat	equ	0xFF5
  3126                           intcon	equ	0xFF2
  3127                           intcon2	equ	0xFF1
  3128                           postinc0	equ	0xFEE
  3129                           plusw0	equ	0xFEB
  3130                           wreg	equ	0xFE8
  3131                           postdec1	equ	0xFE5
  3132                           fsr1h	equ	0xFE2
  3133                           fsr1l	equ	0xFE1
  3134                           postinc2	equ	0xFDE
  3135                           postdec2	equ	0xFDD
  3136                           plusw2	equ	0xFDB
  3137                           fsr2h	equ	0xFDA
  3138                           fsr2l	equ	0xFD9
  3139                           status	equ	0xFD8
  3140                           
  3141 ;; *************** function _InitUART *****************
  3142 ;; Defined at:
  3143 ;;		line 78 in file "UART.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  Baud            4   25[BANK1 ] unsigned long 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  temp            4   39[BANK1 ] unsigned long 
  3148 ;;  spbrg           2   36[BANK1 ] unsigned int 
  3149 ;;  config          1   38[BANK1 ] unsigned char 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;		None               void
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3159 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;Total ram usage:       18 bytes
  3164 ;; Hardware stack levels used:    1
  3165 ;; Hardware stack levels required when called:   12
  3166 ;; This function calls:
  3167 ;;		_Local_CloseUSART
  3168 ;;		_OpenUSART
  3169 ;;		_Round
  3170 ;;		___fttol
  3171 ;;		___lldiv
  3172 ;;		___lltoft
  3173 ;; This function is called by:
  3174 ;;		_Init_System
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text12
  3179  002830                     __ptext12:
  3180                           	opt stack 0
  3181  002830                     _InitUART:
  3182                           	opt stack 17
  3183                           
  3184                           ;UART.c: 80: unsigned long temp;
  3185                           ;UART.c: 81: unsigned char config = 0;
  3186                           
  3187                           ;incstack = 0
  3188  002830  0E00               	movlw	0
  3189  002832  0101               	movlb	1	; () banked
  3190  002834  6FEC               	movwf	InitUART@config& (0+255),b
  3191                           
  3192                           ; BSR set to: 1
  3193                           ;UART.c: 82: unsigned int spbrg;
  3194                           ;UART.c: 84: Local_CloseUSART();
  3195  002836  EC72  F01E         	call	_Local_CloseUSART	;wreg free
  3196                           
  3197                           ;UART.c: 89: config |= 0b00001000;
  3198  00283A  0101               	movlb	1	; () banked
  3199  00283C  87EC               	bsf	InitUART@config& (0+255),3,b
  3200                           
  3201                           ; BSR set to: 1
  3202                           ;UART.c: 90: config |= 0b00010000;
  3203  00283E  0101               	movlb	1	; () banked
  3204  002840  89EC               	bsf	InitUART@config& (0+255),4,b
  3205                           
  3206                           ; BSR set to: 1
  3207                           ;UART.c: 91: config &= ~0b00000010;
  3208  002842  0101               	movlb	1	; () banked
  3209  002844  93EC               	bcf	InitUART@config& (0+255),1,b
  3210                           
  3211                           ; BSR set to: 1
  3212                           ;UART.c: 94: temp = (64000000L / Baud) - 1;
  3213  002846  0E00               	movlw	0
  3214  002848  0100               	movlb	0	; () banked
  3215  00284A  6F8C               	movwf	___lldiv@dividend& (0+255),b
  3216  00284C  0E90               	movlw	144
  3217  00284E  6F8D               	movwf	(___lldiv@dividend+1)& (0+255),b
  3218  002850  0ED0               	movlw	208
  3219  002852  6F8E               	movwf	(___lldiv@dividend+2)& (0+255),b
  3220  002854  0E03               	movlw	3
  3221  002856  6F8F               	movwf	(___lldiv@dividend+3)& (0+255),b
  3222  002858  C1DF  F090         	movff	InitUART@Baud,___lldiv@divisor
  3223  00285C  C1E0  F091         	movff	InitUART@Baud+1,___lldiv@divisor+1
  3224  002860  C1E1  F092         	movff	InitUART@Baud+2,___lldiv@divisor+2
  3225  002864  C1E2  F093         	movff	InitUART@Baud+3,___lldiv@divisor+3
  3226  002868  ECCA  F016         	call	___lldiv	;wreg free
  3227  00286C  0EFF               	movlw	255
  3228  00286E  0100               	movlb	0	; () banked
  3229  002870  258C               	addwf	?___lldiv& (0+255),w,b
  3230  002872  0101               	movlb	1	; () banked
  3231  002874  6FED               	movwf	InitUART@temp& (0+255),b
  3232  002876  0EFF               	movlw	255
  3233  002878  0100               	movlb	0	; () banked
  3234  00287A  218D               	addwfc	(?___lldiv+1)& (0+255),w,b
  3235  00287C  0101               	movlb	1	; () banked
  3236  00287E  6FEE               	movwf	(InitUART@temp+1)& (0+255),b
  3237  002880  0EFF               	movlw	255
  3238  002882  0100               	movlb	0	; () banked
  3239  002884  218E               	addwfc	(?___lldiv+2)& (0+255),w,b
  3240  002886  0101               	movlb	1	; () banked
  3241  002888  6FEF               	movwf	(InitUART@temp+2)& (0+255),b
  3242  00288A  0EFF               	movlw	255
  3243  00288C  0100               	movlb	0	; () banked
  3244  00288E  218F               	addwfc	(?___lldiv+3)& (0+255),w,b
  3245  002890  0101               	movlb	1	; () banked
  3246  002892  6FF0               	movwf	(InitUART@temp+3)& (0+255),b
  3247                           
  3248                           ; BSR set to: 1
  3249                           ;UART.c: 95: temp = (temp >> 2) - 1;
  3250  002894  C1ED  F1E3         	movff	InitUART@temp,??_InitUART
  3251  002898  C1EE  F1E4         	movff	InitUART@temp+1,??_InitUART+1
  3252  00289C  C1EF  F1E5         	movff	InitUART@temp+2,??_InitUART+2
  3253  0028A0  C1F0  F1E6         	movff	InitUART@temp+3,??_InitUART+3
  3254  0028A4  0E03               	movlw	3
  3255  0028A6  D006               	goto	u6560
  3256  0028A8                     u6565:
  3257  0028A8  0101               	movlb	1	; () banked
  3258  0028AA  90D8               	bcf	status,0,c
  3259  0028AC  33E6               	rrcf	(??_InitUART+3)& (0+255),f,b
  3260  0028AE  33E5               	rrcf	(??_InitUART+2)& (0+255),f,b
  3261  0028B0  33E4               	rrcf	(??_InitUART+1)& (0+255),f,b
  3262  0028B2  33E3               	rrcf	??_InitUART& (0+255),f,b
  3263  0028B4                     u6560:
  3264  0028B4  2EE8               	decfsz	wreg,f,c
  3265  0028B6  D7F8               	goto	u6565
  3266  0028B8  0EFF               	movlw	255
  3267  0028BA  0101               	movlb	1	; () banked
  3268  0028BC  25E3               	addwf	??_InitUART& (0+255),w,b
  3269  0028BE  0101               	movlb	1	; () banked
  3270  0028C0  6FED               	movwf	InitUART@temp& (0+255),b
  3271  0028C2  0EFF               	movlw	255
  3272  0028C4  0101               	movlb	1	; () banked
  3273  0028C6  21E4               	addwfc	(??_InitUART+1)& (0+255),w,b
  3274  0028C8  0101               	movlb	1	; () banked
  3275  0028CA  6FEE               	movwf	(InitUART@temp+1)& (0+255),b
  3276  0028CC  0EFF               	movlw	255
  3277  0028CE  0101               	movlb	1	; () banked
  3278  0028D0  21E5               	addwfc	(??_InitUART+2)& (0+255),w,b
  3279  0028D2  0101               	movlb	1	; () banked
  3280  0028D4  6FEF               	movwf	(InitUART@temp+2)& (0+255),b
  3281  0028D6  0EFF               	movlw	255
  3282  0028D8  0101               	movlb	1	; () banked
  3283  0028DA  21E6               	addwfc	(??_InitUART+3)& (0+255),w,b
  3284  0028DC  0101               	movlb	1	; () banked
  3285  0028DE  6FF0               	movwf	(InitUART@temp+3)& (0+255),b
  3286                           
  3287                           ; BSR set to: 1
  3288                           ;UART.c: 96: spbrg = (unsigned int) Round(temp);
  3289  0028E0  C1ED  F094         	movff	InitUART@temp,___lltoft@c
  3290  0028E4  C1EE  F095         	movff	InitUART@temp+1,___lltoft@c+1
  3291  0028E8  C1EF  F096         	movff	InitUART@temp+2,___lltoft@c+2
  3292  0028EC  C1F0  F097         	movff	InitUART@temp+3,___lltoft@c+3
  3293  0028F0  ECC6  F019         	call	___lltoft	;wreg free
  3294  0028F4  C094  F1D8         	movff	?___lltoft,Round@input
  3295  0028F8  C095  F1D9         	movff	?___lltoft+1,Round@input+1
  3296  0028FC  C096  F1DA         	movff	?___lltoft+2,Round@input+2
  3297  002900  ECF8  F01A         	call	_Round	;wreg free
  3298  002904  C1D8  F1E7         	movff	?_Round,_InitUART$2732
  3299  002908  C1D9  F1E8         	movff	?_Round+1,_InitUART$2732+1
  3300  00290C  C1DA  F1E9         	movff	?_Round+2,_InitUART$2732+2
  3301                           
  3302                           ;UART.c: 96: spbrg = (unsigned int) Round(temp);
  3303  002910  C1E7  F1C9         	movff	_InitUART$2732,___fttol@f1
  3304  002914  C1E8  F1CA         	movff	_InitUART$2732+1,___fttol@f1+1
  3305  002918  C1E9  F1CB         	movff	_InitUART$2732+2,___fttol@f1+2
  3306  00291C  EC3C  F012         	call	___fttol	;wreg free
  3307  002920  C1C9  F1EA         	movff	?___fttol,InitUART@spbrg
  3308  002924  C1CA  F1EB         	movff	?___fttol+1,InitUART@spbrg+1
  3309                           
  3310                           ;UART.c: 98: BAUDCONbits.BRG16 = 1;
  3311  002928  86B8               	bsf	4024,3,c	;volatile
  3312                           
  3313                           ;UART.c: 100: OpenUSART(config, spbrg);
  3314  00292A  C1EA  F08C         	movff	InitUART@spbrg,OpenUSART@spbrg
  3315  00292E  C1EB  F08D         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
  3316  002932  0101               	movlb	1	; () banked
  3317  002934  51EC               	movf	InitUART@config& (0+255),w,b
  3318  002936  EC46  F01A         	call	_OpenUSART
  3319                           
  3320                           ;UART.c: 102: PIR1bits.RCIF = 0;
  3321  00293A  9A9E               	bcf	3998,5,c	;volatile
  3322                           
  3323                           ;UART.c: 103: PIE1bits.RCIE = 1;
  3324  00293C  8A9D               	bsf	3997,5,c	;volatile
  3325                           
  3326                           ;UART.c: 104: INTCONbits.PEIE = 1;
  3327  00293E  8CF2               	bsf	intcon,6,c	;volatile
  3328  002940  0012               	return		;funcret
  3329  002942                     __end_of_InitUART:
  3330                           	opt stack 0
  3331                           tblptru	equ	0xFF8
  3332                           tblptrh	equ	0xFF7
  3333                           tblptrl	equ	0xFF6
  3334                           tablat	equ	0xFF5
  3335                           intcon	equ	0xFF2
  3336                           intcon2	equ	0xFF1
  3337                           postinc0	equ	0xFEE
  3338                           plusw0	equ	0xFEB
  3339                           wreg	equ	0xFE8
  3340                           postdec1	equ	0xFE5
  3341                           fsr1h	equ	0xFE2
  3342                           fsr1l	equ	0xFE1
  3343                           postinc2	equ	0xFDE
  3344                           postdec2	equ	0xFDD
  3345                           plusw2	equ	0xFDB
  3346                           fsr2h	equ	0xFDA
  3347                           fsr2l	equ	0xFD9
  3348                           status	equ	0xFD8
  3349                           
  3350 ;; *************** function ___lltoft *****************
  3351 ;; Defined at:
  3352 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  c               4   52[BANK0 ] unsigned long 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  exp             1   60[BANK0 ] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  3   52[BANK0 ] float 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3366 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;Total ram usage:        9 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:   10
  3373 ;; This function calls:
  3374 ;;		___ftpack
  3375 ;; This function is called by:
  3376 ;;		_InitUART
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text13
  3381  00338C                     __ptext13:
  3382                           	opt stack 0
  3383  00338C                     ___lltoft:
  3384                           	opt stack 18
  3385                           
  3386                           ;incstack = 0
  3387  00338C  0E8E               	movlw	142
  3388  00338E  0100               	movlb	0	; () banked
  3389  003390  6F9C               	movwf	___lltoft@exp& (0+255),b
  3390  003392  D009               	goto	l6170
  3391  003394                     l6168:
  3392                           
  3393                           ; BSR set to: 0
  3394  003394  0100               	movlb	0	; () banked
  3395  003396  90D8               	bcf	status,0,c
  3396  003398  3397               	rrcf	(___lltoft@c+3)& (0+255),f,b
  3397  00339A  3396               	rrcf	(___lltoft@c+2)& (0+255),f,b
  3398  00339C  3395               	rrcf	(___lltoft@c+1)& (0+255),f,b
  3399  00339E  3394               	rrcf	___lltoft@c& (0+255),f,b
  3400  0033A0  0100               	movlb	0	; () banked
  3401  0033A2  2B9C               	incf	___lltoft@exp& (0+255),f,b
  3402  0033A4  D000               	goto	l6170
  3403  0033A6                     l6170:
  3404                           
  3405                           ; BSR set to: 0
  3406  0033A6  0E00               	movlw	0
  3407  0033A8  0100               	movlb	0	; () banked
  3408  0033AA  1594               	andwf	___lltoft@c& (0+255),w,b
  3409  0033AC  0100               	movlb	0	; () banked
  3410  0033AE  6F98               	movwf	??___lltoft& (0+255),b
  3411  0033B0  0E00               	movlw	0
  3412  0033B2  0100               	movlb	0	; () banked
  3413  0033B4  1595               	andwf	(___lltoft@c+1)& (0+255),w,b
  3414  0033B6  0100               	movlb	0	; () banked
  3415  0033B8  6F99               	movwf	(??___lltoft+1)& (0+255),b
  3416  0033BA  0E00               	movlw	0
  3417  0033BC  0100               	movlb	0	; () banked
  3418  0033BE  1596               	andwf	(___lltoft@c+2)& (0+255),w,b
  3419  0033C0  0100               	movlb	0	; () banked
  3420  0033C2  6F9A               	movwf	(??___lltoft+2)& (0+255),b
  3421  0033C4  0EFF               	movlw	255
  3422  0033C6  0100               	movlb	0	; () banked
  3423  0033C8  1597               	andwf	(___lltoft@c+3)& (0+255),w,b
  3424  0033CA  0100               	movlb	0	; () banked
  3425  0033CC  6F9B               	movwf	(??___lltoft+3)& (0+255),b
  3426  0033CE  0100               	movlb	0	; () banked
  3427  0033D0  5198               	movf	??___lltoft& (0+255),w,b
  3428  0033D2  0100               	movlb	0	; () banked
  3429  0033D4  1199               	iorwf	(??___lltoft+1)& (0+255),w,b
  3430  0033D6  0100               	movlb	0	; () banked
  3431  0033D8  119A               	iorwf	(??___lltoft+2)& (0+255),w,b
  3432  0033DA  0100               	movlb	0	; () banked
  3433  0033DC  119B               	iorwf	(??___lltoft+3)& (0+255),w,b
  3434  0033DE  A4D8               	btfss	status,2,c
  3435  0033E0  D7D9               	goto	l6168
  3436                           
  3437                           ; BSR set to: 0
  3438                           
  3439                           ; BSR set to: 0
  3440  0033E2  C094  F08C         	movff	___lltoft@c,___ftpack@arg
  3441  0033E6  C095  F08D         	movff	___lltoft@c+1,___ftpack@arg+1
  3442  0033EA  C096  F08E         	movff	___lltoft@c+2,___ftpack@arg+2
  3443  0033EE  C09C  F08F         	movff	___lltoft@exp,___ftpack@exp
  3444  0033F2  0E00               	movlw	0
  3445  0033F4  0100               	movlb	0	; () banked
  3446  0033F6  6F90               	movwf	___ftpack@sign& (0+255),b
  3447  0033F8  EC88  F013         	call	___ftpack	;wreg free
  3448  0033FC  C08C  F094         	movff	?___ftpack,?___lltoft
  3449  003400  C08D  F095         	movff	?___ftpack+1,?___lltoft+1
  3450  003404  C08E  F096         	movff	?___ftpack+2,?___lltoft+2
  3451  003408  0012               	return	
  3452  00340A  0012               	return		;funcret
  3453  00340C                     __end_of___lltoft:
  3454                           	opt stack 0
  3455                           tblptru	equ	0xFF8
  3456                           tblptrh	equ	0xFF7
  3457                           tblptrl	equ	0xFF6
  3458                           tablat	equ	0xFF5
  3459                           intcon	equ	0xFF2
  3460                           intcon2	equ	0xFF1
  3461                           postinc0	equ	0xFEE
  3462                           plusw0	equ	0xFEB
  3463                           wreg	equ	0xFE8
  3464                           postdec1	equ	0xFE5
  3465                           fsr1h	equ	0xFE2
  3466                           fsr1l	equ	0xFE1
  3467                           postinc2	equ	0xFDE
  3468                           postdec2	equ	0xFDD
  3469                           plusw2	equ	0xFDB
  3470                           fsr2h	equ	0xFDA
  3471                           fsr2l	equ	0xFD9
  3472                           status	equ	0xFD8
  3473                           
  3474 ;; *************** function _Round *****************
  3475 ;; Defined at:
  3476 ;;		line 111 in file "MISC.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  input           3   18[BANK1 ] float 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  temp            4   21[BANK1 ] long 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  3   18[BANK1 ] long 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3490 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;Total ram usage:        7 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:   11
  3497 ;; This function calls:
  3498 ;;		___altoft
  3499 ;;		___ftadd
  3500 ;;		___fttol
  3501 ;; This function is called by:
  3502 ;;		_InitUART
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           	psect	text14
  3507  0035F0                     __ptext14:
  3508                           	opt stack 0
  3509  0035F0                     _Round:
  3510                           	opt stack 17
  3511                           
  3512                           ;MISC.c: 113: long temp = (long)(input + 0.5);
  3513                           
  3514                           ;incstack = 0
  3515  0035F0  0E00               	movlw	0
  3516  0035F2  0100               	movlb	0	; () banked
  3517  0035F4  6F97               	movwf	___ftadd@f2& (0+255),b
  3518  0035F6  0E00               	movlw	0
  3519  0035F8  0100               	movlb	0	; () banked
  3520  0035FA  6F98               	movwf	(___ftadd@f2+1)& (0+255),b
  3521  0035FC  0E3F               	movlw	63
  3522  0035FE  0100               	movlb	0	; () banked
  3523  003600  6F99               	movwf	(___ftadd@f2+2)& (0+255),b
  3524  003602  C1D8  F094         	movff	Round@input,___ftadd@f1
  3525  003606  C1D9  F095         	movff	Round@input+1,___ftadd@f1+1
  3526  00360A  C1DA  F096         	movff	Round@input+2,___ftadd@f1+2
  3527  00360E  ECC4  F00D         	call	___ftadd	;wreg free
  3528  003612  C094  F1C9         	movff	?___ftadd,___fttol@f1
  3529  003616  C095  F1CA         	movff	?___ftadd+1,___fttol@f1+1
  3530  00361A  C096  F1CB         	movff	?___ftadd+2,___fttol@f1+2
  3531  00361E  EC3C  F012         	call	___fttol	;wreg free
  3532  003622  C1C9  F1DB         	movff	?___fttol,Round@temp
  3533  003626  C1CA  F1DC         	movff	?___fttol+1,Round@temp+1
  3534  00362A  C1CB  F1DD         	movff	?___fttol+2,Round@temp+2
  3535  00362E  C1CC  F1DE         	movff	?___fttol+3,Round@temp+3
  3536                           
  3537                           ;MISC.c: 115: return temp;
  3538  003632  C1DB  F094         	movff	Round@temp,___altoft@c
  3539  003636  C1DC  F095         	movff	Round@temp+1,___altoft@c+1
  3540  00363A  C1DD  F096         	movff	Round@temp+2,___altoft@c+2
  3541  00363E  C1DE  F097         	movff	Round@temp+3,___altoft@c+3
  3542  003642  EC32  F019         	call	___altoft	;wreg free
  3543  003646  C094  F1D8         	movff	?___altoft,?_Round
  3544  00364A  C095  F1D9         	movff	?___altoft+1,?_Round+1
  3545  00364E  C096  F1DA         	movff	?___altoft+2,?_Round+2
  3546  003652  0012               	return	
  3547  003654  0012               	return		;funcret
  3548  003656                     __end_of_Round:
  3549                           	opt stack 0
  3550                           tblptru	equ	0xFF8
  3551                           tblptrh	equ	0xFF7
  3552                           tblptrl	equ	0xFF6
  3553                           tablat	equ	0xFF5
  3554                           intcon	equ	0xFF2
  3555                           intcon2	equ	0xFF1
  3556                           postinc0	equ	0xFEE
  3557                           plusw0	equ	0xFEB
  3558                           wreg	equ	0xFE8
  3559                           postdec1	equ	0xFE5
  3560                           fsr1h	equ	0xFE2
  3561                           fsr1l	equ	0xFE1
  3562                           postinc2	equ	0xFDE
  3563                           postdec2	equ	0xFDD
  3564                           plusw2	equ	0xFDB
  3565                           fsr2h	equ	0xFDA
  3566                           fsr2l	equ	0xFD9
  3567                           status	equ	0xFD8
  3568                           
  3569 ;; *************** function ___fttol *****************
  3570 ;; Defined at:
  3571 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  f1              3    3[BANK1 ] float 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  lval            4   13[BANK1 ] unsigned long 
  3576 ;;  exp1            1   17[BANK1 ] unsigned char 
  3577 ;;  sign1           1   12[BANK1 ] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  4    3[BANK1 ] long 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3587 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;Total ram usage:       15 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    9
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_Round
  3598 ;;		_InitUART
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text15
  3603  002478                     __ptext15:
  3604                           	opt stack 0
  3605  002478                     ___fttol:
  3606                           	opt stack 19
  3607                           
  3608                           ;incstack = 0
  3609  002478  C1CB  F1CD         	movff	___fttol@f1+2,??___fttol
  3610  00247C  0101               	movlb	1	; () banked
  3611  00247E  6BCE               	clrf	(??___fttol+1)& (0+255),b
  3612  002480  6BCF               	clrf	(??___fttol+2)& (0+255),b
  3613  002482  0101               	movlb	1	; () banked
  3614  002484  35CA               	rlcf	(___fttol@f1+1)& (0+255),w,b
  3615  002486  0101               	movlb	1	; () banked
  3616  002488  37CD               	rlcf	??___fttol& (0+255),f,b
  3617  00248A  E301               	bnc	u6131
  3618  00248C  81CE               	bsf	(??___fttol+1)& (0+255),0,b
  3619  00248E                     u6131:
  3620  00248E  0101               	movlb	1	; () banked
  3621  002490  51CD               	movf	??___fttol& (0+255),w,b
  3622  002492  0101               	movlb	1	; () banked
  3623  002494  6FD7               	movwf	___fttol@exp1& (0+255),b
  3624  002496  0101               	movlb	1	; () banked
  3625  002498  51D7               	movf	___fttol@exp1& (0+255),w,b
  3626  00249A  A4D8               	btfss	status,2,c
  3627  00249C  D00A               	goto	l5876
  3628                           
  3629                           ; BSR set to: 1
  3630  00249E  0E00               	movlw	0
  3631  0024A0  0101               	movlb	1	; () banked
  3632  0024A2  6FC9               	movwf	?___fttol& (0+255),b
  3633  0024A4  0E00               	movlw	0
  3634  0024A6  6FCA               	movwf	(?___fttol+1)& (0+255),b
  3635  0024A8  0E00               	movlw	0
  3636  0024AA  6FCB               	movwf	(?___fttol+2)& (0+255),b
  3637  0024AC  0E00               	movlw	0
  3638  0024AE  6FCC               	movwf	(?___fttol+3)& (0+255),b
  3639                           
  3640                           ; BSR set to: 1
  3641  0024B0  0012               	return	
  3642  0024B2                     l5876:
  3643                           
  3644                           ; BSR set to: 1
  3645  0024B2  0E17               	movlw	23
  3646  0024B4  0101               	movlb	1	; () banked
  3647  0024B6  6FCD               	movwf	??___fttol& (0+255),b
  3648  0024B8  C1C9  F1CE         	movff	___fttol@f1,??___fttol+1
  3649  0024BC  C1CA  F1CF         	movff	___fttol@f1+1,??___fttol+2
  3650  0024C0  C1CB  F1D0         	movff	___fttol@f1+2,??___fttol+3
  3651  0024C4  0101               	movlb	1	; () banked
  3652  0024C6  29CD               	incf	??___fttol& (0+255),w,b
  3653  0024C8  0101               	movlb	1	; () banked
  3654  0024CA  6FD1               	movwf	(??___fttol+4)& (0+255),b
  3655  0024CC  D005               	goto	u6150
  3656  0024CE                     u6155:
  3657  0024CE  0101               	movlb	1	; () banked
  3658  0024D0  90D8               	bcf	status,0,c
  3659  0024D2  33D0               	rrcf	(??___fttol+3)& (0+255),f,b
  3660  0024D4  33CF               	rrcf	(??___fttol+2)& (0+255),f,b
  3661  0024D6  33CE               	rrcf	(??___fttol+1)& (0+255),f,b
  3662  0024D8                     u6150:
  3663  0024D8  0101               	movlb	1	; () banked
  3664  0024DA  2FD1               	decfsz	(??___fttol+4)& (0+255),f,b
  3665  0024DC  D7F8               	goto	u6155
  3666  0024DE  0101               	movlb	1	; () banked
  3667  0024E0  51CE               	movf	(??___fttol+1)& (0+255),w,b
  3668  0024E2  0101               	movlb	1	; () banked
  3669  0024E4  6FD2               	movwf	___fttol@sign1& (0+255),b
  3670                           
  3671                           ; BSR set to: 1
  3672  0024E6  0101               	movlb	1	; () banked
  3673  0024E8  8FCA               	bsf	(___fttol@f1+1)& (0+255),7,b
  3674                           
  3675                           ; BSR set to: 1
  3676  0024EA  0EFF               	movlw	255
  3677  0024EC  0101               	movlb	1	; () banked
  3678  0024EE  17C9               	andwf	___fttol@f1& (0+255),f,b
  3679  0024F0  0EFF               	movlw	255
  3680  0024F2  0101               	movlb	1	; () banked
  3681  0024F4  17CA               	andwf	(___fttol@f1+1)& (0+255),f,b
  3682  0024F6  0E00               	movlw	0
  3683  0024F8  0101               	movlb	1	; () banked
  3684  0024FA  17CB               	andwf	(___fttol@f1+2)& (0+255),f,b
  3685                           
  3686                           ; BSR set to: 1
  3687  0024FC  0101               	movlb	1	; () banked
  3688  0024FE  51C9               	movf	___fttol@f1& (0+255),w,b
  3689  002500  0101               	movlb	1	; () banked
  3690  002502  6FD3               	movwf	___fttol@lval& (0+255),b
  3691  002504  0101               	movlb	1	; () banked
  3692  002506  51CA               	movf	(___fttol@f1+1)& (0+255),w,b
  3693  002508  0101               	movlb	1	; () banked
  3694  00250A  6FD4               	movwf	(___fttol@lval+1)& (0+255),b
  3695  00250C  0101               	movlb	1	; () banked
  3696  00250E  51CB               	movf	(___fttol@f1+2)& (0+255),w,b
  3697  002510  0101               	movlb	1	; () banked
  3698  002512  6FD5               	movwf	(___fttol@lval+2)& (0+255),b
  3699  002514  0101               	movlb	1	; () banked
  3700  002516  6BD6               	clrf	(___fttol@lval+3)& (0+255),b
  3701                           
  3702                           ; BSR set to: 1
  3703  002518  0E8E               	movlw	142
  3704  00251A  0101               	movlb	1	; () banked
  3705  00251C  5FD7               	subwf	___fttol@exp1& (0+255),f,b
  3706                           
  3707                           ; BSR set to: 1
  3708  00251E  0101               	movlb	1	; () banked
  3709  002520  AFD7               	btfss	___fttol@exp1& (0+255),7,b
  3710  002522  D01B               	goto	l5898
  3711                           
  3712                           ; BSR set to: 1
  3713  002524  0101               	movlb	1	; () banked
  3714  002526  51D7               	movf	___fttol@exp1& (0+255),w,b
  3715  002528  0A80               	xorlw	128
  3716  00252A  0F8F               	addlw	143
  3717  00252C  B0D8               	btfsc	status,0,c
  3718  00252E  D00B               	goto	l5894
  3719                           
  3720                           ; BSR set to: 1
  3721  002530  0E00               	movlw	0
  3722  002532  0101               	movlb	1	; () banked
  3723  002534  6FC9               	movwf	?___fttol& (0+255),b
  3724  002536  0E00               	movlw	0
  3725  002538  6FCA               	movwf	(?___fttol+1)& (0+255),b
  3726  00253A  0E00               	movlw	0
  3727  00253C  6FCB               	movwf	(?___fttol+2)& (0+255),b
  3728  00253E  0E00               	movlw	0
  3729  002540  6FCC               	movwf	(?___fttol+3)& (0+255),b
  3730                           
  3731                           ; BSR set to: 1
  3732  002542  0012               	return	
  3733                           
  3734                           ; BSR set to: 1
  3735  002544  D000               	goto	l5894
  3736  002546                     l5894:
  3737                           
  3738                           ; BSR set to: 1
  3739  002546  0101               	movlb	1	; () banked
  3740  002548  90D8               	bcf	status,0,c
  3741  00254A  33D6               	rrcf	(___fttol@lval+3)& (0+255),f,b
  3742  00254C  33D5               	rrcf	(___fttol@lval+2)& (0+255),f,b
  3743  00254E  33D4               	rrcf	(___fttol@lval+1)& (0+255),f,b
  3744  002550  33D3               	rrcf	___fttol@lval& (0+255),f,b
  3745                           
  3746                           ; BSR set to: 1
  3747  002552  0101               	movlb	1	; () banked
  3748  002554  3FD7               	incfsz	___fttol@exp1& (0+255),f,b
  3749  002556  D7F7               	goto	l5894
  3750                           
  3751                           ; BSR set to: 1
  3752  002558  D01F               	goto	l5908
  3753  00255A                     l5898:
  3754                           
  3755                           ; BSR set to: 1
  3756  00255A  0E17               	movlw	23
  3757  00255C  0101               	movlb	1	; () banked
  3758  00255E  65D7               	cpfsgt	___fttol@exp1& (0+255),b
  3759  002560  D014               	goto	l5906
  3760                           
  3761                           ; BSR set to: 1
  3762  002562  0E00               	movlw	0
  3763  002564  0101               	movlb	1	; () banked
  3764  002566  6FC9               	movwf	?___fttol& (0+255),b
  3765  002568  0E00               	movlw	0
  3766  00256A  6FCA               	movwf	(?___fttol+1)& (0+255),b
  3767  00256C  0E00               	movlw	0
  3768  00256E  6FCB               	movwf	(?___fttol+2)& (0+255),b
  3769  002570  0E00               	movlw	0
  3770  002572  6FCC               	movwf	(?___fttol+3)& (0+255),b
  3771                           
  3772                           ; BSR set to: 1
  3773  002574  0012               	return	
  3774                           
  3775                           ; BSR set to: 1
  3776  002576  D009               	goto	l5906
  3777  002578                     l5904:
  3778                           
  3779                           ; BSR set to: 1
  3780  002578  0101               	movlb	1	; () banked
  3781  00257A  90D8               	bcf	status,0,c
  3782  00257C  37D3               	rlcf	___fttol@lval& (0+255),f,b
  3783  00257E  37D4               	rlcf	(___fttol@lval+1)& (0+255),f,b
  3784  002580  37D5               	rlcf	(___fttol@lval+2)& (0+255),f,b
  3785  002582  37D6               	rlcf	(___fttol@lval+3)& (0+255),f,b
  3786  002584  0101               	movlb	1	; () banked
  3787  002586  07D7               	decf	___fttol@exp1& (0+255),f,b
  3788  002588  D000               	goto	l5906
  3789  00258A                     l5906:
  3790                           
  3791                           ; BSR set to: 1
  3792  00258A  0101               	movlb	1	; () banked
  3793  00258C  51D7               	movf	___fttol@exp1& (0+255),w,b
  3794  00258E  0101               	movlb	1	; () banked
  3795  002590  B4D8               	btfsc	status,2,c
  3796  002592  D002               	goto	l5908
  3797  002594  D7F1               	goto	l5904
  3798                           
  3799                           ; BSR set to: 1
  3800  002596  D000               	goto	l5908
  3801  002598                     l5908:
  3802                           
  3803                           ; BSR set to: 1
  3804  002598  0101               	movlb	1	; () banked
  3805  00259A  51D2               	movf	___fttol@sign1& (0+255),w,b
  3806  00259C  0101               	movlb	1	; () banked
  3807  00259E  B4D8               	btfsc	status,2,c
  3808  0025A0  D00A               	goto	l5912
  3809                           
  3810                           ; BSR set to: 1
  3811  0025A2  0101               	movlb	1	; () banked
  3812  0025A4  1FD6               	comf	(___fttol@lval+3)& (0+255),f,b
  3813  0025A6  1FD5               	comf	(___fttol@lval+2)& (0+255),f,b
  3814  0025A8  1FD4               	comf	(___fttol@lval+1)& (0+255),f,b
  3815  0025AA  6DD3               	negf	___fttol@lval& (0+255),b
  3816  0025AC  0E00               	movlw	0
  3817  0025AE  23D4               	addwfc	(___fttol@lval+1)& (0+255),f,b
  3818  0025B0  23D5               	addwfc	(___fttol@lval+2)& (0+255),f,b
  3819  0025B2  23D6               	addwfc	(___fttol@lval+3)& (0+255),f,b
  3820  0025B4  D000               	goto	l5912
  3821  0025B6                     l5912:
  3822                           
  3823                           ; BSR set to: 1
  3824  0025B6  C1D3  F1C9         	movff	___fttol@lval,?___fttol
  3825  0025BA  C1D4  F1CA         	movff	___fttol@lval+1,?___fttol+1
  3826  0025BE  C1D5  F1CB         	movff	___fttol@lval+2,?___fttol+2
  3827  0025C2  C1D6  F1CC         	movff	___fttol@lval+3,?___fttol+3
  3828  0025C6  0012               	return	
  3829                           
  3830                           ; BSR set to: 1
  3831                           
  3832                           ; BSR set to: 1
  3833  0025C8  0012               	return		;funcret
  3834  0025CA                     __end_of___fttol:
  3835                           	opt stack 0
  3836                           tblptru	equ	0xFF8
  3837                           tblptrh	equ	0xFF7
  3838                           tblptrl	equ	0xFF6
  3839                           tablat	equ	0xFF5
  3840                           intcon	equ	0xFF2
  3841                           intcon2	equ	0xFF1
  3842                           postinc0	equ	0xFEE
  3843                           plusw0	equ	0xFEB
  3844                           wreg	equ	0xFE8
  3845                           postdec1	equ	0xFE5
  3846                           fsr1h	equ	0xFE2
  3847                           fsr1l	equ	0xFE1
  3848                           postinc2	equ	0xFDE
  3849                           postdec2	equ	0xFDD
  3850                           plusw2	equ	0xFDB
  3851                           fsr2h	equ	0xFDA
  3852                           fsr2l	equ	0xFD9
  3853                           status	equ	0xFD8
  3854                           
  3855 ;; *************** function ___ftadd *****************
  3856 ;; Defined at:
  3857 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  f1              3   52[BANK0 ] float 
  3860 ;;  f2              3   55[BANK0 ] float 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  exp1            1    2[BANK1 ] unsigned char 
  3863 ;;  exp2            1    1[BANK1 ] unsigned char 
  3864 ;;  sign            1    0[BANK1 ] unsigned char 
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  3   52[BANK0 ] float 
  3867 ;; Registers used:
  3868 ;;		wreg, status,2, status,0, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3874 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Totals:         0       9       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;Total ram usage:       12 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; Hardware stack levels required when called:   10
  3881 ;; This function calls:
  3882 ;;		___ftpack
  3883 ;; This function is called by:
  3884 ;;		_Round
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text16
  3889  001B88                     __ptext16:
  3890                           	opt stack 0
  3891  001B88                     ___ftadd:
  3892                           	opt stack 17
  3893                           
  3894                           ; BSR set to: 1
  3895                           ;incstack = 0
  3896  001B88  C096  F09A         	movff	___ftadd@f1+2,??___ftadd
  3897  001B8C  0100               	movlb	0	; () banked
  3898  001B8E  6B9B               	clrf	(??___ftadd+1)& (0+255),b
  3899  001B90  6B9C               	clrf	(??___ftadd+2)& (0+255),b
  3900  001B92  0100               	movlb	0	; () banked
  3901  001B94  3595               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  3902  001B96  0100               	movlb	0	; () banked
  3903  001B98  379A               	rlcf	??___ftadd& (0+255),f,b
  3904  001B9A  E301               	bnc	u5921
  3905  001B9C  819B               	bsf	(??___ftadd+1)& (0+255),0,b
  3906  001B9E                     u5921:
  3907  001B9E  0100               	movlb	0	; () banked
  3908  001BA0  519A               	movf	??___ftadd& (0+255),w,b
  3909  001BA2  0101               	movlb	1	; () banked
  3910  001BA4  6FC8               	movwf	___ftadd@exp1& (0+255),b
  3911  001BA6  C099  F09A         	movff	___ftadd@f2+2,??___ftadd
  3912  001BAA  0100               	movlb	0	; () banked
  3913  001BAC  6B9B               	clrf	(??___ftadd+1)& (0+255),b
  3914  001BAE  6B9C               	clrf	(??___ftadd+2)& (0+255),b
  3915  001BB0  0100               	movlb	0	; () banked
  3916  001BB2  3598               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  3917  001BB4  0100               	movlb	0	; () banked
  3918  001BB6  379A               	rlcf	??___ftadd& (0+255),f,b
  3919  001BB8  E301               	bnc	u5931
  3920  001BBA  819B               	bsf	(??___ftadd+1)& (0+255),0,b
  3921  001BBC                     u5931:
  3922  001BBC  0100               	movlb	0	; () banked
  3923  001BBE  519A               	movf	??___ftadd& (0+255),w,b
  3924  001BC0  0101               	movlb	1	; () banked
  3925  001BC2  6FC7               	movwf	___ftadd@exp2& (0+255),b
  3926                           
  3927                           ; BSR set to: 1
  3928  001BC4  0101               	movlb	1	; () banked
  3929  001BC6  51C8               	movf	___ftadd@exp1& (0+255),w,b
  3930  001BC8  0101               	movlb	1	; () banked
  3931  001BCA  B4D8               	btfsc	status,2,c
  3932  001BCC  D011               	goto	l1243
  3933                           
  3934                           ; BSR set to: 1
  3935  001BCE  0101               	movlb	1	; () banked
  3936  001BD0  51C7               	movf	___ftadd@exp2& (0+255),w,b
  3937  001BD2  0101               	movlb	1	; () banked
  3938  001BD4  5DC8               	subwf	___ftadd@exp1& (0+255),w,b
  3939  001BD6  B0D8               	btfsc	status,0,c
  3940  001BD8  D012               	goto	l5808
  3941                           
  3942                           ; BSR set to: 1
  3943  001BDA  0101               	movlb	1	; () banked
  3944  001BDC  51C8               	movf	___ftadd@exp1& (0+255),w,b
  3945  001BDE  0800               	sublw	0
  3946  001BE0  0101               	movlb	1	; () banked
  3947  001BE2  25C7               	addwf	___ftadd@exp2& (0+255),w,b
  3948  001BE4  0100               	movlb	0	; () banked
  3949  001BE6  6F9A               	movwf	??___ftadd& (0+255),b
  3950  001BE8  0E18               	movlw	24
  3951  001BEA  0100               	movlb	0	; () banked
  3952  001BEC  659A               	cpfsgt	??___ftadd& (0+255),b
  3953  001BEE  D007               	goto	l5808
  3954  001BF0                     l1243:
  3955  001BF0  C097  F094         	movff	___ftadd@f2,?___ftadd
  3956  001BF4  C098  F095         	movff	___ftadd@f2+1,?___ftadd+1
  3957  001BF8  C099  F096         	movff	___ftadd@f2+2,?___ftadd+2
  3958  001BFC  0012               	return	
  3959  001BFE                     l5808:
  3960  001BFE  0101               	movlb	1	; () banked
  3961  001C00  51C7               	movf	___ftadd@exp2& (0+255),w,b
  3962  001C02  0101               	movlb	1	; () banked
  3963  001C04  B4D8               	btfsc	status,2,c
  3964  001C06  D011               	goto	l1247
  3965                           
  3966                           ; BSR set to: 1
  3967  001C08  0101               	movlb	1	; () banked
  3968  001C0A  51C8               	movf	___ftadd@exp1& (0+255),w,b
  3969  001C0C  0101               	movlb	1	; () banked
  3970  001C0E  5DC7               	subwf	___ftadd@exp2& (0+255),w,b
  3971  001C10  B0D8               	btfsc	status,0,c
  3972  001C12  D012               	goto	l5814
  3973                           
  3974                           ; BSR set to: 1
  3975  001C14  0101               	movlb	1	; () banked
  3976  001C16  51C7               	movf	___ftadd@exp2& (0+255),w,b
  3977  001C18  0800               	sublw	0
  3978  001C1A  0101               	movlb	1	; () banked
  3979  001C1C  25C8               	addwf	___ftadd@exp1& (0+255),w,b
  3980  001C1E  0100               	movlb	0	; () banked
  3981  001C20  6F9A               	movwf	??___ftadd& (0+255),b
  3982  001C22  0E18               	movlw	24
  3983  001C24  0100               	movlb	0	; () banked
  3984  001C26  659A               	cpfsgt	??___ftadd& (0+255),b
  3985  001C28  D007               	goto	l5814
  3986  001C2A                     l1247:
  3987  001C2A  C094  F094         	movff	___ftadd@f1,?___ftadd
  3988  001C2E  C095  F095         	movff	___ftadd@f1+1,?___ftadd+1
  3989  001C32  C096  F096         	movff	___ftadd@f1+2,?___ftadd+2
  3990  001C36  0012               	return	
  3991  001C38                     l5814:
  3992  001C38  0E06               	movlw	6
  3993  001C3A  0101               	movlb	1	; () banked
  3994  001C3C  6FC6               	movwf	___ftadd@sign& (0+255),b
  3995                           
  3996                           ; BSR set to: 1
  3997  001C3E  0100               	movlb	0	; () banked
  3998  001C40  AF96               	btfss	(___ftadd@f1+2)& (0+255),7,b
  3999  001C42  D003               	goto	l5820
  4000                           
  4001                           ; BSR set to: 0
  4002  001C44  0101               	movlb	1	; () banked
  4003  001C46  8FC6               	bsf	___ftadd@sign& (0+255),7,b
  4004  001C48  D000               	goto	l5820
  4005  001C4A                     l5820:
  4006  001C4A  0100               	movlb	0	; () banked
  4007  001C4C  AF99               	btfss	(___ftadd@f2+2)& (0+255),7,b
  4008  001C4E  D002               	goto	l1249
  4009                           
  4010                           ; BSR set to: 0
  4011  001C50  0101               	movlb	1	; () banked
  4012  001C52  8DC6               	bsf	___ftadd@sign& (0+255),6,b
  4013  001C54                     l1249:
  4014  001C54  0100               	movlb	0	; () banked
  4015  001C56  8F95               	bsf	(___ftadd@f1+1)& (0+255),7,b
  4016                           
  4017                           ; BSR set to: 0
  4018  001C58  0EFF               	movlw	255
  4019  001C5A  0100               	movlb	0	; () banked
  4020  001C5C  1794               	andwf	___ftadd@f1& (0+255),f,b
  4021  001C5E  0EFF               	movlw	255
  4022  001C60  0100               	movlb	0	; () banked
  4023  001C62  1795               	andwf	(___ftadd@f1+1)& (0+255),f,b
  4024  001C64  0E00               	movlw	0
  4025  001C66  0100               	movlb	0	; () banked
  4026  001C68  1796               	andwf	(___ftadd@f1+2)& (0+255),f,b
  4027  001C6A  0100               	movlb	0	; () banked
  4028  001C6C  8F98               	bsf	(___ftadd@f2+1)& (0+255),7,b
  4029                           
  4030                           ; BSR set to: 0
  4031  001C6E  0EFF               	movlw	255
  4032  001C70  0100               	movlb	0	; () banked
  4033  001C72  1797               	andwf	___ftadd@f2& (0+255),f,b
  4034  001C74  0EFF               	movlw	255
  4035  001C76  0100               	movlb	0	; () banked
  4036  001C78  1798               	andwf	(___ftadd@f2+1)& (0+255),f,b
  4037  001C7A  0E00               	movlw	0
  4038  001C7C  0100               	movlb	0	; () banked
  4039  001C7E  1799               	andwf	(___ftadd@f2+2)& (0+255),f,b
  4040                           
  4041                           ; BSR set to: 0
  4042  001C80  0101               	movlb	1	; () banked
  4043  001C82  51C7               	movf	___ftadd@exp2& (0+255),w,b
  4044  001C84  0101               	movlb	1	; () banked
  4045  001C86  5DC8               	subwf	___ftadd@exp1& (0+255),w,b
  4046  001C88  B0D8               	btfsc	status,0,c
  4047  001C8A  D028               	goto	l5840
  4048  001C8C                     l5830:
  4049  001C8C  0100               	movlb	0	; () banked
  4050  001C8E  90D8               	bcf	status,0,c
  4051  001C90  3797               	rlcf	___ftadd@f2& (0+255),f,b
  4052  001C92  3798               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  4053  001C94  3799               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  4054  001C96  0101               	movlb	1	; () banked
  4055  001C98  07C7               	decf	___ftadd@exp2& (0+255),f,b
  4056                           
  4057                           ; BSR set to: 1
  4058  001C9A  0101               	movlb	1	; () banked
  4059  001C9C  51C8               	movf	___ftadd@exp1& (0+255),w,b
  4060  001C9E  0101               	movlb	1	; () banked
  4061  001CA0  19C7               	xorwf	___ftadd@exp2& (0+255),w,b
  4062  001CA2  B4D8               	btfsc	status,2,c
  4063  001CA4  D013               	goto	l5838
  4064                           
  4065                           ; BSR set to: 1
  4066  001CA6  0101               	movlb	1	; () banked
  4067  001CA8  07C6               	decf	___ftadd@sign& (0+255),f,b
  4068  001CAA  C1C6  F09A         	movff	___ftadd@sign,??___ftadd
  4069  001CAE  0E07               	movlw	7
  4070  001CB0  0100               	movlb	0	; () banked
  4071  001CB2  179A               	andwf	??___ftadd& (0+255),f,b
  4072  001CB4  B4D8               	btfsc	status,2,c
  4073  001CB6  D00A               	goto	l5838
  4074  001CB8  D7E9               	goto	l5830
  4075                           
  4076                           ; BSR set to: 0
  4077                           
  4078                           ; BSR set to: 0
  4079  001CBA  D008               	goto	l5838
  4080  001CBC                     l5836:
  4081  001CBC  0100               	movlb	0	; () banked
  4082  001CBE  90D8               	bcf	status,0,c
  4083  001CC0  3396               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  4084  001CC2  3395               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  4085  001CC4  3394               	rrcf	___ftadd@f1& (0+255),f,b
  4086  001CC6  0101               	movlb	1	; () banked
  4087  001CC8  2BC8               	incf	___ftadd@exp1& (0+255),f,b
  4088  001CCA  D000               	goto	l5838
  4089  001CCC                     l5838:
  4090  001CCC  0101               	movlb	1	; () banked
  4091  001CCE  51C7               	movf	___ftadd@exp2& (0+255),w,b
  4092  001CD0  0101               	movlb	1	; () banked
  4093  001CD2  19C8               	xorwf	___ftadd@exp1& (0+255),w,b
  4094  001CD4  B4D8               	btfsc	status,2,c
  4095  001CD6  D030               	goto	l1258
  4096  001CD8  D7F1               	goto	l5836
  4097                           
  4098                           ; BSR set to: 1
  4099  001CDA  D02E               	goto	l1258
  4100  001CDC                     l5840:
  4101                           
  4102                           ; BSR set to: 1
  4103  001CDC  0101               	movlb	1	; () banked
  4104  001CDE  51C8               	movf	___ftadd@exp1& (0+255),w,b
  4105  001CE0  0101               	movlb	1	; () banked
  4106  001CE2  5DC7               	subwf	___ftadd@exp2& (0+255),w,b
  4107  001CE4  B0D8               	btfsc	status,0,c
  4108  001CE6  D028               	goto	l1258
  4109  001CE8                     l5842:
  4110  001CE8  0100               	movlb	0	; () banked
  4111  001CEA  90D8               	bcf	status,0,c
  4112  001CEC  3794               	rlcf	___ftadd@f1& (0+255),f,b
  4113  001CEE  3795               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  4114  001CF0  3796               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  4115  001CF2  0101               	movlb	1	; () banked
  4116  001CF4  07C8               	decf	___ftadd@exp1& (0+255),f,b
  4117                           
  4118                           ; BSR set to: 1
  4119  001CF6  0101               	movlb	1	; () banked
  4120  001CF8  51C8               	movf	___ftadd@exp1& (0+255),w,b
  4121  001CFA  0101               	movlb	1	; () banked
  4122  001CFC  19C7               	xorwf	___ftadd@exp2& (0+255),w,b
  4123  001CFE  B4D8               	btfsc	status,2,c
  4124  001D00  D013               	goto	l5850
  4125                           
  4126                           ; BSR set to: 1
  4127  001D02  0101               	movlb	1	; () banked
  4128  001D04  07C6               	decf	___ftadd@sign& (0+255),f,b
  4129  001D06  C1C6  F09A         	movff	___ftadd@sign,??___ftadd
  4130  001D0A  0E07               	movlw	7
  4131  001D0C  0100               	movlb	0	; () banked
  4132  001D0E  179A               	andwf	??___ftadd& (0+255),f,b
  4133  001D10  B4D8               	btfsc	status,2,c
  4134  001D12  D00A               	goto	l5850
  4135  001D14  D7E9               	goto	l5842
  4136                           
  4137                           ; BSR set to: 0
  4138                           
  4139                           ; BSR set to: 0
  4140  001D16  D008               	goto	l5850
  4141  001D18                     l5848:
  4142  001D18  0100               	movlb	0	; () banked
  4143  001D1A  90D8               	bcf	status,0,c
  4144  001D1C  3399               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  4145  001D1E  3398               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  4146  001D20  3397               	rrcf	___ftadd@f2& (0+255),f,b
  4147  001D22  0101               	movlb	1	; () banked
  4148  001D24  2BC7               	incf	___ftadd@exp2& (0+255),f,b
  4149  001D26  D000               	goto	l5850
  4150  001D28                     l5850:
  4151  001D28  0101               	movlb	1	; () banked
  4152  001D2A  51C7               	movf	___ftadd@exp2& (0+255),w,b
  4153  001D2C  0101               	movlb	1	; () banked
  4154  001D2E  19C8               	xorwf	___ftadd@exp1& (0+255),w,b
  4155  001D30  B4D8               	btfsc	status,2,c
  4156  001D32  D002               	goto	l1258
  4157  001D34  D7F1               	goto	l5848
  4158                           
  4159                           ; BSR set to: 1
  4160  001D36  D000               	goto	l1258
  4161  001D38                     l1258:
  4162                           
  4163                           ; BSR set to: 1
  4164  001D38  0101               	movlb	1	; () banked
  4165  001D3A  AFC6               	btfss	___ftadd@sign& (0+255),7,b
  4166  001D3C  D012               	goto	l1267
  4167                           
  4168                           ; BSR set to: 1
  4169  001D3E  0EFF               	movlw	255
  4170  001D40  0100               	movlb	0	; () banked
  4171  001D42  1B94               	xorwf	___ftadd@f1& (0+255),f,b
  4172  001D44  0EFF               	movlw	255
  4173  001D46  0100               	movlb	0	; () banked
  4174  001D48  1B95               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  4175  001D4A  0EFF               	movlw	255
  4176  001D4C  0100               	movlb	0	; () banked
  4177  001D4E  1B96               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  4178  001D50  0E01               	movlw	1
  4179  001D52  0100               	movlb	0	; () banked
  4180  001D54  2794               	addwf	___ftadd@f1& (0+255),f,b
  4181  001D56  0E00               	movlw	0
  4182  001D58  0100               	movlb	0	; () banked
  4183  001D5A  2395               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  4184  001D5C  0E00               	movlw	0
  4185  001D5E  0100               	movlb	0	; () banked
  4186  001D60  2396               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  4187  001D62                     l1267:
  4188  001D62  0101               	movlb	1	; () banked
  4189  001D64  ADC6               	btfss	___ftadd@sign& (0+255),6,b
  4190  001D66  D013               	goto	l5856
  4191                           
  4192                           ; BSR set to: 1
  4193  001D68  0EFF               	movlw	255
  4194  001D6A  0100               	movlb	0	; () banked
  4195  001D6C  1B97               	xorwf	___ftadd@f2& (0+255),f,b
  4196  001D6E  0EFF               	movlw	255
  4197  001D70  0100               	movlb	0	; () banked
  4198  001D72  1B98               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  4199  001D74  0EFF               	movlw	255
  4200  001D76  0100               	movlb	0	; () banked
  4201  001D78  1B99               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  4202  001D7A  0E01               	movlw	1
  4203  001D7C  0100               	movlb	0	; () banked
  4204  001D7E  2797               	addwf	___ftadd@f2& (0+255),f,b
  4205  001D80  0E00               	movlw	0
  4206  001D82  0100               	movlb	0	; () banked
  4207  001D84  2398               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4208  001D86  0E00               	movlw	0
  4209  001D88  0100               	movlb	0	; () banked
  4210  001D8A  2399               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4211  001D8C  D000               	goto	l5856
  4212  001D8E                     l5856:
  4213  001D8E  0E00               	movlw	0
  4214  001D90  0101               	movlb	1	; () banked
  4215  001D92  6FC6               	movwf	___ftadd@sign& (0+255),b
  4216                           
  4217                           ; BSR set to: 1
  4218  001D94  0100               	movlb	0	; () banked
  4219  001D96  5194               	movf	___ftadd@f1& (0+255),w,b
  4220  001D98  0100               	movlb	0	; () banked
  4221  001D9A  2797               	addwf	___ftadd@f2& (0+255),f,b
  4222  001D9C  0100               	movlb	0	; () banked
  4223  001D9E  5195               	movf	(___ftadd@f1+1)& (0+255),w,b
  4224  001DA0  0100               	movlb	0	; () banked
  4225  001DA2  2398               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4226  001DA4  0100               	movlb	0	; () banked
  4227  001DA6  5196               	movf	(___ftadd@f1+2)& (0+255),w,b
  4228  001DA8  0100               	movlb	0	; () banked
  4229  001DAA  2399               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4230                           
  4231                           ; BSR set to: 0
  4232  001DAC  0100               	movlb	0	; () banked
  4233  001DAE  AF99               	btfss	(___ftadd@f2+2)& (0+255),7,b
  4234  001DB0  D016               	goto	l5866
  4235                           
  4236                           ; BSR set to: 0
  4237  001DB2  0EFF               	movlw	255
  4238  001DB4  0100               	movlb	0	; () banked
  4239  001DB6  1B97               	xorwf	___ftadd@f2& (0+255),f,b
  4240  001DB8  0EFF               	movlw	255
  4241  001DBA  0100               	movlb	0	; () banked
  4242  001DBC  1B98               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  4243  001DBE  0EFF               	movlw	255
  4244  001DC0  0100               	movlb	0	; () banked
  4245  001DC2  1B99               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  4246  001DC4  0E01               	movlw	1
  4247  001DC6  0100               	movlb	0	; () banked
  4248  001DC8  2797               	addwf	___ftadd@f2& (0+255),f,b
  4249  001DCA  0E00               	movlw	0
  4250  001DCC  0100               	movlb	0	; () banked
  4251  001DCE  2398               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4252  001DD0  0E00               	movlw	0
  4253  001DD2  0100               	movlb	0	; () banked
  4254  001DD4  2399               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4255                           
  4256                           ; BSR set to: 0
  4257  001DD6  0E01               	movlw	1
  4258  001DD8  0101               	movlb	1	; () banked
  4259  001DDA  6FC6               	movwf	___ftadd@sign& (0+255),b
  4260  001DDC  D000               	goto	l5866
  4261  001DDE                     l5866:
  4262  001DDE  C097  F08C         	movff	___ftadd@f2,___ftpack@arg
  4263  001DE2  C098  F08D         	movff	___ftadd@f2+1,___ftpack@arg+1
  4264  001DE6  C099  F08E         	movff	___ftadd@f2+2,___ftpack@arg+2
  4265  001DEA  C1C8  F08F         	movff	___ftadd@exp1,___ftpack@exp
  4266  001DEE  C1C6  F090         	movff	___ftadd@sign,___ftpack@sign
  4267  001DF2  EC88  F013         	call	___ftpack	;wreg free
  4268  001DF6  C08C  F094         	movff	?___ftpack,?___ftadd
  4269  001DFA  C08D  F095         	movff	?___ftpack+1,?___ftadd+1
  4270  001DFE  C08E  F096         	movff	?___ftpack+2,?___ftadd+2
  4271  001E02  0012               	return	
  4272  001E04  0012               	return		;funcret
  4273  001E06                     __end_of___ftadd:
  4274                           	opt stack 0
  4275                           tblptru	equ	0xFF8
  4276                           tblptrh	equ	0xFF7
  4277                           tblptrl	equ	0xFF6
  4278                           tablat	equ	0xFF5
  4279                           intcon	equ	0xFF2
  4280                           intcon2	equ	0xFF1
  4281                           postinc0	equ	0xFEE
  4282                           plusw0	equ	0xFEB
  4283                           wreg	equ	0xFE8
  4284                           postdec1	equ	0xFE5
  4285                           fsr1h	equ	0xFE2
  4286                           fsr1l	equ	0xFE1
  4287                           postinc2	equ	0xFDE
  4288                           postdec2	equ	0xFDD
  4289                           plusw2	equ	0xFDB
  4290                           fsr2h	equ	0xFDA
  4291                           fsr2l	equ	0xFD9
  4292                           status	equ	0xFD8
  4293                           
  4294 ;; *************** function ___altoft *****************
  4295 ;; Defined at:
  4296 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  c               4   52[BANK0 ] long 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  sign            1   61[BANK0 ] unsigned char 
  4301 ;;  exp             1   60[BANK0 ] unsigned char 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  3   52[BANK0 ] float 
  4304 ;; Registers used:
  4305 ;;		wreg, status,2, status,0, cstack
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4311 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;Total ram usage:       10 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:   10
  4318 ;; This function calls:
  4319 ;;		___ftpack
  4320 ;; This function is called by:
  4321 ;;		_Round
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text17
  4326  003264                     __ptext17:
  4327                           	opt stack 0
  4328  003264                     ___altoft:
  4329                           	opt stack 17
  4330                           
  4331                           ;incstack = 0
  4332  003264  0E00               	movlw	0
  4333  003266  0100               	movlb	0	; () banked
  4334  003268  6F9D               	movwf	___altoft@sign& (0+255),b
  4335  00326A  0E8E               	movlw	142
  4336  00326C  0100               	movlb	0	; () banked
  4337  00326E  6F9C               	movwf	___altoft@exp& (0+255),b
  4338                           
  4339                           ; BSR set to: 0
  4340  003270  0100               	movlb	0	; () banked
  4341  003272  AF97               	btfss	(___altoft@c+3)& (0+255),7,b
  4342  003274  D016               	goto	l5794
  4343                           
  4344                           ; BSR set to: 0
  4345  003276  0100               	movlb	0	; () banked
  4346  003278  1F97               	comf	(___altoft@c+3)& (0+255),f,b
  4347  00327A  1F96               	comf	(___altoft@c+2)& (0+255),f,b
  4348  00327C  1F95               	comf	(___altoft@c+1)& (0+255),f,b
  4349  00327E  6D94               	negf	___altoft@c& (0+255),b
  4350  003280  0E00               	movlw	0
  4351  003282  2395               	addwfc	(___altoft@c+1)& (0+255),f,b
  4352  003284  2396               	addwfc	(___altoft@c+2)& (0+255),f,b
  4353  003286  2397               	addwfc	(___altoft@c+3)& (0+255),f,b
  4354                           
  4355                           ; BSR set to: 0
  4356  003288  0E01               	movlw	1
  4357  00328A  0100               	movlb	0	; () banked
  4358  00328C  6F9D               	movwf	___altoft@sign& (0+255),b
  4359                           
  4360                           ; BSR set to: 0
  4361  00328E  D009               	goto	l5794
  4362  003290                     l5792:
  4363                           
  4364                           ; BSR set to: 0
  4365  003290  0100               	movlb	0	; () banked
  4366  003292  90D8               	bcf	status,0,c
  4367  003294  3397               	rrcf	(___altoft@c+3)& (0+255),f,b
  4368  003296  3396               	rrcf	(___altoft@c+2)& (0+255),f,b
  4369  003298  3395               	rrcf	(___altoft@c+1)& (0+255),f,b
  4370  00329A  3394               	rrcf	___altoft@c& (0+255),f,b
  4371  00329C  0100               	movlb	0	; () banked
  4372  00329E  2B9C               	incf	___altoft@exp& (0+255),f,b
  4373  0032A0  D000               	goto	l5794
  4374  0032A2                     l5794:
  4375                           
  4376                           ; BSR set to: 0
  4377  0032A2  0E00               	movlw	0
  4378  0032A4  0100               	movlb	0	; () banked
  4379  0032A6  1594               	andwf	___altoft@c& (0+255),w,b
  4380  0032A8  0100               	movlb	0	; () banked
  4381  0032AA  6F98               	movwf	??___altoft& (0+255),b
  4382  0032AC  0E00               	movlw	0
  4383  0032AE  0100               	movlb	0	; () banked
  4384  0032B0  1595               	andwf	(___altoft@c+1)& (0+255),w,b
  4385  0032B2  0100               	movlb	0	; () banked
  4386  0032B4  6F99               	movwf	(??___altoft+1)& (0+255),b
  4387  0032B6  0E00               	movlw	0
  4388  0032B8  0100               	movlb	0	; () banked
  4389  0032BA  1596               	andwf	(___altoft@c+2)& (0+255),w,b
  4390  0032BC  0100               	movlb	0	; () banked
  4391  0032BE  6F9A               	movwf	(??___altoft+2)& (0+255),b
  4392  0032C0  0EFF               	movlw	255
  4393  0032C2  0100               	movlb	0	; () banked
  4394  0032C4  1597               	andwf	(___altoft@c+3)& (0+255),w,b
  4395  0032C6  0100               	movlb	0	; () banked
  4396  0032C8  6F9B               	movwf	(??___altoft+3)& (0+255),b
  4397  0032CA  0100               	movlb	0	; () banked
  4398  0032CC  5198               	movf	??___altoft& (0+255),w,b
  4399  0032CE  0100               	movlb	0	; () banked
  4400  0032D0  1199               	iorwf	(??___altoft+1)& (0+255),w,b
  4401  0032D2  0100               	movlb	0	; () banked
  4402  0032D4  119A               	iorwf	(??___altoft+2)& (0+255),w,b
  4403  0032D6  0100               	movlb	0	; () banked
  4404  0032D8  119B               	iorwf	(??___altoft+3)& (0+255),w,b
  4405  0032DA  A4D8               	btfss	status,2,c
  4406  0032DC  D7D9               	goto	l5792
  4407                           
  4408                           ; BSR set to: 0
  4409                           
  4410                           ; BSR set to: 0
  4411  0032DE  C094  F08C         	movff	___altoft@c,___ftpack@arg
  4412  0032E2  C095  F08D         	movff	___altoft@c+1,___ftpack@arg+1
  4413  0032E6  C096  F08E         	movff	___altoft@c+2,___ftpack@arg+2
  4414  0032EA  C09C  F08F         	movff	___altoft@exp,___ftpack@exp
  4415  0032EE  C09D  F090         	movff	___altoft@sign,___ftpack@sign
  4416  0032F2  EC88  F013         	call	___ftpack	;wreg free
  4417  0032F6  C08C  F094         	movff	?___ftpack,?___altoft
  4418  0032FA  C08D  F095         	movff	?___ftpack+1,?___altoft+1
  4419  0032FE  C08E  F096         	movff	?___ftpack+2,?___altoft+2
  4420  003302  0012               	return	
  4421  003304  0012               	return		;funcret
  4422  003306                     __end_of___altoft:
  4423                           	opt stack 0
  4424                           tblptru	equ	0xFF8
  4425                           tblptrh	equ	0xFF7
  4426                           tblptrl	equ	0xFF6
  4427                           tablat	equ	0xFF5
  4428                           intcon	equ	0xFF2
  4429                           intcon2	equ	0xFF1
  4430                           postinc0	equ	0xFEE
  4431                           plusw0	equ	0xFEB
  4432                           wreg	equ	0xFE8
  4433                           postdec1	equ	0xFE5
  4434                           fsr1h	equ	0xFE2
  4435                           fsr1l	equ	0xFE1
  4436                           postinc2	equ	0xFDE
  4437                           postdec2	equ	0xFDD
  4438                           plusw2	equ	0xFDB
  4439                           fsr2h	equ	0xFDA
  4440                           fsr2l	equ	0xFD9
  4441                           status	equ	0xFD8
  4442                           
  4443 ;; *************** function ___ftpack *****************
  4444 ;; Defined at:
  4445 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  arg             3   44[BANK0 ] unsigned um
  4448 ;;  exp             1   47[BANK0 ] unsigned char 
  4449 ;;  sign            1   48[BANK0 ] unsigned char 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  3   44[BANK0 ] float 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4461 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;Total ram usage:        8 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    9
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		___altoft
  4472 ;;		___ftadd
  4473 ;;		___ftdiv
  4474 ;;		___ftmul
  4475 ;;		___lltoft
  4476 ;;		___lwtoft
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text18
  4481  002710                     __ptext18:
  4482                           	opt stack 0
  4483  002710                     ___ftpack:
  4484                           	opt stack 19
  4485                           
  4486                           ;incstack = 0
  4487  002710  0100               	movlb	0	; () banked
  4488  002712  518F               	movf	___ftpack@exp& (0+255),w,b
  4489  002714  0100               	movlb	0	; () banked
  4490  002716  B4D8               	btfsc	status,2,c
  4491  002718  D008               	goto	l5554
  4492                           
  4493                           ; BSR set to: 0
  4494  00271A  0100               	movlb	0	; () banked
  4495  00271C  518C               	movf	___ftpack@arg& (0+255),w,b
  4496  00271E  0100               	movlb	0	; () banked
  4497  002720  118D               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  4498  002722  0100               	movlb	0	; () banked
  4499  002724  118E               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  4500  002726  A4D8               	btfss	status,2,c
  4501  002728  D013               	goto	l5560
  4502  00272A                     l5554:
  4503                           
  4504                           ; BSR set to: 0
  4505  00272A  0E00               	movlw	0
  4506  00272C  0100               	movlb	0	; () banked
  4507  00272E  6F8C               	movwf	?___ftpack& (0+255),b
  4508  002730  0E00               	movlw	0
  4509  002732  0100               	movlb	0	; () banked
  4510  002734  6F8D               	movwf	(?___ftpack+1)& (0+255),b
  4511  002736  0E00               	movlw	0
  4512  002738  0100               	movlb	0	; () banked
  4513  00273A  6F8E               	movwf	(?___ftpack+2)& (0+255),b
  4514                           
  4515                           ; BSR set to: 0
  4516  00273C  0012               	return	
  4517                           
  4518                           ; BSR set to: 0
  4519  00273E  D008               	goto	l5560
  4520  002740                     l5558:
  4521                           
  4522                           ; BSR set to: 0
  4523  002740  0100               	movlb	0	; () banked
  4524  002742  2B8F               	incf	___ftpack@exp& (0+255),f,b
  4525  002744  0100               	movlb	0	; () banked
  4526  002746  90D8               	bcf	status,0,c
  4527  002748  338E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4528  00274A  338D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4529  00274C  338C               	rrcf	___ftpack@arg& (0+255),f,b
  4530  00274E  D000               	goto	l5560
  4531  002750                     l5560:
  4532                           
  4533                           ; BSR set to: 0
  4534  002750  0E00               	movlw	0
  4535  002752  0100               	movlb	0	; () banked
  4536  002754  158C               	andwf	___ftpack@arg& (0+255),w,b
  4537  002756  0100               	movlb	0	; () banked
  4538  002758  6F91               	movwf	??___ftpack& (0+255),b
  4539  00275A  0E00               	movlw	0
  4540  00275C  0100               	movlb	0	; () banked
  4541  00275E  158D               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4542  002760  0100               	movlb	0	; () banked
  4543  002762  6F92               	movwf	(??___ftpack+1)& (0+255),b
  4544  002764  0EFE               	movlw	254
  4545  002766  0100               	movlb	0	; () banked
  4546  002768  158E               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4547  00276A  0100               	movlb	0	; () banked
  4548  00276C  6F93               	movwf	(??___ftpack+2)& (0+255),b
  4549  00276E  0100               	movlb	0	; () banked
  4550  002770  5191               	movf	??___ftpack& (0+255),w,b
  4551  002772  0100               	movlb	0	; () banked
  4552  002774  1192               	iorwf	(??___ftpack+1)& (0+255),w,b
  4553  002776  0100               	movlb	0	; () banked
  4554  002778  1193               	iorwf	(??___ftpack+2)& (0+255),w,b
  4555  00277A  B4D8               	btfsc	status,2,c
  4556  00277C  D013               	goto	l5566
  4557  00277E  D7E0               	goto	l5558
  4558                           
  4559                           ; BSR set to: 0
  4560  002780  D011               	goto	l5566
  4561  002782                     l5562:
  4562                           
  4563                           ; BSR set to: 0
  4564  002782  0100               	movlb	0	; () banked
  4565  002784  2B8F               	incf	___ftpack@exp& (0+255),f,b
  4566                           
  4567                           ; BSR set to: 0
  4568  002786  0E01               	movlw	1
  4569  002788  0100               	movlb	0	; () banked
  4570  00278A  278C               	addwf	___ftpack@arg& (0+255),f,b
  4571  00278C  0E00               	movlw	0
  4572  00278E  0100               	movlb	0	; () banked
  4573  002790  238D               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  4574  002792  0E00               	movlw	0
  4575  002794  0100               	movlb	0	; () banked
  4576  002796  238E               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  4577  002798  0100               	movlb	0	; () banked
  4578  00279A  90D8               	bcf	status,0,c
  4579  00279C  338E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4580  00279E  338D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4581  0027A0  338C               	rrcf	___ftpack@arg& (0+255),f,b
  4582  0027A2  D000               	goto	l5566
  4583  0027A4                     l5566:
  4584                           
  4585                           ; BSR set to: 0
  4586  0027A4  0E00               	movlw	0
  4587  0027A6  0100               	movlb	0	; () banked
  4588  0027A8  158C               	andwf	___ftpack@arg& (0+255),w,b
  4589  0027AA  0100               	movlb	0	; () banked
  4590  0027AC  6F91               	movwf	??___ftpack& (0+255),b
  4591  0027AE  0E00               	movlw	0
  4592  0027B0  0100               	movlb	0	; () banked
  4593  0027B2  158D               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4594  0027B4  0100               	movlb	0	; () banked
  4595  0027B6  6F92               	movwf	(??___ftpack+1)& (0+255),b
  4596  0027B8  0EFF               	movlw	255
  4597  0027BA  0100               	movlb	0	; () banked
  4598  0027BC  158E               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4599  0027BE  0100               	movlb	0	; () banked
  4600  0027C0  6F93               	movwf	(??___ftpack+2)& (0+255),b
  4601  0027C2  0100               	movlb	0	; () banked
  4602  0027C4  5191               	movf	??___ftpack& (0+255),w,b
  4603  0027C6  0100               	movlb	0	; () banked
  4604  0027C8  1192               	iorwf	(??___ftpack+1)& (0+255),w,b
  4605  0027CA  0100               	movlb	0	; () banked
  4606  0027CC  1193               	iorwf	(??___ftpack+2)& (0+255),w,b
  4607  0027CE  B4D8               	btfsc	status,2,c
  4608  0027D0  D00A               	goto	l5570
  4609  0027D2  D7D7               	goto	l5562
  4610                           
  4611                           ; BSR set to: 0
  4612  0027D4  D008               	goto	l5570
  4613  0027D6                     l5568:
  4614                           
  4615                           ; BSR set to: 0
  4616  0027D6  0100               	movlb	0	; () banked
  4617  0027D8  078F               	decf	___ftpack@exp& (0+255),f,b
  4618  0027DA  0100               	movlb	0	; () banked
  4619  0027DC  90D8               	bcf	status,0,c
  4620  0027DE  378C               	rlcf	___ftpack@arg& (0+255),f,b
  4621  0027E0  378D               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  4622  0027E2  378E               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  4623  0027E4  D000               	goto	l5570
  4624  0027E6                     l5570:
  4625                           
  4626                           ; BSR set to: 0
  4627  0027E6  0100               	movlb	0	; () banked
  4628  0027E8  BF8D               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  4629  0027EA  D005               	goto	l1214
  4630                           
  4631                           ; BSR set to: 0
  4632  0027EC  0E02               	movlw	2
  4633  0027EE  0100               	movlb	0	; () banked
  4634  0027F0  618F               	cpfslt	___ftpack@exp& (0+255),b
  4635  0027F2  D7F1               	goto	l5568
  4636  0027F4  D000               	goto	l1214
  4637  0027F6                     l1214:
  4638                           
  4639                           ; BSR set to: 0
  4640  0027F6  0100               	movlb	0	; () banked
  4641  0027F8  B18F               	btfsc	___ftpack@exp& (0+255),0,b
  4642  0027FA  D003               	goto	l5576
  4643                           
  4644                           ; BSR set to: 0
  4645  0027FC  0100               	movlb	0	; () banked
  4646  0027FE  9F8D               	bcf	(___ftpack@arg+1)& (0+255),7,b
  4647  002800  D000               	goto	l5576
  4648  002802                     l5576:
  4649                           
  4650                           ; BSR set to: 0
  4651  002802  0100               	movlb	0	; () banked
  4652  002804  90D8               	bcf	status,0,c
  4653  002806  338F               	rrcf	___ftpack@exp& (0+255),f,b
  4654  002808  0100               	movlb	0	; () banked
  4655  00280A  518F               	movf	___ftpack@exp& (0+255),w,b
  4656  00280C  0100               	movlb	0	; () banked
  4657  00280E  138E               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  4658                           
  4659                           ; BSR set to: 0
  4660  002810  0100               	movlb	0	; () banked
  4661  002812  5190               	movf	___ftpack@sign& (0+255),w,b
  4662  002814  0100               	movlb	0	; () banked
  4663  002816  B4D8               	btfsc	status,2,c
  4664  002818  D003               	goto	l5582
  4665                           
  4666                           ; BSR set to: 0
  4667  00281A  0100               	movlb	0	; () banked
  4668  00281C  8F8E               	bsf	(___ftpack@arg+2)& (0+255),7,b
  4669  00281E  D000               	goto	l5582
  4670  002820                     l5582:
  4671                           
  4672                           ; BSR set to: 0
  4673  002820  C08C  F08C         	movff	___ftpack@arg,?___ftpack
  4674  002824  C08D  F08D         	movff	___ftpack@arg+1,?___ftpack+1
  4675  002828  C08E  F08E         	movff	___ftpack@arg+2,?___ftpack+2
  4676  00282C  0012               	return	
  4677                           
  4678                           ; BSR set to: 0
  4679                           
  4680                           ; BSR set to: 0
  4681  00282E  0012               	return		;funcret
  4682  002830                     __end_of___ftpack:
  4683                           	opt stack 0
  4684                           tblptru	equ	0xFF8
  4685                           tblptrh	equ	0xFF7
  4686                           tblptrl	equ	0xFF6
  4687                           tablat	equ	0xFF5
  4688                           intcon	equ	0xFF2
  4689                           intcon2	equ	0xFF1
  4690                           postinc0	equ	0xFEE
  4691                           plusw0	equ	0xFEB
  4692                           wreg	equ	0xFE8
  4693                           postdec1	equ	0xFE5
  4694                           fsr1h	equ	0xFE2
  4695                           fsr1l	equ	0xFE1
  4696                           postinc2	equ	0xFDE
  4697                           postdec2	equ	0xFDD
  4698                           plusw2	equ	0xFDB
  4699                           fsr2h	equ	0xFDA
  4700                           fsr2l	equ	0xFD9
  4701                           status	equ	0xFD8
  4702                           
  4703 ;; *************** function _OpenUSART *****************
  4704 ;; Defined at:
  4705 ;;		line 112 in file "UART.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  config          1    wreg     unsigned char 
  4708 ;;  spbrg           2   44[BANK0 ] unsigned int 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  config          1   46[BANK0 ] unsigned char 
  4711 ;; Return value:  Size  Location     Type
  4712 ;;		None               void
  4713 ;; Registers used:
  4714 ;;		wreg, status,2
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4720 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;Total ram usage:        3 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; Hardware stack levels required when called:    9
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		_InitUART
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text19
  4735  00348C                     __ptext19:
  4736                           	opt stack 0
  4737  00348C                     _OpenUSART:
  4738                           	opt stack 19
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;incstack = 0
  4742                           ;OpenUSART@config stored from wreg
  4743  00348C  0100               	movlb	0	; () banked
  4744  00348E  6F8E               	movwf	OpenUSART@config& (0+255),b
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;UART.c: 114: TXSTA = 0;
  4748  003490  0E00               	movlw	0
  4749  003492  6EAC               	movwf	4012,c	;volatile
  4750                           
  4751                           ;UART.c: 115: RCSTA = 0;
  4752  003494  0E00               	movlw	0
  4753  003496  6EAB               	movwf	4011,c	;volatile
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;UART.c: 117: if(config&0x01)
  4757  003498  0100               	movlb	0	; () banked
  4758  00349A  A18E               	btfss	OpenUSART@config& (0+255),0,b
  4759  00349C  D002               	goto	l5968
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;UART.c: 118: {
  4763                           ;UART.c: 119: TXSTAbits.SYNC = 1;
  4764  00349E  88AC               	bsf	4012,4,c	;volatile
  4765  0034A0  D000               	goto	l5968
  4766  0034A2                     l5968:
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;UART.c: 120: }
  4770                           ;UART.c: 122: if(config&0x02)
  4771  0034A2  0100               	movlb	0	; () banked
  4772  0034A4  A38E               	btfss	OpenUSART@config& (0+255),1,b
  4773  0034A6  D003               	goto	l5972
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;UART.c: 123: {
  4777                           ;UART.c: 124: TXSTAbits.TX9 = 1;
  4778  0034A8  8CAC               	bsf	4012,6,c	;volatile
  4779                           
  4780                           ;UART.c: 125: RCSTAbits.RX9 = 1;
  4781  0034AA  8CAB               	bsf	4011,6,c	;volatile
  4782  0034AC  D000               	goto	l5972
  4783  0034AE                     l5972:
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;UART.c: 126: }
  4787                           ;UART.c: 128: if(config&0x04)
  4788  0034AE  0100               	movlb	0	; () banked
  4789  0034B0  A58E               	btfss	OpenUSART@config& (0+255),2,b
  4790  0034B2  D002               	goto	l5976
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;UART.c: 129: {
  4794                           ;UART.c: 130: TXSTAbits.CSRC = 1;
  4795  0034B4  8EAC               	bsf	4012,7,c	;volatile
  4796  0034B6  D000               	goto	l5976
  4797  0034B8                     l5976:
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;UART.c: 131: }
  4801                           ;UART.c: 133: if(config&0x08)
  4802  0034B8  0100               	movlb	0	; () banked
  4803  0034BA  A78E               	btfss	OpenUSART@config& (0+255),3,b
  4804  0034BC  D002               	goto	l207
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;UART.c: 134: {
  4808                           ;UART.c: 135: RCSTAbits.CREN = 1;
  4809  0034BE  88AB               	bsf	4011,4,c	;volatile
  4810                           
  4811                           ;UART.c: 136: }
  4812  0034C0  D002               	goto	l5980
  4813  0034C2                     l207:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;UART.c: 137: else
  4817                           ;UART.c: 138: {
  4818                           ;UART.c: 139: RCSTAbits.SREN = 1;
  4819  0034C2  8AAB               	bsf	4011,5,c	;volatile
  4820  0034C4  D000               	goto	l5980
  4821  0034C6                     l5980:
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;UART.c: 140: }
  4825                           ;UART.c: 142: if(config&0x10)
  4826  0034C6  0100               	movlb	0	; () banked
  4827  0034C8  A98E               	btfss	OpenUSART@config& (0+255),4,b
  4828  0034CA  D002               	goto	l5984
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;UART.c: 143: {
  4832                           ;UART.c: 144: TXSTAbits.BRGH = 1;
  4833  0034CC  84AC               	bsf	4012,2,c	;volatile
  4834  0034CE  D000               	goto	l5984
  4835  0034D0                     l5984:
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;UART.c: 145: }
  4839                           ;UART.c: 147: if(config&0x20)
  4840  0034D0  0100               	movlb	0	; () banked
  4841  0034D2  AB8E               	btfss	OpenUSART@config& (0+255),5,b
  4842  0034D4  D002               	goto	l5988
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;UART.c: 148: {
  4846                           ;UART.c: 149: RCSTAbits.ADEN = 1;
  4847  0034D6  86AB               	bsf	4011,3,c	;volatile
  4848  0034D8  D000               	goto	l5988
  4849  0034DA                     l5988:
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;UART.c: 150: }
  4853                           ;UART.c: 152: if(config&0x40)
  4854  0034DA  0100               	movlb	0	; () banked
  4855  0034DC  AD8E               	btfss	OpenUSART@config& (0+255),6,b
  4856  0034DE  D003               	goto	l211
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;UART.c: 153: {
  4860                           ;UART.c: 154: PIR1bits.RCIF = 0;
  4861  0034E0  9A9E               	bcf	3998,5,c	;volatile
  4862                           
  4863                           ;UART.c: 155: PIE1bits.RCIE = 1;
  4864  0034E2  8A9D               	bsf	3997,5,c	;volatile
  4865                           
  4866                           ;UART.c: 157: }
  4867  0034E4  D002               	goto	l5992
  4868  0034E6                     l211:
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;UART.c: 158: else
  4872                           ;UART.c: 159: {
  4873                           ;UART.c: 160: PIE1bits.RCIE = 0;
  4874  0034E6  9A9D               	bcf	3997,5,c	;volatile
  4875  0034E8  D000               	goto	l5992
  4876  0034EA                     l5992:
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;UART.c: 161: }
  4880                           ;UART.c: 163: if(config&0x80)
  4881  0034EA  0100               	movlb	0	; () banked
  4882  0034EC  AF8E               	btfss	OpenUSART@config& (0+255),7,b
  4883  0034EE  D003               	goto	l213
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;UART.c: 164: {
  4887                           ;UART.c: 165: PIR1bits.TXIF = 0;
  4888  0034F0  989E               	bcf	3998,4,c	;volatile
  4889                           
  4890                           ;UART.c: 166: PIE1bits.TXIE = 1;
  4891  0034F2  889D               	bsf	3997,4,c	;volatile
  4892                           
  4893                           ;UART.c: 167: }
  4894  0034F4  D001               	goto	l214
  4895  0034F6                     l213:
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;UART.c: 168: else
  4899                           ;UART.c: 169: {
  4900                           ;UART.c: 170: PIE1bits.TXIE = 0;
  4901  0034F6  989D               	bcf	3997,4,c	;volatile
  4902  0034F8                     l214:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;UART.c: 171: }
  4906                           ;UART.c: 173: SPBRG = spbrg;
  4907  0034F8  C08C  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;UART.c: 174: SPBRGH = spbrg >> 8;
  4911  0034FC  0100               	movlb	0	; () banked
  4912  0034FE  518D               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
  4913  003500  6EB0               	movwf	4016,c	;volatile
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;UART.c: 176: TXSTAbits.TXEN = 1;
  4917  003502  8AAC               	bsf	4012,5,c	;volatile
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;UART.c: 177: RCSTAbits.SPEN = 1;
  4921  003504  8EAB               	bsf	4011,7,c	;volatile
  4922                           
  4923                           ; BSR set to: 0
  4924  003506  0012               	return		;funcret
  4925  003508                     __end_of_OpenUSART:
  4926                           	opt stack 0
  4927                           tblptru	equ	0xFF8
  4928                           tblptrh	equ	0xFF7
  4929                           tblptrl	equ	0xFF6
  4930                           tablat	equ	0xFF5
  4931                           intcon	equ	0xFF2
  4932                           intcon2	equ	0xFF1
  4933                           postinc0	equ	0xFEE
  4934                           plusw0	equ	0xFEB
  4935                           wreg	equ	0xFE8
  4936                           postdec1	equ	0xFE5
  4937                           fsr1h	equ	0xFE2
  4938                           fsr1l	equ	0xFE1
  4939                           postinc2	equ	0xFDE
  4940                           postdec2	equ	0xFDD
  4941                           plusw2	equ	0xFDB
  4942                           fsr2h	equ	0xFDA
  4943                           fsr2l	equ	0xFD9
  4944                           status	equ	0xFD8
  4945                           
  4946 ;; *************** function _Local_CloseUSART *****************
  4947 ;; Defined at:
  4948 ;;		line 62 in file "UART.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;		None
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;		None               void
  4955 ;; Registers used:
  4956 ;;		None
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;Total ram usage:        0 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; Hardware stack levels required when called:    9
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_InitUART
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text20
  4977  003CE4                     __ptext20:
  4978                           	opt stack 0
  4979  003CE4                     _Local_CloseUSART:
  4980                           	opt stack 19
  4981                           
  4982                           ;UART.c: 64: PIE1bits.RCIE = 0;
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;incstack = 0
  4986  003CE4  9A9D               	bcf	3997,5,c	;volatile
  4987                           
  4988                           ;UART.c: 65: PIE1bits.TXIE = 0;
  4989  003CE6  989D               	bcf	3997,4,c	;volatile
  4990                           
  4991                           ;UART.c: 66: RCSTAbits.SPEN = 0;
  4992  003CE8  9EAB               	bcf	4011,7,c	;volatile
  4993                           
  4994                           ;UART.c: 67: RCSTAbits.CREN = 0;
  4995  003CEA  98AB               	bcf	4011,4,c	;volatile
  4996                           
  4997                           ;UART.c: 68: RCSTAbits.FERR = 0;
  4998  003CEC  94AB               	bcf	4011,2,c	;volatile
  4999                           
  5000                           ;UART.c: 69: TXSTAbits.TXEN = 0;
  5001  003CEE  9AAC               	bcf	4012,5,c	;volatile
  5002  003CF0  0012               	return		;funcret
  5003  003CF2                     __end_of_Local_CloseUSART:
  5004                           	opt stack 0
  5005                           tblptru	equ	0xFF8
  5006                           tblptrh	equ	0xFF7
  5007                           tblptrl	equ	0xFF6
  5008                           tablat	equ	0xFF5
  5009                           intcon	equ	0xFF2
  5010                           intcon2	equ	0xFF1
  5011                           postinc0	equ	0xFEE
  5012                           plusw0	equ	0xFEB
  5013                           wreg	equ	0xFE8
  5014                           postdec1	equ	0xFE5
  5015                           fsr1h	equ	0xFE2
  5016                           fsr1l	equ	0xFE1
  5017                           postinc2	equ	0xFDE
  5018                           postdec2	equ	0xFDD
  5019                           plusw2	equ	0xFDB
  5020                           fsr2h	equ	0xFDA
  5021                           fsr2l	equ	0xFD9
  5022                           status	equ	0xFD8
  5023                           
  5024 ;; *************** function _InitTimers *****************
  5025 ;; Defined at:
  5026 ;;		line 49 in file "Timer.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;		None
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;		None               void
  5033 ;; Registers used:
  5034 ;;		wreg, status,2, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;Total ram usage:        0 bytes
  5045 ;; Hardware stack levels used:    1
  5046 ;; Hardware stack levels required when called:   10
  5047 ;; This function calls:
  5048 ;;		_InitTimer1
  5049 ;;		_InitTimer2
  5050 ;;		_InitTimer3
  5051 ;; This function is called by:
  5052 ;;		_Init_System
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text21
  5057  003CC0                     __ptext21:
  5058                           	opt stack 0
  5059  003CC0                     _InitTimers:
  5060                           	opt stack 19
  5061                           
  5062                           ;Timer.c: 51: InitTimer1();
  5063                           
  5064                           ;incstack = 0
  5065  003CC0  EC80  F01E         	call	_InitTimer1	;wreg free
  5066                           
  5067                           ;Timer.c: 52: (PIE1bits.TMR1IE = TRUE);
  5068  003CC4  809D               	bsf	3997,0,c	;volatile
  5069                           
  5070                           ;Timer.c: 53: InitTimer2();
  5071  003CC6  EC79  F01E         	call	_InitTimer2	;wreg free
  5072                           
  5073                           ;Timer.c: 54: (PIE1bits.TMR2IE = TRUE);
  5074  003CCA  829D               	bsf	3997,1,c	;volatile
  5075                           
  5076                           ;Timer.c: 55: InitTimer3();
  5077  003CCC  ECBD  F01E         	call	_InitTimer3	;wreg free
  5078                           
  5079                           ;Timer.c: 56: (PIE2bits.TMR3IE = TRUE);
  5080  003CD0  82A0               	bsf	4000,1,c	;volatile
  5081  003CD2  0012               	return		;funcret
  5082  003CD4                     __end_of_InitTimers:
  5083                           	opt stack 0
  5084                           tblptru	equ	0xFF8
  5085                           tblptrh	equ	0xFF7
  5086                           tblptrl	equ	0xFF6
  5087                           tablat	equ	0xFF5
  5088                           intcon	equ	0xFF2
  5089                           intcon2	equ	0xFF1
  5090                           postinc0	equ	0xFEE
  5091                           plusw0	equ	0xFEB
  5092                           wreg	equ	0xFE8
  5093                           postdec1	equ	0xFE5
  5094                           fsr1h	equ	0xFE2
  5095                           fsr1l	equ	0xFE1
  5096                           postinc2	equ	0xFDE
  5097                           postdec2	equ	0xFDD
  5098                           plusw2	equ	0xFDB
  5099                           fsr2h	equ	0xFDA
  5100                           fsr2l	equ	0xFD9
  5101                           status	equ	0xFD8
  5102                           
  5103 ;; *************** function _InitTimer3 *****************
  5104 ;; Defined at:
  5105 ;;		line 144 in file "Timer.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;		None
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;		None
  5110 ;; Return value:  Size  Location     Type
  5111 ;;		None               void
  5112 ;; Registers used:
  5113 ;;		wreg, status,2
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;Total ram usage:        0 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; Hardware stack levels required when called:    9
  5126 ;; This function calls:
  5127 ;;		Nothing
  5128 ;; This function is called by:
  5129 ;;		_InitTimers
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text22
  5134  003D7A                     __ptext22:
  5135                           	opt stack 0
  5136  003D7A                     _InitTimer3:
  5137                           	opt stack 19
  5138                           
  5139                           ;Timer.c: 146: T3CONbits.RD16 = TRUE;
  5140                           
  5141                           ;incstack = 0
  5142  003D7A  8EB1               	bsf	4017,7,c	;volatile
  5143                           
  5144                           ;Timer.c: 147: T3CONbits.T3CKPS = 0x3;
  5145  003D7C  0E30               	movlw	48
  5146  003D7E  12B1               	iorwf	4017,f,c	;volatile
  5147                           
  5148                           ;Timer.c: 148: T3CONbits.TMR3CS = FALSE;
  5149  003D80  92B1               	bcf	4017,1,c	;volatile
  5150  003D82  0012               	return		;funcret
  5151  003D84                     __end_of_InitTimer3:
  5152                           	opt stack 0
  5153                           tblptru	equ	0xFF8
  5154                           tblptrh	equ	0xFF7
  5155                           tblptrl	equ	0xFF6
  5156                           tablat	equ	0xFF5
  5157                           intcon	equ	0xFF2
  5158                           intcon2	equ	0xFF1
  5159                           postinc0	equ	0xFEE
  5160                           plusw0	equ	0xFEB
  5161                           wreg	equ	0xFE8
  5162                           postdec1	equ	0xFE5
  5163                           fsr1h	equ	0xFE2
  5164                           fsr1l	equ	0xFE1
  5165                           postinc2	equ	0xFDE
  5166                           postdec2	equ	0xFDD
  5167                           plusw2	equ	0xFDB
  5168                           fsr2h	equ	0xFDA
  5169                           fsr2l	equ	0xFD9
  5170                           status	equ	0xFD8
  5171                           
  5172 ;; *************** function _InitTimer2 *****************
  5173 ;; Defined at:
  5174 ;;		line 121 in file "Timer.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;		None
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;		None
  5179 ;; Return value:  Size  Location     Type
  5180 ;;		None               void
  5181 ;; Registers used:
  5182 ;;		wreg, status,2
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;Total ram usage:        0 bytes
  5193 ;; Hardware stack levels used:    1
  5194 ;; Hardware stack levels required when called:    9
  5195 ;; This function calls:
  5196 ;;		Nothing
  5197 ;; This function is called by:
  5198 ;;		_InitTimers
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text23
  5203  003CF2                     __ptext23:
  5204                           	opt stack 0
  5205  003CF2                     _InitTimer2:
  5206                           	opt stack 19
  5207                           
  5208                           ;Timer.c: 123: T2CONbits.T2OUTPS = 0xE;
  5209                           
  5210                           ;incstack = 0
  5211  003CF2  50CA               	movf	4042,w,c	;volatile
  5212  003CF4  0B87               	andlw	-121
  5213  003CF6  0970               	iorlw	112
  5214  003CF8  6ECA               	movwf	4042,c	;volatile
  5215                           
  5216                           ;Timer.c: 124: T2CONbits.T2CKPS = 0x3;
  5217  003CFA  0E03               	movlw	3
  5218  003CFC  12CA               	iorwf	4042,f,c	;volatile
  5219  003CFE  0012               	return		;funcret
  5220  003D00                     __end_of_InitTimer2:
  5221                           	opt stack 0
  5222                           tblptru	equ	0xFF8
  5223                           tblptrh	equ	0xFF7
  5224                           tblptrl	equ	0xFF6
  5225                           tablat	equ	0xFF5
  5226                           intcon	equ	0xFF2
  5227                           intcon2	equ	0xFF1
  5228                           postinc0	equ	0xFEE
  5229                           plusw0	equ	0xFEB
  5230                           wreg	equ	0xFE8
  5231                           postdec1	equ	0xFE5
  5232                           fsr1h	equ	0xFE2
  5233                           fsr1l	equ	0xFE1
  5234                           postinc2	equ	0xFDE
  5235                           postdec2	equ	0xFDD
  5236                           plusw2	equ	0xFDB
  5237                           fsr2h	equ	0xFDA
  5238                           fsr2l	equ	0xFD9
  5239                           status	equ	0xFD8
  5240                           
  5241 ;; *************** function _InitTimer1 *****************
  5242 ;; Defined at:
  5243 ;;		line 92 in file "Timer.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;		None
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;		None
  5248 ;; Return value:  Size  Location     Type
  5249 ;;		None               void
  5250 ;; Registers used:
  5251 ;;		wreg, status,2
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;Total ram usage:        0 bytes
  5262 ;; Hardware stack levels used:    1
  5263 ;; Hardware stack levels required when called:    9
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		_InitTimers
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text24
  5272  003D00                     __ptext24:
  5273                           	opt stack 0
  5274  003D00                     _InitTimer1:
  5275                           	opt stack 19
  5276                           
  5277                           ;Timer.c: 94: T1CONbits.RD16 = TRUE;
  5278                           
  5279                           ;incstack = 0
  5280  003D00  8ECD               	bsf	4045,7,c	;volatile
  5281                           
  5282                           ;Timer.c: 95: T1CONbits.T1RUN = FALSE;
  5283  003D02  9CCD               	bcf	4045,6,c	;volatile
  5284                           
  5285                           ;Timer.c: 96: T1CONbits.T1CKPS = 0x3;
  5286  003D04  0E30               	movlw	48
  5287  003D06  12CD               	iorwf	4045,f,c	;volatile
  5288                           
  5289                           ;Timer.c: 97: T1CONbits.T1OSCEN = FALSE;
  5290  003D08  96CD               	bcf	4045,3,c	;volatile
  5291                           
  5292                           ;Timer.c: 98: T1CONbits.TMR1CS = FALSE;
  5293  003D0A  92CD               	bcf	4045,1,c	;volatile
  5294  003D0C  0012               	return		;funcret
  5295  003D0E                     __end_of_InitTimer1:
  5296                           	opt stack 0
  5297                           tblptru	equ	0xFF8
  5298                           tblptrh	equ	0xFF7
  5299                           tblptrl	equ	0xFF6
  5300                           tablat	equ	0xFF5
  5301                           intcon	equ	0xFF2
  5302                           intcon2	equ	0xFF1
  5303                           postinc0	equ	0xFEE
  5304                           plusw0	equ	0xFEB
  5305                           wreg	equ	0xFE8
  5306                           postdec1	equ	0xFE5
  5307                           fsr1h	equ	0xFE2
  5308                           fsr1l	equ	0xFE1
  5309                           postinc2	equ	0xFDE
  5310                           postdec2	equ	0xFDD
  5311                           plusw2	equ	0xFDB
  5312                           fsr2h	equ	0xFDA
  5313                           fsr2l	equ	0xFD9
  5314                           status	equ	0xFD8
  5315                           
  5316 ;; *************** function _InitIR *****************
  5317 ;; Defined at:
  5318 ;;		line 65 in file "IR.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;		None
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;		None               void
  5325 ;; Registers used:
  5326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5336 ;;Total ram usage:        0 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; Hardware stack levels required when called:   10
  5339 ;; This function calls:
  5340 ;;		_InitTimer0
  5341 ;;		_ReadIRpin
  5342 ;;		_ResetTimer0
  5343 ;;		_cleanBuffer16bit
  5344 ;; This function is called by:
  5345 ;;		_Init_System
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           	psect	text25
  5350  003860                     __ptext25:
  5351                           	opt stack 0
  5352  003860                     _InitIR:
  5353                           	opt stack 19
  5354                           
  5355                           ;IR.c: 68: IOCBbits.IOCB4 = 1;
  5356                           
  5357                           ;incstack = 0
  5358  003860  887D               	bsf	3965,4,c	;volatile
  5359                           
  5360                           ;IR.c: 70: IRpinOLD = ReadIRpin();
  5361  003862  EC87  F01E         	call	_ReadIRpin	;wreg free
  5362  003866  0100               	movlb	0	; () banked
  5363  003868  6FBB               	movwf	_IRpinOLD& (0+255),b
  5364                           
  5365                           ;IR.c: 72: InitTimer0();
  5366  00386A  EC6A  F01E         	call	_InitTimer0	;wreg free
  5367                           
  5368                           ;IR.c: 74: cleanBuffer16bit(IRRawCode, 72);
  5369  00386E  0E00               	movlw	low _IRRawCode
  5370  003870  0100               	movlb	0	; () banked
  5371  003872  6F8C               	movwf	cleanBuffer16bit@data& (0+255),b
  5372  003874  0E01               	movlw	high _IRRawCode
  5373  003876  0100               	movlb	0	; () banked
  5374  003878  6F8D               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
  5375  00387A  0E00               	movlw	0
  5376  00387C  0100               	movlb	0	; () banked
  5377  00387E  6F8F               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
  5378  003880  0E48               	movlw	72
  5379  003882  6F8E               	movwf	cleanBuffer16bit@count& (0+255),b
  5380  003884  EC2B  F01B         	call	_cleanBuffer16bit	;wreg free
  5381                           
  5382                           ;IR.c: 75: IR_NEC = 0;
  5383  003888  0E00               	movlw	0
  5384  00388A  0100               	movlb	0	; () banked
  5385  00388C  6FC3               	movwf	_IR_NEC& (0+255),b
  5386  00388E  0E00               	movlw	0
  5387  003890  6FC4               	movwf	(_IR_NEC+1)& (0+255),b
  5388  003892  0E00               	movlw	0
  5389  003894  6FC5               	movwf	(_IR_NEC+2)& (0+255),b
  5390  003896  0E00               	movlw	0
  5391  003898  6FC6               	movwf	(_IR_NEC+3)& (0+255),b
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;IR.c: 77: ResetTimer0();
  5395  00389A  ECC2  F01E         	call	_ResetTimer0	;wreg free
  5396                           
  5397                           ;IR.c: 79: (INTCONbits.TMR0IE = 0);
  5398  00389E  9AF2               	bcf	intcon,5,c	;volatile
  5399                           
  5400                           ;IR.c: 80: INTCONbits.TMR0IF = 0;
  5401  0038A0  94F2               	bcf	intcon,2,c	;volatile
  5402                           
  5403                           ;IR.c: 82: (T0CONbits.TMR0ON = 1);
  5404  0038A2  8ED5               	bsf	4053,7,c	;volatile
  5405                           
  5406                           ;IR.c: 84: INTCONbits.RBIF = 0;
  5407  0038A4  90F2               	bcf	intcon,0,c	;volatile
  5408                           
  5409                           ;IR.c: 85: INTCONbits.RBIE = 1;
  5410  0038A6  86F2               	bsf	intcon,3,c	;volatile
  5411  0038A8  0012               	return		;funcret
  5412  0038AA                     __end_of_InitIR:
  5413                           	opt stack 0
  5414                           tblptru	equ	0xFF8
  5415                           tblptrh	equ	0xFF7
  5416                           tblptrl	equ	0xFF6
  5417                           tablat	equ	0xFF5
  5418                           intcon	equ	0xFF2
  5419                           intcon2	equ	0xFF1
  5420                           postinc0	equ	0xFEE
  5421                           plusw0	equ	0xFEB
  5422                           wreg	equ	0xFE8
  5423                           postdec1	equ	0xFE5
  5424                           fsr1h	equ	0xFE2
  5425                           fsr1l	equ	0xFE1
  5426                           postinc2	equ	0xFDE
  5427                           postdec2	equ	0xFDD
  5428                           plusw2	equ	0xFDB
  5429                           fsr2h	equ	0xFDA
  5430                           fsr2l	equ	0xFD9
  5431                           status	equ	0xFD8
  5432                           
  5433 ;; *************** function _cleanBuffer16bit *****************
  5434 ;; Defined at:
  5435 ;;		line 97 in file "MISC.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  data            2   44[BANK0 ] PTR unsigned int 
  5438 ;;		 -> IRRawCode(144), 
  5439 ;;  count           2   46[BANK0 ] int 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  i               1   51[BANK0 ] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;		None               void
  5444 ;; Registers used:
  5445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5451 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;Total ram usage:        8 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    9
  5458 ;; This function calls:
  5459 ;;		Nothing
  5460 ;; This function is called by:
  5461 ;;		_InitIR
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text26
  5466  003656                     __ptext26:
  5467                           	opt stack 0
  5468  003656                     _cleanBuffer16bit:
  5469                           	opt stack 19
  5470                           
  5471                           ;MISC.c: 99: unsigned char i=0;
  5472                           
  5473                           ;incstack = 0
  5474  003656  0E00               	movlw	0
  5475  003658  0100               	movlb	0	; () banked
  5476  00365A  6F93               	movwf	cleanBuffer16bit@i& (0+255),b
  5477                           
  5478                           ;MISC.c: 100: for(i=0; i<count;i++)
  5479  00365C  0E00               	movlw	0
  5480  00365E  0100               	movlb	0	; () banked
  5481  003660  6F93               	movwf	cleanBuffer16bit@i& (0+255),b
  5482  003662  D012               	goto	l4058
  5483  003664                     l4054:
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;MISC.c: 101: {
  5487                           ;MISC.c: 102: data[i]= 0;
  5488  003664  0100               	movlb	0	; () banked
  5489  003666  5193               	movf	cleanBuffer16bit@i& (0+255),w,b
  5490  003668  0D02               	mullw	2
  5491  00366A  50F3               	movf	prodl,w,c
  5492  00366C  0100               	movlb	0	; () banked
  5493  00366E  258C               	addwf	cleanBuffer16bit@data& (0+255),w,b
  5494  003670  6ED9               	movwf	fsr2l,c
  5495  003672  50F4               	movf	prodh,w,c
  5496  003674  0100               	movlb	0	; () banked
  5497  003676  218D               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
  5498  003678  6EDA               	movwf	fsr2h,c
  5499  00367A  0E00               	movlw	0
  5500  00367C  6EDE               	movwf	postinc2,c
  5501  00367E  0E00               	movlw	0
  5502  003680  6EDD               	movwf	postdec2,c
  5503                           
  5504                           ; BSR set to: 0
  5505  003682  0100               	movlb	0	; () banked
  5506  003684  2B93               	incf	cleanBuffer16bit@i& (0+255),f,b
  5507  003686  D000               	goto	l4058
  5508  003688                     l4058:
  5509                           
  5510                           ; BSR set to: 0
  5511  003688  0100               	movlb	0	; () banked
  5512  00368A  5193               	movf	cleanBuffer16bit@i& (0+255),w,b
  5513  00368C  0100               	movlb	0	; () banked
  5514  00368E  6F90               	movwf	??_cleanBuffer16bit& (0+255),b
  5515  003690  6B91               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
  5516  003692  0100               	movlb	0	; () banked
  5517  003694  518E               	movf	cleanBuffer16bit@count& (0+255),w,b
  5518  003696  0100               	movlb	0	; () banked
  5519  003698  5D90               	subwf	??_cleanBuffer16bit& (0+255),w,b
  5520  00369A  0100               	movlb	0	; () banked
  5521  00369C  5191               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
  5522  00369E  0A80               	xorlw	128
  5523  0036A0  0100               	movlb	0	; () banked
  5524  0036A2  6F92               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
  5525  0036A4  0100               	movlb	0	; () banked
  5526  0036A6  518F               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
  5527  0036A8  0A80               	xorlw	128
  5528  0036AA  0100               	movlb	0	; () banked
  5529  0036AC  5992               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
  5530  0036AE  A0D8               	btfss	status,0,c
  5531  0036B0  D7D9               	goto	l4054
  5532                           
  5533                           ; BSR set to: 0
  5534                           
  5535                           ; BSR set to: 0
  5536  0036B2  0012               	return		;funcret
  5537  0036B4                     __end_of_cleanBuffer16bit:
  5538                           	opt stack 0
  5539                           tblptru	equ	0xFF8
  5540                           tblptrh	equ	0xFF7
  5541                           tblptrl	equ	0xFF6
  5542                           tablat	equ	0xFF5
  5543                           prodh	equ	0xFF4
  5544                           prodl	equ	0xFF3
  5545                           intcon	equ	0xFF2
  5546                           intcon2	equ	0xFF1
  5547                           postinc0	equ	0xFEE
  5548                           plusw0	equ	0xFEB
  5549                           wreg	equ	0xFE8
  5550                           postdec1	equ	0xFE5
  5551                           fsr1h	equ	0xFE2
  5552                           fsr1l	equ	0xFE1
  5553                           postinc2	equ	0xFDE
  5554                           postdec2	equ	0xFDD
  5555                           plusw2	equ	0xFDB
  5556                           fsr2h	equ	0xFDA
  5557                           fsr2l	equ	0xFD9
  5558                           status	equ	0xFD8
  5559                           
  5560 ;; *************** function _ResetTimer0 *****************
  5561 ;; Defined at:
  5562 ;;		line 77 in file "Timer.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;		None
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;		None
  5567 ;; Return value:  Size  Location     Type
  5568 ;;		None               void
  5569 ;; Registers used:
  5570 ;;		wreg, status,2
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5580 ;;Total ram usage:        0 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    9
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_InitIR
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text27
  5591  003D84                     __ptext27:
  5592                           	opt stack 0
  5593  003D84                     _ResetTimer0:
  5594                           	opt stack 19
  5595                           
  5596                           ;Timer.c: 83: TMR0H = 0;
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;incstack = 0
  5600  003D84  0E00               	movlw	0
  5601  003D86  6ED7               	movwf	4055,c	;volatile
  5602                           
  5603                           ;Timer.c: 84: TMR0L = 2;
  5604  003D88  0E02               	movlw	2
  5605  003D8A  6ED6               	movwf	4054,c	;volatile
  5606  003D8C  0012               	return		;funcret
  5607  003D8E                     __end_of_ResetTimer0:
  5608                           	opt stack 0
  5609                           tblptru	equ	0xFF8
  5610                           tblptrh	equ	0xFF7
  5611                           tblptrl	equ	0xFF6
  5612                           tablat	equ	0xFF5
  5613                           prodh	equ	0xFF4
  5614                           prodl	equ	0xFF3
  5615                           intcon	equ	0xFF2
  5616                           intcon2	equ	0xFF1
  5617                           postinc0	equ	0xFEE
  5618                           plusw0	equ	0xFEB
  5619                           wreg	equ	0xFE8
  5620                           postdec1	equ	0xFE5
  5621                           fsr1h	equ	0xFE2
  5622                           fsr1l	equ	0xFE1
  5623                           postinc2	equ	0xFDE
  5624                           postdec2	equ	0xFDD
  5625                           plusw2	equ	0xFDB
  5626                           fsr2h	equ	0xFDA
  5627                           fsr2l	equ	0xFD9
  5628                           status	equ	0xFD8
  5629                           
  5630 ;; *************** function _ReadIRpin *****************
  5631 ;; Defined at:
  5632 ;;		line 93 in file "IR.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;		None
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;		None
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      unsigned char 
  5639 ;; Registers used:
  5640 ;;		wreg
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;Total ram usage:        0 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    9
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_InitIR
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text28
  5661  003D0E                     __ptext28:
  5662                           	opt stack 0
  5663  003D0E                     _ReadIRpin:
  5664                           	opt stack 19
  5665                           
  5666                           ;IR.c: 96: if((PORTB & 0x10) == 0x10)
  5667                           
  5668                           ;incstack = 0
  5669  003D0E  A881               	btfss	3969,4,c	;volatile
  5670  003D10  D002               	goto	l4146
  5671                           
  5672                           ;IR.c: 97: {
  5673                           ;IR.c: 98: return (1);
  5674  003D12  0E01               	movlw	1
  5675                           
  5676                           ;IR.c: 99: }
  5677  003D14  0012               	return	
  5678  003D16                     l4146:
  5679                           
  5680                           ;IR.c: 100: else
  5681                           ;IR.c: 101: {
  5682                           ;IR.c: 102: return 0;
  5683  003D16  0E00               	movlw	0
  5684  003D18  0012               	return	
  5685  003D1A  0012               	return		;funcret
  5686  003D1C                     __end_of_ReadIRpin:
  5687                           	opt stack 0
  5688                           tblptru	equ	0xFF8
  5689                           tblptrh	equ	0xFF7
  5690                           tblptrl	equ	0xFF6
  5691                           tablat	equ	0xFF5
  5692                           prodh	equ	0xFF4
  5693                           prodl	equ	0xFF3
  5694                           intcon	equ	0xFF2
  5695                           intcon2	equ	0xFF1
  5696                           postinc0	equ	0xFEE
  5697                           plusw0	equ	0xFEB
  5698                           wreg	equ	0xFE8
  5699                           postdec1	equ	0xFE5
  5700                           fsr1h	equ	0xFE2
  5701                           fsr1l	equ	0xFE1
  5702                           postinc2	equ	0xFDE
  5703                           postdec2	equ	0xFDD
  5704                           plusw2	equ	0xFDB
  5705                           fsr2h	equ	0xFDA
  5706                           fsr2l	equ	0xFD9
  5707                           status	equ	0xFD8
  5708                           
  5709 ;; *************** function _InitTimer0 *****************
  5710 ;; Defined at:
  5711 ;;		line 64 in file "Timer.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;		None
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;		None
  5716 ;; Return value:  Size  Location     Type
  5717 ;;		None               void
  5718 ;; Registers used:
  5719 ;;		wreg, status,2
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;Total ram usage:        0 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    9
  5732 ;; This function calls:
  5733 ;;		Nothing
  5734 ;; This function is called by:
  5735 ;;		_InitIR
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text29
  5740  003CD4                     __ptext29:
  5741                           	opt stack 0
  5742  003CD4                     _InitTimer0:
  5743                           	opt stack 19
  5744                           
  5745                           ;Timer.c: 66: T0CONbits.T08BIT = FALSE;
  5746                           
  5747                           ;incstack = 0
  5748  003CD4  9CD5               	bcf	4053,6,c	;volatile
  5749                           
  5750                           ;Timer.c: 67: T0CONbits.T0CS = FALSE;
  5751  003CD6  9AD5               	bcf	4053,5,c	;volatile
  5752                           
  5753                           ;Timer.c: 68: T0CONbits.PSA = FALSE;
  5754  003CD8  96D5               	bcf	4053,3,c	;volatile
  5755                           
  5756                           ;Timer.c: 69: T0CONbits.T0PS = 0x4;
  5757  003CDA  50D5               	movf	4053,w,c	;volatile
  5758  003CDC  0BF8               	andlw	-8
  5759  003CDE  0904               	iorlw	4
  5760  003CE0  6ED5               	movwf	4053,c	;volatile
  5761  003CE2  0012               	return		;funcret
  5762  003CE4                     __end_of_InitTimer0:
  5763                           	opt stack 0
  5764                           tblptru	equ	0xFF8
  5765                           tblptrh	equ	0xFF7
  5766                           tblptrl	equ	0xFF6
  5767                           tablat	equ	0xFF5
  5768                           prodh	equ	0xFF4
  5769                           prodl	equ	0xFF3
  5770                           intcon	equ	0xFF2
  5771                           intcon2	equ	0xFF1
  5772                           postinc0	equ	0xFEE
  5773                           plusw0	equ	0xFEB
  5774                           wreg	equ	0xFE8
  5775                           postdec1	equ	0xFE5
  5776                           fsr1h	equ	0xFE2
  5777                           fsr1l	equ	0xFE1
  5778                           postinc2	equ	0xFDE
  5779                           postdec2	equ	0xFDD
  5780                           plusw2	equ	0xFDB
  5781                           fsr2h	equ	0xFDA
  5782                           fsr2l	equ	0xFD9
  5783                           status	equ	0xFD8
  5784                           
  5785 ;; *************** function _InitBluetooth *****************
  5786 ;; Defined at:
  5787 ;;		line 59 in file "Bluetooth.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;		None
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;		None
  5792 ;; Return value:  Size  Location     Type
  5793 ;;		None               void
  5794 ;; Registers used:
  5795 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;Total ram usage:        0 bytes
  5806 ;; Hardware stack levels used:    1
  5807 ;; Hardware stack levels required when called:   15
  5808 ;; This function calls:
  5809 ;;		_BluetoothConfigured
  5810 ;;		_BluetoothInitialSetup
  5811 ;;		_ResetBlue
  5812 ;;		_cleanBuffer
  5813 ;; This function is called by:
  5814 ;;		_Init_System
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	text30
  5819  0037BE                     __ptext30:
  5820                           	opt stack 0
  5821  0037BE                     _InitBluetooth:
  5822                           	opt stack 14
  5823                           
  5824                           ;Bluetooth.c: 61: cleanBuffer(&ReceivedString,255);
  5825                           
  5826                           ;incstack = 0
  5827  0037BE  0E00               	movlw	low _ReceivedString
  5828  0037C0  0100               	movlb	0	; () banked
  5829  0037C2  6F8C               	movwf	cleanBuffer@data& (0+255),b
  5830  0037C4  0E03               	movlw	high _ReceivedString
  5831  0037C6  0100               	movlb	0	; () banked
  5832  0037C8  6F8D               	movwf	(cleanBuffer@data+1)& (0+255),b
  5833  0037CA  0E00               	movlw	0
  5834  0037CC  0100               	movlb	0	; () banked
  5835  0037CE  6F8F               	movwf	(cleanBuffer@count+1)& (0+255),b
  5836  0037D0  698E               	setf	cleanBuffer@count& (0+255),b
  5837  0037D2  EC5A  F01B         	call	_cleanBuffer	;wreg free
  5838                           
  5839                           ;Bluetooth.c: 62: ReceivedStringPos = 0;
  5840  0037D6  0E00               	movlw	0
  5841  0037D8  6E49               	movwf	_ReceivedStringPos,c
  5842                           
  5843                           ;Bluetooth.c: 63: cleanBuffer(&CommandString,255);
  5844  0037DA  0E00               	movlw	low _CommandString
  5845  0037DC  0100               	movlb	0	; () banked
  5846  0037DE  6F8C               	movwf	cleanBuffer@data& (0+255),b
  5847  0037E0  0E02               	movlw	high _CommandString
  5848  0037E2  0100               	movlb	0	; () banked
  5849  0037E4  6F8D               	movwf	(cleanBuffer@data+1)& (0+255),b
  5850  0037E6  0E00               	movlw	0
  5851  0037E8  0100               	movlb	0	; () banked
  5852  0037EA  6F8F               	movwf	(cleanBuffer@count+1)& (0+255),b
  5853  0037EC  698E               	setf	cleanBuffer@count& (0+255),b
  5854  0037EE  EC5A  F01B         	call	_cleanBuffer	;wreg free
  5855                           
  5856                           ;Bluetooth.c: 64: CommandStringPos = 0;
  5857  0037F2  0E00               	movlw	0
  5858  0037F4  6E47               	movwf	_CommandStringPos,c
  5859                           
  5860                           ;Bluetooth.c: 66: LATA &= ~0x10;
  5861  0037F6  9889               	bcf	3977,4,c	;volatile
  5862                           
  5863                           ;Bluetooth.c: 67: ResetBlue();
  5864  0037F8  EC66  F01D         	call	_ResetBlue	;wreg free
  5865                           
  5866                           ;Bluetooth.c: 68: LATA |= 0x08;
  5867  0037FC  8689               	bsf	3977,3,c	;volatile
  5868                           
  5869                           ;Bluetooth.c: 69: LATA &= ~0x10;
  5870  0037FE  9889               	bcf	3977,4,c	;volatile
  5871                           
  5872                           ;Bluetooth.c: 70: if(!BluetoothConfigured())
  5873  003800  EC1A  F01E         	call	_BluetoothConfigured	;wreg free
  5874  003804  0900               	iorlw	0
  5875  003806  A4D8               	btfss	status,2,c
  5876  003808  0012               	return	
  5877                           
  5878                           ;Bluetooth.c: 71: {
  5879                           ;Bluetooth.c: 72: BluetoothInitialSetup();
  5880  00380A  EC53  F008         	call	_BluetoothInitialSetup	;wreg free
  5881  00380E  0012               	return	
  5882  003810  0012               	return		;funcret
  5883  003812                     __end_of_InitBluetooth:
  5884                           	opt stack 0
  5885                           tblptru	equ	0xFF8
  5886                           tblptrh	equ	0xFF7
  5887                           tblptrl	equ	0xFF6
  5888                           tablat	equ	0xFF5
  5889                           prodh	equ	0xFF4
  5890                           prodl	equ	0xFF3
  5891                           intcon	equ	0xFF2
  5892                           intcon2	equ	0xFF1
  5893                           postinc0	equ	0xFEE
  5894                           plusw0	equ	0xFEB
  5895                           wreg	equ	0xFE8
  5896                           postdec1	equ	0xFE5
  5897                           fsr1h	equ	0xFE2
  5898                           fsr1l	equ	0xFE1
  5899                           postinc2	equ	0xFDE
  5900                           postdec2	equ	0xFDD
  5901                           plusw2	equ	0xFDB
  5902                           fsr2h	equ	0xFDA
  5903                           fsr2l	equ	0xFD9
  5904                           status	equ	0xFD8
  5905                           
  5906 ;; *************** function _BluetoothInitialSetup *****************
  5907 ;; Defined at:
  5908 ;;		line 142 in file "Bluetooth.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;		None
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  buf            50    0[BANK4 ] unsigned char [50]
  5913 ;;  ok              1   50[BANK4 ] unsigned char 
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  1    wreg      unsigned char 
  5916 ;; Registers used:
  5917 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;      Locals:         0       0       0       0       0      51       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;      Totals:         0       0       0       0       0      51       0       0       0       0       0       0       
      +0       0       0       0       0
  5927 ;;Total ram usage:       51 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:   12
  5930 ;; This function calls:
  5931 ;;		_EnterCommandMode
  5932 ;;		_StringContains
  5933 ;;		_UARTstring
  5934 ;;		_cleanBuffer
  5935 ;;		_delayUS
  5936 ;;		_sprintf
  5937 ;; This function is called by:
  5938 ;;		_InitBluetooth
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text31
  5943  0010A6                     __ptext31:
  5944                           	opt stack 0
  5945  0010A6                     _BluetoothInitialSetup:
  5946                           	opt stack 16
  5947                           
  5948                           ;Bluetooth.c: 144: unsigned char buf[50];
  5949                           ;Bluetooth.c: 145: unsigned char ok = 1;
  5950                           
  5951                           ;incstack = 0
  5952  0010A6  0E01               	movlw	1
  5953  0010A8  0104               	movlb	4	; () banked
  5954  0010AA  6F32               	movwf	BluetoothInitialSetup@ok& (0+255),b
  5955                           
  5956                           ; BSR set to: 4
  5957                           ;Bluetooth.c: 147: cleanBuffer(buf,50);
  5958  0010AC  0E00               	movlw	low BluetoothInitialSetup@buf
  5959  0010AE  0100               	movlb	0	; () banked
  5960  0010B0  6F8C               	movwf	cleanBuffer@data& (0+255),b
  5961  0010B2  0E04               	movlw	high BluetoothInitialSetup@buf
  5962  0010B4  0100               	movlb	0	; () banked
  5963  0010B6  6F8D               	movwf	(cleanBuffer@data+1)& (0+255),b
  5964  0010B8  0E00               	movlw	0
  5965  0010BA  0100               	movlb	0	; () banked
  5966  0010BC  6F8F               	movwf	(cleanBuffer@count+1)& (0+255),b
  5967  0010BE  0E32               	movlw	50
  5968  0010C0  6F8E               	movwf	cleanBuffer@count& (0+255),b
  5969  0010C2  EC5A  F01B         	call	_cleanBuffer	;wreg free
  5970                           
  5971                           ;Bluetooth.c: 149: if(!EnterCommandMode())
  5972  0010C6  EC02  F016         	call	_EnterCommandMode	;wreg free
  5973  0010CA  0900               	iorlw	0
  5974  0010CC  B4D8               	btfsc	status,2,c
  5975  0010CE  0012               	return	
  5976  0010D0  D001               	goto	l6032
  5977                           
  5978                           ;Bluetooth.c: 150: {
  5979                           ;Bluetooth.c: 151: return 0;
  5980                           ;	Return value of _BluetoothInitialSetup is never used
  5981  0010D2  0012               	return	
  5982  0010D4                     l6032:
  5983                           
  5984                           ;Bluetooth.c: 152: }
  5985                           ;Bluetooth.c: 153: sprintf(buf,"SN,Home Automation %ld\r",SN);
  5986  0010D4  0E00               	movlw	low BluetoothInitialSetup@buf
  5987  0010D6  0101               	movlb	1	; () banked
  5988  0010D8  6FCE               	movwf	sprintf@sp& (0+255),b
  5989  0010DA  0E04               	movlw	high BluetoothInitialSetup@buf
  5990  0010DC  0101               	movlb	1	; () banked
  5991  0010DE  6FCF               	movwf	(sprintf@sp+1)& (0+255),b
  5992  0010E0  0E4E               	movlw	low STR_3
  5993  0010E2  0101               	movlb	1	; () banked
  5994  0010E4  6FD0               	movwf	sprintf@f& (0+255),b
  5995  0010E6  0E10               	movlw	high STR_3
  5996  0010E8  0101               	movlb	1	; () banked
  5997  0010EA  6FD1               	movwf	(sprintf@f+1)& (0+255),b
  5998  0010EC  C1C2  F1D2         	movff	_SN,?_sprintf+4
  5999  0010F0  C1C3  F1D3         	movff	_SN+1,?_sprintf+5
  6000  0010F4  C1C4  F1D4         	movff	_SN+2,?_sprintf+6
  6001  0010F8  C1C5  F1D5         	movff	_SN+3,?_sprintf+7
  6002  0010FC  EC03  F00F         	call	_sprintf	;wreg free
  6003                           
  6004                           ;Bluetooth.c: 154: UARTstring(buf);
  6005  001100  0E00               	movlw	low BluetoothInitialSetup@buf
  6006  001102  0100               	movlb	0	; () banked
  6007  001104  6F8D               	movwf	UARTstring@data& (0+255),b
  6008  001106  0E04               	movlw	high BluetoothInitialSetup@buf
  6009  001108  0100               	movlb	0	; () banked
  6010  00110A  6F8E               	movwf	(UARTstring@data+1)& (0+255),b
  6011  00110C  EC87  F01B         	call	_UARTstring	;wreg free
  6012                           
  6013                           ;Bluetooth.c: 155: delayUS(50000);
  6014  001110  0E50               	movlw	80
  6015  001112  0100               	movlb	0	; () banked
  6016  001114  6F8C               	movwf	delayUS@US& (0+255),b
  6017  001116  0EC3               	movlw	195
  6018  001118  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  6019  00111A  0E00               	movlw	0
  6020  00111C  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  6021  00111E  0E00               	movlw	0
  6022  001120  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  6023  001122  ECC2  F01A         	call	_delayUS	;wreg free
  6024                           
  6025                           ;Bluetooth.c: 156: if(!StringContains(CommandString,"AOK"))
  6026  001126  0E00               	movlw	low _CommandString
  6027  001128  0100               	movlb	0	; () banked
  6028  00112A  6F8C               	movwf	StringContains@This& (0+255),b
  6029  00112C  0E02               	movlw	high _CommandString
  6030  00112E  0100               	movlb	0	; () banked
  6031  001130  6F8D               	movwf	(StringContains@This+1)& (0+255),b
  6032  001132  0EA0               	movlw	low STR_4
  6033  001134  0100               	movlb	0	; () banked
  6034  001136  6F8E               	movwf	StringContains@That& (0+255),b
  6035  001138  0E10               	movlw	high STR_4
  6036  00113A  0100               	movlb	0	; () banked
  6037  00113C  6F8F               	movwf	(StringContains@That+1)& (0+255),b
  6038  00113E  EC8F  F018         	call	_StringContains	;wreg free
  6039  001142  0900               	iorlw	0
  6040  001144  A4D8               	btfss	status,2,c
  6041  001146  D004               	goto	l6042
  6042                           
  6043                           ;Bluetooth.c: 157: {
  6044                           ;Bluetooth.c: 158: ok = 0;
  6045  001148  0E00               	movlw	0
  6046  00114A  0104               	movlb	4	; () banked
  6047  00114C  6F32               	movwf	BluetoothInitialSetup@ok& (0+255),b
  6048  00114E  D000               	goto	l6042
  6049  001150                     l6042:
  6050                           
  6051                           ;Bluetooth.c: 159: }
  6052                           ;Bluetooth.c: 160: cleanBuffer(&CommandString,CommandStringPos);
  6053  001150  0E00               	movlw	low _CommandString
  6054  001152  0100               	movlb	0	; () banked
  6055  001154  6F8C               	movwf	cleanBuffer@data& (0+255),b
  6056  001156  0E02               	movlw	high _CommandString
  6057  001158  0100               	movlb	0	; () banked
  6058  00115A  6F8D               	movwf	(cleanBuffer@data+1)& (0+255),b
  6059  00115C  C047  F08E         	movff	_CommandStringPos,cleanBuffer@count
  6060  001160  0100               	movlb	0	; () banked
  6061  001162  6B8F               	clrf	(cleanBuffer@count+1)& (0+255),b
  6062  001164  EC5A  F01B         	call	_cleanBuffer	;wreg free
  6063                           
  6064                           ;Bluetooth.c: 161: CommandStringPos = 0;
  6065  001168  0E00               	movlw	0
  6066  00116A  6E47               	movwf	_CommandStringPos,c
  6067                           
  6068                           ;Bluetooth.c: 163: if(ok)
  6069  00116C  0104               	movlb	4	; () banked
  6070  00116E  5132               	movf	BluetoothInitialSetup@ok& (0+255),w,b
  6071  001170  0104               	movlb	4	; () banked
  6072  001172  B4D8               	btfsc	status,2,c
  6073  001174  D028               	goto	l6056
  6074                           
  6075                           ; BSR set to: 4
  6076                           ;Bluetooth.c: 164: {
  6077                           ;Bluetooth.c: 165: UARTstring("SS, Home Automation\r");
  6078  001176  0E66               	movlw	low STR_5
  6079  001178  0100               	movlb	0	; () banked
  6080  00117A  6F8D               	movwf	UARTstring@data& (0+255),b
  6081  00117C  0E10               	movlw	high STR_5
  6082  00117E  0100               	movlb	0	; () banked
  6083  001180  6F8E               	movwf	(UARTstring@data+1)& (0+255),b
  6084  001182  EC87  F01B         	call	_UARTstring	;wreg free
  6085                           
  6086                           ;Bluetooth.c: 166: delayUS(50000);
  6087  001186  0E50               	movlw	80
  6088  001188  0100               	movlb	0	; () banked
  6089  00118A  6F8C               	movwf	delayUS@US& (0+255),b
  6090  00118C  0EC3               	movlw	195
  6091  00118E  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  6092  001190  0E00               	movlw	0
  6093  001192  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  6094  001194  0E00               	movlw	0
  6095  001196  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  6096  001198  ECC2  F01A         	call	_delayUS	;wreg free
  6097                           
  6098                           ;Bluetooth.c: 167: if(!StringContains(CommandString,"AOK"))
  6099  00119C  0E00               	movlw	low _CommandString
  6100  00119E  0100               	movlb	0	; () banked
  6101  0011A0  6F8C               	movwf	StringContains@This& (0+255),b
  6102  0011A2  0E02               	movlw	high _CommandString
  6103  0011A4  0100               	movlb	0	; () banked
  6104  0011A6  6F8D               	movwf	(StringContains@This+1)& (0+255),b
  6105  0011A8  0EA0               	movlw	low STR_4
  6106  0011AA  0100               	movlb	0	; () banked
  6107  0011AC  6F8E               	movwf	StringContains@That& (0+255),b
  6108  0011AE  0E10               	movlw	high STR_4
  6109  0011B0  0100               	movlb	0	; () banked
  6110  0011B2  6F8F               	movwf	(StringContains@That+1)& (0+255),b
  6111  0011B4  EC8F  F018         	call	_StringContains	;wreg free
  6112  0011B8  0900               	iorlw	0
  6113  0011BA  A4D8               	btfss	status,2,c
  6114  0011BC  D004               	goto	l6056
  6115                           
  6116                           ;Bluetooth.c: 168: {
  6117                           ;Bluetooth.c: 169: ok = 0;
  6118  0011BE  0E00               	movlw	0
  6119  0011C0  0104               	movlb	4	; () banked
  6120  0011C2  6F32               	movwf	BluetoothInitialSetup@ok& (0+255),b
  6121                           
  6122                           ; BSR set to: 4
  6123  0011C4  D000               	goto	l6056
  6124  0011C6                     l6056:
  6125                           
  6126                           ;Bluetooth.c: 170: }
  6127                           ;Bluetooth.c: 171: }
  6128                           ;Bluetooth.c: 172: cleanBuffer(&CommandString,CommandStringPos);
  6129  0011C6  0E00               	movlw	low _CommandString
  6130  0011C8  0100               	movlb	0	; () banked
  6131  0011CA  6F8C               	movwf	cleanBuffer@data& (0+255),b
  6132  0011CC  0E02               	movlw	high _CommandString
  6133  0011CE  0100               	movlb	0	; () banked
  6134  0011D0  6F8D               	movwf	(cleanBuffer@data+1)& (0+255),b
  6135  0011D2  C047  F08E         	movff	_CommandStringPos,cleanBuffer@count
  6136  0011D6  0100               	movlb	0	; () banked
  6137  0011D8  6B8F               	clrf	(cleanBuffer@count+1)& (0+255),b
  6138  0011DA  EC5A  F01B         	call	_cleanBuffer	;wreg free
  6139                           
  6140                           ;Bluetooth.c: 173: CommandStringPos = 0;
  6141  0011DE  0E00               	movlw	0
  6142  0011E0  6E47               	movwf	_CommandStringPos,c
  6143                           
  6144                           ;Bluetooth.c: 175: if(ok)
  6145  0011E2  0104               	movlb	4	; () banked
  6146  0011E4  5132               	movf	BluetoothInitialSetup@ok& (0+255),w,b
  6147  0011E6  0104               	movlb	4	; () banked
  6148  0011E8  B4D8               	btfsc	status,2,c
  6149  0011EA  D028               	goto	l6070
  6150                           
  6151                           ; BSR set to: 4
  6152                           ;Bluetooth.c: 176: {
  6153                           ;Bluetooth.c: 177: UARTstring("SY,0010\r");
  6154  0011EC  0E7B               	movlw	low STR_7
  6155  0011EE  0100               	movlb	0	; () banked
  6156  0011F0  6F8D               	movwf	UARTstring@data& (0+255),b
  6157  0011F2  0E10               	movlw	high STR_7
  6158  0011F4  0100               	movlb	0	; () banked
  6159  0011F6  6F8E               	movwf	(UARTstring@data+1)& (0+255),b
  6160  0011F8  EC87  F01B         	call	_UARTstring	;wreg free
  6161                           
  6162                           ;Bluetooth.c: 178: delayUS(50000);
  6163  0011FC  0E50               	movlw	80
  6164  0011FE  0100               	movlb	0	; () banked
  6165  001200  6F8C               	movwf	delayUS@US& (0+255),b
  6166  001202  0EC3               	movlw	195
  6167  001204  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  6168  001206  0E00               	movlw	0
  6169  001208  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  6170  00120A  0E00               	movlw	0
  6171  00120C  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  6172  00120E  ECC2  F01A         	call	_delayUS	;wreg free
  6173                           
  6174                           ;Bluetooth.c: 179: if(!StringContains(CommandString,"AOK"))
  6175  001212  0E00               	movlw	low _CommandString
  6176  001214  0100               	movlb	0	; () banked
  6177  001216  6F8C               	movwf	StringContains@This& (0+255),b
  6178  001218  0E02               	movlw	high _CommandString
  6179  00121A  0100               	movlb	0	; () banked
  6180  00121C  6F8D               	movwf	(StringContains@This+1)& (0+255),b
  6181  00121E  0EA0               	movlw	low STR_4
  6182  001220  0100               	movlb	0	; () banked
  6183  001222  6F8E               	movwf	StringContains@That& (0+255),b
  6184  001224  0E10               	movlw	high STR_4
  6185  001226  0100               	movlb	0	; () banked
  6186  001228  6F8F               	movwf	(StringContains@That+1)& (0+255),b
  6187  00122A  EC8F  F018         	call	_StringContains	;wreg free
  6188  00122E  0900               	iorlw	0
  6189  001230  A4D8               	btfss	status,2,c
  6190  001232  D004               	goto	l6070
  6191                           
  6192                           ;Bluetooth.c: 180: {
  6193                           ;Bluetooth.c: 181: ok = 0;
  6194  001234  0E00               	movlw	0
  6195  001236  0104               	movlb	4	; () banked
  6196  001238  6F32               	movwf	BluetoothInitialSetup@ok& (0+255),b
  6197                           
  6198                           ; BSR set to: 4
  6199  00123A  D000               	goto	l6070
  6200  00123C                     l6070:
  6201                           
  6202                           ;Bluetooth.c: 182: }
  6203                           ;Bluetooth.c: 183: }
  6204                           ;Bluetooth.c: 184: cleanBuffer(&CommandString,CommandStringPos);
  6205  00123C  0E00               	movlw	low _CommandString
  6206  00123E  0100               	movlb	0	; () banked
  6207  001240  6F8C               	movwf	cleanBuffer@data& (0+255),b
  6208  001242  0E02               	movlw	high _CommandString
  6209  001244  0100               	movlb	0	; () banked
  6210  001246  6F8D               	movwf	(cleanBuffer@data+1)& (0+255),b
  6211  001248  C047  F08E         	movff	_CommandStringPos,cleanBuffer@count
  6212  00124C  0100               	movlb	0	; () banked
  6213  00124E  6B8F               	clrf	(cleanBuffer@count+1)& (0+255),b
  6214  001250  EC5A  F01B         	call	_cleanBuffer	;wreg free
  6215                           
  6216                           ;Bluetooth.c: 185: CommandStringPos = 0;
  6217  001254  0E00               	movlw	0
  6218  001256  6E47               	movwf	_CommandStringPos,c
  6219                           
  6220                           ;Bluetooth.c: 187: if(ok)
  6221  001258  0104               	movlb	4	; () banked
  6222  00125A  5132               	movf	BluetoothInitialSetup@ok& (0+255),w,b
  6223  00125C  0104               	movlb	4	; () banked
  6224  00125E  B4D8               	btfsc	status,2,c
  6225  001260  D028               	goto	l6084
  6226                           
  6227                           ; BSR set to: 4
  6228                           ;Bluetooth.c: 188: {
  6229                           ;Bluetooth.c: 189: UARTstring("S~,0\r");
  6230  001262  0E84               	movlw	low STR_9
  6231  001264  0100               	movlb	0	; () banked
  6232  001266  6F8D               	movwf	UARTstring@data& (0+255),b
  6233  001268  0E10               	movlw	high STR_9
  6234  00126A  0100               	movlb	0	; () banked
  6235  00126C  6F8E               	movwf	(UARTstring@data+1)& (0+255),b
  6236  00126E  EC87  F01B         	call	_UARTstring	;wreg free
  6237                           
  6238                           ;Bluetooth.c: 190: delayUS(50000);
  6239  001272  0E50               	movlw	80
  6240  001274  0100               	movlb	0	; () banked
  6241  001276  6F8C               	movwf	delayUS@US& (0+255),b
  6242  001278  0EC3               	movlw	195
  6243  00127A  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  6244  00127C  0E00               	movlw	0
  6245  00127E  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  6246  001280  0E00               	movlw	0
  6247  001282  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  6248  001284  ECC2  F01A         	call	_delayUS	;wreg free
  6249                           
  6250                           ;Bluetooth.c: 191: if(!StringContains(CommandString,"AOK"))
  6251  001288  0E00               	movlw	low _CommandString
  6252  00128A  0100               	movlb	0	; () banked
  6253  00128C  6F8C               	movwf	StringContains@This& (0+255),b
  6254  00128E  0E02               	movlw	high _CommandString
  6255  001290  0100               	movlb	0	; () banked
  6256  001292  6F8D               	movwf	(StringContains@This+1)& (0+255),b
  6257  001294  0EA0               	movlw	low STR_4
  6258  001296  0100               	movlb	0	; () banked
  6259  001298  6F8E               	movwf	StringContains@That& (0+255),b
  6260  00129A  0E10               	movlw	high STR_4
  6261  00129C  0100               	movlb	0	; () banked
  6262  00129E  6F8F               	movwf	(StringContains@That+1)& (0+255),b
  6263  0012A0  EC8F  F018         	call	_StringContains	;wreg free
  6264  0012A4  0900               	iorlw	0
  6265  0012A6  A4D8               	btfss	status,2,c
  6266  0012A8  D004               	goto	l6084
  6267                           
  6268                           ;Bluetooth.c: 192: {
  6269                           ;Bluetooth.c: 193: ok = 0;
  6270  0012AA  0E00               	movlw	0
  6271  0012AC  0104               	movlb	4	; () banked
  6272  0012AE  6F32               	movwf	BluetoothInitialSetup@ok& (0+255),b
  6273                           
  6274                           ; BSR set to: 4
  6275  0012B0  D000               	goto	l6084
  6276  0012B2                     l6084:
  6277                           
  6278                           ;Bluetooth.c: 194: }
  6279                           ;Bluetooth.c: 195: }
  6280                           ;Bluetooth.c: 196: cleanBuffer(&CommandString,CommandStringPos);
  6281  0012B2  0E00               	movlw	low _CommandString
  6282  0012B4  0100               	movlb	0	; () banked
  6283  0012B6  6F8C               	movwf	cleanBuffer@data& (0+255),b
  6284  0012B8  0E02               	movlw	high _CommandString
  6285  0012BA  0100               	movlb	0	; () banked
  6286  0012BC  6F8D               	movwf	(cleanBuffer@data+1)& (0+255),b
  6287  0012BE  C047  F08E         	movff	_CommandStringPos,cleanBuffer@count
  6288  0012C2  0100               	movlb	0	; () banked
  6289  0012C4  6B8F               	clrf	(cleanBuffer@count+1)& (0+255),b
  6290  0012C6  EC5A  F01B         	call	_cleanBuffer	;wreg free
  6291                           
  6292                           ;Bluetooth.c: 197: CommandStringPos = 0;
  6293  0012CA  0E00               	movlw	0
  6294  0012CC  6E47               	movwf	_CommandStringPos,c
  6295                           
  6296                           ;Bluetooth.c: 199: if(ok)
  6297  0012CE  0104               	movlb	4	; () banked
  6298  0012D0  5132               	movf	BluetoothInitialSetup@ok& (0+255),w,b
  6299  0012D2  0104               	movlb	4	; () banked
  6300  0012D4  B4D8               	btfsc	status,2,c
  6301  0012D6  D028               	goto	l6098
  6302                           
  6303                           ; BSR set to: 4
  6304                           ;Bluetooth.c: 200: {
  6305                           ;Bluetooth.c: 201: UARTstring("S~,0\r");
  6306  0012D8  0E84               	movlw	low STR_9
  6307  0012DA  0100               	movlb	0	; () banked
  6308  0012DC  6F8D               	movwf	UARTstring@data& (0+255),b
  6309  0012DE  0E10               	movlw	high STR_9
  6310  0012E0  0100               	movlb	0	; () banked
  6311  0012E2  6F8E               	movwf	(UARTstring@data+1)& (0+255),b
  6312  0012E4  EC87  F01B         	call	_UARTstring	;wreg free
  6313                           
  6314                           ;Bluetooth.c: 202: delayUS(50000);
  6315  0012E8  0E50               	movlw	80
  6316  0012EA  0100               	movlb	0	; () banked
  6317  0012EC  6F8C               	movwf	delayUS@US& (0+255),b
  6318  0012EE  0EC3               	movlw	195
  6319  0012F0  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  6320  0012F2  0E00               	movlw	0
  6321  0012F4  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  6322  0012F6  0E00               	movlw	0
  6323  0012F8  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  6324  0012FA  ECC2  F01A         	call	_delayUS	;wreg free
  6325                           
  6326                           ;Bluetooth.c: 203: if(!StringContains(CommandString,"AOK"))
  6327  0012FE  0E00               	movlw	low _CommandString
  6328  001300  0100               	movlb	0	; () banked
  6329  001302  6F8C               	movwf	StringContains@This& (0+255),b
  6330  001304  0E02               	movlw	high _CommandString
  6331  001306  0100               	movlb	0	; () banked
  6332  001308  6F8D               	movwf	(StringContains@This+1)& (0+255),b
  6333  00130A  0EA0               	movlw	low STR_4
  6334  00130C  0100               	movlb	0	; () banked
  6335  00130E  6F8E               	movwf	StringContains@That& (0+255),b
  6336  001310  0E10               	movlw	high STR_4
  6337  001312  0100               	movlb	0	; () banked
  6338  001314  6F8F               	movwf	(StringContains@That+1)& (0+255),b
  6339  001316  EC8F  F018         	call	_StringContains	;wreg free
  6340  00131A  0900               	iorlw	0
  6341  00131C  A4D8               	btfss	status,2,c
  6342  00131E  D004               	goto	l6098
  6343                           
  6344                           ;Bluetooth.c: 204: {
  6345                           ;Bluetooth.c: 205: ok = 0;
  6346  001320  0E00               	movlw	0
  6347  001322  0104               	movlb	4	; () banked
  6348  001324  6F32               	movwf	BluetoothInitialSetup@ok& (0+255),b
  6349                           
  6350                           ; BSR set to: 4
  6351  001326  D000               	goto	l6098
  6352  001328                     l6098:
  6353                           
  6354                           ;Bluetooth.c: 206: }
  6355                           ;Bluetooth.c: 207: }
  6356                           ;Bluetooth.c: 208: cleanBuffer(&CommandString,CommandStringPos);
  6357  001328  0E00               	movlw	low _CommandString
  6358  00132A  0100               	movlb	0	; () banked
  6359  00132C  6F8C               	movwf	cleanBuffer@data& (0+255),b
  6360  00132E  0E02               	movlw	high _CommandString
  6361  001330  0100               	movlb	0	; () banked
  6362  001332  6F8D               	movwf	(cleanBuffer@data+1)& (0+255),b
  6363  001334  C047  F08E         	movff	_CommandStringPos,cleanBuffer@count
  6364  001338  0100               	movlb	0	; () banked
  6365  00133A  6B8F               	clrf	(cleanBuffer@count+1)& (0+255),b
  6366  00133C  EC5A  F01B         	call	_cleanBuffer	;wreg free
  6367                           
  6368                           ;Bluetooth.c: 209: CommandStringPos = 0;
  6369  001340  0E00               	movlw	0
  6370  001342  6E47               	movwf	_CommandStringPos,c
  6371                           
  6372                           ;Bluetooth.c: 211: if(ok)
  6373  001344  0104               	movlb	4	; () banked
  6374  001346  5132               	movf	BluetoothInitialSetup@ok& (0+255),w,b
  6375  001348  0104               	movlb	4	; () banked
  6376  00134A  B4D8               	btfsc	status,2,c
  6377  00134C  D03E               	goto	l6114
  6378                           
  6379                           ; BSR set to: 4
  6380                           ;Bluetooth.c: 212: {
  6381                           ;Bluetooth.c: 213: UARTstring("D,0\r");
  6382  00134E  0E8F               	movlw	low STR_13
  6383  001350  0100               	movlb	0	; () banked
  6384  001352  6F8D               	movwf	UARTstring@data& (0+255),b
  6385  001354  0E10               	movlw	high STR_13
  6386  001356  0100               	movlb	0	; () banked
  6387  001358  6F8E               	movwf	(UARTstring@data+1)& (0+255),b
  6388  00135A  EC87  F01B         	call	_UARTstring	;wreg free
  6389                           
  6390                           ;Bluetooth.c: 214: delayUS(50000);
  6391  00135E  0E50               	movlw	80
  6392  001360  0100               	movlb	0	; () banked
  6393  001362  6F8C               	movwf	delayUS@US& (0+255),b
  6394  001364  0EC3               	movlw	195
  6395  001366  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  6396  001368  0E00               	movlw	0
  6397  00136A  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  6398  00136C  0E00               	movlw	0
  6399  00136E  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  6400  001370  ECC2  F01A         	call	_delayUS	;wreg free
  6401                           
  6402                           ;Bluetooth.c: 215: sprintf(buf,"BTName=Home Automation %ld\r",SN);
  6403  001374  0E00               	movlw	low BluetoothInitialSetup@buf
  6404  001376  0101               	movlb	1	; () banked
  6405  001378  6FCE               	movwf	sprintf@sp& (0+255),b
  6406  00137A  0E04               	movlw	high BluetoothInitialSetup@buf
  6407  00137C  0101               	movlb	1	; () banked
  6408  00137E  6FCF               	movwf	(sprintf@sp+1)& (0+255),b
  6409  001380  0E32               	movlw	low STR_14
  6410  001382  0101               	movlb	1	; () banked
  6411  001384  6FD0               	movwf	sprintf@f& (0+255),b
  6412  001386  0E10               	movlw	high STR_14
  6413  001388  0101               	movlb	1	; () banked
  6414  00138A  6FD1               	movwf	(sprintf@f+1)& (0+255),b
  6415  00138C  C1C2  F1D2         	movff	_SN,?_sprintf+4
  6416  001390  C1C3  F1D3         	movff	_SN+1,?_sprintf+5
  6417  001394  C1C4  F1D4         	movff	_SN+2,?_sprintf+6
  6418  001398  C1C5  F1D5         	movff	_SN+3,?_sprintf+7
  6419  00139C  EC03  F00F         	call	_sprintf	;wreg free
  6420                           
  6421                           ;Bluetooth.c: 216: if(!StringContains(CommandString, buf))
  6422  0013A0  0E00               	movlw	low _CommandString
  6423  0013A2  0100               	movlb	0	; () banked
  6424  0013A4  6F8C               	movwf	StringContains@This& (0+255),b
  6425  0013A6  0E02               	movlw	high _CommandString
  6426  0013A8  0100               	movlb	0	; () banked
  6427  0013AA  6F8D               	movwf	(StringContains@This+1)& (0+255),b
  6428  0013AC  0E00               	movlw	low BluetoothInitialSetup@buf
  6429  0013AE  0100               	movlb	0	; () banked
  6430  0013B0  6F8E               	movwf	StringContains@That& (0+255),b
  6431  0013B2  0E04               	movlw	high BluetoothInitialSetup@buf
  6432  0013B4  0100               	movlb	0	; () banked
  6433  0013B6  6F8F               	movwf	(StringContains@That+1)& (0+255),b
  6434  0013B8  EC8F  F018         	call	_StringContains	;wreg free
  6435  0013BC  0900               	iorlw	0
  6436  0013BE  A4D8               	btfss	status,2,c
  6437  0013C0  D004               	goto	l6114
  6438                           
  6439                           ;Bluetooth.c: 217: {
  6440                           ;Bluetooth.c: 218: ok = 0;
  6441  0013C2  0E00               	movlw	0
  6442  0013C4  0104               	movlb	4	; () banked
  6443  0013C6  6F32               	movwf	BluetoothInitialSetup@ok& (0+255),b
  6444                           
  6445                           ; BSR set to: 4
  6446  0013C8  D000               	goto	l6114
  6447  0013CA                     l6114:
  6448                           
  6449                           ;Bluetooth.c: 219: }
  6450                           ;Bluetooth.c: 220: }
  6451                           ;Bluetooth.c: 221: cleanBuffer(&CommandString,CommandStringPos);
  6452  0013CA  0E00               	movlw	low _CommandString
  6453  0013CC  0100               	movlb	0	; () banked
  6454  0013CE  6F8C               	movwf	cleanBuffer@data& (0+255),b
  6455  0013D0  0E02               	movlw	high _CommandString
  6456  0013D2  0100               	movlb	0	; () banked
  6457  0013D4  6F8D               	movwf	(cleanBuffer@data+1)& (0+255),b
  6458  0013D6  C047  F08E         	movff	_CommandStringPos,cleanBuffer@count
  6459  0013DA  0100               	movlb	0	; () banked
  6460  0013DC  6B8F               	clrf	(cleanBuffer@count+1)& (0+255),b
  6461  0013DE  EC5A  F01B         	call	_cleanBuffer	;wreg free
  6462                           
  6463                           ;Bluetooth.c: 222: CommandStringPos = 0;
  6464  0013E2  0E00               	movlw	0
  6465  0013E4  6E47               	movwf	_CommandStringPos,c
  6466                           
  6467                           ;Bluetooth.c: 224: UARTstring("---\r");
  6468  0013E6  0E8A               	movlw	low STR_15
  6469  0013E8  0100               	movlb	0	; () banked
  6470  0013EA  6F8D               	movwf	UARTstring@data& (0+255),b
  6471  0013EC  0E10               	movlw	high STR_15
  6472  0013EE  0100               	movlb	0	; () banked
  6473  0013F0  6F8E               	movwf	(UARTstring@data+1)& (0+255),b
  6474  0013F2  EC87  F01B         	call	_UARTstring	;wreg free
  6475                           
  6476                           ;Bluetooth.c: 225: delayUS(50000);
  6477  0013F6  0E50               	movlw	80
  6478  0013F8  0100               	movlb	0	; () banked
  6479  0013FA  6F8C               	movwf	delayUS@US& (0+255),b
  6480  0013FC  0EC3               	movlw	195
  6481  0013FE  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  6482  001400  0E00               	movlw	0
  6483  001402  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  6484  001404  0E00               	movlw	0
  6485  001406  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  6486  001408  ECC2  F01A         	call	_delayUS	;wreg free
  6487                           
  6488                           ;Bluetooth.c: 226: if(!StringContains(CommandString, "END"))
  6489  00140C  0E00               	movlw	low _CommandString
  6490  00140E  0100               	movlb	0	; () banked
  6491  001410  6F8C               	movwf	StringContains@This& (0+255),b
  6492  001412  0E02               	movlw	high _CommandString
  6493  001414  0100               	movlb	0	; () banked
  6494  001416  6F8D               	movwf	(StringContains@This+1)& (0+255),b
  6495  001418  0E9C               	movlw	low STR_16
  6496  00141A  0100               	movlb	0	; () banked
  6497  00141C  6F8E               	movwf	StringContains@That& (0+255),b
  6498  00141E  0E10               	movlw	high STR_16
  6499  001420  0100               	movlb	0	; () banked
  6500  001422  6F8F               	movwf	(StringContains@That+1)& (0+255),b
  6501  001424  EC8F  F018         	call	_StringContains	;wreg free
  6502  001428  0900               	iorlw	0
  6503  00142A  A4D8               	btfss	status,2,c
  6504  00142C  D004               	goto	l6126
  6505                           
  6506                           ;Bluetooth.c: 227: {
  6507                           ;Bluetooth.c: 228: ok = 0;
  6508  00142E  0E00               	movlw	0
  6509  001430  0104               	movlb	4	; () banked
  6510  001432  6F32               	movwf	BluetoothInitialSetup@ok& (0+255),b
  6511  001434  D000               	goto	l6126
  6512  001436                     l6126:
  6513                           
  6514                           ;Bluetooth.c: 229: }
  6515                           ;Bluetooth.c: 230: cleanBuffer(&CommandString,CommandStringPos);
  6516  001436  0E00               	movlw	low _CommandString
  6517  001438  0100               	movlb	0	; () banked
  6518  00143A  6F8C               	movwf	cleanBuffer@data& (0+255),b
  6519  00143C  0E02               	movlw	high _CommandString
  6520  00143E  0100               	movlb	0	; () banked
  6521  001440  6F8D               	movwf	(cleanBuffer@data+1)& (0+255),b
  6522  001442  C047  F08E         	movff	_CommandStringPos,cleanBuffer@count
  6523  001446  0100               	movlb	0	; () banked
  6524  001448  6B8F               	clrf	(cleanBuffer@count+1)& (0+255),b
  6525  00144A  EC5A  F01B         	call	_cleanBuffer	;wreg free
  6526                           
  6527                           ;Bluetooth.c: 231: CommandStringPos = 0;
  6528  00144E  0E00               	movlw	0
  6529  001450  6E47               	movwf	_CommandStringPos,c
  6530                           
  6531                           ;Bluetooth.c: 234: {
  6532                           ;Bluetooth.c: 235: return 1;
  6533                           ;	Return value of _BluetoothInitialSetup is never used
  6534  001452  0012               	return	
  6535                           
  6536                           ;Bluetooth.c: 236: }
  6537                           ;Bluetooth.c: 237: return 0;
  6538                           ;	Return value of _BluetoothInitialSetup is never used
  6539  001454  0012               	return		;funcret
  6540  001456                     __end_of_BluetoothInitialSetup:
  6541                           	opt stack 0
  6542                           tblptru	equ	0xFF8
  6543                           tblptrh	equ	0xFF7
  6544                           tblptrl	equ	0xFF6
  6545                           tablat	equ	0xFF5
  6546                           prodh	equ	0xFF4
  6547                           prodl	equ	0xFF3
  6548                           intcon	equ	0xFF2
  6549                           intcon2	equ	0xFF1
  6550                           postinc0	equ	0xFEE
  6551                           plusw0	equ	0xFEB
  6552                           wreg	equ	0xFE8
  6553                           postdec1	equ	0xFE5
  6554                           fsr1h	equ	0xFE2
  6555                           fsr1l	equ	0xFE1
  6556                           postinc2	equ	0xFDE
  6557                           postdec2	equ	0xFDD
  6558                           plusw2	equ	0xFDB
  6559                           fsr2h	equ	0xFDA
  6560                           fsr2l	equ	0xFD9
  6561                           status	equ	0xFD8
  6562                           
  6563 ;; *************** function _sprintf *****************
  6564 ;; Defined at:
  6565 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;  sp              2    8[BANK1 ] PTR unsigned char 
  6568 ;;		 -> BluetoothInitialSetup@buf(50), 
  6569 ;;  f               2   10[BANK1 ] PTR const unsigned char 
  6570 ;;		 -> STR_14(28), STR_3(24), 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  val             4   21[BANK1 ] unsigned long 
  6573 ;;  tmpval          4    0        struct .
  6574 ;;  cp              3    0        PTR const unsigned char 
  6575 ;;  ap              2   18[BANK1 ] PTR void [1]
  6576 ;;		 -> ?_sprintf(2), 
  6577 ;;  prec            2   16[BANK1 ] int 
  6578 ;;  len             2    0        unsigned int 
  6579 ;;  c               1   25[BANK1 ] char 
  6580 ;;  flag            1   20[BANK1 ] unsigned char 
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  2    8[BANK1 ] int 
  6583 ;; Registers used:
  6584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6590 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6591 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6592 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6593 ;;      Totals:         0       2      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6594 ;;Total ram usage:       20 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:   10
  6597 ;; This function calls:
  6598 ;;		___lldiv
  6599 ;;		___llmod
  6600 ;; This function is called by:
  6601 ;;		_BluetoothInitialSetup
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text32
  6606  001E06                     __ptext32:
  6607                           	opt stack 0
  6608  001E06                     _sprintf:
  6609                           	opt stack 17
  6610                           
  6611                           ;doprnt.c: 494: va_list ap;
  6612                           ;doprnt.c: 499: signed char c;
  6613                           ;doprnt.c: 504: int prec;
  6614                           ;doprnt.c: 508: unsigned char flag;
  6615                           ;doprnt.c: 523: union {
  6616                           ;doprnt.c: 524: unsigned long vd;
  6617                           ;doprnt.c: 525: double integ;
  6618                           ;doprnt.c: 526: } tmpval;
  6619                           ;doprnt.c: 528: unsigned long val;
  6620                           ;doprnt.c: 529: unsigned len;
  6621                           ;doprnt.c: 530: const char * cp;
  6622                           ;doprnt.c: 533: *ap = __va_start();
  6623                           
  6624                           ;incstack = 0
  6625  001E06  0ED2               	movlw	low (?_sprintf+4)
  6626  001E08  0101               	movlb	1	; () banked
  6627  001E0A  6FD8               	movwf	sprintf@ap& (0+255),b
  6628  001E0C  0E01               	movlw	high (?_sprintf+4)
  6629  001E0E  0101               	movlb	1	; () banked
  6630  001E10  6FD9               	movwf	(sprintf@ap+1)& (0+255),b
  6631                           
  6632                           ;doprnt.c: 536: while(c = *f++) {
  6633  001E12  D103               	goto	l5778
  6634  001E14                     l5720:
  6635                           
  6636                           ; BSR set to: 1
  6637                           ;doprnt.c: 538: if(c != '%')
  6638  001E14  0E25               	movlw	37
  6639  001E16  0101               	movlb	1	; () banked
  6640  001E18  19DF               	xorwf	sprintf@c& (0+255),w,b
  6641  001E1A  B4D8               	btfsc	status,2,c
  6642  001E1C  D00A               	goto	l5726
  6643                           
  6644                           ; BSR set to: 1
  6645                           ;doprnt.c: 540: {
  6646                           ;doprnt.c: 541: ((*sp++ = (c)));
  6647  001E1E  C1CE  FFD9         	movff	sprintf@sp,fsr2l
  6648  001E22  C1CF  FFDA         	movff	sprintf@sp+1,fsr2h
  6649  001E26  C1DF  FFDF         	movff	sprintf@c,indf2
  6650                           
  6651                           ; BSR set to: 1
  6652  001E2A  0101               	movlb	1	; () banked
  6653  001E2C  4BCE               	infsnz	sprintf@sp& (0+255),f,b
  6654  001E2E  2BCF               	incf	(sprintf@sp+1)& (0+255),f,b
  6655                           
  6656                           ;doprnt.c: 542: continue;
  6657  001E30  D0F4               	goto	l5778
  6658  001E32                     l5726:
  6659                           
  6660                           ; BSR set to: 1
  6661                           ;doprnt.c: 543: }
  6662                           ;doprnt.c: 548: flag = 0;
  6663  001E32  0E00               	movlw	0
  6664  001E34  0101               	movlb	1	; () banked
  6665  001E36  6FDA               	movwf	sprintf@flag& (0+255),b
  6666                           
  6667                           ; BSR set to: 1
  6668                           ;doprnt.c: 635: switch(c = *f++) {
  6669                           
  6670                           ;doprnt.c: 633: loop:
  6671  001E38  D007               	goto	l5732
  6672                           
  6673                           ; BSR set to: 1
  6674                           ;doprnt.c: 638: goto alldone;
  6675                           
  6676                           ;doprnt.c: 637: case 0:
  6677  001E3A  D0FF               	goto	l5780
  6678  001E3C                     l5728:
  6679                           
  6680                           ; BSR set to: 1
  6681                           ;doprnt.c: 643: flag |= 0x10;
  6682  001E3C  0101               	movlb	1	; () banked
  6683  001E3E  89DA               	bsf	sprintf@flag& (0+255),4,b
  6684                           
  6685                           ;doprnt.c: 644: goto loop;
  6686  001E40  D003               	goto	l5732
  6687                           
  6688                           ; BSR set to: 1
  6689                           ;doprnt.c: 698: case 'i':
  6690                           ;doprnt.c: 699: break;
  6691                           
  6692                           ; BSR set to: 1
  6693                           
  6694                           ;doprnt.c: 697: case 'd':
  6695  001E42  D01B               	goto	l879
  6696                           
  6697                           ; BSR set to: 1
  6698                           ;doprnt.c: 813: continue;
  6699                           
  6700                           ;doprnt.c: 802: default:
  6701  001E44  D0EA               	goto	l5778
  6702                           
  6703                           ; BSR set to: 1
  6704                           ;doprnt.c: 822: }
  6705  001E46  D019               	goto	l879
  6706  001E48                     l5732:
  6707                           
  6708                           ; BSR set to: 1
  6709  001E48  C1D0  FFF6         	movff	sprintf@f,tblptrl
  6710  001E4C  C1D1  FFF7         	movff	sprintf@f+1,tblptrh
  6711  001E50  0101               	movlb	1	; () banked
  6712  001E52  4BD0               	infsnz	sprintf@f& (0+255),f,b
  6713  001E54  2BD1               	incf	(sprintf@f+1)& (0+255),f,b
  6714  001E56                     	if	0	;tblptru may be non-zero
  6715  001E56                     	endif
  6716  001E56                     	if	0	;tblptru may be non-zero
  6717  001E56                     	endif
  6718  001E56  0008               	tblrd		*
  6719  001E58  CFF5 F1DF          	movff	tablat,sprintf@c
  6720  001E5C  0101               	movlb	1	; () banked
  6721  001E5E  51DF               	movf	sprintf@c& (0+255),w,b
  6722                           
  6723                           ; Switch size 1, requested type "space"
  6724                           ; Number of cases is 4, Range of values is 0 to 108
  6725                           ; switch strategies available:
  6726                           ; Name         Instructions Cycles
  6727                           ; simple_byte           13     7 (average)
  6728                           ;	Chosen strategy is simple_byte
  6729  001E60  0A00               	xorlw	0	; case 0
  6730  001E62  B4D8               	btfsc	status,2,c
  6731  001E64  D0EA               	goto	l5780
  6732  001E66  0A64               	xorlw	100	; case 100
  6733  001E68  B4D8               	btfsc	status,2,c
  6734  001E6A  D007               	goto	l879
  6735  001E6C  0A0D               	xorlw	13	; case 105
  6736  001E6E  B4D8               	btfsc	status,2,c
  6737  001E70  D004               	goto	l879
  6738  001E72  0A05               	xorlw	5	; case 108
  6739  001E74  B4D8               	btfsc	status,2,c
  6740  001E76  D7E2               	goto	l5728
  6741  001E78  D0D0               	goto	l5778
  6742  001E7A                     l879:
  6743                           
  6744                           ; BSR set to: 1
  6745                           ;doprnt.c: 1253: {
  6746                           ;doprnt.c: 1255: if(flag & 0x10)
  6747  001E7A  0101               	movlb	1	; () banked
  6748  001E7C  A9DA               	btfss	sprintf@flag& (0+255),4,b
  6749  001E7E  D00E               	goto	l5738
  6750                           
  6751                           ; BSR set to: 1
  6752                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  6753  001E80  C1D8  FFD9         	movff	sprintf@ap,fsr2l
  6754  001E84  C1D9  FFDA         	movff	sprintf@ap+1,fsr2h
  6755  001E88  CFDE F1DB          	movff	postinc2,sprintf@val
  6756  001E8C  CFDE F1DC          	movff	postinc2,sprintf@val+1
  6757  001E90  CFDE F1DD          	movff	postinc2,sprintf@val+2
  6758  001E94  CFDE F1DE          	movff	postinc2,sprintf@val+3
  6759                           
  6760                           ; BSR set to: 1
  6761  001E98  0E04               	movlw	4
  6762  001E9A  D00F               	goto	L1
  6763  001E9C                     l5738:
  6764                           
  6765                           ; BSR set to: 1
  6766                           ;doprnt.c: 1257: else
  6767                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  6768  001E9C  C1D8  FFD9         	movff	sprintf@ap,fsr2l
  6769  001EA0  C1D9  FFDA         	movff	sprintf@ap+1,fsr2h
  6770  001EA4  CFDE F1DB          	movff	postinc2,sprintf@val
  6771  001EA8  CFDD F1DC          	movff	postdec2,sprintf@val+1
  6772  001EAC  0101               	movlb	1	; () banked
  6773  001EAE  0E00               	movlw	0
  6774  001EB0  BFDC               	btfsc	(sprintf@val+1)& (0+255),7,b
  6775  001EB2  0EFF               	movlw	-1
  6776  001EB4  6FDD               	movwf	(sprintf@val+2)& (0+255),b
  6777  001EB6  6FDE               	movwf	(sprintf@val+3)& (0+255),b
  6778                           
  6779                           ; BSR set to: 1
  6780  001EB8  0E02               	movlw	2
  6781  001EBA                     L1:
  6782  001EBA  0101               	movlb	1	; () banked
  6783  001EBC  27D8               	addwf	sprintf@ap& (0+255),f,b
  6784  001EBE  0E00               	movlw	0
  6785  001EC0  23D9               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6786  001EC2  D000               	goto	l5742
  6787  001EC4                     l5742:
  6788                           
  6789                           ; BSR set to: 1
  6790                           ;doprnt.c: 1261: if((long)val < 0) {
  6791  001EC4  0101               	movlb	1	; () banked
  6792  001EC6  AFDE               	btfss	(sprintf@val+3)& (0+255),7,b
  6793  001EC8  D00D               	goto	l5748
  6794                           
  6795                           ; BSR set to: 1
  6796                           ;doprnt.c: 1262: flag |= 0x03;
  6797  001ECA  0E03               	movlw	3
  6798  001ECC  0101               	movlb	1	; () banked
  6799  001ECE  13DA               	iorwf	sprintf@flag& (0+255),f,b
  6800                           
  6801                           ; BSR set to: 1
  6802                           ;doprnt.c: 1263: val = -val;
  6803  001ED0  0101               	movlb	1	; () banked
  6804  001ED2  1FDE               	comf	(sprintf@val+3)& (0+255),f,b
  6805  001ED4  1FDD               	comf	(sprintf@val+2)& (0+255),f,b
  6806  001ED6  1FDC               	comf	(sprintf@val+1)& (0+255),f,b
  6807  001ED8  6DDB               	negf	sprintf@val& (0+255),b
  6808  001EDA  0E00               	movlw	0
  6809  001EDC  23DC               	addwfc	(sprintf@val+1)& (0+255),f,b
  6810  001EDE  23DD               	addwfc	(sprintf@val+2)& (0+255),f,b
  6811  001EE0  23DE               	addwfc	(sprintf@val+3)& (0+255),f,b
  6812  001EE2  D000               	goto	l5748
  6813  001EE4                     l5748:
  6814                           
  6815                           ; BSR set to: 1
  6816                           ;doprnt.c: 1264: }
  6817                           ;doprnt.c: 1266: }
  6818                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6819  001EE4  0E01               	movlw	1
  6820  001EE6  0101               	movlb	1	; () banked
  6821  001EE8  6FDF               	movwf	sprintf@c& (0+255),b
  6822  001EEA                     l5750:
  6823                           
  6824                           ; BSR set to: 1
  6825  001EEA  0E0A               	movlw	10
  6826  001EEC  0101               	movlb	1	; () banked
  6827  001EEE  19DF               	xorwf	sprintf@c& (0+255),w,b
  6828  001EF0  B4D8               	btfsc	status,2,c
  6829  001EF2  D022               	goto	l5762
  6830  001EF4  D001               	goto	l5754
  6831                           
  6832                           ; BSR set to: 1
  6833  001EF6  D020               	goto	l5762
  6834  001EF8                     l5754:
  6835                           
  6836                           ; BSR set to: 1
  6837                           ;doprnt.c: 1306: if(val < dpowers[c])
  6838  001EF8  0101               	movlb	1	; () banked
  6839  001EFA  51DF               	movf	sprintf@c& (0+255),w,b
  6840  001EFC  0D04               	mullw	4
  6841  001EFE  0E01               	movlw	low _dpowers
  6842  001F00  24F3               	addwf	prodl,w,c
  6843  001F02  6EF6               	movwf	tblptrl,c
  6844  001F04  0E10               	movlw	high _dpowers
  6845  001F06  20F4               	addwfc	prodh,w,c
  6846  001F08  6EF7               	movwf	tblptrh,c
  6847  001F0A                     	if	0	;There are less than 3 active tblptr bytes
  6848  001F0A                     	endif
  6849  001F0A  0009               	tblrd		*+
  6850  001F0C  50F5               	movf	tablat,w,c
  6851  001F0E  0101               	movlb	1	; () banked
  6852  001F10  5DDB               	subwf	sprintf@val& (0+255),w,b
  6853  001F12  0009               	tblrd		*+
  6854  001F14  50F5               	movf	tablat,w,c
  6855  001F16  0101               	movlb	1	; () banked
  6856  001F18  59DC               	subwfb	(sprintf@val+1)& (0+255),w,b
  6857  001F1A  0009               	tblrd		*+
  6858  001F1C  50F5               	movf	tablat,w,c
  6859  001F1E  0101               	movlb	1	; () banked
  6860  001F20  59DD               	subwfb	(sprintf@val+2)& (0+255),w,b
  6861  001F22  0009               	tblrd		*+
  6862  001F24  50F5               	movf	tablat,w,c
  6863  001F26  0101               	movlb	1	; () banked
  6864  001F28  59DE               	subwfb	(sprintf@val+3)& (0+255),w,b
  6865  001F2A  A0D8               	btfss	status,0,c
  6866  001F2C  D005               	goto	l5762
  6867  001F2E  D001               	goto	l5758
  6868                           
  6869                           ; BSR set to: 1
  6870                           ;doprnt.c: 1307: break;
  6871  001F30  D003               	goto	l5762
  6872  001F32                     l5758:
  6873                           
  6874                           ; BSR set to: 1
  6875  001F32  0101               	movlb	1	; () banked
  6876  001F34  2BDF               	incf	sprintf@c& (0+255),f,b
  6877  001F36  D7D9               	goto	l5750
  6878  001F38                     l5762:
  6879                           
  6880                           ; BSR set to: 1
  6881                           ;doprnt.c: 1422: {
  6882                           ;doprnt.c: 1438: if(flag & 0x03)
  6883  001F38  C1DA  F09A         	movff	sprintf@flag,??_sprintf
  6884  001F3C  0E03               	movlw	3
  6885  001F3E  0100               	movlb	0	; () banked
  6886  001F40  179A               	andwf	??_sprintf& (0+255),f,b
  6887  001F42  B4D8               	btfsc	status,2,c
  6888  001F44  D00A               	goto	l5768
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  6892  001F46  C1CE  FFD9         	movff	sprintf@sp,fsr2l
  6893  001F4A  C1CF  FFDA         	movff	sprintf@sp+1,fsr2h
  6894  001F4E  0E2D               	movlw	45
  6895  001F50  6EDF               	movwf	indf2,c
  6896                           
  6897                           ; BSR set to: 0
  6898  001F52  0101               	movlb	1	; () banked
  6899  001F54  4BCE               	infsnz	sprintf@sp& (0+255),f,b
  6900  001F56  2BCF               	incf	(sprintf@sp+1)& (0+255),f,b
  6901  001F58  D000               	goto	l5768
  6902  001F5A                     l5768:
  6903                           
  6904                           ;doprnt.c: 1469: }
  6905                           ;doprnt.c: 1472: prec = c;
  6906  001F5A  0101               	movlb	1	; () banked
  6907  001F5C  51DF               	movf	sprintf@c& (0+255),w,b
  6908  001F5E  0101               	movlb	1	; () banked
  6909  001F60  6FD6               	movwf	sprintf@prec& (0+255),b
  6910  001F62  6BD7               	clrf	(sprintf@prec+1)& (0+255),b
  6911  001F64  BFD6               	btfsc	sprintf@prec& (0+255),7,b
  6912  001F66  07D7               	decf	(sprintf@prec+1)& (0+255),f,b
  6913                           
  6914                           ;doprnt.c: 1474: while(prec--) {
  6915  001F68  D04B               	goto	l5776
  6916  001F6A                     l5770:
  6917                           
  6918                           ; BSR set to: 1
  6919                           ;doprnt.c: 1478: {
  6920                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6921  001F6A  C1D6  F09A         	movff	sprintf@prec,??_sprintf
  6922  001F6E  C1D7  F09B         	movff	sprintf@prec+1,??_sprintf+1
  6923  001F72  0100               	movlb	0	; () banked
  6924  001F74  90D8               	bcf	status,0,c
  6925  001F76  379A               	rlcf	??_sprintf& (0+255),f,b
  6926  001F78  379B               	rlcf	(??_sprintf+1)& (0+255),f,b
  6927  001F7A  0100               	movlb	0	; () banked
  6928  001F7C  90D8               	bcf	status,0,c
  6929  001F7E  379A               	rlcf	??_sprintf& (0+255),f,b
  6930  001F80  379B               	rlcf	(??_sprintf+1)& (0+255),f,b
  6931  001F82  0E01               	movlw	low _dpowers
  6932  001F84  0100               	movlb	0	; () banked
  6933  001F86  259A               	addwf	??_sprintf& (0+255),w,b
  6934  001F88  6EF6               	movwf	tblptrl,c
  6935  001F8A  0E10               	movlw	high _dpowers
  6936  001F8C  219B               	addwfc	(??_sprintf+1)& (0+255),w,b
  6937  001F8E  6EF7               	movwf	tblptrh,c
  6938  001F90                     	if	0	;There are less than 3 active tblptr bytes
  6939  001F90                     	endif
  6940  001F90  0009               	tblrd		*+
  6941  001F92  CFF5 F090          	movff	tablat,___lldiv@divisor
  6942  001F96  0009               	tblrd		*+
  6943  001F98  CFF5 F091          	movff	tablat,___lldiv@divisor+1
  6944  001F9C  0009               	tblrd		*+
  6945  001F9E  CFF5 F092          	movff	tablat,___lldiv@divisor+2
  6946  001FA2  000A               	tblrd		*-
  6947  001FA4  CFF5 F093          	movff	tablat,___lldiv@divisor+3
  6948  001FA8  C1DB  F08C         	movff	sprintf@val,___lldiv@dividend
  6949  001FAC  C1DC  F08D         	movff	sprintf@val+1,___lldiv@dividend+1
  6950  001FB0  C1DD  F08E         	movff	sprintf@val+2,___lldiv@dividend+2
  6951  001FB4  C1DE  F08F         	movff	sprintf@val+3,___lldiv@dividend+3
  6952  001FB8  ECCA  F016         	call	___lldiv	;wreg free
  6953  001FBC  C08C  F1C6         	movff	?___lldiv,___llmod@dividend
  6954  001FC0  C08D  F1C7         	movff	?___lldiv+1,___llmod@dividend+1
  6955  001FC4  C08E  F1C8         	movff	?___lldiv+2,___llmod@dividend+2
  6956  001FC8  C08F  F1C9         	movff	?___lldiv+3,___llmod@dividend+3
  6957  001FCC  0E0A               	movlw	10
  6958  001FCE  0101               	movlb	1	; () banked
  6959  001FD0  6FCA               	movwf	___llmod@divisor& (0+255),b
  6960  001FD2  0E00               	movlw	0
  6961  001FD4  6FCB               	movwf	(___llmod@divisor+1)& (0+255),b
  6962  001FD6  0E00               	movlw	0
  6963  001FD8  6FCC               	movwf	(___llmod@divisor+2)& (0+255),b
  6964  001FDA  0E00               	movlw	0
  6965  001FDC  6FCD               	movwf	(___llmod@divisor+3)& (0+255),b
  6966  001FDE  EC3D  F018         	call	___llmod	;wreg free
  6967  001FE2  0101               	movlb	1	; () banked
  6968  001FE4  51C6               	movf	?___llmod& (0+255),w,b
  6969  001FE6  0F30               	addlw	48
  6970  001FE8  0101               	movlb	1	; () banked
  6971  001FEA  6FDF               	movwf	sprintf@c& (0+255),b
  6972                           
  6973                           ; BSR set to: 1
  6974                           ;doprnt.c: 1523: }
  6975                           ;doprnt.c: 1524: ((*sp++ = (c)));
  6976  001FEC  C1CE  FFD9         	movff	sprintf@sp,fsr2l
  6977  001FF0  C1CF  FFDA         	movff	sprintf@sp+1,fsr2h
  6978  001FF4  C1DF  FFDF         	movff	sprintf@c,indf2
  6979                           
  6980                           ; BSR set to: 1
  6981  001FF8  0101               	movlb	1	; () banked
  6982  001FFA  4BCE               	infsnz	sprintf@sp& (0+255),f,b
  6983  001FFC  2BCF               	incf	(sprintf@sp+1)& (0+255),f,b
  6984  001FFE  D000               	goto	l5776
  6985  002000                     l5776:
  6986                           
  6987                           ; BSR set to: 1
  6988  002000  0101               	movlb	1	; () banked
  6989  002002  07D6               	decf	sprintf@prec& (0+255),f,b
  6990  002004  A0D8               	btfss	status,0,c
  6991  002006  07D7               	decf	(sprintf@prec+1)& (0+255),f,b
  6992  002008  0101               	movlb	1	; () banked
  6993  00200A  29D6               	incf	sprintf@prec& (0+255),w,b
  6994  00200C  E1AE               	bnz	l5770
  6995  00200E  0101               	movlb	1	; () banked
  6996  002010  29D7               	incf	(sprintf@prec+1)& (0+255),w,b
  6997  002012  B4D8               	btfsc	status,2,c
  6998  002014  D002               	goto	l5778
  6999  002016  D7A9               	goto	l5770
  7000                           
  7001                           ; BSR set to: 1
  7002  002018  D000               	goto	l5778
  7003  00201A                     l5778:
  7004                           
  7005                           ; BSR set to: 1
  7006  00201A  C1D0  FFF6         	movff	sprintf@f,tblptrl
  7007  00201E  C1D1  FFF7         	movff	sprintf@f+1,tblptrh
  7008  002022  0101               	movlb	1	; () banked
  7009  002024  4BD0               	infsnz	sprintf@f& (0+255),f,b
  7010  002026  2BD1               	incf	(sprintf@f+1)& (0+255),f,b
  7011  002028                     	if	0	;tblptru may be non-zero
  7012  002028                     	endif
  7013  002028                     	if	0	;tblptru may be non-zero
  7014  002028                     	endif
  7015  002028  0008               	tblrd		*
  7016  00202A  CFF5 F1DF          	movff	tablat,sprintf@c
  7017  00202E  0101               	movlb	1	; () banked
  7018  002030  51DF               	movf	sprintf@c& (0+255),w,b
  7019  002032  B4D8               	btfsc	status,2,c
  7020  002034  D002               	goto	l5780
  7021  002036  D6EE               	goto	l5720
  7022                           
  7023                           ; BSR set to: 1
  7024  002038  D000               	goto	l5780
  7025  00203A                     l5780:
  7026                           
  7027                           ; BSR set to: 1
  7028                           ;doprnt.c: 1538: *sp = 0;
  7029  00203A  C1CE  FFD9         	movff	sprintf@sp,fsr2l
  7030  00203E  C1CF  FFDA         	movff	sprintf@sp+1,fsr2h
  7031  002042  0E00               	movlw	0
  7032  002044  6EDF               	movwf	indf2,c
  7033  002046  0012               	return	
  7034                           
  7035                           ; BSR set to: 1
  7036                           
  7037                           ; BSR set to: 1
  7038                           ;doprnt.c: 1540: return 0;
  7039                           ;	Return value of _sprintf is never used
  7040  002048  0012               	return		;funcret
  7041  00204A                     __end_of_sprintf:
  7042                           	opt stack 0
  7043                           tblptru	equ	0xFF8
  7044                           tblptrh	equ	0xFF7
  7045                           tblptrl	equ	0xFF6
  7046                           tablat	equ	0xFF5
  7047                           prodh	equ	0xFF4
  7048                           prodl	equ	0xFF3
  7049                           intcon	equ	0xFF2
  7050                           intcon2	equ	0xFF1
  7051                           postinc0	equ	0xFEE
  7052                           plusw0	equ	0xFEB
  7053                           wreg	equ	0xFE8
  7054                           postdec1	equ	0xFE5
  7055                           fsr1h	equ	0xFE2
  7056                           fsr1l	equ	0xFE1
  7057                           indf2	equ	0xFDF
  7058                           postinc2	equ	0xFDE
  7059                           postdec2	equ	0xFDD
  7060                           plusw2	equ	0xFDB
  7061                           fsr2h	equ	0xFDA
  7062                           fsr2l	equ	0xFD9
  7063                           status	equ	0xFD8
  7064                           
  7065 ;; *************** function ___llmod *****************
  7066 ;; Defined at:
  7067 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  dividend        4    0[BANK1 ] unsigned long 
  7070 ;;  divisor         4    4[BANK1 ] unsigned long 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  counter         1   57[BANK0 ] unsigned char 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  4    0[BANK1 ] unsigned long 
  7075 ;; Registers used:
  7076 ;;		wreg, status,2, status,0
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7082 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7085 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7086 ;;Total ram usage:        9 bytes
  7087 ;; Hardware stack levels used:    1
  7088 ;; Hardware stack levels required when called:    9
  7089 ;; This function calls:
  7090 ;;		Nothing
  7091 ;; This function is called by:
  7092 ;;		_sprintf
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           	psect	text33
  7097  00307A                     __ptext33:
  7098                           	opt stack 0
  7099  00307A                     ___llmod:
  7100                           	opt stack 17
  7101                           
  7102                           ; BSR set to: 1
  7103                           ;incstack = 0
  7104  00307A  0101               	movlb	1	; () banked
  7105  00307C  51CA               	movf	___llmod@divisor& (0+255),w,b
  7106  00307E  0101               	movlb	1	; () banked
  7107  003080  11CB               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  7108  003082  0101               	movlb	1	; () banked
  7109  003084  11CC               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  7110  003086  0101               	movlb	1	; () banked
  7111  003088  11CD               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  7112  00308A  B4D8               	btfsc	status,2,c
  7113  00308C  D03F               	goto	l1360
  7114                           
  7115                           ; BSR set to: 1
  7116  00308E  0E01               	movlw	1
  7117  003090  0100               	movlb	0	; () banked
  7118  003092  6F99               	movwf	___llmod@counter& (0+255),b
  7119  003094  D009               	goto	l5614
  7120  003096                     l5612:
  7121  003096  0101               	movlb	1	; () banked
  7122  003098  90D8               	bcf	status,0,c
  7123  00309A  37CA               	rlcf	___llmod@divisor& (0+255),f,b
  7124  00309C  37CB               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  7125  00309E  37CC               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  7126  0030A0  37CD               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  7127  0030A2  0100               	movlb	0	; () banked
  7128  0030A4  2B99               	incf	___llmod@counter& (0+255),f,b
  7129  0030A6  D000               	goto	l5614
  7130  0030A8                     l5614:
  7131                           
  7132                           ; BSR set to: 0
  7133  0030A8  0101               	movlb	1	; () banked
  7134  0030AA  BFCD               	btfsc	(___llmod@divisor+3)& (0+255),7,b
  7135  0030AC  D002               	goto	l5616
  7136  0030AE  D7F3               	goto	l5612
  7137                           
  7138                           ; BSR set to: 1
  7139  0030B0  D000               	goto	l5616
  7140  0030B2                     l5616:
  7141  0030B2  0101               	movlb	1	; () banked
  7142  0030B4  51CA               	movf	___llmod@divisor& (0+255),w,b
  7143  0030B6  0101               	movlb	1	; () banked
  7144  0030B8  5DC6               	subwf	___llmod@dividend& (0+255),w,b
  7145  0030BA  0101               	movlb	1	; () banked
  7146  0030BC  51CB               	movf	(___llmod@divisor+1)& (0+255),w,b
  7147  0030BE  0101               	movlb	1	; () banked
  7148  0030C0  59C7               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  7149  0030C2  0101               	movlb	1	; () banked
  7150  0030C4  51CC               	movf	(___llmod@divisor+2)& (0+255),w,b
  7151  0030C6  0101               	movlb	1	; () banked
  7152  0030C8  59C8               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  7153  0030CA  0101               	movlb	1	; () banked
  7154  0030CC  51CD               	movf	(___llmod@divisor+3)& (0+255),w,b
  7155  0030CE  0101               	movlb	1	; () banked
  7156  0030D0  59C9               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  7157  0030D2  A0D8               	btfss	status,0,c
  7158  0030D4  D011               	goto	l5620
  7159                           
  7160                           ; BSR set to: 1
  7161  0030D6  0101               	movlb	1	; () banked
  7162  0030D8  51CA               	movf	___llmod@divisor& (0+255),w,b
  7163  0030DA  0101               	movlb	1	; () banked
  7164  0030DC  5FC6               	subwf	___llmod@dividend& (0+255),f,b
  7165  0030DE  0101               	movlb	1	; () banked
  7166  0030E0  51CB               	movf	(___llmod@divisor+1)& (0+255),w,b
  7167  0030E2  0101               	movlb	1	; () banked
  7168  0030E4  5BC7               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  7169  0030E6  0101               	movlb	1	; () banked
  7170  0030E8  51CC               	movf	(___llmod@divisor+2)& (0+255),w,b
  7171  0030EA  0101               	movlb	1	; () banked
  7172  0030EC  5BC8               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  7173  0030EE  0101               	movlb	1	; () banked
  7174  0030F0  51CD               	movf	(___llmod@divisor+3)& (0+255),w,b
  7175  0030F2  0101               	movlb	1	; () banked
  7176  0030F4  5BC9               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  7177  0030F6  D000               	goto	l5620
  7178  0030F8                     l5620:
  7179                           
  7180                           ; BSR set to: 1
  7181  0030F8  0101               	movlb	1	; () banked
  7182  0030FA  90D8               	bcf	status,0,c
  7183  0030FC  33CD               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  7184  0030FE  33CC               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  7185  003100  33CB               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  7186  003102  33CA               	rrcf	___llmod@divisor& (0+255),f,b
  7187                           
  7188                           ; BSR set to: 1
  7189  003104  0100               	movlb	0	; () banked
  7190  003106  2F99               	decfsz	___llmod@counter& (0+255),f,b
  7191  003108  D7D4               	goto	l5616
  7192  00310A  D000               	goto	l1360
  7193  00310C                     l1360:
  7194  00310C  C1C6  F1C6         	movff	___llmod@dividend,?___llmod
  7195  003110  C1C7  F1C7         	movff	___llmod@dividend+1,?___llmod+1
  7196  003114  C1C8  F1C8         	movff	___llmod@dividend+2,?___llmod+2
  7197  003118  C1C9  F1C9         	movff	___llmod@dividend+3,?___llmod+3
  7198  00311C  0012               	return		;funcret
  7199  00311E                     __end_of___llmod:
  7200                           	opt stack 0
  7201                           tblptru	equ	0xFF8
  7202                           tblptrh	equ	0xFF7
  7203                           tblptrl	equ	0xFF6
  7204                           tablat	equ	0xFF5
  7205                           prodh	equ	0xFF4
  7206                           prodl	equ	0xFF3
  7207                           intcon	equ	0xFF2
  7208                           intcon2	equ	0xFF1
  7209                           postinc0	equ	0xFEE
  7210                           plusw0	equ	0xFEB
  7211                           wreg	equ	0xFE8
  7212                           postdec1	equ	0xFE5
  7213                           fsr1h	equ	0xFE2
  7214                           fsr1l	equ	0xFE1
  7215                           indf2	equ	0xFDF
  7216                           postinc2	equ	0xFDE
  7217                           postdec2	equ	0xFDD
  7218                           plusw2	equ	0xFDB
  7219                           fsr2h	equ	0xFDA
  7220                           fsr2l	equ	0xFD9
  7221                           status	equ	0xFD8
  7222                           
  7223 ;; *************** function ___lldiv *****************
  7224 ;; Defined at:
  7225 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;  dividend        4   44[BANK0 ] unsigned long 
  7228 ;;  divisor         4   48[BANK0 ] unsigned long 
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;  quotient        4   52[BANK0 ] unsigned long 
  7231 ;;  counter         1   56[BANK0 ] unsigned char 
  7232 ;; Return value:  Size  Location     Type
  7233 ;;                  4   44[BANK0 ] unsigned long 
  7234 ;; Registers used:
  7235 ;;		wreg, status,2, status,0
  7236 ;; Tracked objects:
  7237 ;;		On entry : 0/0
  7238 ;;		On exit  : 0/0
  7239 ;;		Unchanged: 0/0
  7240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7241 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7242 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7244 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7245 ;;Total ram usage:       13 bytes
  7246 ;; Hardware stack levels used:    1
  7247 ;; Hardware stack levels required when called:    9
  7248 ;; This function calls:
  7249 ;;		Nothing
  7250 ;; This function is called by:
  7251 ;;		_InitUART
  7252 ;;		_sprintf
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text34
  7257  002D94                     __ptext34:
  7258                           	opt stack 0
  7259  002D94                     ___lldiv:
  7260                           	opt stack 19
  7261                           
  7262                           ;incstack = 0
  7263  002D94  0E00               	movlw	0
  7264  002D96  0100               	movlb	0	; () banked
  7265  002D98  6F94               	movwf	___lldiv@quotient& (0+255),b
  7266  002D9A  0E00               	movlw	0
  7267  002D9C  6F95               	movwf	(___lldiv@quotient+1)& (0+255),b
  7268  002D9E  0E00               	movlw	0
  7269  002DA0  6F96               	movwf	(___lldiv@quotient+2)& (0+255),b
  7270  002DA2  0E00               	movlw	0
  7271  002DA4  6F97               	movwf	(___lldiv@quotient+3)& (0+255),b
  7272                           
  7273                           ; BSR set to: 0
  7274  002DA6  0100               	movlb	0	; () banked
  7275  002DA8  5190               	movf	___lldiv@divisor& (0+255),w,b
  7276  002DAA  0100               	movlb	0	; () banked
  7277  002DAC  1191               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7278  002DAE  0100               	movlb	0	; () banked
  7279  002DB0  1192               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7280  002DB2  0100               	movlb	0	; () banked
  7281  002DB4  1193               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7282  002DB6  B4D8               	btfsc	status,2,c
  7283  002DB8  D047               	goto	l1350
  7284                           
  7285                           ; BSR set to: 0
  7286  002DBA  0E01               	movlw	1
  7287  002DBC  0100               	movlb	0	; () banked
  7288  002DBE  6F98               	movwf	___lldiv@counter& (0+255),b
  7289  002DC0  D009               	goto	l5594
  7290  002DC2                     l5592:
  7291                           
  7292                           ; BSR set to: 0
  7293  002DC2  0100               	movlb	0	; () banked
  7294  002DC4  90D8               	bcf	status,0,c
  7295  002DC6  3790               	rlcf	___lldiv@divisor& (0+255),f,b
  7296  002DC8  3791               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7297  002DCA  3792               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7298  002DCC  3793               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7299  002DCE  0100               	movlb	0	; () banked
  7300  002DD0  2B98               	incf	___lldiv@counter& (0+255),f,b
  7301  002DD2  D000               	goto	l5594
  7302  002DD4                     l5594:
  7303                           
  7304                           ; BSR set to: 0
  7305  002DD4  0100               	movlb	0	; () banked
  7306  002DD6  BF93               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  7307  002DD8  D002               	goto	l5596
  7308  002DDA  D7F3               	goto	l5592
  7309                           
  7310                           ; BSR set to: 0
  7311  002DDC  D000               	goto	l5596
  7312  002DDE                     l5596:
  7313                           
  7314                           ; BSR set to: 0
  7315  002DDE  0100               	movlb	0	; () banked
  7316  002DE0  90D8               	bcf	status,0,c
  7317  002DE2  3794               	rlcf	___lldiv@quotient& (0+255),f,b
  7318  002DE4  3795               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7319  002DE6  3796               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7320  002DE8  3797               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7321                           
  7322                           ; BSR set to: 0
  7323  002DEA  0100               	movlb	0	; () banked
  7324  002DEC  5190               	movf	___lldiv@divisor& (0+255),w,b
  7325  002DEE  0100               	movlb	0	; () banked
  7326  002DF0  5D8C               	subwf	___lldiv@dividend& (0+255),w,b
  7327  002DF2  0100               	movlb	0	; () banked
  7328  002DF4  5191               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7329  002DF6  0100               	movlb	0	; () banked
  7330  002DF8  598D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7331  002DFA  0100               	movlb	0	; () banked
  7332  002DFC  5192               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7333  002DFE  0100               	movlb	0	; () banked
  7334  002E00  598E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7335  002E02  0100               	movlb	0	; () banked
  7336  002E04  5193               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7337  002E06  0100               	movlb	0	; () banked
  7338  002E08  598F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7339  002E0A  A0D8               	btfss	status,0,c
  7340  002E0C  D013               	goto	l5604
  7341                           
  7342                           ; BSR set to: 0
  7343  002E0E  0100               	movlb	0	; () banked
  7344  002E10  5190               	movf	___lldiv@divisor& (0+255),w,b
  7345  002E12  0100               	movlb	0	; () banked
  7346  002E14  5F8C               	subwf	___lldiv@dividend& (0+255),f,b
  7347  002E16  0100               	movlb	0	; () banked
  7348  002E18  5191               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7349  002E1A  0100               	movlb	0	; () banked
  7350  002E1C  5B8D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7351  002E1E  0100               	movlb	0	; () banked
  7352  002E20  5192               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7353  002E22  0100               	movlb	0	; () banked
  7354  002E24  5B8E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7355  002E26  0100               	movlb	0	; () banked
  7356  002E28  5193               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7357  002E2A  0100               	movlb	0	; () banked
  7358  002E2C  5B8F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7359                           
  7360                           ; BSR set to: 0
  7361  002E2E  0100               	movlb	0	; () banked
  7362  002E30  8194               	bsf	___lldiv@quotient& (0+255),0,b
  7363  002E32  D000               	goto	l5604
  7364  002E34                     l5604:
  7365                           
  7366                           ; BSR set to: 0
  7367  002E34  0100               	movlb	0	; () banked
  7368  002E36  90D8               	bcf	status,0,c
  7369  002E38  3393               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7370  002E3A  3392               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7371  002E3C  3391               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7372  002E3E  3390               	rrcf	___lldiv@divisor& (0+255),f,b
  7373                           
  7374                           ; BSR set to: 0
  7375  002E40  0100               	movlb	0	; () banked
  7376  002E42  2F98               	decfsz	___lldiv@counter& (0+255),f,b
  7377  002E44  D7CC               	goto	l5596
  7378  002E46  D000               	goto	l1350
  7379  002E48                     l1350:
  7380                           
  7381                           ; BSR set to: 0
  7382  002E48  C094  F08C         	movff	___lldiv@quotient,?___lldiv
  7383  002E4C  C095  F08D         	movff	___lldiv@quotient+1,?___lldiv+1
  7384  002E50  C096  F08E         	movff	___lldiv@quotient+2,?___lldiv+2
  7385  002E54  C097  F08F         	movff	___lldiv@quotient+3,?___lldiv+3
  7386                           
  7387                           ; BSR set to: 0
  7388  002E58  0012               	return		;funcret
  7389  002E5A                     __end_of___lldiv:
  7390                           	opt stack 0
  7391                           tblptru	equ	0xFF8
  7392                           tblptrh	equ	0xFF7
  7393                           tblptrl	equ	0xFF6
  7394                           tablat	equ	0xFF5
  7395                           prodh	equ	0xFF4
  7396                           prodl	equ	0xFF3
  7397                           intcon	equ	0xFF2
  7398                           intcon2	equ	0xFF1
  7399                           postinc0	equ	0xFEE
  7400                           plusw0	equ	0xFEB
  7401                           wreg	equ	0xFE8
  7402                           postdec1	equ	0xFE5
  7403                           fsr1h	equ	0xFE2
  7404                           fsr1l	equ	0xFE1
  7405                           indf2	equ	0xFDF
  7406                           postinc2	equ	0xFDE
  7407                           postdec2	equ	0xFDD
  7408                           plusw2	equ	0xFDB
  7409                           fsr2h	equ	0xFDA
  7410                           fsr2l	equ	0xFD9
  7411                           status	equ	0xFD8
  7412                           
  7413 ;; *************** function _EnterCommandMode *****************
  7414 ;; Defined at:
  7415 ;;		line 109 in file "Bluetooth.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;		None
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;  count           1   54[BANK0 ] unsigned char 
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  1    wreg      unsigned char 
  7422 ;; Registers used:
  7423 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;Total ram usage:        1 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:   11
  7436 ;; This function calls:
  7437 ;;		_BlueConnected
  7438 ;;		_ResetBlue
  7439 ;;		_StringContains
  7440 ;;		_UARTstring
  7441 ;;		_cleanBuffer
  7442 ;;		_delayUS
  7443 ;; This function is called by:
  7444 ;;		_BluetoothInitialSetup
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text35
  7449  002C04                     __ptext35:
  7450                           	opt stack 0
  7451  002C04                     _EnterCommandMode:
  7452                           	opt stack 16
  7453                           
  7454                           ;Bluetooth.c: 111: unsigned char count = 0;
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;incstack = 0
  7458  002C04  0E00               	movlw	0
  7459  002C06  0100               	movlb	0	; () banked
  7460  002C08  6F96               	movwf	EnterCommandMode@count& (0+255),b
  7461                           
  7462                           ;Bluetooth.c: 112: while(BlueConnected())
  7463  002C0A  D00B               	goto	l5692
  7464  002C0C                     l5682:
  7465                           
  7466                           ;Bluetooth.c: 113: {
  7467                           ;Bluetooth.c: 114: ResetBlue();
  7468  002C0C  EC66  F01D         	call	_ResetBlue	;wreg free
  7469                           
  7470                           ;Bluetooth.c: 115: count++;
  7471  002C10  0100               	movlb	0	; () banked
  7472  002C12  2B96               	incf	EnterCommandMode@count& (0+255),f,b
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;Bluetooth.c: 116: if(count > 4)
  7476  002C14  0E04               	movlw	4
  7477  002C16  0100               	movlb	0	; () banked
  7478  002C18  6596               	cpfsgt	EnterCommandMode@count& (0+255),b
  7479  002C1A  D003               	goto	l5692
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;Bluetooth.c: 117: {
  7483                           ;Bluetooth.c: 119: return 0;
  7484  002C1C  0E00               	movlw	0
  7485                           
  7486                           ; BSR set to: 0
  7487  002C1E  0012               	return	
  7488                           
  7489                           ; BSR set to: 0
  7490  002C20  D000               	goto	l5692
  7491  002C22                     l5692:
  7492                           
  7493                           ; BSR set to: 0
  7494  002C22  EC8E  F01E         	call	_BlueConnected	;wreg free
  7495  002C26  0900               	iorlw	0
  7496  002C28  A4D8               	btfss	status,2,c
  7497  002C2A  D7F0               	goto	l5682
  7498                           
  7499                           ;Bluetooth.c: 120: }
  7500                           ;Bluetooth.c: 121: }
  7501                           ;Bluetooth.c: 123: delayUS(50000);
  7502  002C2C  0E50               	movlw	80
  7503  002C2E  0100               	movlb	0	; () banked
  7504  002C30  6F8C               	movwf	delayUS@US& (0+255),b
  7505  002C32  0EC3               	movlw	195
  7506  002C34  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  7507  002C36  0E00               	movlw	0
  7508  002C38  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  7509  002C3A  0E00               	movlw	0
  7510  002C3C  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  7511  002C3E  ECC2  F01A         	call	_delayUS	;wreg free
  7512                           
  7513                           ;Bluetooth.c: 124: UARTstring("$$$");
  7514  002C42  0E94               	movlw	low STR_1
  7515  002C44  0100               	movlb	0	; () banked
  7516  002C46  6F8D               	movwf	UARTstring@data& (0+255),b
  7517  002C48  0E10               	movlw	high STR_1
  7518  002C4A  0100               	movlb	0	; () banked
  7519  002C4C  6F8E               	movwf	(UARTstring@data+1)& (0+255),b
  7520  002C4E  EC87  F01B         	call	_UARTstring	;wreg free
  7521                           
  7522                           ;Bluetooth.c: 125: delayUS(50000);
  7523  002C52  0E50               	movlw	80
  7524  002C54  0100               	movlb	0	; () banked
  7525  002C56  6F8C               	movwf	delayUS@US& (0+255),b
  7526  002C58  0EC3               	movlw	195
  7527  002C5A  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  7528  002C5C  0E00               	movlw	0
  7529  002C5E  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  7530  002C60  0E00               	movlw	0
  7531  002C62  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  7532  002C64  ECC2  F01A         	call	_delayUS	;wreg free
  7533                           
  7534                           ;Bluetooth.c: 126: if(StringContains(CommandString,"CMD"))
  7535  002C68  0E00               	movlw	low _CommandString
  7536  002C6A  0100               	movlb	0	; () banked
  7537  002C6C  6F8C               	movwf	StringContains@This& (0+255),b
  7538  002C6E  0E02               	movlw	high _CommandString
  7539  002C70  0100               	movlb	0	; () banked
  7540  002C72  6F8D               	movwf	(StringContains@This+1)& (0+255),b
  7541  002C74  0E98               	movlw	low STR_2
  7542  002C76  0100               	movlb	0	; () banked
  7543  002C78  6F8E               	movwf	StringContains@That& (0+255),b
  7544  002C7A  0E10               	movlw	high STR_2
  7545  002C7C  0100               	movlb	0	; () banked
  7546  002C7E  6F8F               	movwf	(StringContains@That+1)& (0+255),b
  7547  002C80  EC8F  F018         	call	_StringContains	;wreg free
  7548  002C84  0900               	iorlw	0
  7549  002C86  B4D8               	btfsc	status,2,c
  7550  002C88  D010               	goto	l5710
  7551                           
  7552                           ;Bluetooth.c: 127: {
  7553                           ;Bluetooth.c: 128: cleanBuffer(&CommandString,CommandStringPos);
  7554  002C8A  0E00               	movlw	low _CommandString
  7555  002C8C  0100               	movlb	0	; () banked
  7556  002C8E  6F8C               	movwf	cleanBuffer@data& (0+255),b
  7557  002C90  0E02               	movlw	high _CommandString
  7558  002C92  0100               	movlb	0	; () banked
  7559  002C94  6F8D               	movwf	(cleanBuffer@data+1)& (0+255),b
  7560  002C96  C047  F08E         	movff	_CommandStringPos,cleanBuffer@count
  7561  002C9A  0100               	movlb	0	; () banked
  7562  002C9C  6B8F               	clrf	(cleanBuffer@count+1)& (0+255),b
  7563  002C9E  EC5A  F01B         	call	_cleanBuffer	;wreg free
  7564                           
  7565                           ;Bluetooth.c: 129: CommandStringPos = 0;
  7566  002CA2  0E00               	movlw	0
  7567  002CA4  6E47               	movwf	_CommandStringPos,c
  7568                           
  7569                           ;Bluetooth.c: 130: return 1;
  7570  002CA6  0E01               	movlw	1
  7571  002CA8  0012               	return	
  7572  002CAA                     l5710:
  7573                           
  7574                           ;Bluetooth.c: 131: }
  7575                           ;Bluetooth.c: 132: cleanBuffer(&CommandString,CommandStringPos);
  7576  002CAA  0E00               	movlw	low _CommandString
  7577  002CAC  0100               	movlb	0	; () banked
  7578  002CAE  6F8C               	movwf	cleanBuffer@data& (0+255),b
  7579  002CB0  0E02               	movlw	high _CommandString
  7580  002CB2  0100               	movlb	0	; () banked
  7581  002CB4  6F8D               	movwf	(cleanBuffer@data+1)& (0+255),b
  7582  002CB6  C047  F08E         	movff	_CommandStringPos,cleanBuffer@count
  7583  002CBA  0100               	movlb	0	; () banked
  7584  002CBC  6B8F               	clrf	(cleanBuffer@count+1)& (0+255),b
  7585  002CBE  EC5A  F01B         	call	_cleanBuffer	;wreg free
  7586                           
  7587                           ;Bluetooth.c: 133: CommandStringPos = 0;
  7588  002CC2  0E00               	movlw	0
  7589  002CC4  6E47               	movwf	_CommandStringPos,c
  7590                           
  7591                           ;Bluetooth.c: 134: return 0;
  7592  002CC6  0E00               	movlw	0
  7593  002CC8  0012               	return	
  7594  002CCA  0012               	return		;funcret
  7595  002CCC                     __end_of_EnterCommandMode:
  7596                           	opt stack 0
  7597                           tblptru	equ	0xFF8
  7598                           tblptrh	equ	0xFF7
  7599                           tblptrl	equ	0xFF6
  7600                           tablat	equ	0xFF5
  7601                           prodh	equ	0xFF4
  7602                           prodl	equ	0xFF3
  7603                           intcon	equ	0xFF2
  7604                           intcon2	equ	0xFF1
  7605                           postinc0	equ	0xFEE
  7606                           plusw0	equ	0xFEB
  7607                           wreg	equ	0xFE8
  7608                           postdec1	equ	0xFE5
  7609                           fsr1h	equ	0xFE2
  7610                           fsr1l	equ	0xFE1
  7611                           indf2	equ	0xFDF
  7612                           postinc2	equ	0xFDE
  7613                           postdec2	equ	0xFDD
  7614                           plusw2	equ	0xFDB
  7615                           fsr2h	equ	0xFDA
  7616                           fsr2l	equ	0xFD9
  7617                           status	equ	0xFD8
  7618                           
  7619 ;; *************** function _cleanBuffer *****************
  7620 ;; Defined at:
  7621 ;;		line 83 in file "MISC.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  data            2   44[BANK0 ] PTR unsigned char 
  7624 ;;		 -> BluetoothInitialSetup@buf(50), CommandString(255), ReceivedString(255), 
  7625 ;;  count           2   46[BANK0 ] int 
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;  i               1   51[BANK0 ] unsigned char 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;		None               void
  7630 ;; Registers used:
  7631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7637 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7638 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7639 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7640 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7641 ;;Total ram usage:        8 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; Hardware stack levels required when called:    9
  7644 ;; This function calls:
  7645 ;;		Nothing
  7646 ;; This function is called by:
  7647 ;;		_Init_System
  7648 ;;		_InitBluetooth
  7649 ;;		_EnterCommandMode
  7650 ;;		_BluetoothInitialSetup
  7651 ;;		_BufferCopy
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655                           	psect	text36
  7656  0036B4                     __ptext36:
  7657                           	opt stack 0
  7658  0036B4                     _cleanBuffer:
  7659                           	opt stack 20
  7660                           
  7661                           ;MISC.c: 85: unsigned char i=0;
  7662                           
  7663                           ;incstack = 0
  7664  0036B4  0E00               	movlw	0
  7665  0036B6  0100               	movlb	0	; () banked
  7666  0036B8  6F93               	movwf	cleanBuffer@i& (0+255),b
  7667                           
  7668                           ;MISC.c: 86: for(i=0; i<count;i++)
  7669  0036BA  0E00               	movlw	0
  7670  0036BC  0100               	movlb	0	; () banked
  7671  0036BE  6F93               	movwf	cleanBuffer@i& (0+255),b
  7672  0036C0  D010               	goto	l5480
  7673  0036C2                     l5476:
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;MISC.c: 87: {
  7677                           ;MISC.c: 88: data[i]= 0;
  7678  0036C2  0100               	movlb	0	; () banked
  7679  0036C4  5193               	movf	cleanBuffer@i& (0+255),w,b
  7680  0036C6  0D01               	mullw	1
  7681  0036C8  50F3               	movf	prodl,w,c
  7682  0036CA  0100               	movlb	0	; () banked
  7683  0036CC  258C               	addwf	cleanBuffer@data& (0+255),w,b
  7684  0036CE  6ED9               	movwf	fsr2l,c
  7685  0036D0  50F4               	movf	prodh,w,c
  7686  0036D2  0100               	movlb	0	; () banked
  7687  0036D4  218D               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
  7688  0036D6  6EDA               	movwf	fsr2h,c
  7689  0036D8  0E00               	movlw	0
  7690  0036DA  6EDF               	movwf	indf2,c
  7691                           
  7692                           ; BSR set to: 0
  7693  0036DC  0100               	movlb	0	; () banked
  7694  0036DE  2B93               	incf	cleanBuffer@i& (0+255),f,b
  7695  0036E0  D000               	goto	l5480
  7696  0036E2                     l5480:
  7697                           
  7698                           ; BSR set to: 0
  7699  0036E2  0100               	movlb	0	; () banked
  7700  0036E4  5193               	movf	cleanBuffer@i& (0+255),w,b
  7701  0036E6  0100               	movlb	0	; () banked
  7702  0036E8  6F90               	movwf	??_cleanBuffer& (0+255),b
  7703  0036EA  6B91               	clrf	(??_cleanBuffer+1)& (0+255),b
  7704  0036EC  0100               	movlb	0	; () banked
  7705  0036EE  518E               	movf	cleanBuffer@count& (0+255),w,b
  7706  0036F0  0100               	movlb	0	; () banked
  7707  0036F2  5D90               	subwf	??_cleanBuffer& (0+255),w,b
  7708  0036F4  0100               	movlb	0	; () banked
  7709  0036F6  5191               	movf	(??_cleanBuffer+1)& (0+255),w,b
  7710  0036F8  0A80               	xorlw	128
  7711  0036FA  0100               	movlb	0	; () banked
  7712  0036FC  6F92               	movwf	(??_cleanBuffer+2)& (0+255),b
  7713  0036FE  0100               	movlb	0	; () banked
  7714  003700  518F               	movf	(cleanBuffer@count+1)& (0+255),w,b
  7715  003702  0A80               	xorlw	128
  7716  003704  0100               	movlb	0	; () banked
  7717  003706  5992               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
  7718  003708  A0D8               	btfss	status,0,c
  7719  00370A  D7DB               	goto	l5476
  7720                           
  7721                           ; BSR set to: 0
  7722                           
  7723                           ; BSR set to: 0
  7724  00370C  0012               	return		;funcret
  7725  00370E                     __end_of_cleanBuffer:
  7726                           	opt stack 0
  7727                           tblptru	equ	0xFF8
  7728                           tblptrh	equ	0xFF7
  7729                           tblptrl	equ	0xFF6
  7730                           tablat	equ	0xFF5
  7731                           prodh	equ	0xFF4
  7732                           prodl	equ	0xFF3
  7733                           intcon	equ	0xFF2
  7734                           intcon2	equ	0xFF1
  7735                           postinc0	equ	0xFEE
  7736                           plusw0	equ	0xFEB
  7737                           wreg	equ	0xFE8
  7738                           postdec1	equ	0xFE5
  7739                           fsr1h	equ	0xFE2
  7740                           fsr1l	equ	0xFE1
  7741                           indf2	equ	0xFDF
  7742                           postinc2	equ	0xFDE
  7743                           postdec2	equ	0xFDD
  7744                           plusw2	equ	0xFDB
  7745                           fsr2h	equ	0xFDA
  7746                           fsr2l	equ	0xFD9
  7747                           status	equ	0xFD8
  7748                           
  7749 ;; *************** function _UARTstring *****************
  7750 ;; Defined at:
  7751 ;;		line 200 in file "UART.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  data            2   45[BANK0 ] PTR unsigned char 
  7754 ;;		 -> STR_15(5), STR_13(5), STR_11(6), STR_9(6), 
  7755 ;;		 -> STR_7(9), STR_5(21), BluetoothInitialSetup@buf(50), STR_1(4), 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;		None
  7758 ;; Return value:  Size  Location     Type
  7759 ;;		None               void
  7760 ;; Registers used:
  7761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7762 ;; Tracked objects:
  7763 ;;		On entry : 0/0
  7764 ;;		On exit  : 0/0
  7765 ;;		Unchanged: 0/0
  7766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7767 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7770 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7771 ;;Total ram usage:        2 bytes
  7772 ;; Hardware stack levels used:    1
  7773 ;; Hardware stack levels required when called:   10
  7774 ;; This function calls:
  7775 ;;		_UARTchar
  7776 ;; This function is called by:
  7777 ;;		_EnterCommandMode
  7778 ;;		_BluetoothInitialSetup
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text37
  7783  00370E                     __ptext37:
  7784                           	opt stack 0
  7785  00370E                     _UARTstring:
  7786                           	opt stack 17
  7787                           
  7788                           ;UART.c: 202: while(*data != 0)
  7789                           
  7790                           ; BSR set to: 0
  7791                           ;incstack = 0
  7792  00370E  D017               	goto	l5514
  7793  003710                     l5510:
  7794                           
  7795                           ;UART.c: 203: {
  7796                           ;UART.c: 204: UARTchar(*data);
  7797  003710  C08D  FFF6         	movff	UARTstring@data,tblptrl
  7798  003714  C08E  FFF7         	movff	UARTstring@data+1,tblptrh
  7799  003718  0E00               	movlw	low (__smallconst shr (0+16))
  7800  00371A  6EF8               	movwf	tblptru,c
  7801  00371C  0E0F               	movlw	(high __ramtop+-1)
  7802  00371E  64F7               	cpfsgt	tblptrh,c
  7803  003720  D003               	bra	u5527
  7804  003722  0008               	tblrd		*
  7805  003724  50F5               	movf	tablat,w,c
  7806  003726  D005               	bra	u5520
  7807  003728                     u5527:
  7808  003728  CFF6 FFE9          	movff	tblptrl,fsr0l
  7809  00372C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7810  003730  50EF               	movf	indf0,w,c
  7811  003732                     u5520:
  7812  003732  ECED  F01D         	call	_UARTchar
  7813                           
  7814                           ;UART.c: 205: *data++;
  7815  003736  0100               	movlb	0	; () banked
  7816  003738  4B8D               	infsnz	UARTstring@data& (0+255),f,b
  7817  00373A  2B8E               	incf	(UARTstring@data+1)& (0+255),f,b
  7818  00373C  D000               	goto	l5514
  7819  00373E                     l5514:
  7820  00373E  C08D  FFF6         	movff	UARTstring@data,tblptrl
  7821  003742  C08E  FFF7         	movff	UARTstring@data+1,tblptrh
  7822  003746  0E00               	movlw	low (__smallconst shr (0+16))
  7823  003748  6EF8               	movwf	tblptru,c
  7824  00374A  0E0F               	movlw	(high __ramtop+-1)
  7825  00374C  64F7               	cpfsgt	tblptrh,c
  7826  00374E  D003               	bra	u5537
  7827  003750  0008               	tblrd		*
  7828  003752  50F5               	movf	tablat,w,c
  7829  003754  D005               	bra	u5530
  7830  003756                     u5537:
  7831  003756  CFF6 FFE9          	movff	tblptrl,fsr0l
  7832  00375A  CFF7 FFEA          	movff	tblptrh,fsr0h
  7833  00375E  50EF               	movf	indf0,w,c
  7834  003760                     u5530:
  7835  003760  0900               	iorlw	0
  7836  003762  A4D8               	btfss	status,2,c
  7837  003764  D7D5               	goto	l5510
  7838  003766  0012               	return		;funcret
  7839  003768                     __end_of_UARTstring:
  7840                           	opt stack 0
  7841                           tblptru	equ	0xFF8
  7842                           tblptrh	equ	0xFF7
  7843                           tblptrl	equ	0xFF6
  7844                           tablat	equ	0xFF5
  7845                           prodh	equ	0xFF4
  7846                           prodl	equ	0xFF3
  7847                           intcon	equ	0xFF2
  7848                           intcon2	equ	0xFF1
  7849                           indf0	equ	0xFEF
  7850                           postinc0	equ	0xFEE
  7851                           plusw0	equ	0xFEB
  7852                           fsr0h	equ	0xFEA
  7853                           fsr0l	equ	0xFE9
  7854                           wreg	equ	0xFE8
  7855                           postdec1	equ	0xFE5
  7856                           fsr1h	equ	0xFE2
  7857                           fsr1l	equ	0xFE1
  7858                           indf2	equ	0xFDF
  7859                           postinc2	equ	0xFDE
  7860                           postdec2	equ	0xFDD
  7861                           plusw2	equ	0xFDB
  7862                           fsr2h	equ	0xFDA
  7863                           fsr2l	equ	0xFD9
  7864                           status	equ	0xFD8
  7865                           
  7866 ;; *************** function _UARTchar *****************
  7867 ;; Defined at:
  7868 ;;		line 185 in file "UART.c"
  7869 ;; Parameters:    Size  Location     Type
  7870 ;;  data            1    wreg     unsigned char 
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;  data            1   44[BANK0 ] unsigned char 
  7873 ;; Return value:  Size  Location     Type
  7874 ;;		None               void
  7875 ;; Registers used:
  7876 ;;		wreg, status,2
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/0
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7883 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7885 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7886 ;;Total ram usage:        1 bytes
  7887 ;; Hardware stack levels used:    1
  7888 ;; Hardware stack levels required when called:    9
  7889 ;; This function calls:
  7890 ;;		Nothing
  7891 ;; This function is called by:
  7892 ;;		_UARTstring
  7893 ;;		_UARTstringWAIT
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text38
  7898  003BDA                     __ptext38:
  7899                           	opt stack 0
  7900  003BDA                     _UARTchar:
  7901                           	opt stack 17
  7902                           
  7903                           ;incstack = 0
  7904                           ;UARTchar@data stored from wreg
  7905  003BDA  0100               	movlb	0	; () banked
  7906  003BDC  6F8C               	movwf	UARTchar@data& (0+255),b
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;UART.c: 187: if(data == 0)
  7910  003BDE  0100               	movlb	0	; () banked
  7911  003BE0  518C               	movf	UARTchar@data& (0+255),w,b
  7912  003BE2  0100               	movlb	0	; () banked
  7913  003BE4  A4D8               	btfss	status,2,c
  7914  003BE6  D002               	goto	l5410
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;UART.c: 188: {
  7918                           ;UART.c: 189: __nop();
  7919  003BE8  F000               	nop	
  7920  003BEA  D000               	goto	l5410
  7921  003BEC                     l5410:
  7922                           
  7923                           ;UART.c: 190: }
  7924                           ;UART.c: 191: TXREG = data;
  7925  003BEC  C08C  FFAD         	movff	UARTchar@data,4013	;volatile
  7926                           
  7927                           ;UART.c: 192: while(!TXSTAbits.TRMT);
  7928  003BF0  D000               	goto	l219
  7929  003BF2                     l219:
  7930  003BF2  A2AC               	btfss	4012,1,c	;volatile
  7931  003BF4  D7FE               	goto	l219
  7932  003BF6  0012               	return		;funcret
  7933  003BF8                     __end_of_UARTchar:
  7934                           	opt stack 0
  7935                           tblptru	equ	0xFF8
  7936                           tblptrh	equ	0xFF7
  7937                           tblptrl	equ	0xFF6
  7938                           tablat	equ	0xFF5
  7939                           prodh	equ	0xFF4
  7940                           prodl	equ	0xFF3
  7941                           intcon	equ	0xFF2
  7942                           intcon2	equ	0xFF1
  7943                           indf0	equ	0xFEF
  7944                           postinc0	equ	0xFEE
  7945                           plusw0	equ	0xFEB
  7946                           fsr0h	equ	0xFEA
  7947                           fsr0l	equ	0xFE9
  7948                           wreg	equ	0xFE8
  7949                           postdec1	equ	0xFE5
  7950                           fsr1h	equ	0xFE2
  7951                           fsr1l	equ	0xFE1
  7952                           indf2	equ	0xFDF
  7953                           postinc2	equ	0xFDE
  7954                           postdec2	equ	0xFDD
  7955                           plusw2	equ	0xFDB
  7956                           fsr2h	equ	0xFDA
  7957                           fsr2l	equ	0xFD9
  7958                           status	equ	0xFD8
  7959                           
  7960 ;; *************** function _StringContains *****************
  7961 ;; Defined at:
  7962 ;;		line 173 in file "MISC.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  This            2   44[BANK0 ] PTR unsigned char 
  7965 ;;		 -> CommandString(255), 
  7966 ;;  That            2   46[BANK0 ] PTR const unsigned char 
  7967 ;;		 -> STR_16(4), STR_12(4), STR_10(4), STR_8(4), 
  7968 ;;		 -> STR_6(4), STR_4(4), BluetoothInitialSetup@buf(50), STR_2(4), 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;		None
  7971 ;; Return value:  Size  Location     Type
  7972 ;;                  1    wreg      unsigned char 
  7973 ;; Registers used:
  7974 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7975 ;; Tracked objects:
  7976 ;;		On entry : 0/0
  7977 ;;		On exit  : 0/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7980 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7982 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7983 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7984 ;;Total ram usage:        5 bytes
  7985 ;; Hardware stack levels used:    1
  7986 ;; Hardware stack levels required when called:    9
  7987 ;; This function calls:
  7988 ;;		Nothing
  7989 ;; This function is called by:
  7990 ;;		_EnterCommandMode
  7991 ;;		_BluetoothInitialSetup
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           	psect	text39
  7996  00311E                     __ptext39:
  7997                           	opt stack 0
  7998  00311E                     _StringContains:
  7999                           	opt stack 18
  8000                           
  8001                           ;MISC.c: 175: while(*This != 0)
  8002                           
  8003                           ;incstack = 0
  8004  00311E  D047               	goto	l5502
  8005                           
  8006                           ;MISC.c: 176: {
  8007                           ;MISC.c: 177: while(*This == *That)
  8008  003120  D026               	goto	l5498
  8009  003122                     l5484:
  8010                           
  8011                           ;MISC.c: 178: {
  8012                           ;MISC.c: 179: That++;
  8013  003122  0100               	movlb	0	; () banked
  8014  003124  4B8E               	infsnz	StringContains@That& (0+255),f,b
  8015  003126  2B8F               	incf	(StringContains@That+1)& (0+255),f,b
  8016                           
  8017                           ;MISC.c: 180: This++;
  8018  003128  0100               	movlb	0	; () banked
  8019  00312A  4B8C               	infsnz	StringContains@This& (0+255),f,b
  8020  00312C  2B8D               	incf	(StringContains@This+1)& (0+255),f,b
  8021                           
  8022                           ; BSR set to: 0
  8023                           ;MISC.c: 181: if(*That == 0)
  8024  00312E  C08E  FFF6         	movff	StringContains@That,tblptrl
  8025  003132  C08F  FFF7         	movff	StringContains@That+1,tblptrh
  8026  003136  0E00               	movlw	low (__smallconst shr (0+16))
  8027  003138  6EF8               	movwf	tblptru,c
  8028  00313A  0E0F               	movlw	(high __ramtop+-1)
  8029  00313C  64F7               	cpfsgt	tblptrh,c
  8030  00313E  D003               	bra	u5467
  8031  003140  0008               	tblrd		*
  8032  003142  50F5               	movf	tablat,w,c
  8033  003144  D005               	bra	u5460
  8034  003146                     u5467:
  8035  003146  CFF6 FFE9          	movff	tblptrl,fsr0l
  8036  00314A  CFF7 FFEA          	movff	tblptrh,fsr0h
  8037  00314E  50EF               	movf	indf0,w,c
  8038  003150                     u5460:
  8039  003150  0900               	iorlw	0
  8040  003152  A4D8               	btfss	status,2,c
  8041  003154  D002               	goto	l5492
  8042                           
  8043                           ;MISC.c: 182: {
  8044                           ;MISC.c: 183: return 1;
  8045  003156  0E01               	movlw	1
  8046  003158  0012               	return	
  8047  00315A                     l5492:
  8048                           
  8049                           ;MISC.c: 184: }
  8050                           ;MISC.c: 185: if(*This == 0)
  8051  00315A  C08C  FFD9         	movff	StringContains@This,fsr2l
  8052  00315E  C08D  FFDA         	movff	StringContains@This+1,fsr2h
  8053  003162  50DF               	movf	indf2,w,c
  8054  003164  A4D8               	btfss	status,2,c
  8055  003166  D003               	goto	l5498
  8056                           
  8057                           ;MISC.c: 186: {
  8058                           ;MISC.c: 187: return 0;
  8059  003168  0E00               	movlw	0
  8060  00316A  0012               	return	
  8061  00316C  D000               	goto	l5498
  8062  00316E                     l5498:
  8063  00316E  C08C  FFD9         	movff	StringContains@This,fsr2l
  8064  003172  C08D  FFDA         	movff	StringContains@This+1,fsr2h
  8065  003176  50DF               	movf	indf2,w,c
  8066  003178  0100               	movlb	0	; () banked
  8067  00317A  6F90               	movwf	??_StringContains& (0+255),b
  8068  00317C  C08E  FFF6         	movff	StringContains@That,tblptrl
  8069  003180  C08F  FFF7         	movff	StringContains@That+1,tblptrh
  8070  003184  0E00               	movlw	low (__smallconst shr (0+16))
  8071  003186  6EF8               	movwf	tblptru,c
  8072  003188  0E0F               	movlw	(high __ramtop+-1)
  8073  00318A  64F7               	cpfsgt	tblptrh,c
  8074  00318C  D003               	bra	u5497
  8075  00318E  0008               	tblrd		*
  8076  003190  50F5               	movf	tablat,w,c
  8077  003192  D005               	bra	u5490
  8078  003194                     u5497:
  8079  003194  CFF6 FFE9          	movff	tblptrl,fsr0l
  8080  003198  CFF7 FFEA          	movff	tblptrh,fsr0h
  8081  00319C  50EF               	movf	indf0,w,c
  8082  00319E                     u5490:
  8083  00319E  0100               	movlb	0	; () banked
  8084  0031A0  1990               	xorwf	??_StringContains& (0+255),w,b
  8085  0031A2  B4D8               	btfsc	status,2,c
  8086  0031A4  D7BE               	goto	l5484
  8087                           
  8088                           ; BSR set to: 0
  8089                           ;MISC.c: 188: }
  8090                           ;MISC.c: 189: }
  8091                           ;MISC.c: 190: This++;
  8092                           
  8093                           ; BSR set to: 0
  8094  0031A6  0100               	movlb	0	; () banked
  8095  0031A8  4B8C               	infsnz	StringContains@This& (0+255),f,b
  8096  0031AA  2B8D               	incf	(StringContains@This+1)& (0+255),f,b
  8097  0031AC  D000               	goto	l5502
  8098  0031AE                     l5502:
  8099  0031AE  C08C  FFD9         	movff	StringContains@This,fsr2l
  8100  0031B2  C08D  FFDA         	movff	StringContains@This+1,fsr2h
  8101  0031B6  50DF               	movf	indf2,w,c
  8102  0031B8  A4D8               	btfss	status,2,c
  8103  0031BA  D7D9               	goto	l5498
  8104                           
  8105                           ;MISC.c: 191: }
  8106                           ;MISC.c: 192: return 0;
  8107  0031BC  0E00               	movlw	0
  8108  0031BE  0012               	return	
  8109  0031C0  0012               	return		;funcret
  8110  0031C2                     __end_of_StringContains:
  8111                           	opt stack 0
  8112                           tblptru	equ	0xFF8
  8113                           tblptrh	equ	0xFF7
  8114                           tblptrl	equ	0xFF6
  8115                           tablat	equ	0xFF5
  8116                           prodh	equ	0xFF4
  8117                           prodl	equ	0xFF3
  8118                           intcon	equ	0xFF2
  8119                           intcon2	equ	0xFF1
  8120                           indf0	equ	0xFEF
  8121                           postinc0	equ	0xFEE
  8122                           plusw0	equ	0xFEB
  8123                           fsr0h	equ	0xFEA
  8124                           fsr0l	equ	0xFE9
  8125                           wreg	equ	0xFE8
  8126                           postdec1	equ	0xFE5
  8127                           fsr1h	equ	0xFE2
  8128                           fsr1l	equ	0xFE1
  8129                           indf2	equ	0xFDF
  8130                           postinc2	equ	0xFDE
  8131                           postdec2	equ	0xFDD
  8132                           plusw2	equ	0xFDB
  8133                           fsr2h	equ	0xFDA
  8134                           fsr2l	equ	0xFD9
  8135                           status	equ	0xFD8
  8136                           
  8137 ;; *************** function _ResetBlue *****************
  8138 ;; Defined at:
  8139 ;;		line 96 in file "Bluetooth.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;		None
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;		None
  8144 ;; Return value:  Size  Location     Type
  8145 ;;		None               void
  8146 ;; Registers used:
  8147 ;;		wreg, status,2, status,0, cstack
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8157 ;;Total ram usage:        0 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; Hardware stack levels required when called:   10
  8160 ;; This function calls:
  8161 ;;		_delayUS
  8162 ;; This function is called by:
  8163 ;;		_InitBluetooth
  8164 ;;		_EnterCommandMode
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           	psect	text40
  8169  003ACC                     __ptext40:
  8170                           	opt stack 0
  8171  003ACC                     _ResetBlue:
  8172                           	opt stack 18
  8173                           
  8174                           ;Bluetooth.c: 98: LATA &= ~0x04;
  8175                           
  8176                           ;incstack = 0
  8177  003ACC  9489               	bcf	3977,2,c	;volatile
  8178                           
  8179                           ;Bluetooth.c: 99: delayUS(50000);
  8180  003ACE  0E50               	movlw	80
  8181  003AD0  0100               	movlb	0	; () banked
  8182  003AD2  6F8C               	movwf	delayUS@US& (0+255),b
  8183  003AD4  0EC3               	movlw	195
  8184  003AD6  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  8185  003AD8  0E00               	movlw	0
  8186  003ADA  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  8187  003ADC  0E00               	movlw	0
  8188  003ADE  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  8189  003AE0  ECC2  F01A         	call	_delayUS	;wreg free
  8190                           
  8191                           ;Bluetooth.c: 100: LATA |= 0x04;
  8192  003AE4  8489               	bsf	3977,2,c	;volatile
  8193                           
  8194                           ;Bluetooth.c: 101: delayUS(50000);
  8195  003AE6  0E50               	movlw	80
  8196  003AE8  0100               	movlb	0	; () banked
  8197  003AEA  6F8C               	movwf	delayUS@US& (0+255),b
  8198  003AEC  0EC3               	movlw	195
  8199  003AEE  6F8D               	movwf	(delayUS@US+1)& (0+255),b
  8200  003AF0  0E00               	movlw	0
  8201  003AF2  6F8E               	movwf	(delayUS@US+2)& (0+255),b
  8202  003AF4  0E00               	movlw	0
  8203  003AF6  6F8F               	movwf	(delayUS@US+3)& (0+255),b
  8204  003AF8  ECC2  F01A         	call	_delayUS	;wreg free
  8205  003AFC  0012               	return		;funcret
  8206  003AFE                     __end_of_ResetBlue:
  8207                           	opt stack 0
  8208                           tblptru	equ	0xFF8
  8209                           tblptrh	equ	0xFF7
  8210                           tblptrl	equ	0xFF6
  8211                           tablat	equ	0xFF5
  8212                           prodh	equ	0xFF4
  8213                           prodl	equ	0xFF3
  8214                           intcon	equ	0xFF2
  8215                           intcon2	equ	0xFF1
  8216                           indf0	equ	0xFEF
  8217                           postinc0	equ	0xFEE
  8218                           plusw0	equ	0xFEB
  8219                           fsr0h	equ	0xFEA
  8220                           fsr0l	equ	0xFE9
  8221                           wreg	equ	0xFE8
  8222                           postdec1	equ	0xFE5
  8223                           fsr1h	equ	0xFE2
  8224                           fsr1l	equ	0xFE1
  8225                           indf2	equ	0xFDF
  8226                           postinc2	equ	0xFDE
  8227                           postdec2	equ	0xFDD
  8228                           plusw2	equ	0xFDB
  8229                           fsr2h	equ	0xFDA
  8230                           fsr2l	equ	0xFD9
  8231                           status	equ	0xFD8
  8232                           
  8233 ;; *************** function _delayUS *****************
  8234 ;; Defined at:
  8235 ;;		line 49 in file "MISC.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;  US              4   44[BANK0 ] long 
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;  i               4   49[BANK0 ] long 
  8240 ;;  j               1   53[BANK0 ] unsigned char 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;		None               void
  8243 ;; Registers used:
  8244 ;;		wreg, status,2, status,0
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8250 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8251 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8252 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8253 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8254 ;;Total ram usage:       10 bytes
  8255 ;; Hardware stack levels used:    1
  8256 ;; Hardware stack levels required when called:    9
  8257 ;; This function calls:
  8258 ;;		Nothing
  8259 ;; This function is called by:
  8260 ;;		_main
  8261 ;;		_ReadVoltage
  8262 ;;		_InternalADC_Read
  8263 ;;		_ResetBlue
  8264 ;;		_EnterCommandMode
  8265 ;;		_BluetoothInitialSetup
  8266 ;;		_ReadCodeButtons
  8267 ;; This function uses a non-reentrant model
  8268 ;;
  8269                           
  8270                           	psect	text41
  8271  003584                     __ptext41:
  8272                           	opt stack 0
  8273  003584                     _delayUS:
  8274                           	opt stack 21
  8275                           
  8276                           ;MISC.c: 51: long i;
  8277                           ;MISC.c: 52: unsigned char j;
  8278                           ;MISC.c: 53: for(i=0;i<US;i+=5)
  8279                           
  8280                           ;incstack = 0
  8281  003584  0E00               	movlw	0
  8282  003586  0100               	movlb	0	; () banked
  8283  003588  6F91               	movwf	delayUS@i& (0+255),b
  8284  00358A  0E00               	movlw	0
  8285  00358C  6F92               	movwf	(delayUS@i+1)& (0+255),b
  8286  00358E  0E00               	movlw	0
  8287  003590  6F93               	movwf	(delayUS@i+2)& (0+255),b
  8288  003592  0E00               	movlw	0
  8289  003594  6F94               	movwf	(delayUS@i+3)& (0+255),b
  8290  003596  D013               	goto	l95
  8291  003598                     l5394:
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;MISC.c: 54: {
  8295                           ;MISC.c: 55: for(j=0;j<64;j++)
  8296  003598  0E00               	movlw	0
  8297  00359A  0100               	movlb	0	; () banked
  8298  00359C  6F95               	movwf	delayUS@j& (0+255),b
  8299  00359E                     l5396:
  8300                           
  8301                           ; BSR set to: 0
  8302  00359E  0E3F               	movlw	63
  8303  0035A0  0100               	movlb	0	; () banked
  8304  0035A2  6595               	cpfsgt	delayUS@j& (0+255),b
  8305  0035A4  D001               	goto	l97
  8306                           
  8307                           ; BSR set to: 0
  8308  0035A6  D004               	goto	l5404
  8309  0035A8                     l97:
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;MISC.c: 56: {
  8313                           ;MISC.c: 57: __nop();
  8314  0035A8  F000               	nop	
  8315  0035AA  0100               	movlb	0	; () banked
  8316  0035AC  2B95               	incf	delayUS@j& (0+255),f,b
  8317  0035AE  D7F7               	goto	l5396
  8318  0035B0                     l5404:
  8319                           
  8320                           ; BSR set to: 0
  8321  0035B0  0E05               	movlw	5
  8322  0035B2  0100               	movlb	0	; () banked
  8323  0035B4  2791               	addwf	delayUS@i& (0+255),f,b
  8324  0035B6  0E00               	movlw	0
  8325  0035B8  2392               	addwfc	(delayUS@i+1)& (0+255),f,b
  8326  0035BA  2393               	addwfc	(delayUS@i+2)& (0+255),f,b
  8327  0035BC  2394               	addwfc	(delayUS@i+3)& (0+255),f,b
  8328  0035BE                     l95:
  8329                           
  8330                           ; BSR set to: 0
  8331  0035BE  0100               	movlb	0	; () banked
  8332  0035C0  518C               	movf	delayUS@US& (0+255),w,b
  8333  0035C2  0100               	movlb	0	; () banked
  8334  0035C4  5D91               	subwf	delayUS@i& (0+255),w,b
  8335  0035C6  0100               	movlb	0	; () banked
  8336  0035C8  518D               	movf	(delayUS@US+1)& (0+255),w,b
  8337  0035CA  0100               	movlb	0	; () banked
  8338  0035CC  5992               	subwfb	(delayUS@i+1)& (0+255),w,b
  8339  0035CE  0100               	movlb	0	; () banked
  8340  0035D0  518E               	movf	(delayUS@US+2)& (0+255),w,b
  8341  0035D2  0100               	movlb	0	; () banked
  8342  0035D4  5993               	subwfb	(delayUS@i+2)& (0+255),w,b
  8343  0035D6  0100               	movlb	0	; () banked
  8344  0035D8  5194               	movf	(delayUS@i+3)& (0+255),w,b
  8345  0035DA  0A80               	xorlw	128
  8346  0035DC  0100               	movlb	0	; () banked
  8347  0035DE  6F90               	movwf	??_delayUS& (0+255),b
  8348  0035E0  0100               	movlb	0	; () banked
  8349  0035E2  518F               	movf	(delayUS@US+3)& (0+255),w,b
  8350  0035E4  0A80               	xorlw	128
  8351  0035E6  0100               	movlb	0	; () banked
  8352  0035E8  5990               	subwfb	??_delayUS& (0+255),w,b
  8353  0035EA  A0D8               	btfss	status,0,c
  8354  0035EC  D7D5               	goto	l5394
  8355                           
  8356                           ; BSR set to: 0
  8357                           
  8358                           ; BSR set to: 0
  8359  0035EE  0012               	return		;funcret
  8360  0035F0                     __end_of_delayUS:
  8361                           	opt stack 0
  8362                           tblptru	equ	0xFF8
  8363                           tblptrh	equ	0xFF7
  8364                           tblptrl	equ	0xFF6
  8365                           tablat	equ	0xFF5
  8366                           prodh	equ	0xFF4
  8367                           prodl	equ	0xFF3
  8368                           intcon	equ	0xFF2
  8369                           intcon2	equ	0xFF1
  8370                           indf0	equ	0xFEF
  8371                           postinc0	equ	0xFEE
  8372                           plusw0	equ	0xFEB
  8373                           fsr0h	equ	0xFEA
  8374                           fsr0l	equ	0xFE9
  8375                           wreg	equ	0xFE8
  8376                           postdec1	equ	0xFE5
  8377                           fsr1h	equ	0xFE2
  8378                           fsr1l	equ	0xFE1
  8379                           indf2	equ	0xFDF
  8380                           postinc2	equ	0xFDE
  8381                           postdec2	equ	0xFDD
  8382                           plusw2	equ	0xFDB
  8383                           fsr2h	equ	0xFDA
  8384                           fsr2l	equ	0xFD9
  8385                           status	equ	0xFD8
  8386                           
  8387 ;; *************** function _BlueConnected *****************
  8388 ;; Defined at:
  8389 ;;		line 81 in file "Bluetooth.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;		None
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      unsigned char 
  8396 ;; Registers used:
  8397 ;;		wreg
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8407 ;;Total ram usage:        0 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; Hardware stack levels required when called:    9
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_EnterCommandMode
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           	psect	text42
  8418  003D1C                     __ptext42:
  8419                           	opt stack 0
  8420  003D1C                     _BlueConnected:
  8421                           	opt stack 17
  8422                           
  8423                           ;Bluetooth.c: 84: if((PORTA & 0x02) == 0x02)
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;incstack = 0
  8427  003D1C  A280               	btfss	3968,1,c	;volatile
  8428  003D1E  D002               	goto	l5540
  8429                           
  8430                           ;Bluetooth.c: 85: {
  8431                           ;Bluetooth.c: 86: return 1;
  8432  003D20  0E01               	movlw	1
  8433  003D22  0012               	return	
  8434  003D24                     l5540:
  8435                           
  8436                           ;Bluetooth.c: 87: }
  8437                           ;Bluetooth.c: 88: return 0;
  8438  003D24  0E00               	movlw	0
  8439  003D26  0012               	return	
  8440  003D28  0012               	return		;funcret
  8441  003D2A                     __end_of_BlueConnected:
  8442                           	opt stack 0
  8443                           tblptru	equ	0xFF8
  8444                           tblptrh	equ	0xFF7
  8445                           tblptrl	equ	0xFF6
  8446                           tablat	equ	0xFF5
  8447                           prodh	equ	0xFF4
  8448                           prodl	equ	0xFF3
  8449                           intcon	equ	0xFF2
  8450                           intcon2	equ	0xFF1
  8451                           indf0	equ	0xFEF
  8452                           postinc0	equ	0xFEE
  8453                           plusw0	equ	0xFEB
  8454                           fsr0h	equ	0xFEA
  8455                           fsr0l	equ	0xFE9
  8456                           wreg	equ	0xFE8
  8457                           postdec1	equ	0xFE5
  8458                           fsr1h	equ	0xFE2
  8459                           fsr1l	equ	0xFE1
  8460                           indf2	equ	0xFDF
  8461                           postinc2	equ	0xFDE
  8462                           postdec2	equ	0xFDD
  8463                           plusw2	equ	0xFDB
  8464                           fsr2h	equ	0xFDA
  8465                           fsr2l	equ	0xFD9
  8466                           status	equ	0xFD8
  8467                           
  8468 ;; *************** function _BluetoothConfigured *****************
  8469 ;; Defined at:
  8470 ;;		line 245 in file "Bluetooth.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;		None
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;		None
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      unsigned char 
  8477 ;; Registers used:
  8478 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8488 ;;Total ram usage:        0 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:   14
  8491 ;; This function calls:
  8492 ;;		_SyncGlobalToEEPROM
  8493 ;; This function is called by:
  8494 ;;		_InitBluetooth
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           	psect	text43
  8499  003C34                     __ptext43:
  8500                           	opt stack 0
  8501  003C34                     _BluetoothConfigured:
  8502                           	opt stack 14
  8503                           
  8504                           ;Bluetooth.c: 247: if(Global.BlueToothFlag != 1)
  8505                           
  8506                           ;incstack = 0
  8507  003C34  0100               	movlb	0	; () banked
  8508  003C36  05B3               	decf	_Global& (0+255),w,b
  8509  003C38  B4D8               	btfsc	status,2,c
  8510  003C3A  D007               	goto	l6020
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;Bluetooth.c: 248: {
  8514                           ;Bluetooth.c: 249: Global.BlueToothFlag = 1;
  8515  003C3C  0E01               	movlw	1
  8516  003C3E  0100               	movlb	0	; () banked
  8517  003C40  6FB3               	movwf	_Global& (0+255),b
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;Bluetooth.c: 250: SyncGlobalToEEPROM();
  8521  003C42  EC55  F01C         	call	_SyncGlobalToEEPROM	;wreg free
  8522                           
  8523                           ;Bluetooth.c: 251: return 0;
  8524  003C46  0E00               	movlw	0
  8525  003C48  0012               	return	
  8526  003C4A                     l6020:
  8527                           
  8528                           ;Bluetooth.c: 252: }
  8529                           ;Bluetooth.c: 253: return 1;
  8530  003C4A  0E01               	movlw	1
  8531  003C4C  0012               	return	
  8532  003C4E  0012               	return		;funcret
  8533  003C50                     __end_of_BluetoothConfigured:
  8534                           	opt stack 0
  8535                           tblptru	equ	0xFF8
  8536                           tblptrh	equ	0xFF7
  8537                           tblptrl	equ	0xFF6
  8538                           tablat	equ	0xFF5
  8539                           prodh	equ	0xFF4
  8540                           prodl	equ	0xFF3
  8541                           intcon	equ	0xFF2
  8542                           intcon2	equ	0xFF1
  8543                           indf0	equ	0xFEF
  8544                           postinc0	equ	0xFEE
  8545                           plusw0	equ	0xFEB
  8546                           fsr0h	equ	0xFEA
  8547                           fsr0l	equ	0xFE9
  8548                           wreg	equ	0xFE8
  8549                           postdec1	equ	0xFE5
  8550                           fsr1h	equ	0xFE2
  8551                           fsr1l	equ	0xFE1
  8552                           indf2	equ	0xFDF
  8553                           postinc2	equ	0xFDE
  8554                           postdec2	equ	0xFDD
  8555                           plusw2	equ	0xFDB
  8556                           fsr2h	equ	0xFDA
  8557                           fsr2l	equ	0xFD9
  8558                           status	equ	0xFD8
  8559                           
  8560 ;; *************** function _SyncGlobalToEEPROM *****************
  8561 ;; Defined at:
  8562 ;;		line 158 in file "EEPROM.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;		None
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;		None
  8567 ;; Return value:  Size  Location     Type
  8568 ;;                  1    wreg      unsigned char 
  8569 ;; Registers used:
  8570 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  8571 ;; Tracked objects:
  8572 ;;		On entry : 0/0
  8573 ;;		On exit  : 0/0
  8574 ;;		Unchanged: 0/0
  8575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8580 ;;Total ram usage:        0 bytes
  8581 ;; Hardware stack levels used:    1
  8582 ;; Hardware stack levels required when called:   13
  8583 ;; This function calls:
  8584 ;;		_SetEEPROM
  8585 ;; This function is called by:
  8586 ;;		_BluetoothConfigured
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text44
  8591  0038AA                     __ptext44:
  8592                           	opt stack 0
  8593  0038AA                     _SyncGlobalToEEPROM:
  8594                           	opt stack 14
  8595                           
  8596                           ;EEPROM.c: 160: if(!SetEEPROM(Global,0x00000003))
  8597                           
  8598                           ;incstack = 0
  8599  0038AA  EE20  F0B3         	lfsr	2,_Global
  8600  0038AE  EE01  F0EB         	lfsr	0,SetEEPROM@Temp
  8601  0038B2  0E04               	movlw	4
  8602  0038B4                     u5761:
  8603  0038B4  CFDB FFEB          	movff	plusw2,plusw0
  8604  0038B8  06E8               	decf	wreg,f,c
  8605  0038BA  E2FC               	bc	u5761
  8606  0038BC  0E03               	movlw	3
  8607  0038BE  0101               	movlb	1	; () banked
  8608  0038C0  6FF0               	movwf	SetEEPROM@burn& (0+255),b
  8609  0038C2  0E00               	movlw	0
  8610  0038C4  6FF1               	movwf	(SetEEPROM@burn+1)& (0+255),b
  8611  0038C6  0E00               	movlw	0
  8612  0038C8  6FF2               	movwf	(SetEEPROM@burn+2)& (0+255),b
  8613  0038CA  0E00               	movlw	0
  8614  0038CC  6FF3               	movwf	(SetEEPROM@burn+3)& (0+255),b
  8615  0038CE  EC83  F019         	call	_SetEEPROM	;wreg free
  8616  0038D2  0101               	movlb	1	; () banked
  8617  0038D4  51EB               	movf	?_SetEEPROM& (0+255),w,b
  8618  0038D6  0101               	movlb	1	; () banked
  8619  0038D8  11EC               	iorwf	(?_SetEEPROM+1)& (0+255),w,b
  8620  0038DA  0101               	movlb	1	; () banked
  8621  0038DC  11ED               	iorwf	(?_SetEEPROM+2)& (0+255),w,b
  8622  0038DE  0101               	movlb	1	; () banked
  8623  0038E0  11EE               	iorwf	(?_SetEEPROM+3)& (0+255),w,b
  8624  0038E2  A4D8               	btfss	status,2,c
  8625  0038E4  D002               	goto	l5676
  8626                           
  8627                           ; BSR set to: 1
  8628                           ;EEPROM.c: 161: {
  8629                           ;EEPROM.c: 162: return 1;
  8630  0038E6  0E01               	movlw	1
  8631                           
  8632                           ; BSR set to: 1
  8633  0038E8  0012               	return	
  8634  0038EA                     l5676:
  8635                           
  8636                           ; BSR set to: 1
  8637                           ;EEPROM.c: 163: }
  8638                           ;EEPROM.c: 164: return 0;
  8639  0038EA  0E00               	movlw	0
  8640  0038EC  0012               	return	
  8641                           
  8642                           ; BSR set to: 1
  8643                           
  8644                           ; BSR set to: 1
  8645  0038EE  0012               	return		;funcret
  8646  0038F0                     __end_of_SyncGlobalToEEPROM:
  8647                           	opt stack 0
  8648                           tblptru	equ	0xFF8
  8649                           tblptrh	equ	0xFF7
  8650                           tblptrl	equ	0xFF6
  8651                           tablat	equ	0xFF5
  8652                           prodh	equ	0xFF4
  8653                           prodl	equ	0xFF3
  8654                           intcon	equ	0xFF2
  8655                           intcon2	equ	0xFF1
  8656                           indf0	equ	0xFEF
  8657                           postinc0	equ	0xFEE
  8658                           plusw0	equ	0xFEB
  8659                           fsr0h	equ	0xFEA
  8660                           fsr0l	equ	0xFE9
  8661                           wreg	equ	0xFE8
  8662                           postdec1	equ	0xFE5
  8663                           fsr1h	equ	0xFE2
  8664                           fsr1l	equ	0xFE1
  8665                           indf2	equ	0xFDF
  8666                           postinc2	equ	0xFDE
  8667                           postdec2	equ	0xFDD
  8668                           plusw2	equ	0xFDB
  8669                           fsr2h	equ	0xFDA
  8670                           fsr2l	equ	0xFD9
  8671                           status	equ	0xFD8
  8672                           
  8673 ;; *************** function _SetEEPROM *****************
  8674 ;; Defined at:
  8675 ;;		line 131 in file "EEPROM.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;  Temp            5   37[BANK1 ] struct EEdata
  8678 ;;  burn            4   42[BANK1 ] unsigned long 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;  fail            4   46[BANK1 ] unsigned long 
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  4   37[BANK1 ] unsigned long 
  8683 ;; Registers used:
  8684 ;;		wreg, status,2, status,0, cstack
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8690 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8693 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8694 ;;Total ram usage:       13 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; Hardware stack levels required when called:   12
  8697 ;; This function calls:
  8698 ;;		_SetMemoryChar
  8699 ;;		_SetMemoryLong
  8700 ;; This function is called by:
  8701 ;;		_SyncGlobalToEEPROM
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text45
  8706  003306                     __ptext45:
  8707                           	opt stack 0
  8708  003306                     _SetEEPROM:
  8709                           	opt stack 14
  8710                           
  8711                           ;EEPROM.c: 133: unsigned long fail = 0;
  8712                           
  8713                           ; BSR set to: 1
  8714                           ;incstack = 0
  8715  003306  0E00               	movlw	0
  8716  003308  0101               	movlb	1	; () banked
  8717  00330A  6FF4               	movwf	SetEEPROM@fail& (0+255),b
  8718  00330C  0E00               	movlw	0
  8719  00330E  6FF5               	movwf	(SetEEPROM@fail+1)& (0+255),b
  8720  003310  0E00               	movlw	0
  8721  003312  6FF6               	movwf	(SetEEPROM@fail+2)& (0+255),b
  8722  003314  0E00               	movlw	0
  8723  003316  6FF7               	movwf	(SetEEPROM@fail+3)& (0+255),b
  8724                           
  8725                           ; BSR set to: 1
  8726                           ;EEPROM.c: 134: if(burn & 0x00000001)
  8727  003318  0101               	movlb	1	; () banked
  8728  00331A  A1F0               	btfss	SetEEPROM@burn& (0+255),0,b
  8729  00331C  D012               	goto	l5524
  8730                           
  8731                           ; BSR set to: 1
  8732                           ;EEPROM.c: 135: {
  8733                           ;EEPROM.c: 136: if(!SetMemoryChar(Temp.BlueToothFlag,0))
  8734  00331E  0E00               	movlw	0
  8735  003320  0100               	movlb	0	; () banked
  8736  003322  6F95               	movwf	SetMemoryChar@AddressFirst& (0+255),b
  8737  003324  0101               	movlb	1	; () banked
  8738  003326  51EB               	movf	SetEEPROM@Temp& (0+255),w,b
  8739  003328  ECF6  F01C         	call	_SetMemoryChar
  8740  00332C  0900               	iorlw	0
  8741  00332E  A4D8               	btfss	status,2,c
  8742  003330  D008               	goto	l5524
  8743                           
  8744                           ;EEPROM.c: 137: {
  8745                           ;EEPROM.c: 139: fail += 0x00000001;
  8746  003332  0E01               	movlw	1
  8747  003334  0101               	movlb	1	; () banked
  8748  003336  27F4               	addwf	SetEEPROM@fail& (0+255),f,b
  8749  003338  0E00               	movlw	0
  8750  00333A  23F5               	addwfc	(SetEEPROM@fail+1)& (0+255),f,b
  8751  00333C  23F6               	addwfc	(SetEEPROM@fail+2)& (0+255),f,b
  8752  00333E  23F7               	addwfc	(SetEEPROM@fail+3)& (0+255),f,b
  8753                           
  8754                           ; BSR set to: 1
  8755  003340  D000               	goto	l5524
  8756  003342                     l5524:
  8757                           
  8758                           ;EEPROM.c: 140: }
  8759                           ;EEPROM.c: 141: }
  8760                           ;EEPROM.c: 142: if(burn & 0x00000002)
  8761  003342  0101               	movlb	1	; () banked
  8762  003344  A3F0               	btfss	SetEEPROM@burn& (0+255),1,b
  8763  003346  D018               	goto	l5530
  8764                           
  8765                           ; BSR set to: 1
  8766                           ;EEPROM.c: 143: {
  8767                           ;EEPROM.c: 144: if(!SetMemoryLong(Temp.NECcode,1))
  8768  003348  C1EC  F1DA         	movff	SetEEPROM@Temp+1,SetMemoryLong@Data
  8769  00334C  C1ED  F1DB         	movff	SetEEPROM@Temp+2,SetMemoryLong@Data+1
  8770  003350  C1EE  F1DC         	movff	SetEEPROM@Temp+3,SetMemoryLong@Data+2
  8771  003354  C1EF  F1DD         	movff	SetEEPROM@Temp+4,SetMemoryLong@Data+3
  8772  003358  0E01               	movlw	1
  8773  00335A  0101               	movlb	1	; () banked
  8774  00335C  6FDE               	movwf	SetMemoryLong@AddressFirst& (0+255),b
  8775  00335E  ECA1  F014         	call	_SetMemoryLong	;wreg free
  8776  003362  0900               	iorlw	0
  8777  003364  A4D8               	btfss	status,2,c
  8778  003366  D008               	goto	l5530
  8779                           
  8780                           ;EEPROM.c: 145: {
  8781                           ;EEPROM.c: 147: fail += 0x00000002;
  8782  003368  0E02               	movlw	2
  8783  00336A  0101               	movlb	1	; () banked
  8784  00336C  27F4               	addwf	SetEEPROM@fail& (0+255),f,b
  8785  00336E  0E00               	movlw	0
  8786  003370  23F5               	addwfc	(SetEEPROM@fail+1)& (0+255),f,b
  8787  003372  23F6               	addwfc	(SetEEPROM@fail+2)& (0+255),f,b
  8788  003374  23F7               	addwfc	(SetEEPROM@fail+3)& (0+255),f,b
  8789                           
  8790                           ; BSR set to: 1
  8791  003376  D000               	goto	l5530
  8792  003378                     l5530:
  8793                           
  8794                           ;EEPROM.c: 148: }
  8795                           ;EEPROM.c: 149: }
  8796                           ;EEPROM.c: 150: return fail;
  8797  003378  C1F4  F1EB         	movff	SetEEPROM@fail,?_SetEEPROM
  8798  00337C  C1F5  F1EC         	movff	SetEEPROM@fail+1,?_SetEEPROM+1
  8799  003380  C1F6  F1ED         	movff	SetEEPROM@fail+2,?_SetEEPROM+2
  8800  003384  C1F7  F1EE         	movff	SetEEPROM@fail+3,?_SetEEPROM+3
  8801  003388  0012               	return	
  8802  00338A  0012               	return		;funcret
  8803  00338C                     __end_of_SetEEPROM:
  8804                           	opt stack 0
  8805                           tblptru	equ	0xFF8
  8806                           tblptrh	equ	0xFF7
  8807                           tblptrl	equ	0xFF6
  8808                           tablat	equ	0xFF5
  8809                           prodh	equ	0xFF4
  8810                           prodl	equ	0xFF3
  8811                           intcon	equ	0xFF2
  8812                           intcon2	equ	0xFF1
  8813                           indf0	equ	0xFEF
  8814                           postinc0	equ	0xFEE
  8815                           plusw0	equ	0xFEB
  8816                           fsr0h	equ	0xFEA
  8817                           fsr0l	equ	0xFE9
  8818                           wreg	equ	0xFE8
  8819                           postdec1	equ	0xFE5
  8820                           fsr1h	equ	0xFE2
  8821                           fsr1l	equ	0xFE1
  8822                           indf2	equ	0xFDF
  8823                           postinc2	equ	0xFDE
  8824                           postdec2	equ	0xFDD
  8825                           plusw2	equ	0xFDB
  8826                           fsr2h	equ	0xFDA
  8827                           fsr2l	equ	0xFD9
  8828                           status	equ	0xFD8
  8829                           
  8830 ;; *************** function _SetMemoryLong *****************
  8831 ;; Defined at:
  8832 ;;		line 210 in file "EEPROM.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;  Data            4   20[BANK1 ] unsigned long 
  8835 ;;  AddressFirst    1   24[BANK1 ] unsigned char 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  Test            4   29[BANK1 ] unsigned long 
  8838 ;;  L               1   36[BANK1 ] unsigned char 
  8839 ;;  ML              1   35[BANK1 ] unsigned char 
  8840 ;;  MH              1   34[BANK1 ] unsigned char 
  8841 ;;  H               1   33[BANK1 ] unsigned char 
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  1    wreg      unsigned char 
  8844 ;; Registers used:
  8845 ;;		wreg, status,2, status,0, cstack
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8851 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8852 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8853 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8854 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8855 ;;Total ram usage:       17 bytes
  8856 ;; Hardware stack levels used:    1
  8857 ;; Hardware stack levels required when called:   11
  8858 ;; This function calls:
  8859 ;;		_GetMemoryLong
  8860 ;;		_WriteEEPROM_1Byte
  8861 ;; This function is called by:
  8862 ;;		_SetEEPROM
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text46
  8867  002942                     __ptext46:
  8868                           	opt stack 0
  8869  002942                     _SetMemoryLong:
  8870                           	opt stack 14
  8871                           
  8872                           ;EEPROM.c: 212: unsigned char H;
  8873                           ;EEPROM.c: 213: unsigned char MH;
  8874                           ;EEPROM.c: 214: unsigned char ML;
  8875                           ;EEPROM.c: 215: unsigned char L;
  8876                           ;EEPROM.c: 216: unsigned long Test;
  8877                           ;EEPROM.c: 218: H = (unsigned char) ((Data & 0XFF000000) >> 24);
  8878                           
  8879                           ;incstack = 0
  8880  002942  0E00               	movlw	0
  8881  002944  0101               	movlb	1	; () banked
  8882  002946  15DA               	andwf	SetMemoryLong@Data& (0+255),w,b
  8883  002948  0101               	movlb	1	; () banked
  8884  00294A  6FDF               	movwf	??_SetMemoryLong& (0+255),b
  8885  00294C  0E00               	movlw	0
  8886  00294E  0101               	movlb	1	; () banked
  8887  002950  15DB               	andwf	(SetMemoryLong@Data+1)& (0+255),w,b
  8888  002952  0101               	movlb	1	; () banked
  8889  002954  6FE0               	movwf	(??_SetMemoryLong+1)& (0+255),b
  8890  002956  0E00               	movlw	0
  8891  002958  0101               	movlb	1	; () banked
  8892  00295A  15DC               	andwf	(SetMemoryLong@Data+2)& (0+255),w,b
  8893  00295C  0101               	movlb	1	; () banked
  8894  00295E  6FE1               	movwf	(??_SetMemoryLong+2)& (0+255),b
  8895  002960  0EFF               	movlw	255
  8896  002962  0101               	movlb	1	; () banked
  8897  002964  15DD               	andwf	(SetMemoryLong@Data+3)& (0+255),w,b
  8898  002966  0101               	movlb	1	; () banked
  8899  002968  6FE2               	movwf	(??_SetMemoryLong+3)& (0+255),b
  8900  00296A  0E19               	movlw	25
  8901  00296C  D006               	goto	u5400
  8902  00296E                     u5405:
  8903  00296E  0101               	movlb	1	; () banked
  8904  002970  90D8               	bcf	status,0,c
  8905  002972  33E2               	rrcf	(??_SetMemoryLong+3)& (0+255),f,b
  8906  002974  33E1               	rrcf	(??_SetMemoryLong+2)& (0+255),f,b
  8907  002976  33E0               	rrcf	(??_SetMemoryLong+1)& (0+255),f,b
  8908  002978  33DF               	rrcf	??_SetMemoryLong& (0+255),f,b
  8909  00297A                     u5400:
  8910  00297A  2EE8               	decfsz	wreg,f,c
  8911  00297C  D7F8               	goto	u5405
  8912  00297E  0101               	movlb	1	; () banked
  8913  002980  51DF               	movf	??_SetMemoryLong& (0+255),w,b
  8914  002982  0101               	movlb	1	; () banked
  8915  002984  6FE7               	movwf	SetMemoryLong@H& (0+255),b
  8916                           
  8917                           ; BSR set to: 1
  8918                           ;EEPROM.c: 219: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
  8919  002986  C1DC  F1E8         	movff	SetMemoryLong@Data+2,SetMemoryLong@MH
  8920                           
  8921                           ; BSR set to: 1
  8922                           ;EEPROM.c: 220: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
  8923  00298A  C1DB  F1E9         	movff	SetMemoryLong@Data+1,SetMemoryLong@ML
  8924                           
  8925                           ; BSR set to: 1
  8926                           ;EEPROM.c: 221: L = (unsigned char) (Data & 0X000000FF);
  8927  00298E  C1DA  F1EA         	movff	SetMemoryLong@Data,SetMemoryLong@L
  8928                           
  8929                           ; BSR set to: 1
  8930                           ;EEPROM.c: 224: WriteEEPROM_1Byte(AddressFirst, H);
  8931  002992  C1DE  F08C         	movff	SetMemoryLong@AddressFirst,WriteEEPROM_1Byte@address
  8932  002996  0100               	movlb	0	; () banked
  8933  002998  6B8D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  8934  00299A  C1E7  F08E         	movff	SetMemoryLong@H,WriteEEPROM_1Byte@data
  8935  00299E  EC9B  F01C         	call	_WriteEEPROM_1Byte	;wreg free
  8936                           
  8937                           ;EEPROM.c: 225: WriteEEPROM_1Byte((AddressFirst + 1), MH);
  8938  0029A2  0E01               	movlw	1
  8939  0029A4  0101               	movlb	1	; () banked
  8940  0029A6  25DE               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
  8941  0029A8  0100               	movlb	0	; () banked
  8942  0029AA  6F8C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
  8943  0029AC  0100               	movlb	0	; () banked
  8944  0029AE  6B8D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  8945  0029B0  0E00               	movlw	0
  8946  0029B2  238D               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
  8947  0029B4  C1E8  F08E         	movff	SetMemoryLong@MH,WriteEEPROM_1Byte@data
  8948  0029B8  EC9B  F01C         	call	_WriteEEPROM_1Byte	;wreg free
  8949                           
  8950                           ;EEPROM.c: 226: WriteEEPROM_1Byte((AddressFirst + 2), ML);
  8951  0029BC  0E02               	movlw	2
  8952  0029BE  0101               	movlb	1	; () banked
  8953  0029C0  25DE               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
  8954  0029C2  0100               	movlb	0	; () banked
  8955  0029C4  6F8C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
  8956  0029C6  0100               	movlb	0	; () banked
  8957  0029C8  6B8D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  8958  0029CA  0E00               	movlw	0
  8959  0029CC  238D               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
  8960  0029CE  C1E9  F08E         	movff	SetMemoryLong@ML,WriteEEPROM_1Byte@data
  8961  0029D2  EC9B  F01C         	call	_WriteEEPROM_1Byte	;wreg free
  8962                           
  8963                           ;EEPROM.c: 227: WriteEEPROM_1Byte((AddressFirst + 3), L);
  8964  0029D6  0E03               	movlw	3
  8965  0029D8  0101               	movlb	1	; () banked
  8966  0029DA  25DE               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
  8967  0029DC  0100               	movlb	0	; () banked
  8968  0029DE  6F8C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
  8969  0029E0  0100               	movlb	0	; () banked
  8970  0029E2  6B8D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  8971  0029E4  0E00               	movlw	0
  8972  0029E6  238D               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
  8973  0029E8  C1EA  F08E         	movff	SetMemoryLong@L,WriteEEPROM_1Byte@data
  8974  0029EC  EC9B  F01C         	call	_WriteEEPROM_1Byte	;wreg free
  8975                           
  8976                           ;EEPROM.c: 230: Test = GetMemoryLong(AddressFirst);
  8977  0029F0  0101               	movlb	1	; () banked
  8978  0029F2  51DE               	movf	SetMemoryLong@AddressFirst& (0+255),w,b
  8979  0029F4  EC25  F010         	call	_GetMemoryLong
  8980  0029F8  C08F  F1E3         	movff	?_GetMemoryLong,SetMemoryLong@Test
  8981  0029FC  C090  F1E4         	movff	?_GetMemoryLong+1,SetMemoryLong@Test+1
  8982  002A00  C091  F1E5         	movff	?_GetMemoryLong+2,SetMemoryLong@Test+2
  8983  002A04  C092  F1E6         	movff	?_GetMemoryLong+3,SetMemoryLong@Test+3
  8984                           
  8985                           ;EEPROM.c: 232: if(Test == Data)
  8986  002A08  0101               	movlb	1	; () banked
  8987  002A0A  51DA               	movf	SetMemoryLong@Data& (0+255),w,b
  8988  002A0C  0101               	movlb	1	; () banked
  8989  002A0E  19E3               	xorwf	SetMemoryLong@Test& (0+255),w,b
  8990  002A10  E112               	bnz	l5448
  8991  002A12  0101               	movlb	1	; () banked
  8992  002A14  51DB               	movf	(SetMemoryLong@Data+1)& (0+255),w,b
  8993  002A16  0101               	movlb	1	; () banked
  8994  002A18  19E4               	xorwf	(SetMemoryLong@Test+1)& (0+255),w,b
  8995  002A1A  E10D               	bnz	l5448
  8996  002A1C  0101               	movlb	1	; () banked
  8997  002A1E  51DC               	movf	(SetMemoryLong@Data+2)& (0+255),w,b
  8998  002A20  0101               	movlb	1	; () banked
  8999  002A22  19E5               	xorwf	(SetMemoryLong@Test+2)& (0+255),w,b
  9000  002A24  E108               	bnz	l5448
  9001  002A26  0101               	movlb	1	; () banked
  9002  002A28  51DD               	movf	(SetMemoryLong@Data+3)& (0+255),w,b
  9003  002A2A  0101               	movlb	1	; () banked
  9004  002A2C  19E6               	xorwf	(SetMemoryLong@Test+3)& (0+255),w,b
  9005  002A2E  A4D8               	btfss	status,2,c
  9006  002A30  D002               	goto	l5448
  9007                           
  9008                           ; BSR set to: 1
  9009                           ;EEPROM.c: 233: {
  9010                           ;EEPROM.c: 234: return 1;
  9011  002A32  0E01               	movlw	1
  9012                           
  9013                           ; BSR set to: 1
  9014  002A34  0012               	return	
  9015  002A36                     l5448:
  9016                           
  9017                           ; BSR set to: 1
  9018                           ;EEPROM.c: 235: }
  9019                           ;EEPROM.c: 236: return 0;
  9020  002A36  0E00               	movlw	0
  9021  002A38  0012               	return	
  9022                           
  9023                           ; BSR set to: 1
  9024                           
  9025                           ; BSR set to: 1
  9026  002A3A  0012               	return		;funcret
  9027  002A3C                     __end_of_SetMemoryLong:
  9028                           	opt stack 0
  9029                           tblptru	equ	0xFF8
  9030                           tblptrh	equ	0xFF7
  9031                           tblptrl	equ	0xFF6
  9032                           tablat	equ	0xFF5
  9033                           prodh	equ	0xFF4
  9034                           prodl	equ	0xFF3
  9035                           intcon	equ	0xFF2
  9036                           intcon2	equ	0xFF1
  9037                           indf0	equ	0xFEF
  9038                           postinc0	equ	0xFEE
  9039                           plusw0	equ	0xFEB
  9040                           fsr0h	equ	0xFEA
  9041                           fsr0l	equ	0xFE9
  9042                           wreg	equ	0xFE8
  9043                           postdec1	equ	0xFE5
  9044                           fsr1h	equ	0xFE2
  9045                           fsr1l	equ	0xFE1
  9046                           indf2	equ	0xFDF
  9047                           postinc2	equ	0xFDE
  9048                           postdec2	equ	0xFDD
  9049                           plusw2	equ	0xFDB
  9050                           fsr2h	equ	0xFDA
  9051                           fsr2l	equ	0xFD9
  9052                           status	equ	0xFD8
  9053                           
  9054 ;; *************** function _GetMemoryLong *****************
  9055 ;; Defined at:
  9056 ;;		line 187 in file "EEPROM.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  AddressFirst    1    wreg     unsigned char 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;  AddressFirst    1   59[BANK0 ] unsigned char 
  9061 ;;  temp            4   51[BANK0 ] unsigned long 
  9062 ;;  L               1   58[BANK0 ] unsigned char 
  9063 ;;  ML              1   57[BANK0 ] unsigned char 
  9064 ;;  MH              1   56[BANK0 ] unsigned char 
  9065 ;;  H               1   55[BANK0 ] unsigned char 
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  4   47[BANK0 ] unsigned long 
  9068 ;; Registers used:
  9069 ;;		wreg, status,2, status,0, cstack
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9076 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9077 ;;      Temps:          0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9078 ;;      Totals:         0      13      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9079 ;;Total ram usage:       33 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; Hardware stack levels required when called:   10
  9082 ;; This function calls:
  9083 ;;		_ReadEEPROM_1Byte
  9084 ;; This function is called by:
  9085 ;;		_GetEEPROM
  9086 ;;		_SetMemoryLong
  9087 ;; This function uses a non-reentrant model
  9088 ;;
  9089                           
  9090                           	psect	text47
  9091  00204A                     __ptext47:
  9092                           	opt stack 0
  9093  00204A                     _GetMemoryLong:
  9094                           	opt stack 17
  9095                           
  9096                           ; BSR set to: 1
  9097                           ;incstack = 0
  9098                           ;GetMemoryLong@AddressFirst stored from wreg
  9099  00204A  0100               	movlb	0	; () banked
  9100  00204C  6F9B               	movwf	GetMemoryLong@AddressFirst& (0+255),b
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;EEPROM.c: 189: unsigned char H;
  9104                           ;EEPROM.c: 190: unsigned char MH;
  9105                           ;EEPROM.c: 191: unsigned char ML;
  9106                           ;EEPROM.c: 192: unsigned char L;
  9107                           ;EEPROM.c: 193: unsigned long temp =0;
  9108  00204E  0E00               	movlw	0
  9109  002050  0100               	movlb	0	; () banked
  9110  002052  6F93               	movwf	GetMemoryLong@temp& (0+255),b
  9111  002054  0E00               	movlw	0
  9112  002056  6F94               	movwf	(GetMemoryLong@temp+1)& (0+255),b
  9113  002058  0E00               	movlw	0
  9114  00205A  6F95               	movwf	(GetMemoryLong@temp+2)& (0+255),b
  9115  00205C  0E00               	movlw	0
  9116  00205E  6F96               	movwf	(GetMemoryLong@temp+3)& (0+255),b
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;EEPROM.c: 195: H = ReadEEPROM_1Byte(AddressFirst);
  9120  002060  C09B  F08C         	movff	GetMemoryLong@AddressFirst,ReadEEPROM_1Byte@address
  9121  002064  0100               	movlb	0	; () banked
  9122  002066  6B8D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  9123  002068  ECBB  F01C         	call	_ReadEEPROM_1Byte	;wreg free
  9124  00206C  0100               	movlb	0	; () banked
  9125  00206E  518C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  9126  002070  0100               	movlb	0	; () banked
  9127  002072  6F97               	movwf	GetMemoryLong@H& (0+255),b
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;EEPROM.c: 196: MH = ReadEEPROM_1Byte(AddressFirst + 1);
  9131  002074  0E01               	movlw	1
  9132  002076  0100               	movlb	0	; () banked
  9133  002078  259B               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
  9134  00207A  0100               	movlb	0	; () banked
  9135  00207C  6F8C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
  9136  00207E  0100               	movlb	0	; () banked
  9137  002080  6B8D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  9138  002082  0E00               	movlw	0
  9139  002084  238D               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
  9140  002086  ECBB  F01C         	call	_ReadEEPROM_1Byte	;wreg free
  9141  00208A  0100               	movlb	0	; () banked
  9142  00208C  518C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  9143  00208E  0100               	movlb	0	; () banked
  9144  002090  6F98               	movwf	GetMemoryLong@MH& (0+255),b
  9145                           
  9146                           ; BSR set to: 0
  9147                           ;EEPROM.c: 197: ML = ReadEEPROM_1Byte(AddressFirst + 2);
  9148  002092  0E02               	movlw	2
  9149  002094  0100               	movlb	0	; () banked
  9150  002096  259B               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
  9151  002098  0100               	movlb	0	; () banked
  9152  00209A  6F8C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
  9153  00209C  0100               	movlb	0	; () banked
  9154  00209E  6B8D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  9155  0020A0  0E00               	movlw	0
  9156  0020A2  238D               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
  9157  0020A4  ECBB  F01C         	call	_ReadEEPROM_1Byte	;wreg free
  9158  0020A8  0100               	movlb	0	; () banked
  9159  0020AA  518C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  9160  0020AC  0100               	movlb	0	; () banked
  9161  0020AE  6F99               	movwf	GetMemoryLong@ML& (0+255),b
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;EEPROM.c: 198: L = ReadEEPROM_1Byte(AddressFirst + 3);
  9165  0020B0  0E03               	movlw	3
  9166  0020B2  0100               	movlb	0	; () banked
  9167  0020B4  259B               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
  9168  0020B6  0100               	movlb	0	; () banked
  9169  0020B8  6F8C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
  9170  0020BA  0100               	movlb	0	; () banked
  9171  0020BC  6B8D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  9172  0020BE  0E00               	movlw	0
  9173  0020C0  238D               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
  9174  0020C2  ECBB  F01C         	call	_ReadEEPROM_1Byte	;wreg free
  9175  0020C6  0100               	movlb	0	; () banked
  9176  0020C8  518C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  9177  0020CA  0100               	movlb	0	; () banked
  9178  0020CC  6F9A               	movwf	GetMemoryLong@L& (0+255),b
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;EEPROM.c: 200: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
  9182                           ;EEPROM.c: 201: + ((unsigned long)ML << 8) + (unsigned long)L);
  9183  0020CE  C099  F1C6         	movff	GetMemoryLong@ML,??_GetMemoryLong
  9184  0020D2  0101               	movlb	1	; () banked
  9185  0020D4  6BC7               	clrf	(??_GetMemoryLong+1)& (0+255),b
  9186  0020D6  6BC8               	clrf	(??_GetMemoryLong+2)& (0+255),b
  9187  0020D8  6BC9               	clrf	(??_GetMemoryLong+3)& (0+255),b
  9188  0020DA  C1C8  F1C9         	movff	??_GetMemoryLong+2,??_GetMemoryLong+3
  9189  0020DE  C1C7  F1C8         	movff	??_GetMemoryLong+1,??_GetMemoryLong+2
  9190  0020E2  C1C6  F1C7         	movff	??_GetMemoryLong,??_GetMemoryLong+1
  9191  0020E6  0101               	movlb	1	; () banked
  9192  0020E8  6BC6               	clrf	??_GetMemoryLong& (0+255),b
  9193  0020EA  C098  F1CA         	movff	GetMemoryLong@MH,??_GetMemoryLong+4
  9194  0020EE  0101               	movlb	1	; () banked
  9195  0020F0  6BCB               	clrf	(??_GetMemoryLong+5)& (0+255),b
  9196  0020F2  6BCC               	clrf	(??_GetMemoryLong+6)& (0+255),b
  9197  0020F4  6BCD               	clrf	(??_GetMemoryLong+7)& (0+255),b
  9198  0020F6  C1CB  F1CD         	movff	??_GetMemoryLong+5,??_GetMemoryLong+7
  9199  0020FA  C1CA  F1CC         	movff	??_GetMemoryLong+4,??_GetMemoryLong+6
  9200  0020FE  0101               	movlb	1	; () banked
  9201  002100  6BCB               	clrf	(??_GetMemoryLong+5)& (0+255),b
  9202  002102  6BCA               	clrf	(??_GetMemoryLong+4)& (0+255),b
  9203  002104  C097  F1CE         	movff	GetMemoryLong@H,??_GetMemoryLong+8
  9204  002108  0101               	movlb	1	; () banked
  9205  00210A  6BCF               	clrf	(??_GetMemoryLong+9)& (0+255),b
  9206  00210C  6BD0               	clrf	(??_GetMemoryLong+10)& (0+255),b
  9207  00210E  6BD1               	clrf	(??_GetMemoryLong+11)& (0+255),b
  9208  002110  C1CE  F1D1         	movff	??_GetMemoryLong+8,??_GetMemoryLong+11
  9209  002114  0101               	movlb	1	; () banked
  9210  002116  6BD0               	clrf	(??_GetMemoryLong+10)& (0+255),b
  9211  002118  6BCF               	clrf	(??_GetMemoryLong+9)& (0+255),b
  9212  00211A  6BCE               	clrf	(??_GetMemoryLong+8)& (0+255),b
  9213  00211C  0101               	movlb	1	; () banked
  9214  00211E  51CA               	movf	(??_GetMemoryLong+4)& (0+255),w,b
  9215  002120  0101               	movlb	1	; () banked
  9216  002122  25CE               	addwf	(??_GetMemoryLong+8)& (0+255),w,b
  9217  002124  0101               	movlb	1	; () banked
  9218  002126  6FD2               	movwf	(??_GetMemoryLong+12)& (0+255),b
  9219  002128  0101               	movlb	1	; () banked
  9220  00212A  51CB               	movf	(??_GetMemoryLong+5)& (0+255),w,b
  9221  00212C  0101               	movlb	1	; () banked
  9222  00212E  21CF               	addwfc	(??_GetMemoryLong+9)& (0+255),w,b
  9223  002130  0101               	movlb	1	; () banked
  9224  002132  6FD3               	movwf	(??_GetMemoryLong+13)& (0+255),b
  9225  002134  0101               	movlb	1	; () banked
  9226  002136  51CC               	movf	(??_GetMemoryLong+6)& (0+255),w,b
  9227  002138  0101               	movlb	1	; () banked
  9228  00213A  21D0               	addwfc	(??_GetMemoryLong+10)& (0+255),w,b
  9229  00213C  0101               	movlb	1	; () banked
  9230  00213E  6FD4               	movwf	(??_GetMemoryLong+14)& (0+255),b
  9231  002140  0101               	movlb	1	; () banked
  9232  002142  51CD               	movf	(??_GetMemoryLong+7)& (0+255),w,b
  9233  002144  0101               	movlb	1	; () banked
  9234  002146  21D1               	addwfc	(??_GetMemoryLong+11)& (0+255),w,b
  9235  002148  0101               	movlb	1	; () banked
  9236  00214A  6FD5               	movwf	(??_GetMemoryLong+15)& (0+255),b
  9237  00214C  0101               	movlb	1	; () banked
  9238  00214E  51C6               	movf	??_GetMemoryLong& (0+255),w,b
  9239  002150  0101               	movlb	1	; () banked
  9240  002152  25D2               	addwf	(??_GetMemoryLong+12)& (0+255),w,b
  9241  002154  0101               	movlb	1	; () banked
  9242  002156  6FD6               	movwf	(??_GetMemoryLong+16)& (0+255),b
  9243  002158  0101               	movlb	1	; () banked
  9244  00215A  51C7               	movf	(??_GetMemoryLong+1)& (0+255),w,b
  9245  00215C  0101               	movlb	1	; () banked
  9246  00215E  21D3               	addwfc	(??_GetMemoryLong+13)& (0+255),w,b
  9247  002160  0101               	movlb	1	; () banked
  9248  002162  6FD7               	movwf	(??_GetMemoryLong+17)& (0+255),b
  9249  002164  0101               	movlb	1	; () banked
  9250  002166  51C8               	movf	(??_GetMemoryLong+2)& (0+255),w,b
  9251  002168  0101               	movlb	1	; () banked
  9252  00216A  21D4               	addwfc	(??_GetMemoryLong+14)& (0+255),w,b
  9253  00216C  0101               	movlb	1	; () banked
  9254  00216E  6FD8               	movwf	(??_GetMemoryLong+18)& (0+255),b
  9255  002170  0101               	movlb	1	; () banked
  9256  002172  51C9               	movf	(??_GetMemoryLong+3)& (0+255),w,b
  9257  002174  0101               	movlb	1	; () banked
  9258  002176  21D5               	addwfc	(??_GetMemoryLong+15)& (0+255),w,b
  9259  002178  0101               	movlb	1	; () banked
  9260  00217A  6FD9               	movwf	(??_GetMemoryLong+19)& (0+255),b
  9261  00217C  0100               	movlb	0	; () banked
  9262  00217E  519A               	movf	GetMemoryLong@L& (0+255),w,b
  9263  002180  0101               	movlb	1	; () banked
  9264  002182  25D6               	addwf	(??_GetMemoryLong+16)& (0+255),w,b
  9265  002184  0100               	movlb	0	; () banked
  9266  002186  6F93               	movwf	GetMemoryLong@temp& (0+255),b
  9267  002188  0E00               	movlw	0
  9268  00218A  0101               	movlb	1	; () banked
  9269  00218C  21D7               	addwfc	(??_GetMemoryLong+17)& (0+255),w,b
  9270  00218E  0100               	movlb	0	; () banked
  9271  002190  6F94               	movwf	(GetMemoryLong@temp+1)& (0+255),b
  9272  002192  0E00               	movlw	0
  9273  002194  0101               	movlb	1	; () banked
  9274  002196  21D8               	addwfc	(??_GetMemoryLong+18)& (0+255),w,b
  9275  002198  0100               	movlb	0	; () banked
  9276  00219A  6F95               	movwf	(GetMemoryLong@temp+2)& (0+255),b
  9277  00219C  0E00               	movlw	0
  9278  00219E  0101               	movlb	1	; () banked
  9279  0021A0  21D9               	addwfc	(??_GetMemoryLong+19)& (0+255),w,b
  9280  0021A2  0100               	movlb	0	; () banked
  9281  0021A4  6F96               	movwf	(GetMemoryLong@temp+3)& (0+255),b
  9282                           
  9283                           ; BSR set to: 0
  9284                           ;EEPROM.c: 202: return temp;
  9285  0021A6  C093  F08F         	movff	GetMemoryLong@temp,?_GetMemoryLong
  9286  0021AA  C094  F090         	movff	GetMemoryLong@temp+1,?_GetMemoryLong+1
  9287  0021AE  C095  F091         	movff	GetMemoryLong@temp+2,?_GetMemoryLong+2
  9288  0021B2  C096  F092         	movff	GetMemoryLong@temp+3,?_GetMemoryLong+3
  9289  0021B6  0012               	return	
  9290                           
  9291                           ; BSR set to: 0
  9292                           
  9293                           ; BSR set to: 0
  9294  0021B8  0012               	return		;funcret
  9295  0021BA                     __end_of_GetMemoryLong:
  9296                           	opt stack 0
  9297                           tblptru	equ	0xFF8
  9298                           tblptrh	equ	0xFF7
  9299                           tblptrl	equ	0xFF6
  9300                           tablat	equ	0xFF5
  9301                           prodh	equ	0xFF4
  9302                           prodl	equ	0xFF3
  9303                           intcon	equ	0xFF2
  9304                           intcon2	equ	0xFF1
  9305                           indf0	equ	0xFEF
  9306                           postinc0	equ	0xFEE
  9307                           plusw0	equ	0xFEB
  9308                           fsr0h	equ	0xFEA
  9309                           fsr0l	equ	0xFE9
  9310                           wreg	equ	0xFE8
  9311                           postdec1	equ	0xFE5
  9312                           fsr1h	equ	0xFE2
  9313                           fsr1l	equ	0xFE1
  9314                           indf2	equ	0xFDF
  9315                           postinc2	equ	0xFDE
  9316                           postdec2	equ	0xFDD
  9317                           plusw2	equ	0xFDB
  9318                           fsr2h	equ	0xFDA
  9319                           fsr2l	equ	0xFD9
  9320                           status	equ	0xFD8
  9321                           
  9322 ;; *************** function _SetMemoryChar *****************
  9323 ;; Defined at:
  9324 ;;		line 304 in file "EEPROM.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  Data            1    wreg     unsigned char 
  9327 ;;  AddressFirst    1   53[BANK0 ] unsigned char 
  9328 ;; Auto vars:     Size  Location     Type
  9329 ;;  Data            1   55[BANK0 ] unsigned char 
  9330 ;;  Test            1   54[BANK0 ] unsigned char 
  9331 ;; Return value:  Size  Location     Type
  9332 ;;                  1    wreg      unsigned char 
  9333 ;; Registers used:
  9334 ;;		wreg, status,2, status,0, cstack
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 0/0
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9340 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9341 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9343 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9344 ;;Total ram usage:        3 bytes
  9345 ;; Hardware stack levels used:    1
  9346 ;; Hardware stack levels required when called:   11
  9347 ;; This function calls:
  9348 ;;		_GetMemoryChar
  9349 ;;		_WriteEEPROM_1Byte
  9350 ;; This function is called by:
  9351 ;;		_SetEEPROM
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           	psect	text48
  9356  0039EC                     __ptext48:
  9357                           	opt stack 0
  9358  0039EC                     _SetMemoryChar:
  9359                           	opt stack 14
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;incstack = 0
  9363                           ;SetMemoryChar@Data stored from wreg
  9364  0039EC  0100               	movlb	0	; () banked
  9365  0039EE  6F97               	movwf	SetMemoryChar@Data& (0+255),b
  9366                           
  9367                           ; BSR set to: 0
  9368                           ;EEPROM.c: 306: unsigned char Test;
  9369                           ;EEPROM.c: 308: WriteEEPROM_1Byte(AddressFirst, Data);
  9370  0039F0  C095  F08C         	movff	SetMemoryChar@AddressFirst,WriteEEPROM_1Byte@address
  9371  0039F4  0100               	movlb	0	; () banked
  9372  0039F6  6B8D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  9373  0039F8  C097  F08E         	movff	SetMemoryChar@Data,WriteEEPROM_1Byte@data
  9374  0039FC  EC9B  F01C         	call	_WriteEEPROM_1Byte	;wreg free
  9375                           
  9376                           ;EEPROM.c: 311: Test = GetMemoryChar(AddressFirst);
  9377  003A00  0100               	movlb	0	; () banked
  9378  003A02  5195               	movf	SetMemoryChar@AddressFirst& (0+255),w,b
  9379  003A04  ECC4  F01D         	call	_GetMemoryChar
  9380  003A08  0100               	movlb	0	; () banked
  9381  003A0A  518F               	movf	?_GetMemoryChar& (0+255),w,b
  9382  003A0C  0100               	movlb	0	; () banked
  9383  003A0E  6F96               	movwf	SetMemoryChar@Test& (0+255),b
  9384                           
  9385                           ; BSR set to: 0
  9386                           ;EEPROM.c: 313: if(Test == Data)
  9387  003A10  0100               	movlb	0	; () banked
  9388  003A12  5197               	movf	SetMemoryChar@Data& (0+255),w,b
  9389  003A14  0100               	movlb	0	; () banked
  9390  003A16  1996               	xorwf	SetMemoryChar@Test& (0+255),w,b
  9391  003A18  A4D8               	btfss	status,2,c
  9392  003A1A  D002               	goto	l5420
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;EEPROM.c: 314: {
  9396                           ;EEPROM.c: 315: return 1;
  9397  003A1C  0E01               	movlw	1
  9398                           
  9399                           ; BSR set to: 0
  9400  003A1E  0012               	return	
  9401  003A20                     l5420:
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;EEPROM.c: 316: }
  9405                           ;EEPROM.c: 317: return 0;
  9406  003A20  0E00               	movlw	0
  9407  003A22  0012               	return	
  9408                           
  9409                           ; BSR set to: 0
  9410                           
  9411                           ; BSR set to: 0
  9412  003A24  0012               	return		;funcret
  9413  003A26                     __end_of_SetMemoryChar:
  9414                           	opt stack 0
  9415                           tblptru	equ	0xFF8
  9416                           tblptrh	equ	0xFF7
  9417                           tblptrl	equ	0xFF6
  9418                           tablat	equ	0xFF5
  9419                           prodh	equ	0xFF4
  9420                           prodl	equ	0xFF3
  9421                           intcon	equ	0xFF2
  9422                           intcon2	equ	0xFF1
  9423                           indf0	equ	0xFEF
  9424                           postinc0	equ	0xFEE
  9425                           plusw0	equ	0xFEB
  9426                           fsr0h	equ	0xFEA
  9427                           fsr0l	equ	0xFE9
  9428                           wreg	equ	0xFE8
  9429                           postdec1	equ	0xFE5
  9430                           fsr1h	equ	0xFE2
  9431                           fsr1l	equ	0xFE1
  9432                           indf2	equ	0xFDF
  9433                           postinc2	equ	0xFDE
  9434                           postdec2	equ	0xFDD
  9435                           plusw2	equ	0xFDB
  9436                           fsr2h	equ	0xFDA
  9437                           fsr2l	equ	0xFD9
  9438                           status	equ	0xFD8
  9439                           
  9440 ;; *************** function _WriteEEPROM_1Byte *****************
  9441 ;; Defined at:
  9442 ;;		line 93 in file "EEPROM.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;  address         2   44[BANK0 ] unsigned int 
  9445 ;;  data            1   46[BANK0 ] unsigned char 
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  GIEstatus       1   47[BANK0 ] unsigned char 
  9448 ;; Return value:  Size  Location     Type
  9449 ;;		None               void
  9450 ;; Registers used:
  9451 ;;		wreg, status,2, status,0, cstack
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9457 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9458 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9460 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9461 ;;Total ram usage:        4 bytes
  9462 ;; Hardware stack levels used:    1
  9463 ;; Hardware stack levels required when called:   10
  9464 ;; This function calls:
  9465 ;;		_EEPROM_UNLOCK
  9466 ;; This function is called by:
  9467 ;;		_SetMemoryLong
  9468 ;;		_SetMemoryChar
  9469 ;;		_SetMemoryInt
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           	psect	text49
  9474  003936                     __ptext49:
  9475                           	opt stack 0
  9476  003936                     _WriteEEPROM_1Byte:
  9477                           	opt stack 14
  9478                           
  9479                           ;EEPROM.c: 95: unsigned char GIEstatus = INTCONbits.GIE;
  9480                           
  9481                           ; BSR set to: 0
  9482                           ;incstack = 0
  9483  003936  0E00               	movlw	0
  9484  003938  BEF2               	btfsc	intcon,7,c	;volatile
  9485  00393A  0E01               	movlw	1
  9486  00393C  0100               	movlb	0	; () banked
  9487  00393E  6F8F               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
  9488                           
  9489                           ; BSR set to: 0
  9490                           ;EEPROM.c: 96: EEADRH = (unsigned char)((address & 0x300) >> 8);
  9491  003940  0100               	movlb	0	; () banked
  9492  003942  518D               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
  9493  003944  0B03               	andlw	3
  9494  003946  6EAA               	movwf	4010,c	;volatile
  9495                           
  9496                           ; BSR set to: 0
  9497                           ;EEPROM.c: 97: EEADR = (unsigned char)(address & 0xFF);
  9498  003948  C08C  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
  9499                           
  9500                           ; BSR set to: 0
  9501                           ;EEPROM.c: 98: EEDATA = data;
  9502  00394C  C08E  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
  9503                           
  9504                           ; BSR set to: 0
  9505                           ;EEPROM.c: 99: EECON1bits.EEPGD = 0;
  9506  003950  9EA6               	bcf	4006,7,c	;volatile
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;EEPROM.c: 100: EECON1bits.CFGS = 0;
  9510  003952  9CA6               	bcf	4006,6,c	;volatile
  9511                           
  9512                           ; BSR set to: 0
  9513                           ;EEPROM.c: 101: EECON1bits.WREN =1;
  9514  003954  84A6               	bsf	4006,2,c	;volatile
  9515                           
  9516                           ; BSR set to: 0
  9517                           ;EEPROM.c: 102: INTCONbits.GIE =0;
  9518  003956  9EF2               	bcf	intcon,7,c	;volatile
  9519                           
  9520                           ; BSR set to: 0
  9521                           ;EEPROM.c: 103: EEPROM_UNLOCK();
  9522  003958  EC34  F01E         	call	_EEPROM_UNLOCK	;wreg free
  9523                           
  9524                           ;EEPROM.c: 104: EECON1bits.WR =1;
  9525  00395C  82A6               	bsf	4006,1,c	;volatile
  9526                           
  9527                           ;EEPROM.c: 105: while(EECON1bits.WR);
  9528  00395E  D000               	goto	l410
  9529  003960                     l410:
  9530  003960  B2A6               	btfsc	4006,1,c	;volatile
  9531  003962  D7FE               	goto	l410
  9532                           
  9533                           ;EEPROM.c: 106: EECON1bits.WREN =0;
  9534  003964  94A6               	bcf	4006,2,c	;volatile
  9535                           
  9536                           ;EEPROM.c: 107: if(GIEstatus)
  9537  003966  0100               	movlb	0	; () banked
  9538  003968  518F               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
  9539  00396A  0100               	movlb	0	; () banked
  9540  00396C  B4D8               	btfsc	status,2,c
  9541  00396E  0012               	return	
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;EEPROM.c: 108: {
  9545                           ;EEPROM.c: 109: INTCONbits.GIE =1;
  9546  003970  8EF2               	bsf	intcon,7,c	;volatile
  9547  003972  0012               	return	
  9548                           
  9549                           ; BSR set to: 0
  9550                           
  9551                           ; BSR set to: 0
  9552  003974  0012               	return		;funcret
  9553  003976                     __end_of_WriteEEPROM_1Byte:
  9554                           	opt stack 0
  9555                           tblptru	equ	0xFF8
  9556                           tblptrh	equ	0xFF7
  9557                           tblptrl	equ	0xFF6
  9558                           tablat	equ	0xFF5
  9559                           prodh	equ	0xFF4
  9560                           prodl	equ	0xFF3
  9561                           intcon	equ	0xFF2
  9562                           intcon2	equ	0xFF1
  9563                           indf0	equ	0xFEF
  9564                           postinc0	equ	0xFEE
  9565                           plusw0	equ	0xFEB
  9566                           fsr0h	equ	0xFEA
  9567                           fsr0l	equ	0xFE9
  9568                           wreg	equ	0xFE8
  9569                           postdec1	equ	0xFE5
  9570                           fsr1h	equ	0xFE2
  9571                           fsr1l	equ	0xFE1
  9572                           indf2	equ	0xFDF
  9573                           postinc2	equ	0xFDE
  9574                           postdec2	equ	0xFDD
  9575                           plusw2	equ	0xFDB
  9576                           fsr2h	equ	0xFDA
  9577                           fsr2l	equ	0xFD9
  9578                           status	equ	0xFD8
  9579                           
  9580 ;; *************** function _EEPROM_UNLOCK *****************
  9581 ;; Defined at:
  9582 ;;		line 78 in file "EEPROM.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;		None
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;		None
  9587 ;; Return value:  Size  Location     Type
  9588 ;;		None               void
  9589 ;; Registers used:
  9590 ;;		wreg, status,2
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9600 ;;Total ram usage:        0 bytes
  9601 ;; Hardware stack levels used:    1
  9602 ;; Hardware stack levels required when called:    9
  9603 ;; This function calls:
  9604 ;;		Nothing
  9605 ;; This function is called by:
  9606 ;;		_WriteEEPROM_1Byte
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610                           	psect	text50
  9611  003C68                     __ptext50:
  9612                           	opt stack 0
  9613  003C68                     _EEPROM_UNLOCK:
  9614                           	opt stack 14
  9615                           
  9616                           ;EEPROM.c: 80: EECON2 = 0x55;
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;incstack = 0
  9620  003C68  0E55               	movlw	85
  9621  003C6A  6EA7               	movwf	4007,c	;volatile
  9622                           
  9623                           ;EEPROM.c: 81: EECON2 = 0xAA;
  9624  003C6C  0EAA               	movlw	170
  9625  003C6E  6EA7               	movwf	4007,c	;volatile
  9626                           
  9627                           ;EEPROM.c: 82: EECON1bits.WR =1;
  9628  003C70  82A6               	bsf	4006,1,c	;volatile
  9629                           
  9630                           ;EEPROM.c: 83: while(EECON1bits.WR);
  9631  003C72  D000               	goto	l404
  9632  003C74                     l404:
  9633  003C74  B2A6               	btfsc	4006,1,c	;volatile
  9634  003C76  D7FE               	goto	l404
  9635                           
  9636                           ;EEPROM.c: 84: __nop();
  9637  003C78  F000               	nop	
  9638                           
  9639                           ;EEPROM.c: 85: __nop();
  9640  003C7A  F000               	nop	
  9641  003C7C  0012               	return		;funcret
  9642  003C7E                     __end_of_EEPROM_UNLOCK:
  9643                           	opt stack 0
  9644                           tblptru	equ	0xFF8
  9645                           tblptrh	equ	0xFF7
  9646                           tblptrl	equ	0xFF6
  9647                           tablat	equ	0xFF5
  9648                           prodh	equ	0xFF4
  9649                           prodl	equ	0xFF3
  9650                           intcon	equ	0xFF2
  9651                           intcon2	equ	0xFF1
  9652                           indf0	equ	0xFEF
  9653                           postinc0	equ	0xFEE
  9654                           plusw0	equ	0xFEB
  9655                           fsr0h	equ	0xFEA
  9656                           fsr0l	equ	0xFE9
  9657                           wreg	equ	0xFE8
  9658                           postdec1	equ	0xFE5
  9659                           fsr1h	equ	0xFE2
  9660                           fsr1l	equ	0xFE1
  9661                           indf2	equ	0xFDF
  9662                           postinc2	equ	0xFDE
  9663                           postdec2	equ	0xFDD
  9664                           plusw2	equ	0xFDB
  9665                           fsr2h	equ	0xFDA
  9666                           fsr2l	equ	0xFD9
  9667                           status	equ	0xFD8
  9668                           
  9669 ;; *************** function _GetMemoryChar *****************
  9670 ;; Defined at:
  9671 ;;		line 290 in file "EEPROM.c"
  9672 ;; Parameters:    Size  Location     Type
  9673 ;;  AddressFirst    1    wreg     unsigned char 
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;  AddressFirst    1   51[BANK0 ] unsigned char 
  9676 ;;  H               1   52[BANK0 ] unsigned char 
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  4   47[BANK0 ] unsigned long 
  9679 ;; Registers used:
  9680 ;;		wreg, status,2, status,0, cstack
  9681 ;; Tracked objects:
  9682 ;;		On entry : 0/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9686 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9689 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9690 ;;Total ram usage:        6 bytes
  9691 ;; Hardware stack levels used:    1
  9692 ;; Hardware stack levels required when called:   10
  9693 ;; This function calls:
  9694 ;;		_ReadEEPROM_1Byte
  9695 ;; This function is called by:
  9696 ;;		_GetEEPROM
  9697 ;;		_SetMemoryChar
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701                           	psect	text51
  9702  003B88                     __ptext51:
  9703                           	opt stack 0
  9704  003B88                     _GetMemoryChar:
  9705                           	opt stack 17
  9706                           
  9707                           ;incstack = 0
  9708                           ;GetMemoryChar@AddressFirst stored from wreg
  9709  003B88  0100               	movlb	0	; () banked
  9710  003B8A  6F93               	movwf	GetMemoryChar@AddressFirst& (0+255),b
  9711                           
  9712                           ; BSR set to: 0
  9713                           ;EEPROM.c: 292: unsigned char H;
  9714                           ;EEPROM.c: 294: H = ReadEEPROM_1Byte(AddressFirst);
  9715  003B8C  C093  F08C         	movff	GetMemoryChar@AddressFirst,ReadEEPROM_1Byte@address
  9716  003B90  0100               	movlb	0	; () banked
  9717  003B92  6B8D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  9718  003B94  ECBB  F01C         	call	_ReadEEPROM_1Byte	;wreg free
  9719  003B98  0100               	movlb	0	; () banked
  9720  003B9A  518C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  9721  003B9C  0100               	movlb	0	; () banked
  9722  003B9E  6F94               	movwf	GetMemoryChar@H& (0+255),b
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;EEPROM.c: 296: return H;
  9726  003BA0  0100               	movlb	0	; () banked
  9727  003BA2  5194               	movf	GetMemoryChar@H& (0+255),w,b
  9728  003BA4  0100               	movlb	0	; () banked
  9729  003BA6  6F8F               	movwf	?_GetMemoryChar& (0+255),b
  9730  003BA8  6B90               	clrf	(?_GetMemoryChar+1)& (0+255),b
  9731  003BAA  6B91               	clrf	(?_GetMemoryChar+2)& (0+255),b
  9732  003BAC  6B92               	clrf	(?_GetMemoryChar+3)& (0+255),b
  9733  003BAE  0012               	return	
  9734                           
  9735                           ; BSR set to: 0
  9736                           
  9737                           ; BSR set to: 0
  9738  003BB0  0012               	return		;funcret
  9739  003BB2                     __end_of_GetMemoryChar:
  9740                           	opt stack 0
  9741                           tblptru	equ	0xFF8
  9742                           tblptrh	equ	0xFF7
  9743                           tblptrl	equ	0xFF6
  9744                           tablat	equ	0xFF5
  9745                           prodh	equ	0xFF4
  9746                           prodl	equ	0xFF3
  9747                           intcon	equ	0xFF2
  9748                           intcon2	equ	0xFF1
  9749                           indf0	equ	0xFEF
  9750                           postinc0	equ	0xFEE
  9751                           plusw0	equ	0xFEB
  9752                           fsr0h	equ	0xFEA
  9753                           fsr0l	equ	0xFE9
  9754                           wreg	equ	0xFE8
  9755                           postdec1	equ	0xFE5
  9756                           fsr1h	equ	0xFE2
  9757                           fsr1l	equ	0xFE1
  9758                           indf2	equ	0xFDF
  9759                           postinc2	equ	0xFDE
  9760                           postdec2	equ	0xFDD
  9761                           plusw2	equ	0xFDB
  9762                           fsr2h	equ	0xFDA
  9763                           fsr2l	equ	0xFD9
  9764                           status	equ	0xFD8
  9765                           
  9766 ;; *************** function _ReadEEPROM_1Byte *****************
  9767 ;; Defined at:
  9768 ;;		line 53 in file "EEPROM.c"
  9769 ;; Parameters:    Size  Location     Type
  9770 ;;  address         2   44[BANK0 ] unsigned int 
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;  GIEstatus       1   46[BANK0 ] unsigned char 
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  2   44[BANK0 ] unsigned int 
  9775 ;; Registers used:
  9776 ;;		wreg, status,2, status,0
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/0
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9782 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9783 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9785 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9786 ;;Total ram usage:        3 bytes
  9787 ;; Hardware stack levels used:    1
  9788 ;; Hardware stack levels required when called:    9
  9789 ;; This function calls:
  9790 ;;		Nothing
  9791 ;; This function is called by:
  9792 ;;		_GetMemoryLong
  9793 ;;		_GetMemoryChar
  9794 ;;		_GetMemoryInt
  9795 ;; This function uses a non-reentrant model
  9796 ;;
  9797                           
  9798                           	psect	text52
  9799  003976                     __ptext52:
  9800                           	opt stack 0
  9801  003976                     _ReadEEPROM_1Byte:
  9802                           	opt stack 17
  9803                           
  9804                           ;EEPROM.c: 55: unsigned char GIEstatus = INTCONbits.GIE;
  9805                           
  9806                           ; BSR set to: 0
  9807                           ;incstack = 0
  9808  003976  0E00               	movlw	0
  9809  003978  BEF2               	btfsc	intcon,7,c	;volatile
  9810  00397A  0E01               	movlw	1
  9811  00397C  0100               	movlb	0	; () banked
  9812  00397E  6F8E               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;EEPROM.c: 56: EECON1bits.EEPGD = 0;
  9816  003980  9EA6               	bcf	4006,7,c	;volatile
  9817                           
  9818                           ; BSR set to: 0
  9819                           ;EEPROM.c: 57: EECON1bits.CFGS = 0;
  9820  003982  9CA6               	bcf	4006,6,c	;volatile
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;EEPROM.c: 58: EEADRH = (unsigned char)((address & 0x300) >> 8);
  9824  003984  0100               	movlb	0	; () banked
  9825  003986  518D               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
  9826  003988  0B03               	andlw	3
  9827  00398A  6EAA               	movwf	4010,c	;volatile
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;EEPROM.c: 59: EEADR = (unsigned char)(address & 0xFF);
  9831  00398C  C08C  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
  9832                           
  9833                           ; BSR set to: 0
  9834                           ;EEPROM.c: 60: INTCONbits.GIE =0;
  9835  003990  9EF2               	bcf	intcon,7,c	;volatile
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;EEPROM.c: 61: EECON1bits.RD = 1;
  9839  003992  80A6               	bsf	4006,0,c	;volatile
  9840                           
  9841                           ;EEPROM.c: 62: while(EECON1bits.RD);
  9842  003994  D000               	goto	l397
  9843  003996                     l397:
  9844  003996  B0A6               	btfsc	4006,0,c	;volatile
  9845  003998  D7FE               	goto	l397
  9846                           
  9847                           ;EEPROM.c: 63: __nop();
  9848  00399A  F000               	nop	
  9849                           
  9850                           ;EEPROM.c: 64: __nop();
  9851  00399C  F000               	nop	
  9852                           
  9853                           ;EEPROM.c: 65: if(GIEstatus)
  9854  00399E  0100               	movlb	0	; () banked
  9855  0039A0  518E               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
  9856  0039A2  0100               	movlb	0	; () banked
  9857  0039A4  A4D8               	btfss	status,2,c
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;EEPROM.c: 66: {
  9861                           ;EEPROM.c: 67: INTCONbits.GIE =1;
  9862  0039A6  8EF2               	bsf	intcon,7,c	;volatile
  9863                           
  9864                           ; BSR set to: 0
  9865                           ;EEPROM.c: 68: }
  9866                           ;EEPROM.c: 69: return (EEDATA);
  9867  0039A8  CFA8 F08C          	movff	4008,?_ReadEEPROM_1Byte	;volatile
  9868  0039AC  0100               	movlb	0	; () banked
  9869  0039AE  6B8D               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
  9870                           
  9871                           ; BSR set to: 0
  9872  0039B0  0012               	return		;funcret
  9873  0039B2                     __end_of_ReadEEPROM_1Byte:
  9874                           	opt stack 0
  9875                           tblptru	equ	0xFF8
  9876                           tblptrh	equ	0xFF7
  9877                           tblptrl	equ	0xFF6
  9878                           tablat	equ	0xFF5
  9879                           prodh	equ	0xFF4
  9880                           prodl	equ	0xFF3
  9881                           intcon	equ	0xFF2
  9882                           intcon2	equ	0xFF1
  9883                           indf0	equ	0xFEF
  9884                           postinc0	equ	0xFEE
  9885                           plusw0	equ	0xFEB
  9886                           fsr0h	equ	0xFEA
  9887                           fsr0l	equ	0xFE9
  9888                           wreg	equ	0xFE8
  9889                           postdec1	equ	0xFE5
  9890                           fsr1h	equ	0xFE2
  9891                           fsr1l	equ	0xFE1
  9892                           indf2	equ	0xFDF
  9893                           postinc2	equ	0xFDE
  9894                           postdec2	equ	0xFDD
  9895                           plusw2	equ	0xFDB
  9896                           fsr2h	equ	0xFDA
  9897                           fsr2l	equ	0xFD9
  9898                           status	equ	0xFD8
  9899                           
  9900 ;; *************** function _InitADC *****************
  9901 ;; Defined at:
  9902 ;;		line 133 in file "ADC.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;		None
  9905 ;; Auto vars:     Size  Location     Type
  9906 ;;		None
  9907 ;; Return value:  Size  Location     Type
  9908 ;;		None               void
  9909 ;; Registers used:
  9910 ;;		wreg, status,2, cstack
  9911 ;; Tracked objects:
  9912 ;;		On entry : 0/0
  9913 ;;		On exit  : 0/0
  9914 ;;		Unchanged: 0/0
  9915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9920 ;;Total ram usage:        0 bytes
  9921 ;; Hardware stack levels used:    1
  9922 ;; Hardware stack levels required when called:   10
  9923 ;; This function calls:
  9924 ;;		_ResetADC
  9925 ;; This function is called by:
  9926 ;;		_Init_System
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930                           	psect	text53
  9931  003C7E                     __ptext53:
  9932                           	opt stack 0
  9933  003C7E                     _InitADC:
  9934                           	opt stack 19
  9935                           
  9936                           ;ADC.c: 135: ResetADC();
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;incstack = 0
  9940  003C7E  EC95  F01E         	call	_ResetADC	;wreg free
  9941                           
  9942                           ;ADC.c: 136: ADCON2bits.ADFM = 1;
  9943  003C82  8EC0               	bsf	4032,7,c	;volatile
  9944                           
  9945                           ;ADC.c: 137: ADCON2bits.ACQT = 0x7;
  9946  003C84  86C0               	bsf	4032,3,c	;volatile
  9947  003C86  88C0               	bsf	4032,4,c	;volatile
  9948  003C88  8AC0               	bsf	4032,5,c	;volatile
  9949                           
  9950                           ;ADC.c: 138: ADCON2bits.ADCS = 0x4;
  9951  003C8A  50C0               	movf	4032,w,c	;volatile
  9952  003C8C  0BF8               	andlw	-8
  9953  003C8E  0904               	iorlw	4
  9954  003C90  6EC0               	movwf	4032,c	;volatile
  9955  003C92  0012               	return		;funcret
  9956  003C94                     __end_of_InitADC:
  9957                           	opt stack 0
  9958                           tblptru	equ	0xFF8
  9959                           tblptrh	equ	0xFF7
  9960                           tblptrl	equ	0xFF6
  9961                           tablat	equ	0xFF5
  9962                           prodh	equ	0xFF4
  9963                           prodl	equ	0xFF3
  9964                           intcon	equ	0xFF2
  9965                           intcon2	equ	0xFF1
  9966                           indf0	equ	0xFEF
  9967                           postinc0	equ	0xFEE
  9968                           plusw0	equ	0xFEB
  9969                           fsr0h	equ	0xFEA
  9970                           fsr0l	equ	0xFE9
  9971                           wreg	equ	0xFE8
  9972                           postdec1	equ	0xFE5
  9973                           fsr1h	equ	0xFE2
  9974                           fsr1l	equ	0xFE1
  9975                           indf2	equ	0xFDF
  9976                           postinc2	equ	0xFDE
  9977                           postdec2	equ	0xFDD
  9978                           plusw2	equ	0xFDB
  9979                           fsr2h	equ	0xFDA
  9980                           fsr2l	equ	0xFD9
  9981                           status	equ	0xFD8
  9982                           
  9983 ;; *************** function _ResetADC *****************
  9984 ;; Defined at:
  9985 ;;		line 121 in file "ADC.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;		None
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;		None
  9990 ;; Return value:  Size  Location     Type
  9991 ;;		None               void
  9992 ;; Registers used:
  9993 ;;		wreg, status,2
  9994 ;; Tracked objects:
  9995 ;;		On entry : 0/0
  9996 ;;		On exit  : 0/0
  9997 ;;		Unchanged: 0/0
  9998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10003 ;;Total ram usage:        0 bytes
 10004 ;; Hardware stack levels used:    1
 10005 ;; Hardware stack levels required when called:    9
 10006 ;; This function calls:
 10007 ;;		Nothing
 10008 ;; This function is called by:
 10009 ;;		_InitADC
 10010 ;; This function uses a non-reentrant model
 10011 ;;
 10012                           
 10013                           	psect	text54
 10014  003D2A                     __ptext54:
 10015                           	opt stack 0
 10016  003D2A                     _ResetADC:
 10017                           	opt stack 19
 10018                           
 10019                           ;ADC.c: 123: ADCON0 =0;
 10020                           
 10021                           ;incstack = 0
 10022  003D2A  0E00               	movlw	0
 10023  003D2C  6EC2               	movwf	4034,c	;volatile
 10024                           
 10025                           ;ADC.c: 124: ADCON1 =0;
 10026  003D2E  0E00               	movlw	0
 10027  003D30  6EC1               	movwf	4033,c	;volatile
 10028                           
 10029                           ;ADC.c: 125: ADCON2 =0;
 10030  003D32  0E00               	movlw	0
 10031  003D34  6EC0               	movwf	4032,c	;volatile
 10032  003D36  0012               	return		;funcret
 10033  003D38                     __end_of_ResetADC:
 10034                           	opt stack 0
 10035                           tblptru	equ	0xFF8
 10036                           tblptrh	equ	0xFF7
 10037                           tblptrl	equ	0xFF6
 10038                           tablat	equ	0xFF5
 10039                           prodh	equ	0xFF4
 10040                           prodl	equ	0xFF3
 10041                           intcon	equ	0xFF2
 10042                           intcon2	equ	0xFF1
 10043                           indf0	equ	0xFEF
 10044                           postinc0	equ	0xFEE
 10045                           plusw0	equ	0xFEB
 10046                           fsr0h	equ	0xFEA
 10047                           fsr0l	equ	0xFE9
 10048                           wreg	equ	0xFE8
 10049                           postdec1	equ	0xFE5
 10050                           fsr1h	equ	0xFE2
 10051                           fsr1l	equ	0xFE1
 10052                           indf2	equ	0xFDF
 10053                           postinc2	equ	0xFDE
 10054                           postdec2	equ	0xFDD
 10055                           plusw2	equ	0xFDB
 10056                           fsr2h	equ	0xFDA
 10057                           fsr2l	equ	0xFD9
 10058                           status	equ	0xFD8
 10059                           
 10060 ;; *************** function _InitApp *****************
 10061 ;; Defined at:
 10062 ;;		line 60 in file "user.c"
 10063 ;; Parameters:    Size  Location     Type
 10064 ;;		None
 10065 ;; Auto vars:     Size  Location     Type
 10066 ;;		None
 10067 ;; Return value:  Size  Location     Type
 10068 ;;		None               void
 10069 ;; Registers used:
 10070 ;;		wreg, status,2
 10071 ;; Tracked objects:
 10072 ;;		On entry : 0/0
 10073 ;;		On exit  : 0/0
 10074 ;;		Unchanged: 0/0
 10075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10080 ;;Total ram usage:        0 bytes
 10081 ;; Hardware stack levels used:    1
 10082 ;; Hardware stack levels required when called:    9
 10083 ;; This function calls:
 10084 ;;		Nothing
 10085 ;; This function is called by:
 10086 ;;		_main
 10087 ;; This function uses a non-reentrant model
 10088 ;;
 10089                           
 10090                           	psect	text55
 10091  003A26                     __ptext55:
 10092                           	opt stack 0
 10093  003A26                     _InitApp:
 10094                           	opt stack 21
 10095                           
 10096                           ;user.c: 62: TRISAbits.TRISA0 = 1;
 10097                           
 10098                           ;incstack = 0
 10099  003A26  8092               	bsf	3986,0,c	;volatile
 10100                           
 10101                           ;user.c: 63: TRISAbits.TRISA1 = 1;
 10102  003A28  8292               	bsf	3986,1,c	;volatile
 10103                           
 10104                           ;user.c: 64: TRISAbits.TRISA2 = 0;
 10105  003A2A  9492               	bcf	3986,2,c	;volatile
 10106                           
 10107                           ;user.c: 65: TRISAbits.TRISA3 = 0;
 10108  003A2C  9692               	bcf	3986,3,c	;volatile
 10109                           
 10110                           ;user.c: 66: TRISAbits.TRISA4 = 0;
 10111  003A2E  9892               	bcf	3986,4,c	;volatile
 10112                           
 10113                           ;user.c: 67: TRISAbits.TRISA5 = 0;
 10114  003A30  9A92               	bcf	3986,5,c	;volatile
 10115                           
 10116                           ;user.c: 68: TRISCbits.TRISC0 = 1;
 10117  003A32  8094               	bsf	3988,0,c	;volatile
 10118                           
 10119                           ;user.c: 69: TRISCbits.TRISC1 = 0;
 10120  003A34  9294               	bcf	3988,1,c	;volatile
 10121                           
 10122                           ;user.c: 70: TRISCbits.TRISC2 = 0;
 10123  003A36  9494               	bcf	3988,2,c	;volatile
 10124                           
 10125                           ;user.c: 71: TRISCbits.TRISC3 = 0;
 10126  003A38  9694               	bcf	3988,3,c	;volatile
 10127                           
 10128                           ;user.c: 72: TRISCbits.TRISC4 = 0;
 10129  003A3A  9894               	bcf	3988,4,c	;volatile
 10130                           
 10131                           ;user.c: 73: TRISCbits.TRISC5 = 0;
 10132  003A3C  9A94               	bcf	3988,5,c	;volatile
 10133                           
 10134                           ;user.c: 74: TRISCbits.TRISC6 = 0;
 10135  003A3E  9C94               	bcf	3988,6,c	;volatile
 10136                           
 10137                           ;user.c: 75: TRISCbits.TRISC7 = 1;
 10138  003A40  8E94               	bsf	3988,7,c	;volatile
 10139                           
 10140                           ;user.c: 76: TRISBbits.TRISB0 = 1;
 10141  003A42  8093               	bsf	3987,0,c	;volatile
 10142                           
 10143                           ;user.c: 77: TRISBbits.TRISB1 = 1;
 10144  003A44  8293               	bsf	3987,1,c	;volatile
 10145                           
 10146                           ;user.c: 78: TRISBbits.TRISB2 = 1;
 10147  003A46  8493               	bsf	3987,2,c	;volatile
 10148                           
 10149                           ;user.c: 79: TRISBbits.TRISB3 = 1;
 10150  003A48  8693               	bsf	3987,3,c	;volatile
 10151                           
 10152                           ;user.c: 80: TRISBbits.TRISB4 = 1;
 10153  003A4A  8893               	bsf	3987,4,c	;volatile
 10154                           
 10155                           ;user.c: 81: TRISBbits.TRISB5 = 1;
 10156  003A4C  8A93               	bsf	3987,5,c	;volatile
 10157                           
 10158                           ;user.c: 84: ANSEL = 0x01;
 10159  003A4E  0E01               	movlw	1
 10160  003A50  6E7E               	movwf	3966,c	;volatile
 10161                           
 10162                           ;user.c: 85: ANSELH = 0x00;
 10163  003A52  0E00               	movlw	0
 10164  003A54  6E7F               	movwf	3967,c	;volatile
 10165                           
 10166                           ;user.c: 88: INTCON2bits.RBPU = 0;
 10167  003A56  9EF1               	bcf	intcon2,7,c	;volatile
 10168                           
 10169                           ;user.c: 90: WPUB = 0x0F;
 10170  003A58  0E0F               	movlw	15
 10171  003A5A  6E7C               	movwf	3964,c	;volatile
 10172  003A5C  0012               	return		;funcret
 10173  003A5E                     __end_of_InitApp:
 10174                           	opt stack 0
 10175                           tblptru	equ	0xFF8
 10176                           tblptrh	equ	0xFF7
 10177                           tblptrl	equ	0xFF6
 10178                           tablat	equ	0xFF5
 10179                           prodh	equ	0xFF4
 10180                           prodl	equ	0xFF3
 10181                           intcon	equ	0xFF2
 10182                           intcon2	equ	0xFF1
 10183                           indf0	equ	0xFEF
 10184                           postinc0	equ	0xFEE
 10185                           plusw0	equ	0xFEB
 10186                           fsr0h	equ	0xFEA
 10187                           fsr0l	equ	0xFE9
 10188                           wreg	equ	0xFE8
 10189                           postdec1	equ	0xFE5
 10190                           fsr1h	equ	0xFE2
 10191                           fsr1l	equ	0xFE1
 10192                           indf2	equ	0xFDF
 10193                           postinc2	equ	0xFDE
 10194                           postdec2	equ	0xFDD
 10195                           plusw2	equ	0xFDB
 10196                           fsr2h	equ	0xFDA
 10197                           fsr2l	equ	0xFD9
 10198                           status	equ	0xFD8
 10199                           
 10200 ;; *************** function _ConfigureOscillator *****************
 10201 ;; Defined at:
 10202 ;;		line 41 in file "system.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;		None
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;		None
 10207 ;; Return value:  Size  Location     Type
 10208 ;;		None               void
 10209 ;; Registers used:
 10210 ;;		None
 10211 ;; Tracked objects:
 10212 ;;		On entry : 0/0
 10213 ;;		On exit  : 0/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;Total ram usage:        0 bytes
 10221 ;; Hardware stack levels used:    1
 10222 ;; Hardware stack levels required when called:    9
 10223 ;; This function calls:
 10224 ;;		Nothing
 10225 ;; This function is called by:
 10226 ;;		_main
 10227 ;; This function uses a non-reentrant model
 10228 ;;
 10229                           
 10230                           	psect	text56
 10231  003DB6                     __ptext56:
 10232                           	opt stack 0
 10233  003DB6                     _ConfigureOscillator:
 10234                           	opt stack 21
 10235                           
 10236                           ;incstack = 0
 10237  003DB6  0012               	return		;funcret
 10238  003DB8                     __end_of_ConfigureOscillator:
 10239                           	opt stack 0
 10240                           tblptru	equ	0xFF8
 10241                           tblptrh	equ	0xFF7
 10242                           tblptrl	equ	0xFF6
 10243                           tablat	equ	0xFF5
 10244                           prodh	equ	0xFF4
 10245                           prodl	equ	0xFF3
 10246                           intcon	equ	0xFF2
 10247                           intcon2	equ	0xFF1
 10248                           indf0	equ	0xFEF
 10249                           postinc0	equ	0xFEE
 10250                           plusw0	equ	0xFEB
 10251                           fsr0h	equ	0xFEA
 10252                           fsr0l	equ	0xFE9
 10253                           wreg	equ	0xFE8
 10254                           postdec1	equ	0xFE5
 10255                           fsr1h	equ	0xFE2
 10256                           fsr1l	equ	0xFE1
 10257                           indf2	equ	0xFDF
 10258                           postinc2	equ	0xFDE
 10259                           postdec2	equ	0xFDD
 10260                           plusw2	equ	0xFDB
 10261                           fsr2h	equ	0xFDA
 10262                           fsr2l	equ	0xFD9
 10263                           status	equ	0xFD8
 10264                           
 10265 ;; *************** function _low_isr *****************
 10266 ;; Defined at:
 10267 ;;		line 327 in file "interrupts.c"
 10268 ;; Parameters:    Size  Location     Type
 10269 ;;		None
 10270 ;; Auto vars:     Size  Location     Type
 10271 ;;  data            1   18[COMRAM] unsigned char 
 10272 ;; Return value:  Size  Location     Type
 10273 ;;		None               void
 10274 ;; Registers used:
 10275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10276 ;; Tracked objects:
 10277 ;;		On entry : 0/0
 10278 ;;		On exit  : 0/0
 10279 ;;		Unchanged: 0/0
 10280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10282 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10283 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10284 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10285 ;;Total ram usage:       18 bytes
 10286 ;; Hardware stack levels used:    1
 10287 ;; Hardware stack levels required when called:    8
 10288 ;; This function calls:
 10289 ;;		_IsCharacter
 10290 ;;		_ReadUSART
 10291 ;;		i1_BlueConnected
 10292 ;; This function is called by:
 10293 ;;		Interrupt level 1
 10294 ;; This function uses a non-reentrant model
 10295 ;;
 10296                           
 10297                           	psect	intcodelo
 10298  000018                     __pintcodelo:
 10299                           	opt stack 0
 10300  000018                     _low_isr:
 10301                           	opt stack 14
 10302                           
 10303                           ;incstack = 0
 10304  000018  CFD8 F002          	movff	status,??_low_isr
 10305  00001C  CFE8 F003          	movff	wreg,??_low_isr+1
 10306  000020  CFE0 F004          	movff	bsr,??_low_isr+2
 10307  000024  CFFA F005          	movff	pclath,??_low_isr+3
 10308  000028  CFFB F006          	movff	pclatu,??_low_isr+4
 10309  00002C  CFE9 F007          	movff	fsr0l,??_low_isr+5
 10310  000030  CFEA F008          	movff	fsr0h,??_low_isr+6
 10311  000034  CFE1 F009          	movff	fsr1l,??_low_isr+7
 10312  000038  CFE2 F00A          	movff	fsr1h,??_low_isr+8
 10313  00003C  CFD9 F00B          	movff	fsr2l,??_low_isr+9
 10314  000040  CFDA F00C          	movff	fsr2h,??_low_isr+10
 10315  000044  CFF3 F00D          	movff	prodl,??_low_isr+11
 10316  000048  CFF4 F00E          	movff	prodh,??_low_isr+12
 10317  00004C  CFF6 F00F          	movff	tblptrl,??_low_isr+13
 10318  000050  CFF7 F010          	movff	tblptrh,??_low_isr+14
 10319  000054  CFF8 F011          	movff	tblptru,??_low_isr+15
 10320  000058  CFF5 F012          	movff	tablat,??_low_isr+16
 10321                           
 10322                           ;interrupts.c: 336: char data = 0;
 10323  00005C  0E00               	movlw	0
 10324  00005E  6E13               	movwf	low_isr@data,c
 10325                           
 10326                           ;interrupts.c: 338: INTCONbits.GIE = 0;
 10327  000060  9EF2               	bcf	intcon,7,c	;volatile
 10328                           
 10329                           ;interrupts.c: 340: if(PIR1bits.RCIF)
 10330  000062  AA9E               	btfss	3998,5,c	;volatile
 10331  000064  D03F               	goto	i1l604
 10332                           
 10333                           ;interrupts.c: 341: {
 10334                           ;interrupts.c: 343: data = ReadUSART();
 10335  000066  EC4A  F01E         	call	_ReadUSART	;wreg free
 10336  00006A  6E13               	movwf	low_isr@data,c
 10337                           
 10338                           ;interrupts.c: 345: if(!BlueConnected())
 10339  00006C  EC9C  F01E         	call	i1_BlueConnected	;wreg free
 10340  000070  0900               	iorlw	0
 10341  000072  A4D8               	btfss	status,2,c
 10342  000074  D00F               	goto	i1l5264
 10343                           
 10344                           ;interrupts.c: 346: {
 10345                           ;interrupts.c: 347: if(CommandStringPos < 255)
 10346  000076  2847               	incf	_CommandStringPos,w,c
 10347  000078  B4D8               	btfsc	status,2,c
 10348  00007A  D032               	goto	i1l5282
 10349                           
 10350                           ;interrupts.c: 348: {
 10351                           ;interrupts.c: 349: CommandString[CommandStringPos] = data;
 10352  00007C  5047               	movf	_CommandStringPos,w,c
 10353  00007E  0D01               	mullw	1
 10354  000080  0E00               	movlw	low _CommandString
 10355  000082  24F3               	addwf	prodl,w,c
 10356  000084  6ED9               	movwf	fsr2l,c
 10357  000086  0E02               	movlw	high _CommandString
 10358  000088  20F4               	addwfc	prodh,w,c
 10359  00008A  6EDA               	movwf	fsr2h,c
 10360  00008C  C013  FFDF         	movff	low_isr@data,indf2
 10361                           
 10362                           ;interrupts.c: 350: CommandStringPos++;
 10363  000090  2A47               	incf	_CommandStringPos,f,c
 10364                           
 10365                           ;interrupts.c: 351: }
 10366                           ;interrupts.c: 352: }
 10367  000092  D026               	goto	i1l5282
 10368  000094                     i1l5264:
 10369                           
 10370                           ;interrupts.c: 353: else
 10371                           ;interrupts.c: 354: {
 10372                           ;interrupts.c: 355: if(IsCharacter(data))
 10373  000094  5013               	movf	low_isr@data,w,c
 10374  000096  EC28  F01E         	call	_IsCharacter
 10375  00009A  0900               	iorlw	0
 10376  00009C  B4D8               	btfsc	status,2,c
 10377  00009E  D020               	goto	i1l5282
 10378                           
 10379                           ;interrupts.c: 356: {
 10380                           ;interrupts.c: 357: if(data != '\r' && data != '\n')
 10381  0000A0  0E0D               	movlw	13
 10382  0000A2  1813               	xorwf	low_isr@data,w,c
 10383  0000A4  B4D8               	btfsc	status,2,c
 10384  0000A6  D016               	goto	i1l5278
 10385  0000A8  0E0A               	movlw	10
 10386  0000AA  1813               	xorwf	low_isr@data,w,c
 10387  0000AC  B4D8               	btfsc	status,2,c
 10388  0000AE  D012               	goto	i1l5278
 10389                           
 10390                           ;interrupts.c: 358: {
 10391                           ;interrupts.c: 359: if(ReceivedStringPos < 255 && NewReceivedString == 0)
 10392  0000B0  2849               	incf	_ReceivedStringPos,w,c
 10393  0000B2  B4D8               	btfsc	status,2,c
 10394  0000B4  D015               	goto	i1l5282
 10395  0000B6  5048               	movf	_NewReceivedString,w,c
 10396  0000B8  A4D8               	btfss	status,2,c
 10397  0000BA  D012               	goto	i1l5282
 10398                           
 10399                           ;interrupts.c: 360: {
 10400                           ;interrupts.c: 361: ReceivedString[ReceivedStringPos] = data;
 10401  0000BC  5049               	movf	_ReceivedStringPos,w,c
 10402  0000BE  0D01               	mullw	1
 10403  0000C0  0E00               	movlw	low _ReceivedString
 10404  0000C2  24F3               	addwf	prodl,w,c
 10405  0000C4  6ED9               	movwf	fsr2l,c
 10406  0000C6  0E03               	movlw	high _ReceivedString
 10407  0000C8  20F4               	addwfc	prodh,w,c
 10408  0000CA  6EDA               	movwf	fsr2h,c
 10409  0000CC  C013  FFDF         	movff	low_isr@data,indf2
 10410                           
 10411                           ;interrupts.c: 362: ReceivedStringPos++;
 10412  0000D0  2A49               	incf	_ReceivedStringPos,f,c
 10413                           
 10414                           ;interrupts.c: 363: }
 10415                           ;interrupts.c: 364: }
 10416  0000D2  D006               	goto	i1l5282
 10417  0000D4                     i1l5278:
 10418                           
 10419                           ;interrupts.c: 365: else if(ReceivedStringPos > 0)
 10420  0000D4  5049               	movf	_ReceivedStringPos,w,c
 10421  0000D6  B4D8               	btfsc	status,2,c
 10422  0000D8  D003               	goto	i1l5282
 10423                           
 10424                           ;interrupts.c: 366: {
 10425                           ;interrupts.c: 367: NewReceivedString = 1;
 10426  0000DA  0E01               	movlw	1
 10427  0000DC  6E48               	movwf	_NewReceivedString,c
 10428  0000DE  D000               	goto	i1l5282
 10429  0000E0                     i1l5282:
 10430                           
 10431                           ;interrupts.c: 368: }
 10432                           ;interrupts.c: 369: }
 10433                           ;interrupts.c: 370: }
 10434                           ;interrupts.c: 371: PIR1bits.RCIF = 0;
 10435  0000E0  9A9E               	bcf	3998,5,c	;volatile
 10436                           
 10437                           ;interrupts.c: 372: }
 10438  0000E2  D00D               	goto	i1l5294
 10439  0000E4                     i1l604:
 10440                           
 10441                           ;interrupts.c: 373: else if(PIR1bits.TMR1IF)
 10442  0000E4  A09E               	btfss	3998,0,c	;volatile
 10443  0000E6  D00B               	goto	i1l5294
 10444                           
 10445                           ;interrupts.c: 374: {
 10446                           ;interrupts.c: 375: Timer1_Postscaler++;
 10447  0000E8  2A4A               	incf	_Timer1_Postscaler,f,c
 10448                           
 10449                           ;interrupts.c: 376: if(Timer1_Postscaler == 3)
 10450  0000EA  0E03               	movlw	3
 10451  0000EC  184A               	xorwf	_Timer1_Postscaler,w,c
 10452  0000EE  A4D8               	btfss	status,2,c
 10453  0000F0  D004               	goto	i1l5292
 10454                           
 10455                           ;interrupts.c: 377: {
 10456                           ;interrupts.c: 378: (LATC &= ~0x04);
 10457  0000F2  948B               	bcf	3979,2,c	;volatile
 10458                           
 10459                           ;interrupts.c: 379: (LATC &= ~0x02);
 10460  0000F4  928B               	bcf	3979,1,c	;volatile
 10461                           
 10462                           ;interrupts.c: 380: (T1CONbits.TMR1ON = 0);
 10463  0000F6  90CD               	bcf	4045,0,c	;volatile
 10464  0000F8  D000               	goto	i1l5292
 10465  0000FA                     i1l5292:
 10466                           
 10467                           ;interrupts.c: 381: }
 10468                           ;interrupts.c: 382: PIR1bits.TMR1IF = 0;
 10469  0000FA  909E               	bcf	3998,0,c	;volatile
 10470  0000FC  D000               	goto	i1l5294
 10471  0000FE                     i1l5294:
 10472                           
 10473                           ;interrupts.c: 383: }
 10474                           ;interrupts.c: 385: INTCONbits.GIE = 1;
 10475  0000FE  8EF2               	bsf	intcon,7,c	;volatile
 10476  000100  C012  FFF5         	movff	??_low_isr+16,tablat
 10477  000104  C011  FFF8         	movff	??_low_isr+15,tblptru
 10478  000108  C010  FFF7         	movff	??_low_isr+14,tblptrh
 10479  00010C  C00F  FFF6         	movff	??_low_isr+13,tblptrl
 10480  000110  C00E  FFF4         	movff	??_low_isr+12,prodh
 10481  000114  C00D  FFF3         	movff	??_low_isr+11,prodl
 10482  000118  C00C  FFDA         	movff	??_low_isr+10,fsr2h
 10483  00011C  C00B  FFD9         	movff	??_low_isr+9,fsr2l
 10484  000120  C00A  FFE2         	movff	??_low_isr+8,fsr1h
 10485  000124  C009  FFE1         	movff	??_low_isr+7,fsr1l
 10486  000128  C008  FFEA         	movff	??_low_isr+6,fsr0h
 10487  00012C  C007  FFE9         	movff	??_low_isr+5,fsr0l
 10488  000130  C006  FFFB         	movff	??_low_isr+4,pclatu
 10489  000134  C005  FFFA         	movff	??_low_isr+3,pclath
 10490  000138  C004  FFE0         	movff	??_low_isr+2,bsr
 10491  00013C  C003  FFE8         	movff	??_low_isr+1,wreg
 10492  000140  C002  FFD8         	movff	??_low_isr,status
 10493  000144  0010               	retfie	
 10494  000146                     __end_of_low_isr:
 10495                           	opt stack 0
 10496                           pclatu	equ	0xFFB
 10497                           pclath	equ	0xFFA
 10498                           tblptru	equ	0xFF8
 10499                           tblptrh	equ	0xFF7
 10500                           tblptrl	equ	0xFF6
 10501                           tablat	equ	0xFF5
 10502                           prodh	equ	0xFF4
 10503                           prodl	equ	0xFF3
 10504                           intcon	equ	0xFF2
 10505                           intcon2	equ	0xFF1
 10506                           indf0	equ	0xFEF
 10507                           postinc0	equ	0xFEE
 10508                           plusw0	equ	0xFEB
 10509                           fsr0h	equ	0xFEA
 10510                           fsr0l	equ	0xFE9
 10511                           wreg	equ	0xFE8
 10512                           postdec1	equ	0xFE5
 10513                           fsr1h	equ	0xFE2
 10514                           fsr1l	equ	0xFE1
 10515                           bsr	equ	0xFE0
 10516                           indf2	equ	0xFDF
 10517                           postinc2	equ	0xFDE
 10518                           postdec2	equ	0xFDD
 10519                           plusw2	equ	0xFDB
 10520                           fsr2h	equ	0xFDA
 10521                           fsr2l	equ	0xFD9
 10522                           status	equ	0xFD8
 10523                           
 10524 ;; *************** function i1_BlueConnected *****************
 10525 ;; Defined at:
 10526 ;;		line 81 in file "Bluetooth.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;		None
 10529 ;; Auto vars:     Size  Location     Type
 10530 ;;		None
 10531 ;; Return value:  Size  Location     Type
 10532 ;;                  1    wreg      unsigned char 
 10533 ;; Registers used:
 10534 ;;		wreg
 10535 ;; Tracked objects:
 10536 ;;		On entry : 0/0
 10537 ;;		On exit  : 0/0
 10538 ;;		Unchanged: 0/0
 10539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10544 ;;Total ram usage:        0 bytes
 10545 ;; Hardware stack levels used:    1
 10546 ;; Hardware stack levels required when called:    7
 10547 ;; This function calls:
 10548 ;;		Nothing
 10549 ;; This function is called by:
 10550 ;;		_low_isr
 10551 ;; This function uses a non-reentrant model
 10552 ;;
 10553                           
 10554                           	psect	text58
 10555  003D38                     __ptext58:
 10556                           	opt stack 0
 10557  003D38                     i1_BlueConnected:
 10558                           	opt stack 14
 10559                           
 10560                           ;Bluetooth.c: 84: if((PORTA & 0x02) == 0x02)
 10561                           
 10562                           ;incstack = 0
 10563  003D38  A280               	btfss	3968,1,c	;volatile
 10564  003D3A  D002               	goto	i1l4950
 10565                           
 10566                           ;Bluetooth.c: 85: {
 10567                           ;Bluetooth.c: 86: return 1;
 10568  003D3C  0E01               	movlw	1
 10569  003D3E  0012               	return	
 10570  003D40                     i1l4950:
 10571                           
 10572                           ;Bluetooth.c: 87: }
 10573                           ;Bluetooth.c: 88: return 0;
 10574  003D40  0E00               	movlw	0
 10575  003D42  0012               	return	
 10576  003D44  0012               	return		;funcret
 10577  003D46                     __end_ofi1_BlueConnected:
 10578                           	opt stack 0
 10579                           pclatu	equ	0xFFB
 10580                           pclath	equ	0xFFA
 10581                           tblptru	equ	0xFF8
 10582                           tblptrh	equ	0xFF7
 10583                           tblptrl	equ	0xFF6
 10584                           tablat	equ	0xFF5
 10585                           prodh	equ	0xFF4
 10586                           prodl	equ	0xFF3
 10587                           intcon	equ	0xFF2
 10588                           intcon2	equ	0xFF1
 10589                           indf0	equ	0xFEF
 10590                           postinc0	equ	0xFEE
 10591                           plusw0	equ	0xFEB
 10592                           fsr0h	equ	0xFEA
 10593                           fsr0l	equ	0xFE9
 10594                           wreg	equ	0xFE8
 10595                           postdec1	equ	0xFE5
 10596                           fsr1h	equ	0xFE2
 10597                           fsr1l	equ	0xFE1
 10598                           bsr	equ	0xFE0
 10599                           indf2	equ	0xFDF
 10600                           postinc2	equ	0xFDE
 10601                           postdec2	equ	0xFDD
 10602                           plusw2	equ	0xFDB
 10603                           fsr2h	equ	0xFDA
 10604                           fsr2l	equ	0xFD9
 10605                           status	equ	0xFD8
 10606                           
 10607 ;; *************** function _ReadUSART *****************
 10608 ;; Defined at:
 10609 ;;		line 214 in file "UART.c"
 10610 ;; Parameters:    Size  Location     Type
 10611 ;;		None
 10612 ;; Auto vars:     Size  Location     Type
 10613 ;;  data            1    0[COMRAM] unsigned char 
 10614 ;; Return value:  Size  Location     Type
 10615 ;;                  1    wreg      unsigned char 
 10616 ;; Registers used:
 10617 ;;		wreg, status,2
 10618 ;; Tracked objects:
 10619 ;;		On entry : 0/0
 10620 ;;		On exit  : 0/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10624 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10626 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10627 ;;Total ram usage:        1 bytes
 10628 ;; Hardware stack levels used:    1
 10629 ;; Hardware stack levels required when called:    7
 10630 ;; This function calls:
 10631 ;;		Nothing
 10632 ;; This function is called by:
 10633 ;;		_low_isr
 10634 ;; This function uses a non-reentrant model
 10635 ;;
 10636                           
 10637                           	psect	text59
 10638  003C94                     __ptext59:
 10639                           	opt stack 0
 10640  003C94                     _ReadUSART:
 10641                           	opt stack 14
 10642                           
 10643                           ;UART.c: 216: unsigned char data;
 10644                           ;UART.c: 218: if(RCSTAbits.OERR)
 10645                           
 10646                           ;incstack = 0
 10647  003C94  A2AB               	btfss	4011,1,c	;volatile
 10648  003C96  D004               	goto	i1l231
 10649                           
 10650                           ;UART.c: 219: {
 10651                           ;UART.c: 221: RCSTAbits.CREN = 0;
 10652  003C98  98AB               	bcf	4011,4,c	;volatile
 10653                           
 10654                           ;UART.c: 222: RCSTAbits.CREN = 1;
 10655  003C9A  88AB               	bsf	4011,4,c	;volatile
 10656                           
 10657                           ;UART.c: 223: return 0;
 10658  003C9C  0E00               	movlw	0
 10659  003C9E  0012               	return	
 10660  003CA0                     i1l231:
 10661                           
 10662                           ;UART.c: 224: }
 10663                           ;UART.c: 226: data = RCREG;
 10664  003CA0  CFAE F001          	movff	4014,ReadUSART@data	;volatile
 10665                           
 10666                           ;UART.c: 227: return (data);
 10667  003CA4  5001               	movf	ReadUSART@data,w,c
 10668  003CA6  0012               	return	
 10669  003CA8  0012               	return		;funcret
 10670  003CAA                     __end_of_ReadUSART:
 10671                           	opt stack 0
 10672                           pclatu	equ	0xFFB
 10673                           pclath	equ	0xFFA
 10674                           tblptru	equ	0xFF8
 10675                           tblptrh	equ	0xFF7
 10676                           tblptrl	equ	0xFF6
 10677                           tablat	equ	0xFF5
 10678                           prodh	equ	0xFF4
 10679                           prodl	equ	0xFF3
 10680                           intcon	equ	0xFF2
 10681                           intcon2	equ	0xFF1
 10682                           indf0	equ	0xFEF
 10683                           postinc0	equ	0xFEE
 10684                           plusw0	equ	0xFEB
 10685                           fsr0h	equ	0xFEA
 10686                           fsr0l	equ	0xFE9
 10687                           wreg	equ	0xFE8
 10688                           postdec1	equ	0xFE5
 10689                           fsr1h	equ	0xFE2
 10690                           fsr1l	equ	0xFE1
 10691                           bsr	equ	0xFE0
 10692                           indf2	equ	0xFDF
 10693                           postinc2	equ	0xFDE
 10694                           postdec2	equ	0xFDD
 10695                           plusw2	equ	0xFDB
 10696                           fsr2h	equ	0xFDA
 10697                           fsr2l	equ	0xFD9
 10698                           status	equ	0xFD8
 10699                           
 10700 ;; *************** function _IsCharacter *****************
 10701 ;; Defined at:
 10702 ;;		line 69 in file "MISC.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  data            1    wreg     unsigned char 
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;  data            1    0[COMRAM] unsigned char 
 10707 ;; Return value:  Size  Location     Type
 10708 ;;                  1    wreg      unsigned char 
 10709 ;; Registers used:
 10710 ;;		wreg, status,2, status,0
 10711 ;; Tracked objects:
 10712 ;;		On entry : 0/0
 10713 ;;		On exit  : 0/0
 10714 ;;		Unchanged: 0/0
 10715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10720 ;;Total ram usage:        1 bytes
 10721 ;; Hardware stack levels used:    1
 10722 ;; Hardware stack levels required when called:    7
 10723 ;; This function calls:
 10724 ;;		Nothing
 10725 ;; This function is called by:
 10726 ;;		_low_isr
 10727 ;; This function uses a non-reentrant model
 10728 ;;
 10729                           
 10730                           	psect	text60
 10731  003C50                     __ptext60:
 10732                           	opt stack 0
 10733  003C50                     _IsCharacter:
 10734                           	opt stack 14
 10735                           
 10736                           ;incstack = 0
 10737                           ;IsCharacter@data stored from wreg
 10738  003C50  6E01               	movwf	IsCharacter@data,c
 10739                           
 10740                           ;MISC.c: 71: if(data >= 32 && data <= 126)
 10741  003C52  0E1F               	movlw	31
 10742  003C54  6401               	cpfsgt	IsCharacter@data,c
 10743  003C56  D005               	goto	i1l4668
 10744  003C58  0E7F               	movlw	127
 10745  003C5A  6001               	cpfslt	IsCharacter@data,c
 10746  003C5C  D002               	goto	i1l4668
 10747                           
 10748                           ;MISC.c: 72: {
 10749                           ;MISC.c: 73: return 1;
 10750  003C5E  0E01               	movlw	1
 10751  003C60  0012               	return	
 10752  003C62                     i1l4668:
 10753                           
 10754                           ;MISC.c: 74: }
 10755                           ;MISC.c: 75: return 0;
 10756  003C62  0E00               	movlw	0
 10757  003C64  0012               	return	
 10758  003C66  0012               	return		;funcret
 10759  003C68                     __end_of_IsCharacter:
 10760                           	opt stack 0
 10761                           pclatu	equ	0xFFB
 10762                           pclath	equ	0xFFA
 10763                           tblptru	equ	0xFF8
 10764                           tblptrh	equ	0xFF7
 10765                           tblptrl	equ	0xFF6
 10766                           tablat	equ	0xFF5
 10767                           prodh	equ	0xFF4
 10768                           prodl	equ	0xFF3
 10769                           intcon	equ	0xFF2
 10770                           intcon2	equ	0xFF1
 10771                           indf0	equ	0xFEF
 10772                           postinc0	equ	0xFEE
 10773                           plusw0	equ	0xFEB
 10774                           fsr0h	equ	0xFEA
 10775                           fsr0l	equ	0xFE9
 10776                           wreg	equ	0xFE8
 10777                           postdec1	equ	0xFE5
 10778                           fsr1h	equ	0xFE2
 10779                           fsr1l	equ	0xFE1
 10780                           bsr	equ	0xFE0
 10781                           indf2	equ	0xFDF
 10782                           postinc2	equ	0xFDE
 10783                           postdec2	equ	0xFDD
 10784                           plusw2	equ	0xFDB
 10785                           fsr2h	equ	0xFDA
 10786                           fsr2l	equ	0xFD9
 10787                           status	equ	0xFD8
 10788                           
 10789 ;; *************** function _high_isr *****************
 10790 ;; Defined at:
 10791 ;;		line 57 in file "interrupts.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;		None
 10794 ;; Auto vars:     Size  Location     Type
 10795 ;;  Time0           2   42[BANK0 ] unsigned int 
 10796 ;;  IRpin           1   41[BANK0 ] unsigned char 
 10797 ;; Return value:  Size  Location     Type
 10798 ;;		None               void
 10799 ;; Registers used:
 10800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10807 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10808 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10809 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10810 ;;Total ram usage:       21 bytes
 10811 ;; Hardware stack levels used:    1
 10812 ;; Hardware stack levels required when called:    6
 10813 ;; This function calls:
 10814 ;;		_IRrawToNEC
 10815 ;;		_ResetTimer3
 10816 ;;		_UseIRCode
 10817 ;;		i2_ReadIRpin
 10818 ;;		i2_ResetTimer0
 10819 ;; This function is called by:
 10820 ;;		Interrupt level 2
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824                           	psect	intcode
 10825  000008                     __pintcode:
 10826                           	opt stack 0
 10827  000008                     _high_isr:
 10828                           	opt stack 14
 10829                           
 10830                           ;incstack = 0
 10831  000008  CFFA F07B          	movff	pclath,??_high_isr+4
 10832  00000C  CFFB F07C          	movff	pclatu,??_high_isr+5
 10833  000010  CFE9 F07D          	movff	fsr0l,??_high_isr+6
 10834  000014  EFFC  F00B         	goto	int_func
 10835                           pclatu	equ	0xFFB
 10836                           pclath	equ	0xFFA
 10837                           tblptru	equ	0xFF8
 10838                           tblptrh	equ	0xFF7
 10839                           tblptrl	equ	0xFF6
 10840                           tablat	equ	0xFF5
 10841                           prodh	equ	0xFF4
 10842                           prodl	equ	0xFF3
 10843                           intcon	equ	0xFF2
 10844                           intcon2	equ	0xFF1
 10845                           indf0	equ	0xFEF
 10846                           postinc0	equ	0xFEE
 10847                           plusw0	equ	0xFEB
 10848                           fsr0h	equ	0xFEA
 10849                           fsr0l	equ	0xFE9
 10850                           wreg	equ	0xFE8
 10851                           postdec1	equ	0xFE5
 10852                           fsr1h	equ	0xFE2
 10853                           fsr1l	equ	0xFE1
 10854                           bsr	equ	0xFE0
 10855                           indf2	equ	0xFDF
 10856                           postinc2	equ	0xFDE
 10857                           postdec2	equ	0xFDD
 10858                           plusw2	equ	0xFDB
 10859                           fsr2h	equ	0xFDA
 10860                           fsr2l	equ	0xFD9
 10861                           status	equ	0xFD8
 10862                           
 10863                           	psect	intcode_body
 10864  0017F8                     __pintcode_body:
 10865                           	opt stack 14
 10866  0017F8                     int_func:
 10867                           	opt stack 14
 10868  0017F8  CFEA F07E          	movff	fsr0h,??_high_isr+7
 10869  0017FC  CFE1 F07F          	movff	fsr1l,??_high_isr+8
 10870  001800  CFE2 F080          	movff	fsr1h,??_high_isr+9
 10871  001804  CFD9 F081          	movff	fsr2l,??_high_isr+10
 10872  001808  CFDA F082          	movff	fsr2h,??_high_isr+11
 10873  00180C  CFF3 F083          	movff	prodl,??_high_isr+12
 10874  001810  CFF4 F084          	movff	prodh,??_high_isr+13
 10875  001814  CFF6 F085          	movff	tblptrl,??_high_isr+14
 10876  001818  CFF7 F086          	movff	tblptrh,??_high_isr+15
 10877  00181C  CFF8 F087          	movff	tblptru,??_high_isr+16
 10878  001820  CFF5 F088          	movff	tablat,??_high_isr+17
 10879                           
 10880                           ;interrupts.c: 66: unsigned char IRpin;
 10881                           ;interrupts.c: 67: unsigned int Time0;
 10882                           ;interrupts.c: 69: INTCONbits.GIE = 0;
 10883  001824  9EF2               	bcf	intcon,7,c	;volatile
 10884                           
 10885                           ;interrupts.c: 71: if(INTCONbits.RBIF)
 10886  001826  A0F2               	btfss	intcon,0,c	;volatile
 10887  001828  D070               	goto	i2l543
 10888                           
 10889                           ;interrupts.c: 72: {
 10890                           ;interrupts.c: 73: IRpin = ReadIRpin();
 10891  00182A  ECA3  F01E         	call	i2_ReadIRpin	;wreg free
 10892  00182E  0100               	movlb	0	; () banked
 10893  001830  6F89               	movwf	high_isr@IRpin& (0+255),b
 10894                           
 10895                           ; BSR set to: 0
 10896                           ;interrupts.c: 74: if(IRpin != IRpinOLD)
 10897  001832  0100               	movlb	0	; () banked
 10898  001834  51BB               	movf	_IRpinOLD& (0+255),w,b
 10899  001836  0100               	movlb	0	; () banked
 10900  001838  1989               	xorwf	high_isr@IRpin& (0+255),w,b
 10901  00183A  B4D8               	btfsc	status,2,c
 10902  00183C  D064               	goto	i2l544
 10903                           
 10904                           ; BSR set to: 0
 10905                           ;interrupts.c: 75: {
 10906                           ;interrupts.c: 76: (T0CONbits.TMR0ON = 1);
 10907  00183E  8ED5               	bsf	4053,7,c	;volatile
 10908                           
 10909                           ;interrupts.c: 77: (INTCONbits.TMR0IE = 1);
 10910  001840  8AF2               	bsf	intcon,5,c	;volatile
 10911                           
 10912                           ;interrupts.c: 78: Time0 = TMR0L;
 10913  001842  CFD6 F08A          	movff	4054,high_isr@Time0	;volatile
 10914  001846  0100               	movlb	0	; () banked
 10915  001848  6B8B               	clrf	(high_isr@Time0+1)& (0+255),b
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;interrupts.c: 79: Time0 += (TMR0H << 8);
 10919  00184A  50D7               	movf	4055,w,c	;volatile
 10920  00184C  0100               	movlb	0	; () banked
 10921  00184E  278B               	addwf	(high_isr@Time0+1)& (0+255),f,b
 10922                           
 10923                           ; BSR set to: 0
 10924                           ;interrupts.c: 80: if(IRrawCodeNum < 72)
 10925  001850  0E48               	movlw	72
 10926  001852  0100               	movlb	0	; () banked
 10927  001854  61BC               	cpfslt	_IRrawCodeNum& (0+255),b
 10928  001856  D053               	goto	i2l545
 10929                           
 10930                           ; BSR set to: 0
 10931                           ;interrupts.c: 81: {
 10932                           ;interrupts.c: 82: if(IRrawCodeNum > 0)
 10933  001858  0100               	movlb	0	; () banked
 10934  00185A  51BC               	movf	_IRrawCodeNum& (0+255),w,b
 10935  00185C  B4D8               	btfsc	status,2,c
 10936  00185E  D049               	goto	i2l6658
 10937                           
 10938                           ; BSR set to: 0
 10939                           ;interrupts.c: 83: {
 10940                           ;interrupts.c: 84: if((Time0 <= 21000 && Time0 >= 19000) ||
 10941                           ;interrupts.c: 85: (Time0 <= 50000 && Time0 >= 45000))
 10942  001860  0E09               	movlw	9
 10943  001862  0100               	movlb	0	; () banked
 10944  001864  5D8A               	subwf	high_isr@Time0& (0+255),w,b
 10945  001866  0E52               	movlw	82
 10946  001868  0100               	movlb	0	; () banked
 10947  00186A  598B               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 10948  00186C  B0D8               	btfsc	status,0,c
 10949  00186E  D008               	goto	i2l6650
 10950                           
 10951                           ; BSR set to: 0
 10952  001870  0E38               	movlw	56
 10953  001872  0100               	movlb	0	; () banked
 10954  001874  5D8A               	subwf	high_isr@Time0& (0+255),w,b
 10955  001876  0E4A               	movlw	74
 10956  001878  0100               	movlb	0	; () banked
 10957  00187A  598B               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 10958  00187C  B0D8               	btfsc	status,0,c
 10959  00187E  D010               	goto	i2l549
 10960  001880                     i2l6650:
 10961                           
 10962                           ; BSR set to: 0
 10963  001880  0E51               	movlw	81
 10964  001882  0100               	movlb	0	; () banked
 10965  001884  5D8A               	subwf	high_isr@Time0& (0+255),w,b
 10966  001886  0EC3               	movlw	195
 10967  001888  0100               	movlb	0	; () banked
 10968  00188A  598B               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 10969  00188C  B0D8               	btfsc	status,0,c
 10970  00188E  D00A               	goto	i2l6654
 10971                           
 10972                           ; BSR set to: 0
 10973  001890  0EC8               	movlw	200
 10974  001892  0100               	movlb	0	; () banked
 10975  001894  5D8A               	subwf	high_isr@Time0& (0+255),w,b
 10976  001896  0EAF               	movlw	175
 10977  001898  0100               	movlb	0	; () banked
 10978  00189A  598B               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 10979  00189C  A0D8               	btfss	status,0,c
 10980  00189E  D002               	goto	i2l6654
 10981  0018A0                     i2l549:
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;interrupts.c: 86: {
 10985                           ;interrupts.c: 87: INTCONbits.RBIE = 0;
 10986  0018A0  96F2               	bcf	intcon,3,c	;volatile
 10987                           
 10988                           ;interrupts.c: 88: }
 10989  0018A2  D003               	goto	i2l6656
 10990  0018A4                     i2l6654:
 10991                           
 10992                           ; BSR set to: 0
 10993                           ;interrupts.c: 89: else
 10994                           ;interrupts.c: 90: {
 10995                           ;interrupts.c: 91: ResetTimer0();
 10996  0018A4  ECC7  F01E         	call	i2_ResetTimer0	;wreg free
 10997  0018A8  D000               	goto	i2l6656
 10998  0018AA                     i2l6656:
 10999                           
 11000                           ;interrupts.c: 92: }
 11001                           ;interrupts.c: 93: IRRawCode[IRrawCodeNum - 1] = Time0;
 11002  0018AA  0EFE               	movlw	254
 11003  0018AC  0100               	movlb	0	; () banked
 11004  0018AE  6F77               	movwf	??_high_isr& (0+255),b
 11005  0018B0  0EFF               	movlw	255
 11006  0018B2  0100               	movlb	0	; () banked
 11007  0018B4  6F78               	movwf	(??_high_isr+1)& (0+255),b
 11008  0018B6  0100               	movlb	0	; () banked
 11009  0018B8  51BC               	movf	_IRrawCodeNum& (0+255),w,b
 11010  0018BA  0100               	movlb	0	; () banked
 11011  0018BC  6F79               	movwf	(??_high_isr+2)& (0+255),b
 11012  0018BE  6B7A               	clrf	(??_high_isr+3)& (0+255),b
 11013  0018C0  90D8               	bcf	status,0,c
 11014  0018C2  0100               	movlb	0	; () banked
 11015  0018C4  3779               	rlcf	(??_high_isr+2)& (0+255),f,b
 11016  0018C6  377A               	rlcf	(??_high_isr+3)& (0+255),f,b
 11017  0018C8  0100               	movlb	0	; () banked
 11018  0018CA  5177               	movf	??_high_isr& (0+255),w,b
 11019  0018CC  0100               	movlb	0	; () banked
 11020  0018CE  2779               	addwf	(??_high_isr+2)& (0+255),f,b
 11021  0018D0  0100               	movlb	0	; () banked
 11022  0018D2  5178               	movf	(??_high_isr+1)& (0+255),w,b
 11023  0018D4  0100               	movlb	0	; () banked
 11024  0018D6  237A               	addwfc	(??_high_isr+3)& (0+255),f,b
 11025  0018D8  0E00               	movlw	low _IRRawCode
 11026  0018DA  0100               	movlb	0	; () banked
 11027  0018DC  2579               	addwf	(??_high_isr+2)& (0+255),w,b
 11028  0018DE  6ED9               	movwf	fsr2l,c
 11029  0018E0  0E01               	movlw	high _IRRawCode
 11030  0018E2  0100               	movlb	0	; () banked
 11031  0018E4  217A               	addwfc	(??_high_isr+3)& (0+255),w,b
 11032  0018E6  6EDA               	movwf	fsr2h,c
 11033  0018E8  C08A  FFDE         	movff	high_isr@Time0,postinc2
 11034  0018EC  C08B  FFDD         	movff	high_isr@Time0+1,postdec2
 11035                           
 11036                           ;interrupts.c: 94: }
 11037  0018F0  D003               	goto	i2l6660
 11038  0018F2                     i2l6658:
 11039                           
 11040                           ; BSR set to: 0
 11041                           ;interrupts.c: 95: else
 11042                           ;interrupts.c: 96: {
 11043                           ;interrupts.c: 97: ResetTimer0();
 11044  0018F2  ECC7  F01E         	call	i2_ResetTimer0	;wreg free
 11045  0018F6  D000               	goto	i2l6660
 11046  0018F8                     i2l6660:
 11047                           
 11048                           ;interrupts.c: 98: }
 11049                           ;interrupts.c: 99: IRrawCodeNum++;
 11050  0018F8  0100               	movlb	0	; () banked
 11051  0018FA  2BBC               	incf	_IRrawCodeNum& (0+255),f,b
 11052                           
 11053                           ;interrupts.c: 100: }
 11054  0018FC  D001               	goto	i2l554
 11055  0018FE                     i2l545:
 11056                           
 11057                           ; BSR set to: 0
 11058                           ;interrupts.c: 101: else
 11059                           ;interrupts.c: 102: {
 11060                           ;interrupts.c: 103: INTCONbits.RBIE = 0;
 11061  0018FE  96F2               	bcf	intcon,3,c	;volatile
 11062  001900                     i2l554:
 11063                           
 11064                           ; BSR set to: 0
 11065                           ;interrupts.c: 104: }
 11066                           ;interrupts.c: 105: IRpinOLD = IRpin;
 11067  001900  C089  F0BB         	movff	high_isr@IRpin,_IRpinOLD
 11068                           
 11069                           ;interrupts.c: 106: }
 11070  001904  D001               	goto	i2l555
 11071  001906                     i2l544:
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;interrupts.c: 107: else
 11075                           ;interrupts.c: 108: {
 11076                           ;interrupts.c: 110: __nop();
 11077  001906  F000               	nop	
 11078  001908                     i2l555:
 11079                           
 11080                           ;interrupts.c: 111: }
 11081                           ;interrupts.c: 113: INTCONbits.RBIF = 0;
 11082  001908  90F2               	bcf	intcon,0,c	;volatile
 11083  00190A                     i2l543:
 11084                           
 11085                           ;interrupts.c: 114: }
 11086                           ;interrupts.c: 116: if(INTCONbits.TMR0IF)
 11087  00190A  A4F2               	btfss	intcon,2,c	;volatile
 11088  00190C  D02C               	goto	i2l6674
 11089                           
 11090                           ;interrupts.c: 117: {
 11091                           ;interrupts.c: 119: (INTCONbits.TMR0IE = 0);
 11092  00190E  9AF2               	bcf	intcon,5,c	;volatile
 11093                           
 11094                           ;interrupts.c: 120: (T0CONbits.TMR0ON = 0);
 11095  001910  9ED5               	bcf	4053,7,c	;volatile
 11096                           
 11097                           ;interrupts.c: 121: IR_New_Code = IRrawToNEC(&IRRawCode, &IR_NEC, 1);
 11098  001912  0E00               	movlw	low _IRRawCode
 11099  001914  6E14               	movwf	IRrawToNEC@Raw,c
 11100  001916  0E01               	movlw	high _IRRawCode
 11101  001918  6E15               	movwf	IRrawToNEC@Raw+1,c
 11102  00191A  0EC3               	movlw	low _IR_NEC
 11103  00191C  6E16               	movwf	IRrawToNEC@NEC,c
 11104  00191E  0E00               	movlw	high _IR_NEC
 11105  001920  6E17               	movwf	IRrawToNEC@NEC+1,c
 11106  001922  0E01               	movlw	1
 11107  001924  6E18               	movwf	IRrawToNEC@Invert,c
 11108  001926  EC2B  F00A         	call	_IRrawToNEC	;wreg free
 11109  00192A  0100               	movlb	0	; () banked
 11110  00192C  6FC7               	movwf	_IR_New_Code& (0+255),b
 11111                           
 11112                           ; BSR set to: 0
 11113                           ;interrupts.c: 122: if(IR_New_Code)
 11114  00192E  0100               	movlb	0	; () banked
 11115  001930  51C7               	movf	_IR_New_Code& (0+255),w,b
 11116  001932  B4D8               	btfsc	status,2,c
 11117  001934  D011               	goto	i2l557
 11118                           
 11119                           ; BSR set to: 0
 11120                           ;interrupts.c: 123: {
 11121                           ;interrupts.c: 124: UseIRCode(&IR_New_Code, IR_NEC);
 11122  001936  0EC7               	movlw	low _IR_New_Code
 11123  001938  0100               	movlb	0	; () banked
 11124  00193A  6F71               	movwf	UseIRCode@Code& (0+255),b
 11125  00193C  0E00               	movlw	high _IR_New_Code
 11126  00193E  0100               	movlb	0	; () banked
 11127  001940  6F72               	movwf	(UseIRCode@Code+1)& (0+255),b
 11128  001942  C0C3  F073         	movff	_IR_NEC,UseIRCode@NEC
 11129  001946  C0C4  F074         	movff	_IR_NEC+1,UseIRCode@NEC+1
 11130  00194A  C0C5  F075         	movff	_IR_NEC+2,UseIRCode@NEC+2
 11131  00194E  C0C6  F076         	movff	_IR_NEC+3,UseIRCode@NEC+3
 11132  001952  ECE5  F012         	call	_UseIRCode	;wreg free
 11133                           
 11134                           ;interrupts.c: 125: }
 11135  001956  D002               	goto	i2l6670
 11136  001958                     i2l557:
 11137                           
 11138                           ; BSR set to: 0
 11139                           ;interrupts.c: 126: else
 11140                           ;interrupts.c: 127: {
 11141                           ;interrupts.c: 128: INTCONbits.RBIE = 1;
 11142  001958  86F2               	bsf	intcon,3,c	;volatile
 11143  00195A  D000               	goto	i2l6670
 11144  00195C                     i2l6670:
 11145                           
 11146                           ;interrupts.c: 129: }
 11147                           ;interrupts.c: 130: IRrawCodeNum = 0;
 11148  00195C  0E00               	movlw	0
 11149  00195E  0100               	movlb	0	; () banked
 11150  001960  6FBC               	movwf	_IRrawCodeNum& (0+255),b
 11151                           
 11152                           ; BSR set to: 0
 11153                           ;interrupts.c: 132: INTCONbits.TMR0IF = 0;
 11154  001962  94F2               	bcf	intcon,2,c	;volatile
 11155  001964  D000               	goto	i2l6674
 11156  001966                     i2l6674:
 11157                           
 11158                           ;interrupts.c: 133: }
 11159                           ;interrupts.c: 134: if(PIR1bits.TMR2IF)
 11160  001966  A29E               	btfss	3998,1,c	;volatile
 11161  001968  D0E2               	goto	i2l559
 11162                           
 11163                           ;interrupts.c: 135: {
 11164                           ;interrupts.c: 138: PIE1bits.TMR2IE = 0;
 11165  00196A  929D               	bcf	3997,1,c	;volatile
 11166                           
 11167                           ;interrupts.c: 139: Timer2_Postscaler++;
 11168  00196C  0100               	movlb	0	; () banked
 11169  00196E  2BC1               	incf	_Timer2_Postscaler& (0+255),f,b
 11170                           
 11171                           ; BSR set to: 0
 11172                           ;interrupts.c: 140: if(Timer2_Postscaler > 1)
 11173  001970  0E01               	movlw	1
 11174  001972  0100               	movlb	0	; () banked
 11175  001974  65C1               	cpfsgt	_Timer2_Postscaler& (0+255),b
 11176  001976  D0DB               	goto	i2l559
 11177                           
 11178                           ; BSR set to: 0
 11179                           ;interrupts.c: 141: {
 11180                           ;interrupts.c: 142: Timer2_Postscaler = 0;
 11181  001978  0E00               	movlw	0
 11182  00197A  0100               	movlb	0	; () banked
 11183  00197C  6FC1               	movwf	_Timer2_Postscaler& (0+255),b
 11184                           
 11185                           ; BSR set to: 0
 11186                           ;interrupts.c: 143: if(RFsendCode[RFcodeBit] != 99)
 11187  00197E  0100               	movlb	0	; () banked
 11188  001980  51BD               	movf	_RFcodeBit& (0+255),w,b
 11189  001982  0D01               	mullw	1
 11190  001984  0E9F               	movlw	low _RFsendCode
 11191  001986  24F3               	addwf	prodl,w,c
 11192  001988  6ED9               	movwf	fsr2l,c
 11193  00198A  0E00               	movlw	high _RFsendCode
 11194  00198C  20F4               	addwfc	prodh,w,c
 11195  00198E  6EDA               	movwf	fsr2h,c
 11196  001990  0E63               	movlw	99
 11197  001992  18DE               	xorwf	postinc2,w,c
 11198  001994  B4D8               	btfsc	status,2,c
 11199  001996  D098               	goto	i2l6798
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;interrupts.c: 144: {
 11203                           ;interrupts.c: 146: if(RFsendFlag)
 11204  001998  0100               	movlb	0	; () banked
 11205  00199A  51BF               	movf	_RFsendFlag& (0+255),w,b	;volatile
 11206  00199C  B4D8               	btfsc	status,2,c
 11207  00199E  D0C0               	goto	i2l6832
 11208                           
 11209                           ; BSR set to: 0
 11210                           ;interrupts.c: 147: {
 11211                           ;interrupts.c: 148: if(RFsendCode[RFcodeBit] == 0)
 11212  0019A0  0100               	movlb	0	; () banked
 11213  0019A2  51BD               	movf	_RFcodeBit& (0+255),w,b
 11214  0019A4  0D01               	mullw	1
 11215  0019A6  0E9F               	movlw	low _RFsendCode
 11216  0019A8  24F3               	addwf	prodl,w,c
 11217  0019AA  6ED9               	movwf	fsr2l,c
 11218  0019AC  0E00               	movlw	high _RFsendCode
 11219  0019AE  20F4               	addwfc	prodh,w,c
 11220  0019B0  6EDA               	movwf	fsr2h,c
 11221  0019B2  50DF               	movf	indf2,w,c
 11222  0019B4  A4D8               	btfss	status,2,c
 11223  0019B6  D02C               	goto	i2l6724
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;interrupts.c: 149: {
 11227                           ;interrupts.c: 150: if(RFcodePlace == 1)
 11228  0019B8  0100               	movlb	0	; () banked
 11229  0019BA  05BE               	decf	_RFcodePlace& (0+255),w,b
 11230  0019BC  A4D8               	btfss	status,2,c
 11231  0019BE  D007               	goto	i2l6698
 11232  0019C0  D087               	goto	i2l6800
 11233  0019C2                     i2l6694:
 11234                           
 11235                           ; BSR set to: 0
 11236                           ;interrupts.c: 153: (PR2 = 8);
 11237  0019C2  0E08               	movlw	8
 11238  0019C4  6ECB               	movwf	4043,c	;volatile
 11239  0019C6  D086               	goto	i2l6804
 11240  0019C8                     L2:
 11241                           
 11242                           ;interrupts.c: 155: (TMR2 = 0);
 11243  0019C8  0E00               	movlw	0
 11244  0019CA  6ECC               	movwf	4044,c	;volatile
 11245                           
 11246                           ;interrupts.c: 156: }
 11247  0019CC  D0A9               	goto	i2l6832
 11248  0019CE                     i2l6698:
 11249                           
 11250                           ; BSR set to: 0
 11251                           ;interrupts.c: 157: else if(RFcodePlace == 2)
 11252  0019CE  0E02               	movlw	2
 11253  0019D0  0100               	movlb	0	; () banked
 11254  0019D2  19BE               	xorwf	_RFcodePlace& (0+255),w,b
 11255  0019D4  A4D8               	btfss	status,2,c
 11256  0019D6  D005               	goto	i2l6706
 11257  0019D8  D059               	goto	L3
 11258                           
 11259                           ; BSR set to: 0
 11260                           ;interrupts.c: 158: {
 11261                           ;interrupts.c: 159: (LATC &= ~0x20);
 11262  0019DA  D02B               	goto	i2l6730
 11263  0019DC                     i2l6704:
 11264                           
 11265                           ; BSR set to: 0
 11266                           ;interrupts.c: 161: RFcodePlace++;
 11267  0019DC  0100               	movlb	0	; () banked
 11268  0019DE  2BBE               	incf	_RFcodePlace& (0+255),f,b
 11269                           
 11270                           ;interrupts.c: 162: }
 11271  0019E0  D09F               	goto	i2l6832
 11272  0019E2                     i2l6706:
 11273                           
 11274                           ; BSR set to: 0
 11275                           ;interrupts.c: 163: else if(RFcodePlace == 3)
 11276  0019E2  0E03               	movlw	3
 11277  0019E4  0100               	movlb	0	; () banked
 11278  0019E6  19BE               	xorwf	_RFcodePlace& (0+255),w,b
 11279  0019E8  A4D8               	btfss	status,2,c
 11280  0019EA  D002               	goto	i2l6714
 11281  0019EC  D071               	goto	i2l6800
 11282                           
 11283                           ; BSR set to: 0
 11284                           ;interrupts.c: 164: {
 11285                           ;interrupts.c: 165: (LATC |= 0x20);
 11286  0019EE  D7E9               	goto	i2l6694
 11287  0019F0                     i2l6714:
 11288                           
 11289                           ; BSR set to: 0
 11290                           ;interrupts.c: 170: else if(RFcodePlace == 4)
 11291  0019F0  0E04               	movlw	4
 11292  0019F2  0100               	movlb	0	; () banked
 11293  0019F4  19BE               	xorwf	_RFcodePlace& (0+255),w,b
 11294  0019F6  A4D8               	btfss	status,2,c
 11295  0019F8  D062               	goto	i2l6796
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;interrupts.c: 171: {
 11299                           ;interrupts.c: 172: (LATC &= ~0x20);
 11300  0019FA  9A8B               	bcf	3979,5,c	;volatile
 11301                           
 11302                           ; BSR set to: 0
 11303                           ;interrupts.c: 173: (PR2 = 24);
 11304  0019FC  0E18               	movlw	24
 11305  0019FE  6ECB               	movwf	4043,c	;volatile
 11306                           
 11307                           ; BSR set to: 0
 11308                           ;interrupts.c: 174: RFcodePlace = 1;
 11309  001A00  0E01               	movlw	1
 11310  001A02  0100               	movlb	0	; () banked
 11311  001A04  6FBE               	movwf	_RFcodePlace& (0+255),b
 11312                           
 11313                           ;interrupts.c: 175: RFcodeBit++;
 11314  001A06  0100               	movlb	0	; () banked
 11315  001A08  2BBD               	incf	_RFcodeBit& (0+255),f,b
 11316                           
 11317                           ;interrupts.c: 176: }
 11318  001A0A  D08A               	goto	i2l6832
 11319                           
 11320                           ; BSR set to: 0
 11321  001A0C  D058               	goto	i2l6796
 11322                           
 11323                           ; BSR set to: 0
 11324                           ;interrupts.c: 182: }
 11325                           ;interrupts.c: 183: }
 11326                           
 11327                           ; BSR set to: 0
 11328                           
 11329                           ; BSR set to: 0
 11330                           
 11331                           ; BSR set to: 0
 11332                           
 11333                           ;interrupts.c: 181: RFsendFlag = 0;
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;interrupts.c: 177: else
 11337                           ;interrupts.c: 178: {
 11338                           ;interrupts.c: 180: RFcodePlace = 1;
 11339  001A0E  D088               	goto	i2l6832
 11340  001A10                     i2l6724:
 11341                           
 11342                           ; BSR set to: 0
 11343                           ;interrupts.c: 184: else if(RFsendCode[RFcodeBit] == 1)
 11344  001A10  0100               	movlb	0	; () banked
 11345  001A12  51BD               	movf	_RFcodeBit& (0+255),w,b
 11346  001A14  0D01               	mullw	1
 11347  001A16  0E9F               	movlw	low _RFsendCode
 11348  001A18  24F3               	addwf	prodl,w,c
 11349  001A1A  6ED9               	movwf	fsr2l,c
 11350  001A1C  0E00               	movlw	high _RFsendCode
 11351  001A1E  20F4               	addwfc	prodh,w,c
 11352  001A20  6EDA               	movwf	fsr2h,c
 11353  001A22  04DE               	decf	postinc2,w,c
 11354  001A24  A4D8               	btfss	status,2,c
 11355  001A26  D027               	goto	i2l6762
 11356                           
 11357                           ; BSR set to: 0
 11358                           ;interrupts.c: 185: {
 11359                           ;interrupts.c: 186: if(RFcodePlace == 1)
 11360  001A28  0100               	movlb	0	; () banked
 11361  001A2A  05BE               	decf	_RFcodePlace& (0+255),w,b
 11362  001A2C  A4D8               	btfss	status,2,c
 11363  001A2E  D004               	goto	i2l6734
 11364  001A30  D00F               	goto	i2l6744
 11365  001A32                     i2l6730:
 11366                           
 11367                           ; BSR set to: 0
 11368                           ;interrupts.c: 189: (PR2 = 24);
 11369  001A32  0E18               	movlw	24
 11370  001A34  6ECB               	movwf	4043,c	;volatile
 11371  001A36  D7D2               	goto	i2l6704
 11372  001A38                     i2l6734:
 11373                           
 11374                           ; BSR set to: 0
 11375                           ;interrupts.c: 192: else if(RFcodePlace == 2)
 11376  001A38  0E02               	movlw	2
 11377  001A3A  0100               	movlb	0	; () banked
 11378  001A3C  19BE               	xorwf	_RFcodePlace& (0+255),w,b
 11379  001A3E  A4D8               	btfss	status,2,c
 11380  001A40  D002               	goto	i2l6742
 11381                           
 11382                           ; BSR set to: 0
 11383                           ;interrupts.c: 193: {
 11384                           ;interrupts.c: 194: (LATC &= ~0x20);
 11385  001A42  9A8B               	bcf	3979,5,c	;volatile
 11386  001A44  D7BE               	goto	i2l6694
 11387  001A46                     i2l6742:
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;interrupts.c: 199: else if(RFcodePlace == 3)
 11391  001A46  0E03               	movlw	3
 11392  001A48  0100               	movlb	0	; () banked
 11393  001A4A  19BE               	xorwf	_RFcodePlace& (0+255),w,b
 11394  001A4C  A4D8               	btfss	status,2,c
 11395  001A4E  D003               	goto	i2l6750
 11396  001A50                     i2l6744:
 11397                           
 11398                           ; BSR set to: 0
 11399                           ;interrupts.c: 200: {
 11400                           ;interrupts.c: 201: (LATC |= 0x20);
 11401  001A50  8A8B               	bsf	3979,5,c	;volatile
 11402  001A52  D7EF               	goto	i2l6730
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;interrupts.c: 202: (PR2 = 24);
 11406  001A54  D7C3               	goto	i2l6704
 11407  001A56                     i2l6750:
 11408                           
 11409                           ; BSR set to: 0
 11410                           ;interrupts.c: 205: else if(RFcodePlace == 4)
 11411  001A56  0E04               	movlw	4
 11412  001A58  0100               	movlb	0	; () banked
 11413  001A5A  19BE               	xorwf	_RFcodePlace& (0+255),w,b
 11414  001A5C  A4D8               	btfss	status,2,c
 11415  001A5E  D02F               	goto	i2l6796
 11416                           
 11417                           ; BSR set to: 0
 11418                           ;interrupts.c: 206: {
 11419                           ;interrupts.c: 207: (LATC &= ~0x20);
 11420  001A60  9A8B               	bcf	3979,5,c	;volatile
 11421                           
 11422                           ; BSR set to: 0
 11423                           ;interrupts.c: 208: (PR2 = 8);
 11424  001A62  0E08               	movlw	8
 11425  001A64  6ECB               	movwf	4043,c	;volatile
 11426                           
 11427                           ; BSR set to: 0
 11428                           ;interrupts.c: 209: RFcodePlace = 1;
 11429  001A66  0E01               	movlw	1
 11430  001A68  0100               	movlb	0	; () banked
 11431  001A6A  6FBE               	movwf	_RFcodePlace& (0+255),b
 11432                           
 11433                           ;interrupts.c: 210: RFcodeBit++;
 11434  001A6C  0100               	movlb	0	; () banked
 11435  001A6E  2BBD               	incf	_RFcodeBit& (0+255),f,b
 11436  001A70  D7AB               	goto	L2
 11437                           
 11438                           ; BSR set to: 0
 11439                           
 11440                           ;interrupts.c: 212: }
 11441                           
 11442                           ; BSR set to: 0
 11443                           ;interrupts.c: 211: (TMR2 = 0);
 11444  001A72  D025               	goto	i2l6796
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;interrupts.c: 218: }
 11448                           ;interrupts.c: 219: }
 11449                           
 11450                           ; BSR set to: 0
 11451                           
 11452                           ; BSR set to: 0
 11453                           
 11454                           ; BSR set to: 0
 11455                           
 11456                           ;interrupts.c: 217: RFsendFlag = 0;
 11457                           
 11458                           ; BSR set to: 0
 11459                           ;interrupts.c: 213: else
 11460                           ;interrupts.c: 214: {
 11461                           ;interrupts.c: 216: RFcodePlace = 1;
 11462  001A74  D055               	goto	i2l6832
 11463  001A76                     i2l6762:
 11464                           
 11465                           ; BSR set to: 0
 11466                           ;interrupts.c: 220: else
 11467                           ;interrupts.c: 221: {
 11468                           ;interrupts.c: 223: if(RFcodePlace == 1)
 11469  001A76  0100               	movlb	0	; () banked
 11470  001A78  05BE               	decf	_RFcodePlace& (0+255),w,b
 11471  001A7A  A4D8               	btfss	status,2,c
 11472  001A7C  D002               	goto	i2l6770
 11473  001A7E  D028               	goto	i2l6800
 11474                           
 11475                           ; BSR set to: 0
 11476                           ;interrupts.c: 224: {
 11477                           ;interrupts.c: 225: (LATC |= 0x20);
 11478  001A80  D7A0               	goto	i2l6694
 11479  001A82                     i2l6770:
 11480                           
 11481                           ; BSR set to: 0
 11482                           ;interrupts.c: 230: else if(RFcodePlace == 2)
 11483  001A82  0E02               	movlw	2
 11484  001A84  0100               	movlb	0	; () banked
 11485  001A86  19BE               	xorwf	_RFcodePlace& (0+255),w,b
 11486  001A88  A4D8               	btfss	status,2,c
 11487  001A8A  D003               	goto	i2l6778
 11488  001A8C                     L3:
 11489                           
 11490                           ; BSR set to: 0
 11491                           ;interrupts.c: 231: {
 11492                           ;interrupts.c: 232: (LATC &= ~0x20);
 11493  001A8C  9A8B               	bcf	3979,5,c	;volatile
 11494  001A8E  D7D1               	goto	i2l6730
 11495                           
 11496                           ; BSR set to: 0
 11497                           ;interrupts.c: 233: (PR2 = 24);
 11498  001A90  D7A5               	goto	i2l6704
 11499  001A92                     i2l6778:
 11500                           
 11501                           ; BSR set to: 0
 11502                           ;interrupts.c: 236: else if(RFcodePlace == 3)
 11503  001A92  0E03               	movlw	3
 11504  001A94  0100               	movlb	0	; () banked
 11505  001A96  19BE               	xorwf	_RFcodePlace& (0+255),w,b
 11506  001A98  A4D8               	btfss	status,2,c
 11507  001A9A  D003               	goto	i2l6786
 11508  001A9C  D7D9               	goto	i2l6744
 11509                           
 11510                           ; BSR set to: 0
 11511                           ;interrupts.c: 237: {
 11512                           ;interrupts.c: 238: (LATC |= 0x20);
 11513  001A9E  D7C9               	goto	i2l6730
 11514                           
 11515                           ; BSR set to: 0
 11516                           ;interrupts.c: 239: (PR2 = 24);
 11517  001AA0  D79D               	goto	i2l6704
 11518  001AA2                     i2l6786:
 11519                           
 11520                           ; BSR set to: 0
 11521                           ;interrupts.c: 242: else if(RFcodePlace == 4)
 11522  001AA2  0E04               	movlw	4
 11523  001AA4  0100               	movlb	0	; () banked
 11524  001AA6  19BE               	xorwf	_RFcodePlace& (0+255),w,b
 11525  001AA8  A4D8               	btfss	status,2,c
 11526  001AAA  D009               	goto	i2l6796
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;interrupts.c: 243: {
 11530                           ;interrupts.c: 244: (LATC &= ~0x20);
 11531  001AAC  9A8B               	bcf	3979,5,c	;volatile
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;interrupts.c: 245: (PR2 = 8);
 11535  001AAE  0E08               	movlw	8
 11536  001AB0  6ECB               	movwf	4043,c	;volatile
 11537                           
 11538                           ; BSR set to: 0
 11539                           ;interrupts.c: 246: RFcodePlace = 1;
 11540  001AB2  0E01               	movlw	1
 11541  001AB4  0100               	movlb	0	; () banked
 11542  001AB6  6FBE               	movwf	_RFcodePlace& (0+255),b
 11543                           
 11544                           ;interrupts.c: 247: RFcodeBit++;
 11545  001AB8  0100               	movlb	0	; () banked
 11546  001ABA  2BBD               	incf	_RFcodeBit& (0+255),f,b
 11547  001ABC  D785               	goto	L2
 11548  001ABE                     i2l6796:
 11549                           
 11550                           ; BSR set to: 0
 11551                           ;interrupts.c: 250: else
 11552                           ;interrupts.c: 251: {
 11553                           ;interrupts.c: 253: RFcodePlace = 1;
 11554  001ABE  0E01               	movlw	1
 11555  001AC0  0100               	movlb	0	; () banked
 11556  001AC2  6FBE               	movwf	_RFcodePlace& (0+255),b
 11557  001AC4  D029               	goto	i2l6830
 11558                           
 11559                           ; BSR set to: 0
 11560                           ;interrupts.c: 255: }
 11561                           ;interrupts.c: 256: }
 11562                           ;interrupts.c: 257: }
 11563                           ;interrupts.c: 258: }
 11564                           
 11565                           ; BSR set to: 0
 11566                           
 11567                           ; BSR set to: 0
 11568                           
 11569                           ; BSR set to: 0
 11570                           
 11571                           ; BSR set to: 0
 11572                           
 11573                           ; BSR set to: 0
 11574                           
 11575                           ; BSR set to: 0
 11576                           
 11577                           ;interrupts.c: 254: RFsendFlag = 0;
 11578  001AC6  D02C               	goto	i2l6832
 11579  001AC8                     i2l6798:
 11580                           
 11581                           ; BSR set to: 0
 11582                           ;interrupts.c: 259: else
 11583                           ;interrupts.c: 260: {
 11584                           ;interrupts.c: 262: if(RFcodePlace == 1)
 11585  001AC8  0100               	movlb	0	; () banked
 11586  001ACA  05BE               	decf	_RFcodePlace& (0+255),w,b
 11587  001ACC  A4D8               	btfss	status,2,c
 11588  001ACE  D005               	goto	i2l6806
 11589  001AD0                     i2l6800:
 11590                           
 11591                           ; BSR set to: 0
 11592                           ;interrupts.c: 263: {
 11593                           ;interrupts.c: 264: (LATC |= 0x20);
 11594  001AD0  8A8B               	bsf	3979,5,c	;volatile
 11595  001AD2  D777               	goto	i2l6694
 11596  001AD4                     i2l6804:
 11597                           
 11598                           ; BSR set to: 0
 11599                           ;interrupts.c: 266: RFcodePlace++;
 11600  001AD4  0100               	movlb	0	; () banked
 11601  001AD6  2BBE               	incf	_RFcodePlace& (0+255),f,b
 11602  001AD8  D777               	goto	L2
 11603  001ADA                     i2l6806:
 11604                           
 11605                           ; BSR set to: 0
 11606                           ;interrupts.c: 269: else if( RFcodePlace == 2)
 11607  001ADA  0E02               	movlw	2
 11608  001ADC  0100               	movlb	0	; () banked
 11609  001ADE  19BE               	xorwf	_RFcodePlace& (0+255),w,b
 11610  001AE0  A4D8               	btfss	status,2,c
 11611  001AE2  D012               	goto	i2l6820
 11612                           
 11613                           ; BSR set to: 0
 11614                           ;interrupts.c: 270: {
 11615                           ;interrupts.c: 271: (LATC &= ~0x20);
 11616  001AE4  9A8B               	bcf	3979,5,c	;volatile
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;interrupts.c: 272: (PR2 = 240);
 11620  001AE6  0EF0               	movlw	240
 11621  001AE8  6ECB               	movwf	4043,c	;volatile
 11622                           
 11623                           ; BSR set to: 0
 11624                           ;interrupts.c: 273: RFcodePlace++;
 11625  001AEA  0100               	movlb	0	; () banked
 11626  001AEC  2BBE               	incf	_RFcodePlace& (0+255),f,b
 11627                           
 11628                           ; BSR set to: 0
 11629                           ;interrupts.c: 274: Sendcount--;
 11630  001AEE  0100               	movlb	0	; () banked
 11631  001AF0  07C0               	decf	_Sendcount& (0+255),f,b	;volatile
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;interrupts.c: 275: if(Sendcount)
 11635  001AF2  0100               	movlb	0	; () banked
 11636  001AF4  51C0               	movf	_Sendcount& (0+255),w,b	;volatile
 11637  001AF6  B4D8               	btfsc	status,2,c
 11638  001AF8  D013               	goto	i2l6832
 11639                           
 11640                           ; BSR set to: 0
 11641                           ;interrupts.c: 276: {
 11642                           ;interrupts.c: 278: RFcodePlace = 1;
 11643  001AFA  0E01               	movlw	1
 11644  001AFC  0100               	movlb	0	; () banked
 11645  001AFE  6FBE               	movwf	_RFcodePlace& (0+255),b
 11646                           
 11647                           ;interrupts.c: 279: RFcodeBit = 0;
 11648  001B00  0E00               	movlw	0
 11649  001B02  0100               	movlb	0	; () banked
 11650  001B04  6FBD               	movwf	_RFcodeBit& (0+255),b
 11651                           
 11652                           ; BSR set to: 0
 11653                           ;interrupts.c: 280: }
 11654                           ;interrupts.c: 281: }
 11655  001B06  D00C               	goto	i2l6832
 11656  001B08                     i2l6820:
 11657                           
 11658                           ; BSR set to: 0
 11659                           ;interrupts.c: 282: else
 11660                           ;interrupts.c: 283: {
 11661                           ;interrupts.c: 285: ResetTimer3();
 11662  001B08  ECD1  F01E         	call	_ResetTimer3	;wreg free
 11663                           
 11664                           ;interrupts.c: 286: PIR2bits.TMR3IF = 0;
 11665  001B0C  92A1               	bcf	4001,1,c	;volatile
 11666                           
 11667                           ;interrupts.c: 287: Timer3_Postscaler = 0;
 11668  001B0E  0E00               	movlw	0
 11669  001B10  0100               	movlb	0	; () banked
 11670  001B12  6FC2               	movwf	_Timer3_Postscaler& (0+255),b
 11671                           
 11672                           ; BSR set to: 0
 11673                           ;interrupts.c: 288: (T3CONbits.TMR3ON = 1);
 11674  001B14  80B1               	bsf	4017,0,c	;volatile
 11675                           
 11676                           ; BSR set to: 0
 11677                           ;interrupts.c: 289: (T2CONbits.TMR2ON = 0);
 11678  001B16  94CA               	bcf	4042,2,c	;volatile
 11679  001B18                     i2l6830:
 11680                           
 11681                           ; BSR set to: 0
 11682                           ;interrupts.c: 290: RFsendFlag = 0;
 11683  001B18  0E00               	movlw	0
 11684  001B1A  0100               	movlb	0	; () banked
 11685  001B1C  6FBF               	movwf	_RFsendFlag& (0+255),b	;volatile
 11686                           
 11687                           ; BSR set to: 0
 11688                           
 11689                           ; BSR set to: 0
 11690  001B1E  D000               	goto	i2l6832
 11691  001B20                     i2l6832:
 11692                           
 11693                           ; BSR set to: 0
 11694                           ;interrupts.c: 291: }
 11695                           ;interrupts.c: 292: }
 11696                           ;interrupts.c: 293: PIR1bits.TMR2IF = 0;
 11697  001B20  929E               	bcf	3998,1,c	;volatile
 11698                           
 11699                           ; BSR set to: 0
 11700                           ;interrupts.c: 294: if(RFsendFlag)
 11701  001B22  0100               	movlb	0	; () banked
 11702  001B24  51BF               	movf	_RFsendFlag& (0+255),w,b	;volatile
 11703  001B26  B4D8               	btfsc	status,2,c
 11704  001B28  D002               	goto	i2l559
 11705                           
 11706                           ; BSR set to: 0
 11707                           ;interrupts.c: 295: {
 11708                           ;interrupts.c: 297: PIE1bits.TMR2IE = 1;
 11709  001B2A  829D               	bsf	3997,1,c	;volatile
 11710                           
 11711                           ; BSR set to: 0
 11712  001B2C  D000               	goto	i2l559
 11713  001B2E                     i2l559:
 11714                           
 11715                           ;interrupts.c: 298: }
 11716                           ;interrupts.c: 299: }
 11717                           ;interrupts.c: 301: }
 11718                           ;interrupts.c: 302: if(PIR2bits.TMR3IF)
 11719  001B2E  A2A1               	btfss	4001,1,c	;volatile
 11720  001B30  D00D               	goto	i2l6848
 11721                           
 11722                           ;interrupts.c: 303: {
 11723                           ;interrupts.c: 304: if(Timer3_Postscaler < 6)
 11724  001B32  0E06               	movlw	6
 11725  001B34  0100               	movlb	0	; () banked
 11726  001B36  61C2               	cpfslt	_Timer3_Postscaler& (0+255),b
 11727  001B38  D006               	goto	i2l6846
 11728                           
 11729                           ; BSR set to: 0
 11730                           ;interrupts.c: 305: {
 11731                           ;interrupts.c: 306: ResetTimer3();
 11732  001B3A  ECD1  F01E         	call	_ResetTimer3	;wreg free
 11733                           
 11734                           ;interrupts.c: 307: (T3CONbits.TMR3ON = 1);
 11735  001B3E  80B1               	bsf	4017,0,c	;volatile
 11736                           
 11737                           ;interrupts.c: 308: Timer3_Postscaler++;
 11738  001B40  0100               	movlb	0	; () banked
 11739  001B42  2BC2               	incf	_Timer3_Postscaler& (0+255),f,b
 11740                           
 11741                           ;interrupts.c: 309: }
 11742  001B44  D003               	goto	i2l6848
 11743  001B46                     i2l6846:
 11744                           
 11745                           ; BSR set to: 0
 11746                           ;interrupts.c: 310: else
 11747                           ;interrupts.c: 311: {
 11748                           ;interrupts.c: 316: Sent = 1;
 11749  001B46  0E01               	movlw	1
 11750  001B48  6E4B               	movwf	_Sent,c	;volatile
 11751                           
 11752                           ; BSR set to: 0
 11753  001B4A  D000               	goto	i2l6848
 11754  001B4C                     i2l6848:
 11755                           
 11756                           ;interrupts.c: 317: }
 11757                           ;interrupts.c: 318: }
 11758                           ;interrupts.c: 320: INTCONbits.GIE = 1;
 11759  001B4C  8EF2               	bsf	intcon,7,c	;volatile
 11760  001B4E  C088  FFF5         	movff	??_high_isr+17,tablat
 11761  001B52  C087  FFF8         	movff	??_high_isr+16,tblptru
 11762  001B56  C086  FFF7         	movff	??_high_isr+15,tblptrh
 11763  001B5A  C085  FFF6         	movff	??_high_isr+14,tblptrl
 11764  001B5E  C084  FFF4         	movff	??_high_isr+13,prodh
 11765  001B62  C083  FFF3         	movff	??_high_isr+12,prodl
 11766  001B66  C082  FFDA         	movff	??_high_isr+11,fsr2h
 11767  001B6A  C081  FFD9         	movff	??_high_isr+10,fsr2l
 11768  001B6E  C080  FFE2         	movff	??_high_isr+9,fsr1h
 11769  001B72  C07F  FFE1         	movff	??_high_isr+8,fsr1l
 11770  001B76  C07E  FFEA         	movff	??_high_isr+7,fsr0h
 11771  001B7A  C07D  FFE9         	movff	??_high_isr+6,fsr0l
 11772  001B7E  C07C  FFFB         	movff	??_high_isr+5,pclatu
 11773  001B82  C07B  FFFA         	movff	??_high_isr+4,pclath
 11774  001B86  0011               	retfie		f
 11775  001B88                     __end_of_high_isr:
 11776                           	opt stack 0
 11777                           pclatu	equ	0xFFB
 11778                           pclath	equ	0xFFA
 11779                           tblptru	equ	0xFF8
 11780                           tblptrh	equ	0xFF7
 11781                           tblptrl	equ	0xFF6
 11782                           tablat	equ	0xFF5
 11783                           prodh	equ	0xFF4
 11784                           prodl	equ	0xFF3
 11785                           intcon	equ	0xFF2
 11786                           intcon2	equ	0xFF1
 11787                           indf0	equ	0xFEF
 11788                           postinc0	equ	0xFEE
 11789                           plusw0	equ	0xFEB
 11790                           fsr0h	equ	0xFEA
 11791                           fsr0l	equ	0xFE9
 11792                           wreg	equ	0xFE8
 11793                           postdec1	equ	0xFE5
 11794                           fsr1h	equ	0xFE2
 11795                           fsr1l	equ	0xFE1
 11796                           bsr	equ	0xFE0
 11797                           indf2	equ	0xFDF
 11798                           postinc2	equ	0xFDE
 11799                           postdec2	equ	0xFDD
 11800                           plusw2	equ	0xFDB
 11801                           fsr2h	equ	0xFDA
 11802                           fsr2l	equ	0xFD9
 11803                           status	equ	0xFD8
 11804                           
 11805 ;; *************** function i2_ResetTimer0 *****************
 11806 ;; Defined at:
 11807 ;;		line 77 in file "Timer.c"
 11808 ;; Parameters:    Size  Location     Type
 11809 ;;		None
 11810 ;; Auto vars:     Size  Location     Type
 11811 ;;		None
 11812 ;; Return value:  Size  Location     Type
 11813 ;;		None               void
 11814 ;; Registers used:
 11815 ;;		wreg, status,2
 11816 ;; Tracked objects:
 11817 ;;		On entry : 0/0
 11818 ;;		On exit  : 0/0
 11819 ;;		Unchanged: 0/0
 11820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11825 ;;Total ram usage:        0 bytes
 11826 ;; Hardware stack levels used:    1
 11827 ;; This function calls:
 11828 ;;		Nothing
 11829 ;; This function is called by:
 11830 ;;		_high_isr
 11831 ;; This function uses a non-reentrant model
 11832 ;;
 11833                           
 11834                           	psect	text62
 11835  003D8E                     __ptext62:
 11836                           	opt stack 0
 11837  003D8E                     i2_ResetTimer0:
 11838                           	opt stack 19
 11839                           
 11840                           ;Timer.c: 83: TMR0H = 0;
 11841                           
 11842                           ;incstack = 0
 11843  003D8E  0E00               	movlw	0
 11844  003D90  6ED7               	movwf	4055,c	;volatile
 11845                           
 11846                           ;Timer.c: 84: TMR0L = 2;
 11847  003D92  0E02               	movlw	2
 11848  003D94  6ED6               	movwf	4054,c	;volatile
 11849  003D96  0012               	return		;funcret
 11850  003D98                     __end_ofi2_ResetTimer0:
 11851                           	opt stack 0
 11852                           pclatu	equ	0xFFB
 11853                           pclath	equ	0xFFA
 11854                           tblptru	equ	0xFF8
 11855                           tblptrh	equ	0xFF7
 11856                           tblptrl	equ	0xFF6
 11857                           tablat	equ	0xFF5
 11858                           prodh	equ	0xFF4
 11859                           prodl	equ	0xFF3
 11860                           intcon	equ	0xFF2
 11861                           intcon2	equ	0xFF1
 11862                           indf0	equ	0xFEF
 11863                           postinc0	equ	0xFEE
 11864                           plusw0	equ	0xFEB
 11865                           fsr0h	equ	0xFEA
 11866                           fsr0l	equ	0xFE9
 11867                           wreg	equ	0xFE8
 11868                           postdec1	equ	0xFE5
 11869                           fsr1h	equ	0xFE2
 11870                           fsr1l	equ	0xFE1
 11871                           bsr	equ	0xFE0
 11872                           indf2	equ	0xFDF
 11873                           postinc2	equ	0xFDE
 11874                           postdec2	equ	0xFDD
 11875                           plusw2	equ	0xFDB
 11876                           fsr2h	equ	0xFDA
 11877                           fsr2l	equ	0xFD9
 11878                           status	equ	0xFD8
 11879                           
 11880 ;; *************** function i2_ReadIRpin *****************
 11881 ;; Defined at:
 11882 ;;		line 93 in file "IR.c"
 11883 ;; Parameters:    Size  Location     Type
 11884 ;;		None
 11885 ;; Auto vars:     Size  Location     Type
 11886 ;;		None
 11887 ;; Return value:  Size  Location     Type
 11888 ;;                  1    wreg      unsigned char 
 11889 ;; Registers used:
 11890 ;;		wreg
 11891 ;; Tracked objects:
 11892 ;;		On entry : 0/0
 11893 ;;		On exit  : 0/0
 11894 ;;		Unchanged: 0/0
 11895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11900 ;;Total ram usage:        0 bytes
 11901 ;; Hardware stack levels used:    1
 11902 ;; This function calls:
 11903 ;;		Nothing
 11904 ;; This function is called by:
 11905 ;;		_high_isr
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text63
 11910  003D46                     __ptext63:
 11911                           	opt stack 0
 11912  003D46                     i2_ReadIRpin:
 11913                           	opt stack 19
 11914                           
 11915                           ;IR.c: 96: if((PORTB & 0x10) == 0x10)
 11916                           
 11917                           ;incstack = 0
 11918  003D46  A881               	btfss	3969,4,c	;volatile
 11919  003D48  D002               	goto	i2l4940
 11920                           
 11921                           ;IR.c: 97: {
 11922                           ;IR.c: 98: return (1);
 11923  003D4A  0E01               	movlw	1
 11924                           
 11925                           ;IR.c: 99: }
 11926  003D4C  0012               	return	
 11927  003D4E                     i2l4940:
 11928                           
 11929                           ;IR.c: 100: else
 11930                           ;IR.c: 101: {
 11931                           ;IR.c: 102: return 0;
 11932  003D4E  0E00               	movlw	0
 11933  003D50  0012               	return	
 11934  003D52  0012               	return		;funcret
 11935  003D54                     __end_ofi2_ReadIRpin:
 11936                           	opt stack 0
 11937                           pclatu	equ	0xFFB
 11938                           pclath	equ	0xFFA
 11939                           tblptru	equ	0xFF8
 11940                           tblptrh	equ	0xFF7
 11941                           tblptrl	equ	0xFF6
 11942                           tablat	equ	0xFF5
 11943                           prodh	equ	0xFF4
 11944                           prodl	equ	0xFF3
 11945                           intcon	equ	0xFF2
 11946                           intcon2	equ	0xFF1
 11947                           indf0	equ	0xFEF
 11948                           postinc0	equ	0xFEE
 11949                           plusw0	equ	0xFEB
 11950                           fsr0h	equ	0xFEA
 11951                           fsr0l	equ	0xFE9
 11952                           wreg	equ	0xFE8
 11953                           postdec1	equ	0xFE5
 11954                           fsr1h	equ	0xFE2
 11955                           fsr1l	equ	0xFE1
 11956                           bsr	equ	0xFE0
 11957                           indf2	equ	0xFDF
 11958                           postinc2	equ	0xFDE
 11959                           postdec2	equ	0xFDD
 11960                           plusw2	equ	0xFDB
 11961                           fsr2h	equ	0xFDA
 11962                           fsr2l	equ	0xFD9
 11963                           status	equ	0xFD8
 11964                           
 11965 ;; *************** function _UseIRCode *****************
 11966 ;; Defined at:
 11967 ;;		line 265 in file "IR.c"
 11968 ;; Parameters:    Size  Location     Type
 11969 ;;  Code            2   17[BANK0 ] PTR unsigned char 
 11970 ;;		 -> IR_New_Code(1), 
 11971 ;;  NEC             4   19[BANK0 ] unsigned long 
 11972 ;; Auto vars:     Size  Location     Type
 11973 ;;  i               1   69[COMRAM] unsigned char 
 11974 ;; Return value:  Size  Location     Type
 11975 ;;		None               void
 11976 ;; Registers used:
 11977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11978 ;; Tracked objects:
 11979 ;;		On entry : 0/0
 11980 ;;		On exit  : 0/0
 11981 ;;		Unchanged: 0/0
 11982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11983 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11986 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11987 ;;Total ram usage:        8 bytes
 11988 ;; Hardware stack levels used:    1
 11989 ;; Hardware stack levels required when called:    5
 11990 ;; This function calls:
 11991 ;;		_LEDTimerON
 11992 ;;		_ReadPushButton
 11993 ;;		_SendRF_wait
 11994 ;;		i2_SyncGlobalToEEPROM
 11995 ;;		i2_delayUS
 11996 ;; This function is called by:
 11997 ;;		_high_isr
 11998 ;; This function uses a non-reentrant model
 11999 ;;
 12000                           
 12001                           	psect	text64
 12002  0025CA                     __ptext64:
 12003                           	opt stack 0
 12004  0025CA                     _UseIRCode:
 12005                           	opt stack 14
 12006                           
 12007                           ;IR.c: 267: unsigned char i = 0;
 12008                           
 12009                           ;incstack = 0
 12010  0025CA  0E00               	movlw	0
 12011  0025CC  6E46               	movwf	UseIRCode@i,c
 12012                           
 12013                           ;IR.c: 269: if(*Code == 2)
 12014  0025CE  C071  FFD9         	movff	UseIRCode@Code,fsr2l
 12015  0025D2  C072  FFDA         	movff	UseIRCode@Code+1,fsr2h
 12016  0025D6  0E02               	movlw	2
 12017  0025D8  18DE               	xorwf	postinc2,w,c
 12018  0025DA  A4D8               	btfss	status,2,c
 12019  0025DC  D01A               	goto	i2l6500
 12020                           
 12021                           ;IR.c: 270: {
 12022                           ;IR.c: 272: if(NEC == Global.NECcode)
 12023  0025DE  0100               	movlb	0	; () banked
 12024  0025E0  5173               	movf	UseIRCode@NEC& (0+255),w,b
 12025  0025E2  0100               	movlb	0	; () banked
 12026  0025E4  19B4               	xorwf	(_Global+1)& (0+255),w,b
 12027  0025E6  E10F               	bnz	i2u682_41
 12028  0025E8  0100               	movlb	0	; () banked
 12029  0025EA  5174               	movf	(UseIRCode@NEC+1)& (0+255),w,b
 12030  0025EC  0100               	movlb	0	; () banked
 12031  0025EE  19B5               	xorwf	(_Global+2)& (0+255),w,b
 12032  0025F0  E10A               	bnz	i2u682_41
 12033  0025F2  0100               	movlb	0	; () banked
 12034  0025F4  5175               	movf	(UseIRCode@NEC+2)& (0+255),w,b
 12035  0025F6  0100               	movlb	0	; () banked
 12036  0025F8  19B6               	xorwf	(_Global+3)& (0+255),w,b
 12037  0025FA  E105               	bnz	i2u682_41
 12038  0025FC  0100               	movlb	0	; () banked
 12039  0025FE  5176               	movf	(UseIRCode@NEC+3)& (0+255),w,b
 12040  002600  0100               	movlb	0	; () banked
 12041  002602  19B7               	xorwf	(_Global+4)& (0+255),w,b
 12042  002604  A4D8               	btfss	status,2,c
 12043  002606                     i2u682_41:
 12044  002606  D07C               	goto	i2l6550
 12045                           
 12046                           ; BSR set to: 0
 12047                           ;IR.c: 273: {
 12048                           ;IR.c: 274: (LATC |= 0x02);
 12049  002608  828B               	bsf	3979,1,c	;volatile
 12050                           
 12051                           ;IR.c: 275: (LATC |= 0x04);
 12052  00260A  848B               	bsf	3979,2,c	;volatile
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;IR.c: 276: LEDTimerON();
 12056  00260C  ECB7  F01E         	call	_LEDTimerON	;wreg free
 12057                           
 12058                           ;IR.c: 277: }
 12059                           ;IR.c: 278: }
 12060  002610  D077               	goto	i2l6550
 12061  002612                     i2l6500:
 12062                           
 12063                           ;IR.c: 279: else
 12064                           ;IR.c: 280: {
 12065                           ;IR.c: 282: if(ReadPushButton())
 12066  002612  ECAA  F01E         	call	_ReadPushButton	;wreg free
 12067  002616  0900               	iorlw	0
 12068  002618  B4D8               	btfsc	status,2,c
 12069  00261A  D04B               	goto	i2l6538
 12070                           
 12071                           ;IR.c: 283: {
 12072                           ;IR.c: 284: Global.NECcode = NEC;
 12073  00261C  C073  F0B4         	movff	UseIRCode@NEC,_Global+1
 12074  002620  C074  F0B5         	movff	UseIRCode@NEC+1,_Global+2
 12075  002624  C075  F0B6         	movff	UseIRCode@NEC+2,_Global+3
 12076  002628  C076  F0B7         	movff	UseIRCode@NEC+3,_Global+4
 12077                           
 12078                           ;IR.c: 285: if(SyncGlobalToEEPROM())
 12079  00262C  EC78  F01C         	call	i2_SyncGlobalToEEPROM	;wreg free
 12080  002630  0900               	iorlw	0
 12081  002632  B4D8               	btfsc	status,2,c
 12082  002634  D01F               	goto	i2l6522
 12083                           
 12084                           ;IR.c: 286: {
 12085                           ;IR.c: 288: for(i =0;i<10;i++)
 12086  002636  0E00               	movlw	0
 12087  002638  6E46               	movwf	UseIRCode@i,c
 12088  00263A                     i2l6508:
 12089  00263A  0E09               	movlw	9
 12090  00263C  6446               	cpfsgt	UseIRCode@i,c
 12091  00263E  D001               	goto	i2l6512
 12092  002640  D05F               	goto	i2l6550
 12093  002642                     i2l6512:
 12094                           
 12095                           ;IR.c: 289: {
 12096                           ;IR.c: 290: (LATC |= 0x04);
 12097  002642  848B               	bsf	3979,2,c	;volatile
 12098                           
 12099                           ;IR.c: 291: delayUS(10000);
 12100  002644  0E10               	movlw	16
 12101  002646  6E14               	movwf	i2delayUS@US,c
 12102  002648  0E27               	movlw	39
 12103  00264A  6E15               	movwf	i2delayUS@US+1,c
 12104  00264C  0E00               	movlw	0
 12105  00264E  6E16               	movwf	i2delayUS@US+2,c
 12106  002650  0E00               	movlw	0
 12107  002652  6E17               	movwf	i2delayUS@US+3,c
 12108  002654  EC09  F01C         	call	i2_delayUS	;wreg free
 12109                           
 12110                           ;IR.c: 292: (LATC &= ~0x04);
 12111  002658  948B               	bcf	3979,2,c	;volatile
 12112                           
 12113                           ;IR.c: 293: delayUS(10000);
 12114  00265A  0E10               	movlw	16
 12115  00265C  6E14               	movwf	i2delayUS@US,c
 12116  00265E  0E27               	movlw	39
 12117  002660  6E15               	movwf	i2delayUS@US+1,c
 12118  002662  0E00               	movlw	0
 12119  002664  6E16               	movwf	i2delayUS@US+2,c
 12120  002666  0E00               	movlw	0
 12121  002668  6E17               	movwf	i2delayUS@US+3,c
 12122  00266A  EC09  F01C         	call	i2_delayUS	;wreg free
 12123  00266E  2A46               	incf	UseIRCode@i,f,c
 12124  002670  D7E4               	goto	i2l6508
 12125                           
 12126                           ;IR.c: 294: }
 12127                           ;IR.c: 295: }
 12128  002672  D046               	goto	i2l6550
 12129  002674                     i2l6522:
 12130                           
 12131                           ;IR.c: 296: else
 12132                           ;IR.c: 297: {
 12133                           ;IR.c: 299: for(i =0;i<10;i++)
 12134  002674  0E00               	movlw	0
 12135  002676  6E46               	movwf	UseIRCode@i,c
 12136  002678                     i2l6524:
 12137  002678  0E09               	movlw	9
 12138  00267A  6446               	cpfsgt	UseIRCode@i,c
 12139  00267C  D001               	goto	i2l6528
 12140  00267E  D040               	goto	i2l6550
 12141  002680                     i2l6528:
 12142                           
 12143                           ;IR.c: 300: {
 12144                           ;IR.c: 301: (LATC |= 0x02);
 12145  002680  828B               	bsf	3979,1,c	;volatile
 12146                           
 12147                           ;IR.c: 302: delayUS(10000);
 12148  002682  0E10               	movlw	16
 12149  002684  6E14               	movwf	i2delayUS@US,c
 12150  002686  0E27               	movlw	39
 12151  002688  6E15               	movwf	i2delayUS@US+1,c
 12152  00268A  0E00               	movlw	0
 12153  00268C  6E16               	movwf	i2delayUS@US+2,c
 12154  00268E  0E00               	movlw	0
 12155  002690  6E17               	movwf	i2delayUS@US+3,c
 12156  002692  EC09  F01C         	call	i2_delayUS	;wreg free
 12157                           
 12158                           ;IR.c: 303: (LATC &= ~0x02);
 12159  002696  928B               	bcf	3979,1,c	;volatile
 12160                           
 12161                           ;IR.c: 304: delayUS(10000);
 12162  002698  0E10               	movlw	16
 12163  00269A  6E14               	movwf	i2delayUS@US,c
 12164  00269C  0E27               	movlw	39
 12165  00269E  6E15               	movwf	i2delayUS@US+1,c
 12166  0026A0  0E00               	movlw	0
 12167  0026A2  6E16               	movwf	i2delayUS@US+2,c
 12168  0026A4  0E00               	movlw	0
 12169  0026A6  6E17               	movwf	i2delayUS@US+3,c
 12170  0026A8  EC09  F01C         	call	i2_delayUS	;wreg free
 12171  0026AC  2A46               	incf	UseIRCode@i,f,c
 12172  0026AE  D7E4               	goto	i2l6524
 12173                           
 12174                           ;IR.c: 305: }
 12175                           ;IR.c: 306: }
 12176                           ;IR.c: 307: }
 12177  0026B0  D027               	goto	i2l6550
 12178  0026B2                     i2l6538:
 12179                           
 12180                           ;IR.c: 308: else
 12181                           ;IR.c: 309: {
 12182                           ;IR.c: 310: if(NEC == Global.NECcode)
 12183  0026B2  0100               	movlb	0	; () banked
 12184  0026B4  5173               	movf	UseIRCode@NEC& (0+255),w,b
 12185  0026B6  0100               	movlb	0	; () banked
 12186  0026B8  19B4               	xorwf	(_Global+1)& (0+255),w,b
 12187  0026BA  E11E               	bnz	i2l6546
 12188  0026BC  0100               	movlb	0	; () banked
 12189  0026BE  5174               	movf	(UseIRCode@NEC+1)& (0+255),w,b
 12190  0026C0  0100               	movlb	0	; () banked
 12191  0026C2  19B5               	xorwf	(_Global+2)& (0+255),w,b
 12192  0026C4  E119               	bnz	i2l6546
 12193  0026C6  0100               	movlb	0	; () banked
 12194  0026C8  5175               	movf	(UseIRCode@NEC+2)& (0+255),w,b
 12195  0026CA  0100               	movlb	0	; () banked
 12196  0026CC  19B6               	xorwf	(_Global+3)& (0+255),w,b
 12197  0026CE  E114               	bnz	i2l6546
 12198  0026D0  0100               	movlb	0	; () banked
 12199  0026D2  5176               	movf	(UseIRCode@NEC+3)& (0+255),w,b
 12200  0026D4  0100               	movlb	0	; () banked
 12201  0026D6  19B7               	xorwf	(_Global+4)& (0+255),w,b
 12202  0026D8  A4D8               	btfss	status,2,c
 12203  0026DA  D00E               	goto	i2l6546
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;IR.c: 311: {
 12207                           ;IR.c: 312: SendRF_wait(ChannelF,12,8);
 12208  0026DC  0EC8               	movlw	low _ChannelF
 12209  0026DE  6E19               	movwf	SendRF_wait@Code,c
 12210  0026E0  0E00               	movlw	high _ChannelF
 12211  0026E2  6E1A               	movwf	SendRF_wait@Code+1,c
 12212  0026E4  0E0C               	movlw	12
 12213  0026E6  6E1B               	movwf	SendRF_wait@size,c
 12214  0026E8  0E08               	movlw	8
 12215  0026EA  6E1C               	movwf	SendRF_wait@amount,c
 12216  0026EC  EC0B  F01E         	call	_SendRF_wait	;wreg free
 12217                           
 12218                           ;IR.c: 313: (LATC |= 0x04);
 12219  0026F0  848B               	bsf	3979,2,c	;volatile
 12220                           
 12221                           ;IR.c: 314: LEDTimerON();
 12222  0026F2  ECB7  F01E         	call	_LEDTimerON	;wreg free
 12223                           
 12224                           ;IR.c: 315: }
 12225  0026F6  D004               	goto	i2l6550
 12226  0026F8                     i2l6546:
 12227                           
 12228                           ;IR.c: 316: else
 12229                           ;IR.c: 317: {
 12230                           ;IR.c: 318: (LATC |= 0x02);
 12231  0026F8  828B               	bsf	3979,1,c	;volatile
 12232                           
 12233                           ;IR.c: 319: LEDTimerON();
 12234  0026FA  ECB7  F01E         	call	_LEDTimerON	;wreg free
 12235  0026FE  D000               	goto	i2l6550
 12236  002700                     i2l6550:
 12237                           
 12238                           ;IR.c: 320: }
 12239                           ;IR.c: 321: }
 12240                           ;IR.c: 322: }
 12241                           ;IR.c: 324: *Code = 0;
 12242  002700  C071  FFD9         	movff	UseIRCode@Code,fsr2l
 12243  002704  C072  FFDA         	movff	UseIRCode@Code+1,fsr2h
 12244  002708  0E00               	movlw	0
 12245  00270A  6EDF               	movwf	indf2,c
 12246                           
 12247                           ;IR.c: 325: INTCONbits.RBIE = 1;
 12248  00270C  86F2               	bsf	intcon,3,c	;volatile
 12249  00270E  0012               	return		;funcret
 12250  002710                     __end_of_UseIRCode:
 12251                           	opt stack 0
 12252                           pclatu	equ	0xFFB
 12253                           pclath	equ	0xFFA
 12254                           tblptru	equ	0xFF8
 12255                           tblptrh	equ	0xFF7
 12256                           tblptrl	equ	0xFF6
 12257                           tablat	equ	0xFF5
 12258                           prodh	equ	0xFF4
 12259                           prodl	equ	0xFF3
 12260                           intcon	equ	0xFF2
 12261                           intcon2	equ	0xFF1
 12262                           indf0	equ	0xFEF
 12263                           postinc0	equ	0xFEE
 12264                           plusw0	equ	0xFEB
 12265                           fsr0h	equ	0xFEA
 12266                           fsr0l	equ	0xFE9
 12267                           wreg	equ	0xFE8
 12268                           postdec1	equ	0xFE5
 12269                           fsr1h	equ	0xFE2
 12270                           fsr1l	equ	0xFE1
 12271                           bsr	equ	0xFE0
 12272                           indf2	equ	0xFDF
 12273                           postinc2	equ	0xFDE
 12274                           postdec2	equ	0xFDD
 12275                           plusw2	equ	0xFDB
 12276                           fsr2h	equ	0xFDA
 12277                           fsr2l	equ	0xFD9
 12278                           status	equ	0xFD8
 12279                           
 12280 ;; *************** function i2_delayUS *****************
 12281 ;; Defined at:
 12282 ;;		line 49 in file "MISC.c"
 12283 ;; Parameters:    Size  Location     Type
 12284 ;;  US              4   19[COMRAM] long 
 12285 ;; Auto vars:     Size  Location     Type
 12286 ;;  delayUS         4   24[COMRAM] long 
 12287 ;;  delayUS         1   28[COMRAM] unsigned char 
 12288 ;; Return value:  Size  Location     Type
 12289 ;;		None               void
 12290 ;; Registers used:
 12291 ;;		wreg, status,2, status,0
 12292 ;; Tracked objects:
 12293 ;;		On entry : 0/0
 12294 ;;		On exit  : 0/0
 12295 ;;		Unchanged: 0/0
 12296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12298 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12300 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12301 ;;Total ram usage:       10 bytes
 12302 ;; Hardware stack levels used:    1
 12303 ;; This function calls:
 12304 ;;		Nothing
 12305 ;; This function is called by:
 12306 ;;		_UseIRCode
 12307 ;; This function uses a non-reentrant model
 12308 ;;
 12309                           
 12310                           	psect	text65
 12311  003812                     __ptext65:
 12312                           	opt stack 0
 12313  003812                     i2_delayUS:
 12314                           	opt stack 18
 12315                           
 12316                           ;MISC.c: 51: long i;
 12317                           ;MISC.c: 52: unsigned char j;
 12318                           ;MISC.c: 53: for(i=0;i<US;i+=5)
 12319                           
 12320                           ;incstack = 0
 12321  003812  0E00               	movlw	0
 12322  003814  6E19               	movwf	i2delayUS@i,c
 12323  003816  0E00               	movlw	0
 12324  003818  6E1A               	movwf	i2delayUS@i+1,c
 12325  00381A  0E00               	movlw	0
 12326  00381C  6E1B               	movwf	i2delayUS@i+2,c
 12327  00381E  0E00               	movlw	0
 12328  003820  6E1C               	movwf	i2delayUS@i+3,c
 12329  003822  D00F               	goto	i2l95
 12330  003824                     i2l6408:
 12331                           
 12332                           ;MISC.c: 54: {
 12333                           ;MISC.c: 55: for(j=0;j<64;j++)
 12334  003824  0E00               	movlw	0
 12335  003826  6E1D               	movwf	i2delayUS@j,c
 12336  003828                     i2l6410:
 12337  003828  0E3F               	movlw	63
 12338  00382A  641D               	cpfsgt	i2delayUS@j,c
 12339  00382C  D001               	goto	i2l97
 12340  00382E  D003               	goto	i2l6418
 12341  003830                     i2l97:
 12342                           
 12343                           ;MISC.c: 56: {
 12344                           ;MISC.c: 57: __nop();
 12345  003830  F000               	nop	
 12346  003832  2A1D               	incf	i2delayUS@j,f,c
 12347  003834  D7F9               	goto	i2l6410
 12348  003836                     i2l6418:
 12349  003836  0E05               	movlw	5
 12350  003838  2619               	addwf	i2delayUS@i,f,c
 12351  00383A  0E00               	movlw	0
 12352  00383C  221A               	addwfc	i2delayUS@i+1,f,c
 12353  00383E  221B               	addwfc	i2delayUS@i+2,f,c
 12354  003840  221C               	addwfc	i2delayUS@i+3,f,c
 12355  003842                     i2l95:
 12356  003842  5014               	movf	i2delayUS@US,w,c
 12357  003844  5C19               	subwf	i2delayUS@i,w,c
 12358  003846  5015               	movf	i2delayUS@US+1,w,c
 12359  003848  581A               	subwfb	i2delayUS@i+1,w,c
 12360  00384A  5016               	movf	i2delayUS@US+2,w,c
 12361  00384C  581B               	subwfb	i2delayUS@i+2,w,c
 12362  00384E  501C               	movf	i2delayUS@i+3,w,c
 12363  003850  0A80               	xorlw	128
 12364  003852  6E18               	movwf	??i2_delayUS& (0+255),c
 12365  003854  5017               	movf	i2delayUS@US+3,w,c
 12366  003856  0A80               	xorlw	128
 12367  003858  5818               	subwfb	??i2_delayUS& (0+255),w,c
 12368  00385A  A0D8               	btfss	status,0,c
 12369  00385C  D7E3               	goto	i2l6408
 12370  00385E  0012               	return		;funcret
 12371  003860                     __end_ofi2_delayUS:
 12372                           	opt stack 0
 12373                           pclatu	equ	0xFFB
 12374                           pclath	equ	0xFFA
 12375                           tblptru	equ	0xFF8
 12376                           tblptrh	equ	0xFF7
 12377                           tblptrl	equ	0xFF6
 12378                           tablat	equ	0xFF5
 12379                           prodh	equ	0xFF4
 12380                           prodl	equ	0xFF3
 12381                           intcon	equ	0xFF2
 12382                           intcon2	equ	0xFF1
 12383                           indf0	equ	0xFEF
 12384                           postinc0	equ	0xFEE
 12385                           plusw0	equ	0xFEB
 12386                           fsr0h	equ	0xFEA
 12387                           fsr0l	equ	0xFE9
 12388                           wreg	equ	0xFE8
 12389                           postdec1	equ	0xFE5
 12390                           fsr1h	equ	0xFE2
 12391                           fsr1l	equ	0xFE1
 12392                           bsr	equ	0xFE0
 12393                           indf2	equ	0xFDF
 12394                           postinc2	equ	0xFDE
 12395                           postdec2	equ	0xFDD
 12396                           plusw2	equ	0xFDB
 12397                           fsr2h	equ	0xFDA
 12398                           fsr2l	equ	0xFD9
 12399                           status	equ	0xFD8
 12400                           
 12401 ;; *************** function i2_SyncGlobalToEEPROM *****************
 12402 ;; Defined at:
 12403 ;;		line 158 in file "EEPROM.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;		None
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;		None
 12408 ;; Return value:  Size  Location     Type
 12409 ;;                  1    wreg      unsigned char 
 12410 ;; Registers used:
 12411 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 12412 ;; Tracked objects:
 12413 ;;		On entry : 0/0
 12414 ;;		On exit  : 0/0
 12415 ;;		Unchanged: 0/0
 12416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12421 ;;Total ram usage:        0 bytes
 12422 ;; Hardware stack levels used:    1
 12423 ;; Hardware stack levels required when called:    4
 12424 ;; This function calls:
 12425 ;;		i2_SetEEPROM
 12426 ;; This function is called by:
 12427 ;;		_UseIRCode
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           	psect	text66
 12432  0038F0                     __ptext66:
 12433                           	opt stack 0
 12434  0038F0                     i2_SyncGlobalToEEPROM:
 12435                           	opt stack 14
 12436                           
 12437                           ;EEPROM.c: 160: if(!SetEEPROM(Global,0x00000003))
 12438                           
 12439                           ;incstack = 0
 12440  0038F0  EE20  F0B3         	lfsr	2,_Global
 12441  0038F4  EE00  F068         	lfsr	0,i2SetEEPROM@Temp
 12442  0038F8  0E04               	movlw	4
 12443  0038FA                     i2u678_41:
 12444  0038FA  CFDB FFEB          	movff	plusw2,plusw0
 12445  0038FE  06E8               	decf	wreg,f,c
 12446  003900  E2FC               	bc	i2u678_41
 12447  003902  0E03               	movlw	3
 12448  003904  0100               	movlb	0	; () banked
 12449  003906  6F6D               	movwf	i2SetEEPROM@burn& (0+255),b
 12450  003908  0E00               	movlw	0
 12451  00390A  6F6E               	movwf	(i2SetEEPROM@burn+1)& (0+255),b
 12452  00390C  0E00               	movlw	0
 12453  00390E  6F6F               	movwf	(i2SetEEPROM@burn+2)& (0+255),b
 12454  003910  0E00               	movlw	0
 12455  003912  6F70               	movwf	(i2SetEEPROM@burn+3)& (0+255),b
 12456  003914  EC84  F01A         	call	i2_SetEEPROM	;wreg free
 12457  003918  0100               	movlb	0	; () banked
 12458  00391A  5168               	movf	?i2_SetEEPROM& (0+255),w,b
 12459  00391C  0100               	movlb	0	; () banked
 12460  00391E  1169               	iorwf	(?i2_SetEEPROM+1)& (0+255),w,b
 12461  003920  0100               	movlb	0	; () banked
 12462  003922  116A               	iorwf	(?i2_SetEEPROM+2)& (0+255),w,b
 12463  003924  0100               	movlb	0	; () banked
 12464  003926  116B               	iorwf	(?i2_SetEEPROM+3)& (0+255),w,b
 12465  003928  A4D8               	btfss	status,2,c
 12466  00392A  D002               	goto	i2l6426
 12467                           
 12468                           ; BSR set to: 0
 12469                           ;EEPROM.c: 161: {
 12470                           ;EEPROM.c: 162: return 1;
 12471  00392C  0E01               	movlw	1
 12472                           
 12473                           ; BSR set to: 0
 12474  00392E  0012               	return	
 12475  003930                     i2l6426:
 12476                           
 12477                           ; BSR set to: 0
 12478                           ;EEPROM.c: 163: }
 12479                           ;EEPROM.c: 164: return 0;
 12480  003930  0E00               	movlw	0
 12481  003932  0012               	return	
 12482                           
 12483                           ; BSR set to: 0
 12484                           
 12485                           ; BSR set to: 0
 12486  003934  0012               	return		;funcret
 12487  003936                     __end_ofi2_SyncGlobalToEEPROM:
 12488                           	opt stack 0
 12489                           pclatu	equ	0xFFB
 12490                           pclath	equ	0xFFA
 12491                           tblptru	equ	0xFF8
 12492                           tblptrh	equ	0xFF7
 12493                           tblptrl	equ	0xFF6
 12494                           tablat	equ	0xFF5
 12495                           prodh	equ	0xFF4
 12496                           prodl	equ	0xFF3
 12497                           intcon	equ	0xFF2
 12498                           intcon2	equ	0xFF1
 12499                           indf0	equ	0xFEF
 12500                           postinc0	equ	0xFEE
 12501                           plusw0	equ	0xFEB
 12502                           fsr0h	equ	0xFEA
 12503                           fsr0l	equ	0xFE9
 12504                           wreg	equ	0xFE8
 12505                           postdec1	equ	0xFE5
 12506                           fsr1h	equ	0xFE2
 12507                           fsr1l	equ	0xFE1
 12508                           bsr	equ	0xFE0
 12509                           indf2	equ	0xFDF
 12510                           postinc2	equ	0xFDE
 12511                           postdec2	equ	0xFDD
 12512                           plusw2	equ	0xFDB
 12513                           fsr2h	equ	0xFDA
 12514                           fsr2l	equ	0xFD9
 12515                           status	equ	0xFD8
 12516                           
 12517 ;; *************** function i2_SetEEPROM *****************
 12518 ;; Defined at:
 12519 ;;		line 131 in file "EEPROM.c"
 12520 ;; Parameters:    Size  Location     Type
 12521 ;;  Temp            5    8[BANK0 ] struct EEdata
 12522 ;;  burn            4   13[BANK0 ] unsigned long 
 12523 ;; Auto vars:     Size  Location     Type
 12524 ;;  SetEEPROM       4   64[COMRAM] unsigned long 
 12525 ;; Return value:  Size  Location     Type
 12526 ;;                  4    8[BANK0 ] unsigned long 
 12527 ;; Registers used:
 12528 ;;		wreg, status,2, status,0, cstack
 12529 ;; Tracked objects:
 12530 ;;		On entry : 0/0
 12531 ;;		On exit  : 0/0
 12532 ;;		Unchanged: 0/0
 12533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12534 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12535 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12537 ;;      Totals:         4       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12538 ;;Total ram usage:       13 bytes
 12539 ;; Hardware stack levels used:    1
 12540 ;; Hardware stack levels required when called:    3
 12541 ;; This function calls:
 12542 ;;		i2_SetMemoryChar
 12543 ;;		i2_SetMemoryLong
 12544 ;; This function is called by:
 12545 ;;		i2_SyncGlobalToEEPROM
 12546 ;; This function uses a non-reentrant model
 12547 ;;
 12548                           
 12549                           	psect	text67
 12550  003508                     __ptext67:
 12551                           	opt stack 0
 12552  003508                     i2_SetEEPROM:
 12553                           	opt stack 14
 12554                           
 12555                           ;EEPROM.c: 133: unsigned long fail = 0;
 12556                           
 12557                           ; BSR set to: 0
 12558                           ;incstack = 0
 12559  003508  0E00               	movlw	0
 12560  00350A  6E41               	movwf	i2SetEEPROM@fail,c
 12561  00350C  0E00               	movlw	0
 12562  00350E  6E42               	movwf	i2SetEEPROM@fail+1,c
 12563  003510  0E00               	movlw	0
 12564  003512  6E43               	movwf	i2SetEEPROM@fail+2,c
 12565  003514  0E00               	movlw	0
 12566  003516  6E44               	movwf	i2SetEEPROM@fail+3,c
 12567                           
 12568                           ;EEPROM.c: 134: if(burn & 0x00000001)
 12569  003518  0100               	movlb	0	; () banked
 12570  00351A  A16D               	btfss	i2SetEEPROM@burn& (0+255),0,b
 12571  00351C  D010               	goto	i2l6184
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;EEPROM.c: 135: {
 12575                           ;EEPROM.c: 136: if(!SetMemoryChar(Temp.BlueToothFlag,0))
 12576  00351E  0E00               	movlw	0
 12577  003520  6E1D               	movwf	i2SetMemoryChar@AddressFirst,c
 12578  003522  0100               	movlb	0	; () banked
 12579  003524  5168               	movf	i2SetEEPROM@Temp& (0+255),w,b
 12580  003526  ECAE  F01D         	call	i2_SetMemoryChar
 12581  00352A  0900               	iorlw	0
 12582  00352C  A4D8               	btfss	status,2,c
 12583  00352E  D007               	goto	i2l6184
 12584                           
 12585                           ;EEPROM.c: 137: {
 12586                           ;EEPROM.c: 139: fail += 0x00000001;
 12587  003530  0E01               	movlw	1
 12588  003532  2641               	addwf	i2SetEEPROM@fail,f,c
 12589  003534  0E00               	movlw	0
 12590  003536  2242               	addwfc	i2SetEEPROM@fail+1,f,c
 12591  003538  2243               	addwfc	i2SetEEPROM@fail+2,f,c
 12592  00353A  2244               	addwfc	i2SetEEPROM@fail+3,f,c
 12593  00353C  D000               	goto	i2l6184
 12594  00353E                     i2l6184:
 12595                           
 12596                           ;EEPROM.c: 140: }
 12597                           ;EEPROM.c: 141: }
 12598                           ;EEPROM.c: 142: if(burn & 0x00000002)
 12599  00353E  0100               	movlb	0	; () banked
 12600  003540  A36D               	btfss	i2SetEEPROM@burn& (0+255),1,b
 12601  003542  D016               	goto	i2l6190
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;EEPROM.c: 143: {
 12605                           ;EEPROM.c: 144: if(!SetMemoryLong(Temp.NECcode,1))
 12606  003544  C069  F038         	movff	i2SetEEPROM@Temp+1,i2SetMemoryLong@Data
 12607  003548  C06A  F039         	movff	i2SetEEPROM@Temp+2,i2SetMemoryLong@Data+1
 12608  00354C  C06B  F03A         	movff	i2SetEEPROM@Temp+3,i2SetMemoryLong@Data+2
 12609  003550  C06C  F03B         	movff	i2SetEEPROM@Temp+4,i2SetMemoryLong@Data+3
 12610  003554  0E01               	movlw	1
 12611  003556  6E3C               	movwf	i2SetMemoryLong@AddressFirst,c
 12612  003558  EC66  F016         	call	i2_SetMemoryLong	;wreg free
 12613  00355C  0900               	iorlw	0
 12614  00355E  A4D8               	btfss	status,2,c
 12615  003560  D007               	goto	i2l6190
 12616                           
 12617                           ;EEPROM.c: 145: {
 12618                           ;EEPROM.c: 147: fail += 0x00000002;
 12619  003562  0E02               	movlw	2
 12620  003564  2641               	addwf	i2SetEEPROM@fail,f,c
 12621  003566  0E00               	movlw	0
 12622  003568  2242               	addwfc	i2SetEEPROM@fail+1,f,c
 12623  00356A  2243               	addwfc	i2SetEEPROM@fail+2,f,c
 12624  00356C  2244               	addwfc	i2SetEEPROM@fail+3,f,c
 12625  00356E  D000               	goto	i2l6190
 12626  003570                     i2l6190:
 12627                           
 12628                           ;EEPROM.c: 148: }
 12629                           ;EEPROM.c: 149: }
 12630                           ;EEPROM.c: 150: return fail;
 12631  003570  C041  F068         	movff	i2SetEEPROM@fail,?i2_SetEEPROM
 12632  003574  C042  F069         	movff	i2SetEEPROM@fail+1,?i2_SetEEPROM+1
 12633  003578  C043  F06A         	movff	i2SetEEPROM@fail+2,?i2_SetEEPROM+2
 12634  00357C  C044  F06B         	movff	i2SetEEPROM@fail+3,?i2_SetEEPROM+3
 12635  003580  0012               	return	
 12636  003582  0012               	return		;funcret
 12637  003584                     __end_ofi2_SetEEPROM:
 12638                           	opt stack 0
 12639                           pclatu	equ	0xFFB
 12640                           pclath	equ	0xFFA
 12641                           tblptru	equ	0xFF8
 12642                           tblptrh	equ	0xFF7
 12643                           tblptrl	equ	0xFF6
 12644                           tablat	equ	0xFF5
 12645                           prodh	equ	0xFF4
 12646                           prodl	equ	0xFF3
 12647                           intcon	equ	0xFF2
 12648                           intcon2	equ	0xFF1
 12649                           indf0	equ	0xFEF
 12650                           postinc0	equ	0xFEE
 12651                           plusw0	equ	0xFEB
 12652                           fsr0h	equ	0xFEA
 12653                           fsr0l	equ	0xFE9
 12654                           wreg	equ	0xFE8
 12655                           postdec1	equ	0xFE5
 12656                           fsr1h	equ	0xFE2
 12657                           fsr1l	equ	0xFE1
 12658                           bsr	equ	0xFE0
 12659                           indf2	equ	0xFDF
 12660                           postinc2	equ	0xFDE
 12661                           postdec2	equ	0xFDD
 12662                           plusw2	equ	0xFDB
 12663                           fsr2h	equ	0xFDA
 12664                           fsr2l	equ	0xFD9
 12665                           status	equ	0xFD8
 12666                           
 12667 ;; *************** function i2_SetMemoryLong *****************
 12668 ;; Defined at:
 12669 ;;		line 210 in file "EEPROM.c"
 12670 ;; Parameters:    Size  Location     Type
 12671 ;;  Data            4   55[COMRAM] unsigned long 
 12672 ;;  AddressFirst    1   59[COMRAM] unsigned char 
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;  SetMemoryLon    4    0[BANK0 ] unsigned long 
 12675 ;;  SetMemoryLon    1    7[BANK0 ] unsigned char 
 12676 ;;  SetMemoryLon    1    6[BANK0 ] unsigned char 
 12677 ;;  SetMemoryLon    1    5[BANK0 ] unsigned char 
 12678 ;;  SetMemoryLon    1    4[BANK0 ] unsigned char 
 12679 ;; Return value:  Size  Location     Type
 12680 ;;                  1    wreg      unsigned char 
 12681 ;; Registers used:
 12682 ;;		wreg, status,2, status,0, cstack
 12683 ;; Tracked objects:
 12684 ;;		On entry : 0/0
 12685 ;;		On exit  : 0/0
 12686 ;;		Unchanged: 0/0
 12687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12688 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12689 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12690 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12691 ;;      Totals:         9       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12692 ;;Total ram usage:       17 bytes
 12693 ;; Hardware stack levels used:    1
 12694 ;; Hardware stack levels required when called:    2
 12695 ;; This function calls:
 12696 ;;		i2_GetMemoryLong
 12697 ;;		i2_WriteEEPROM_1Byte
 12698 ;; This function is called by:
 12699 ;;		i2_SetEEPROM
 12700 ;; This function uses a non-reentrant model
 12701 ;;
 12702                           
 12703                           	psect	text68
 12704  002CCC                     __ptext68:
 12705                           	opt stack 0
 12706  002CCC                     i2_SetMemoryLong:
 12707                           	opt stack 14
 12708                           
 12709                           ;EEPROM.c: 212: unsigned char H;
 12710                           ;EEPROM.c: 213: unsigned char MH;
 12711                           ;EEPROM.c: 214: unsigned char ML;
 12712                           ;EEPROM.c: 215: unsigned char L;
 12713                           ;EEPROM.c: 216: unsigned long Test;
 12714                           ;EEPROM.c: 218: H = (unsigned char) ((Data & 0XFF000000) >> 24);
 12715                           
 12716                           ;incstack = 0
 12717  002CCC  0E00               	movlw	0
 12718  002CCE  1438               	andwf	i2SetMemoryLong@Data,w,c
 12719  002CD0  6E3D               	movwf	??i2_SetMemoryLong& (0+255),c
 12720  002CD2  0E00               	movlw	0
 12721  002CD4  1439               	andwf	i2SetMemoryLong@Data+1,w,c
 12722  002CD6  6E3E               	movwf	(??i2_SetMemoryLong+1)& (0+255),c
 12723  002CD8  0E00               	movlw	0
 12724  002CDA  143A               	andwf	i2SetMemoryLong@Data+2,w,c
 12725  002CDC  6E3F               	movwf	(??i2_SetMemoryLong+2)& (0+255),c
 12726  002CDE  0EFF               	movlw	255
 12727  002CE0  143B               	andwf	i2SetMemoryLong@Data+3,w,c
 12728  002CE2  6E40               	movwf	(??i2_SetMemoryLong+3)& (0+255),c
 12729  002CE4  0E19               	movlw	25
 12730  002CE6  D005               	goto	i2u621_40
 12731  002CE8                     i2u621_45:
 12732  002CE8  90D8               	bcf	status,0,c
 12733  002CEA  3240               	rrcf	??i2_SetMemoryLong+3,f,c
 12734  002CEC  323F               	rrcf	??i2_SetMemoryLong+2,f,c
 12735  002CEE  323E               	rrcf	??i2_SetMemoryLong+1,f,c
 12736  002CF0  323D               	rrcf	??i2_SetMemoryLong,f,c
 12737  002CF2                     i2u621_40:
 12738  002CF2  2EE8               	decfsz	wreg,f,c
 12739  002CF4  D7F9               	goto	i2u621_45
 12740  002CF6  503D               	movf	??i2_SetMemoryLong,w,c
 12741  002CF8  0100               	movlb	0	; () banked
 12742  002CFA  6F64               	movwf	i2SetMemoryLong@H& (0+255),b
 12743                           
 12744                           ; BSR set to: 0
 12745                           ;EEPROM.c: 219: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
 12746  002CFC  C03A  F065         	movff	i2SetMemoryLong@Data+2,i2SetMemoryLong@MH
 12747                           
 12748                           ; BSR set to: 0
 12749                           ;EEPROM.c: 220: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
 12750  002D00  C039  F066         	movff	i2SetMemoryLong@Data+1,i2SetMemoryLong@ML
 12751                           
 12752                           ; BSR set to: 0
 12753                           ;EEPROM.c: 221: L = (unsigned char) (Data & 0X000000FF);
 12754  002D04  C038  F067         	movff	i2SetMemoryLong@Data,i2SetMemoryLong@L
 12755                           
 12756                           ; BSR set to: 0
 12757                           ;EEPROM.c: 224: WriteEEPROM_1Byte(AddressFirst, H);
 12758  002D08  C03C  F014         	movff	i2SetMemoryLong@AddressFirst,i2WriteEEPROM_1Byte@address
 12759  002D0C  6A15               	clrf	i2WriteEEPROM_1Byte@address+1,c
 12760  002D0E  C064  F016         	movff	i2SetMemoryLong@H,i2WriteEEPROM_1Byte@data
 12761  002D12  EC2F  F01D         	call	i2_WriteEEPROM_1Byte	;wreg free
 12762                           
 12763                           ;EEPROM.c: 225: WriteEEPROM_1Byte((AddressFirst + 1), MH);
 12764  002D16  0E01               	movlw	1
 12765  002D18  243C               	addwf	i2SetMemoryLong@AddressFirst,w,c
 12766  002D1A  6E14               	movwf	i2WriteEEPROM_1Byte@address,c
 12767  002D1C  6A15               	clrf	i2WriteEEPROM_1Byte@address+1,c
 12768  002D1E  0E00               	movlw	0
 12769  002D20  2215               	addwfc	i2WriteEEPROM_1Byte@address+1,f,c
 12770  002D22  C065  F016         	movff	i2SetMemoryLong@MH,i2WriteEEPROM_1Byte@data
 12771  002D26  EC2F  F01D         	call	i2_WriteEEPROM_1Byte	;wreg free
 12772                           
 12773                           ;EEPROM.c: 226: WriteEEPROM_1Byte((AddressFirst + 2), ML);
 12774  002D2A  0E02               	movlw	2
 12775  002D2C  243C               	addwf	i2SetMemoryLong@AddressFirst,w,c
 12776  002D2E  6E14               	movwf	i2WriteEEPROM_1Byte@address,c
 12777  002D30  6A15               	clrf	i2WriteEEPROM_1Byte@address+1,c
 12778  002D32  0E00               	movlw	0
 12779  002D34  2215               	addwfc	i2WriteEEPROM_1Byte@address+1,f,c
 12780  002D36  C066  F016         	movff	i2SetMemoryLong@ML,i2WriteEEPROM_1Byte@data
 12781  002D3A  EC2F  F01D         	call	i2_WriteEEPROM_1Byte	;wreg free
 12782                           
 12783                           ;EEPROM.c: 227: WriteEEPROM_1Byte((AddressFirst + 3), L);
 12784  002D3E  0E03               	movlw	3
 12785  002D40  243C               	addwf	i2SetMemoryLong@AddressFirst,w,c
 12786  002D42  6E14               	movwf	i2WriteEEPROM_1Byte@address,c
 12787  002D44  6A15               	clrf	i2WriteEEPROM_1Byte@address+1,c
 12788  002D46  0E00               	movlw	0
 12789  002D48  2215               	addwfc	i2WriteEEPROM_1Byte@address+1,f,c
 12790  002D4A  C067  F016         	movff	i2SetMemoryLong@L,i2WriteEEPROM_1Byte@data
 12791  002D4E  EC2F  F01D         	call	i2_WriteEEPROM_1Byte	;wreg free
 12792                           
 12793                           ;EEPROM.c: 230: Test = GetMemoryLong(AddressFirst);
 12794  002D52  503C               	movf	i2SetMemoryLong@AddressFirst,w,c
 12795  002D54  EC1E  F015         	call	i2_GetMemoryLong
 12796  002D58  C017  F060         	movff	?i2_GetMemoryLong,i2SetMemoryLong@Test
 12797  002D5C  C018  F061         	movff	?i2_GetMemoryLong+1,i2SetMemoryLong@Test+1
 12798  002D60  C019  F062         	movff	?i2_GetMemoryLong+2,i2SetMemoryLong@Test+2
 12799  002D64  C01A  F063         	movff	?i2_GetMemoryLong+3,i2SetMemoryLong@Test+3
 12800                           
 12801                           ;EEPROM.c: 232: if(Test == Data)
 12802  002D68  5038               	movf	i2SetMemoryLong@Data,w,c
 12803  002D6A  0100               	movlb	0	; () banked
 12804  002D6C  1960               	xorwf	i2SetMemoryLong@Test& (0+255),w,b
 12805  002D6E  E10F               	bnz	i2l5940
 12806  002D70  5039               	movf	i2SetMemoryLong@Data+1,w,c
 12807  002D72  0100               	movlb	0	; () banked
 12808  002D74  1961               	xorwf	(i2SetMemoryLong@Test+1)& (0+255),w,b
 12809  002D76  E10B               	bnz	i2l5940
 12810  002D78  503A               	movf	i2SetMemoryLong@Data+2,w,c
 12811  002D7A  0100               	movlb	0	; () banked
 12812  002D7C  1962               	xorwf	(i2SetMemoryLong@Test+2)& (0+255),w,b
 12813  002D7E  E107               	bnz	i2l5940
 12814  002D80  503B               	movf	i2SetMemoryLong@Data+3,w,c
 12815  002D82  0100               	movlb	0	; () banked
 12816  002D84  1963               	xorwf	(i2SetMemoryLong@Test+3)& (0+255),w,b
 12817  002D86  A4D8               	btfss	status,2,c
 12818  002D88  D002               	goto	i2l5940
 12819                           
 12820                           ; BSR set to: 0
 12821                           ;EEPROM.c: 233: {
 12822                           ;EEPROM.c: 234: return 1;
 12823  002D8A  0E01               	movlw	1
 12824                           
 12825                           ; BSR set to: 0
 12826  002D8C  0012               	return	
 12827  002D8E                     i2l5940:
 12828                           
 12829                           ; BSR set to: 0
 12830                           ;EEPROM.c: 235: }
 12831                           ;EEPROM.c: 236: return 0;
 12832  002D8E  0E00               	movlw	0
 12833  002D90  0012               	return	
 12834                           
 12835                           ; BSR set to: 0
 12836                           
 12837                           ; BSR set to: 0
 12838  002D92  0012               	return		;funcret
 12839  002D94                     __end_ofi2_SetMemoryLong:
 12840                           	opt stack 0
 12841                           pclatu	equ	0xFFB
 12842                           pclath	equ	0xFFA
 12843                           tblptru	equ	0xFF8
 12844                           tblptrh	equ	0xFF7
 12845                           tblptrl	equ	0xFF6
 12846                           tablat	equ	0xFF5
 12847                           prodh	equ	0xFF4
 12848                           prodl	equ	0xFF3
 12849                           intcon	equ	0xFF2
 12850                           intcon2	equ	0xFF1
 12851                           indf0	equ	0xFEF
 12852                           postinc0	equ	0xFEE
 12853                           plusw0	equ	0xFEB
 12854                           fsr0h	equ	0xFEA
 12855                           fsr0l	equ	0xFE9
 12856                           wreg	equ	0xFE8
 12857                           postdec1	equ	0xFE5
 12858                           fsr1h	equ	0xFE2
 12859                           fsr1l	equ	0xFE1
 12860                           bsr	equ	0xFE0
 12861                           indf2	equ	0xFDF
 12862                           postinc2	equ	0xFDE
 12863                           postdec2	equ	0xFDD
 12864                           plusw2	equ	0xFDB
 12865                           fsr2h	equ	0xFDA
 12866                           fsr2l	equ	0xFD9
 12867                           status	equ	0xFD8
 12868                           
 12869 ;; *************** function i2_GetMemoryLong *****************
 12870 ;; Defined at:
 12871 ;;		line 187 in file "EEPROM.c"
 12872 ;; Parameters:    Size  Location     Type
 12873 ;;  AddressFirst    1    wreg     unsigned char 
 12874 ;; Auto vars:     Size  Location     Type
 12875 ;;  AddressFirst    1   54[COMRAM] unsigned char 
 12876 ;;  GetMemoryLon    4   46[COMRAM] unsigned long 
 12877 ;;  GetMemoryLon    1   53[COMRAM] unsigned char 
 12878 ;;  GetMemoryLon    1   52[COMRAM] unsigned char 
 12879 ;;  GetMemoryLon    1   51[COMRAM] unsigned char 
 12880 ;;  GetMemoryLon    1   50[COMRAM] unsigned char 
 12881 ;; Return value:  Size  Location     Type
 12882 ;;                  4   22[COMRAM] unsigned long 
 12883 ;; Registers used:
 12884 ;;		wreg, status,2, status,0, cstack
 12885 ;; Tracked objects:
 12886 ;;		On entry : 0/0
 12887 ;;		On exit  : 0/0
 12888 ;;		Unchanged: 0/0
 12889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12890 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12891 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12892 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12893 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12894 ;;Total ram usage:       33 bytes
 12895 ;; Hardware stack levels used:    1
 12896 ;; Hardware stack levels required when called:    1
 12897 ;; This function calls:
 12898 ;;		i2_ReadEEPROM_1Byte
 12899 ;; This function is called by:
 12900 ;;		i2_SetMemoryLong
 12901 ;; This function uses a non-reentrant model
 12902 ;;
 12903                           
 12904                           	psect	text69
 12905  002A3C                     __ptext69:
 12906                           	opt stack 0
 12907  002A3C                     i2_GetMemoryLong:
 12908                           	opt stack 14
 12909                           
 12910                           ; BSR set to: 0
 12911                           ;incstack = 0
 12912                           ;i2GetMemoryLong@AddressFirst stored from wreg
 12913  002A3C  6E37               	movwf	i2GetMemoryLong@AddressFirst,c
 12914                           
 12915                           ;EEPROM.c: 189: unsigned char H;
 12916                           ;EEPROM.c: 190: unsigned char MH;
 12917                           ;EEPROM.c: 191: unsigned char ML;
 12918                           ;EEPROM.c: 192: unsigned char L;
 12919                           ;EEPROM.c: 193: unsigned long temp =0;
 12920  002A3E  0E00               	movlw	0
 12921  002A40  6E2F               	movwf	i2GetMemoryLong@temp,c
 12922  002A42  0E00               	movlw	0
 12923  002A44  6E30               	movwf	i2GetMemoryLong@temp+1,c
 12924  002A46  0E00               	movlw	0
 12925  002A48  6E31               	movwf	i2GetMemoryLong@temp+2,c
 12926  002A4A  0E00               	movlw	0
 12927  002A4C  6E32               	movwf	i2GetMemoryLong@temp+3,c
 12928                           
 12929                           ;EEPROM.c: 195: H = ReadEEPROM_1Byte(AddressFirst);
 12930  002A4E  C037  F014         	movff	i2GetMemoryLong@AddressFirst,i2ReadEEPROM_1Byte@address
 12931  002A52  6A15               	clrf	i2ReadEEPROM_1Byte@address+1,c
 12932  002A54  EC7F  F01D         	call	i2_ReadEEPROM_1Byte	;wreg free
 12933  002A58  5014               	movf	?i2_ReadEEPROM_1Byte,w,c
 12934  002A5A  6E33               	movwf	i2GetMemoryLong@H,c
 12935                           
 12936                           ;EEPROM.c: 196: MH = ReadEEPROM_1Byte(AddressFirst + 1);
 12937  002A5C  0E01               	movlw	1
 12938  002A5E  2437               	addwf	i2GetMemoryLong@AddressFirst,w,c
 12939  002A60  6E14               	movwf	i2ReadEEPROM_1Byte@address,c
 12940  002A62  6A15               	clrf	i2ReadEEPROM_1Byte@address+1,c
 12941  002A64  0E00               	movlw	0
 12942  002A66  2215               	addwfc	i2ReadEEPROM_1Byte@address+1,f,c
 12943  002A68  EC7F  F01D         	call	i2_ReadEEPROM_1Byte	;wreg free
 12944  002A6C  5014               	movf	?i2_ReadEEPROM_1Byte,w,c
 12945  002A6E  6E34               	movwf	i2GetMemoryLong@MH,c
 12946                           
 12947                           ;EEPROM.c: 197: ML = ReadEEPROM_1Byte(AddressFirst + 2);
 12948  002A70  0E02               	movlw	2
 12949  002A72  2437               	addwf	i2GetMemoryLong@AddressFirst,w,c
 12950  002A74  6E14               	movwf	i2ReadEEPROM_1Byte@address,c
 12951  002A76  6A15               	clrf	i2ReadEEPROM_1Byte@address+1,c
 12952  002A78  0E00               	movlw	0
 12953  002A7A  2215               	addwfc	i2ReadEEPROM_1Byte@address+1,f,c
 12954  002A7C  EC7F  F01D         	call	i2_ReadEEPROM_1Byte	;wreg free
 12955  002A80  5014               	movf	?i2_ReadEEPROM_1Byte,w,c
 12956  002A82  6E35               	movwf	i2GetMemoryLong@ML,c
 12957                           
 12958                           ;EEPROM.c: 198: L = ReadEEPROM_1Byte(AddressFirst + 3);
 12959  002A84  0E03               	movlw	3
 12960  002A86  2437               	addwf	i2GetMemoryLong@AddressFirst,w,c
 12961  002A88  6E14               	movwf	i2ReadEEPROM_1Byte@address,c
 12962  002A8A  6A15               	clrf	i2ReadEEPROM_1Byte@address+1,c
 12963  002A8C  0E00               	movlw	0
 12964  002A8E  2215               	addwfc	i2ReadEEPROM_1Byte@address+1,f,c
 12965  002A90  EC7F  F01D         	call	i2_ReadEEPROM_1Byte	;wreg free
 12966  002A94  5014               	movf	?i2_ReadEEPROM_1Byte,w,c
 12967  002A96  6E36               	movwf	i2GetMemoryLong@L,c
 12968                           
 12969                           ;EEPROM.c: 200: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
 12970                           ;EEPROM.c: 201: + ((unsigned long)ML << 8) + (unsigned long)L);
 12971  002A98  C035  F01B         	movff	i2GetMemoryLong@ML,??i2_GetMemoryLong
 12972  002A9C  6A1C               	clrf	(??i2_GetMemoryLong+1)& (0+255),c
 12973  002A9E  6A1D               	clrf	(??i2_GetMemoryLong+2)& (0+255),c
 12974  002AA0  6A1E               	clrf	(??i2_GetMemoryLong+3)& (0+255),c
 12975  002AA2  C01D  F01E         	movff	??i2_GetMemoryLong+2,??i2_GetMemoryLong+3
 12976  002AA6  C01C  F01D         	movff	??i2_GetMemoryLong+1,??i2_GetMemoryLong+2
 12977  002AAA  C01B  F01C         	movff	??i2_GetMemoryLong,??i2_GetMemoryLong+1
 12978  002AAE  6A1B               	clrf	??i2_GetMemoryLong,c
 12979  002AB0  C034  F01F         	movff	i2GetMemoryLong@MH,??i2_GetMemoryLong+4
 12980  002AB4  6A20               	clrf	(??i2_GetMemoryLong+5)& (0+255),c
 12981  002AB6  6A21               	clrf	(??i2_GetMemoryLong+6)& (0+255),c
 12982  002AB8  6A22               	clrf	(??i2_GetMemoryLong+7)& (0+255),c
 12983  002ABA  C020  F022         	movff	??i2_GetMemoryLong+5,??i2_GetMemoryLong+7
 12984  002ABE  C01F  F021         	movff	??i2_GetMemoryLong+4,??i2_GetMemoryLong+6
 12985  002AC2  6A20               	clrf	??i2_GetMemoryLong+5,c
 12986  002AC4  6A1F               	clrf	??i2_GetMemoryLong+4,c
 12987  002AC6  C033  F023         	movff	i2GetMemoryLong@H,??i2_GetMemoryLong+8
 12988  002ACA  6A24               	clrf	(??i2_GetMemoryLong+9)& (0+255),c
 12989  002ACC  6A25               	clrf	(??i2_GetMemoryLong+10)& (0+255),c
 12990  002ACE  6A26               	clrf	(??i2_GetMemoryLong+11)& (0+255),c
 12991  002AD0  C023  F026         	movff	??i2_GetMemoryLong+8,??i2_GetMemoryLong+11
 12992  002AD4  6A25               	clrf	??i2_GetMemoryLong+10,c
 12993  002AD6  6A24               	clrf	??i2_GetMemoryLong+9,c
 12994  002AD8  6A23               	clrf	??i2_GetMemoryLong+8,c
 12995  002ADA  501F               	movf	??i2_GetMemoryLong+4,w,c
 12996  002ADC  2423               	addwf	??i2_GetMemoryLong+8,w,c
 12997  002ADE  6E27               	movwf	(??i2_GetMemoryLong+12)& (0+255),c
 12998  002AE0  5020               	movf	??i2_GetMemoryLong+5,w,c
 12999  002AE2  2024               	addwfc	??i2_GetMemoryLong+9,w,c
 13000  002AE4  6E28               	movwf	(??i2_GetMemoryLong+13)& (0+255),c
 13001  002AE6  5021               	movf	??i2_GetMemoryLong+6,w,c
 13002  002AE8  2025               	addwfc	??i2_GetMemoryLong+10,w,c
 13003  002AEA  6E29               	movwf	(??i2_GetMemoryLong+14)& (0+255),c
 13004  002AEC  5022               	movf	??i2_GetMemoryLong+7,w,c
 13005  002AEE  2026               	addwfc	??i2_GetMemoryLong+11,w,c
 13006  002AF0  6E2A               	movwf	(??i2_GetMemoryLong+15)& (0+255),c
 13007  002AF2  501B               	movf	??i2_GetMemoryLong,w,c
 13008  002AF4  2427               	addwf	??i2_GetMemoryLong+12,w,c
 13009  002AF6  6E2B               	movwf	(??i2_GetMemoryLong+16)& (0+255),c
 13010  002AF8  501C               	movf	??i2_GetMemoryLong+1,w,c
 13011  002AFA  2028               	addwfc	??i2_GetMemoryLong+13,w,c
 13012  002AFC  6E2C               	movwf	(??i2_GetMemoryLong+17)& (0+255),c
 13013  002AFE  501D               	movf	??i2_GetMemoryLong+2,w,c
 13014  002B00  2029               	addwfc	??i2_GetMemoryLong+14,w,c
 13015  002B02  6E2D               	movwf	(??i2_GetMemoryLong+18)& (0+255),c
 13016  002B04  501E               	movf	??i2_GetMemoryLong+3,w,c
 13017  002B06  202A               	addwfc	??i2_GetMemoryLong+15,w,c
 13018  002B08  6E2E               	movwf	(??i2_GetMemoryLong+19)& (0+255),c
 13019  002B0A  5036               	movf	i2GetMemoryLong@L,w,c
 13020  002B0C  242B               	addwf	??i2_GetMemoryLong+16,w,c
 13021  002B0E  6E2F               	movwf	i2GetMemoryLong@temp,c
 13022  002B10  0E00               	movlw	0
 13023  002B12  202C               	addwfc	??i2_GetMemoryLong+17,w,c
 13024  002B14  6E30               	movwf	i2GetMemoryLong@temp+1,c
 13025  002B16  0E00               	movlw	0
 13026  002B18  202D               	addwfc	??i2_GetMemoryLong+18,w,c
 13027  002B1A  6E31               	movwf	i2GetMemoryLong@temp+2,c
 13028  002B1C  0E00               	movlw	0
 13029  002B1E  202E               	addwfc	??i2_GetMemoryLong+19,w,c
 13030  002B20  6E32               	movwf	i2GetMemoryLong@temp+3,c
 13031                           
 13032                           ;EEPROM.c: 202: return temp;
 13033  002B22  C02F  F017         	movff	i2GetMemoryLong@temp,?i2_GetMemoryLong
 13034  002B26  C030  F018         	movff	i2GetMemoryLong@temp+1,?i2_GetMemoryLong+1
 13035  002B2A  C031  F019         	movff	i2GetMemoryLong@temp+2,?i2_GetMemoryLong+2
 13036  002B2E  C032  F01A         	movff	i2GetMemoryLong@temp+3,?i2_GetMemoryLong+3
 13037  002B32  0012               	return	
 13038  002B34  0012               	return		;funcret
 13039  002B36                     __end_ofi2_GetMemoryLong:
 13040                           	opt stack 0
 13041                           pclatu	equ	0xFFB
 13042                           pclath	equ	0xFFA
 13043                           tblptru	equ	0xFF8
 13044                           tblptrh	equ	0xFF7
 13045                           tblptrl	equ	0xFF6
 13046                           tablat	equ	0xFF5
 13047                           prodh	equ	0xFF4
 13048                           prodl	equ	0xFF3
 13049                           intcon	equ	0xFF2
 13050                           intcon2	equ	0xFF1
 13051                           indf0	equ	0xFEF
 13052                           postinc0	equ	0xFEE
 13053                           plusw0	equ	0xFEB
 13054                           fsr0h	equ	0xFEA
 13055                           fsr0l	equ	0xFE9
 13056                           wreg	equ	0xFE8
 13057                           postdec1	equ	0xFE5
 13058                           fsr1h	equ	0xFE2
 13059                           fsr1l	equ	0xFE1
 13060                           bsr	equ	0xFE0
 13061                           indf2	equ	0xFDF
 13062                           postinc2	equ	0xFDE
 13063                           postdec2	equ	0xFDD
 13064                           plusw2	equ	0xFDB
 13065                           fsr2h	equ	0xFDA
 13066                           fsr2l	equ	0xFD9
 13067                           status	equ	0xFD8
 13068                           
 13069 ;; *************** function i2_SetMemoryChar *****************
 13070 ;; Defined at:
 13071 ;;		line 304 in file "EEPROM.c"
 13072 ;; Parameters:    Size  Location     Type
 13073 ;;  Data            1    wreg     unsigned char 
 13074 ;;  AddressFirst    1   28[COMRAM] unsigned char 
 13075 ;; Auto vars:     Size  Location     Type
 13076 ;;  Data            1   30[COMRAM] unsigned char 
 13077 ;;  SetMemoryCha    1   29[COMRAM] unsigned char 
 13078 ;; Return value:  Size  Location     Type
 13079 ;;                  1    wreg      unsigned char 
 13080 ;; Registers used:
 13081 ;;		wreg, status,2, status,0, cstack
 13082 ;; Tracked objects:
 13083 ;;		On entry : 0/0
 13084 ;;		On exit  : 0/0
 13085 ;;		Unchanged: 0/0
 13086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13087 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13088 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13090 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13091 ;;Total ram usage:        3 bytes
 13092 ;; Hardware stack levels used:    1
 13093 ;; Hardware stack levels required when called:    2
 13094 ;; This function calls:
 13095 ;;		i2_GetMemoryChar
 13096 ;;		i2_WriteEEPROM_1Byte
 13097 ;; This function is called by:
 13098 ;;		i2_SetEEPROM
 13099 ;; This function uses a non-reentrant model
 13100 ;;
 13101                           
 13102                           	psect	text70
 13103  003B5C                     __ptext70:
 13104                           	opt stack 0
 13105  003B5C                     i2_SetMemoryChar:
 13106                           	opt stack 14
 13107                           
 13108                           ;incstack = 0
 13109                           ;i2SetMemoryChar@Data stored from wreg
 13110  003B5C  6E1F               	movwf	i2SetMemoryChar@Data,c
 13111                           
 13112                           ;EEPROM.c: 306: unsigned char Test;
 13113                           ;EEPROM.c: 308: WriteEEPROM_1Byte(AddressFirst, Data);
 13114  003B5E  C01D  F014         	movff	i2SetMemoryChar@AddressFirst,i2WriteEEPROM_1Byte@address
 13115  003B62  6A15               	clrf	i2WriteEEPROM_1Byte@address+1,c
 13116  003B64  C01F  F016         	movff	i2SetMemoryChar@Data,i2WriteEEPROM_1Byte@data
 13117  003B68  EC2F  F01D         	call	i2_WriteEEPROM_1Byte	;wreg free
 13118                           
 13119                           ;EEPROM.c: 311: Test = GetMemoryChar(AddressFirst);
 13120  003B6C  501D               	movf	i2SetMemoryChar@AddressFirst,w,c
 13121  003B6E  ECFC  F01D         	call	i2_GetMemoryChar
 13122  003B72  5017               	movf	?i2_GetMemoryChar,w,c
 13123  003B74  6E1E               	movwf	i2SetMemoryChar@Test,c
 13124                           
 13125                           ;EEPROM.c: 313: if(Test == Data)
 13126  003B76  501F               	movf	i2SetMemoryChar@Data,w,c
 13127  003B78  181E               	xorwf	i2SetMemoryChar@Test,w,c
 13128  003B7A  A4D8               	btfss	status,2,c
 13129  003B7C  D002               	goto	i2l5952
 13130                           
 13131                           ;EEPROM.c: 314: {
 13132                           ;EEPROM.c: 315: return 1;
 13133  003B7E  0E01               	movlw	1
 13134  003B80  0012               	return	
 13135  003B82                     i2l5952:
 13136                           
 13137                           ;EEPROM.c: 316: }
 13138                           ;EEPROM.c: 317: return 0;
 13139  003B82  0E00               	movlw	0
 13140  003B84  0012               	return	
 13141  003B86  0012               	return		;funcret
 13142  003B88                     __end_ofi2_SetMemoryChar:
 13143                           	opt stack 0
 13144                           pclatu	equ	0xFFB
 13145                           pclath	equ	0xFFA
 13146                           tblptru	equ	0xFF8
 13147                           tblptrh	equ	0xFF7
 13148                           tblptrl	equ	0xFF6
 13149                           tablat	equ	0xFF5
 13150                           prodh	equ	0xFF4
 13151                           prodl	equ	0xFF3
 13152                           intcon	equ	0xFF2
 13153                           intcon2	equ	0xFF1
 13154                           indf0	equ	0xFEF
 13155                           postinc0	equ	0xFEE
 13156                           plusw0	equ	0xFEB
 13157                           fsr0h	equ	0xFEA
 13158                           fsr0l	equ	0xFE9
 13159                           wreg	equ	0xFE8
 13160                           postdec1	equ	0xFE5
 13161                           fsr1h	equ	0xFE2
 13162                           fsr1l	equ	0xFE1
 13163                           bsr	equ	0xFE0
 13164                           indf2	equ	0xFDF
 13165                           postinc2	equ	0xFDE
 13166                           postdec2	equ	0xFDD
 13167                           plusw2	equ	0xFDB
 13168                           fsr2h	equ	0xFDA
 13169                           fsr2l	equ	0xFD9
 13170                           status	equ	0xFD8
 13171                           
 13172 ;; *************** function i2_WriteEEPROM_1Byte *****************
 13173 ;; Defined at:
 13174 ;;		line 93 in file "EEPROM.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;  address         2   19[COMRAM] unsigned int 
 13177 ;;  data            1   21[COMRAM] unsigned char 
 13178 ;; Auto vars:     Size  Location     Type
 13179 ;;  WriteEEPROM_    1   22[COMRAM] unsigned char 
 13180 ;; Return value:  Size  Location     Type
 13181 ;;		None               void
 13182 ;; Registers used:
 13183 ;;		wreg, status,2, status,0, cstack
 13184 ;; Tracked objects:
 13185 ;;		On entry : 0/0
 13186 ;;		On exit  : 0/0
 13187 ;;		Unchanged: 0/0
 13188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13189 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13192 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13193 ;;Total ram usage:        4 bytes
 13194 ;; Hardware stack levels used:    1
 13195 ;; Hardware stack levels required when called:    1
 13196 ;; This function calls:
 13197 ;;		i2_EEPROM_UNLOCK
 13198 ;; This function is called by:
 13199 ;;		i2_SetMemoryLong
 13200 ;;		i2_SetMemoryChar
 13201 ;; This function uses a non-reentrant model
 13202 ;;
 13203                           
 13204                           	psect	text71
 13205  003A5E                     __ptext71:
 13206                           	opt stack 0
 13207  003A5E                     i2_WriteEEPROM_1Byte:
 13208                           	opt stack 14
 13209                           
 13210                           ;EEPROM.c: 95: unsigned char GIEstatus = INTCONbits.GIE;
 13211                           
 13212                           ;incstack = 0
 13213  003A5E  0E00               	movlw	0
 13214  003A60  BEF2               	btfsc	intcon,7,c	;volatile
 13215  003A62  0E01               	movlw	1
 13216  003A64  6E17               	movwf	i2WriteEEPROM_1Byte@GIEstatus,c
 13217                           
 13218                           ;EEPROM.c: 96: EEADRH = (unsigned char)((address & 0x300) >> 8);
 13219  003A66  5015               	movf	i2WriteEEPROM_1Byte@address+1,w,c
 13220  003A68  0B03               	andlw	3
 13221  003A6A  6EAA               	movwf	4010,c	;volatile
 13222                           
 13223                           ;EEPROM.c: 97: EEADR = (unsigned char)(address & 0xFF);
 13224  003A6C  C014  FFA9         	movff	i2WriteEEPROM_1Byte@address,4009	;volatile
 13225                           
 13226                           ;EEPROM.c: 98: EEDATA = data;
 13227  003A70  C016  FFA8         	movff	i2WriteEEPROM_1Byte@data,4008	;volatile
 13228                           
 13229                           ;EEPROM.c: 99: EECON1bits.EEPGD = 0;
 13230  003A74  9EA6               	bcf	4006,7,c	;volatile
 13231                           
 13232                           ;EEPROM.c: 100: EECON1bits.CFGS = 0;
 13233  003A76  9CA6               	bcf	4006,6,c	;volatile
 13234                           
 13235                           ;EEPROM.c: 101: EECON1bits.WREN =1;
 13236  003A78  84A6               	bsf	4006,2,c	;volatile
 13237                           
 13238                           ;EEPROM.c: 102: INTCONbits.GIE =0;
 13239  003A7A  9EF2               	bcf	intcon,7,c	;volatile
 13240                           
 13241                           ;EEPROM.c: 103: EEPROM_UNLOCK();
 13242  003A7C  EC55  F01E         	call	i2_EEPROM_UNLOCK	;wreg free
 13243                           
 13244                           ;EEPROM.c: 104: EECON1bits.WR =1;
 13245  003A80  82A6               	bsf	4006,1,c	;volatile
 13246                           
 13247                           ;EEPROM.c: 105: while(EECON1bits.WR);
 13248  003A82  D000               	goto	i2l410
 13249  003A84                     i2l410:
 13250  003A84  B2A6               	btfsc	4006,1,c	;volatile
 13251  003A86  D7FE               	goto	i2l410
 13252                           
 13253                           ;EEPROM.c: 106: EECON1bits.WREN =0;
 13254  003A88  94A6               	bcf	4006,2,c	;volatile
 13255                           
 13256                           ;EEPROM.c: 107: if(GIEstatus)
 13257  003A8A  5017               	movf	i2WriteEEPROM_1Byte@GIEstatus,w,c
 13258  003A8C  B4D8               	btfsc	status,2,c
 13259  003A8E  0012               	return	
 13260                           
 13261                           ;EEPROM.c: 108: {
 13262                           ;EEPROM.c: 109: INTCONbits.GIE =1;
 13263  003A90  8EF2               	bsf	intcon,7,c	;volatile
 13264  003A92  0012               	return	
 13265  003A94  0012               	return		;funcret
 13266  003A96                     __end_ofi2_WriteEEPROM_1Byte:
 13267                           	opt stack 0
 13268                           pclatu	equ	0xFFB
 13269                           pclath	equ	0xFFA
 13270                           tblptru	equ	0xFF8
 13271                           tblptrh	equ	0xFF7
 13272                           tblptrl	equ	0xFF6
 13273                           tablat	equ	0xFF5
 13274                           prodh	equ	0xFF4
 13275                           prodl	equ	0xFF3
 13276                           intcon	equ	0xFF2
 13277                           intcon2	equ	0xFF1
 13278                           indf0	equ	0xFEF
 13279                           postinc0	equ	0xFEE
 13280                           plusw0	equ	0xFEB
 13281                           fsr0h	equ	0xFEA
 13282                           fsr0l	equ	0xFE9
 13283                           wreg	equ	0xFE8
 13284                           postdec1	equ	0xFE5
 13285                           fsr1h	equ	0xFE2
 13286                           fsr1l	equ	0xFE1
 13287                           bsr	equ	0xFE0
 13288                           indf2	equ	0xFDF
 13289                           postinc2	equ	0xFDE
 13290                           postdec2	equ	0xFDD
 13291                           plusw2	equ	0xFDB
 13292                           fsr2h	equ	0xFDA
 13293                           fsr2l	equ	0xFD9
 13294                           status	equ	0xFD8
 13295                           
 13296 ;; *************** function i2_EEPROM_UNLOCK *****************
 13297 ;; Defined at:
 13298 ;;		line 78 in file "EEPROM.c"
 13299 ;; Parameters:    Size  Location     Type
 13300 ;;		None
 13301 ;; Auto vars:     Size  Location     Type
 13302 ;;		None
 13303 ;; Return value:  Size  Location     Type
 13304 ;;		None               void
 13305 ;; Registers used:
 13306 ;;		wreg, status,2
 13307 ;; Tracked objects:
 13308 ;;		On entry : 0/0
 13309 ;;		On exit  : 0/0
 13310 ;;		Unchanged: 0/0
 13311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13316 ;;Total ram usage:        0 bytes
 13317 ;; Hardware stack levels used:    1
 13318 ;; This function calls:
 13319 ;;		Nothing
 13320 ;; This function is called by:
 13321 ;;		i2_WriteEEPROM_1Byte
 13322 ;; This function uses a non-reentrant model
 13323 ;;
 13324                           
 13325                           	psect	text72
 13326  003CAA                     __ptext72:
 13327                           	opt stack 0
 13328  003CAA                     i2_EEPROM_UNLOCK:
 13329                           	opt stack 14
 13330                           
 13331                           ;EEPROM.c: 80: EECON2 = 0x55;
 13332                           
 13333                           ;incstack = 0
 13334  003CAA  0E55               	movlw	85
 13335  003CAC  6EA7               	movwf	4007,c	;volatile
 13336                           
 13337                           ;EEPROM.c: 81: EECON2 = 0xAA;
 13338  003CAE  0EAA               	movlw	170
 13339  003CB0  6EA7               	movwf	4007,c	;volatile
 13340                           
 13341                           ;EEPROM.c: 82: EECON1bits.WR =1;
 13342  003CB2  82A6               	bsf	4006,1,c	;volatile
 13343                           
 13344                           ;EEPROM.c: 83: while(EECON1bits.WR);
 13345  003CB4  D000               	goto	i2l404
 13346  003CB6                     i2l404:
 13347  003CB6  B2A6               	btfsc	4006,1,c	;volatile
 13348  003CB8  D7FE               	goto	i2l404
 13349                           
 13350                           ;EEPROM.c: 84: __nop();
 13351  003CBA  F000               	nop	
 13352                           
 13353                           ;EEPROM.c: 85: __nop();
 13354  003CBC  F000               	nop	
 13355  003CBE  0012               	return		;funcret
 13356  003CC0                     __end_ofi2_EEPROM_UNLOCK:
 13357                           	opt stack 0
 13358                           pclatu	equ	0xFFB
 13359                           pclath	equ	0xFFA
 13360                           tblptru	equ	0xFF8
 13361                           tblptrh	equ	0xFF7
 13362                           tblptrl	equ	0xFF6
 13363                           tablat	equ	0xFF5
 13364                           prodh	equ	0xFF4
 13365                           prodl	equ	0xFF3
 13366                           intcon	equ	0xFF2
 13367                           intcon2	equ	0xFF1
 13368                           indf0	equ	0xFEF
 13369                           postinc0	equ	0xFEE
 13370                           plusw0	equ	0xFEB
 13371                           fsr0h	equ	0xFEA
 13372                           fsr0l	equ	0xFE9
 13373                           wreg	equ	0xFE8
 13374                           postdec1	equ	0xFE5
 13375                           fsr1h	equ	0xFE2
 13376                           fsr1l	equ	0xFE1
 13377                           bsr	equ	0xFE0
 13378                           indf2	equ	0xFDF
 13379                           postinc2	equ	0xFDE
 13380                           postdec2	equ	0xFDD
 13381                           plusw2	equ	0xFDB
 13382                           fsr2h	equ	0xFDA
 13383                           fsr2l	equ	0xFD9
 13384                           status	equ	0xFD8
 13385                           
 13386 ;; *************** function i2_GetMemoryChar *****************
 13387 ;; Defined at:
 13388 ;;		line 290 in file "EEPROM.c"
 13389 ;; Parameters:    Size  Location     Type
 13390 ;;  AddressFirst    1    wreg     unsigned char 
 13391 ;; Auto vars:     Size  Location     Type
 13392 ;;  AddressFirst    1   26[COMRAM] unsigned char 
 13393 ;;  GetMemoryCha    1   27[COMRAM] unsigned char 
 13394 ;; Return value:  Size  Location     Type
 13395 ;;                  4   22[COMRAM] unsigned long 
 13396 ;; Registers used:
 13397 ;;		wreg, status,2, status,0, cstack
 13398 ;; Tracked objects:
 13399 ;;		On entry : 0/0
 13400 ;;		On exit  : 0/0
 13401 ;;		Unchanged: 0/0
 13402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13406 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13407 ;;Total ram usage:        6 bytes
 13408 ;; Hardware stack levels used:    1
 13409 ;; Hardware stack levels required when called:    1
 13410 ;; This function calls:
 13411 ;;		i2_ReadEEPROM_1Byte
 13412 ;; This function is called by:
 13413 ;;		i2_SetMemoryChar
 13414 ;; This function uses a non-reentrant model
 13415 ;;
 13416                           
 13417                           	psect	text73
 13418  003BF8                     __ptext73:
 13419                           	opt stack 0
 13420  003BF8                     i2_GetMemoryChar:
 13421                           	opt stack 14
 13422                           
 13423                           ;incstack = 0
 13424                           ;i2GetMemoryChar@AddressFirst stored from wreg
 13425  003BF8  6E1B               	movwf	i2GetMemoryChar@AddressFirst,c
 13426                           
 13427                           ;EEPROM.c: 292: unsigned char H;
 13428                           ;EEPROM.c: 294: H = ReadEEPROM_1Byte(AddressFirst);
 13429  003BFA  C01B  F014         	movff	i2GetMemoryChar@AddressFirst,i2ReadEEPROM_1Byte@address
 13430  003BFE  6A15               	clrf	i2ReadEEPROM_1Byte@address+1,c
 13431  003C00  EC7F  F01D         	call	i2_ReadEEPROM_1Byte	;wreg free
 13432  003C04  5014               	movf	?i2_ReadEEPROM_1Byte,w,c
 13433  003C06  6E1C               	movwf	i2GetMemoryChar@H,c
 13434                           
 13435                           ;EEPROM.c: 296: return H;
 13436  003C08  501C               	movf	i2GetMemoryChar@H,w,c
 13437  003C0A  6E17               	movwf	?i2_GetMemoryChar,c
 13438  003C0C  6A18               	clrf	?i2_GetMemoryChar+1,c
 13439  003C0E  6A19               	clrf	?i2_GetMemoryChar+2,c
 13440  003C10  6A1A               	clrf	?i2_GetMemoryChar+3,c
 13441  003C12  0012               	return	
 13442  003C14  0012               	return		;funcret
 13443  003C16                     __end_ofi2_GetMemoryChar:
 13444                           	opt stack 0
 13445                           pclatu	equ	0xFFB
 13446                           pclath	equ	0xFFA
 13447                           tblptru	equ	0xFF8
 13448                           tblptrh	equ	0xFF7
 13449                           tblptrl	equ	0xFF6
 13450                           tablat	equ	0xFF5
 13451                           prodh	equ	0xFF4
 13452                           prodl	equ	0xFF3
 13453                           intcon	equ	0xFF2
 13454                           intcon2	equ	0xFF1
 13455                           indf0	equ	0xFEF
 13456                           postinc0	equ	0xFEE
 13457                           plusw0	equ	0xFEB
 13458                           fsr0h	equ	0xFEA
 13459                           fsr0l	equ	0xFE9
 13460                           wreg	equ	0xFE8
 13461                           postdec1	equ	0xFE5
 13462                           fsr1h	equ	0xFE2
 13463                           fsr1l	equ	0xFE1
 13464                           bsr	equ	0xFE0
 13465                           indf2	equ	0xFDF
 13466                           postinc2	equ	0xFDE
 13467                           postdec2	equ	0xFDD
 13468                           plusw2	equ	0xFDB
 13469                           fsr2h	equ	0xFDA
 13470                           fsr2l	equ	0xFD9
 13471                           status	equ	0xFD8
 13472                           
 13473 ;; *************** function i2_ReadEEPROM_1Byte *****************
 13474 ;; Defined at:
 13475 ;;		line 53 in file "EEPROM.c"
 13476 ;; Parameters:    Size  Location     Type
 13477 ;;  address         2   19[COMRAM] unsigned int 
 13478 ;; Auto vars:     Size  Location     Type
 13479 ;;  ReadEEPROM_1    1   21[COMRAM] unsigned char 
 13480 ;; Return value:  Size  Location     Type
 13481 ;;                  2   19[COMRAM] unsigned int 
 13482 ;; Registers used:
 13483 ;;		wreg, status,2, status,0
 13484 ;; Tracked objects:
 13485 ;;		On entry : 0/0
 13486 ;;		On exit  : 0/0
 13487 ;;		Unchanged: 0/0
 13488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13492 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13493 ;;Total ram usage:        3 bytes
 13494 ;; Hardware stack levels used:    1
 13495 ;; This function calls:
 13496 ;;		Nothing
 13497 ;; This function is called by:
 13498 ;;		i2_GetMemoryLong
 13499 ;;		i2_GetMemoryChar
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           	psect	text74
 13504  003AFE                     __ptext74:
 13505                           	opt stack 0
 13506  003AFE                     i2_ReadEEPROM_1Byte:
 13507                           	opt stack 14
 13508                           
 13509                           ;EEPROM.c: 55: unsigned char GIEstatus = INTCONbits.GIE;
 13510                           
 13511                           ;incstack = 0
 13512  003AFE  0E00               	movlw	0
 13513  003B00  BEF2               	btfsc	intcon,7,c	;volatile
 13514  003B02  0E01               	movlw	1
 13515  003B04  6E16               	movwf	i2ReadEEPROM_1Byte@GIEstatus,c
 13516                           
 13517                           ;EEPROM.c: 56: EECON1bits.EEPGD = 0;
 13518  003B06  9EA6               	bcf	4006,7,c	;volatile
 13519                           
 13520                           ;EEPROM.c: 57: EECON1bits.CFGS = 0;
 13521  003B08  9CA6               	bcf	4006,6,c	;volatile
 13522                           
 13523                           ;EEPROM.c: 58: EEADRH = (unsigned char)((address & 0x300) >> 8);
 13524  003B0A  5015               	movf	i2ReadEEPROM_1Byte@address+1,w,c
 13525  003B0C  0B03               	andlw	3
 13526  003B0E  6EAA               	movwf	4010,c	;volatile
 13527                           
 13528                           ;EEPROM.c: 59: EEADR = (unsigned char)(address & 0xFF);
 13529  003B10  C014  FFA9         	movff	i2ReadEEPROM_1Byte@address,4009	;volatile
 13530                           
 13531                           ;EEPROM.c: 60: INTCONbits.GIE =0;
 13532  003B14  9EF2               	bcf	intcon,7,c	;volatile
 13533                           
 13534                           ;EEPROM.c: 61: EECON1bits.RD = 1;
 13535  003B16  80A6               	bsf	4006,0,c	;volatile
 13536                           
 13537                           ;EEPROM.c: 62: while(EECON1bits.RD);
 13538  003B18  D000               	goto	i2l397
 13539  003B1A                     i2l397:
 13540  003B1A  B0A6               	btfsc	4006,0,c	;volatile
 13541  003B1C  D7FE               	goto	i2l397
 13542                           
 13543                           ;EEPROM.c: 63: __nop();
 13544  003B1E  F000               	nop	
 13545                           
 13546                           ;EEPROM.c: 64: __nop();
 13547  003B20  F000               	nop	
 13548                           
 13549                           ;EEPROM.c: 65: if(GIEstatus)
 13550  003B22  5016               	movf	i2ReadEEPROM_1Byte@GIEstatus,w,c
 13551  003B24  A4D8               	btfss	status,2,c
 13552                           
 13553                           ;EEPROM.c: 66: {
 13554                           ;EEPROM.c: 67: INTCONbits.GIE =1;
 13555  003B26  8EF2               	bsf	intcon,7,c	;volatile
 13556                           
 13557                           ;EEPROM.c: 68: }
 13558                           ;EEPROM.c: 69: return (EEDATA);
 13559  003B28  CFA8 F014          	movff	4008,?i2_ReadEEPROM_1Byte	;volatile
 13560  003B2C  6A15               	clrf	?i2_ReadEEPROM_1Byte+1,c
 13561  003B2E  0012               	return		;funcret
 13562  003B30                     __end_ofi2_ReadEEPROM_1Byte:
 13563                           	opt stack 0
 13564                           pclatu	equ	0xFFB
 13565                           pclath	equ	0xFFA
 13566                           tblptru	equ	0xFF8
 13567                           tblptrh	equ	0xFF7
 13568                           tblptrl	equ	0xFF6
 13569                           tablat	equ	0xFF5
 13570                           prodh	equ	0xFF4
 13571                           prodl	equ	0xFF3
 13572                           intcon	equ	0xFF2
 13573                           intcon2	equ	0xFF1
 13574                           indf0	equ	0xFEF
 13575                           postinc0	equ	0xFEE
 13576                           plusw0	equ	0xFEB
 13577                           fsr0h	equ	0xFEA
 13578                           fsr0l	equ	0xFE9
 13579                           wreg	equ	0xFE8
 13580                           postdec1	equ	0xFE5
 13581                           fsr1h	equ	0xFE2
 13582                           fsr1l	equ	0xFE1
 13583                           bsr	equ	0xFE0
 13584                           indf2	equ	0xFDF
 13585                           postinc2	equ	0xFDE
 13586                           postdec2	equ	0xFDD
 13587                           plusw2	equ	0xFDB
 13588                           fsr2h	equ	0xFDA
 13589                           fsr2l	equ	0xFD9
 13590                           status	equ	0xFD8
 13591                           
 13592 ;; *************** function _SendRF_wait *****************
 13593 ;; Defined at:
 13594 ;;		line 109 in file "RF.c"
 13595 ;; Parameters:    Size  Location     Type
 13596 ;;  Code            2   24[COMRAM] PTR unsigned char 
 13597 ;;		 -> ChannelF(12), 
 13598 ;;  size            1   26[COMRAM] unsigned char 
 13599 ;;  amount          1   27[COMRAM] unsigned char 
 13600 ;; Auto vars:     Size  Location     Type
 13601 ;;		None
 13602 ;; Return value:  Size  Location     Type
 13603 ;;		None               void
 13604 ;; Registers used:
 13605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13606 ;; Tracked objects:
 13607 ;;		On entry : 0/0
 13608 ;;		On exit  : 0/0
 13609 ;;		Unchanged: 0/0
 13610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13614 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13615 ;;Total ram usage:        4 bytes
 13616 ;; Hardware stack levels used:    1
 13617 ;; Hardware stack levels required when called:    1
 13618 ;; This function calls:
 13619 ;;		_SendRF
 13620 ;; This function is called by:
 13621 ;;		_UseIRCode
 13622 ;; This function uses a non-reentrant model
 13623 ;;
 13624                           
 13625                           	psect	text75
 13626  003C16                     __ptext75:
 13627                           	opt stack 0
 13628  003C16                     _SendRF_wait:
 13629                           	opt stack 17
 13630                           
 13631                           ;RF.c: 111: while(SendRF(Code, size, amount) == 2);
 13632                           
 13633                           ;incstack = 0
 13634  003C16  D000               	goto	i2l6306
 13635  003C18                     i2l6306:
 13636  003C18  C019  F014         	movff	SendRF_wait@Code,SendRF@Code
 13637  003C1C  C01A  F015         	movff	SendRF_wait@Code+1,SendRF@Code+1
 13638  003C20  C01B  F016         	movff	SendRF_wait@size,SendRF@size
 13639  003C24  C01C  F017         	movff	SendRF_wait@amount,SendRF@RepeatAmount
 13640  003C28  EC06  F01A         	call	_SendRF	;wreg free
 13641  003C2C  0A02               	xorlw	2
 13642  003C2E  B4D8               	btfsc	status,2,c
 13643  003C30  D7F3               	goto	i2l6306
 13644  003C32  0012               	return		;funcret
 13645  003C34                     __end_of_SendRF_wait:
 13646                           	opt stack 0
 13647                           pclatu	equ	0xFFB
 13648                           pclath	equ	0xFFA
 13649                           tblptru	equ	0xFF8
 13650                           tblptrh	equ	0xFF7
 13651                           tblptrl	equ	0xFF6
 13652                           tablat	equ	0xFF5
 13653                           prodh	equ	0xFF4
 13654                           prodl	equ	0xFF3
 13655                           intcon	equ	0xFF2
 13656                           intcon2	equ	0xFF1
 13657                           indf0	equ	0xFEF
 13658                           postinc0	equ	0xFEE
 13659                           plusw0	equ	0xFEB
 13660                           fsr0h	equ	0xFEA
 13661                           fsr0l	equ	0xFE9
 13662                           wreg	equ	0xFE8
 13663                           postdec1	equ	0xFE5
 13664                           fsr1h	equ	0xFE2
 13665                           fsr1l	equ	0xFE1
 13666                           bsr	equ	0xFE0
 13667                           indf2	equ	0xFDF
 13668                           postinc2	equ	0xFDE
 13669                           postdec2	equ	0xFDD
 13670                           plusw2	equ	0xFDB
 13671                           fsr2h	equ	0xFDA
 13672                           fsr2l	equ	0xFD9
 13673                           status	equ	0xFD8
 13674                           
 13675 ;; *************** function _SendRF *****************
 13676 ;; Defined at:
 13677 ;;		line 58 in file "RF.c"
 13678 ;; Parameters:    Size  Location     Type
 13679 ;;  Code            2   19[COMRAM] PTR unsigned char 
 13680 ;;		 -> ChannelF(12), 
 13681 ;;  size            1   21[COMRAM] unsigned char 
 13682 ;;  RepeatAmount    1   22[COMRAM] unsigned char 
 13683 ;; Auto vars:     Size  Location     Type
 13684 ;;  i               1   23[COMRAM] unsigned char 
 13685 ;; Return value:  Size  Location     Type
 13686 ;;                  1    wreg      unsigned char 
 13687 ;; Registers used:
 13688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13689 ;; Tracked objects:
 13690 ;;		On entry : 0/0
 13691 ;;		On exit  : 0/0
 13692 ;;		Unchanged: 0/0
 13693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13694 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13697 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13698 ;;Total ram usage:        5 bytes
 13699 ;; Hardware stack levels used:    1
 13700 ;; This function calls:
 13701 ;;		Nothing
 13702 ;; This function is called by:
 13703 ;;		_SendRF_wait
 13704 ;; This function uses a non-reentrant model
 13705 ;;
 13706                           
 13707                           	psect	text76
 13708  00340C                     __ptext76:
 13709                           	opt stack 0
 13710  00340C                     _SendRF:
 13711                           	opt stack 17
 13712                           
 13713                           ;RF.c: 60: unsigned char i;
 13714                           ;RF.c: 61: if(Sent == 1)
 13715                           
 13716                           ;incstack = 0
 13717  00340C  044B               	decf	_Sent,w,c	;volatile
 13718  00340E  A4D8               	btfss	status,2,c
 13719  003410  D03A               	goto	i2l6162
 13720                           
 13721                           ;RF.c: 62: {
 13722                           ;RF.c: 64: Sent = 0;
 13723  003412  0E00               	movlw	0
 13724  003414  6E4B               	movwf	_Sent,c	;volatile
 13725                           
 13726                           ;RF.c: 65: Sendcount = RepeatAmount;
 13727  003416  C017  F0C0         	movff	SendRF@RepeatAmount,_Sendcount	;volatile
 13728                           
 13729                           ;RF.c: 66: RFsendFlag = 1;
 13730  00341A  0E01               	movlw	1
 13731  00341C  0100               	movlb	0	; () banked
 13732  00341E  6FBF               	movwf	_RFsendFlag& (0+255),b	;volatile
 13733                           
 13734                           ;RF.c: 67: RFcodeBit = 0;
 13735  003420  0E00               	movlw	0
 13736  003422  0100               	movlb	0	; () banked
 13737  003424  6FBD               	movwf	_RFcodeBit& (0+255),b
 13738                           
 13739                           ;RF.c: 68: RFcodePlace = 1;
 13740  003426  0E01               	movlw	1
 13741  003428  0100               	movlb	0	; () banked
 13742  00342A  6FBE               	movwf	_RFcodePlace& (0+255),b
 13743                           
 13744                           ; BSR set to: 0
 13745                           ;RF.c: 71: if(size >= 20)
 13746  00342C  0E13               	movlw	19
 13747  00342E  6416               	cpfsgt	SendRF@size,c
 13748  003430  D002               	goto	i2l6146
 13749                           
 13750                           ; BSR set to: 0
 13751                           ;RF.c: 72: {
 13752                           ;RF.c: 73: return 0;
 13753  003432  0E00               	movlw	0
 13754                           
 13755                           ; BSR set to: 0
 13756  003434  0012               	return	
 13757  003436                     i2l6146:
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;RF.c: 74: }
 13761                           ;RF.c: 75: for(i=0;i<size;i++)
 13762  003436  0E00               	movlw	0
 13763  003438  6E18               	movwf	SendRF@i,c
 13764  00343A  D014               	goto	i2l6152
 13765  00343C                     i2l6148:
 13766                           
 13767                           ;RF.c: 76: {
 13768                           ;RF.c: 77: RFsendCode[i] = Code[i];
 13769  00343C  5018               	movf	SendRF@i,w,c
 13770  00343E  0D01               	mullw	1
 13771  003440  50F3               	movf	prodl,w,c
 13772  003442  2414               	addwf	SendRF@Code,w,c
 13773  003444  6ED9               	movwf	fsr2l,c
 13774  003446  50F4               	movf	prodh,w,c
 13775  003448  2015               	addwfc	SendRF@Code+1,w,c
 13776  00344A  6EDA               	movwf	fsr2h,c
 13777  00344C  5018               	movf	SendRF@i,w,c
 13778  00344E  0D01               	mullw	1
 13779  003450  0E9F               	movlw	low _RFsendCode
 13780  003452  24F3               	addwf	prodl,w,c
 13781  003454  6EE1               	movwf	fsr1l,c
 13782  003456  0E00               	movlw	high _RFsendCode
 13783  003458  20F4               	addwfc	prodh,w,c
 13784  00345A  6EE2               	movwf	fsr1h,c
 13785  00345C  CFDF FFE7          	movff	indf2,indf1
 13786  003460  2A18               	incf	SendRF@i,f,c
 13787  003462  D000               	goto	i2l6152
 13788  003464                     i2l6152:
 13789  003464  5016               	movf	SendRF@size,w,c
 13790  003466  5C18               	subwf	SendRF@i,w,c
 13791  003468  A0D8               	btfss	status,0,c
 13792  00346A  D7E8               	goto	i2l6148
 13793                           
 13794                           ;RF.c: 78: }
 13795                           ;RF.c: 79: RFsendCode[i] = 99;
 13796  00346C  5018               	movf	SendRF@i,w,c
 13797  00346E  0D01               	mullw	1
 13798  003470  0E9F               	movlw	low _RFsendCode
 13799  003472  24F3               	addwf	prodl,w,c
 13800  003474  6ED9               	movwf	fsr2l,c
 13801  003476  0E00               	movlw	high _RFsendCode
 13802  003478  20F4               	addwfc	prodh,w,c
 13803  00347A  6EDA               	movwf	fsr2h,c
 13804  00347C  0E63               	movlw	99
 13805  00347E  6EDF               	movwf	indf2,c
 13806                           
 13807                           ;RF.c: 83: (T2CONbits.TMR2ON = 1);
 13808  003480  84CA               	bsf	4042,2,c	;volatile
 13809                           
 13810                           ;RF.c: 84: return 1;
 13811  003482  0E01               	movlw	1
 13812  003484  0012               	return	
 13813  003486                     i2l6162:
 13814                           
 13815                           ;RF.c: 85: }
 13816                           ;RF.c: 86: return 2;
 13817  003486  0E02               	movlw	2
 13818  003488  0012               	return	
 13819  00348A  0012               	return		;funcret
 13820  00348C                     __end_of_SendRF:
 13821                           	opt stack 0
 13822                           pclatu	equ	0xFFB
 13823                           pclath	equ	0xFFA
 13824                           tblptru	equ	0xFF8
 13825                           tblptrh	equ	0xFF7
 13826                           tblptrl	equ	0xFF6
 13827                           tablat	equ	0xFF5
 13828                           prodh	equ	0xFF4
 13829                           prodl	equ	0xFF3
 13830                           intcon	equ	0xFF2
 13831                           intcon2	equ	0xFF1
 13832                           indf0	equ	0xFEF
 13833                           postinc0	equ	0xFEE
 13834                           plusw0	equ	0xFEB
 13835                           fsr0h	equ	0xFEA
 13836                           fsr0l	equ	0xFE9
 13837                           wreg	equ	0xFE8
 13838                           indf1	equ	0xFE7
 13839                           postdec1	equ	0xFE5
 13840                           fsr1h	equ	0xFE2
 13841                           fsr1l	equ	0xFE1
 13842                           bsr	equ	0xFE0
 13843                           indf2	equ	0xFDF
 13844                           postinc2	equ	0xFDE
 13845                           postdec2	equ	0xFDD
 13846                           plusw2	equ	0xFDB
 13847                           fsr2h	equ	0xFDA
 13848                           fsr2l	equ	0xFD9
 13849                           status	equ	0xFD8
 13850                           
 13851 ;; *************** function _ReadPushButton *****************
 13852 ;; Defined at:
 13853 ;;		line 50 in file "Button.c"
 13854 ;; Parameters:    Size  Location     Type
 13855 ;;		None
 13856 ;; Auto vars:     Size  Location     Type
 13857 ;;		None
 13858 ;; Return value:  Size  Location     Type
 13859 ;;                  1    wreg      unsigned char 
 13860 ;; Registers used:
 13861 ;;		wreg
 13862 ;; Tracked objects:
 13863 ;;		On entry : 0/0
 13864 ;;		On exit  : 0/0
 13865 ;;		Unchanged: 0/0
 13866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13871 ;;Total ram usage:        0 bytes
 13872 ;; Hardware stack levels used:    1
 13873 ;; This function calls:
 13874 ;;		Nothing
 13875 ;; This function is called by:
 13876 ;;		_UseIRCode
 13877 ;; This function uses a non-reentrant model
 13878 ;;
 13879                           
 13880                           	psect	text77
 13881  003D54                     __ptext77:
 13882                           	opt stack 0
 13883  003D54                     _ReadPushButton:
 13884                           	opt stack 18
 13885                           
 13886                           ;Button.c: 53: if((PORTC & 0x01) != 0x01)
 13887                           
 13888                           ;incstack = 0
 13889  003D54  B082               	btfsc	3970,0,c	;volatile
 13890  003D56  D002               	goto	i2l6300
 13891                           
 13892                           ;Button.c: 54: {
 13893                           ;Button.c: 55: return 1;
 13894  003D58  0E01               	movlw	1
 13895  003D5A  0012               	return	
 13896  003D5C                     i2l6300:
 13897                           
 13898                           ;Button.c: 56: }
 13899                           ;Button.c: 57: return 0;
 13900  003D5C  0E00               	movlw	0
 13901  003D5E  0012               	return	
 13902  003D60  0012               	return		;funcret
 13903  003D62                     __end_of_ReadPushButton:
 13904                           	opt stack 0
 13905                           pclatu	equ	0xFFB
 13906                           pclath	equ	0xFFA
 13907                           tblptru	equ	0xFF8
 13908                           tblptrh	equ	0xFF7
 13909                           tblptrl	equ	0xFF6
 13910                           tablat	equ	0xFF5
 13911                           prodh	equ	0xFF4
 13912                           prodl	equ	0xFF3
 13913                           intcon	equ	0xFF2
 13914                           intcon2	equ	0xFF1
 13915                           indf0	equ	0xFEF
 13916                           postinc0	equ	0xFEE
 13917                           plusw0	equ	0xFEB
 13918                           fsr0h	equ	0xFEA
 13919                           fsr0l	equ	0xFE9
 13920                           wreg	equ	0xFE8
 13921                           indf1	equ	0xFE7
 13922                           postdec1	equ	0xFE5
 13923                           fsr1h	equ	0xFE2
 13924                           fsr1l	equ	0xFE1
 13925                           bsr	equ	0xFE0
 13926                           indf2	equ	0xFDF
 13927                           postinc2	equ	0xFDE
 13928                           postdec2	equ	0xFDD
 13929                           plusw2	equ	0xFDB
 13930                           fsr2h	equ	0xFDA
 13931                           fsr2l	equ	0xFD9
 13932                           status	equ	0xFD8
 13933                           
 13934 ;; *************** function _LEDTimerON *****************
 13935 ;; Defined at:
 13936 ;;		line 132 in file "Timer.c"
 13937 ;; Parameters:    Size  Location     Type
 13938 ;;		None
 13939 ;; Auto vars:     Size  Location     Type
 13940 ;;		None
 13941 ;; Return value:  Size  Location     Type
 13942 ;;		None               void
 13943 ;; Registers used:
 13944 ;;		wreg, status,2, cstack
 13945 ;; Tracked objects:
 13946 ;;		On entry : 0/0
 13947 ;;		On exit  : 0/0
 13948 ;;		Unchanged: 0/0
 13949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13954 ;;Total ram usage:        0 bytes
 13955 ;; Hardware stack levels used:    1
 13956 ;; Hardware stack levels required when called:    1
 13957 ;; This function calls:
 13958 ;;		_ResetTimer1
 13959 ;; This function is called by:
 13960 ;;		_UseIRCode
 13961 ;; This function uses a non-reentrant model
 13962 ;;
 13963                           
 13964                           	psect	text78
 13965  003D6E                     __ptext78:
 13966                           	opt stack 0
 13967  003D6E                     _LEDTimerON:
 13968                           	opt stack 17
 13969                           
 13970                           ;Timer.c: 134: Timer1_Postscaler = 0;
 13971                           
 13972                           ;incstack = 0
 13973  003D6E  0E00               	movlw	0
 13974  003D70  6E4A               	movwf	_Timer1_Postscaler,c
 13975                           
 13976                           ;Timer.c: 135: ResetTimer1();
 13977  003D72  ECCC  F01E         	call	_ResetTimer1	;wreg free
 13978                           
 13979                           ;Timer.c: 136: (T1CONbits.TMR1ON = TRUE);
 13980  003D76  80CD               	bsf	4045,0,c	;volatile
 13981  003D78  0012               	return		;funcret
 13982  003D7A                     __end_of_LEDTimerON:
 13983                           	opt stack 0
 13984                           pclatu	equ	0xFFB
 13985                           pclath	equ	0xFFA
 13986                           tblptru	equ	0xFF8
 13987                           tblptrh	equ	0xFF7
 13988                           tblptrl	equ	0xFF6
 13989                           tablat	equ	0xFF5
 13990                           prodh	equ	0xFF4
 13991                           prodl	equ	0xFF3
 13992                           intcon	equ	0xFF2
 13993                           intcon2	equ	0xFF1
 13994                           indf0	equ	0xFEF
 13995                           postinc0	equ	0xFEE
 13996                           plusw0	equ	0xFEB
 13997                           fsr0h	equ	0xFEA
 13998                           fsr0l	equ	0xFE9
 13999                           wreg	equ	0xFE8
 14000                           indf1	equ	0xFE7
 14001                           postdec1	equ	0xFE5
 14002                           fsr1h	equ	0xFE2
 14003                           fsr1l	equ	0xFE1
 14004                           bsr	equ	0xFE0
 14005                           indf2	equ	0xFDF
 14006                           postinc2	equ	0xFDE
 14007                           postdec2	equ	0xFDD
 14008                           plusw2	equ	0xFDB
 14009                           fsr2h	equ	0xFDA
 14010                           fsr2l	equ	0xFD9
 14011                           status	equ	0xFD8
 14012                           
 14013 ;; *************** function _ResetTimer1 *****************
 14014 ;; Defined at:
 14015 ;;		line 106 in file "Timer.c"
 14016 ;; Parameters:    Size  Location     Type
 14017 ;;		None
 14018 ;; Auto vars:     Size  Location     Type
 14019 ;;		None
 14020 ;; Return value:  Size  Location     Type
 14021 ;;		None               void
 14022 ;; Registers used:
 14023 ;;		wreg, status,2
 14024 ;; Tracked objects:
 14025 ;;		On entry : 0/0
 14026 ;;		On exit  : 0/0
 14027 ;;		Unchanged: 0/0
 14028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14033 ;;Total ram usage:        0 bytes
 14034 ;; Hardware stack levels used:    1
 14035 ;; This function calls:
 14036 ;;		Nothing
 14037 ;; This function is called by:
 14038 ;;		_LEDTimerON
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042                           	psect	text79
 14043  003D98                     __ptext79:
 14044                           	opt stack 0
 14045  003D98                     _ResetTimer1:
 14046                           	opt stack 17
 14047                           
 14048                           ;Timer.c: 112: TMR1H = 0;
 14049                           
 14050                           ;incstack = 0
 14051  003D98  0E00               	movlw	0
 14052  003D9A  6ECF               	movwf	4047,c	;volatile
 14053                           
 14054                           ;Timer.c: 113: TMR1L = 0;
 14055  003D9C  0E00               	movlw	0
 14056  003D9E  6ECE               	movwf	4046,c	;volatile
 14057  003DA0  0012               	return		;funcret
 14058  003DA2                     __end_of_ResetTimer1:
 14059                           	opt stack 0
 14060                           pclatu	equ	0xFFB
 14061                           pclath	equ	0xFFA
 14062                           tblptru	equ	0xFF8
 14063                           tblptrh	equ	0xFF7
 14064                           tblptrl	equ	0xFF6
 14065                           tablat	equ	0xFF5
 14066                           prodh	equ	0xFF4
 14067                           prodl	equ	0xFF3
 14068                           intcon	equ	0xFF2
 14069                           intcon2	equ	0xFF1
 14070                           indf0	equ	0xFEF
 14071                           postinc0	equ	0xFEE
 14072                           plusw0	equ	0xFEB
 14073                           fsr0h	equ	0xFEA
 14074                           fsr0l	equ	0xFE9
 14075                           wreg	equ	0xFE8
 14076                           indf1	equ	0xFE7
 14077                           postdec1	equ	0xFE5
 14078                           fsr1h	equ	0xFE2
 14079                           fsr1l	equ	0xFE1
 14080                           bsr	equ	0xFE0
 14081                           indf2	equ	0xFDF
 14082                           postinc2	equ	0xFDE
 14083                           postdec2	equ	0xFDD
 14084                           plusw2	equ	0xFDB
 14085                           fsr2h	equ	0xFDA
 14086                           fsr2l	equ	0xFD9
 14087                           status	equ	0xFD8
 14088                           
 14089 ;; *************** function _ResetTimer3 *****************
 14090 ;; Defined at:
 14091 ;;		line 156 in file "Timer.c"
 14092 ;; Parameters:    Size  Location     Type
 14093 ;;		None
 14094 ;; Auto vars:     Size  Location     Type
 14095 ;;		None
 14096 ;; Return value:  Size  Location     Type
 14097 ;;		None               void
 14098 ;; Registers used:
 14099 ;;		wreg, status,2
 14100 ;; Tracked objects:
 14101 ;;		On entry : 0/0
 14102 ;;		On exit  : 0/0
 14103 ;;		Unchanged: 0/0
 14104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14109 ;;Total ram usage:        0 bytes
 14110 ;; Hardware stack levels used:    1
 14111 ;; This function calls:
 14112 ;;		Nothing
 14113 ;; This function is called by:
 14114 ;;		_high_isr
 14115 ;; This function uses a non-reentrant model
 14116 ;;
 14117                           
 14118                           	psect	text80
 14119  003DA2                     __ptext80:
 14120                           	opt stack 0
 14121  003DA2                     _ResetTimer3:
 14122                           	opt stack 19
 14123                           
 14124                           ;Timer.c: 162: TMR3H = 0;
 14125                           
 14126                           ;incstack = 0
 14127  003DA2  0E00               	movlw	0
 14128  003DA4  6EB3               	movwf	4019,c	;volatile
 14129                           
 14130                           ;Timer.c: 163: TMR3L = 0;
 14131  003DA6  0E00               	movlw	0
 14132  003DA8  6EB2               	movwf	4018,c	;volatile
 14133  003DAA  0012               	return		;funcret
 14134  003DAC                     __end_of_ResetTimer3:
 14135                           	opt stack 0
 14136                           pclatu	equ	0xFFB
 14137                           pclath	equ	0xFFA
 14138                           tblptru	equ	0xFF8
 14139                           tblptrh	equ	0xFF7
 14140                           tblptrl	equ	0xFF6
 14141                           tablat	equ	0xFF5
 14142                           prodh	equ	0xFF4
 14143                           prodl	equ	0xFF3
 14144                           intcon	equ	0xFF2
 14145                           intcon2	equ	0xFF1
 14146                           indf0	equ	0xFEF
 14147                           postinc0	equ	0xFEE
 14148                           plusw0	equ	0xFEB
 14149                           fsr0h	equ	0xFEA
 14150                           fsr0l	equ	0xFE9
 14151                           wreg	equ	0xFE8
 14152                           indf1	equ	0xFE7
 14153                           postdec1	equ	0xFE5
 14154                           fsr1h	equ	0xFE2
 14155                           fsr1l	equ	0xFE1
 14156                           bsr	equ	0xFE0
 14157                           indf2	equ	0xFDF
 14158                           postinc2	equ	0xFDE
 14159                           postdec2	equ	0xFDD
 14160                           plusw2	equ	0xFDB
 14161                           fsr2h	equ	0xFDA
 14162                           fsr2l	equ	0xFD9
 14163                           status	equ	0xFD8
 14164                           
 14165 ;; *************** function _IRrawToNEC *****************
 14166 ;; Defined at:
 14167 ;;		line 111 in file "IR.c"
 14168 ;; Parameters:    Size  Location     Type
 14169 ;;  Raw             2   19[COMRAM] PTR unsigned int 
 14170 ;;		 -> IRRawCode(144), 
 14171 ;;  NEC             2   21[COMRAM] PTR unsigned long 
 14172 ;;		 -> IR_NEC(4), 
 14173 ;;  Invert          1   23[COMRAM] unsigned char 
 14174 ;; Auto vars:     Size  Location     Type
 14175 ;;  NECtemp         4   26[COMRAM] unsigned long 
 14176 ;;  StartBit        1   32[COMRAM] unsigned char 
 14177 ;;  i               1   31[COMRAM] unsigned char 
 14178 ;;  first           1   30[COMRAM] unsigned char 
 14179 ;; Return value:  Size  Location     Type
 14180 ;;                  1    wreg      unsigned char 
 14181 ;; Registers used:
 14182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14183 ;; Tracked objects:
 14184 ;;		On entry : 0/0
 14185 ;;		On exit  : 0/0
 14186 ;;		Unchanged: 0/0
 14187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14188 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14189 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14191 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14192 ;;Total ram usage:       14 bytes
 14193 ;; Hardware stack levels used:    1
 14194 ;; This function calls:
 14195 ;;		Nothing
 14196 ;; This function is called by:
 14197 ;;		_high_isr
 14198 ;; This function uses a non-reentrant model
 14199 ;;
 14200                           
 14201                           	psect	text81
 14202  001456                     __ptext81:
 14203                           	opt stack 0
 14204  001456                     _IRrawToNEC:
 14205                           	opt stack 19
 14206                           
 14207                           ;IR.c: 139: unsigned char i;
 14208                           ;IR.c: 140: unsigned char first =0;
 14209                           
 14210                           ;incstack = 0
 14211  001456  0E00               	movlw	0
 14212  001458  6E1F               	movwf	IRrawToNEC@first,c
 14213                           
 14214                           ;IR.c: 141: unsigned char StartBit=72;
 14215  00145A  0E48               	movlw	72
 14216  00145C  6E21               	movwf	IRrawToNEC@StartBit,c
 14217                           
 14218                           ;IR.c: 142: unsigned long NECtemp = 0;
 14219  00145E  0E00               	movlw	0
 14220  001460  6E1B               	movwf	IRrawToNEC@NECtemp,c
 14221  001462  0E00               	movlw	0
 14222  001464  6E1C               	movwf	IRrawToNEC@NECtemp+1,c
 14223  001466  0E00               	movlw	0
 14224  001468  6E1D               	movwf	IRrawToNEC@NECtemp+2,c
 14225  00146A  0E00               	movlw	0
 14226  00146C  6E1E               	movwf	IRrawToNEC@NECtemp+3,c
 14227                           
 14228                           ;IR.c: 145: for (i =0; i < 72; i++)
 14229  00146E  0E00               	movlw	0
 14230  001470  6E20               	movwf	IRrawToNEC@i,c
 14231  001472                     i2l4700:
 14232  001472  0E47               	movlw	71
 14233  001474  6420               	cpfsgt	IRrawToNEC@i,c
 14234  001476  D001               	goto	i2l4704
 14235  001478  D041               	goto	i2l4724
 14236  00147A                     i2l4704:
 14237                           
 14238                           ;IR.c: 146: {
 14239                           ;IR.c: 147: if(Raw[i] >= 45000 && Raw[i] <= 50000 )
 14240  00147A  5020               	movf	IRrawToNEC@i,w,c
 14241  00147C  0D02               	mullw	2
 14242  00147E  50F3               	movf	prodl,w,c
 14243  001480  2414               	addwf	IRrawToNEC@Raw,w,c
 14244  001482  6ED9               	movwf	fsr2l,c
 14245  001484  50F4               	movf	prodh,w,c
 14246  001486  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14247  001488  6EDA               	movwf	fsr2h,c
 14248  00148A  0EC8               	movlw	200
 14249  00148C  5CDE               	subwf	postinc2,w,c
 14250  00148E  0EAF               	movlw	175
 14251  001490  58DE               	subwfb	postinc2,w,c
 14252  001492  A0D8               	btfss	status,0,c
 14253  001494  D011               	goto	i2l4714
 14254  001496  5020               	movf	IRrawToNEC@i,w,c
 14255  001498  0D02               	mullw	2
 14256  00149A  50F3               	movf	prodl,w,c
 14257  00149C  2414               	addwf	IRrawToNEC@Raw,w,c
 14258  00149E  6ED9               	movwf	fsr2l,c
 14259  0014A0  50F4               	movf	prodh,w,c
 14260  0014A2  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14261  0014A4  6EDA               	movwf	fsr2h,c
 14262  0014A6  0E51               	movlw	81
 14263  0014A8  5CDE               	subwf	postinc2,w,c
 14264  0014AA  0EC3               	movlw	195
 14265  0014AC  58DE               	subwfb	postinc2,w,c
 14266  0014AE  B0D8               	btfsc	status,0,c
 14267  0014B0  D003               	goto	i2l4714
 14268                           
 14269                           ;IR.c: 148: {
 14270                           ;IR.c: 150: return 2;
 14271  0014B2  0E02               	movlw	2
 14272  0014B4  0012               	return	
 14273                           
 14274                           ;IR.c: 151: }
 14275  0014B6  D020               	goto	i2l4720
 14276  0014B8                     i2l4714:
 14277                           
 14278                           ;IR.c: 152: else if(Raw[i] >= 4000 && Raw[i] <= 5000 )
 14279  0014B8  5020               	movf	IRrawToNEC@i,w,c
 14280  0014BA  0D02               	mullw	2
 14281  0014BC  50F3               	movf	prodl,w,c
 14282  0014BE  2414               	addwf	IRrawToNEC@Raw,w,c
 14283  0014C0  6ED9               	movwf	fsr2l,c
 14284  0014C2  50F4               	movf	prodh,w,c
 14285  0014C4  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14286  0014C6  6EDA               	movwf	fsr2h,c
 14287  0014C8  0EA0               	movlw	160
 14288  0014CA  5CDE               	subwf	postinc2,w,c
 14289  0014CC  0E0F               	movlw	15
 14290  0014CE  58DE               	subwfb	postinc2,w,c
 14291  0014D0  A0D8               	btfss	status,0,c
 14292  0014D2  D012               	goto	i2l4720
 14293  0014D4  5020               	movf	IRrawToNEC@i,w,c
 14294  0014D6  0D02               	mullw	2
 14295  0014D8  50F3               	movf	prodl,w,c
 14296  0014DA  2414               	addwf	IRrawToNEC@Raw,w,c
 14297  0014DC  6ED9               	movwf	fsr2l,c
 14298  0014DE  50F4               	movf	prodh,w,c
 14299  0014E0  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14300  0014E2  6EDA               	movwf	fsr2h,c
 14301  0014E4  0E89               	movlw	137
 14302  0014E6  5CDE               	subwf	postinc2,w,c
 14303  0014E8  0E13               	movlw	19
 14304  0014EA  58DE               	subwfb	postinc2,w,c
 14305  0014EC  B0D8               	btfsc	status,0,c
 14306  0014EE  D004               	goto	i2l4720
 14307                           
 14308                           ;IR.c: 153: {
 14309                           ;IR.c: 155: StartBit = i;
 14310  0014F0  C020  F021         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 14311                           
 14312                           ;IR.c: 156: break;
 14313  0014F4  D003               	goto	i2l4724
 14314  0014F6  D000               	goto	i2l4720
 14315  0014F8                     i2l4720:
 14316  0014F8  2A20               	incf	IRrawToNEC@i,f,c
 14317  0014FA  D7BB               	goto	i2l4700
 14318  0014FC                     i2l4724:
 14319                           
 14320                           ;IR.c: 157: }
 14321                           ;IR.c: 158: }
 14322                           ;IR.c: 159: if(72 - StartBit < 72)
 14323  0014FC  5021               	movf	IRrawToNEC@StartBit,w,c
 14324  0014FE  6E19               	movwf	??_IRrawToNEC& (0+255),c
 14325  001500  6A1A               	clrf	(??_IRrawToNEC+1)& (0+255),c
 14326  001502  1E19               	comf	??_IRrawToNEC,f,c
 14327  001504  1E1A               	comf	??_IRrawToNEC+1,f,c
 14328  001506  4A19               	infsnz	??_IRrawToNEC,f,c
 14329  001508  2A1A               	incf	??_IRrawToNEC+1,f,c
 14330  00150A  0E48               	movlw	72
 14331  00150C  2619               	addwf	??_IRrawToNEC,f,c
 14332  00150E  0E00               	movlw	0
 14333  001510  221A               	addwfc	??_IRrawToNEC+1,f,c
 14334  001512  BE1A               	btfsc	??_IRrawToNEC+1,7,c
 14335  001514  D006               	goto	i2l4726
 14336  001516  501A               	movf	??_IRrawToNEC+1,w,c
 14337  001518  E106               	bnz	i2l4730
 14338  00151A  0E48               	movlw	72
 14339  00151C  5C19               	subwf	??_IRrawToNEC,w,c
 14340  00151E  B0D8               	btfsc	status,0,c
 14341  001520  D002               	goto	i2l4730
 14342  001522                     i2l4726:
 14343                           
 14344                           ;IR.c: 160: {
 14345                           ;IR.c: 162: return 0;
 14346  001522  0E00               	movlw	0
 14347  001524  0012               	return	
 14348  001526                     i2l4730:
 14349                           
 14350                           ;IR.c: 163: }
 14351                           ;IR.c: 165: StartBit++;
 14352  001526  2A21               	incf	IRrawToNEC@StartBit,f,c
 14353                           
 14354                           ;IR.c: 166: if(Raw[StartBit] >= 925 && Raw[StartBit] <= 1250 )
 14355  001528  5021               	movf	IRrawToNEC@StartBit,w,c
 14356  00152A  0D02               	mullw	2
 14357  00152C  50F3               	movf	prodl,w,c
 14358  00152E  2414               	addwf	IRrawToNEC@Raw,w,c
 14359  001530  6ED9               	movwf	fsr2l,c
 14360  001532  50F4               	movf	prodh,w,c
 14361  001534  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14362  001536  6EDA               	movwf	fsr2h,c
 14363  001538  0E9D               	movlw	157
 14364  00153A  5CDE               	subwf	postinc2,w,c
 14365  00153C  0E03               	movlw	3
 14366  00153E  58DE               	subwfb	postinc2,w,c
 14367  001540  A0D8               	btfss	status,0,c
 14368  001542  D067               	goto	i2l4752
 14369  001544  5021               	movf	IRrawToNEC@StartBit,w,c
 14370  001546  0D02               	mullw	2
 14371  001548  50F3               	movf	prodl,w,c
 14372  00154A  2414               	addwf	IRrawToNEC@Raw,w,c
 14373  00154C  6ED9               	movwf	fsr2l,c
 14374  00154E  50F4               	movf	prodh,w,c
 14375  001550  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14376  001552  6EDA               	movwf	fsr2h,c
 14377  001554  0EE3               	movlw	227
 14378  001556  5CDE               	subwf	postinc2,w,c
 14379  001558  0E04               	movlw	4
 14380  00155A  58DE               	subwfb	postinc2,w,c
 14381  00155C  B0D8               	btfsc	status,0,c
 14382  00155E  D059               	goto	i2l4752
 14383                           
 14384                           ;IR.c: 167: {
 14385                           ;IR.c: 169: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 14386  001560  5021               	movf	IRrawToNEC@StartBit,w,c
 14387  001562  0D02               	mullw	2
 14388  001564  50F3               	movf	prodl,w,c
 14389  001566  2414               	addwf	IRrawToNEC@Raw,w,c
 14390  001568  6ED9               	movwf	fsr2l,c
 14391  00156A  50F4               	movf	prodh,w,c
 14392  00156C  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14393  00156E  6EDA               	movwf	fsr2h,c
 14394  001570  0E01               	movlw	1
 14395  001572  50DB               	movf	plusw2,w,c
 14396  001574  E104               	bnz	i2u433_40
 14397  001576  0E7D               	movlw	125
 14398  001578  5CDE               	subwf	postinc2,w,c
 14399  00157A  A0D8               	btfss	status,0,c
 14400  00157C  D069               	goto	i2l4760
 14401  00157E                     i2u433_40:
 14402  00157E  5021               	movf	IRrawToNEC@StartBit,w,c
 14403  001580  0D02               	mullw	2
 14404  001582  50F3               	movf	prodl,w,c
 14405  001584  2414               	addwf	IRrawToNEC@Raw,w,c
 14406  001586  6ED9               	movwf	fsr2l,c
 14407  001588  50F4               	movf	prodh,w,c
 14408  00158A  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14409  00158C  6EDA               	movwf	fsr2h,c
 14410  00158E  0E59               	movlw	89
 14411  001590  5CDE               	subwf	postinc2,w,c
 14412  001592  0E02               	movlw	2
 14413  001594  58DE               	subwfb	postinc2,w,c
 14414  001596  B0D8               	btfsc	status,0,c
 14415  001598  D05B               	goto	i2l4760
 14416                           
 14417                           ;IR.c: 170: {
 14418                           ;IR.c: 172: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 14419  00159A  5021               	movf	IRrawToNEC@StartBit,w,c
 14420  00159C  0D02               	mullw	2
 14421  00159E  50F3               	movf	prodl,w,c
 14422  0015A0  2414               	addwf	IRrawToNEC@Raw,w,c
 14423  0015A2  6ED9               	movwf	fsr2l,c
 14424  0015A4  50F4               	movf	prodh,w,c
 14425  0015A6  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14426  0015A8  6EDA               	movwf	fsr2h,c
 14427  0015AA  0E01               	movlw	1
 14428  0015AC  50DB               	movf	plusw2,w,c
 14429  0015AE  E104               	bnz	i2u435_40
 14430  0015B0  0E7D               	movlw	125
 14431  0015B2  5CDE               	subwf	postinc2,w,c
 14432  0015B4  A0D8               	btfss	status,0,c
 14433  0015B6  D04C               	goto	i2l4760
 14434  0015B8                     i2u435_40:
 14435  0015B8  5021               	movf	IRrawToNEC@StartBit,w,c
 14436  0015BA  0D02               	mullw	2
 14437  0015BC  50F3               	movf	prodl,w,c
 14438  0015BE  2414               	addwf	IRrawToNEC@Raw,w,c
 14439  0015C0  6ED9               	movwf	fsr2l,c
 14440  0015C2  50F4               	movf	prodh,w,c
 14441  0015C4  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14442  0015C6  6EDA               	movwf	fsr2h,c
 14443  0015C8  0E59               	movlw	89
 14444  0015CA  5CDE               	subwf	postinc2,w,c
 14445  0015CC  0E02               	movlw	2
 14446  0015CE  58DE               	subwfb	postinc2,w,c
 14447  0015D0  B0D8               	btfsc	status,0,c
 14448  0015D2  D03E               	goto	i2l4760
 14449                           
 14450                           ;IR.c: 173: {
 14451                           ;IR.c: 175: if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 14452  0015D4  5021               	movf	IRrawToNEC@StartBit,w,c
 14453  0015D6  0D02               	mullw	2
 14454  0015D8  50F3               	movf	prodl,w,c
 14455  0015DA  2414               	addwf	IRrawToNEC@Raw,w,c
 14456  0015DC  6ED9               	movwf	fsr2l,c
 14457  0015DE  50F4               	movf	prodh,w,c
 14458  0015E0  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14459  0015E2  6EDA               	movwf	fsr2h,c
 14460  0015E4  0EC8               	movlw	200
 14461  0015E6  5CDE               	subwf	postinc2,w,c
 14462  0015E8  0EAF               	movlw	175
 14463  0015EA  58DE               	subwfb	postinc2,w,c
 14464  0015EC  A0D8               	btfss	status,0,c
 14465  0015EE  D030               	goto	i2l4760
 14466  0015F0  5021               	movf	IRrawToNEC@StartBit,w,c
 14467  0015F2  0D02               	mullw	2
 14468  0015F4  50F3               	movf	prodl,w,c
 14469  0015F6  2414               	addwf	IRrawToNEC@Raw,w,c
 14470  0015F8  6ED9               	movwf	fsr2l,c
 14471  0015FA  50F4               	movf	prodh,w,c
 14472  0015FC  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14473  0015FE  6EDA               	movwf	fsr2h,c
 14474  001600  0E51               	movlw	81
 14475  001602  5CDE               	subwf	postinc2,w,c
 14476  001604  0EC3               	movlw	195
 14477  001606  58DE               	subwfb	postinc2,w,c
 14478  001608  B0D8               	btfsc	status,0,c
 14479  00160A  D022               	goto	i2l4760
 14480                           
 14481                           ;IR.c: 176: {
 14482                           ;IR.c: 178: return 2;
 14483  00160C  0E02               	movlw	2
 14484  00160E  0012               	return	
 14485                           
 14486                           ;IR.c: 179: }
 14487                           ;IR.c: 180: }
 14488                           ;IR.c: 181: }
 14489                           ;IR.c: 183: }
 14490  001610  D01F               	goto	i2l4760
 14491  001612                     i2l4752:
 14492                           
 14493                           ;IR.c: 184: else if(Raw[StartBit] < 1750 || Raw[StartBit] > 2750 )
 14494  001612  5021               	movf	IRrawToNEC@StartBit,w,c
 14495  001614  0D02               	mullw	2
 14496  001616  50F3               	movf	prodl,w,c
 14497  001618  2414               	addwf	IRrawToNEC@Raw,w,c
 14498  00161A  6ED9               	movwf	fsr2l,c
 14499  00161C  50F4               	movf	prodh,w,c
 14500  00161E  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14501  001620  6EDA               	movwf	fsr2h,c
 14502  001622  0ED6               	movlw	214
 14503  001624  5CDE               	subwf	postinc2,w,c
 14504  001626  0E06               	movlw	6
 14505  001628  58DE               	subwfb	postinc2,w,c
 14506  00162A  A0D8               	btfss	status,0,c
 14507  00162C  D00E               	goto	i2l4756
 14508  00162E  5021               	movf	IRrawToNEC@StartBit,w,c
 14509  001630  0D02               	mullw	2
 14510  001632  50F3               	movf	prodl,w,c
 14511  001634  2414               	addwf	IRrawToNEC@Raw,w,c
 14512  001636  6ED9               	movwf	fsr2l,c
 14513  001638  50F4               	movf	prodh,w,c
 14514  00163A  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14515  00163C  6EDA               	movwf	fsr2h,c
 14516  00163E  0EBF               	movlw	191
 14517  001640  5CDE               	subwf	postinc2,w,c
 14518  001642  0E0A               	movlw	10
 14519  001644  58DE               	subwfb	postinc2,w,c
 14520  001646  A0D8               	btfss	status,0,c
 14521  001648  D003               	goto	i2l4760
 14522  00164A                     i2l4756:
 14523                           
 14524                           ;IR.c: 185: {
 14525                           ;IR.c: 187: return 0;
 14526  00164A  0E00               	movlw	0
 14527  00164C  0012               	return	
 14528  00164E  D000               	goto	i2l4760
 14529  001650                     i2l4760:
 14530                           
 14531                           ;IR.c: 188: }
 14532                           ;IR.c: 190: StartBit++;
 14533  001650  2A21               	incf	IRrawToNEC@StartBit,f,c
 14534                           
 14535                           ;IR.c: 191: for(i = StartBit; i < 72;i++)
 14536  001652  C021  F020         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 14537  001656                     i2l4764:
 14538  001656  0E47               	movlw	71
 14539  001658  6420               	cpfsgt	IRrawToNEC@i,c
 14540  00165A  D001               	goto	i2l4768
 14541  00165C  D0CA               	goto	i2l4844
 14542  00165E                     i2l4768:
 14543                           
 14544                           ;IR.c: 192: {
 14545                           ;IR.c: 193: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 14546  00165E  5021               	movf	IRrawToNEC@StartBit,w,c
 14547  001660  0D02               	mullw	2
 14548  001662  50F3               	movf	prodl,w,c
 14549  001664  2414               	addwf	IRrawToNEC@Raw,w,c
 14550  001666  6ED9               	movwf	fsr2l,c
 14551  001668  50F4               	movf	prodh,w,c
 14552  00166A  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14553  00166C  6EDA               	movwf	fsr2h,c
 14554  00166E  0E01               	movlw	1
 14555  001670  50DB               	movf	plusw2,w,c
 14556  001672  E104               	bnz	i2u442_40
 14557  001674  0E7D               	movlw	125
 14558  001676  5CDE               	subwf	postinc2,w,c
 14559  001678  A0D8               	btfss	status,0,c
 14560  00167A  D024               	goto	i2l4784
 14561  00167C                     i2u442_40:
 14562  00167C  5021               	movf	IRrawToNEC@StartBit,w,c
 14563  00167E  0D02               	mullw	2
 14564  001680  50F3               	movf	prodl,w,c
 14565  001682  2414               	addwf	IRrawToNEC@Raw,w,c
 14566  001684  6ED9               	movwf	fsr2l,c
 14567  001686  50F4               	movf	prodh,w,c
 14568  001688  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14569  00168A  6EDA               	movwf	fsr2h,c
 14570  00168C  0E59               	movlw	89
 14571  00168E  5CDE               	subwf	postinc2,w,c
 14572  001690  0E02               	movlw	2
 14573  001692  58DE               	subwfb	postinc2,w,c
 14574  001694  B0D8               	btfsc	status,0,c
 14575  001696  D016               	goto	i2l4784
 14576                           
 14577                           ;IR.c: 194: {
 14578                           ;IR.c: 195: if(!first)
 14579  001698  501F               	movf	IRrawToNEC@first,w,c
 14580  00169A  A4D8               	btfss	status,2,c
 14581  00169C  D002               	goto	i2l4776
 14582                           
 14583                           ;IR.c: 196: {
 14584                           ;IR.c: 198: first = 1;
 14585  00169E  0E01               	movlw	1
 14586  0016A0  D040               	goto	L4
 14587  0016A2                     i2l4776:
 14588                           
 14589                           ;IR.c: 200: else
 14590                           ;IR.c: 201: {
 14591                           ;IR.c: 203: first = 0;
 14592  0016A2  0E00               	movlw	0
 14593  0016A4  6E1F               	movwf	IRrawToNEC@first,c
 14594                           
 14595                           ;IR.c: 204: NECtemp <<= 1;
 14596  0016A6  90D8               	bcf	status,0,c
 14597  0016A8  361B               	rlcf	IRrawToNEC@NECtemp,f,c
 14598  0016AA  361C               	rlcf	IRrawToNEC@NECtemp+1,f,c
 14599  0016AC  361D               	rlcf	IRrawToNEC@NECtemp+2,f,c
 14600  0016AE  361E               	rlcf	IRrawToNEC@NECtemp+3,f,c
 14601                           
 14602                           ;IR.c: 205: if(!Invert)
 14603  0016B0  5018               	movf	IRrawToNEC@Invert,w,c
 14604  0016B2  A4D8               	btfss	status,2,c
 14605  0016B4  D09B               	goto	i2l4840
 14606                           
 14607                           ;IR.c: 206: {
 14608                           ;IR.c: 207: NECtemp++;
 14609  0016B6  0E01               	movlw	1
 14610  0016B8  261B               	addwf	IRrawToNEC@NECtemp,f,c
 14611  0016BA  0E00               	movlw	0
 14612  0016BC  221C               	addwfc	IRrawToNEC@NECtemp+1,f,c
 14613  0016BE  221D               	addwfc	IRrawToNEC@NECtemp+2,f,c
 14614  0016C0  221E               	addwfc	IRrawToNEC@NECtemp+3,f,c
 14615                           
 14616                           ;IR.c: 208: }
 14617                           ;IR.c: 209: }
 14618                           ;IR.c: 210: }
 14619  0016C2  D094               	goto	i2l4840
 14620  0016C4                     i2l4784:
 14621                           
 14622                           ;IR.c: 211: else if(Raw[StartBit] >= 700 && Raw[StartBit] <= 950)
 14623  0016C4  5021               	movf	IRrawToNEC@StartBit,w,c
 14624  0016C6  0D02               	mullw	2
 14625  0016C8  50F3               	movf	prodl,w,c
 14626  0016CA  2414               	addwf	IRrawToNEC@Raw,w,c
 14627  0016CC  6ED9               	movwf	fsr2l,c
 14628  0016CE  50F4               	movf	prodh,w,c
 14629  0016D0  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14630  0016D2  6EDA               	movwf	fsr2h,c
 14631  0016D4  0EBC               	movlw	188
 14632  0016D6  5CDE               	subwf	postinc2,w,c
 14633  0016D8  0E02               	movlw	2
 14634  0016DA  58DE               	subwfb	postinc2,w,c
 14635  0016DC  A0D8               	btfss	status,0,c
 14636  0016DE  D026               	goto	i2l4802
 14637  0016E0  5021               	movf	IRrawToNEC@StartBit,w,c
 14638  0016E2  0D02               	mullw	2
 14639  0016E4  50F3               	movf	prodl,w,c
 14640  0016E6  2414               	addwf	IRrawToNEC@Raw,w,c
 14641  0016E8  6ED9               	movwf	fsr2l,c
 14642  0016EA  50F4               	movf	prodh,w,c
 14643  0016EC  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14644  0016EE  6EDA               	movwf	fsr2h,c
 14645  0016F0  0EB7               	movlw	183
 14646  0016F2  5CDE               	subwf	postinc2,w,c
 14647  0016F4  0E03               	movlw	3
 14648  0016F6  58DE               	subwfb	postinc2,w,c
 14649  0016F8  B0D8               	btfsc	status,0,c
 14650  0016FA  D018               	goto	i2l4802
 14651                           
 14652                           ;IR.c: 212: {
 14653                           ;IR.c: 213: if(first)
 14654  0016FC  501F               	movf	IRrawToNEC@first,w,c
 14655  0016FE  B4D8               	btfsc	status,2,c
 14656  001700  D012               	goto	i2l4798
 14657                           
 14658                           ;IR.c: 214: {
 14659                           ;IR.c: 216: NECtemp <<= 1;
 14660  001702  90D8               	bcf	status,0,c
 14661  001704  361B               	rlcf	IRrawToNEC@NECtemp,f,c
 14662  001706  361C               	rlcf	IRrawToNEC@NECtemp+1,f,c
 14663  001708  361D               	rlcf	IRrawToNEC@NECtemp+2,f,c
 14664  00170A  361E               	rlcf	IRrawToNEC@NECtemp+3,f,c
 14665                           
 14666                           ;IR.c: 217: if(Invert)
 14667  00170C  5018               	movf	IRrawToNEC@Invert,w,c
 14668  00170E  B4D8               	btfsc	status,2,c
 14669  001710  D007               	goto	i2l4796
 14670                           
 14671                           ;IR.c: 218: {
 14672                           ;IR.c: 219: NECtemp++;
 14673  001712  0E01               	movlw	1
 14674  001714  261B               	addwf	IRrawToNEC@NECtemp,f,c
 14675  001716  0E00               	movlw	0
 14676  001718  221C               	addwfc	IRrawToNEC@NECtemp+1,f,c
 14677  00171A  221D               	addwfc	IRrawToNEC@NECtemp+2,f,c
 14678  00171C  221E               	addwfc	IRrawToNEC@NECtemp+3,f,c
 14679  00171E  D000               	goto	i2l4796
 14680  001720                     i2l4796:
 14681                           
 14682                           ;IR.c: 220: }
 14683                           ;IR.c: 221: first = 0;
 14684  001720  0E00               	movlw	0
 14685  001722                     L4:
 14686  001722  6E1F               	movwf	IRrawToNEC@first,c
 14687                           
 14688                           ;IR.c: 222: }
 14689  001724  D063               	goto	i2l4840
 14690  001726                     i2l4798:
 14691                           
 14692                           ;IR.c: 223: else
 14693                           ;IR.c: 224: {
 14694                           ;IR.c: 226: return 0;
 14695  001726  0E00               	movlw	0
 14696  001728  0012               	return	
 14697                           
 14698                           ;IR.c: 227: }
 14699                           ;IR.c: 228: }
 14700  00172A  D060               	goto	i2l4840
 14701  00172C                     i2l4802:
 14702                           
 14703                           ;IR.c: 229: else if(Raw[StartBit] == 0 && first == 1)
 14704  00172C  5021               	movf	IRrawToNEC@StartBit,w,c
 14705  00172E  0D02               	mullw	2
 14706  001730  50F3               	movf	prodl,w,c
 14707  001732  2414               	addwf	IRrawToNEC@Raw,w,c
 14708  001734  6ED9               	movwf	fsr2l,c
 14709  001736  50F4               	movf	prodh,w,c
 14710  001738  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14711  00173A  6EDA               	movwf	fsr2h,c
 14712  00173C  50DE               	movf	postinc2,w,c
 14713  00173E  10DE               	iorwf	postinc2,w,c
 14714  001740  A4D8               	btfss	status,2,c
 14715  001742  D012               	goto	i2l4814
 14716  001744  041F               	decf	IRrawToNEC@first,w,c
 14717  001746  A4D8               	btfss	status,2,c
 14718  001748  D00F               	goto	i2l4814
 14719  00174A                     i2l4806:
 14720                           
 14721                           ;IR.c: 230: {
 14722                           ;IR.c: 235: *NEC = NECtemp;
 14723  00174A  C016  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 14724  00174E  C017  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 14725  001752  C01B  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 14726  001756  C01C  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 14727  00175A  C01D  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 14728  00175E  C01E  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 14729  001762  D01F               	goto	i2l4820
 14730                           
 14731                           ;IR.c: 236: return 1;
 14732  001764  0012               	return	
 14733                           
 14734                           ;IR.c: 237: }
 14735  001766  D042               	goto	i2l4840
 14736  001768                     i2l4814:
 14737                           
 14738                           ;IR.c: 238: else if(Raw[StartBit] >= 19000 && Raw[StartBit] <= 21000)
 14739  001768  5021               	movf	IRrawToNEC@StartBit,w,c
 14740  00176A  0D02               	mullw	2
 14741  00176C  50F3               	movf	prodl,w,c
 14742  00176E  2414               	addwf	IRrawToNEC@Raw,w,c
 14743  001770  6ED9               	movwf	fsr2l,c
 14744  001772  50F4               	movf	prodh,w,c
 14745  001774  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14746  001776  6EDA               	movwf	fsr2h,c
 14747  001778  0E38               	movlw	56
 14748  00177A  5CDE               	subwf	postinc2,w,c
 14749  00177C  0E4A               	movlw	74
 14750  00177E  58DE               	subwfb	postinc2,w,c
 14751  001780  A0D8               	btfss	status,0,c
 14752  001782  D012               	goto	i2l4826
 14753  001784  5021               	movf	IRrawToNEC@StartBit,w,c
 14754  001786  0D02               	mullw	2
 14755  001788  50F3               	movf	prodl,w,c
 14756  00178A  2414               	addwf	IRrawToNEC@Raw,w,c
 14757  00178C  6ED9               	movwf	fsr2l,c
 14758  00178E  50F4               	movf	prodh,w,c
 14759  001790  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14760  001792  6EDA               	movwf	fsr2h,c
 14761  001794  0E09               	movlw	9
 14762  001796  5CDE               	subwf	postinc2,w,c
 14763  001798  0E52               	movlw	82
 14764  00179A  58DE               	subwfb	postinc2,w,c
 14765  00179C  B0D8               	btfsc	status,0,c
 14766  00179E  D004               	goto	i2l4826
 14767  0017A0  D7D4               	goto	i2l4806
 14768  0017A2                     i2l4820:
 14769                           
 14770                           ;IR.c: 242: return 1;
 14771  0017A2  0E01               	movlw	1
 14772  0017A4  0012               	return	
 14773                           
 14774                           ;IR.c: 243: }
 14775  0017A6  D022               	goto	i2l4840
 14776  0017A8                     i2l4826:
 14777                           
 14778                           ;IR.c: 244: else if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 14779  0017A8  5021               	movf	IRrawToNEC@StartBit,w,c
 14780  0017AA  0D02               	mullw	2
 14781  0017AC  50F3               	movf	prodl,w,c
 14782  0017AE  2414               	addwf	IRrawToNEC@Raw,w,c
 14783  0017B0  6ED9               	movwf	fsr2l,c
 14784  0017B2  50F4               	movf	prodh,w,c
 14785  0017B4  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14786  0017B6  6EDA               	movwf	fsr2h,c
 14787  0017B8  0EC8               	movlw	200
 14788  0017BA  5CDE               	subwf	postinc2,w,c
 14789  0017BC  0EAF               	movlw	175
 14790  0017BE  58DE               	subwfb	postinc2,w,c
 14791  0017C0  A0D8               	btfss	status,0,c
 14792  0017C2  D011               	goto	i2l4836
 14793  0017C4  5021               	movf	IRrawToNEC@StartBit,w,c
 14794  0017C6  0D02               	mullw	2
 14795  0017C8  50F3               	movf	prodl,w,c
 14796  0017CA  2414               	addwf	IRrawToNEC@Raw,w,c
 14797  0017CC  6ED9               	movwf	fsr2l,c
 14798  0017CE  50F4               	movf	prodh,w,c
 14799  0017D0  2015               	addwfc	IRrawToNEC@Raw+1,w,c
 14800  0017D2  6EDA               	movwf	fsr2h,c
 14801  0017D4  0E51               	movlw	81
 14802  0017D6  5CDE               	subwf	postinc2,w,c
 14803  0017D8  0EC3               	movlw	195
 14804  0017DA  58DE               	subwfb	postinc2,w,c
 14805  0017DC  B0D8               	btfsc	status,0,c
 14806  0017DE  D003               	goto	i2l4836
 14807                           
 14808                           ;IR.c: 245: {
 14809                           ;IR.c: 247: return 2;
 14810  0017E0  0E02               	movlw	2
 14811  0017E2  0012               	return	
 14812                           
 14813                           ;IR.c: 248: }
 14814  0017E4  D003               	goto	i2l4840
 14815  0017E6                     i2l4836:
 14816                           
 14817                           ;IR.c: 249: else
 14818                           ;IR.c: 250: {
 14819                           ;IR.c: 251: return 0;
 14820  0017E6  0E00               	movlw	0
 14821  0017E8  0012               	return	
 14822  0017EA  D000               	goto	i2l4840
 14823  0017EC                     i2l4840:
 14824                           
 14825                           ;IR.c: 252: }
 14826                           ;IR.c: 253: StartBit++;
 14827  0017EC  2A21               	incf	IRrawToNEC@StartBit,f,c
 14828  0017EE  2A20               	incf	IRrawToNEC@i,f,c
 14829  0017F0  D732               	goto	i2l4764
 14830  0017F2                     i2l4844:
 14831                           
 14832                           ;IR.c: 254: }
 14833                           ;IR.c: 256: return 0;
 14834  0017F2  0E00               	movlw	0
 14835  0017F4  0012               	return	
 14836  0017F6  0012               	return		;funcret
 14837  0017F8                     __end_of_IRrawToNEC:
 14838                           	opt stack 0
 14839                           pclatu	equ	0xFFB
 14840                           pclath	equ	0xFFA
 14841                           tblptru	equ	0xFF8
 14842                           tblptrh	equ	0xFF7
 14843                           tblptrl	equ	0xFF6
 14844                           tablat	equ	0xFF5
 14845                           prodh	equ	0xFF4
 14846                           prodl	equ	0xFF3
 14847                           intcon	equ	0xFF2
 14848                           intcon2	equ	0xFF1
 14849                           indf0	equ	0xFEF
 14850                           postinc0	equ	0xFEE
 14851                           plusw0	equ	0xFEB
 14852                           fsr0h	equ	0xFEA
 14853                           fsr0l	equ	0xFE9
 14854                           wreg	equ	0xFE8
 14855                           indf1	equ	0xFE7
 14856                           postdec1	equ	0xFE5
 14857                           fsr1h	equ	0xFE2
 14858                           fsr1l	equ	0xFE1
 14859                           bsr	equ	0xFE0
 14860                           indf2	equ	0xFDF
 14861                           postinc2	equ	0xFDE
 14862                           postdec2	equ	0xFDD
 14863                           plusw2	equ	0xFDB
 14864                           fsr2h	equ	0xFDA
 14865                           fsr2l	equ	0xFD9
 14866                           status	equ	0xFD8
 14867                           pclatu	equ	0xFFB
 14868                           pclath	equ	0xFFA
 14869                           tblptru	equ	0xFF8
 14870                           tblptrh	equ	0xFF7
 14871                           tblptrl	equ	0xFF6
 14872                           tablat	equ	0xFF5
 14873                           prodh	equ	0xFF4
 14874                           prodl	equ	0xFF3
 14875                           intcon	equ	0xFF2
 14876                           intcon2	equ	0xFF1
 14877                           indf0	equ	0xFEF
 14878                           postinc0	equ	0xFEE
 14879                           plusw0	equ	0xFEB
 14880                           fsr0h	equ	0xFEA
 14881                           fsr0l	equ	0xFE9
 14882                           wreg	equ	0xFE8
 14883                           indf1	equ	0xFE7
 14884                           postdec1	equ	0xFE5
 14885                           fsr1h	equ	0xFE2
 14886                           fsr1l	equ	0xFE1
 14887                           bsr	equ	0xFE0
 14888                           indf2	equ	0xFDF
 14889                           postinc2	equ	0xFDE
 14890                           postdec2	equ	0xFDD
 14891                           plusw2	equ	0xFDB
 14892                           fsr2h	equ	0xFDA
 14893                           fsr2l	equ	0xFD9
 14894                           status	equ	0xFD8
 14895                           
 14896                           	psect	rparam
 14897  0000                     pclatu	equ	0xFFB
 14898                           pclath	equ	0xFFA
 14899                           tblptru	equ	0xFF8
 14900                           tblptrh	equ	0xFF7
 14901                           tblptrl	equ	0xFF6
 14902                           tablat	equ	0xFF5
 14903                           prodh	equ	0xFF4
 14904                           prodl	equ	0xFF3
 14905                           intcon	equ	0xFF2
 14906                           intcon2	equ	0xFF1
 14907                           indf0	equ	0xFEF
 14908                           postinc0	equ	0xFEE
 14909                           plusw0	equ	0xFEB
 14910                           fsr0h	equ	0xFEA
 14911                           fsr0l	equ	0xFE9
 14912                           wreg	equ	0xFE8
 14913                           indf1	equ	0xFE7
 14914                           postdec1	equ	0xFE5
 14915                           fsr1h	equ	0xFE2
 14916                           fsr1l	equ	0xFE1
 14917                           bsr	equ	0xFE0
 14918                           indf2	equ	0xFDF
 14919                           postinc2	equ	0xFDE
 14920                           postdec2	equ	0xFDD
 14921                           plusw2	equ	0xFDB
 14922                           fsr2h	equ	0xFDA
 14923                           fsr2l	equ	0xFD9
 14924                           status	equ	0xFD8


Data Sizes:
    Strings     114
    Constant    49
    Data        67
    BSS         699
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     70      75
    BANK0           160     63     116
    BANK1           256     50     248
    BANK2           256      0     255
    BANK3           256      0     255
    BANK4           256     51      51
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_14(CODE[28]), STR_3(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> BluetoothInitialSetup@buf(BANK4[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    SendRF_wait@Code	PTR unsigned char  size(2) Largest target is 12
		 -> ChannelF(BANK0[12]), 

    SendRF@Code	PTR unsigned char  size(2) Largest target is 12
		 -> ChannelF(BANK0[12]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK0[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(BANK0[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK1[144]), 

    InternalADC_Read@ADCcounts	PTR unsigned int  size(2) Largest target is 2
		 -> ReadVoltage@temp(BANK1[2]), 

    UARTstring@data	PTR unsigned char  size(2) Largest target is 50
		 -> STR_15(CODE[5]), STR_13(CODE[5]), STR_11(CODE[6]), STR_9(CODE[6]), 
		 -> STR_7(CODE[9]), STR_5(CODE[21]), BluetoothInitialSetup@buf(BANK4[50]), STR_1(CODE[4]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 255
		 -> CommandString(BANK2[255]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_16(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), 
		 -> STR_6(CODE[4]), STR_4(CODE[4]), BluetoothInitialSetup@buf(BANK4[50]), STR_2(CODE[4]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK1[144]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 255
		 -> BluetoothInitialSetup@buf(BANK4[50]), CommandString(BANK2[255]), ReceivedString(BANK3[255]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_UseIRCode
    i2_SyncGlobalToEEPROM->i2_SetEEPROM
    i2_SetEEPROM->i2_SetMemoryLong
    i2_SetMemoryLong->i2_GetMemoryLong
    i2_GetMemoryLong->i2_ReadEEPROM_1Byte
    i2_SetMemoryChar->i2_GetMemoryChar
    i2_GetMemoryChar->i2_ReadEEPROM_1Byte
    _SendRF_wait->_SendRF

Critical Paths under _low_isr in COMRAM

    _low_isr->_IsCharacter
    _low_isr->_ReadUSART

Critical Paths under _main in BANK0

    _ReadVoltage->___ftdiv
    ___lwtoft->___ftpack
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft
    _InternalADC_Read->_delayUS
    _GetEEPROM->_GetMemoryLong
    ___lltoft->___ftpack
    _Round->___altoft
    ___fttol->___ftadd
    ___fttol->___lltoft
    ___ftadd->___ftpack
    ___altoft->___ftpack
    _InitIR->_cleanBuffer16bit
    _BluetoothInitialSetup->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _EnterCommandMode->_delayUS
    _UARTstring->_UARTchar
    _ResetBlue->_delayUS
    _SetMemoryLong->_GetMemoryLong
    _GetMemoryLong->_ReadEEPROM_1Byte
    _SetMemoryChar->_GetMemoryChar
    _GetMemoryChar->_ReadEEPROM_1Byte

Critical Paths under _high_isr in BANK0

    _high_isr->_UseIRCode
    i2_SyncGlobalToEEPROM->i2_SetEEPROM
    i2_SetEEPROM->i2_SetMemoryLong

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _ReadVoltage->___ftmul
    ___ftmul->___ftdiv
    _SyncEEPROMToGlobal->_GetEEPROM
    _GetEEPROM->_GetMemoryLong
    _InitUART->_Round
    _Round->___fttol
    ___fttol->___ftadd
    _BluetoothInitialSetup->_sprintf
    _sprintf->___llmod
    _SyncGlobalToEEPROM->_SetEEPROM
    _SetEEPROM->_SetMemoryLong
    _SetMemoryLong->_GetMemoryLong

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    _InitBluetooth->_BluetoothInitialSetup

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   49004
                                             62 BANK0      1     1      0
                _ConfigureOscillator
                            _InitApp
                        _Init_System
                        _ReadVoltage
                             ___ftge
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     348
                                             44 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _ReadVoltage                                          8     5      3   10968
                                             24 BANK1      8     5      3
                   _InternalADC_Read
                  _VoltageDividerOFF
                   _VoltageDividerON
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2284
                                             52 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2896
                                              9 BANK1     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2828
                                             55 BANK0      6     0      6
                                              0 BANK1      9     9      0
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _VoltageDividerON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _VoltageDividerOFF                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InternalADC_Read                                     6     4      2    1553
                                             54 BANK0      6     4      2
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0   36321
                            _InitADC
                      _InitBluetooth
                             _InitIR
                         _InitTimers
                           _InitUART
                 _SyncEEPROMToGlobal
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _SyncEEPROMToGlobal                                   5     5      0    1603
                                             30 BANK1      5     5      0
                          _GetEEPROM
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM                                           10     5      5    1535
                                             20 BANK1     10     5      5
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (2) _InitUART                                            18    14      4   10818
                                             25 BANK1     18    14      4
                   _Local_CloseUSART
                          _OpenUSART
                              _Round
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2355
                                             52 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _Round                                                7     4      3    6811
                                             18 BANK1      7     4      3
                           ___altoft
                            ___ftadd
                            ___fttol
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     501
                                              3 BANK1     15    11      4
                            ___ftadd (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    3723
                                             52 BANK0      9     3      6
                                              0 BANK1      3     3      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2457
                                             52 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2188
                                             44 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     375
                                             44 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _Local_CloseUSART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimers                                           0     0      0       0
                         _InitTimer1
                         _InitTimer2
                         _InitTimer3
 ---------------------------------------------------------------------------------
 (3) _InitTimer3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitIR                                               0     0      0     197
                         _InitTimer0
                          _ReadIRpin
                        _ResetTimer0
                   _cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (3) _cleanBuffer16bit                                     8     4      4     197
                                             44 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _ResetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitBluetooth                                        0     0      0   21750
                _BluetoothConfigured
              _BluetoothInitialSetup
                          _ResetBlue
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BluetoothInitialSetup                               51    51      0   13830
                                              0 BANK4     51    51      0
                   _EnterCommandMode
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             29    21      8    1890
                                             58 BANK0      2     2      0
                                              8 BANK1     18    10      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     362
                                             57 BANK0      1     1      0
                                              0 BANK1      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     501
                                             44 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _EnterCommandMode                                     1     1      0    6433
                                             54 BANK0      1     1      0
                      _BlueConnected
                          _ResetBlue
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _cleanBuffer                                          8     4      4    1953
                                             44 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _UARTstring                                           2     0      2     647
                                             45 BANK0      2     0      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (5) _UARTchar                                             1     1      0      62
                                             44 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _StringContains                                       5     1      4    1204
                                             44 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _ResetBlue                                            0     0      0    1296
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _delayUS                                             10     6      4    1296
                                             44 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _BlueConnected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BluetoothConfigured                                  0     0      0    4671
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (4) _SyncGlobalToEEPROM                                   0     0      0    4671
                          _SetEEPROM
 ---------------------------------------------------------------------------------
 (5) _SetEEPROM                                           13     4      9    4671
                                             37 BANK1     13     4      9
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (6) _SetMemoryLong                                       17    12      5    2495
                                             20 BANK1     17    12      5
                      _GetMemoryLong
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (4) _GetMemoryLong                                       33    29      4     848
                                             47 BANK0     13     9      4
                                              0 BANK1     20    20      0
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (6) _SetMemoryChar                                        3     2      1    1876
                                             53 BANK0      3     2      1
                      _GetMemoryChar
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (7) _WriteEEPROM_1Byte                                    4     1      3    1037
                                             44 BANK0      4     1      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (8) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _GetMemoryChar                                        6     2      4     616
                                             47 BANK0      6     2      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _ReadEEPROM_1Byte                                     3     1      2     551
                                             44 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
                           _ResetADC
 ---------------------------------------------------------------------------------
 (3) _ResetADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             18    18      0     179
                                              1 COMRAM    18    18      0
                        _IsCharacter
                          _ReadUSART
                    i1_BlueConnected
 ---------------------------------------------------------------------------------
 (10) i1_BlueConnected                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ReadUSART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _IsCharacter                                         1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _high_isr                                           21    21      0    6039
                                             23 BANK0     21    21      0
                         _IRrawToNEC
                        _ResetTimer3
                          _UseIRCode
                        i2_ReadIRpin
                      i2_ResetTimer0
 ---------------------------------------------------------------------------------
 (12) i2_ResetTimer0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_ReadIRpin                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _UseIRCode                                           8     2      6    4272
                                             68 COMRAM     2     2      0
                                             17 BANK0      6     0      6
                         _LEDTimerON
                     _ReadPushButton
                        _SendRF_wait
               i2_SyncGlobalToEEPROM
                          i2_delayUS
 ---------------------------------------------------------------------------------
 (13) i2_delayUS                                          10     6      4     276
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (13) i2_SyncGlobalToEEPROM                                0     0      0    2835
                        i2_SetEEPROM
 ---------------------------------------------------------------------------------
 (14) i2_SetEEPROM                                        13     4      9    2835
                                             64 COMRAM     4     4      0
                                              8 BANK0      9     0      9
                    i2_SetMemoryChar
                    i2_SetMemoryLong
 ---------------------------------------------------------------------------------
 (15) i2_SetMemoryLong                                    17    12      5    1595
                                             55 COMRAM     9     4      5
                                              0 BANK0      8     8      0
                    i2_GetMemoryLong
                i2_WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (16) i2_GetMemoryLong                                    33    29      4     568
                                             22 COMRAM    33    29      4
                 i2_ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (15) i2_SetMemoryChar                                     3     2      1    1006
                                             28 COMRAM     3     2      1
                    i2_GetMemoryChar
                i2_WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (16) i2_WriteEEPROM_1Byte                                 4     1      3     477
                                             19 COMRAM     4     1      3
                    i2_EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (17) i2_EEPROM_UNLOCK                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_GetMemoryChar                                     6     2      4     336
                                             22 COMRAM     6     2      4
                 i2_ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (17) i2_ReadEEPROM_1Byte                                  3     1      2     271
                                             19 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (13) _SendRF_wait                                         4     0      4     737
                                             24 COMRAM     4     0      4
                             _SendRF
 ---------------------------------------------------------------------------------
 (14) _SendRF                                              5     1      4     449
                                             19 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (13) _ReadPushButton                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _LEDTimerON                                          0     0      0       0
                        _ResetTimer1
 ---------------------------------------------------------------------------------
 (14) _ResetTimer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ResetTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _IRrawToNEC                                         14     9      5    1541
                                             19 COMRAM    14     9      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _Init_System
     _InitADC
       _ResetADC
     _InitBluetooth
       _BluetoothConfigured
         _SyncGlobalToEEPROM
           _SetEEPROM
             _SetMemoryChar
               _GetMemoryChar
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
             _SetMemoryLong
               _GetMemoryLong
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
       _BluetoothInitialSetup
         _EnterCommandMode
           _BlueConnected
           _ResetBlue
             _delayUS
           _StringContains
           _UARTstring
             _UARTchar
           _cleanBuffer
           _delayUS
         _StringContains
         _UARTstring
           _UARTchar
         _cleanBuffer
         _delayUS
         _sprintf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
       _ResetBlue
         _delayUS
       _cleanBuffer
     _InitIR
       _InitTimer0
       _ReadIRpin
       _ResetTimer0
       _cleanBuffer16bit
     _InitTimers
       _InitTimer1
       _InitTimer2
       _InitTimer3
     _InitUART
       _Local_CloseUSART
       _OpenUSART
       _Round
         ___altoft
           ___ftpack
         ___ftadd
           ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___lldiv
       ___lltoft
         ___ftpack
     _SyncEEPROMToGlobal
       _GetEEPROM
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _cleanBuffer
   _ReadVoltage
     _InternalADC_Read
       _delayUS
     _VoltageDividerOFF
     _VoltageDividerON
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _delayUS
   ___ftge
   _delayUS

 _low_isr (ROOT)
   _IsCharacter
   _ReadUSART
   i1_BlueConnected

 _high_isr (ROOT)
   _IRrawToNEC
   _ResetTimer3
   _UseIRCode
     _LEDTimerON
       _ResetTimer1
     _ReadPushButton
     _SendRF_wait
       _SendRF
     i2_SyncGlobalToEEPROM
       i2_SetEEPROM
         i2_SetMemoryChar
           i2_GetMemoryChar
             i2_ReadEEPROM_1Byte
           i2_WriteEEPROM_1Byte
             i2_EEPROM_UNLOCK
         i2_SetMemoryLong
           i2_GetMemoryLong
             i2_ReadEEPROM_1Byte
           i2_WriteEEPROM_1Byte
             i2_EEPROM_UNLOCK
     i2_delayUS
   i2_ReadIRpin
   i2_ResetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100     33      33      13       19.9%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     32      F8       7       96.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3F      74       5       72.5%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     46      4B       1       78.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3E8      32        0.0%
DATA                 0      0     3E8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Apr 04 00:41:59 2015

                  ___altoft@exp 009C         __size_of_StringContains 00A4                   ___altoft@sign 009D  
          ?_BluetoothConfigured 0001                              l31 2F18                              l95 35BE  
                            l97 35A8                              _SN 01C2             ?_SyncGlobalToEEPROM 0001  
                            bsr 000FE0                 i2_GetMemoryChar 3BF8                    __CFG_CP0$OFF 000000  
               i2_GetMemoryLong 2A3C                    __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000  
                  __CFG_CP3$OFF 000000                    ___ftadd@exp1 01C8                    ___ftadd@exp2 01C7  
                   ?_LEDTimerON 0001                    ___ftadd@sign 01C6                             l211 34E6  
                           l213 34F6                             l214 34F8                             l207 34C2  
                           l410 3960                             l219 3BF2                             l404 3C74  
                           l289 322E                             l397 3996                             l879 1E7A  
                  __CFG_CPB$OFF 000000                             _PR2 000FCB                i2SetMemoryLong@H 0064  
                  __CFG_CPD$OFF 000000                i2SetMemoryLong@L 0067                 i2_EEPROM_UNLOCK 3CAA  
                    _IRrawToNEC 1456             __end_of_IsCharacter 3C68                    __CFG_BORV$18 000000  
                           prod 000FF3                             wreg 000FE8                   _InitBluetooth 37BE  
                  __CFG_LVP$OFF 000000                    ___ftdiv@cntr 01C9                    ___ftdiv@sign 01CE  
                          l1214 27F6                            l1243 1BF0                            l1350 2E48  
                          l1247 1C2A                            l1360 310C                            l1249 1C54  
                          l1258 1D38                            l1267 1D62                            l1278 243E  
                          l4054 3664                            l4146 3D16                            l4058 3688  
                          l6020 3C4A                            l6032 10D4                            l5410 3BEC  
                          l6114 13CA                            l6042 1150                            l5420 3A20  
                          l5404 35B0                            l5502 31AE                            l5510 3710  
                          l6126 1436                            l6070 123C                            l6056 11C6  
                          l6320 239A                            l5530 3378                            l5514 373E  
                          l6170 33A6                            l6314 2360                            l5524 3342  
                          l5540 3D24                            l5604 2E34                            l5620 30F8  
                          l5612 3096                            l6084 12B2                            l6260 31E8  
                          l6340 23FC                            l5710 2CAA                            l5614 30A8  
                          l6350 2450                            l5448 2A36                            l5480 36E2  
                          l5616 30B2                            l5720 1E14                            l5560 2750  
                          l6168 3394                            l6264 31F2                            l6360 21F4  
                          l4920 2BBA                            l5394 3598                            l6098 1328  
                          l5570 27E6                            l5562 2782                            l5554 272A  
                          l5396 359E                            l5492 315A                            l5484 3122  
                          l5476 36C2                            l5732 1E48                            l5820 1C4A  
                          l6268 3204                            l6380 227E                            l4916 2B78  
                          l5750 1EEA                            l5742 1EC4                            l5726 1E32  
                          l5582 2820                            l5566 27A4                            l5558 2740  
                          l5830 1C8C                            l5814 1C38                            l6390 22C2  
                          l6366 222E                            l6470 2FAE                            l4926 2BFE  
                          l5592 2DC2                            l5728 1E3C                            l5576 2802  
                          l5568 27D6                            l5840 1CDC                            l5808 1BFE  
                          l5912 25B6                            l5904 2578                            l6384 229E  
                          l6472 2FC2                            l5498 316E                            l5682 2C0C  
                          l5594 2DD4                            l5770 1F6A                            l5762 1F38  
                          l5754 1EF8                            l5738 1E9C                            l5850 1D28  
                          l5842 1CE8                            l5906 258A                            l6394 22E2  
                          l6562 2E72                            l5676 38EA                            l5692 2C22  
                          l5596 2DDE                            l5748 1EE4                            l5780 203A  
                          l5836 1CBC                            l5908 2598                            l6388 22BA  
                          l5758 1F32                            l5838 1CCC                            l6398 22FE  
                          l6566 2E7C                            l5776 2000                            l5768 1F5A  
                          l5792 3290                            l5856 1D8E                            l5848 1D18  
                          l5778 201A                            l5794 32A2                            l5866 1DDE  
                          l6578 2EB6                            l5980 34C6                            l5972 34AE  
                          l5876 24B2                            l6588 2F16                            l5894 2546  
                          l5992 34EA                            l5984 34D0                            l5976 34B8  
                          l5968 34A2                            l5898 255A                            l5988 34DA  
                          STR_1 1094                            STR_2 1098                            STR_3 104E  
                          STR_4 10A0                            STR_5 1066                            STR_6 10A0  
                          STR_7 107B                            STR_8 10A0                            STR_9 1084  
          ??_SyncGlobalToEEPROM 009C                            _LATA 000F89                            _LATB 000F8A  
                          _LATC 000F8B                            u5400 297A                            u6131 248E  
                          u5405 296E                            u6150 24D8                            u5520 3732  
                          u6321 39E0                            u5530 3760                            u6155 24CE  
                          u5460 3150                            u5527 3728                            u5537 3756  
                          u5490 319E                            u5467 3146                            u6551 3BBC  
                          u6711 220A                            u6560 28B4                            u5761 38B4  
                          u5497 3194                            u5921 1B9E                            u6641 233C  
                          u5931 1BBC               i2SetMemoryLong@MH 0065                            u6565 28A8  
                          u6661 2376                            i2l95 3842               i2SetMemoryLong@ML 0066  
                          i2l97 3830                            u6691 21D0                            _TMR2 000FCC  
                          _WPUB 000F7C                  ?i2_ResetTimer0 0001                            _Sent 004B  
    WriteEEPROM_1Byte@GIEstatus 008F       SetMemoryChar@AddressFirst 0095                            _main 2E5A  
                  ___ftpack@arg 008C                    ___ftpack@exp 008F                            fsr0h 000FEA  
                          fsr1h 000FE2                            indf0 000FEF                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                      _RFsendCode 009F  
                    _RFsendFlag 00BF                            pclat 000FFA                      i2delayUS@i 0019  
                    i2delayUS@j 001D                     _RFcodePlace 00BE                            prodh 000FF4  
                          prodl 000FF3                            start 0146                   __CFG_IESO$OFF 000000  
                 __CFG_MCLRE$ON 000000                    ___ftmul@cntr 01DC                  UARTstring@data 008D  
                  ___param_bank 000010                    ___ftmul@sign 01DD                 __end_of_InitADC 3C94  
               __end_of_InitApp 3A5E         __size_of_ReadPushButton 000E           ??_BluetoothConfigured 009C  
                  ___fttol@exp1 01D7                   ??_Init_System 009E                    ___fttol@lval 01D3  
             IRrawToNEC@NECtemp 001B                ?i2_SetMemoryChar 001D                ?i2_SetMemoryLong 0038  
               __end_of_Version 1032                   ??_ReadVoltage 009D                           ?_main 0001  
                         _EEADR 000FA9                 __end_of___ftadd 1E06                           STR_10 10A0  
                         STR_11 1084                           STR_12 10A0                           STR_13 108F  
                         STR_14 1032                           STR_15 108A                           STR_16 109C  
               __end_of___ftdiv 2478                           _ANSEL 000F7E                 __end_of___lldiv 2E5A  
               __end_of___ftmul 2326                 __end_of___llmod 311E                 __end_of___fttol 25CA  
       ReadEEPROM_1Byte@address 008C     i2SetMemoryLong@AddressFirst 003C                           i1l231 3CA0  
                         i1l604 00E4                           i2l410 3A84                           i2l404 3CB6  
                         i2l543 190A                           i2l544 1906                           i2l545 18FE  
                         i2l554 1900                           i2l555 1908                           i2l397 3B1A  
                         i2l557 1958                           i2l549 18A0                           i2l559 1B2E  
                         _RCREG 000FAE                           _RCSTA 000FAB                           _TMR0H 000FD7  
                         _TMR1H 000FCF                           _TMR0L 000FD6                           _TMR3H 000FB3  
                         _TMR1L 000FCE                           _TMR3L 000FB2                           _SPBRG 000FAF  
                         _PORTA 000F80                           _PORTB 000F81                           _PORTC 000F82  
                  InitUART@Baud 01DF                           _TXREG 000FAD                           _TXSTA 000FAC  
           _ConfigureOscillator 3DB6                 __end_of_delayUS 35F0                   __CFG_PWRT$OFF 000000  
              _InternalADC_Read 31C2                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000               _NewReceivedString 0048  
                  ___lltoft@exp 009C                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                ?_InitBluetooth 0001                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                      SendRF@Code 0014                    InitUART@temp 01ED  
                  _IRrawCodeNum 00BC                           _Round 35F0                   __CFG_WRTB$OFF 000000  
         _BluetoothInitialSetup 10A6        __end_of_Local_CloseUSART 3CF2                   __CFG_WRTC$OFF 000000  
         __end_of_BlueConnected 3D2A                   __CFG_WRTD$OFF 000000                __end_of_UARTchar 3BF8  
                __CFG_EBTRB$OFF 000000                 __end_of_dpowers 1029                      SendRF@size 0016  
                 ___ftpack@sign 0090                           main@i 009E                 __end_of_low_isr 0146  
                   i2delayUS@US 0014                           tablat 000FF5                           plusw0 000FEB  
                         plusw2 000FDB                     ?_UARTstring 008D         InternalADC_Read@channel 009B  
                         status 000FD8                 __end_of_sprintf 204A                  __CFG_HFOFST$ON 000000  
          __size_of_cleanBuffer 005A             i2SetMemoryChar@Data 001F             __size_of_LEDTimerON 000C  
           i2SetMemoryChar@Test 001E           __end_of_GetMemoryChar 3BB2                  __CFG_PBADEN$ON 000000  
          ?_ConfigureOscillator 0001           __end_of_GetMemoryLong 21BA                   ??_SendRF_wait 001D  
            StringContains@That 008E              StringContains@This 008C                   high_isr@IRpin 0089  
       __end_ofi2_GetMemoryChar 3C16                 __initialization 2FD6           __end_of_EEPROM_UNLOCK 3C7E  
            __size_ofi2_delayUS 004E         __end_ofi2_GetMemoryLong 2B36                      _InitTimer0 3CD4  
                    _InitTimer1 3D00                      _InitTimer2 3CF2                      _InitTimer3 3D7A  
            __size_of_GetEEPROM 003A                   high_isr@Time0 008A                      _InitTimers 3CC0  
                  __end_of_main 2F1E                __end_of_InitUART 2942         __end_ofi2_EEPROM_UNLOCK 3CC0  
                   _IsCharacter 3C50                          ??_main 009E                   ___fttol@sign1 01D2  
              __end_of_ResetADC 3D38                   __activetblptr 000002              SendRF@RepeatAmount 0017  
  __size_ofi2_WriteEEPROM_1Byte 0038                     ?_IRrawToNEC 0014             __end_of_Init_System 37BE  
                        ?_Round 01D8             __end_of_ReadVoltage 2FD6                      UseIRCode@i 0046  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
              __end_of___altoft 3306                ___llmod@dividend 01C6                          _ADRESH 000FC4  
                        _EEADRH 000FAA                          _ADRESL 000FC3                          _EEDATA 000FA8  
                        _EECON2 000FA7                 ??i2_ResetTimer0 0014                __end_of___ftpack 2830  
                        _ANSELH 000F7F               ?_VoltageDividerON 0001                   ??_ResetTimer0 008C  
                 ??_ResetTimer1 0014                   ??_ResetTimer3 0014                __end_of___lltoft 340C  
                        i1l5264 0094                          i1l5282 00E0                          i1l5292 00FA  
                        i1l5294 00FE                          i1l5278 00D4                          i1l4668 3C62  
                        i1l4950 3D40                  __CFG_WDTEN$OFF 000000                          i2l4700 1472  
                        i2l6300 3D5C                          i2l4720 14F8                          i2l4704 147A  
                        i2l6152 3464                          i2l4802 172C                          i2l4730 1526  
                        i2l4714 14B8                          i2l6146 3436                          i2l6162 3486  
                        i2l6306 3C18                          i2l6410 3828                          i2l4820 17A2  
                        i2l4724 14FC                          i2l6148 343C                          i2l6500 2612  
                        i2l4806 174A                          i2l4814 1768                          i2l4726 1522  
                        i2l6190 3570                          i2l4840 17EC                          i2l4760 1650  
                        i2l4752 1612                          i2l6184 353E                          i2l6408 3824  
                        i2l6512 2642                          i2l4826 17A8                          i2l6426 3930  
                        i2l6418 3836                          i2l6522 2674                          i2l4836 17E6  
                        i2l4844 17F2                          i2l4764 1656                          i2l4756 164A  
                        i2l6524 2678                          i2l6508 263A                          i2l4940 3D4E  
                        i2l6550 2700                          i2l4776 16A2                          i2l4784 16C4  
                        i2l4768 165E                          i2l6528 2680                          i2l6800 1AD0  
                        i2l6704 19DC                          i2l6546 26F8                          i2l6538 26B2  
                        i2l6730 1A32                          i2l6714 19F0                          i2l6706 19E2  
                        i2l6650 1880                          i2l4796 1720                          i2l5940 2D8E  
                        i2l6820 1B08                          i2l6804 1AD4                          i2l6724 1A10  
                        i2l6660 18F8                          i2l4798 1726                          i2l6830 1B18  
                        i2l6806 1ADA                          i2l6750 1A56                          i2l6742 1A46  
                        i2l6734 1A38                          i2l6670 195C                          i2l6654 18A4  
                        i2l5952 3B82                          i2l6744 1A50                          i2l6832 1B20  
                        i2l6656 18AA                          i2l6770 1A82                          i2l6762 1A76  
                        i2l6674 1966                          i2l6658 18F2                          i2l6846 1B46  
                        i2l6694 19C2                          i2l6848 1B4C                          i2l6786 1AA2  
                        i2l6778 1A92                          i2l6698 19CE                          i2l6796 1ABE  
                        i2l6798 1AC8                __end_of___lwtoft 3B5C              __size_of_ReadUSART 0016  
                        _IR_NEC 00C3              __size_of_ReadIRpin 000E             i2SetMemoryLong@Data 0038  
                        _SPBRGH 000FB0              ??_VoltageDividerON 008C                  SetMemoryLong@H 01E7  
                SetMemoryLong@L 01EA              __size_of_SetEEPROM 0086             i2SetMemoryLong@Test 0060  
                     ??_InitADC 008C             i2GetMemoryLong@temp 002F                       ??_InitApp 008C  
         ??_ConfigureOscillator 008C                          _Global 00B3                          _InitIR 3860  
   __size_ofi2_ReadEEPROM_1Byte 0032                          _SendRF 340C                  __CFG_XINST$OFF 000000  
                 InitUART@spbrg 01EA                __end_of_high_isr 1B88              __size_of_OpenUSART 007C  
                _StringContains 311E                          ___ftge 2B36      __end_of_SyncEEPROMToGlobal 3BDA  
                     ??___ftadd 009A                  __CFG_STVREN$ON 000000                       ??___ftdiv 01C6  
                     ??___lldiv 0094                       ??___ftmul 01D5                       ??___llmod 0099  
                     ??___fttol 01CD               cleanBuffer16bit@i 0093              __size_of_ResetBlue 0032  
   i2ReadEEPROM_1Byte@GIEstatus 0016             __end_of_SendRF_wait 3C34                          clear_0 2FDE  
                        clear_1 2FF2                          clear_2 3004                          clear_3 3010  
                     ??_delayUS 0090              __size_of_UseIRCode 0146           ___ftmul@f3_as_product 01D9  
           __size_of_UARTstring 005A    __end_ofi2_SyncGlobalToEEPROM 3936                 ??_InitBluetooth 009C  
             ?_cleanBuffer16bit 008C                    __pdataCOMRAM 004B          ?_BluetoothInitialSetup 0001  
                  __mediumconst 0000                    ?i2_ReadIRpin 0001                       ??_low_isr 0002  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
            ??_cleanBuffer16bit 0090                    ?i2_SetEEPROM 0068              IRrawToNEC@StartBit 0021  
        SyncEEPROMToGlobal@Temp 01E4               __end_ofi2_delayUS 3860                _CommandStringPos 0047  
             __end_of_GetEEPROM 39EC                       ??_sprintf 009A                 __CFG_FOSC$HSPLL 000000  
                    __accesstop 0060         __end_of__initialization 3070                      ___altoft@c 0094  
                    Round@input 01D8                      ___ftadd@f1 0094                      ___ftadd@f2 0097  
                    ___ftge@ff1 008C                      ___ftge@ff2 008F                   ___rparam_used 000001  
                    ___ftdiv@f1 0097                      ___ftdiv@f2 009A                      ___ftdiv@f3 01CA  
        __end_of_StringContains 31C2       __size_of_ReadEEPROM_1Byte 003C             __end_of_ResetTimer0 3D8E  
           __end_of_ResetTimer1 3DA2             __end_of_ResetTimer3 3DAC             __size_of_IRrawToNEC 03A2  
                    ___ftmul@f1 01CF                      ___ftmul@f2 01D2                      ___fttol@f1 01C9  
              ?i2_GetMemoryChar 0017                  __pcstackCOMRAM 0001                     ?_InitTimer0 0001  
                   ?_InitTimer1 0001                     ?_InitTimer2 0001                     ?_InitTimer3 0001  
                   ?_InitTimers 0001                ?i2_GetMemoryLong 0017                   __end_of_Round 3656  
                _ReadPushButton 3D54                    __pidataBANK0 3D62                    __pidataBANK1 3A96  
     __size_of_EnterCommandMode 00C8                      ___lltoft@c 0094                ?i2_EEPROM_UNLOCK 0001  
                     ?_UARTchar 0001                     _Init_System 3768               __end_of_ReadUSART 3CAA  
             __end_of_ReadIRpin 3D1C                    ??_LEDTimerON 0014                      ___lwtoft@c 0094  
                   _ReadVoltage 2F1E               __end_of_SetEEPROM 338C                 ReadVoltage@temp 01E4  
                       ??_Round 009E                   ReadUSART@data 0001               __end_of_OpenUSART 3508  
        __size_of_SetMemoryChar 003A                      __pbssBANK0 009F                      __pbssBANK1 0100  
                    __pbssBANK2 0200                      __pbssBANK3 0300          __size_of_SetMemoryLong 00FA  
                     ?_InitUART 01DF               __end_of_ResetBlue 3AFE               __end_of_UseIRCode 2710  
            ReadVoltage@voltage 01E1     i2GetMemoryChar@AddressFirst 001B        __size_ofi1_BlueConnected 000E  
         WriteEEPROM_1Byte@data 008E                       ?_ResetADC 0001              __end_of_LEDTimerON 3D7A  
                       ?_InitIR 0001                 ?_StringContains 008C          __end_of_ReadPushButton 3D62  
      __end_of_InternalADC_Read 3264                         ?_SendRF 0014                     _SendRF_wait 3C16  
                       ?___ftge 008C                      ??_UARTchar 008C               _VoltageDividerOFF 3DB2  
                     ?___altoft 0094                       ?___ftpack 008C      i2WriteEEPROM_1Byte@address 0014  
         EnterCommandMode@count 0096           cleanBuffer16bit@count 008E                       ?___lltoft 0094  
            ?_VoltageDividerOFF 0001                       ?___lwtoft 0094                   UseIRCode@Code 0071  
             _ReceivedStringPos 0049             ??_VoltageDividerOFF 008C                 SetMemoryLong@MH 01E8  
               SetMemoryLong@ML 01E9               ?_Local_CloseUSART 0001         BluetoothInitialSetup@ok 0432  
           __size_of_InitTimer0 0010             __size_of_InitTimer1 000E             __size_of_InitTimer2 000E  
           __size_of_InitTimer3 000A             __size_of_InitTimers 0014                       ?_high_isr 0001  
            ??_Local_CloseUSART 008C     __size_of_SyncGlobalToEEPROM 0046                      ??_InitUART 01E3  
                   _ResetTimer0 3D84                     _ResetTimer1 3D98                     _ResetTimer3 3DA2  
                  ??_UARTstring 008F                         SendRF@i 0018                         _InitADC 3C7E  
                       _InitApp 3A26                     low_isr@data 0013             i2_WriteEEPROM_1Byte 3A5E  
   __end_of_BluetoothConfigured 3C50                      ??_ResetADC 008C                  InitUART@config 01EC  
          i2_SyncGlobalToEEPROM 38F0                         __Hparam 0000                 ?_ReadPushButton 0001  
               __size_of_InitIR 004A                         __Lparam 0000                 __size_of_SendRF 0080  
     __end_of_VoltageDividerOFF 3DB6                         _Version 1029                 __size_of___ftge 00CE  
                       ___ftadd 1B88                         ___ftdiv 2326                         ___lldiv 2D94  
                       ___ftmul 21BA                         ___llmod 307A                         ___fttol 2478  
                 _SetMemoryChar 39EC                    ?_IsCharacter 0001                    __psmallconst 1000  
                 _SetMemoryLong 2942                      ??___altoft 0098                         __pcinit 2FD6  
                       _delayUS 3584                      ??___ftpack 0091                         __ramtop 1000  
                    ??___lltoft 0098                         __ptext0 2E5A                         __ptext1 2B36  
                       __ptext2 2F1E                         __ptext3 3B30                         __ptext4 21BA  
                       __ptext5 2326                         __ptext6 3DAC                         __ptext7 3DB2  
                       __ptext8 31C2                         __ptext9 3768                      ??___lwtoft 0097  
                     _T0CONbits 000FD5                       _T1CONbits 000FCD               SetMemoryChar@Data 0097  
                       _dpowers 1001            ?i2_WriteEEPROM_1Byte 0014                    ??_IRrawToNEC 0019  
                     _T2CONbits 000FCA              __end_of_UARTstring 3768               SetMemoryChar@Test 0096  
                     _T3CONbits 000FB1       GetMemoryLong@AddressFirst 009B                         _low_isr 0018  
      __size_ofi2_SetMemoryChar 002C        __size_ofi2_SetMemoryLong 00C8                   SetEEPROM@Temp 01EB  
                 SetEEPROM@fail 01F4                   SetEEPROM@burn 01F0                         _sprintf 1E06  
          __size_ofi2_ReadIRpin 000E                      ??_high_isr 0077                  __pintcode_body 17F8  
          end_of_initialization 3070            __size_ofi2_SetEEPROM 007C                   ??_cleanBuffer 0090  
                   _ProductName 0190                   __Lmediumconst 0000                         int_func 17F8  
     i2ReadEEPROM_1Byte@address 0014           ?i2_SyncGlobalToEEPROM 0001                 ___lldiv@divisor 0090  
              _ReadEEPROM_1Byte 3976                 ___lldiv@counter 0098              __end_of_IRrawToNEC 17F8  
                     _RCSTAbits 000FAB                         postdec1 000FE5                         postdec2 000FDD  
              _EnterCommandMode 2C04                         postinc0 000FEE                         postinc2 000FDE  
                ?_SetMemoryChar 0095       __size_of_VoltageDividerON 0006          __size_of_BlueConnected 000E  
                ?_SetMemoryLong 01DA               ??i1_BlueConnected 0001                       _IRRawCode 0100  
       ??_BluetoothInitialSetup 009C               SetMemoryLong@Data 01DA               SetMemoryLong@Test 01E3  
         ??i2_WriteEEPROM_1Byte 0017               GetMemoryLong@temp 0093          __size_of_GetMemoryChar 002A  
                     _TRISAbits 000F92                       _TRISBbits 000F93              _SyncEEPROMToGlobal 3BB2  
                     _TRISCbits 000F94          __size_of_GetMemoryLong 0170          __size_of_EEPROM_UNLOCK 0016  
   __end_of_ConfigureOscillator 3DB8                       _RFcodeBit 00BD             ?_SyncEEPROMToGlobal 0001  
         __end_ofi2_ResetTimer0 3D98                       i2_delayUS 3812     i2SetMemoryChar@AddressFirst 001D  
                     _GetEEPROM 39B2      __end_ofi2_ReadEEPROM_1Byte 3B30                     ___ftdiv@exp 01CD  
       i2WriteEEPROM_1Byte@data 0016                       _TXSTAbits 000FAC       __size_of_cleanBuffer16bit 005E  
           __end_of_cleanBuffer 370E               _Timer1_Postscaler 004A                     ___ftmul@exp 01D8  
                  ??_InitTimer0 008C                    ??_InitTimer1 008C                    ??_InitTimer2 008C  
                  ??_InitTimer3 008C                  __end_of_InitIR 38AA                    ??_InitTimers 008C  
    __size_of_VoltageDividerOFF 0004                  __end_of_SendRF 348C                  __end_of___ftge 2C04  
                  ?_Init_System 0001                  _ReceivedString 0300               i2GetMemoryLong@MH 0034  
             i2GetMemoryLong@ML 0035            ??_SyncEEPROMToGlobal 009C                     _BAUDCONbits 000FB8  
                 __pidataCOMRAM 3DB8               __size_of_UARTchar 001E                    ?_ReadVoltage 01DE  
              IRrawToNEC@Invert 0018             start_initialization 2FD6                       _ReadUSART 3C94  
             _Timer2_Postscaler 00C1                       _ReadIRpin 3D0E           __end_of_InitBluetooth 3812  
                     _SetEEPROM 3306                   _BlueConnected 3D1C              __end_of_InitTimer0 3CE4  
            __end_of_InitTimer1 3D0E              __end_of_InitTimer2 3D00              __end_of_InitTimer3 3D84  
            __end_of_InitTimers 3CD4                ??_StringContains 0090                      ?i2_delayUS 0014  
                    ?_GetEEPROM 01DA                       _OpenUSART 348C               ??i2_SetMemoryChar 001E  
             ??i2_SetMemoryLong 003D          ??i2_SyncGlobalToEEPROM 0045                 ___llmod@divisor 01CA  
             __size_of_InitUART 0112                 ___llmod@counter 0099                       _ResetBlue 3ACC  
                     _Sendcount 00C0                        ??_InitIR 0094                    ?_SendRF_wait 0019  
                     _UseIRCode 25CA                   _GetMemoryChar 3B88                        ??_SendRF 0018  
             _Timer3_Postscaler 00C2                 ??_SetMemoryChar 0096                   _GetMemoryLong 204A  
             ?_InternalADC_Read 0096                 ??_SetMemoryLong 01DF                        ??___ftge 0092  
             __size_of_ResetADC 000E                   _EEPROM_UNLOCK 3C68              ??_InternalADC_Read 0098  
                   __pdataBANK0 00C8                     __pdataBANK1 0190                __CFG_LPT1OSC$OFF 000000  
      WriteEEPROM_1Byte@address 008C            __size_of_IsCharacter 0018        __size_ofi2_GetMemoryChar 001E  
             __size_of___altoft 00A2        __size_ofi2_GetMemoryLong 00FA               __size_of___ftpack 0120  
     SetMemoryLong@AddressFirst 01DE                       Round@temp 01DB                cleanBuffer@count 008E  
             __size_of___lltoft 0080        __size_ofi2_EEPROM_UNLOCK 0016                     __pbssCOMRAM 0047  
                    ?_ReadUSART 0001               __size_of___lwtoft 002C                      ?_ReadIRpin 0001  
                 __pcstackBANK0 0060                   __pcstackBANK1 01C6                   __pcstackBANK4 0400  
                    ?_SetEEPROM 01EB                  ?_BlueConnected 0001                    ?_ResetTimer0 0001  
                  ?_ResetTimer1 0001                    ?_ResetTimer3 0001                     _cleanBuffer 36B4  
              ??_ReadPushButton 0014                      ?_OpenUSART 008C               __size_of_high_isr 1B80  
                   sprintf@flag 01DA                     sprintf@prec 01D6                        ?_InitADC 0001  
                      ?_InitApp 0001                      ?_ResetBlue 0001                  ?_GetMemoryChar 008F  
                ?_GetMemoryLong 008F                      ?_UseIRCode 0071               __CFG_CCP2MX$PORTC 000000  
                ?_EEPROM_UNLOCK 0001                 SendRF_wait@Code 0019       __size_of_Local_CloseUSART 000E  
                     __pintcode 0008                _VoltageDividerON 3DAC                        ?___ftadd 0094  
                   IRrawToNEC@i 0020                        ?___ftdiv 0097            cleanBuffer16bit@data 008C  
               SendRF_wait@size 001B                        ?___lldiv 008C                        ?___ftmul 01CF  
                      ?___llmod 01C6                        ?___fttol 01C9                    UseIRCode@NEC 0073  
                   __pintcodelo 0018                        ?_delayUS 008C               SendRF_wait@amount 001C  
                   __smallconst 1000                   IRrawToNEC@NEC 0016               _WriteEEPROM_1Byte 3936  
                 IRrawToNEC@Raw 0014        __end_of_ReadEEPROM_1Byte 39B2                        ?_low_isr 0001  
            ?_WriteEEPROM_1Byte 008C                  __size_of_Round 0066      __end_of_SyncGlobalToEEPROM 38F0  
      __end_of_EnterCommandMode 2CCC                        ?_sprintf 01CE                       delayUS@US 008C  
               IsCharacter@data 0001                     ??i2_delayUS 0018                     ??_GetEEPROM 009C  
           ??_WriteEEPROM_1Byte 008F                        _IOCBbits 000F7D                 i1_BlueConnected 3D38  
              _cleanBuffer16bit 3656                        _IPR1bits 000F9F                        _IPR2bits 000FA2  
                      _PIE1bits 000F9D                        _PIE2bits 000FA0                    cleanBuffer@i 0093  
                      i2u433_40 157E                        _PIR1bits 000F9E                        i2u442_40 167C  
                      i2u435_40 15B8                        _PIR2bits 000FA1                        i2u621_40 2CF2  
                      i2u621_45 2CE8                        i2u682_41 2606                        i2u678_41 38FA  
                      _RCONbits 000FD0                __CFG_WDTPS$32768 000000                        _UARTchar 3BDA  
  __size_of_BluetoothConfigured 001C        BluetoothInitialSetup@buf 0400       ReadEEPROM_1Byte@GIEstatus 008E  
     __end_of_WriteEEPROM_1Byte 3976                      _ADCON0bits 000FC2                      _ADCON1bits 000FC1  
                    _ADCON2bits 000FC0            __size_of_Init_System 0056                        _IRpinOLD 00BB  
__size_of_BluetoothInitialSetup 03B0   __end_of_BluetoothInitialSetup 1456                 ??_BlueConnected 008C  
                      _ChannelF 00C8                     ??_ReadUSART 0001                   ??i2_ReadIRpin 0014  
          __size_of_ReadVoltage 00B8                     ??_ReadIRpin 008C                i2GetMemoryChar@H 001C  
                 ??i2_SetEEPROM 0041                     ??_SetEEPROM 009C               ??i2_GetMemoryChar 001B  
              i2GetMemoryLong@H 0033                i2GetMemoryLong@L 0036               ??i2_GetMemoryLong 001B  
                   _INTCON2bits 000FF1                       copy_data0 3032                       copy_data1 3052  
             ??i2_EEPROM_UNLOCK 0014                   _CommandString 0200                        _InitUART 2830  
                   ??_OpenUSART 008E                 IRrawToNEC@first 001F                 ??_GetMemoryChar 0093  
               OpenUSART@config 008E                 ??_GetMemoryLong 01C6                      _EECON1bits 000FA6  
                   ??_ResetBlue 0096                __size_of_InitADC 0016                 ??_EEPROM_UNLOCK 008C  
                      _ResetADC 3D2A                __size_of_InitApp 0038                        __Hrparam 0000  
                   ??_UseIRCode 0045                        __Lrparam 0000              __CFG_BOREN$SBORDIS 000000  
          __size_of_SendRF_wait 001E     __end_ofi2_WriteEEPROM_1Byte 3A96       InternalADC_Read@ADCcounts 0096  
                 GetEEPROM@Temp 01DF                __size_of___ftadd 027E                __size_of___ftdiv 0152  
               cleanBuffer@data 008C                __size_of___lldiv 00C6                        ___altoft 3264  
            i2_ReadEEPROM_1Byte 3AFE                __size_of___ftmul 016C                __size_of___llmod 00A4  
              __size_of___fttol 0152                        ___ftpack 2710      InternalADC_Read@AnaChanSel 009A  
                      ___lltoft 338C                __size_of_delayUS 006C                        ___lwtoft 3B30  
                    sprintf@val 01DB                 i2_SetMemoryChar 3B5C             ?i2_ReadEEPROM_1Byte 0014  
               i2_SetMemoryLong 2CCC                __size_of_low_isr 012E                        __ptext10 3BB2  
                      __ptext11 39B2                        __ptext20 3CE4                        __ptext12 2830  
                      __ptext21 3CC0                        __ptext13 338C                        __ptext30 37BE  
                      __ptext22 3D7A                        __ptext14 35F0                        __ptext31 10A6  
                      __ptext23 3CF2                        __ptext15 2478                        __ptext40 3ACC  
                      __ptext32 1E06                        __ptext24 3D00                        __ptext16 1B88  
                      __ptext41 3584                        __ptext33 307A                        __ptext25 3860  
                      __ptext17 3264                        __ptext50 3C68                        __ptext42 3D1C  
                      __ptext34 2D94                        __ptext26 3656                        __ptext18 2710  
                      __ptext51 3B88                        __ptext43 3C34                        __ptext35 2C04  
                      __ptext27 3D84                        __ptext19 348C                        __ptext60 3C50  
                      __ptext52 3976                        __ptext44 38AA                        __ptext36 36B4  
                      __ptext28 3D0E                        __ptext53 3C7E                        __ptext45 3306  
                      __ptext37 370E                        __ptext29 3CD4                        __ptext70 3B5C  
                      __ptext62 3D8E                        __ptext54 3D2A                        __ptext46 2942  
                      __ptext38 3BDA                        __ptext71 3A5E                        __ptext63 3D46  
                      __ptext55 3A26                        __ptext47 204A                        __ptext39 311E  
                      __ptext80 3DA2                        __ptext72 3CAA                        __ptext64 25CA  
                      __ptext56 3DB6                        __ptext48 39EC                        __ptext81 1456  
                      __ptext73 3BF8                        __ptext65 3812                        __ptext49 3936  
                      __ptext74 3AFE                        __ptext66 38F0                        __ptext58 3D38  
                      __ptext75 3C16                        __ptext67 3508                        __ptext59 3C94  
                      __ptext76 340C                        __ptext68 2CCC                        __ptext77 3D54  
                      __ptext69 2A3C                        __ptext78 3D6E                        __ptext79 3D98  
       __end_ofi1_BlueConnected 3D46                        _high_isr 0008                __size_of_sprintf 0244  
           __end_ofi2_ReadIRpin 3D54             __end_ofi2_SetEEPROM 3584                   __size_of_main 00C4  
               i2SetEEPROM@Temp 0068                 i2SetEEPROM@fail 0041                        delayUS@i 0091  
                      delayUS@j 0095            __size_of_ResetTimer0 000A            __size_of_ResetTimer1 000A  
          __size_of_ResetTimer3 000A                 i2SetEEPROM@burn 006D       GetMemoryChar@AddressFirst 0093  
          ??i2_ReadEEPROM_1Byte 0016    __size_of_ConfigureOscillator 0002                _Local_CloseUSART 3CE4  
               GetMemoryLong@MH 0098                 GetMemoryLong@ML 0099     __size_of_SyncEEPROMToGlobal 0028  
    __size_of_WriteEEPROM_1Byte 0040                      _LEDTimerON 3D6E          __size_ofi2_ResetTimer0 000A  
                    _INTCONbits 000FF2     i2GetMemoryLong@AddressFirst 0037       __size_of_InternalADC_Read 00A2  
                OpenUSART@spbrg 008C                    UARTchar@data 008C        __end_of_VoltageDividerON 3DB2  
                      intlevel1 0000                        intlevel2 0000                       sprintf@ap 01D8  
                     sprintf@sp 01CE                    ?_cleanBuffer 008C                ___lldiv@dividend 008C  
                _BatteryVoltage 00B8                  GetMemoryChar@H 0094   __size_ofi2_SyncGlobalToEEPROM 0046  
                   _IR_New_Code 00C7                  GetMemoryLong@H 0097                  GetMemoryLong@L 009A  
        __size_of_InitBluetooth 0054           __end_of_SetMemoryChar 3A26           __end_of_SetMemoryLong 2A3C  
                 ??_IsCharacter 0001                   _InitUART$2732 01E7         __end_ofi2_SetMemoryChar 3B88  
       __end_ofi2_SetMemoryLong 2D94                        sprintf@c 01DF        __end_of_cleanBuffer16bit 36B4  
                      sprintf@f 01D0                ___lldiv@quotient 0094                     i2_ReadIRpin 3D46  
             ?_ReadEEPROM_1Byte 008C                     i2_SetEEPROM 3508                ?i1_BlueConnected 0001  
            ??_ReadEEPROM_1Byte 008E               ?_EnterCommandMode 0001    i2WriteEEPROM_1Byte@GIEstatus 0017  
           _BluetoothConfigured 3C34              ??_EnterCommandMode 0096                      _UARTstring 370E  
                 i2_ResetTimer0 3D8E              _SyncGlobalToEEPROM 38AA  
