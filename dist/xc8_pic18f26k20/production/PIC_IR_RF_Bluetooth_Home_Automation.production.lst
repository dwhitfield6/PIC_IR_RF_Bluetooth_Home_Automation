

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Apr 13 11:26:10 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK2,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    20                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    21                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   137                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	text112,global,reloc=2,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   145                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   146  0000                     
   147                           	psect	idataCOMRAM
   148  0095AE                     __pidataCOMRAM:
   149                           	opt stack 0
   150                           
   151                           ;initializer for _SN
   152  0095AE  0001               	dw	1
   153  0095B0  0000               	dw	0
   154                           
   155                           ;initializer for _IRbitPosition
   156  0095B2  20                 	db	32
   157                           
   158                           ;initializer for _IRcodePlace
   159  0095B3  01                 	db	1
   160                           
   161                           ;initializer for _RF_IR
   162  0095B4  37                 	db	55
   163                           
   164                           ;initializer for _RF_IR_Postscaler
   165  0095B5  02                 	db	2
   166                           
   167                           ;initializer for _ReceivingIR
   168  0095B6  0D                 	db	13
   169                           
   170                           	psect	idataBANK0
   171  0095C4                     __pidataBANK0:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _Sent
   175  0095C4  01                 	db	1
   176                           
   177                           	psect	idataBANK2
   178  009238                     __pidataBANK2:
   179                           	opt stack 0
   180                           
   181                           ;initializer for _ProductName
   182  009238  48                 	db	72
   183  009239  6F                 	db	111
   184  00923A  6D                 	db	109
   185  00923B  65                 	db	101
   186  00923C  20                 	db	32
   187  00923D  41                 	db	65
   188  00923E  75                 	db	117
   189  00923F  74                 	db	116
   190  009240  6F                 	db	111
   191  009241  6D                 	db	109
   192  009242  61                 	db	97
   193  009243  74                 	db	116
   194  009244  69                 	db	105
   195  009245  6F                 	db	111
   196  009246  6E                 	db	110
   197  009247  00                 	db	0
   198  009248  00                 	db	0
   199  009249  00                 	db	0
   200  00924A  00                 	db	0
   201  00924B  00                 	db	0
   202  00924C  00                 	db	0
   203  00924D  00                 	db	0
   204  00924E  00                 	db	0
   205  00924F  00                 	db	0
   206  009250  00                 	db	0
   207  009251  00                 	db	0
   208  009252  00                 	db	0
   209  009253  00                 	db	0
   210  009254  00                 	db	0
   211  009255  00                 	db	0
   212  009256  00                 	db	0
   213  009257  00                 	db	0
   214  009258  00                 	db	0
   215  009259  00                 	db	0
   216  00925A  00                 	db	0
   217  00925B  00                 	db	0
   218  00925C  00                 	db	0
   219  00925D  00                 	db	0
   220  00925E  00                 	db	0
   221  00925F  00                 	db	0
   222  009260  00                 	db	0
   223  009261  00                 	db	0
   224  009262  00                 	db	0
   225  009263  00                 	db	0
   226  009264  00                 	db	0
   227  009265  00                 	db	0
   228  009266  00                 	db	0
   229  009267  00                 	db	0
   230  009268  00                 	db	0
   231  009269  00                 	db	0
   232                           
   233                           ;initializer for _IRtimeout
   234  00926A  1389               	dw	5001
   235  00926C  0000               	dw	0
   236                           
   237                           	psect	mediumconst
   238  00F118                     __pmediumconst:
   239                           	opt stack 0
   240  00F118  00                 	db	0
   241  00F119                     _dpowers:
   242                           	opt stack 0
   243  00F119  0001               	dw	1
   244  00F11B  0000               	dw	0
   245  00F11D  000A               	dw	10
   246  00F11F  0000               	dw	0
   247  00F121  0064               	dw	100
   248  00F123  0000               	dw	0
   249  00F125  03E8               	dw	1000
   250  00F127  0000               	dw	0
   251  00F129  2710               	dw	10000
   252  00F12B  0000               	dw	0
   253  00F12D  86A0               	dw	34464
   254  00F12F  0001               	dw	1
   255  00F131  4240               	dw	16960
   256  00F133  000F               	dw	15
   257  00F135  9680               	dw	38528
   258  00F137  0098               	dw	152
   259  00F139  E100               	dw	57600
   260  00F13B  05F5               	dw	1525
   261  00F13D  CA00               	dw	51712
   262  00F13F  3B9A               	dw	15258
   263  00F141                     __end_of_dpowers:
   264                           	opt stack 0
   265  00F141                     __npowers_:
   266                           	opt stack 0
   267  00F141  00                 	db	0
   268  00F142  80                 	db	128
   269  00F143  3F                 	db	63
   270  00F144  CD                 	db	205
   271  00F145  CC                 	db	204
   272  00F146  3D                 	db	61
   273  00F147  D7                 	db	215
   274  00F148  23                 	db	35
   275  00F149  3C                 	db	60
   276  00F14A  12                 	db	18
   277  00F14B  83                 	db	131
   278  00F14C  3A                 	db	58
   279  00F14D  B7                 	db	183
   280  00F14E  D1                 	db	209
   281  00F14F  38                 	db	56
   282  00F150  C6                 	db	198
   283  00F151  27                 	db	39
   284  00F152  37                 	db	55
   285  00F153  38                 	db	56
   286  00F154  86                 	db	134
   287  00F155  35                 	db	53
   288  00F156  C0                 	db	192
   289  00F157  D6                 	db	214
   290  00F158  33                 	db	51
   291  00F159  CC                 	db	204
   292  00F15A  2B                 	db	43
   293  00F15B  32                 	db	50
   294  00F15C  70                 	db	112
   295  00F15D  89                 	db	137
   296  00F15E  30                 	db	48
   297  00F15F  E7                 	db	231
   298  00F160  DB                 	db	219
   299  00F161  2E                 	db	46
   300  00F162  E5                 	db	229
   301  00F163  3C                 	db	60
   302  00F164  1E                 	db	30
   303  00F165  42                 	db	66
   304  00F166  A2                 	db	162
   305  00F167  0D                 	db	13
   306  00F168                     __end_of__npowers_:
   307                           	opt stack 0
   308  00F168                     __powers_:
   309                           	opt stack 0
   310  00F168  00                 	db	0
   311  00F169  80                 	db	128
   312  00F16A  3F                 	db	63
   313  00F16B  00                 	db	0
   314  00F16C  20                 	db	32
   315  00F16D  41                 	db	65
   316  00F16E  00                 	db	0
   317  00F16F  C8                 	db	200
   318  00F170  42                 	db	66
   319  00F171  00                 	db	0
   320  00F172  7A                 	db	122
   321  00F173  44                 	db	68
   322  00F174  40                 	db	64
   323  00F175  1C                 	db	28
   324  00F176  46                 	db	70
   325  00F177  50                 	db	80
   326  00F178  C3                 	db	195
   327  00F179  47                 	db	71
   328  00F17A  24                 	db	36
   329  00F17B  74                 	db	116
   330  00F17C  49                 	db	73
   331  00F17D  97                 	db	151
   332  00F17E  18                 	db	24
   333  00F17F  4B                 	db	75
   334  00F180  BC                 	db	188
   335  00F181  BE                 	db	190
   336  00F182  4C                 	db	76
   337  00F183  6B                 	db	107
   338  00F184  6E                 	db	110
   339  00F185  4E                 	db	78
   340  00F186  03                 	db	3
   341  00F187  15                 	db	21
   342  00F188  50                 	db	80
   343  00F189  79                 	db	121
   344  00F18A  AD                 	db	173
   345  00F18B  60                 	db	96
   346  00F18C  F3                 	db	243
   347  00F18D  49                 	db	73
   348  00F18E  71                 	db	113
   349  00F18F                     __end_of__powers_:
   350                           	opt stack 0
   351  00F18F                     _hexpowers:
   352                           	opt stack 0
   353  00F18F  0001               	dw	1
   354  00F191  0000               	dw	0
   355  00F193  0010               	dw	16
   356  00F195  0000               	dw	0
   357  00F197  0100               	dw	256
   358  00F199  0000               	dw	0
   359  00F19B  1000               	dw	4096
   360  00F19D  0000               	dw	0
   361  00F19F  0000               	dw	0
   362  00F1A1  0001               	dw	1
   363  00F1A3  0000               	dw	0
   364  00F1A5  0010               	dw	16
   365  00F1A7  0000               	dw	0
   366  00F1A9  0100               	dw	256
   367  00F1AB  0000               	dw	0
   368  00F1AD  1000               	dw	4096
   369  00F1AF                     __end_of_hexpowers:
   370                           	opt stack 0
   371  00F1AF                     _ProjectName:
   372                           	opt stack 0
   373  00F1AF  48                 	db	72
   374  00F1B0  6F                 	db	111
   375  00F1B1  6D                 	db	109
   376  00F1B2  65                 	db	101
   377  00F1B3  20                 	db	32
   378  00F1B4  41                 	db	65
   379  00F1B5  75                 	db	117
   380  00F1B6  74                 	db	116
   381  00F1B7  6F                 	db	111
   382  00F1B8  6D                 	db	109
   383  00F1B9  61                 	db	97
   384  00F1BA  74                 	db	116
   385  00F1BB  69                 	db	105
   386  00F1BC  6F                 	db	111
   387  00F1BD  6E                 	db	110
   388  00F1BE  20                 	db	32
   389  00F1BF  49                 	db	73
   390  00F1C0  52                 	db	82
   391  00F1C1  2F                 	db	47
   392  00F1C2  52                 	db	82
   393  00F1C3  46                 	db	70
   394  00F1C4  20                 	db	32
   395  00F1C5  48                 	db	72
   396  00F1C6  75                 	db	117
   397  00F1C7  62                 	db	98
   398  00F1C8  00                 	db	0
   399  00F1C9                     __end_of_ProjectName:
   400                           	opt stack 0
   401  00F1C9                     _Conf2_ChannelH_1_OFF_STR:
   402                           	opt stack 0
   403  00F1C9  43                 	db	67
   404  00F1CA  6F                 	db	111
   405  00F1CB  6E                 	db	110
   406  00F1CC  66                 	db	102
   407  00F1CD  32                 	db	50
   408  00F1CE  5F                 	db	95
   409  00F1CF  43                 	db	67
   410  00F1D0  68                 	db	104
   411  00F1D1  61                 	db	97
   412  00F1D2  6E                 	db	110
   413  00F1D3  6E                 	db	110
   414  00F1D4  65                 	db	101
   415  00F1D5  6C                 	db	108
   416  00F1D6  48                 	db	72
   417  00F1D7  5F                 	db	95
   418  00F1D8  31                 	db	49
   419  00F1D9  5F                 	db	95
   420  00F1DA  4F                 	db	79
   421  00F1DB  46                 	db	70
   422  00F1DC  46                 	db	70
   423  00F1DD  00                 	db	0
   424  00F1DE                     __end_of_Conf2_ChannelH_1_OFF_STR:
   425                           	opt stack 0
   426  00F1DE                     _Conf2_ChannelH_2_OFF_STR:
   427                           	opt stack 0
   428  00F1DE  43                 	db	67
   429  00F1DF  6F                 	db	111
   430  00F1E0  6E                 	db	110
   431  00F1E1  66                 	db	102
   432  00F1E2  32                 	db	50
   433  00F1E3  5F                 	db	95
   434  00F1E4  43                 	db	67
   435  00F1E5  68                 	db	104
   436  00F1E6  61                 	db	97
   437  00F1E7  6E                 	db	110
   438  00F1E8  6E                 	db	110
   439  00F1E9  65                 	db	101
   440  00F1EA  6C                 	db	108
   441  00F1EB  48                 	db	72
   442  00F1EC  5F                 	db	95
   443  00F1ED  32                 	db	50
   444  00F1EE  5F                 	db	95
   445  00F1EF  4F                 	db	79
   446  00F1F0  46                 	db	70
   447  00F1F1  46                 	db	70
   448  00F1F2  00                 	db	0
   449  00F1F3                     __end_of_Conf2_ChannelH_2_OFF_STR:
   450                           	opt stack 0
   451  00F1F3                     _Conf2_ChannelH_3_OFF_STR:
   452                           	opt stack 0
   453  00F1F3  43                 	db	67
   454  00F1F4  6F                 	db	111
   455  00F1F5  6E                 	db	110
   456  00F1F6  66                 	db	102
   457  00F1F7  32                 	db	50
   458  00F1F8  5F                 	db	95
   459  00F1F9  43                 	db	67
   460  00F1FA  68                 	db	104
   461  00F1FB  61                 	db	97
   462  00F1FC  6E                 	db	110
   463  00F1FD  6E                 	db	110
   464  00F1FE  65                 	db	101
   465  00F1FF  6C                 	db	108
   466  00F200  48                 	db	72
   467  00F201  5F                 	db	95
   468  00F202  33                 	db	51
   469  00F203  5F                 	db	95
   470  00F204  4F                 	db	79
   471  00F205  46                 	db	70
   472  00F206  46                 	db	70
   473  00F207  00                 	db	0
   474  00F208                     __end_of_Conf2_ChannelH_3_OFF_STR:
   475                           	opt stack 0
   476  00F208                     _Conf2_ChannelH_1_ON_STR:
   477                           	opt stack 0
   478  00F208  43                 	db	67
   479  00F209  6F                 	db	111
   480  00F20A  6E                 	db	110
   481  00F20B  66                 	db	102
   482  00F20C  32                 	db	50
   483  00F20D  5F                 	db	95
   484  00F20E  43                 	db	67
   485  00F20F  68                 	db	104
   486  00F210  61                 	db	97
   487  00F211  6E                 	db	110
   488  00F212  6E                 	db	110
   489  00F213  65                 	db	101
   490  00F214  6C                 	db	108
   491  00F215  48                 	db	72
   492  00F216  5F                 	db	95
   493  00F217  31                 	db	49
   494  00F218  5F                 	db	95
   495  00F219  4F                 	db	79
   496  00F21A  4E                 	db	78
   497  00F21B  00                 	db	0
   498  00F21C                     __end_of_Conf2_ChannelH_1_ON_STR:
   499                           	opt stack 0
   500  00F21C                     _Conf2_ChannelH_2_ON_STR:
   501                           	opt stack 0
   502  00F21C  43                 	db	67
   503  00F21D  6F                 	db	111
   504  00F21E  6E                 	db	110
   505  00F21F  66                 	db	102
   506  00F220  32                 	db	50
   507  00F221  5F                 	db	95
   508  00F222  43                 	db	67
   509  00F223  68                 	db	104
   510  00F224  61                 	db	97
   511  00F225  6E                 	db	110
   512  00F226  6E                 	db	110
   513  00F227  65                 	db	101
   514  00F228  6C                 	db	108
   515  00F229  48                 	db	72
   516  00F22A  5F                 	db	95
   517  00F22B  32                 	db	50
   518  00F22C  5F                 	db	95
   519  00F22D  4F                 	db	79
   520  00F22E  4E                 	db	78
   521  00F22F  00                 	db	0
   522  00F230                     __end_of_Conf2_ChannelH_2_ON_STR:
   523                           	opt stack 0
   524  00F230                     _Conf2_ChannelH_3_ON_STR:
   525                           	opt stack 0
   526  00F230  43                 	db	67
   527  00F231  6F                 	db	111
   528  00F232  6E                 	db	110
   529  00F233  66                 	db	102
   530  00F234  32                 	db	50
   531  00F235  5F                 	db	95
   532  00F236  43                 	db	67
   533  00F237  68                 	db	104
   534  00F238  61                 	db	97
   535  00F239  6E                 	db	110
   536  00F23A  6E                 	db	110
   537  00F23B  65                 	db	101
   538  00F23C  6C                 	db	108
   539  00F23D  48                 	db	72
   540  00F23E  5F                 	db	95
   541  00F23F  33                 	db	51
   542  00F240  5F                 	db	95
   543  00F241  4F                 	db	79
   544  00F242  4E                 	db	78
   545  00F243  00                 	db	0
   546  00F244                     __end_of_Conf2_ChannelH_3_ON_STR:
   547                           	opt stack 0
   548  00F244                     _Conf2_ChannelB_OFF_STR:
   549                           	opt stack 0
   550  00F244  43                 	db	67
   551  00F245  6F                 	db	111
   552  00F246  6E                 	db	110
   553  00F247  66                 	db	102
   554  00F248  32                 	db	50
   555  00F249  5F                 	db	95
   556  00F24A  43                 	db	67
   557  00F24B  68                 	db	104
   558  00F24C  61                 	db	97
   559  00F24D  6E                 	db	110
   560  00F24E  6E                 	db	110
   561  00F24F  65                 	db	101
   562  00F250  6C                 	db	108
   563  00F251  42                 	db	66
   564  00F252  5F                 	db	95
   565  00F253  4F                 	db	79
   566  00F254  46                 	db	70
   567  00F255  46                 	db	70
   568  00F256  00                 	db	0
   569  00F257                     __end_of_Conf2_ChannelB_OFF_STR:
   570                           	opt stack 0
   571  00F257                     _Conf2_ChannelD_OFF_STR:
   572                           	opt stack 0
   573  00F257  43                 	db	67
   574  00F258  6F                 	db	111
   575  00F259  6E                 	db	110
   576  00F25A  66                 	db	102
   577  00F25B  32                 	db	50
   578  00F25C  5F                 	db	95
   579  00F25D  43                 	db	67
   580  00F25E  68                 	db	104
   581  00F25F  61                 	db	97
   582  00F260  6E                 	db	110
   583  00F261  6E                 	db	110
   584  00F262  65                 	db	101
   585  00F263  6C                 	db	108
   586  00F264  44                 	db	68
   587  00F265  5F                 	db	95
   588  00F266  4F                 	db	79
   589  00F267  46                 	db	70
   590  00F268  46                 	db	70
   591  00F269  00                 	db	0
   592  00F26A                     __end_of_Conf2_ChannelD_OFF_STR:
   593                           	opt stack 0
   594  00F26A                     _Conf2_ChannelB_ON_STR:
   595                           	opt stack 0
   596  00F26A  43                 	db	67
   597  00F26B  6F                 	db	111
   598  00F26C  6E                 	db	110
   599  00F26D  66                 	db	102
   600  00F26E  32                 	db	50
   601  00F26F  5F                 	db	95
   602  00F270  43                 	db	67
   603  00F271  68                 	db	104
   604  00F272  61                 	db	97
   605  00F273  6E                 	db	110
   606  00F274  6E                 	db	110
   607  00F275  65                 	db	101
   608  00F276  6C                 	db	108
   609  00F277  42                 	db	66
   610  00F278  5F                 	db	95
   611  00F279  4F                 	db	79
   612  00F27A  4E                 	db	78
   613  00F27B  00                 	db	0
   614  00F27C                     __end_of_Conf2_ChannelB_ON_STR:
   615                           	opt stack 0
   616  00F27C                     _Conf2_ChannelD_ON_STR:
   617                           	opt stack 0
   618  00F27C  43                 	db	67
   619  00F27D  6F                 	db	111
   620  00F27E  6E                 	db	110
   621  00F27F  66                 	db	102
   622  00F280  32                 	db	50
   623  00F281  5F                 	db	95
   624  00F282  43                 	db	67
   625  00F283  68                 	db	104
   626  00F284  61                 	db	97
   627  00F285  6E                 	db	110
   628  00F286  6E                 	db	110
   629  00F287  65                 	db	101
   630  00F288  6C                 	db	108
   631  00F289  44                 	db	68
   632  00F28A  5F                 	db	95
   633  00F28B  4F                 	db	79
   634  00F28C  4E                 	db	78
   635  00F28D  00                 	db	0
   636  00F28E                     __end_of_Conf2_ChannelD_ON_STR:
   637                           	opt stack 0
   638  00F28E                     _Conf2_ChannelB_OFF:
   639                           	opt stack 0
   640  00F28E  00                 	db	0
   641  00F28F  01                 	db	1
   642  00F290  01                 	db	1
   643  00F291  00                 	db	0
   644  00F292  01                 	db	1
   645  00F293  00                 	db	0
   646  00F294  00                 	db	0
   647  00F295  00                 	db	0
   648  00F296  00                 	db	0
   649  00F297  00                 	db	0
   650  00F298  00                 	db	0
   651  00F299  01                 	db	1
   652  00F29A  00                 	db	0
   653  00F29B  01                 	db	1
   654  00F29C  00                 	db	0
   655  00F29D  00                 	db	0
   656  00F29E                     __end_of_Conf2_ChannelB_OFF:
   657                           	opt stack 0
   658  00F29E                     _Conf2_ChannelB_ON:
   659                           	opt stack 0
   660  00F29E  00                 	db	0
   661  00F29F  01                 	db	1
   662  00F2A0  01                 	db	1
   663  00F2A1  00                 	db	0
   664  00F2A2  01                 	db	1
   665  00F2A3  00                 	db	0
   666  00F2A4  00                 	db	0
   667  00F2A5  00                 	db	0
   668  00F2A6  00                 	db	0
   669  00F2A7  00                 	db	0
   670  00F2A8  01                 	db	1
   671  00F2A9  00                 	db	0
   672  00F2AA  00                 	db	0
   673  00F2AB  01                 	db	1
   674  00F2AC  00                 	db	0
   675  00F2AD  00                 	db	0
   676  00F2AE                     __end_of_Conf2_ChannelB_ON:
   677                           	opt stack 0
   678  00F2AE                     _Conf2_ChannelD_OFF:
   679                           	opt stack 0
   680  00F2AE  00                 	db	0
   681  00F2AF  01                 	db	1
   682  00F2B0  01                 	db	1
   683  00F2B1  00                 	db	0
   684  00F2B2  01                 	db	1
   685  00F2B3  00                 	db	0
   686  00F2B4  00                 	db	0
   687  00F2B5  00                 	db	0
   688  00F2B6  00                 	db	0
   689  00F2B7  00                 	db	0
   690  00F2B8  00                 	db	0
   691  00F2B9  01                 	db	1
   692  00F2BA  00                 	db	0
   693  00F2BB  00                 	db	0
   694  00F2BC  00                 	db	0
   695  00F2BD  01                 	db	1
   696  00F2BE                     __end_of_Conf2_ChannelD_OFF:
   697                           	opt stack 0
   698  00F2BE                     _Conf2_ChannelD_ON:
   699                           	opt stack 0
   700  00F2BE  00                 	db	0
   701  00F2BF  01                 	db	1
   702  00F2C0  01                 	db	1
   703  00F2C1  00                 	db	0
   704  00F2C2  01                 	db	1
   705  00F2C3  00                 	db	0
   706  00F2C4  00                 	db	0
   707  00F2C5  00                 	db	0
   708  00F2C6  00                 	db	0
   709  00F2C7  00                 	db	0
   710  00F2C8  01                 	db	1
   711  00F2C9  00                 	db	0
   712  00F2CA  00                 	db	0
   713  00F2CB  00                 	db	0
   714  00F2CC  00                 	db	0
   715  00F2CD  01                 	db	1
   716  00F2CE                     __end_of_Conf2_ChannelD_ON:
   717                           	opt stack 0
   718  00F2CE                     _Conf2_ChannelH_1_OFF:
   719                           	opt stack 0
   720  00F2CE  00                 	db	0
   721  00F2CF  01                 	db	1
   722  00F2D0  01                 	db	1
   723  00F2D1  00                 	db	0
   724  00F2D2  01                 	db	1
   725  00F2D3  00                 	db	0
   726  00F2D4  00                 	db	0
   727  00F2D5  00                 	db	0
   728  00F2D6  00                 	db	0
   729  00F2D7  01                 	db	1
   730  00F2D8  00                 	db	0
   731  00F2D9  00                 	db	0
   732  00F2DA  00                 	db	0
   733  00F2DB  00                 	db	0
   734  00F2DC  00                 	db	0
   735  00F2DD  00                 	db	0
   736  00F2DE                     __end_of_Conf2_ChannelH_1_OFF:
   737                           	opt stack 0
   738  00F2DE                     _Conf2_ChannelH_1_ON:
   739                           	opt stack 0
   740  00F2DE  00                 	db	0
   741  00F2DF  01                 	db	1
   742  00F2E0  01                 	db	1
   743  00F2E1  00                 	db	0
   744  00F2E2  01                 	db	1
   745  00F2E3  00                 	db	0
   746  00F2E4  00                 	db	0
   747  00F2E5  00                 	db	0
   748  00F2E6  01                 	db	1
   749  00F2E7  00                 	db	0
   750  00F2E8  00                 	db	0
   751  00F2E9  00                 	db	0
   752  00F2EA  00                 	db	0
   753  00F2EB  00                 	db	0
   754  00F2EC  00                 	db	0
   755  00F2ED  00                 	db	0
   756  00F2EE                     __end_of_Conf2_ChannelH_1_ON:
   757                           	opt stack 0
   758  00F2EE                     _Conf2_ChannelH_2_OFF:
   759                           	opt stack 0
   760  00F2EE  00                 	db	0
   761  00F2EF  01                 	db	1
   762  00F2F0  01                 	db	1
   763  00F2F1  00                 	db	0
   764  00F2F2  01                 	db	1
   765  00F2F3  00                 	db	0
   766  00F2F4  00                 	db	0
   767  00F2F5  00                 	db	0
   768  00F2F6  00                 	db	0
   769  00F2F7  00                 	db	0
   770  00F2F8  00                 	db	0
   771  00F2F9  01                 	db	1
   772  00F2FA  00                 	db	0
   773  00F2FB  00                 	db	0
   774  00F2FC  00                 	db	0
   775  00F2FD  00                 	db	0
   776  00F2FE                     __end_of_Conf2_ChannelH_2_OFF:
   777                           	opt stack 0
   778  00F2FE                     _Conf2_ChannelH_2_ON:
   779                           	opt stack 0
   780  00F2FE  00                 	db	0
   781  00F2FF  01                 	db	1
   782  00F300  01                 	db	1
   783  00F301  00                 	db	0
   784  00F302  01                 	db	1
   785  00F303  00                 	db	0
   786  00F304  00                 	db	0
   787  00F305  00                 	db	0
   788  00F306  00                 	db	0
   789  00F307  00                 	db	0
   790  00F308  01                 	db	1
   791  00F309  00                 	db	0
   792  00F30A  00                 	db	0
   793  00F30B  00                 	db	0
   794  00F30C  00                 	db	0
   795  00F30D  00                 	db	0
   796  00F30E                     __end_of_Conf2_ChannelH_2_ON:
   797                           	opt stack 0
   798  00F30E                     _Conf2_ChannelH_3_OFF:
   799                           	opt stack 0
   800  00F30E  00                 	db	0
   801  00F30F  01                 	db	1
   802  00F310  01                 	db	1
   803  00F311  00                 	db	0
   804  00F312  01                 	db	1
   805  00F313  00                 	db	0
   806  00F314  01                 	db	1
   807  00F315  00                 	db	0
   808  00F316  00                 	db	0
   809  00F317  00                 	db	0
   810  00F318  00                 	db	0
   811  00F319  00                 	db	0
   812  00F31A  00                 	db	0
   813  00F31B  00                 	db	0
   814  00F31C  00                 	db	0
   815  00F31D  00                 	db	0
   816  00F31E                     __end_of_Conf2_ChannelH_3_OFF:
   817                           	opt stack 0
   818  00F31E                     _Conf2_ChannelH_3_ON:
   819                           	opt stack 0
   820  00F31E  00                 	db	0
   821  00F31F  01                 	db	1
   822  00F320  01                 	db	1
   823  00F321  00                 	db	0
   824  00F322  01                 	db	1
   825  00F323  00                 	db	0
   826  00F324  00                 	db	0
   827  00F325  01                 	db	1
   828  00F326  00                 	db	0
   829  00F327  00                 	db	0
   830  00F328  00                 	db	0
   831  00F329  00                 	db	0
   832  00F32A  00                 	db	0
   833  00F32B  00                 	db	0
   834  00F32C  00                 	db	0
   835  00F32D  00                 	db	0
   836  00F32E                     __end_of_Conf2_ChannelH_3_ON:
   837                           	opt stack 0
   838  00F32E                     _Conf1_ChannelD_STR:
   839                           	opt stack 0
   840  00F32E  43                 	db	67
   841  00F32F  6F                 	db	111
   842  00F330  6E                 	db	110
   843  00F331  66                 	db	102
   844  00F332  31                 	db	49
   845  00F333  5F                 	db	95
   846  00F334  43                 	db	67
   847  00F335  68                 	db	104
   848  00F336  61                 	db	97
   849  00F337  6E                 	db	110
   850  00F338  6E                 	db	110
   851  00F339  65                 	db	101
   852  00F33A  6C                 	db	108
   853  00F33B  44                 	db	68
   854  00F33C  00                 	db	0
   855  00F33D                     __end_of_Conf1_ChannelD_STR:
   856                           	opt stack 0
   857  00F33D                     _Conf1_ChannelE_STR:
   858                           	opt stack 0
   859  00F33D  43                 	db	67
   860  00F33E  6F                 	db	111
   861  00F33F  6E                 	db	110
   862  00F340  66                 	db	102
   863  00F341  31                 	db	49
   864  00F342  5F                 	db	95
   865  00F343  43                 	db	67
   866  00F344  68                 	db	104
   867  00F345  61                 	db	97
   868  00F346  6E                 	db	110
   869  00F347  6E                 	db	110
   870  00F348  65                 	db	101
   871  00F349  6C                 	db	108
   872  00F34A  45                 	db	69
   873  00F34B  00                 	db	0
   874  00F34C                     __end_of_Conf1_ChannelE_STR:
   875                           	opt stack 0
   876  00F34C                     _Conf1_ChannelF_STR:
   877                           	opt stack 0
   878  00F34C  43                 	db	67
   879  00F34D  6F                 	db	111
   880  00F34E  6E                 	db	110
   881  00F34F  66                 	db	102
   882  00F350  31                 	db	49
   883  00F351  5F                 	db	95
   884  00F352  43                 	db	67
   885  00F353  68                 	db	104
   886  00F354  61                 	db	97
   887  00F355  6E                 	db	110
   888  00F356  6E                 	db	110
   889  00F357  65                 	db	101
   890  00F358  6C                 	db	108
   891  00F359  46                 	db	70
   892  00F35A  00                 	db	0
   893  00F35B                     __end_of_Conf1_ChannelF_STR:
   894                           	opt stack 0
   895  00F35B                     _SYNTAX_ERR:
   896                           	opt stack 0
   897  00F35B  45                 	db	69
   898  00F35C  72                 	db	114
   899  00F35D  72                 	db	114
   900  00F35E  6F                 	db	111
   901  00F35F  72                 	db	114
   902  00F360  3A                 	db	58
   903  00F361  20                 	db	32
   904  00F362  53                 	db	83
   905  00F363  79                 	db	121
   906  00F364  6E                 	db	110
   907  00F365  74                 	db	116
   908  00F366  61                 	db	97
   909  00F367  78                 	db	120
   910  00F368  00                 	db	0
   911  00F369                     __end_of_SYNTAX_ERR:
   912                           	opt stack 0
   913  00F369                     _Conf1_ChannelD:
   914                           	opt stack 0
   915  00F369  03                 	db	3
   916  00F36A  03                 	db	3
   917  00F36B  03                 	db	3
   918  00F36C  03                 	db	3
   919  00F36D  03                 	db	3
   920  00F36E  03                 	db	3
   921  00F36F  00                 	db	0
   922  00F370  00                 	db	0
   923  00F371  01                 	db	1
   924  00F372  00                 	db	0
   925  00F373  00                 	db	0
   926  00F374  00                 	db	0
   927  00F375                     __end_of_Conf1_ChannelD:
   928                           	opt stack 0
   929  00F375                     _Conf1_ChannelE:
   930                           	opt stack 0
   931  00F375  00                 	db	0
   932  00F376  03                 	db	3
   933  00F377  03                 	db	3
   934  00F378  03                 	db	3
   935  00F379  03                 	db	3
   936  00F37A  03                 	db	3
   937  00F37B  00                 	db	0
   938  00F37C  00                 	db	0
   939  00F37D  01                 	db	1
   940  00F37E  00                 	db	0
   941  00F37F  00                 	db	0
   942  00F380  00                 	db	0
   943  00F381                     __end_of_Conf1_ChannelE:
   944                           	opt stack 0
   945  00F381                     _Conf1_ChannelF:
   946                           	opt stack 0
   947  00F381  03                 	db	3
   948  00F382  00                 	db	0
   949  00F383  03                 	db	3
   950  00F384  03                 	db	3
   951  00F385  03                 	db	3
   952  00F386  03                 	db	3
   953  00F387  00                 	db	0
   954  00F388  00                 	db	0
   955  00F389  01                 	db	1
   956  00F38A  00                 	db	0
   957  00F38B  00                 	db	0
   958  00F38C  00                 	db	0
   959  00F38D                     __end_of_Conf1_ChannelF:
   960                           	opt stack 0
   961  00F38D                     _FirmVersion:
   962                           	opt stack 0
   963  00F38D  31                 	db	49
   964  00F38E  2E                 	db	46
   965  00F38F  30                 	db	48
   966  00F390  5F                 	db	95
   967  00F391  44                 	db	68
   968  00F392  57                 	db	87
   969  00F393  30                 	db	48
   970  00F394  62                 	db	98
   971  00F395  00                 	db	0
   972  00F396                     __end_of_FirmVersion:
   973                           	opt stack 0
   974  00F396                     _PCBVersion:
   975                           	opt stack 0
   976  00F396  52                 	db	82
   977  00F397  65                 	db	101
   978  00F398  76                 	db	118
   979  00F399  41                 	db	65
   980  00F39A  00                 	db	0
   981  00F39B                     __end_of_PCBVersion:
   982                           	opt stack 0
   983  00F39B                     _Conf1_Channels:
   984                           	opt stack 0
   985  00F39B  44                 	db	68
   986  00F39C  45                 	db	69
   987  00F39D  46                 	db	70
   988  00F39E  00                 	db	0
   989  00F39F                     __end_of_Conf1_Channels:
   990                           	opt stack 0
   991  00F39F                     _Conf2_Channels:
   992                           	opt stack 0
   993  00F39F  42                 	db	66
   994  00F3A0  44                 	db	68
   995  00F3A1  48                 	db	72
   996  00F3A2  00                 	db	0
   997  00F3A3                     __end_of_Conf2_Channels:
   998                           	opt stack 0
   999  00F3A3                     _Frequency:
  1000                           	opt stack 0
  1001  00F3A3  33                 	db	51
  1002  00F3A4  31                 	db	49
  1003  00F3A5  35                 	db	53
  1004  00F3A6  00                 	db	0
  1005  00F3A7                     __end_of_Frequency:
  1006                           	opt stack 0
  1007  00F3A7                     _CRLN:
  1008                           	opt stack 0
  1009  00F3A7  0D                 	db	13
  1010  00F3A8  0A                 	db	10
  1011  00F3A9  00                 	db	0
  1012  00F3AA                     __end_of_CRLN:
  1013                           	opt stack 0
  1014  0000                     _ADCON0	set	4034
  1015  0000                     _ADCON0bits	set	4034
  1016  0000                     _ADCON1	set	4033
  1017  0000                     _ADCON1bits	set	4033
  1018  0000                     _ADCON2	set	4032
  1019  0000                     _ADCON2bits	set	4032
  1020  0000                     _ADRESH	set	4036
  1021  0000                     _ADRESL	set	4035
  1022  0000                     _ANSEL	set	3966
  1023  0000                     _ANSELH	set	3967
  1024  0000                     _BAUDCONbits	set	4024
  1025  0000                     _EEADR	set	4009
  1026  0000                     _EEADRH	set	4010
  1027  0000                     _EECON1bits	set	4006
  1028  0000                     _EECON2	set	4007
  1029  0000                     _EEDATA	set	4008
  1030  0000                     _INTCON2bits	set	4081
  1031  0000                     _INTCONbits	set	4082
  1032  0000                     _IOCBbits	set	3965
  1033  0000                     _IPR1bits	set	3999
  1034  0000                     _IPR2bits	set	4002
  1035  0000                     _LATA	set	3977
  1036  0000                     _LATB	set	3978
  1037  0000                     _LATC	set	3979
  1038  0000                     _PIE1bits	set	3997
  1039  0000                     _PIE2bits	set	4000
  1040  0000                     _PIR1bits	set	3998
  1041  0000                     _PIR2bits	set	4001
  1042  0000                     _PORTA	set	3968
  1043  0000                     _PORTB	set	3969
  1044  0000                     _PORTC	set	3970
  1045  0000                     _PR2	set	4043
  1046  0000                     _RCONbits	set	4048
  1047  0000                     _RCREG	set	4014
  1048  0000                     _RCSTA	set	4011
  1049  0000                     _RCSTAbits	set	4011
  1050  0000                     _SPBRG	set	4015
  1051  0000                     _SPBRGH	set	4016
  1052  0000                     _T0CONbits	set	4053
  1053  0000                     _T1CONbits	set	4045
  1054  0000                     _T2CONbits	set	4042
  1055  0000                     _T3CONbits	set	4017
  1056  0000                     _TMR0H	set	4055
  1057  0000                     _TMR0L	set	4054
  1058  0000                     _TMR1H	set	4047
  1059  0000                     _TMR1L	set	4046
  1060  0000                     _TMR2	set	4044
  1061  0000                     _TMR3H	set	4019
  1062  0000                     _TMR3L	set	4018
  1063  0000                     _TRISAbits	set	3986
  1064  0000                     _TRISBbits	set	3987
  1065  0000                     _TRISCbits	set	3988
  1066  0000                     _TXREG	set	4013
  1067  0000                     _TXSTA	set	4012
  1068  0000                     _TXSTAbits	set	4012
  1069  0000                     _WPUB	set	3964
  1070  00F3AA                     STR_73:
  1071  00F3AA  4E                 	db	78	;'N'
  1072  00F3AB  45                 	db	69	;'E'
  1073  00F3AC  43                 	db	67	;'C'
  1074  00F3AD  20                 	db	32
  1075  00F3AE  63                 	db	99	;'c'
  1076  00F3AF  6F                 	db	111	;'o'
  1077  00F3B0  64                 	db	100	;'d'
  1078  00F3B1  65                 	db	101	;'e'
  1079  00F3B2  20                 	db	32
  1080  00F3B3  30                 	db	48	;'0'
  1081  00F3B4  78                 	db	120	;'x'
  1082  00F3B5  25                 	db	37
  1083  00F3B6  6C                 	db	108	;'l'
  1084  00F3B7  58                 	db	88	;'X'
  1085  00F3B8  20                 	db	32
  1086  00F3B9  6E                 	db	110	;'n'
  1087  00F3BA  6F                 	db	111	;'o'
  1088  00F3BB  77                 	db	119	;'w'
  1089  00F3BC  20                 	db	32
  1090  00F3BD  74                 	db	116	;'t'
  1091  00F3BE  72                 	db	114	;'r'
  1092  00F3BF  61                 	db	97	;'a'
  1093  00F3C0  6E                 	db	110	;'n'
  1094  00F3C1  73                 	db	115	;'s'
  1095  00F3C2  6D                 	db	109	;'m'
  1096  00F3C3  69                 	db	105	;'i'
  1097  00F3C4  74                 	db	116	;'t'
  1098  00F3C5  73                 	db	115	;'s'
  1099  00F3C6  20                 	db	32
  1100  00F3C7  52                 	db	82	;'R'
  1101  00F3C8  46                 	db	70	;'F'
  1102  00F3C9  20                 	db	32
  1103  00F3CA  63                 	db	99	;'c'
  1104  00F3CB  6F                 	db	111	;'o'
  1105  00F3CC  6E                 	db	110	;'n'
  1106  00F3CD  66                 	db	102	;'f'
  1107  00F3CE  69                 	db	105	;'i'
  1108  00F3CF  67                 	db	103	;'g'
  1109  00F3D0  20                 	db	32
  1110  00F3D1  25                 	db	37
  1111  00F3D2  64                 	db	100	;'d'
  1112  00F3D3  20                 	db	32
  1113  00F3D4  63                 	db	99	;'c'
  1114  00F3D5  68                 	db	104	;'h'
  1115  00F3D6  61                 	db	97	;'a'
  1116  00F3D7  6E                 	db	110	;'n'
  1117  00F3D8  6E                 	db	110	;'n'
  1118  00F3D9  65                 	db	101	;'e'
  1119  00F3DA  6C                 	db	108	;'l'
  1120  00F3DB  20                 	db	32
  1121  00F3DC  25                 	db	37
  1122  00F3DD  63                 	db	99	;'c'
  1123  00F3DE  20                 	db	32
  1124  00F3DF  64                 	db	100	;'d'
  1125  00F3E0  65                 	db	101	;'e'
  1126  00F3E1  76                 	db	118	;'v'
  1127  00F3E2  69                 	db	105	;'i'
  1128  00F3E3  63                 	db	99	;'c'
  1129  00F3E4  65                 	db	101	;'e'
  1130  00F3E5  20                 	db	32
  1131  00F3E6  25                 	db	37
  1132  00F3E7  64                 	db	100	;'d'
  1133  00F3E8  00                 	db	0
  1134  00F3E9                     STR_74:
  1135  00F3E9  4E                 	db	78	;'N'
  1136  00F3EA  45                 	db	69	;'E'
  1137  00F3EB  43                 	db	67	;'C'
  1138  00F3EC  20                 	db	32
  1139  00F3ED  63                 	db	99	;'c'
  1140  00F3EE  6F                 	db	111	;'o'
  1141  00F3EF  64                 	db	100	;'d'
  1142  00F3F0  65                 	db	101	;'e'
  1143  00F3F1  20                 	db	32
  1144  00F3F2  30                 	db	48	;'0'
  1145  00F3F3  78                 	db	120	;'x'
  1146  00F3F4  25                 	db	37
  1147  00F3F5  6C                 	db	108	;'l'
  1148  00F3F6  58                 	db	88	;'X'
  1149  00F3F7  20                 	db	32
  1150  00F3F8  6E                 	db	110	;'n'
  1151  00F3F9  6F                 	db	111	;'o'
  1152  00F3FA  77                 	db	119	;'w'
  1153  00F3FB  20                 	db	32
  1154  00F3FC  74                 	db	116	;'t'
  1155  00F3FD  72                 	db	114	;'r'
  1156  00F3FE  61                 	db	97	;'a'
  1157  00F3FF  6E                 	db	110	;'n'
  1158  00F400  73                 	db	115	;'s'
  1159  00F401  6D                 	db	109	;'m'
  1160  00F402  69                 	db	105	;'i'
  1161  00F403  74                 	db	116	;'t'
  1162  00F404  73                 	db	115	;'s'
  1163  00F405  20                 	db	32
  1164  00F406  52                 	db	82	;'R'
  1165  00F407  46                 	db	70	;'F'
  1166  00F408  20                 	db	32
  1167  00F409  63                 	db	99	;'c'
  1168  00F40A  6F                 	db	111	;'o'
  1169  00F40B  6E                 	db	110	;'n'
  1170  00F40C  66                 	db	102	;'f'
  1171  00F40D  69                 	db	105	;'i'
  1172  00F40E  67                 	db	103	;'g'
  1173  00F40F  20                 	db	32
  1174  00F410  25                 	db	37
  1175  00F411  64                 	db	100	;'d'
  1176  00F412  20                 	db	32
  1177  00F413  63                 	db	99	;'c'
  1178  00F414  68                 	db	104	;'h'
  1179  00F415  61                 	db	97	;'a'
  1180  00F416  6E                 	db	110	;'n'
  1181  00F417  6E                 	db	110	;'n'
  1182  00F418  65                 	db	101	;'e'
  1183  00F419  6C                 	db	108	;'l'
  1184  00F41A  20                 	db	32
  1185  00F41B  25                 	db	37
  1186  00F41C  63                 	db	99	;'c'
  1187  00F41D  20                 	db	32
  1188  00F41E  00                 	db	0
  1189  00F41F                     STR_75:
  1190  00F41F  52                 	db	82	;'R'
  1191  00F420  46                 	db	70	;'F'
  1192  00F421  20                 	db	32
  1193  00F422  63                 	db	99	;'c'
  1194  00F423  6F                 	db	111	;'o'
  1195  00F424  6E                 	db	110	;'n'
  1196  00F425  66                 	db	102	;'f'
  1197  00F426  69                 	db	105	;'i'
  1198  00F427  67                 	db	103	;'g'
  1199  00F428  20                 	db	32
  1200  00F429  25                 	db	37
  1201  00F42A  64                 	db	100	;'d'
  1202  00F42B  20                 	db	32
  1203  00F42C  63                 	db	99	;'c'
  1204  00F42D  68                 	db	104	;'h'
  1205  00F42E  61                 	db	97	;'a'
  1206  00F42F  6E                 	db	110	;'n'
  1207  00F430  6E                 	db	110	;'n'
  1208  00F431  65                 	db	101	;'e'
  1209  00F432  6C                 	db	108	;'l'
  1210  00F433  20                 	db	32
  1211  00F434  25                 	db	37
  1212  00F435  63                 	db	99	;'c'
  1213  00F436  20                 	db	32
  1214  00F437  64                 	db	100	;'d'
  1215  00F438  65                 	db	101	;'e'
  1216  00F439  76                 	db	118	;'v'
  1217  00F43A  69                 	db	105	;'i'
  1218  00F43B  63                 	db	99	;'c'
  1219  00F43C  65                 	db	101	;'e'
  1220  00F43D  20                 	db	32
  1221  00F43E  25                 	db	37
  1222  00F43F  64                 	db	100	;'d'
  1223  00F440  20                 	db	32
  1224  00F441  73                 	db	115	;'s'
  1225  00F442  75                 	db	117	;'u'
  1226  00F443  63                 	db	99	;'c'
  1227  00F444  63                 	db	99	;'c'
  1228  00F445  65                 	db	101	;'e'
  1229  00F446  73                 	db	115	;'s'
  1230  00F447  73                 	db	115	;'s'
  1231  00F448  66                 	db	102	;'f'
  1232  00F449  75                 	db	117	;'u'
  1233  00F44A  6C                 	db	108	;'l'
  1234  00F44B  6C                 	db	108	;'l'
  1235  00F44C  79                 	db	121	;'y'
  1236  00F44D  20                 	db	32
  1237  00F44E  65                 	db	101	;'e'
  1238  00F44F  72                 	db	114	;'r'
  1239  00F450  61                 	db	97	;'a'
  1240  00F451  73                 	db	115	;'s'
  1241  00F452  65                 	db	101	;'e'
  1242  00F453  64                 	db	100	;'d'
  1243  00F454  00                 	db	0
  1244  00F455                     STR_69:
  1245  00F455  45                 	db	69	;'E'
  1246  00F456  72                 	db	114	;'r'
  1247  00F457  72                 	db	114	;'r'
  1248  00F458  6F                 	db	111	;'o'
  1249  00F459  72                 	db	114	;'r'
  1250  00F45A  3A                 	db	58	;':'
  1251  00F45B  20                 	db	32
  1252  00F45C  4E                 	db	78	;'N'
  1253  00F45D  6F                 	db	111	;'o'
  1254  00F45E  20                 	db	32
  1255  00F45F  52                 	db	82	;'R'
  1256  00F460  46                 	db	70	;'F'
  1257  00F461  20                 	db	32
  1258  00F462  63                 	db	99	;'c'
  1259  00F463  6F                 	db	111	;'o'
  1260  00F464  6E                 	db	110	;'n'
  1261  00F465  66                 	db	102	;'f'
  1262  00F466  69                 	db	105	;'i'
  1263  00F467  67                 	db	103	;'g'
  1264  00F468  20                 	db	32
  1265  00F469  32                 	db	50	;'2'
  1266  00F46A  2C                 	db	44
  1267  00F46B  20                 	db	32
  1268  00F46C  63                 	db	99	;'c'
  1269  00F46D  68                 	db	104	;'h'
  1270  00F46E  61                 	db	97	;'a'
  1271  00F46F  6E                 	db	110	;'n'
  1272  00F470  6E                 	db	110	;'n'
  1273  00F471  65                 	db	101	;'e'
  1274  00F472  6C                 	db	108	;'l'
  1275  00F473  20                 	db	32
  1276  00F474  48                 	db	72	;'H'
  1277  00F475  20                 	db	32
  1278  00F476  64                 	db	100	;'d'
  1279  00F477  65                 	db	101	;'e'
  1280  00F478  76                 	db	118	;'v'
  1281  00F479  69                 	db	105	;'i'
  1282  00F47A  63                 	db	99	;'c'
  1283  00F47B  65                 	db	101	;'e'
  1284  00F47C  20                 	db	32
  1285  00F47D  73                 	db	115	;'s'
  1286  00F47E  70                 	db	112	;'p'
  1287  00F47F  65                 	db	101	;'e'
  1288  00F480  63                 	db	99	;'c'
  1289  00F481  69                 	db	105	;'i'
  1290  00F482  66                 	db	102	;'f'
  1291  00F483  69                 	db	105	;'i'
  1292  00F484  65                 	db	101	;'e'
  1293  00F485  64                 	db	100	;'d'
  1294  00F486  00                 	db	0
  1295  00F487                     STR_70:
  1296  00F487  45                 	db	69	;'E'
  1297  00F488  72                 	db	114	;'r'
  1298  00F489  72                 	db	114	;'r'
  1299  00F48A  6F                 	db	111	;'o'
  1300  00F48B  72                 	db	114	;'r'
  1301  00F48C  3A                 	db	58	;':'
  1302  00F48D  20                 	db	32
  1303  00F48E  52                 	db	82	;'R'
  1304  00F48F  46                 	db	70	;'F'
  1305  00F490  20                 	db	32
  1306  00F491  63                 	db	99	;'c'
  1307  00F492  6F                 	db	111	;'o'
  1308  00F493  6E                 	db	110	;'n'
  1309  00F494  66                 	db	102	;'f'
  1310  00F495  69                 	db	105	;'i'
  1311  00F496  67                 	db	103	;'g'
  1312  00F497  20                 	db	32
  1313  00F498  32                 	db	50	;'2'
  1314  00F499  2C                 	db	44
  1315  00F49A  20                 	db	32
  1316  00F49B  63                 	db	99	;'c'
  1317  00F49C  68                 	db	104	;'h'
  1318  00F49D  61                 	db	97	;'a'
  1319  00F49E  6E                 	db	110	;'n'
  1320  00F49F  6E                 	db	110	;'n'
  1321  00F4A0  65                 	db	101	;'e'
  1322  00F4A1  6C                 	db	108	;'l'
  1323  00F4A2  20                 	db	32
  1324  00F4A3  48                 	db	72	;'H'
  1325  00F4A4  20                 	db	32
  1326  00F4A5  64                 	db	100	;'d'
  1327  00F4A6  65                 	db	101	;'e'
  1328  00F4A7  76                 	db	118	;'v'
  1329  00F4A8  69                 	db	105	;'i'
  1330  00F4A9  63                 	db	99	;'c'
  1331  00F4AA  65                 	db	101	;'e'
  1332  00F4AB  20                 	db	32
  1333  00F4AC  6F                 	db	111	;'o'
  1334  00F4AD  75                 	db	117	;'u'
  1335  00F4AE  74                 	db	116	;'t'
  1336  00F4AF  20                 	db	32
  1337  00F4B0  6F                 	db	111	;'o'
  1338  00F4B1  66                 	db	102	;'f'
  1339  00F4B2  20                 	db	32
  1340  00F4B3  72                 	db	114	;'r'
  1341  00F4B4  61                 	db	97	;'a'
  1342  00F4B5  6E                 	db	110	;'n'
  1343  00F4B6  67                 	db	103	;'g'
  1344  00F4B7  65                 	db	101	;'e'
  1345  00F4B8  00                 	db	0
  1346  00F4B9                     STR_115:
  1347  00F4B9  53                 	db	83	;'S'
  1348  00F4BA  65                 	db	101	;'e'
  1349  00F4BB  74                 	db	116	;'t'
  1350  00F4BC  73                 	db	115	;'s'
  1351  00F4BD  20                 	db	32
  1352  00F4BE  52                 	db	82	;'R'
  1353  00F4BF  65                 	db	101	;'e'
  1354  00F4C0  6D                 	db	109	;'m'
  1355  00F4C1  6F                 	db	111	;'o'
  1356  00F4C2  74                 	db	116	;'t'
  1357  00F4C3  65                 	db	101	;'e'
  1358  00F4C4  20                 	db	32
  1359  00F4C5  62                 	db	98	;'b'
  1360  00F4C6  75                 	db	117	;'u'
  1361  00F4C7  74                 	db	116	;'t'
  1362  00F4C8  74                 	db	116	;'t'
  1363  00F4C9  6F                 	db	111	;'o'
  1364  00F4CA  6E                 	db	110	;'n'
  1365  00F4CB  20                 	db	32
  1366  00F4CC  74                 	db	116	;'t'
  1367  00F4CD  6F                 	db	111	;'o'
  1368  00F4CE  20                 	db	32
  1369  00F4CF  73                 	db	115	;'s'
  1370  00F4D0  65                 	db	101	;'e'
  1371  00F4D1  6E                 	db	110	;'n'
  1372  00F4D2  64                 	db	100	;'d'
  1373  00F4D3  20                 	db	32
  1374  00F4D4  52                 	db	82	;'R'
  1375  00F4D5  46                 	db	70	;'F'
  1376  00F4D6  20                 	db	32
  1377  00F4D7  43                 	db	67	;'C'
  1378  00F4D8  6F                 	db	111	;'o'
  1379  00F4D9  6E                 	db	110	;'n'
  1380  00F4DA  66                 	db	102	;'f'
  1381  00F4DB  69                 	db	105	;'i'
  1382  00F4DC  67                 	db	103	;'g'
  1383  00F4DD  20                 	db	32
  1384  00F4DE  32                 	db	50	;'2'
  1385  00F4DF  20                 	db	32
  1386  00F4E0  63                 	db	99	;'c'
  1387  00F4E1  68                 	db	104	;'h'
  1388  00F4E2  61                 	db	97	;'a'
  1389  00F4E3  6E                 	db	110	;'n'
  1390  00F4E4  6E                 	db	110	;'n'
  1391  00F4E5  65                 	db	101	;'e'
  1392  00F4E6  6C                 	db	108	;'l'
  1393  00F4E7  20                 	db	32
  1394  00F4E8  42                 	db	66	;'B'
  1395  00F4E9  00                 	db	0
  1396  00F4EA                     STR_109:
  1397  00F4EA  53                 	db	83	;'S'
  1398  00F4EB  65                 	db	101	;'e'
  1399  00F4EC  74                 	db	116	;'t'
  1400  00F4ED  73                 	db	115	;'s'
  1401  00F4EE  20                 	db	32
  1402  00F4EF  52                 	db	82	;'R'
  1403  00F4F0  65                 	db	101	;'e'
  1404  00F4F1  6D                 	db	109	;'m'
  1405  00F4F2  6F                 	db	111	;'o'
  1406  00F4F3  74                 	db	116	;'t'
  1407  00F4F4  65                 	db	101	;'e'
  1408  00F4F5  20                 	db	32
  1409  00F4F6  62                 	db	98	;'b'
  1410  00F4F7  75                 	db	117	;'u'
  1411  00F4F8  74                 	db	116	;'t'
  1412  00F4F9  74                 	db	116	;'t'
  1413  00F4FA  6F                 	db	111	;'o'
  1414  00F4FB  6E                 	db	110	;'n'
  1415  00F4FC  20                 	db	32
  1416  00F4FD  74                 	db	116	;'t'
  1417  00F4FE  6F                 	db	111	;'o'
  1418  00F4FF  20                 	db	32
  1419  00F500  73                 	db	115	;'s'
  1420  00F501  65                 	db	101	;'e'
  1421  00F502  6E                 	db	110	;'n'
  1422  00F503  64                 	db	100	;'d'
  1423  00F504  20                 	db	32
  1424  00F505  52                 	db	82	;'R'
  1425  00F506  46                 	db	70	;'F'
  1426  00F507  20                 	db	32
  1427  00F508  43                 	db	67	;'C'
  1428  00F509  6F                 	db	111	;'o'
  1429  00F50A  6E                 	db	110	;'n'
  1430  00F50B  66                 	db	102	;'f'
  1431  00F50C  69                 	db	105	;'i'
  1432  00F50D  67                 	db	103	;'g'
  1433  00F50E  20                 	db	32
  1434  00F50F  31                 	db	49	;'1'
  1435  00F510  20                 	db	32
  1436  00F511  63                 	db	99	;'c'
  1437  00F512  68                 	db	104	;'h'
  1438  00F513  61                 	db	97	;'a'
  1439  00F514  6E                 	db	110	;'n'
  1440  00F515  6E                 	db	110	;'n'
  1441  00F516  65                 	db	101	;'e'
  1442  00F517  6C                 	db	108	;'l'
  1443  00F518  20                 	db	32
  1444  00F519  44                 	db	68	;'D'
  1445  00F51A  00                 	db	0
  1446  00F51B                     STR_117:
  1447  00F51B  53                 	db	83	;'S'
  1448  00F51C  65                 	db	101	;'e'
  1449  00F51D  74                 	db	116	;'t'
  1450  00F51E  73                 	db	115	;'s'
  1451  00F51F  20                 	db	32
  1452  00F520  52                 	db	82	;'R'
  1453  00F521  65                 	db	101	;'e'
  1454  00F522  6D                 	db	109	;'m'
  1455  00F523  6F                 	db	111	;'o'
  1456  00F524  74                 	db	116	;'t'
  1457  00F525  65                 	db	101	;'e'
  1458  00F526  20                 	db	32
  1459  00F527  62                 	db	98	;'b'
  1460  00F528  75                 	db	117	;'u'
  1461  00F529  74                 	db	116	;'t'
  1462  00F52A  74                 	db	116	;'t'
  1463  00F52B  6F                 	db	111	;'o'
  1464  00F52C  6E                 	db	110	;'n'
  1465  00F52D  20                 	db	32
  1466  00F52E  74                 	db	116	;'t'
  1467  00F52F  6F                 	db	111	;'o'
  1468  00F530  20                 	db	32
  1469  00F531  73                 	db	115	;'s'
  1470  00F532  65                 	db	101	;'e'
  1471  00F533  6E                 	db	110	;'n'
  1472  00F534  64                 	db	100	;'d'
  1473  00F535  20                 	db	32
  1474  00F536  52                 	db	82	;'R'
  1475  00F537  46                 	db	70	;'F'
  1476  00F538  20                 	db	32
  1477  00F539  43                 	db	67	;'C'
  1478  00F53A  6F                 	db	111	;'o'
  1479  00F53B  6E                 	db	110	;'n'
  1480  00F53C  66                 	db	102	;'f'
  1481  00F53D  69                 	db	105	;'i'
  1482  00F53E  67                 	db	103	;'g'
  1483  00F53F  20                 	db	32
  1484  00F540  32                 	db	50	;'2'
  1485  00F541  20                 	db	32
  1486  00F542  63                 	db	99	;'c'
  1487  00F543  68                 	db	104	;'h'
  1488  00F544  61                 	db	97	;'a'
  1489  00F545  6E                 	db	110	;'n'
  1490  00F546  6E                 	db	110	;'n'
  1491  00F547  65                 	db	101	;'e'
  1492  00F548  6C                 	db	108	;'l'
  1493  00F549  20                 	db	32
  1494  00F54A  44                 	db	68	;'D'
  1495  00F54B  00                 	db	0
  1496  00F54C                     STR_111:
  1497  00F54C  53                 	db	83	;'S'
  1498  00F54D  65                 	db	101	;'e'
  1499  00F54E  74                 	db	116	;'t'
  1500  00F54F  73                 	db	115	;'s'
  1501  00F550  20                 	db	32
  1502  00F551  52                 	db	82	;'R'
  1503  00F552  65                 	db	101	;'e'
  1504  00F553  6D                 	db	109	;'m'
  1505  00F554  6F                 	db	111	;'o'
  1506  00F555  74                 	db	116	;'t'
  1507  00F556  65                 	db	101	;'e'
  1508  00F557  20                 	db	32
  1509  00F558  62                 	db	98	;'b'
  1510  00F559  75                 	db	117	;'u'
  1511  00F55A  74                 	db	116	;'t'
  1512  00F55B  74                 	db	116	;'t'
  1513  00F55C  6F                 	db	111	;'o'
  1514  00F55D  6E                 	db	110	;'n'
  1515  00F55E  20                 	db	32
  1516  00F55F  74                 	db	116	;'t'
  1517  00F560  6F                 	db	111	;'o'
  1518  00F561  20                 	db	32
  1519  00F562  73                 	db	115	;'s'
  1520  00F563  65                 	db	101	;'e'
  1521  00F564  6E                 	db	110	;'n'
  1522  00F565  64                 	db	100	;'d'
  1523  00F566  20                 	db	32
  1524  00F567  52                 	db	82	;'R'
  1525  00F568  46                 	db	70	;'F'
  1526  00F569  20                 	db	32
  1527  00F56A  43                 	db	67	;'C'
  1528  00F56B  6F                 	db	111	;'o'
  1529  00F56C  6E                 	db	110	;'n'
  1530  00F56D  66                 	db	102	;'f'
  1531  00F56E  69                 	db	105	;'i'
  1532  00F56F  67                 	db	103	;'g'
  1533  00F570  20                 	db	32
  1534  00F571  31                 	db	49	;'1'
  1535  00F572  20                 	db	32
  1536  00F573  63                 	db	99	;'c'
  1537  00F574  68                 	db	104	;'h'
  1538  00F575  61                 	db	97	;'a'
  1539  00F576  6E                 	db	110	;'n'
  1540  00F577  6E                 	db	110	;'n'
  1541  00F578  65                 	db	101	;'e'
  1542  00F579  6C                 	db	108	;'l'
  1543  00F57A  20                 	db	32
  1544  00F57B  45                 	db	69	;'E'
  1545  00F57C  00                 	db	0
  1546  00F57D                     STR_113:
  1547  00F57D  53                 	db	83	;'S'
  1548  00F57E  65                 	db	101	;'e'
  1549  00F57F  74                 	db	116	;'t'
  1550  00F580  73                 	db	115	;'s'
  1551  00F581  20                 	db	32
  1552  00F582  52                 	db	82	;'R'
  1553  00F583  65                 	db	101	;'e'
  1554  00F584  6D                 	db	109	;'m'
  1555  00F585  6F                 	db	111	;'o'
  1556  00F586  74                 	db	116	;'t'
  1557  00F587  65                 	db	101	;'e'
  1558  00F588  20                 	db	32
  1559  00F589  62                 	db	98	;'b'
  1560  00F58A  75                 	db	117	;'u'
  1561  00F58B  74                 	db	116	;'t'
  1562  00F58C  74                 	db	116	;'t'
  1563  00F58D  6F                 	db	111	;'o'
  1564  00F58E  6E                 	db	110	;'n'
  1565  00F58F  20                 	db	32
  1566  00F590  74                 	db	116	;'t'
  1567  00F591  6F                 	db	111	;'o'
  1568  00F592  20                 	db	32
  1569  00F593  73                 	db	115	;'s'
  1570  00F594  65                 	db	101	;'e'
  1571  00F595  6E                 	db	110	;'n'
  1572  00F596  64                 	db	100	;'d'
  1573  00F597  20                 	db	32
  1574  00F598  52                 	db	82	;'R'
  1575  00F599  46                 	db	70	;'F'
  1576  00F59A  20                 	db	32
  1577  00F59B  43                 	db	67	;'C'
  1578  00F59C  6F                 	db	111	;'o'
  1579  00F59D  6E                 	db	110	;'n'
  1580  00F59E  66                 	db	102	;'f'
  1581  00F59F  69                 	db	105	;'i'
  1582  00F5A0  67                 	db	103	;'g'
  1583  00F5A1  20                 	db	32
  1584  00F5A2  31                 	db	49	;'1'
  1585  00F5A3  20                 	db	32
  1586  00F5A4  63                 	db	99	;'c'
  1587  00F5A5  68                 	db	104	;'h'
  1588  00F5A6  61                 	db	97	;'a'
  1589  00F5A7  6E                 	db	110	;'n'
  1590  00F5A8  6E                 	db	110	;'n'
  1591  00F5A9  65                 	db	101	;'e'
  1592  00F5AA  6C                 	db	108	;'l'
  1593  00F5AB  20                 	db	32
  1594  00F5AC  46                 	db	70	;'F'
  1595  00F5AD  00                 	db	0
  1596  00F5AE                     STR_119:
  1597  00F5AE  53                 	db	83	;'S'
  1598  00F5AF  65                 	db	101	;'e'
  1599  00F5B0  74                 	db	116	;'t'
  1600  00F5B1  73                 	db	115	;'s'
  1601  00F5B2  20                 	db	32
  1602  00F5B3  52                 	db	82	;'R'
  1603  00F5B4  65                 	db	101	;'e'
  1604  00F5B5  6D                 	db	109	;'m'
  1605  00F5B6  6F                 	db	111	;'o'
  1606  00F5B7  74                 	db	116	;'t'
  1607  00F5B8  65                 	db	101	;'e'
  1608  00F5B9  20                 	db	32
  1609  00F5BA  62                 	db	98	;'b'
  1610  00F5BB  75                 	db	117	;'u'
  1611  00F5BC  74                 	db	116	;'t'
  1612  00F5BD  74                 	db	116	;'t'
  1613  00F5BE  6F                 	db	111	;'o'
  1614  00F5BF  6E                 	db	110	;'n'
  1615  00F5C0  20                 	db	32
  1616  00F5C1  74                 	db	116	;'t'
  1617  00F5C2  6F                 	db	111	;'o'
  1618  00F5C3  20                 	db	32
  1619  00F5C4  73                 	db	115	;'s'
  1620  00F5C5  65                 	db	101	;'e'
  1621  00F5C6  6E                 	db	110	;'n'
  1622  00F5C7  64                 	db	100	;'d'
  1623  00F5C8  20                 	db	32
  1624  00F5C9  52                 	db	82	;'R'
  1625  00F5CA  46                 	db	70	;'F'
  1626  00F5CB  20                 	db	32
  1627  00F5CC  43                 	db	67	;'C'
  1628  00F5CD  6F                 	db	111	;'o'
  1629  00F5CE  6E                 	db	110	;'n'
  1630  00F5CF  66                 	db	102	;'f'
  1631  00F5D0  69                 	db	105	;'i'
  1632  00F5D1  67                 	db	103	;'g'
  1633  00F5D2  20                 	db	32
  1634  00F5D3  32                 	db	50	;'2'
  1635  00F5D4  20                 	db	32
  1636  00F5D5  63                 	db	99	;'c'
  1637  00F5D6  68                 	db	104	;'h'
  1638  00F5D7  61                 	db	97	;'a'
  1639  00F5D8  6E                 	db	110	;'n'
  1640  00F5D9  6E                 	db	110	;'n'
  1641  00F5DA  65                 	db	101	;'e'
  1642  00F5DB  6C                 	db	108	;'l'
  1643  00F5DC  20                 	db	32
  1644  00F5DD  48                 	db	72	;'H'
  1645  00F5DE  00                 	db	0
  1646  00F5DF                     STR_49:
  1647  00F5DF  45                 	db	69	;'E'
  1648  00F5E0  72                 	db	114	;'r'
  1649  00F5E1  72                 	db	114	;'r'
  1650  00F5E2  6F                 	db	111	;'o'
  1651  00F5E3  72                 	db	114	;'r'
  1652  00F5E4  3A                 	db	58	;':'
  1653  00F5E5  20                 	db	32
  1654  00F5E6  4E                 	db	78	;'N'
  1655  00F5E7  6F                 	db	111	;'o'
  1656  00F5E8  20                 	db	32
  1657  00F5E9  4E                 	db	78	;'N'
  1658  00F5EA  45                 	db	69	;'E'
  1659  00F5EB  43                 	db	67	;'C'
  1660  00F5EC  20                 	db	32
  1661  00F5ED  63                 	db	99	;'c'
  1662  00F5EE  6F                 	db	111	;'o'
  1663  00F5EF  64                 	db	100	;'d'
  1664  00F5F0  65                 	db	101	;'e'
  1665  00F5F1  20                 	db	32
  1666  00F5F2  73                 	db	115	;'s'
  1667  00F5F3  61                 	db	97	;'a'
  1668  00F5F4  76                 	db	118	;'v'
  1669  00F5F5  65                 	db	101	;'e'
  1670  00F5F6  64                 	db	100	;'d'
  1671  00F5F7  20                 	db	32
  1672  00F5F8  66                 	db	102	;'f'
  1673  00F5F9  6F                 	db	111	;'o'
  1674  00F5FA  72                 	db	114	;'r'
  1675  00F5FB  20                 	db	32
  1676  00F5FC  73                 	db	115	;'s'
  1677  00F5FD  70                 	db	112	;'p'
  1678  00F5FE  65                 	db	101	;'e'
  1679  00F5FF  63                 	db	99	;'c'
  1680  00F600  69                 	db	105	;'i'
  1681  00F601  66                 	db	102	;'f'
  1682  00F602  69                 	db	105	;'i'
  1683  00F603  65                 	db	101	;'e'
  1684  00F604  64                 	db	100	;'d'
  1685  00F605  20                 	db	32
  1686  00F606  63                 	db	99	;'c'
  1687  00F607  6F                 	db	111	;'o'
  1688  00F608  6D                 	db	109	;'m'
  1689  00F609  6D                 	db	109	;'m'
  1690  00F60A  61                 	db	97	;'a'
  1691  00F60B  6E                 	db	110	;'n'
  1692  00F60C  64                 	db	100	;'d'
  1693  00F60D  00                 	db	0
  1694  00F60E                     STR_50:
  1695  00F60E  52                 	db	82	;'R'
  1696  00F60F  65                 	db	101	;'e'
  1697  00F610  6D                 	db	109	;'m'
  1698  00F611  6F                 	db	111	;'o'
  1699  00F612  74                 	db	116	;'t'
  1700  00F613  65                 	db	101	;'e'
  1701  00F614  42                 	db	66	;'B'
  1702  00F615  75                 	db	117	;'u'
  1703  00F616  74                 	db	116	;'t'
  1704  00F617  74                 	db	116	;'t'
  1705  00F618  6F                 	db	111	;'o'
  1706  00F619  6E                 	db	110	;'n'
  1707  00F61A  25                 	db	37
  1708  00F61B  6C                 	db	108	;'l'
  1709  00F61C  64                 	db	100	;'d'
  1710  00F61D  20                 	db	32
  1711  00F61E  6E                 	db	110	;'n'
  1712  00F61F  6F                 	db	111	;'o'
  1713  00F620  77                 	db	119	;'w'
  1714  00F621  20                 	db	32
  1715  00F622  74                 	db	116	;'t'
  1716  00F623  72                 	db	114	;'r'
  1717  00F624  61                 	db	97	;'a'
  1718  00F625  6E                 	db	110	;'n'
  1719  00F626  73                 	db	115	;'s'
  1720  00F627  6D                 	db	109	;'m'
  1721  00F628  69                 	db	105	;'i'
  1722  00F629  74                 	db	116	;'t'
  1723  00F62A  73                 	db	115	;'s'
  1724  00F62B  20                 	db	32
  1725  00F62C  4E                 	db	78	;'N'
  1726  00F62D  45                 	db	69	;'E'
  1727  00F62E  43                 	db	67	;'C'
  1728  00F62F  20                 	db	32
  1729  00F630  63                 	db	99	;'c'
  1730  00F631  6F                 	db	111	;'o'
  1731  00F632  64                 	db	100	;'d'
  1732  00F633  65                 	db	101	;'e'
  1733  00F634  20                 	db	32
  1734  00F635  30                 	db	48	;'0'
  1735  00F636  78                 	db	120	;'x'
  1736  00F637  25                 	db	37
  1737  00F638  6C                 	db	108	;'l'
  1738  00F639  58                 	db	88	;'X'
  1739  00F63A  20                 	db	32
  1740  00F63B  00                 	db	0
  1741  00F63C                     STR_127:
  1742  00F63C  43                 	db	67	;'C'
  1743  00F63D  6C                 	db	108	;'l'
  1744  00F63E  65                 	db	101	;'e'
  1745  00F63F  61                 	db	97	;'a'
  1746  00F640  72                 	db	114	;'r'
  1747  00F641  73                 	db	115	;'s'
  1748  00F642  20                 	db	32
  1749  00F643  73                 	db	115	;'s'
  1750  00F644  61                 	db	97	;'a'
  1751  00F645  76                 	db	118	;'v'
  1752  00F646  65                 	db	101	;'e'
  1753  00F647  64                 	db	100	;'d'
  1754  00F648  20                 	db	32
  1755  00F649  42                 	db	66	;'B'
  1756  00F64A  75                 	db	117	;'u'
  1757  00F64B  74                 	db	116	;'t'
  1758  00F64C  74                 	db	116	;'t'
  1759  00F64D  6F                 	db	111	;'o'
  1760  00F64E  6E                 	db	110	;'n'
  1761  00F64F  20                 	db	32
  1762  00F650  66                 	db	102	;'f'
  1763  00F651  6F                 	db	111	;'o'
  1764  00F652  72                 	db	114	;'r'
  1765  00F653  20                 	db	32
  1766  00F654  52                 	db	82	;'R'
  1767  00F655  46                 	db	70	;'F'
  1768  00F656  20                 	db	32
  1769  00F657  43                 	db	67	;'C'
  1770  00F658  6F                 	db	111	;'o'
  1771  00F659  6E                 	db	110	;'n'
  1772  00F65A  66                 	db	102	;'f'
  1773  00F65B  69                 	db	105	;'i'
  1774  00F65C  67                 	db	103	;'g'
  1775  00F65D  20                 	db	32
  1776  00F65E  32                 	db	50	;'2'
  1777  00F65F  20                 	db	32
  1778  00F660  63                 	db	99	;'c'
  1779  00F661  68                 	db	104	;'h'
  1780  00F662  61                 	db	97	;'a'
  1781  00F663  6E                 	db	110	;'n'
  1782  00F664  6E                 	db	110	;'n'
  1783  00F665  65                 	db	101	;'e'
  1784  00F666  6C                 	db	108	;'l'
  1785  00F667  20                 	db	32
  1786  00F668  42                 	db	66	;'B'
  1787  00F669  00                 	db	0
  1788  00F66A                     STR_121:
  1789  00F66A  43                 	db	67	;'C'
  1790  00F66B  6C                 	db	108	;'l'
  1791  00F66C  65                 	db	101	;'e'
  1792  00F66D  61                 	db	97	;'a'
  1793  00F66E  72                 	db	114	;'r'
  1794  00F66F  73                 	db	115	;'s'
  1795  00F670  20                 	db	32
  1796  00F671  73                 	db	115	;'s'
  1797  00F672  61                 	db	97	;'a'
  1798  00F673  76                 	db	118	;'v'
  1799  00F674  65                 	db	101	;'e'
  1800  00F675  64                 	db	100	;'d'
  1801  00F676  20                 	db	32
  1802  00F677  42                 	db	66	;'B'
  1803  00F678  75                 	db	117	;'u'
  1804  00F679  74                 	db	116	;'t'
  1805  00F67A  74                 	db	116	;'t'
  1806  00F67B  6F                 	db	111	;'o'
  1807  00F67C  6E                 	db	110	;'n'
  1808  00F67D  20                 	db	32
  1809  00F67E  66                 	db	102	;'f'
  1810  00F67F  6F                 	db	111	;'o'
  1811  00F680  72                 	db	114	;'r'
  1812  00F681  20                 	db	32
  1813  00F682  52                 	db	82	;'R'
  1814  00F683  46                 	db	70	;'F'
  1815  00F684  20                 	db	32
  1816  00F685  43                 	db	67	;'C'
  1817  00F686  6F                 	db	111	;'o'
  1818  00F687  6E                 	db	110	;'n'
  1819  00F688  66                 	db	102	;'f'
  1820  00F689  69                 	db	105	;'i'
  1821  00F68A  67                 	db	103	;'g'
  1822  00F68B  20                 	db	32
  1823  00F68C  31                 	db	49	;'1'
  1824  00F68D  20                 	db	32
  1825  00F68E  63                 	db	99	;'c'
  1826  00F68F  68                 	db	104	;'h'
  1827  00F690  61                 	db	97	;'a'
  1828  00F691  6E                 	db	110	;'n'
  1829  00F692  6E                 	db	110	;'n'
  1830  00F693  65                 	db	101	;'e'
  1831  00F694  6C                 	db	108	;'l'
  1832  00F695  20                 	db	32
  1833  00F696  44                 	db	68	;'D'
  1834  00F697  00                 	db	0
  1835  00F698                     STR_129:
  1836  00F698  43                 	db	67	;'C'
  1837  00F699  6C                 	db	108	;'l'
  1838  00F69A  65                 	db	101	;'e'
  1839  00F69B  61                 	db	97	;'a'
  1840  00F69C  72                 	db	114	;'r'
  1841  00F69D  73                 	db	115	;'s'
  1842  00F69E  20                 	db	32
  1843  00F69F  73                 	db	115	;'s'
  1844  00F6A0  61                 	db	97	;'a'
  1845  00F6A1  76                 	db	118	;'v'
  1846  00F6A2  65                 	db	101	;'e'
  1847  00F6A3  64                 	db	100	;'d'
  1848  00F6A4  20                 	db	32
  1849  00F6A5  42                 	db	66	;'B'
  1850  00F6A6  75                 	db	117	;'u'
  1851  00F6A7  74                 	db	116	;'t'
  1852  00F6A8  74                 	db	116	;'t'
  1853  00F6A9  6F                 	db	111	;'o'
  1854  00F6AA  6E                 	db	110	;'n'
  1855  00F6AB  20                 	db	32
  1856  00F6AC  66                 	db	102	;'f'
  1857  00F6AD  6F                 	db	111	;'o'
  1858  00F6AE  72                 	db	114	;'r'
  1859  00F6AF  20                 	db	32
  1860  00F6B0  52                 	db	82	;'R'
  1861  00F6B1  46                 	db	70	;'F'
  1862  00F6B2  20                 	db	32
  1863  00F6B3  43                 	db	67	;'C'
  1864  00F6B4  6F                 	db	111	;'o'
  1865  00F6B5  6E                 	db	110	;'n'
  1866  00F6B6  66                 	db	102	;'f'
  1867  00F6B7  69                 	db	105	;'i'
  1868  00F6B8  67                 	db	103	;'g'
  1869  00F6B9  20                 	db	32
  1870  00F6BA  32                 	db	50	;'2'
  1871  00F6BB  20                 	db	32
  1872  00F6BC  63                 	db	99	;'c'
  1873  00F6BD  68                 	db	104	;'h'
  1874  00F6BE  61                 	db	97	;'a'
  1875  00F6BF  6E                 	db	110	;'n'
  1876  00F6C0  6E                 	db	110	;'n'
  1877  00F6C1  65                 	db	101	;'e'
  1878  00F6C2  6C                 	db	108	;'l'
  1879  00F6C3  20                 	db	32
  1880  00F6C4  44                 	db	68	;'D'
  1881  00F6C5  00                 	db	0
  1882  00F6C6                     STR_123:
  1883  00F6C6  43                 	db	67	;'C'
  1884  00F6C7  6C                 	db	108	;'l'
  1885  00F6C8  65                 	db	101	;'e'
  1886  00F6C9  61                 	db	97	;'a'
  1887  00F6CA  72                 	db	114	;'r'
  1888  00F6CB  73                 	db	115	;'s'
  1889  00F6CC  20                 	db	32
  1890  00F6CD  73                 	db	115	;'s'
  1891  00F6CE  61                 	db	97	;'a'
  1892  00F6CF  76                 	db	118	;'v'
  1893  00F6D0  65                 	db	101	;'e'
  1894  00F6D1  64                 	db	100	;'d'
  1895  00F6D2  20                 	db	32
  1896  00F6D3  42                 	db	66	;'B'
  1897  00F6D4  75                 	db	117	;'u'
  1898  00F6D5  74                 	db	116	;'t'
  1899  00F6D6  74                 	db	116	;'t'
  1900  00F6D7  6F                 	db	111	;'o'
  1901  00F6D8  6E                 	db	110	;'n'
  1902  00F6D9  20                 	db	32
  1903  00F6DA  66                 	db	102	;'f'
  1904  00F6DB  6F                 	db	111	;'o'
  1905  00F6DC  72                 	db	114	;'r'
  1906  00F6DD  20                 	db	32
  1907  00F6DE  52                 	db	82	;'R'
  1908  00F6DF  46                 	db	70	;'F'
  1909  00F6E0  20                 	db	32
  1910  00F6E1  43                 	db	67	;'C'
  1911  00F6E2  6F                 	db	111	;'o'
  1912  00F6E3  6E                 	db	110	;'n'
  1913  00F6E4  66                 	db	102	;'f'
  1914  00F6E5  69                 	db	105	;'i'
  1915  00F6E6  67                 	db	103	;'g'
  1916  00F6E7  20                 	db	32
  1917  00F6E8  31                 	db	49	;'1'
  1918  00F6E9  20                 	db	32
  1919  00F6EA  63                 	db	99	;'c'
  1920  00F6EB  68                 	db	104	;'h'
  1921  00F6EC  61                 	db	97	;'a'
  1922  00F6ED  6E                 	db	110	;'n'
  1923  00F6EE  6E                 	db	110	;'n'
  1924  00F6EF  65                 	db	101	;'e'
  1925  00F6F0  6C                 	db	108	;'l'
  1926  00F6F1  20                 	db	32
  1927  00F6F2  45                 	db	69	;'E'
  1928  00F6F3  00                 	db	0
  1929  00F6F4                     STR_125:
  1930  00F6F4  43                 	db	67	;'C'
  1931  00F6F5  6C                 	db	108	;'l'
  1932  00F6F6  65                 	db	101	;'e'
  1933  00F6F7  61                 	db	97	;'a'
  1934  00F6F8  72                 	db	114	;'r'
  1935  00F6F9  73                 	db	115	;'s'
  1936  00F6FA  20                 	db	32
  1937  00F6FB  73                 	db	115	;'s'
  1938  00F6FC  61                 	db	97	;'a'
  1939  00F6FD  76                 	db	118	;'v'
  1940  00F6FE  65                 	db	101	;'e'
  1941  00F6FF  64                 	db	100	;'d'
  1942  00F700  20                 	db	32
  1943  00F701  42                 	db	66	;'B'
  1944  00F702  75                 	db	117	;'u'
  1945  00F703  74                 	db	116	;'t'
  1946  00F704  74                 	db	116	;'t'
  1947  00F705  6F                 	db	111	;'o'
  1948  00F706  6E                 	db	110	;'n'
  1949  00F707  20                 	db	32
  1950  00F708  66                 	db	102	;'f'
  1951  00F709  6F                 	db	111	;'o'
  1952  00F70A  72                 	db	114	;'r'
  1953  00F70B  20                 	db	32
  1954  00F70C  52                 	db	82	;'R'
  1955  00F70D  46                 	db	70	;'F'
  1956  00F70E  20                 	db	32
  1957  00F70F  43                 	db	67	;'C'
  1958  00F710  6F                 	db	111	;'o'
  1959  00F711  6E                 	db	110	;'n'
  1960  00F712  66                 	db	102	;'f'
  1961  00F713  69                 	db	105	;'i'
  1962  00F714  67                 	db	103	;'g'
  1963  00F715  20                 	db	32
  1964  00F716  31                 	db	49	;'1'
  1965  00F717  20                 	db	32
  1966  00F718  63                 	db	99	;'c'
  1967  00F719  68                 	db	104	;'h'
  1968  00F71A  61                 	db	97	;'a'
  1969  00F71B  6E                 	db	110	;'n'
  1970  00F71C  6E                 	db	110	;'n'
  1971  00F71D  65                 	db	101	;'e'
  1972  00F71E  6C                 	db	108	;'l'
  1973  00F71F  20                 	db	32
  1974  00F720  46                 	db	70	;'F'
  1975  00F721  00                 	db	0
  1976  00F722                     STR_131:
  1977  00F722  43                 	db	67	;'C'
  1978  00F723  6C                 	db	108	;'l'
  1979  00F724  65                 	db	101	;'e'
  1980  00F725  61                 	db	97	;'a'
  1981  00F726  72                 	db	114	;'r'
  1982  00F727  73                 	db	115	;'s'
  1983  00F728  20                 	db	32
  1984  00F729  73                 	db	115	;'s'
  1985  00F72A  61                 	db	97	;'a'
  1986  00F72B  76                 	db	118	;'v'
  1987  00F72C  65                 	db	101	;'e'
  1988  00F72D  64                 	db	100	;'d'
  1989  00F72E  20                 	db	32
  1990  00F72F  42                 	db	66	;'B'
  1991  00F730  75                 	db	117	;'u'
  1992  00F731  74                 	db	116	;'t'
  1993  00F732  74                 	db	116	;'t'
  1994  00F733  6F                 	db	111	;'o'
  1995  00F734  6E                 	db	110	;'n'
  1996  00F735  20                 	db	32
  1997  00F736  66                 	db	102	;'f'
  1998  00F737  6F                 	db	111	;'o'
  1999  00F738  72                 	db	114	;'r'
  2000  00F739  20                 	db	32
  2001  00F73A  52                 	db	82	;'R'
  2002  00F73B  46                 	db	70	;'F'
  2003  00F73C  20                 	db	32
  2004  00F73D  43                 	db	67	;'C'
  2005  00F73E  6F                 	db	111	;'o'
  2006  00F73F  6E                 	db	110	;'n'
  2007  00F740  66                 	db	102	;'f'
  2008  00F741  69                 	db	105	;'i'
  2009  00F742  67                 	db	103	;'g'
  2010  00F743  20                 	db	32
  2011  00F744  32                 	db	50	;'2'
  2012  00F745  20                 	db	32
  2013  00F746  63                 	db	99	;'c'
  2014  00F747  68                 	db	104	;'h'
  2015  00F748  61                 	db	97	;'a'
  2016  00F749  6E                 	db	110	;'n'
  2017  00F74A  6E                 	db	110	;'n'
  2018  00F74B  65                 	db	101	;'e'
  2019  00F74C  6C                 	db	108	;'l'
  2020  00F74D  20                 	db	32
  2021  00F74E  48                 	db	72	;'H'
  2022  00F74F  00                 	db	0
  2023  00F750                     STR_72:
  2024  00F750  45                 	db	69	;'E'
  2025  00F751  72                 	db	114	;'r'
  2026  00F752  72                 	db	114	;'r'
  2027  00F753  6F                 	db	111	;'o'
  2028  00F754  72                 	db	114	;'r'
  2029  00F755  3A                 	db	58	;':'
  2030  00F756  20                 	db	32
  2031  00F757  4E                 	db	78	;'N'
  2032  00F758  45                 	db	69	;'E'
  2033  00F759  43                 	db	67	;'C'
  2034  00F75A  20                 	db	32
  2035  00F75B  63                 	db	99	;'c'
  2036  00F75C  6F                 	db	111	;'o'
  2037  00F75D  64                 	db	100	;'d'
  2038  00F75E  65                 	db	101	;'e'
  2039  00F75F  20                 	db	32
  2040  00F760  61                 	db	97	;'a'
  2041  00F761  6C                 	db	108	;'l'
  2042  00F762  72                 	db	114	;'r'
  2043  00F763  65                 	db	101	;'e'
  2044  00F764  61                 	db	97	;'a'
  2045  00F765  64                 	db	100	;'d'
  2046  00F766  79                 	db	121	;'y'
  2047  00F767  20                 	db	32
  2048  00F768  73                 	db	115	;'s'
  2049  00F769  61                 	db	97	;'a'
  2050  00F76A  76                 	db	118	;'v'
  2051  00F76B  65                 	db	101	;'e'
  2052  00F76C  64                 	db	100	;'d'
  2053  00F76D  20                 	db	32
  2054  00F76E  74                 	db	116	;'t'
  2055  00F76F  6F                 	db	111	;'o'
  2056  00F770  20                 	db	32
  2057  00F771  74                 	db	116	;'t'
  2058  00F772  68                 	db	104	;'h'
  2059  00F773  69                 	db	105	;'i'
  2060  00F774  73                 	db	115	;'s'
  2061  00F775  20                 	db	32
  2062  00F776  52                 	db	82	;'R'
  2063  00F777  46                 	db	70	;'F'
  2064  00F778  20                 	db	32
  2065  00F779  63                 	db	99	;'c'
  2066  00F77A  6F                 	db	111	;'o'
  2067  00F77B  64                 	db	100	;'d'
  2068  00F77C  65                 	db	101	;'e'
  2069  00F77D  00                 	db	0
  2070  00F77E                     STR_48:
  2071  00F77E  4E                 	db	78	;'N'
  2072  00F77F  45                 	db	69	;'E'
  2073  00F780  43                 	db	67	;'C'
  2074  00F781  20                 	db	32
  2075  00F782  43                 	db	67	;'C'
  2076  00F783  6F                 	db	111	;'o'
  2077  00F784  64                 	db	100	;'d'
  2078  00F785  65                 	db	101	;'e'
  2079  00F786  20                 	db	32
  2080  00F787  61                 	db	97	;'a'
  2081  00F788  64                 	db	100	;'d'
  2082  00F789  64                 	db	100	;'d'
  2083  00F78A  72                 	db	114	;'r'
  2084  00F78B  65                 	db	101	;'e'
  2085  00F78C  73                 	db	115	;'s'
  2086  00F78D  73                 	db	115	;'s'
  2087  00F78E  3A                 	db	58	;':'
  2088  00F78F  20                 	db	32
  2089  00F790  30                 	db	48	;'0'
  2090  00F791  78                 	db	120	;'x'
  2091  00F792  25                 	db	37
  2092  00F793  30                 	db	48	;'0'
  2093  00F794  32                 	db	50	;'2'
  2094  00F795  58                 	db	88	;'X'
  2095  00F796  20                 	db	32
  2096  00F797  2C                 	db	44
  2097  00F798  20                 	db	32
  2098  00F799  63                 	db	99	;'c'
  2099  00F79A  6F                 	db	111	;'o'
  2100  00F79B  6D                 	db	109	;'m'
  2101  00F79C  6D                 	db	109	;'m'
  2102  00F79D  61                 	db	97	;'a'
  2103  00F79E  6E                 	db	110	;'n'
  2104  00F79F  64                 	db	100	;'d'
  2105  00F7A0  3A                 	db	58	;':'
  2106  00F7A1  20                 	db	32
  2107  00F7A2  30                 	db	48	;'0'
  2108  00F7A3  78                 	db	120	;'x'
  2109  00F7A4  25                 	db	37
  2110  00F7A5  30                 	db	48	;'0'
  2111  00F7A6  32                 	db	50	;'2'
  2112  00F7A7  58                 	db	88	;'X'
  2113  00F7A8  20                 	db	32
  2114  00F7A9  00                 	db	0
  2115  00F7AA                     STR_76:
  2116  00F7AA  52                 	db	82	;'R'
  2117  00F7AB  46                 	db	70	;'F'
  2118  00F7AC  20                 	db	32
  2119  00F7AD  63                 	db	99	;'c'
  2120  00F7AE  6F                 	db	111	;'o'
  2121  00F7AF  6E                 	db	110	;'n'
  2122  00F7B0  66                 	db	102	;'f'
  2123  00F7B1  69                 	db	105	;'i'
  2124  00F7B2  67                 	db	103	;'g'
  2125  00F7B3  20                 	db	32
  2126  00F7B4  25                 	db	37
  2127  00F7B5  64                 	db	100	;'d'
  2128  00F7B6  20                 	db	32
  2129  00F7B7  63                 	db	99	;'c'
  2130  00F7B8  68                 	db	104	;'h'
  2131  00F7B9  61                 	db	97	;'a'
  2132  00F7BA  6E                 	db	110	;'n'
  2133  00F7BB  6E                 	db	110	;'n'
  2134  00F7BC  65                 	db	101	;'e'
  2135  00F7BD  6C                 	db	108	;'l'
  2136  00F7BE  20                 	db	32
  2137  00F7BF  25                 	db	37
  2138  00F7C0  63                 	db	99	;'c'
  2139  00F7C1  20                 	db	32
  2140  00F7C2  73                 	db	115	;'s'
  2141  00F7C3  75                 	db	117	;'u'
  2142  00F7C4  63                 	db	99	;'c'
  2143  00F7C5  63                 	db	99	;'c'
  2144  00F7C6  65                 	db	101	;'e'
  2145  00F7C7  73                 	db	115	;'s'
  2146  00F7C8  73                 	db	115	;'s'
  2147  00F7C9  66                 	db	102	;'f'
  2148  00F7CA  75                 	db	117	;'u'
  2149  00F7CB  6C                 	db	108	;'l'
  2150  00F7CC  6C                 	db	108	;'l'
  2151  00F7CD  79                 	db	121	;'y'
  2152  00F7CE  20                 	db	32
  2153  00F7CF  65                 	db	101	;'e'
  2154  00F7D0  72                 	db	114	;'r'
  2155  00F7D1  61                 	db	97	;'a'
  2156  00F7D2  73                 	db	115	;'s'
  2157  00F7D3  65                 	db	101	;'e'
  2158  00F7D4  64                 	db	100	;'d'
  2159  00F7D5  00                 	db	0
  2160  00F7D6                     STR_77:
  2161  00F7D6  45                 	db	69	;'E'
  2162  00F7D7  72                 	db	114	;'r'
  2163  00F7D8  72                 	db	114	;'r'
  2164  00F7D9  6F                 	db	111	;'o'
  2165  00F7DA  72                 	db	114	;'r'
  2166  00F7DB  3A                 	db	58	;':'
  2167  00F7DC  20                 	db	32
  2168  00F7DD  52                 	db	82	;'R'
  2169  00F7DE  46                 	db	70	;'F'
  2170  00F7DF  20                 	db	32
  2171  00F7E0  63                 	db	99	;'c'
  2172  00F7E1  68                 	db	104	;'h'
  2173  00F7E2  61                 	db	97	;'a'
  2174  00F7E3  6E                 	db	110	;'n'
  2175  00F7E4  6E                 	db	110	;'n'
  2176  00F7E5  65                 	db	101	;'e'
  2177  00F7E6  6C                 	db	108	;'l'
  2178  00F7E7  20                 	db	32
  2179  00F7E8  6E                 	db	110	;'n'
  2180  00F7E9  65                 	db	101	;'e'
  2181  00F7EA  65                 	db	101	;'e'
  2182  00F7EB  64                 	db	100	;'d'
  2183  00F7EC  73                 	db	115	;'s'
  2184  00F7ED  20                 	db	32
  2185  00F7EE  74                 	db	116	;'t'
  2186  00F7EF  6F                 	db	111	;'o'
  2187  00F7F0  20                 	db	32
  2188  00F7F1  62                 	db	98	;'b'
  2189  00F7F2  65                 	db	101	;'e'
  2190  00F7F3  20                 	db	32
  2191  00F7F4  6F                 	db	111	;'o'
  2192  00F7F5  6E                 	db	110	;'n'
  2193  00F7F6  65                 	db	101	;'e'
  2194  00F7F7  20                 	db	32
  2195  00F7F8  63                 	db	99	;'c'
  2196  00F7F9  68                 	db	104	;'h'
  2197  00F7FA  61                 	db	97	;'a'
  2198  00F7FB  72                 	db	114	;'r'
  2199  00F7FC  61                 	db	97	;'a'
  2200  00F7FD  63                 	db	99	;'c'
  2201  00F7FE  74                 	db	116	;'t'
  2202  00F7FF  65                 	db	101	;'e'
  2203  00F800  72                 	db	114	;'r'
  2204  00F801  00                 	db	0
  2205  00F802                     STR_71:
  2206  00F802  45                 	db	69	;'E'
  2207  00F803  72                 	db	114	;'r'
  2208  00F804  72                 	db	114	;'r'
  2209  00F805  6F                 	db	111	;'o'
  2210  00F806  72                 	db	114	;'r'
  2211  00F807  3A                 	db	58	;':'
  2212  00F808  20                 	db	32
  2213  00F809  4E                 	db	78	;'N'
  2214  00F80A  6F                 	db	111	;'o'
  2215  00F80B  20                 	db	32
  2216  00F80C  73                 	db	115	;'s'
  2217  00F80D  70                 	db	112	;'p'
  2218  00F80E  61                 	db	97	;'a'
  2219  00F80F  63                 	db	99	;'c'
  2220  00F810  65                 	db	101	;'e'
  2221  00F811  20                 	db	32
  2222  00F812  61                 	db	97	;'a'
  2223  00F813  76                 	db	118	;'v'
  2224  00F814  61                 	db	97	;'a'
  2225  00F815  69                 	db	105	;'i'
  2226  00F816  6C                 	db	108	;'l'
  2227  00F817  61                 	db	97	;'a'
  2228  00F818  62                 	db	98	;'b'
  2229  00F819  6C                 	db	108	;'l'
  2230  00F81A  65                 	db	101	;'e'
  2231  00F81B  20                 	db	32
  2232  00F81C  74                 	db	116	;'t'
  2233  00F81D  6F                 	db	111	;'o'
  2234  00F81E  20                 	db	32
  2235  00F81F  74                 	db	116	;'t'
  2236  00F820  68                 	db	104	;'h'
  2237  00F821  69                 	db	105	;'i'
  2238  00F822  73                 	db	115	;'s'
  2239  00F823  20                 	db	32
  2240  00F824  52                 	db	82	;'R'
  2241  00F825  46                 	db	70	;'F'
  2242  00F826  20                 	db	32
  2243  00F827  63                 	db	99	;'c'
  2244  00F828  6F                 	db	111	;'o'
  2245  00F829  64                 	db	100	;'d'
  2246  00F82A  65                 	db	101	;'e'
  2247  00F82B  00                 	db	0
  2248  00F82C                     STR_133:
  2249  00F82C  4E                 	db	78	;'N'
  2250  00F82D  45                 	db	69	;'E'
  2251  00F82E  43                 	db	67	;'C'
  2252  00F82F  20                 	db	32
  2253  00F830  64                 	db	100	;'d'
  2254  00F831  65                 	db	101	;'e'
  2255  00F832  73                 	db	115	;'s'
  2256  00F833  63                 	db	99	;'c'
  2257  00F834  72                 	db	114	;'r'
  2258  00F835  69                 	db	105	;'i'
  2259  00F836  70                 	db	112	;'p'
  2260  00F837  74                 	db	116	;'t'
  2261  00F838  69                 	db	105	;'i'
  2262  00F839  6F                 	db	111	;'o'
  2263  00F83A  6E                 	db	110	;'n'
  2264  00F83B  20                 	db	32
  2265  00F83C  66                 	db	102	;'f'
  2266  00F83D  6F                 	db	111	;'o'
  2267  00F83E  72                 	db	114	;'r'
  2268  00F83F  20                 	db	32
  2269  00F840  41                 	db	65	;'A'
  2270  00F841  72                 	db	114	;'r'
  2271  00F842  62                 	db	98	;'b'
  2272  00F843  69                 	db	105	;'i'
  2273  00F844  74                 	db	116	;'t'
  2274  00F845  72                 	db	114	;'r'
  2275  00F846  61                 	db	97	;'a'
  2276  00F847  72                 	db	114	;'r'
  2277  00F848  79                 	db	121	;'y'
  2278  00F849  20                 	db	32
  2279  00F84A  63                 	db	99	;'c'
  2280  00F84B  6F                 	db	111	;'o'
  2281  00F84C  64                 	db	100	;'d'
  2282  00F84D  65                 	db	101	;'e'
  2283  00F84E  20                 	db	32
  2284  00F84F  73                 	db	115	;'s'
  2285  00F850  65                 	db	101	;'e'
  2286  00F851  6E                 	db	110	;'n'
  2287  00F852  64                 	db	100	;'d'
  2288  00F853  00                 	db	0
  2289  00F854                     STR_63:
  2290  00F854  45                 	db	69	;'E'
  2291  00F855  72                 	db	114	;'r'
  2292  00F856  72                 	db	114	;'r'
  2293  00F857  6F                 	db	111	;'o'
  2294  00F858  72                 	db	114	;'r'
  2295  00F859  3A                 	db	58	;':'
  2296  00F85A  20                 	db	32
  2297  00F85B  4E                 	db	78	;'N'
  2298  00F85C  6F                 	db	111	;'o'
  2299  00F85D  20                 	db	32
  2300  00F85E  52                 	db	82	;'R'
  2301  00F85F  46                 	db	70	;'F'
  2302  00F860  20                 	db	32
  2303  00F861  63                 	db	99	;'c'
  2304  00F862  6F                 	db	111	;'o'
  2305  00F863  6E                 	db	110	;'n'
  2306  00F864  66                 	db	102	;'f'
  2307  00F865  69                 	db	105	;'i'
  2308  00F866  67                 	db	103	;'g'
  2309  00F867  75                 	db	117	;'u'
  2310  00F868  72                 	db	114	;'r'
  2311  00F869  61                 	db	97	;'a'
  2312  00F86A  74                 	db	116	;'t'
  2313  00F86B  69                 	db	105	;'i'
  2314  00F86C  6F                 	db	111	;'o'
  2315  00F86D  6E                 	db	110	;'n'
  2316  00F86E  20                 	db	32
  2317  00F86F  73                 	db	115	;'s'
  2318  00F870  70                 	db	112	;'p'
  2319  00F871  65                 	db	101	;'e'
  2320  00F872  63                 	db	99	;'c'
  2321  00F873  69                 	db	105	;'i'
  2322  00F874  66                 	db	102	;'f'
  2323  00F875  69                 	db	105	;'i'
  2324  00F876  65                 	db	101	;'e'
  2325  00F877  64                 	db	100	;'d'
  2326  00F878  00                 	db	0
  2327  00F879                     STR_65:
  2328  00F879  45                 	db	69	;'E'
  2329  00F87A  72                 	db	114	;'r'
  2330  00F87B  72                 	db	114	;'r'
  2331  00F87C  6F                 	db	111	;'o'
  2332  00F87D  72                 	db	114	;'r'
  2333  00F87E  3A                 	db	58	;':'
  2334  00F87F  20                 	db	32
  2335  00F880  52                 	db	82	;'R'
  2336  00F881  46                 	db	70	;'F'
  2337  00F882  20                 	db	32
  2338  00F883  63                 	db	99	;'c'
  2339  00F884  6F                 	db	111	;'o'
  2340  00F885  6E                 	db	110	;'n'
  2341  00F886  66                 	db	102	;'f'
  2342  00F887  69                 	db	105	;'i'
  2343  00F888  67                 	db	103	;'g'
  2344  00F889  75                 	db	117	;'u'
  2345  00F88A  72                 	db	114	;'r'
  2346  00F88B  61                 	db	97	;'a'
  2347  00F88C  74                 	db	116	;'t'
  2348  00F88D  69                 	db	105	;'i'
  2349  00F88E  6F                 	db	111	;'o'
  2350  00F88F  6E                 	db	110	;'n'
  2351  00F890  20                 	db	32
  2352  00F891  6F                 	db	111	;'o'
  2353  00F892  75                 	db	117	;'u'
  2354  00F893  74                 	db	116	;'t'
  2355  00F894  20                 	db	32
  2356  00F895  6F                 	db	111	;'o'
  2357  00F896  66                 	db	102	;'f'
  2358  00F897  20                 	db	32
  2359  00F898  72                 	db	114	;'r'
  2360  00F899  61                 	db	97	;'a'
  2361  00F89A  6E                 	db	110	;'n'
  2362  00F89B  67                 	db	103	;'g'
  2363  00F89C  65                 	db	101	;'e'
  2364  00F89D  00                 	db	0
  2365  00F89E                     STR_52:
  2366  00F89E  45                 	db	69	;'E'
  2367  00F89F  72                 	db	114	;'r'
  2368  00F8A0  72                 	db	114	;'r'
  2369  00F8A1  6F                 	db	111	;'o'
  2370  00F8A2  72                 	db	114	;'r'
  2371  00F8A3  3A                 	db	58	;':'
  2372  00F8A4  20                 	db	32
  2373  00F8A5  52                 	db	82	;'R'
  2374  00F8A6  65                 	db	101	;'e'
  2375  00F8A7  6D                 	db	109	;'m'
  2376  00F8A8  6F                 	db	111	;'o'
  2377  00F8A9  74                 	db	116	;'t'
  2378  00F8AA  65                 	db	101	;'e'
  2379  00F8AB  20                 	db	32
  2380  00F8AC  62                 	db	98	;'b'
  2381  00F8AD  75                 	db	117	;'u'
  2382  00F8AE  74                 	db	116	;'t'
  2383  00F8AF  74                 	db	116	;'t'
  2384  00F8B0  6F                 	db	111	;'o'
  2385  00F8B1  6E                 	db	110	;'n'
  2386  00F8B2  20                 	db	32
  2387  00F8B3  6E                 	db	110	;'n'
  2388  00F8B4  75                 	db	117	;'u'
  2389  00F8B5  6D                 	db	109	;'m'
  2390  00F8B6  62                 	db	98	;'b'
  2391  00F8B7  65                 	db	101	;'e'
  2392  00F8B8  72                 	db	114	;'r'
  2393  00F8B9  20                 	db	32
  2394  00F8BA  74                 	db	116	;'t'
  2395  00F8BB  6F                 	db	111	;'o'
  2396  00F8BC  6F                 	db	111	;'o'
  2397  00F8BD  20                 	db	32
  2398  00F8BE  68                 	db	104	;'h'
  2399  00F8BF  69                 	db	105	;'i'
  2400  00F8C0  67                 	db	103	;'g'
  2401  00F8C1  68                 	db	104	;'h'
  2402  00F8C2  00                 	db	0
  2403  00F8C3                     STR_150:
  2404  00F8C3  45                 	db	69	;'E'
  2405  00F8C4  72                 	db	114	;'r'
  2406  00F8C5  72                 	db	114	;'r'
  2407  00F8C6  6F                 	db	111	;'o'
  2408  00F8C7  72                 	db	114	;'r'
  2409  00F8C8  3A                 	db	58	;':'
  2410  00F8C9  20                 	db	32
  2411  00F8CA  4E                 	db	78	;'N'
  2412  00F8CB  6F                 	db	111	;'o'
  2413  00F8CC  20                 	db	32
  2414  00F8CD  72                 	db	114	;'r'
  2415  00F8CE  65                 	db	101	;'e'
  2416  00F8CF  6D                 	db	109	;'m'
  2417  00F8D0  6F                 	db	111	;'o'
  2418  00F8D1  74                 	db	116	;'t'
  2419  00F8D2  65                 	db	101	;'e'
  2420  00F8D3  20                 	db	32
  2421  00F8D4  62                 	db	98	;'b'
  2422  00F8D5  75                 	db	117	;'u'
  2423  00F8D6  74                 	db	116	;'t'
  2424  00F8D7  74                 	db	116	;'t'
  2425  00F8D8  6F                 	db	111	;'o'
  2426  00F8D9  6E                 	db	110	;'n'
  2427  00F8DA  20                 	db	32
  2428  00F8DB  77                 	db	119	;'w'
  2429  00F8DC  61                 	db	97	;'a'
  2430  00F8DD  73                 	db	115	;'s'
  2431  00F8DE  20                 	db	32
  2432  00F8DF  70                 	db	112	;'p'
  2433  00F8E0  72                 	db	114	;'r'
  2434  00F8E1  65                 	db	101	;'e'
  2435  00F8E2  73                 	db	115	;'s'
  2436  00F8E3  73                 	db	115	;'s'
  2437  00F8E4  65                 	db	101	;'e'
  2438  00F8E5  64                 	db	100	;'d'
  2439  00F8E6  00                 	db	0
  2440  00F8E7                     STR_53:
  2441  00F8E7  45                 	db	69	;'E'
  2442  00F8E8  72                 	db	114	;'r'
  2443  00F8E9  72                 	db	114	;'r'
  2444  00F8EA  6F                 	db	111	;'o'
  2445  00F8EB  72                 	db	114	;'r'
  2446  00F8EC  3A                 	db	58	;':'
  2447  00F8ED  20                 	db	32
  2448  00F8EE  52                 	db	82	;'R'
  2449  00F8EF  65                 	db	101	;'e'
  2450  00F8F0  6D                 	db	109	;'m'
  2451  00F8F1  6F                 	db	111	;'o'
  2452  00F8F2  74                 	db	116	;'t'
  2453  00F8F3  65                 	db	101	;'e'
  2454  00F8F4  20                 	db	32
  2455  00F8F5  62                 	db	98	;'b'
  2456  00F8F6  75                 	db	117	;'u'
  2457  00F8F7  74                 	db	116	;'t'
  2458  00F8F8  74                 	db	116	;'t'
  2459  00F8F9  6F                 	db	111	;'o'
  2460  00F8FA  6E                 	db	110	;'n'
  2461  00F8FB  20                 	db	32
  2462  00F8FC  6E                 	db	110	;'n'
  2463  00F8FD  6F                 	db	111	;'o'
  2464  00F8FE  74                 	db	116	;'t'
  2465  00F8FF  20                 	db	32
  2466  00F900  73                 	db	115	;'s'
  2467  00F901  70                 	db	112	;'p'
  2468  00F902  65                 	db	101	;'e'
  2469  00F903  63                 	db	99	;'c'
  2470  00F904  69                 	db	105	;'i'
  2471  00F905  66                 	db	102	;'f'
  2472  00F906  69                 	db	105	;'i'
  2473  00F907  65                 	db	101	;'e'
  2474  00F908  64                 	db	100	;'d'
  2475  00F909  00                 	db	0
  2476  00F90A                     STR_99:
  2477  00F90A  44                 	db	68	;'D'
  2478  00F90B  69                 	db	105	;'i'
  2479  00F90C  73                 	db	115	;'s'
  2480  00F90D  70                 	db	112	;'p'
  2481  00F90E  6C                 	db	108	;'l'
  2482  00F90F  61                 	db	97	;'a'
  2483  00F910  79                 	db	121	;'y'
  2484  00F911  73                 	db	115	;'s'
  2485  00F912  20                 	db	32
  2486  00F913  46                 	db	70	;'F'
  2487  00F914  69                 	db	105	;'i'
  2488  00F915  72                 	db	114	;'r'
  2489  00F916  6D                 	db	109	;'m'
  2490  00F917  77                 	db	119	;'w'
  2491  00F918  61                 	db	97	;'a'
  2492  00F919  72                 	db	114	;'r'
  2493  00F91A  65                 	db	101	;'e'
  2494  00F91B  2F                 	db	47
  2495  00F91C  48                 	db	72	;'H'
  2496  00F91D  61                 	db	97	;'a'
  2497  00F91E  72                 	db	114	;'r'
  2498  00F91F  64                 	db	100	;'d'
  2499  00F920  77                 	db	119	;'w'
  2500  00F921  61                 	db	97	;'a'
  2501  00F922  72                 	db	114	;'r'
  2502  00F923  65                 	db	101	;'e'
  2503  00F924  20                 	db	32
  2504  00F925  56                 	db	86	;'V'
  2505  00F926  65                 	db	101	;'e'
  2506  00F927  72                 	db	114	;'r'
  2507  00F928  73                 	db	115	;'s'
  2508  00F929  69                 	db	105	;'i'
  2509  00F92A  6F                 	db	111	;'o'
  2510  00F92B  6E                 	db	110	;'n'
  2511  00F92C  00                 	db	0
  2512  00F92D                     STR_34:
  2513  00F92D  45                 	db	69	;'E'
  2514  00F92E  72                 	db	114	;'r'
  2515  00F92F  72                 	db	114	;'r'
  2516  00F930  6F                 	db	111	;'o'
  2517  00F931  72                 	db	114	;'r'
  2518  00F932  3A                 	db	58	;':'
  2519  00F933  20                 	db	32
  2520  00F934  63                 	db	99	;'c'
  2521  00F935  6F                 	db	111	;'o'
  2522  00F936  75                 	db	117	;'u'
  2523  00F937  6C                 	db	108	;'l'
  2524  00F938  64                 	db	100	;'d'
  2525  00F939  20                 	db	32
  2526  00F93A  6E                 	db	110	;'n'
  2527  00F93B  6F                 	db	111	;'o'
  2528  00F93C  74                 	db	116	;'t'
  2529  00F93D  20                 	db	32
  2530  00F93E  64                 	db	100	;'d'
  2531  00F93F  65                 	db	101	;'e'
  2532  00F940  63                 	db	99	;'c'
  2533  00F941  6F                 	db	111	;'o'
  2534  00F942  64                 	db	100	;'d'
  2535  00F943  65                 	db	101	;'e'
  2536  00F944  20                 	db	32
  2537  00F945  4E                 	db	78	;'N'
  2538  00F946  45                 	db	69	;'E'
  2539  00F947  43                 	db	67	;'C'
  2540  00F948  20                 	db	32
  2541  00F949  63                 	db	99	;'c'
  2542  00F94A  6F                 	db	111	;'o'
  2543  00F94B  64                 	db	100	;'d'
  2544  00F94C  65                 	db	101	;'e'
  2545  00F94D  00                 	db	0
  2546  00F94E                     STR_143:
  2547  00F94E  52                 	db	82	;'R'
  2548  00F94F  43                 	db	67	;'C'
  2549  00F950  2D                 	db	45
  2550  00F951  30                 	db	48	;'0'
  2551  00F952  31                 	db	49	;'1'
  2552  00F953  35                 	db	53	;'5'
  2553  00F954  2A                 	db	42
  2554  00F955  33                 	db	51	;'3'
  2555  00F956  20                 	db	32
  2556  00F957  43                 	db	67	;'C'
  2557  00F958  68                 	db	104	;'h'
  2558  00F959  61                 	db	97	;'a'
  2559  00F95A  6E                 	db	110	;'n'
  2560  00F95B  6E                 	db	110	;'n'
  2561  00F95C  65                 	db	101	;'e'
  2562  00F95D  6C                 	db	108	;'l'
  2563  00F95E  20                 	db	32
  2564  00F95F  48                 	db	72	;'H'
  2565  00F960  20                 	db	32
  2566  00F961  64                 	db	100	;'d'
  2567  00F962  65                 	db	101	;'e'
  2568  00F963  76                 	db	118	;'v'
  2569  00F964  69                 	db	105	;'i'
  2570  00F965  63                 	db	99	;'c'
  2571  00F966  65                 	db	101	;'e'
  2572  00F967  20                 	db	32
  2573  00F968  31                 	db	49	;'1'
  2574  00F969  20                 	db	32
  2575  00F96A  4F                 	db	79	;'O'
  2576  00F96B  46                 	db	70	;'F'
  2577  00F96C  46                 	db	70	;'F'
  2578  00F96D  00                 	db	0
  2579  00F96E                     STR_145:
  2580  00F96E  52                 	db	82	;'R'
  2581  00F96F  43                 	db	67	;'C'
  2582  00F970  2D                 	db	45
  2583  00F971  30                 	db	48	;'0'
  2584  00F972  31                 	db	49	;'1'
  2585  00F973  35                 	db	53	;'5'
  2586  00F974  2A                 	db	42
  2587  00F975  33                 	db	51	;'3'
  2588  00F976  20                 	db	32
  2589  00F977  43                 	db	67	;'C'
  2590  00F978  68                 	db	104	;'h'
  2591  00F979  61                 	db	97	;'a'
  2592  00F97A  6E                 	db	110	;'n'
  2593  00F97B  6E                 	db	110	;'n'
  2594  00F97C  65                 	db	101	;'e'
  2595  00F97D  6C                 	db	108	;'l'
  2596  00F97E  20                 	db	32
  2597  00F97F  48                 	db	72	;'H'
  2598  00F980  20                 	db	32
  2599  00F981  64                 	db	100	;'d'
  2600  00F982  65                 	db	101	;'e'
  2601  00F983  76                 	db	118	;'v'
  2602  00F984  69                 	db	105	;'i'
  2603  00F985  63                 	db	99	;'c'
  2604  00F986  65                 	db	101	;'e'
  2605  00F987  20                 	db	32
  2606  00F988  32                 	db	50	;'2'
  2607  00F989  20                 	db	32
  2608  00F98A  4F                 	db	79	;'O'
  2609  00F98B  46                 	db	70	;'F'
  2610  00F98C  46                 	db	70	;'F'
  2611  00F98D  00                 	db	0
  2612  00F98E                     STR_147:
  2613  00F98E  52                 	db	82	;'R'
  2614  00F98F  43                 	db	67	;'C'
  2615  00F990  2D                 	db	45
  2616  00F991  30                 	db	48	;'0'
  2617  00F992  31                 	db	49	;'1'
  2618  00F993  35                 	db	53	;'5'
  2619  00F994  2A                 	db	42
  2620  00F995  33                 	db	51	;'3'
  2621  00F996  20                 	db	32
  2622  00F997  43                 	db	67	;'C'
  2623  00F998  68                 	db	104	;'h'
  2624  00F999  61                 	db	97	;'a'
  2625  00F99A  6E                 	db	110	;'n'
  2626  00F99B  6E                 	db	110	;'n'
  2627  00F99C  65                 	db	101	;'e'
  2628  00F99D  6C                 	db	108	;'l'
  2629  00F99E  20                 	db	32
  2630  00F99F  48                 	db	72	;'H'
  2631  00F9A0  20                 	db	32
  2632  00F9A1  64                 	db	100	;'d'
  2633  00F9A2  65                 	db	101	;'e'
  2634  00F9A3  76                 	db	118	;'v'
  2635  00F9A4  69                 	db	105	;'i'
  2636  00F9A5  63                 	db	99	;'c'
  2637  00F9A6  65                 	db	101	;'e'
  2638  00F9A7  20                 	db	32
  2639  00F9A8  33                 	db	51	;'3'
  2640  00F9A9  20                 	db	32
  2641  00F9AA  4F                 	db	79	;'O'
  2642  00F9AB  46                 	db	70	;'F'
  2643  00F9AC  46                 	db	70	;'F'
  2644  00F9AD  00                 	db	0
  2645  00F9AE                     STR_97:
  2646  00F9AE  43                 	db	67	;'C'
  2647  00F9AF  6C                 	db	108	;'l'
  2648  00F9B0  65                 	db	101	;'e'
  2649  00F9B1  61                 	db	97	;'a'
  2650  00F9B2  72                 	db	114	;'r'
  2651  00F9B3  73                 	db	115	;'s'
  2652  00F9B4  20                 	db	32
  2653  00F9B5  6D                 	db	109	;'m'
  2654  00F9B6  65                 	db	101	;'e'
  2655  00F9B7  6D                 	db	109	;'m'
  2656  00F9B8  6F                 	db	111	;'o'
  2657  00F9B9  72                 	db	114	;'r'
  2658  00F9BA  79                 	db	121	;'y'
  2659  00F9BB  20                 	db	32
  2660  00F9BC  61                 	db	97	;'a'
  2661  00F9BD  6E                 	db	110	;'n'
  2662  00F9BE  64                 	db	100	;'d'
  2663  00F9BF  20                 	db	32
  2664  00F9C0  72                 	db	114	;'r'
  2665  00F9C1  65                 	db	101	;'e'
  2666  00F9C2  73                 	db	115	;'s'
  2667  00F9C3  65                 	db	101	;'e'
  2668  00F9C4  74                 	db	116	;'t'
  2669  00F9C5  73                 	db	115	;'s'
  2670  00F9C6  20                 	db	32
  2671  00F9C7  64                 	db	100	;'d'
  2672  00F9C8  65                 	db	101	;'e'
  2673  00F9C9  76                 	db	118	;'v'
  2674  00F9CA  69                 	db	105	;'i'
  2675  00F9CB  63                 	db	99	;'c'
  2676  00F9CC  65                 	db	101	;'e'
  2677  00F9CD  00                 	db	0
  2678  00F9CE                     STR_79:
  2679  00F9CE  45                 	db	69	;'E'
  2680  00F9CF  6E                 	db	110	;'n'
  2681  00F9D0  74                 	db	116	;'t'
  2682  00F9D1  65                 	db	101	;'e'
  2683  00F9D2  72                 	db	114	;'r'
  2684  00F9D3  20                 	db	32
  2685  00F9D4  59                 	db	89	;'Y'
  2686  00F9D5  20                 	db	32
  2687  00F9D6  74                 	db	116	;'t'
  2688  00F9D7  6F                 	db	111	;'o'
  2689  00F9D8  20                 	db	32
  2690  00F9D9  72                 	db	114	;'r'
  2691  00F9DA  65                 	db	101	;'e'
  2692  00F9DB  73                 	db	115	;'s'
  2693  00F9DC  65                 	db	101	;'e'
  2694  00F9DD  74                 	db	116	;'t'
  2695  00F9DE  20                 	db	32
  2696  00F9DF  6F                 	db	111	;'o'
  2697  00F9E0  72                 	db	114	;'r'
  2698  00F9E1  20                 	db	32
  2699  00F9E2  4E                 	db	78	;'N'
  2700  00F9E3  20                 	db	32
  2701  00F9E4  74                 	db	116	;'t'
  2702  00F9E5  6F                 	db	111	;'o'
  2703  00F9E6  20                 	db	32
  2704  00F9E7  63                 	db	99	;'c'
  2705  00F9E8  61                 	db	97	;'a'
  2706  00F9E9  6E                 	db	110	;'n'
  2707  00F9EA  63                 	db	99	;'c'
  2708  00F9EB  65                 	db	101	;'e'
  2709  00F9EC  6C                 	db	108	;'l'
  2710  00F9ED  00                 	db	0
  2711  00F9EE                     STR_30:
  2712  00F9EE  45                 	db	69	;'E'
  2713  00F9EF  72                 	db	114	;'r'
  2714  00F9F0  72                 	db	114	;'r'
  2715  00F9F1  6F                 	db	111	;'o'
  2716  00F9F2  72                 	db	114	;'r'
  2717  00F9F3  3A                 	db	58	;':'
  2718  00F9F4  20                 	db	32
  2719  00F9F5  63                 	db	99	;'c'
  2720  00F9F6  6F                 	db	111	;'o'
  2721  00F9F7  75                 	db	117	;'u'
  2722  00F9F8  6C                 	db	108	;'l'
  2723  00F9F9  64                 	db	100	;'d'
  2724  00F9FA  20                 	db	32
  2725  00F9FB  6E                 	db	110	;'n'
  2726  00F9FC  6F                 	db	111	;'o'
  2727  00F9FD  74                 	db	116	;'t'
  2728  00F9FE  20                 	db	32
  2729  00F9FF  64                 	db	100	;'d'
  2730  00FA00  65                 	db	101	;'e'
  2731  00FA01  63                 	db	99	;'c'
  2732  00FA02  6F                 	db	111	;'o'
  2733  00FA03  64                 	db	100	;'d'
  2734  00FA04  65                 	db	101	;'e'
  2735  00FA05  20                 	db	32
  2736  00FA06  41                 	db	65	;'A'
  2737  00FA07  64                 	db	100	;'d'
  2738  00FA08  64                 	db	100	;'d'
  2739  00FA09  72                 	db	114	;'r'
  2740  00FA0A  65                 	db	101	;'e'
  2741  00FA0B  73                 	db	115	;'s'
  2742  00FA0C  73                 	db	115	;'s'
  2743  00FA0D  00                 	db	0
  2744  00FA0E                     STR_25:
  2745  00FA0E  45                 	db	69	;'E'
  2746  00FA0F  72                 	db	114	;'r'
  2747  00FA10  72                 	db	114	;'r'
  2748  00FA11  6F                 	db	111	;'o'
  2749  00FA12  72                 	db	114	;'r'
  2750  00FA13  3A                 	db	58	;':'
  2751  00FA14  20                 	db	32
  2752  00FA15  43                 	db	67	;'C'
  2753  00FA16  6F                 	db	111	;'o'
  2754  00FA17  6D                 	db	109	;'m'
  2755  00FA18  6D                 	db	109	;'m'
  2756  00FA19  61                 	db	97	;'a'
  2757  00FA1A  6E                 	db	110	;'n'
  2758  00FA1B  64                 	db	100	;'d'
  2759  00FA1C  20                 	db	32
  2760  00FA1D  6C                 	db	108	;'l'
  2761  00FA1E  61                 	db	97	;'a'
  2762  00FA1F  72                 	db	114	;'r'
  2763  00FA20  67                 	db	103	;'g'
  2764  00FA21  65                 	db	101	;'e'
  2765  00FA22  72                 	db	114	;'r'
  2766  00FA23  20                 	db	32
  2767  00FA24  74                 	db	116	;'t'
  2768  00FA25  68                 	db	104	;'h'
  2769  00FA26  61                 	db	97	;'a'
  2770  00FA27  74                 	db	116	;'t'
  2771  00FA28  20                 	db	32
  2772  00FA29  32                 	db	50	;'2'
  2773  00FA2A  35                 	db	53	;'5'
  2774  00FA2B  35                 	db	53	;'5'
  2775  00FA2C  00                 	db	0
  2776  00FA2D                     STR_26:
  2777  00FA2D  45                 	db	69	;'E'
  2778  00FA2E  72                 	db	114	;'r'
  2779  00FA2F  72                 	db	114	;'r'
  2780  00FA30  6F                 	db	111	;'o'
  2781  00FA31  72                 	db	114	;'r'
  2782  00FA32  3A                 	db	58	;':'
  2783  00FA33  20                 	db	32
  2784  00FA34  41                 	db	65	;'A'
  2785  00FA35  64                 	db	100	;'d'
  2786  00FA36  64                 	db	100	;'d'
  2787  00FA37  72                 	db	114	;'r'
  2788  00FA38  65                 	db	101	;'e'
  2789  00FA39  73                 	db	115	;'s'
  2790  00FA3A  73                 	db	115	;'s'
  2791  00FA3B  20                 	db	32
  2792  00FA3C  6C                 	db	108	;'l'
  2793  00FA3D  61                 	db	97	;'a'
  2794  00FA3E  72                 	db	114	;'r'
  2795  00FA3F  67                 	db	103	;'g'
  2796  00FA40  65                 	db	101	;'e'
  2797  00FA41  72                 	db	114	;'r'
  2798  00FA42  20                 	db	32
  2799  00FA43  74                 	db	116	;'t'
  2800  00FA44  68                 	db	104	;'h'
  2801  00FA45  61                 	db	97	;'a'
  2802  00FA46  74                 	db	116	;'t'
  2803  00FA47  20                 	db	32
  2804  00FA48  32                 	db	50	;'2'
  2805  00FA49  35                 	db	53	;'5'
  2806  00FA4A  35                 	db	53	;'5'
  2807  00FA4B  00                 	db	0
  2808  00FA4C                     STR_142:
  2809  00FA4C  52                 	db	82	;'R'
  2810  00FA4D  43                 	db	67	;'C'
  2811  00FA4E  2D                 	db	45
  2812  00FA4F  30                 	db	48	;'0'
  2813  00FA50  31                 	db	49	;'1'
  2814  00FA51  35                 	db	53	;'5'
  2815  00FA52  2A                 	db	42
  2816  00FA53  33                 	db	51	;'3'
  2817  00FA54  20                 	db	32
  2818  00FA55  43                 	db	67	;'C'
  2819  00FA56  68                 	db	104	;'h'
  2820  00FA57  61                 	db	97	;'a'
  2821  00FA58  6E                 	db	110	;'n'
  2822  00FA59  6E                 	db	110	;'n'
  2823  00FA5A  65                 	db	101	;'e'
  2824  00FA5B  6C                 	db	108	;'l'
  2825  00FA5C  20                 	db	32
  2826  00FA5D  48                 	db	72	;'H'
  2827  00FA5E  20                 	db	32
  2828  00FA5F  64                 	db	100	;'d'
  2829  00FA60  65                 	db	101	;'e'
  2830  00FA61  76                 	db	118	;'v'
  2831  00FA62  69                 	db	105	;'i'
  2832  00FA63  63                 	db	99	;'c'
  2833  00FA64  65                 	db	101	;'e'
  2834  00FA65  20                 	db	32
  2835  00FA66  31                 	db	49	;'1'
  2836  00FA67  20                 	db	32
  2837  00FA68  4F                 	db	79	;'O'
  2838  00FA69  4E                 	db	78	;'N'
  2839  00FA6A  00                 	db	0
  2840  00FA6B                     STR_144:
  2841  00FA6B  52                 	db	82	;'R'
  2842  00FA6C  43                 	db	67	;'C'
  2843  00FA6D  2D                 	db	45
  2844  00FA6E  30                 	db	48	;'0'
  2845  00FA6F  31                 	db	49	;'1'
  2846  00FA70  35                 	db	53	;'5'
  2847  00FA71  2A                 	db	42
  2848  00FA72  33                 	db	51	;'3'
  2849  00FA73  20                 	db	32
  2850  00FA74  43                 	db	67	;'C'
  2851  00FA75  68                 	db	104	;'h'
  2852  00FA76  61                 	db	97	;'a'
  2853  00FA77  6E                 	db	110	;'n'
  2854  00FA78  6E                 	db	110	;'n'
  2855  00FA79  65                 	db	101	;'e'
  2856  00FA7A  6C                 	db	108	;'l'
  2857  00FA7B  20                 	db	32
  2858  00FA7C  48                 	db	72	;'H'
  2859  00FA7D  20                 	db	32
  2860  00FA7E  64                 	db	100	;'d'
  2861  00FA7F  65                 	db	101	;'e'
  2862  00FA80  76                 	db	118	;'v'
  2863  00FA81  69                 	db	105	;'i'
  2864  00FA82  63                 	db	99	;'c'
  2865  00FA83  65                 	db	101	;'e'
  2866  00FA84  20                 	db	32
  2867  00FA85  32                 	db	50	;'2'
  2868  00FA86  20                 	db	32
  2869  00FA87  4F                 	db	79	;'O'
  2870  00FA88  4E                 	db	78	;'N'
  2871  00FA89  00                 	db	0
  2872  00FA8A                     STR_146:
  2873  00FA8A  52                 	db	82	;'R'
  2874  00FA8B  43                 	db	67	;'C'
  2875  00FA8C  2D                 	db	45
  2876  00FA8D  30                 	db	48	;'0'
  2877  00FA8E  31                 	db	49	;'1'
  2878  00FA8F  35                 	db	53	;'5'
  2879  00FA90  2A                 	db	42
  2880  00FA91  33                 	db	51	;'3'
  2881  00FA92  20                 	db	32
  2882  00FA93  43                 	db	67	;'C'
  2883  00FA94  68                 	db	104	;'h'
  2884  00FA95  61                 	db	97	;'a'
  2885  00FA96  6E                 	db	110	;'n'
  2886  00FA97  6E                 	db	110	;'n'
  2887  00FA98  65                 	db	101	;'e'
  2888  00FA99  6C                 	db	108	;'l'
  2889  00FA9A  20                 	db	32
  2890  00FA9B  48                 	db	72	;'H'
  2891  00FA9C  20                 	db	32
  2892  00FA9D  64                 	db	100	;'d'
  2893  00FA9E  65                 	db	101	;'e'
  2894  00FA9F  76                 	db	118	;'v'
  2895  00FAA0  69                 	db	105	;'i'
  2896  00FAA1  63                 	db	99	;'c'
  2897  00FAA2  65                 	db	101	;'e'
  2898  00FAA3  20                 	db	32
  2899  00FAA4  33                 	db	51	;'3'
  2900  00FAA5  20                 	db	32
  2901  00FAA6  4F                 	db	79	;'O'
  2902  00FAA7  4E                 	db	78	;'N'
  2903  00FAA8  00                 	db	0
  2904  00FAA9                     STR_66:
  2905  00FAA9  45                 	db	69	;'E'
  2906  00FAAA  72                 	db	114	;'r'
  2907  00FAAB  72                 	db	114	;'r'
  2908  00FAAC  6F                 	db	111	;'o'
  2909  00FAAD  72                 	db	114	;'r'
  2910  00FAAE  3A                 	db	58	;':'
  2911  00FAAF  20                 	db	32
  2912  00FAB0  4E                 	db	78	;'N'
  2913  00FAB1  6F                 	db	111	;'o'
  2914  00FAB2  20                 	db	32
  2915  00FAB3  52                 	db	82	;'R'
  2916  00FAB4  46                 	db	70	;'F'
  2917  00FAB5  20                 	db	32
  2918  00FAB6  63                 	db	99	;'c'
  2919  00FAB7  68                 	db	104	;'h'
  2920  00FAB8  61                 	db	97	;'a'
  2921  00FAB9  6E                 	db	110	;'n'
  2922  00FABA  6E                 	db	110	;'n'
  2923  00FABB  65                 	db	101	;'e'
  2924  00FABC  6C                 	db	108	;'l'
  2925  00FABD  20                 	db	32
  2926  00FABE  73                 	db	115	;'s'
  2927  00FABF  70                 	db	112	;'p'
  2928  00FAC0  65                 	db	101	;'e'
  2929  00FAC1  63                 	db	99	;'c'
  2930  00FAC2  69                 	db	105	;'i'
  2931  00FAC3  66                 	db	102	;'f'
  2932  00FAC4  69                 	db	105	;'i'
  2933  00FAC5  65                 	db	101	;'e'
  2934  00FAC6  64                 	db	100	;'d'
  2935  00FAC7  00                 	db	0
  2936  00FAC8                     STR_67:
  2937  00FAC8  45                 	db	69	;'E'
  2938  00FAC9  72                 	db	114	;'r'
  2939  00FACA  72                 	db	114	;'r'
  2940  00FACB  6F                 	db	111	;'o'
  2941  00FACC  72                 	db	114	;'r'
  2942  00FACD  3A                 	db	58	;':'
  2943  00FACE  20                 	db	32
  2944  00FACF  52                 	db	82	;'R'
  2945  00FAD0  46                 	db	70	;'F'
  2946  00FAD1  20                 	db	32
  2947  00FAD2  63                 	db	99	;'c'
  2948  00FAD3  68                 	db	104	;'h'
  2949  00FAD4  61                 	db	97	;'a'
  2950  00FAD5  6E                 	db	110	;'n'
  2951  00FAD6  6E                 	db	110	;'n'
  2952  00FAD7  65                 	db	101	;'e'
  2953  00FAD8  6C                 	db	108	;'l'
  2954  00FAD9  20                 	db	32
  2955  00FADA  6F                 	db	111	;'o'
  2956  00FADB  75                 	db	117	;'u'
  2957  00FADC  74                 	db	116	;'t'
  2958  00FADD  20                 	db	32
  2959  00FADE  6F                 	db	111	;'o'
  2960  00FADF  66                 	db	102	;'f'
  2961  00FAE0  20                 	db	32
  2962  00FAE1  72                 	db	114	;'r'
  2963  00FAE2  61                 	db	97	;'a'
  2964  00FAE3  6E                 	db	110	;'n'
  2965  00FAE4  67                 	db	103	;'g'
  2966  00FAE5  65                 	db	101	;'e'
  2967  00FAE6  00                 	db	0
  2968  00FAE7                     STR_36:
  2969  00FAE7  4E                 	db	78	;'N'
  2970  00FAE8  45                 	db	69	;'E'
  2971  00FAE9  43                 	db	67	;'C'
  2972  00FAEA  20                 	db	32
  2973  00FAEB  63                 	db	99	;'c'
  2974  00FAEC  6F                 	db	111	;'o'
  2975  00FAED  64                 	db	100	;'d'
  2976  00FAEE  65                 	db	101	;'e'
  2977  00FAEF  20                 	db	32
  2978  00FAF0  6E                 	db	110	;'n'
  2979  00FAF1  6F                 	db	111	;'o'
  2980  00FAF2  74                 	db	116	;'t'
  2981  00FAF3  20                 	db	32
  2982  00FAF4  65                 	db	101	;'e'
  2983  00FAF5  6E                 	db	110	;'n'
  2984  00FAF6  74                 	db	116	;'t'
  2985  00FAF7  65                 	db	101	;'e'
  2986  00FAF8  72                 	db	114	;'r'
  2987  00FAF9  65                 	db	101	;'e'
  2988  00FAFA  64                 	db	100	;'d'
  2989  00FAFB  20                 	db	32
  2990  00FAFC  63                 	db	99	;'c'
  2991  00FAFD  6F                 	db	111	;'o'
  2992  00FAFE  72                 	db	114	;'r'
  2993  00FAFF  72                 	db	114	;'r'
  2994  00FB00  65                 	db	101	;'e'
  2995  00FB01  63                 	db	99	;'c'
  2996  00FB02  74                 	db	116	;'t'
  2997  00FB03  6C                 	db	108	;'l'
  2998  00FB04  79                 	db	121	;'y'
  2999  00FB05  00                 	db	0
  3000  00FB06                     STR_80:
  3001  00FB06  44                 	db	68	;'D'
  3002  00FB07  65                 	db	101	;'e'
  3003  00FB08  76                 	db	118	;'v'
  3004  00FB09  69                 	db	105	;'i'
  3005  00FB0A  63                 	db	99	;'c'
  3006  00FB0B  65                 	db	101	;'e'
  3007  00FB0C  20                 	db	32
  3008  00FB0D  72                 	db	114	;'r'
  3009  00FB0E  65                 	db	101	;'e'
  3010  00FB0F  73                 	db	115	;'s'
  3011  00FB10  75                 	db	117	;'u'
  3012  00FB11  6D                 	db	109	;'m'
  3013  00FB12  65                 	db	101	;'e'
  3014  00FB13  73                 	db	115	;'s'
  3015  00FB14  20                 	db	32
  3016  00FB15  77                 	db	119	;'w'
  3017  00FB16  69                 	db	105	;'i'
  3018  00FB17  74                 	db	116	;'t'
  3019  00FB18  68                 	db	104	;'h'
  3020  00FB19  6F                 	db	111	;'o'
  3021  00FB1A  75                 	db	117	;'u'
  3022  00FB1B  74                 	db	116	;'t'
  3023  00FB1C  20                 	db	32
  3024  00FB1D  72                 	db	114	;'r'
  3025  00FB1E  65                 	db	101	;'e'
  3026  00FB1F  73                 	db	115	;'s'
  3027  00FB20  65                 	db	101	;'e'
  3028  00FB21  74                 	db	116	;'t'
  3029  00FB22  00                 	db	0
  3030  00FB23                     STR_21:
  3031  00FB23  43                 	db	67	;'C'
  3032  00FB24  6F                 	db	111	;'o'
  3033  00FB25  6E                 	db	110	;'n'
  3034  00FB26  66                 	db	102	;'f'
  3035  00FB27  69                 	db	105	;'i'
  3036  00FB28  67                 	db	103	;'g'
  3037  00FB29  75                 	db	117	;'u'
  3038  00FB2A  72                 	db	114	;'r'
  3039  00FB2B  61                 	db	97	;'a'
  3040  00FB2C  74                 	db	116	;'t'
  3041  00FB2D  69                 	db	105	;'i'
  3042  00FB2E  6F                 	db	111	;'o'
  3043  00FB2F  6E                 	db	110	;'n'
  3044  00FB30  20                 	db	32
  3045  00FB31  31                 	db	49	;'1'
  3046  00FB32  20                 	db	32
  3047  00FB33  52                 	db	82	;'R'
  3048  00FB34  46                 	db	70	;'F'
  3049  00FB35  20                 	db	32
  3050  00FB36  63                 	db	99	;'c'
  3051  00FB37  6F                 	db	111	;'o'
  3052  00FB38  64                 	db	100	;'d'
  3053  00FB39  65                 	db	101	;'e'
  3054  00FB3A  20                 	db	32
  3055  00FB3B  73                 	db	115	;'s'
  3056  00FB3C  65                 	db	101	;'e'
  3057  00FB3D  6E                 	db	110	;'n'
  3058  00FB3E  74                 	db	116	;'t'
  3059  00FB3F  00                 	db	0
  3060  00FB40                     STR_23:
  3061  00FB40  43                 	db	67	;'C'
  3062  00FB41  6F                 	db	111	;'o'
  3063  00FB42  6E                 	db	110	;'n'
  3064  00FB43  66                 	db	102	;'f'
  3065  00FB44  69                 	db	105	;'i'
  3066  00FB45  67                 	db	103	;'g'
  3067  00FB46  75                 	db	117	;'u'
  3068  00FB47  72                 	db	114	;'r'
  3069  00FB48  61                 	db	97	;'a'
  3070  00FB49  74                 	db	116	;'t'
  3071  00FB4A  69                 	db	105	;'i'
  3072  00FB4B  6F                 	db	111	;'o'
  3073  00FB4C  6E                 	db	110	;'n'
  3074  00FB4D  20                 	db	32
  3075  00FB4E  32                 	db	50	;'2'
  3076  00FB4F  20                 	db	32
  3077  00FB50  52                 	db	82	;'R'
  3078  00FB51  46                 	db	70	;'F'
  3079  00FB52  20                 	db	32
  3080  00FB53  63                 	db	99	;'c'
  3081  00FB54  6F                 	db	111	;'o'
  3082  00FB55  64                 	db	100	;'d'
  3083  00FB56  65                 	db	101	;'e'
  3084  00FB57  20                 	db	32
  3085  00FB58  73                 	db	115	;'s'
  3086  00FB59  65                 	db	101	;'e'
  3087  00FB5A  6E                 	db	110	;'n'
  3088  00FB5B  74                 	db	116	;'t'
  3089  00FB5C  00                 	db	0
  3090  00FB5D                     STR_87:
  3091  00FB5D  50                 	db	80	;'P'
  3092  00FB5E  43                 	db	67	;'C'
  3093  00FB5F  42                 	db	66	;'B'
  3094  00FB60  20                 	db	32
  3095  00FB61  68                 	db	104	;'h'
  3096  00FB62  61                 	db	97	;'a'
  3097  00FB63  73                 	db	115	;'s'
  3098  00FB64  20                 	db	32
  3099  00FB65  42                 	db	66	;'B'
  3100  00FB66  6C                 	db	108	;'l'
  3101  00FB67  75                 	db	117	;'u'
  3102  00FB68  65                 	db	101	;'e'
  3103  00FB69  74                 	db	116	;'t'
  3104  00FB6A  6F                 	db	111	;'o'
  3105  00FB6B  6F                 	db	111	;'o'
  3106  00FB6C  74                 	db	116	;'t'
  3107  00FB6D  68                 	db	104	;'h'
  3108  00FB6E  20                 	db	32
  3109  00FB6F  63                 	db	99	;'c'
  3110  00FB70  61                 	db	97	;'a'
  3111  00FB71  70                 	db	112	;'p'
  3112  00FB72  61                 	db	97	;'a'
  3113  00FB73  62                 	db	98	;'b'
  3114  00FB74  69                 	db	105	;'i'
  3115  00FB75  6C                 	db	108	;'l'
  3116  00FB76  69                 	db	105	;'i'
  3117  00FB77  74                 	db	116	;'t'
  3118  00FB78  79                 	db	121	;'y'
  3119  00FB79  00                 	db	0
  3120  00FB7A                     STR_17:
  3121  00FB7A  42                 	db	66	;'B'
  3122  00FB7B  54                 	db	84	;'T'
  3123  00FB7C  4E                 	db	78	;'N'
  3124  00FB7D  61                 	db	97	;'a'
  3125  00FB7E  6D                 	db	109	;'m'
  3126  00FB7F  65                 	db	101	;'e'
  3127  00FB80  3D                 	db	61	;'='
  3128  00FB81  48                 	db	72	;'H'
  3129  00FB82  6F                 	db	111	;'o'
  3130  00FB83  6D                 	db	109	;'m'
  3131  00FB84  65                 	db	101	;'e'
  3132  00FB85  20                 	db	32
  3133  00FB86  41                 	db	65	;'A'
  3134  00FB87  75                 	db	117	;'u'
  3135  00FB88  74                 	db	116	;'t'
  3136  00FB89  6F                 	db	111	;'o'
  3137  00FB8A  6D                 	db	109	;'m'
  3138  00FB8B  61                 	db	97	;'a'
  3139  00FB8C  74                 	db	116	;'t'
  3140  00FB8D  69                 	db	105	;'i'
  3141  00FB8E  6F                 	db	111	;'o'
  3142  00FB8F  6E                 	db	110	;'n'
  3143  00FB90  20                 	db	32
  3144  00FB91  25                 	db	37
  3145  00FB92  6C                 	db	108	;'l'
  3146  00FB93  64                 	db	100	;'d'
  3147  00FB94  0D                 	db	13
  3148  00FB95  00                 	db	0
  3149  00FB96                     STR_102:
  3150  00FB96  44                 	db	68	;'D'
  3151  00FB97  69                 	db	105	;'i'
  3152  00FB98  73                 	db	115	;'s'
  3153  00FB99  70                 	db	112	;'p'
  3154  00FB9A  6C                 	db	108	;'l'
  3155  00FB9B  61                 	db	97	;'a'
  3156  00FB9C  79                 	db	121	;'y'
  3157  00FB9D  73                 	db	115	;'s'
  3158  00FB9E  20                 	db	32
  3159  00FB9F  74                 	db	116	;'t'
  3160  00FBA0  68                 	db	104	;'h'
  3161  00FBA1  65                 	db	101	;'e'
  3162  00FBA2  20                 	db	32
  3163  00FBA3  73                 	db	115	;'s'
  3164  00FBA4  75                 	db	117	;'u'
  3165  00FBA5  70                 	db	112	;'p'
  3166  00FBA6  70                 	db	112	;'p'
  3167  00FBA7  6C                 	db	108	;'l'
  3168  00FBA8  79                 	db	121	;'y'
  3169  00FBA9  20                 	db	32
  3170  00FBAA  76                 	db	118	;'v'
  3171  00FBAB  6F                 	db	111	;'o'
  3172  00FBAC  6C                 	db	108	;'l'
  3173  00FBAD  74                 	db	116	;'t'
  3174  00FBAE  61                 	db	97	;'a'
  3175  00FBAF  67                 	db	103	;'g'
  3176  00FBB0  65                 	db	101	;'e'
  3177  00FBB1  00                 	db	0
  3178  00FBB2                     STR_149:
  3179  00FBB2  50                 	db	80	;'P'
  3180  00FBB3  72                 	db	114	;'r'
  3181  00FBB4  65                 	db	101	;'e'
  3182  00FBB5  73                 	db	115	;'s'
  3183  00FBB6  73                 	db	115	;'s'
  3184  00FBB7  20                 	db	32
  3185  00FBB8  52                 	db	82	;'R'
  3186  00FBB9  65                 	db	101	;'e'
  3187  00FBBA  6D                 	db	109	;'m'
  3188  00FBBB  6F                 	db	111	;'o'
  3189  00FBBC  74                 	db	116	;'t'
  3190  00FBBD  65                 	db	101	;'e'
  3191  00FBBE  20                 	db	32
  3192  00FBBF  43                 	db	67	;'C'
  3193  00FBC0  6F                 	db	111	;'o'
  3194  00FBC1  6E                 	db	110	;'n'
  3195  00FBC2  74                 	db	116	;'t'
  3196  00FBC3  72                 	db	114	;'r'
  3197  00FBC4  6F                 	db	111	;'o'
  3198  00FBC5  6C                 	db	108	;'l'
  3199  00FBC6  20                 	db	32
  3200  00FBC7  62                 	db	98	;'b'
  3201  00FBC8  75                 	db	117	;'u'
  3202  00FBC9  74                 	db	116	;'t'
  3203  00FBCA  74                 	db	116	;'t'
  3204  00FBCB  6F                 	db	111	;'o'
  3205  00FBCC  6E                 	db	110	;'n'
  3206  00FBCD  00                 	db	0
  3207  00FBCE                     STR_89:
  3208  00FBCE  54                 	db	84	;'T'
  3209  00FBCF  72                 	db	114	;'r'
  3210  00FBD0  61                 	db	97	;'a'
  3211  00FBD1  6E                 	db	110	;'n'
  3212  00FBD2  73                 	db	115	;'s'
  3213  00FBD3  6D                 	db	109	;'m'
  3214  00FBD4  69                 	db	105	;'i'
  3215  00FBD5  74                 	db	116	;'t'
  3216  00FBD6  74                 	db	116	;'t'
  3217  00FBD7  69                 	db	105	;'i'
  3218  00FBD8  6E                 	db	110	;'n'
  3219  00FBD9  67                 	db	103	;'g'
  3220  00FBDA  20                 	db	32
  3221  00FBDB  46                 	db	70	;'F'
  3222  00FBDC  72                 	db	114	;'r'
  3223  00FBDD  65                 	db	101	;'e'
  3224  00FBDE  71                 	db	113	;'q'
  3225  00FBDF  75                 	db	117	;'u'
  3226  00FBE0  65                 	db	101	;'e'
  3227  00FBE1  6E                 	db	110	;'n'
  3228  00FBE2  63                 	db	99	;'c'
  3229  00FBE3  79                 	db	121	;'y'
  3230  00FBE4  3A                 	db	58	;':'
  3231  00FBE5  20                 	db	32
  3232  00FBE6  25                 	db	37
  3233  00FBE7  73                 	db	115	;'s'
  3234  00FBE8  00                 	db	0
  3235  00FBE9                     STR_148:
  3236  00FBE9  45                 	db	69	;'E'
  3237  00FBEA  6E                 	db	110	;'n'
  3238  00FBEB  74                 	db	116	;'t'
  3239  00FBEC  65                 	db	101	;'e'
  3240  00FBED  72                 	db	114	;'r'
  3241  00FBEE  20                 	db	32
  3242  00FBEF  3F                 	db	63	;'?'
  3243  00FBF0  3F                 	db	63	;'?'
  3244  00FBF1  3F                 	db	63	;'?'
  3245  00FBF2  20                 	db	32
  3246  00FBF3  66                 	db	102	;'f'
  3247  00FBF4  6F                 	db	111	;'o'
  3248  00FBF5  72                 	db	114	;'r'
  3249  00FBF6  20                 	db	32
  3250  00FBF7  43                 	db	67	;'C'
  3251  00FBF8  6F                 	db	111	;'o'
  3252  00FBF9  6D                 	db	109	;'m'
  3253  00FBFA  6D                 	db	109	;'m'
  3254  00FBFB  61                 	db	97	;'a'
  3255  00FBFC  6E                 	db	110	;'n'
  3256  00FBFD  64                 	db	100	;'d'
  3257  00FBFE  20                 	db	32
  3258  00FBFF  4D                 	db	77	;'M'
  3259  00FC00  65                 	db	101	;'e'
  3260  00FC01  6E                 	db	110	;'n'
  3261  00FC02  75                 	db	117	;'u'
  3262  00FC03  00                 	db	0
  3263  00FC04                     STR_105:
  3264  00FC04  54                 	db	84	;'T'
  3265  00FC05  72                 	db	114	;'r'
  3266  00FC06  61                 	db	97	;'a'
  3267  00FC07  6E                 	db	110	;'n'
  3268  00FC08  73                 	db	115	;'s'
  3269  00FC09  6D                 	db	109	;'m'
  3270  00FC0A  69                 	db	105	;'i'
  3271  00FC0B  74                 	db	116	;'t'
  3272  00FC0C  73                 	db	115	;'s'
  3273  00FC0D  20                 	db	32
  3274  00FC0E  73                 	db	115	;'s'
  3275  00FC0F  61                 	db	97	;'a'
  3276  00FC10  76                 	db	118	;'v'
  3277  00FC11  65                 	db	101	;'e'
  3278  00FC12  64                 	db	100	;'d'
  3279  00FC13  20                 	db	32
  3280  00FC14  4E                 	db	78	;'N'
  3281  00FC15  45                 	db	69	;'E'
  3282  00FC16  43                 	db	67	;'C'
  3283  00FC17  20                 	db	32
  3284  00FC18  63                 	db	99	;'c'
  3285  00FC19  6F                 	db	111	;'o'
  3286  00FC1A  64                 	db	100	;'d'
  3287  00FC1B  65                 	db	101	;'e'
  3288  00FC1C  00                 	db	0
  3289  00FC1D                     STR_4:
  3290  00FC1D  53                 	db	83	;'S'
  3291  00FC1E  4E                 	db	78	;'N'
  3292  00FC1F  2C                 	db	44
  3293  00FC20  48                 	db	72	;'H'
  3294  00FC21  6F                 	db	111	;'o'
  3295  00FC22  6D                 	db	109	;'m'
  3296  00FC23  65                 	db	101	;'e'
  3297  00FC24  20                 	db	32
  3298  00FC25  41                 	db	65	;'A'
  3299  00FC26  75                 	db	117	;'u'
  3300  00FC27  74                 	db	116	;'t'
  3301  00FC28  6F                 	db	111	;'o'
  3302  00FC29  6D                 	db	109	;'m'
  3303  00FC2A  61                 	db	97	;'a'
  3304  00FC2B  74                 	db	116	;'t'
  3305  00FC2C  69                 	db	105	;'i'
  3306  00FC2D  6F                 	db	111	;'o'
  3307  00FC2E  6E                 	db	110	;'n'
  3308  00FC2F  20                 	db	32
  3309  00FC30  25                 	db	37
  3310  00FC31  6C                 	db	108	;'l'
  3311  00FC32  64                 	db	100	;'d'
  3312  00FC33  0D                 	db	13
  3313  00FC34  00                 	db	0
  3314  00FC35                     STR_107:
  3315  00FC35  41                 	db	65	;'A'
  3316  00FC36  6C                 	db	108	;'l'
  3317  00FC37  6C                 	db	108	;'l'
  3318  00FC38  6F                 	db	111	;'o'
  3319  00FC39  77                 	db	119	;'w'
  3320  00FC3A  73                 	db	115	;'s'
  3321  00FC3B  20                 	db	32
  3322  00FC3C  73                 	db	115	;'s'
  3323  00FC3D  61                 	db	97	;'a'
  3324  00FC3E  76                 	db	118	;'v'
  3325  00FC3F  69                 	db	105	;'i'
  3326  00FC40  6E                 	db	110	;'n'
  3327  00FC41  67                 	db	103	;'g'
  3328  00FC42  20                 	db	32
  3329  00FC43  4E                 	db	78	;'N'
  3330  00FC44  45                 	db	69	;'E'
  3331  00FC45  43                 	db	67	;'C'
  3332  00FC46  20                 	db	32
  3333  00FC47  63                 	db	99	;'c'
  3334  00FC48  6F                 	db	111	;'o'
  3335  00FC49  64                 	db	100	;'d'
  3336  00FC4A  65                 	db	101	;'e'
  3337  00FC4B  73                 	db	115	;'s'
  3338  00FC4C  00                 	db	0
  3339  00FC4D                     STR_29:
  3340  00FC4D  53                 	db	83	;'S'
  3341  00FC4E  65                 	db	101	;'e'
  3342  00FC4F  6E                 	db	110	;'n'
  3343  00FC50  74                 	db	116	;'t'
  3344  00FC51  20                 	db	32
  3345  00FC52  4E                 	db	78	;'N'
  3346  00FC53  45                 	db	69	;'E'
  3347  00FC54  43                 	db	67	;'C'
  3348  00FC55  20                 	db	32
  3349  00FC56  63                 	db	99	;'c'
  3350  00FC57  6F                 	db	111	;'o'
  3351  00FC58  64                 	db	100	;'d'
  3352  00FC59  65                 	db	101	;'e'
  3353  00FC5A  20                 	db	32
  3354  00FC5B  3D                 	db	61	;'='
  3355  00FC5C  20                 	db	32
  3356  00FC5D  30                 	db	48	;'0'
  3357  00FC5E  78                 	db	120	;'x'
  3358  00FC5F  25                 	db	37
  3359  00FC60  6C                 	db	108	;'l'
  3360  00FC61  58                 	db	88	;'X'
  3361  00FC62  20                 	db	32
  3362  00FC63  00                 	db	0
  3363  00FC64                     STR_139:
  3364  00FC64  52                 	db	82	;'R'
  3365  00FC65  46                 	db	70	;'F'
  3366  00FC66  4B                 	db	75	;'K'
  3367  00FC67  33                 	db	51	;'3'
  3368  00FC68  30                 	db	48	;'0'
  3369  00FC69  36                 	db	54	;'6'
  3370  00FC6A  4C                 	db	76	;'L'
  3371  00FC6B  43                 	db	67	;'C'
  3372  00FC6C  20                 	db	32
  3373  00FC6D  43                 	db	67	;'C'
  3374  00FC6E  68                 	db	104	;'h'
  3375  00FC6F  61                 	db	97	;'a'
  3376  00FC70  6E                 	db	110	;'n'
  3377  00FC71  6E                 	db	110	;'n'
  3378  00FC72  65                 	db	101	;'e'
  3379  00FC73  6C                 	db	108	;'l'
  3380  00FC74  20                 	db	32
  3381  00FC75  42                 	db	66	;'B'
  3382  00FC76  20                 	db	32
  3383  00FC77  4F                 	db	79	;'O'
  3384  00FC78  46                 	db	70	;'F'
  3385  00FC79  46                 	db	70	;'F'
  3386  00FC7A  00                 	db	0
  3387  00FC7B                     STR_138:
  3388  00FC7B  52                 	db	82	;'R'
  3389  00FC7C  46                 	db	70	;'F'
  3390  00FC7D  4B                 	db	75	;'K'
  3391  00FC7E  33                 	db	51	;'3'
  3392  00FC7F  30                 	db	48	;'0'
  3393  00FC80  36                 	db	54	;'6'
  3394  00FC81  4C                 	db	76	;'L'
  3395  00FC82  43                 	db	67	;'C'
  3396  00FC83  20                 	db	32
  3397  00FC84  43                 	db	67	;'C'
  3398  00FC85  68                 	db	104	;'h'
  3399  00FC86  61                 	db	97	;'a'
  3400  00FC87  6E                 	db	110	;'n'
  3401  00FC88  6E                 	db	110	;'n'
  3402  00FC89  65                 	db	101	;'e'
  3403  00FC8A  6C                 	db	108	;'l'
  3404  00FC8B  20                 	db	32
  3405  00FC8C  42                 	db	66	;'B'
  3406  00FC8D  20                 	db	32
  3407  00FC8E  4F                 	db	79	;'O'
  3408  00FC8F  4E                 	db	78	;'N'
  3409  00FC90  00                 	db	0
  3410  00FC91                     STR_40:
  3411  00FC91  4E                 	db	78	;'N'
  3412  00FC92  45                 	db	69	;'E'
  3413  00FC93  43                 	db	67	;'C'
  3414  00FC94  20                 	db	32
  3415  00FC95  3D                 	db	61	;'='
  3416  00FC96  20                 	db	32
  3417  00FC97  61                 	db	97	;'a'
  3418  00FC98  64                 	db	100	;'d'
  3419  00FC99  64                 	db	100	;'d'
  3420  00FC9A  72                 	db	114	;'r'
  3421  00FC9B  65                 	db	101	;'e'
  3422  00FC9C  73                 	db	115	;'s'
  3423  00FC9D  73                 	db	115	;'s'
  3424  00FC9E  2C                 	db	44
  3425  00FC9F  63                 	db	99	;'c'
  3426  00FCA0  6F                 	db	111	;'o'
  3427  00FCA1  6D                 	db	109	;'m'
  3428  00FCA2  6D                 	db	109	;'m'
  3429  00FCA3  61                 	db	97	;'a'
  3430  00FCA4  6E                 	db	110	;'n'
  3431  00FCA5  64                 	db	100	;'d'
  3432  00FCA6  00                 	db	0
  3433  00FCA7                     STR_8:
  3434  00FCA7  53                 	db	83	;'S'
  3435  00FCA8  53                 	db	83	;'S'
  3436  00FCA9  2C                 	db	44
  3437  00FCAA  20                 	db	32
  3438  00FCAB  48                 	db	72	;'H'
  3439  00FCAC  6F                 	db	111	;'o'
  3440  00FCAD  6D                 	db	109	;'m'
  3441  00FCAE  65                 	db	101	;'e'
  3442  00FCAF  20                 	db	32
  3443  00FCB0  41                 	db	65	;'A'
  3444  00FCB1  75                 	db	117	;'u'
  3445  00FCB2  74                 	db	116	;'t'
  3446  00FCB3  6F                 	db	111	;'o'
  3447  00FCB4  6D                 	db	109	;'m'
  3448  00FCB5  61                 	db	97	;'a'
  3449  00FCB6  74                 	db	116	;'t'
  3450  00FCB7  69                 	db	105	;'i'
  3451  00FCB8  6F                 	db	111	;'o'
  3452  00FCB9  6E                 	db	110	;'n'
  3453  00FCBA  0D                 	db	13
  3454  00FCBB  00                 	db	0
  3455  00FCBC                     STR_28:
  3456  00FCBC  4E                 	db	78	;'N'
  3457  00FCBD  45                 	db	69	;'E'
  3458  00FCBE  43                 	db	67	;'C'
  3459  00FCBF  20                 	db	32
  3460  00FCC0  63                 	db	99	;'c'
  3461  00FCC1  6F                 	db	111	;'o'
  3462  00FCC2  6D                 	db	109	;'m'
  3463  00FCC3  6D                 	db	109	;'m'
  3464  00FCC4  61                 	db	97	;'a'
  3465  00FCC5  6E                 	db	110	;'n'
  3466  00FCC6  64                 	db	100	;'d'
  3467  00FCC7  3A                 	db	58	;':'
  3468  00FCC8  20                 	db	32
  3469  00FCC9  30                 	db	48	;'0'
  3470  00FCCA  78                 	db	120	;'x'
  3471  00FCCB  25                 	db	37
  3472  00FCCC  30                 	db	48	;'0'
  3473  00FCCD  32                 	db	50	;'2'
  3474  00FCCE  58                 	db	88	;'X'
  3475  00FCCF  20                 	db	32
  3476  00FCD0  00                 	db	0
  3477  00FCD1                     STR_27:
  3478  00FCD1  4E                 	db	78	;'N'
  3479  00FCD2  45                 	db	69	;'E'
  3480  00FCD3  43                 	db	67	;'C'
  3481  00FCD4  20                 	db	32
  3482  00FCD5  61                 	db	97	;'a'
  3483  00FCD6  64                 	db	100	;'d'
  3484  00FCD7  64                 	db	100	;'d'
  3485  00FCD8  72                 	db	114	;'r'
  3486  00FCD9  65                 	db	101	;'e'
  3487  00FCDA  73                 	db	115	;'s'
  3488  00FCDB  73                 	db	115	;'s'
  3489  00FCDC  3A                 	db	58	;':'
  3490  00FCDD  20                 	db	32
  3491  00FCDE  30                 	db	48	;'0'
  3492  00FCDF  78                 	db	120	;'x'
  3493  00FCE0  25                 	db	37
  3494  00FCE1  30                 	db	48	;'0'
  3495  00FCE2  32                 	db	50	;'2'
  3496  00FCE3  58                 	db	88	;'X'
  3497  00FCE4  20                 	db	32
  3498  00FCE5  00                 	db	0
  3499  00FCE6                     STR_47:
  3500  00FCE6  53                 	db	83	;'S'
  3501  00FCE7  65                 	db	101	;'e'
  3502  00FCE8  6E                 	db	110	;'n'
  3503  00FCE9  74                 	db	116	;'t'
  3504  00FCEA  20                 	db	32
  3505  00FCEB  4E                 	db	78	;'N'
  3506  00FCEC  45                 	db	69	;'E'
  3507  00FCED  43                 	db	67	;'C'
  3508  00FCEE  20                 	db	32
  3509  00FCEF  63                 	db	99	;'c'
  3510  00FCF0  6F                 	db	111	;'o'
  3511  00FCF1  64                 	db	100	;'d'
  3512  00FCF2  65                 	db	101	;'e'
  3513  00FCF3  20                 	db	32
  3514  00FCF4  30                 	db	48	;'0'
  3515  00FCF5  78                 	db	120	;'x'
  3516  00FCF6  25                 	db	37
  3517  00FCF7  6C                 	db	108	;'l'
  3518  00FCF8  58                 	db	88	;'X'
  3519  00FCF9  20                 	db	32
  3520  00FCFA  00                 	db	0
  3521  00FCFB                     STR_100:
  3522  00FCFB  44                 	db	68	;'D'
  3523  00FCFC  69                 	db	105	;'i'
  3524  00FCFD  61                 	db	97	;'a'
  3525  00FCFE  67                 	db	103	;'g'
  3526  00FCFF  6E                 	db	110	;'n'
  3527  00FD00  6F                 	db	111	;'o'
  3528  00FD01  73                 	db	115	;'s'
  3529  00FD02  74                 	db	116	;'t'
  3530  00FD03  69                 	db	105	;'i'
  3531  00FD04  63                 	db	99	;'c'
  3532  00FD05  20                 	db	32
  3533  00FD06  43                 	db	67	;'C'
  3534  00FD07  6F                 	db	111	;'o'
  3535  00FD08  6D                 	db	109	;'m'
  3536  00FD09  6D                 	db	109	;'m'
  3537  00FD0A  61                 	db	97	;'a'
  3538  00FD0B  6E                 	db	110	;'n'
  3539  00FD0C  64                 	db	100	;'d'
  3540  00FD0D  73                 	db	115	;'s'
  3541  00FD0E  3A                 	db	58	;':'
  3542  00FD0F  00                 	db	0
  3543  00FD10                     STR_86:
  3544  00FD10  46                 	db	70	;'F'
  3545  00FD11  69                 	db	105	;'i'
  3546  00FD12  72                 	db	114	;'r'
  3547  00FD13  6D                 	db	109	;'m'
  3548  00FD14  77                 	db	119	;'w'
  3549  00FD15  61                 	db	97	;'a'
  3550  00FD16  72                 	db	114	;'r'
  3551  00FD17  65                 	db	101	;'e'
  3552  00FD18  20                 	db	32
  3553  00FD19  56                 	db	86	;'V'
  3554  00FD1A  65                 	db	101	;'e'
  3555  00FD1B  72                 	db	114	;'r'
  3556  00FD1C  73                 	db	115	;'s'
  3557  00FD1D  69                 	db	105	;'i'
  3558  00FD1E  6F                 	db	111	;'o'
  3559  00FD1F  6E                 	db	110	;'n'
  3560  00FD20  3A                 	db	58	;':'
  3561  00FD21  20                 	db	32
  3562  00FD22  25                 	db	37
  3563  00FD23  73                 	db	115	;'s'
  3564  00FD24  00                 	db	0
  3565  00FD25                     STR_38:
  3566  00FD25  4E                 	db	78	;'N'
  3567  00FD26  45                 	db	69	;'E'
  3568  00FD27  43                 	db	67	;'C'
  3569  00FD28  20                 	db	32
  3570  00FD29  3D                 	db	61	;'='
  3571  00FD2A  20                 	db	32
  3572  00FD2B  28                 	db	40
  3573  00FD2C  33                 	db	51	;'3'
  3574  00FD2D  32                 	db	50	;'2'
  3575  00FD2E  20                 	db	32
  3576  00FD2F  62                 	db	98	;'b'
  3577  00FD30  69                 	db	105	;'i'
  3578  00FD31  74                 	db	116	;'t'
  3579  00FD32  20                 	db	32
  3580  00FD33  63                 	db	99	;'c'
  3581  00FD34  6F                 	db	111	;'o'
  3582  00FD35  64                 	db	100	;'d'
  3583  00FD36  65                 	db	101	;'e'
  3584  00FD37  29                 	db	41
  3585  00FD38  00                 	db	0
  3586  00FD39                     STR_141:
  3587  00FD39  54                 	db	84	;'T'
  3588  00FD3A  52                 	db	82	;'R'
  3589  00FD3B  30                 	db	48	;'0'
  3590  00FD3C  30                 	db	48	;'0'
  3591  00FD3D  39                 	db	57	;'9'
  3592  00FD3E  20                 	db	32
  3593  00FD3F  43                 	db	67	;'C'
  3594  00FD40  68                 	db	104	;'h'
  3595  00FD41  61                 	db	97	;'a'
  3596  00FD42  6E                 	db	110	;'n'
  3597  00FD43  6E                 	db	110	;'n'
  3598  00FD44  65                 	db	101	;'e'
  3599  00FD45  6C                 	db	108	;'l'
  3600  00FD46  20                 	db	32
  3601  00FD47  44                 	db	68	;'D'
  3602  00FD48  20                 	db	32
  3603  00FD49  4F                 	db	79	;'O'
  3604  00FD4A  46                 	db	70	;'F'
  3605  00FD4B  46                 	db	70	;'F'
  3606  00FD4C  00                 	db	0
  3607  00FD4D                     STR_31:
  3608  00FD4D  73                 	db	115	;'s'
  3609  00FD4E  65                 	db	101	;'e'
  3610  00FD4F  6E                 	db	110	;'n'
  3611  00FD50  74                 	db	116	;'t'
  3612  00FD51  20                 	db	32
  3613  00FD52  4E                 	db	78	;'N'
  3614  00FD53  45                 	db	69	;'E'
  3615  00FD54  43                 	db	67	;'C'
  3616  00FD55  20                 	db	32
  3617  00FD56  63                 	db	99	;'c'
  3618  00FD57  6F                 	db	111	;'o'
  3619  00FD58  64                 	db	100	;'d'
  3620  00FD59  65                 	db	101	;'e'
  3621  00FD5A  20                 	db	32
  3622  00FD5B  30                 	db	48	;'0'
  3623  00FD5C  78                 	db	120	;'x'
  3624  00FD5D  25                 	db	37
  3625  00FD5E  6C                 	db	108	;'l'
  3626  00FD5F  58                 	db	88	;'X'
  3627  00FD60  00                 	db	0
  3628  00FD61                     STR_84:
  3629  00FD61  53                 	db	83	;'S'
  3630  00FD62  75                 	db	117	;'u'
  3631  00FD63  70                 	db	112	;'p'
  3632  00FD64  70                 	db	112	;'p'
  3633  00FD65  6C                 	db	108	;'l'
  3634  00FD66  79                 	db	121	;'y'
  3635  00FD67  20                 	db	32
  3636  00FD68  56                 	db	86	;'V'
  3637  00FD69  6F                 	db	111	;'o'
  3638  00FD6A  6C                 	db	108	;'l'
  3639  00FD6B  74                 	db	116	;'t'
  3640  00FD6C  61                 	db	97	;'a'
  3641  00FD6D  67                 	db	103	;'g'
  3642  00FD6E  65                 	db	101	;'e'
  3643  00FD6F  20                 	db	32
  3644  00FD70  3D                 	db	61	;'='
  3645  00FD71  20                 	db	32
  3646  00FD72  25                 	db	37
  3647  00FD73  66                 	db	102	;'f'
  3648  00FD74  00                 	db	0
  3649  00FD75                     STR_56:
  3650  00FD75  52                 	db	82	;'R'
  3651  00FD76  65                 	db	101	;'e'
  3652  00FD77  6D                 	db	109	;'m'
  3653  00FD78  6F                 	db	111	;'o'
  3654  00FD79  74                 	db	116	;'t'
  3655  00FD7A  65                 	db	101	;'e'
  3656  00FD7B  42                 	db	66	;'B'
  3657  00FD7C  75                 	db	117	;'u'
  3658  00FD7D  74                 	db	116	;'t'
  3659  00FD7E  74                 	db	116	;'t'
  3660  00FD7F  6F                 	db	111	;'o'
  3661  00FD80  6E                 	db	110	;'n'
  3662  00FD81  27                 	db	39
  3663  00FD82  78                 	db	120	;'x'
  3664  00FD83  27                 	db	39
  3665  00FD84  20                 	db	32
  3666  00FD85  73                 	db	115	;'s'
  3667  00FD86  65                 	db	101	;'e'
  3668  00FD87  74                 	db	116	;'t'
  3669  00FD88  00                 	db	0
  3670  00FD89                     STR_135:
  3671  00FD89  52                 	db	82	;'R'
  3672  00FD8A  46                 	db	70	;'F'
  3673  00FD8B  4B                 	db	75	;'K'
  3674  00FD8C  31                 	db	49	;'1'
  3675  00FD8D  30                 	db	48	;'0'
  3676  00FD8E  30                 	db	48	;'0'
  3677  00FD8F  4C                 	db	76	;'L'
  3678  00FD90  43                 	db	67	;'C'
  3679  00FD91  20                 	db	32
  3680  00FD92  43                 	db	67	;'C'
  3681  00FD93  68                 	db	104	;'h'
  3682  00FD94  61                 	db	97	;'a'
  3683  00FD95  6E                 	db	110	;'n'
  3684  00FD96  6E                 	db	110	;'n'
  3685  00FD97  65                 	db	101	;'e'
  3686  00FD98  6C                 	db	108	;'l'
  3687  00FD99  20                 	db	32
  3688  00FD9A  44                 	db	68	;'D'
  3689  00FD9B  00                 	db	0
  3690  00FD9C                     STR_136:
  3691  00FD9C  52                 	db	82	;'R'
  3692  00FD9D  46                 	db	70	;'F'
  3693  00FD9E  4B                 	db	75	;'K'
  3694  00FD9F  31                 	db	49	;'1'
  3695  00FDA0  30                 	db	48	;'0'
  3696  00FDA1  30                 	db	48	;'0'
  3697  00FDA2  4C                 	db	76	;'L'
  3698  00FDA3  43                 	db	67	;'C'
  3699  00FDA4  20                 	db	32
  3700  00FDA5  43                 	db	67	;'C'
  3701  00FDA6  68                 	db	104	;'h'
  3702  00FDA7  61                 	db	97	;'a'
  3703  00FDA8  6E                 	db	110	;'n'
  3704  00FDA9  6E                 	db	110	;'n'
  3705  00FDAA  65                 	db	101	;'e'
  3706  00FDAB  6C                 	db	108	;'l'
  3707  00FDAC  20                 	db	32
  3708  00FDAD  45                 	db	69	;'E'
  3709  00FDAE  00                 	db	0
  3710  00FDAF                     STR_137:
  3711  00FDAF  52                 	db	82	;'R'
  3712  00FDB0  46                 	db	70	;'F'
  3713  00FDB1  4B                 	db	75	;'K'
  3714  00FDB2  31                 	db	49	;'1'
  3715  00FDB3  30                 	db	48	;'0'
  3716  00FDB4  30                 	db	48	;'0'
  3717  00FDB5  4C                 	db	76	;'L'
  3718  00FDB6  43                 	db	67	;'C'
  3719  00FDB7  20                 	db	32
  3720  00FDB8  43                 	db	67	;'C'
  3721  00FDB9  68                 	db	104	;'h'
  3722  00FDBA  61                 	db	97	;'a'
  3723  00FDBB  6E                 	db	110	;'n'
  3724  00FDBC  6E                 	db	110	;'n'
  3725  00FDBD  65                 	db	101	;'e'
  3726  00FDBE  6C                 	db	108	;'l'
  3727  00FDBF  20                 	db	32
  3728  00FDC0  46                 	db	70	;'F'
  3729  00FDC1  00                 	db	0
  3730  00FDC2                     STR_140:
  3731  00FDC2  54                 	db	84	;'T'
  3732  00FDC3  52                 	db	82	;'R'
  3733  00FDC4  30                 	db	48	;'0'
  3734  00FDC5  30                 	db	48	;'0'
  3735  00FDC6  39                 	db	57	;'9'
  3736  00FDC7  20                 	db	32
  3737  00FDC8  43                 	db	67	;'C'
  3738  00FDC9  68                 	db	104	;'h'
  3739  00FDCA  61                 	db	97	;'a'
  3740  00FDCB  6E                 	db	110	;'n'
  3741  00FDCC  6E                 	db	110	;'n'
  3742  00FDCD  65                 	db	101	;'e'
  3743  00FDCE  6C                 	db	108	;'l'
  3744  00FDCF  20                 	db	32
  3745  00FDD0  44                 	db	68	;'D'
  3746  00FDD1  20                 	db	32
  3747  00FDD2  4F                 	db	79	;'O'
  3748  00FDD3  4E                 	db	78	;'N'
  3749  00FDD4  00                 	db	0
  3750  00FDD5                     STR_106:
  3751  00FDD5  52                 	db	82	;'R'
  3752  00FDD6  65                 	db	101	;'e'
  3753  00FDD7  6D                 	db	109	;'m'
  3754  00FDD8  6F                 	db	111	;'o'
  3755  00FDD9  74                 	db	116	;'t'
  3756  00FDDA  65                 	db	101	;'e'
  3757  00FDDB  42                 	db	66	;'B'
  3758  00FDDC  75                 	db	117	;'u'
  3759  00FDDD  74                 	db	116	;'t'
  3760  00FDDE  74                 	db	116	;'t'
  3761  00FDDF  6F                 	db	111	;'o'
  3762  00FDE0  6E                 	db	110	;'n'
  3763  00FDE1  25                 	db	37
  3764  00FDE2  64                 	db	100	;'d'
  3765  00FDE3  20                 	db	32
  3766  00FDE4  73                 	db	115	;'s'
  3767  00FDE5  65                 	db	101	;'e'
  3768  00FDE6  74                 	db	116	;'t'
  3769  00FDE7  00                 	db	0
  3770  00FDE8                     STR_42:
  3771  00FDE8  4E                 	db	78	;'N'
  3772  00FDE9  45                 	db	69	;'E'
  3773  00FDEA  43                 	db	67	;'C'
  3774  00FDEB  20                 	db	32
  3775  00FDEC  3D                 	db	61	;'='
  3776  00FDED  20                 	db	32
  3777  00FDEE  30                 	db	48	;'0'
  3778  00FDEF  78                 	db	120	;'x'
  3779  00FDF0  31                 	db	49	;'1'
  3780  00FDF1  43                 	db	67	;'C'
  3781  00FDF2  45                 	db	69	;'E'
  3782  00FDF3  33                 	db	51	;'3'
  3783  00FDF4  35                 	db	53	;'5'
  3784  00FDF5  30                 	db	48	;'0'
  3785  00FDF6  41                 	db	65	;'A'
  3786  00FDF7  46                 	db	70	;'F'
  3787  00FDF8  20                 	db	32
  3788  00FDF9  00                 	db	0
  3789  00FDFA                     STR_59:
  3790  00FDFA  52                 	db	82	;'R'
  3791  00FDFB  65                 	db	101	;'e'
  3792  00FDFC  6D                 	db	109	;'m'
  3793  00FDFD  6F                 	db	111	;'o'
  3794  00FDFE  74                 	db	116	;'t'
  3795  00FDFF  65                 	db	101	;'e'
  3796  00FE00  42                 	db	66	;'B'
  3797  00FE01  75                 	db	117	;'u'
  3798  00FE02  74                 	db	116	;'t'
  3799  00FE03  74                 	db	116	;'t'
  3800  00FE04  6F                 	db	111	;'o'
  3801  00FE05  6E                 	db	110	;'n'
  3802  00FE06  31                 	db	49	;'1'
  3803  00FE07  20                 	db	32
  3804  00FE08  73                 	db	115	;'s'
  3805  00FE09  65                 	db	101	;'e'
  3806  00FE0A  74                 	db	116	;'t'
  3807  00FE0B  00                 	db	0
  3808  00FE0C                     STR_81:
  3809  00FE0C  53                 	db	83	;'S'
  3810  00FE0D  79                 	db	121	;'y'
  3811  00FE0E  73                 	db	115	;'s'
  3812  00FE0F  74                 	db	116	;'t'
  3813  00FE10  65                 	db	101	;'e'
  3814  00FE11  6D                 	db	109	;'m'
  3815  00FE12  20                 	db	32
  3816  00FE13  77                 	db	119	;'w'
  3817  00FE14  69                 	db	105	;'i'
  3818  00FE15  6C                 	db	108	;'l'
  3819  00FE16  6C                 	db	108	;'l'
  3820  00FE17  20                 	db	32
  3821  00FE18  72                 	db	114	;'r'
  3822  00FE19  65                 	db	101	;'e'
  3823  00FE1A  73                 	db	115	;'s'
  3824  00FE1B  65                 	db	101	;'e'
  3825  00FE1C  74                 	db	116	;'t'
  3826  00FE1D  00                 	db	0
  3827  00FE1E                     STR_152:
  3828  00FE1E  30                 	db	48	;'0'
  3829  00FE1F  31                 	db	49	;'1'
  3830  00FE20  32                 	db	50	;'2'
  3831  00FE21  33                 	db	51	;'3'
  3832  00FE22  34                 	db	52	;'4'
  3833  00FE23  35                 	db	53	;'5'
  3834  00FE24  36                 	db	54	;'6'
  3835  00FE25  37                 	db	55	;'7'
  3836  00FE26  38                 	db	56	;'8'
  3837  00FE27  39                 	db	57	;'9'
  3838  00FE28  41                 	db	65	;'A'
  3839  00FE29  42                 	db	66	;'B'
  3840  00FE2A  43                 	db	67	;'C'
  3841  00FE2B  44                 	db	68	;'D'
  3842  00FE2C  45                 	db	69	;'E'
  3843  00FE2D  46                 	db	70	;'F'
  3844  00FE2E  00                 	db	0
  3845  00FE2F                     STR_93:
  3846  00FE2F  53                 	db	83	;'S'
  3847  00FE30  79                 	db	121	;'y'
  3848  00FE31  73                 	db	115	;'s'
  3849  00FE32  74                 	db	116	;'t'
  3850  00FE33  65                 	db	101	;'e'
  3851  00FE34  6D                 	db	109	;'m'
  3852  00FE35  20                 	db	32
  3853  00FE36  63                 	db	99	;'c'
  3854  00FE37  6F                 	db	111	;'o'
  3855  00FE38  6D                 	db	109	;'m'
  3856  00FE39  6D                 	db	109	;'m'
  3857  00FE3A  61                 	db	97	;'a'
  3858  00FE3B  6E                 	db	110	;'n'
  3859  00FE3C  64                 	db	100	;'d'
  3860  00FE3D  73                 	db	115	;'s'
  3861  00FE3E  3A                 	db	58	;':'
  3862  00FE3F  00                 	db	0
  3863  00FE40                     STR_44:
  3864  00FE40  4E                 	db	78	;'N'
  3865  00FE41  45                 	db	69	;'E'
  3866  00FE42  43                 	db	67	;'C'
  3867  00FE43  20                 	db	32
  3868  00FE44  3D                 	db	61	;'='
  3869  00FE45  20                 	db	32
  3870  00FE46  30                 	db	48	;'0'
  3871  00FE47  78                 	db	120	;'x'
  3872  00FE48  33                 	db	51	;'3'
  3873  00FE49  38                 	db	56	;'8'
  3874  00FE4A  2C                 	db	44
  3875  00FE4B  20                 	db	32
  3876  00FE4C  30                 	db	48	;'0'
  3877  00FE4D  78                 	db	120	;'x'
  3878  00FE4E  30                 	db	48	;'0'
  3879  00FE4F  41                 	db	65	;'A'
  3880  00FE50  00                 	db	0
  3881  00FE51                     STR_55:
  3882  00FE51  52                 	db	82	;'R'
  3883  00FE52  65                 	db	101	;'e'
  3884  00FE53  6D                 	db	109	;'m'
  3885  00FE54  6F                 	db	111	;'o'
  3886  00FE55  74                 	db	116	;'t'
  3887  00FE56  65                 	db	101	;'e'
  3888  00FE57  42                 	db	66	;'B'
  3889  00FE58  75                 	db	117	;'u'
  3890  00FE59  74                 	db	116	;'t'
  3891  00FE5A  74                 	db	116	;'t'
  3892  00FE5B  6F                 	db	111	;'o'
  3893  00FE5C  6E                 	db	110	;'n'
  3894  00FE5D  27                 	db	39
  3895  00FE5E  78                 	db	120	;'x'
  3896  00FE5F  27                 	db	39
  3897  00FE60  00                 	db	0
  3898  00FE61                     STR_88:
  3899  00FE61  50                 	db	80	;'P'
  3900  00FE62  43                 	db	67	;'C'
  3901  00FE63  42                 	db	66	;'B'
  3902  00FE64  20                 	db	32
  3903  00FE65  56                 	db	86	;'V'
  3904  00FE66  65                 	db	101	;'e'
  3905  00FE67  72                 	db	114	;'r'
  3906  00FE68  73                 	db	115	;'s'
  3907  00FE69  69                 	db	105	;'i'
  3908  00FE6A  6F                 	db	111	;'o'
  3909  00FE6B  6E                 	db	110	;'n'
  3910  00FE6C  3A                 	db	58	;':'
  3911  00FE6D  20                 	db	32
  3912  00FE6E  25                 	db	37
  3913  00FE6F  73                 	db	115	;'s'
  3914  00FE70  00                 	db	0
  3915  00FE71                     STR_1:
  3916  00FE71  42                 	db	66	;'B'
  3917  00FE72  75                 	db	117	;'u'
  3918  00FE73  66                 	db	102	;'f'
  3919  00FE74  66                 	db	102	;'f'
  3920  00FE75  65                 	db	101	;'e'
  3921  00FE76  72                 	db	114	;'r'
  3922  00FE77  20                 	db	32
  3923  00FE78  4F                 	db	79	;'O'
  3924  00FE79  76                 	db	118	;'v'
  3925  00FE7A  65                 	db	101	;'e'
  3926  00FE7B  72                 	db	114	;'r'
  3927  00FE7C  66                 	db	102	;'f'
  3928  00FE7D  6C                 	db	108	;'l'
  3929  00FE7E  6F                 	db	111	;'o'
  3930  00FE7F  77                 	db	119	;'w'
  3931  00FE80  00                 	db	0
  3932  00FE81                     STR_104:
  3933  00FE81  52                 	db	82	;'R'
  3934  00FE82  65                 	db	101	;'e'
  3935  00FE83  6D                 	db	109	;'m'
  3936  00FE84  6F                 	db	111	;'o'
  3937  00FE85  74                 	db	116	;'t'
  3938  00FE86  65                 	db	101	;'e'
  3939  00FE87  42                 	db	66	;'B'
  3940  00FE88  75                 	db	117	;'u'
  3941  00FE89  74                 	db	116	;'t'
  3942  00FE8A  74                 	db	116	;'t'
  3943  00FE8B  6F                 	db	111	;'o'
  3944  00FE8C  6E                 	db	110	;'n'
  3945  00FE8D  25                 	db	37
  3946  00FE8E  64                 	db	100	;'d'
  3947  00FE8F  00                 	db	0
  3948  00FE90                     STR_58:
  3949  00FE90  52                 	db	82	;'R'
  3950  00FE91  65                 	db	101	;'e'
  3951  00FE92  6D                 	db	109	;'m'
  3952  00FE93  6F                 	db	111	;'o'
  3953  00FE94  74                 	db	116	;'t'
  3954  00FE95  65                 	db	101	;'e'
  3955  00FE96  42                 	db	66	;'B'
  3956  00FE97  75                 	db	117	;'u'
  3957  00FE98  74                 	db	116	;'t'
  3958  00FE99  74                 	db	116	;'t'
  3959  00FE9A  6F                 	db	111	;'o'
  3960  00FE9B  6E                 	db	110	;'n'
  3961  00FE9C  31                 	db	49	;'1'
  3962  00FE9D  00                 	db	0
  3963  00FE9E                     STR_68:
  3964  00FE9E  57                 	db	87	;'W'
  3965  00FE9F  68                 	db	104	;'h'
  3966  00FEA0  69                 	db	105	;'i'
  3967  00FEA1  63                 	db	99	;'c'
  3968  00FEA2  68                 	db	104	;'h'
  3969  00FEA3  20                 	db	32
  3970  00FEA4  64                 	db	100	;'d'
  3971  00FEA5  65                 	db	101	;'e'
  3972  00FEA6  76                 	db	118	;'v'
  3973  00FEA7  69                 	db	105	;'i'
  3974  00FEA8  63                 	db	99	;'c'
  3975  00FEA9  65                 	db	101	;'e'
  3976  00FEAA  3F                 	db	63	;'?'
  3977  00FEAB  00                 	db	0
  3978  00FEAC                     STR_134:
  3979  00FEAC  52                 	db	82	;'R'
  3980  00FEAD  46                 	db	70	;'F'
  3981  00FEAE  20                 	db	32
  3982  00FEAF  63                 	db	99	;'c'
  3983  00FEB0  6F                 	db	111	;'o'
  3984  00FEB1  6D                 	db	109	;'m'
  3985  00FEB2  6D                 	db	109	;'m'
  3986  00FEB3  61                 	db	97	;'a'
  3987  00FEB4  6E                 	db	110	;'n'
  3988  00FEB5  64                 	db	100	;'d'
  3989  00FEB6  73                 	db	115	;'s'
  3990  00FEB7  3A                 	db	58	;':'
  3991  00FEB8  00                 	db	0
  3992  00FEB9                     STR_103:
  3993  00FEB9  49                 	db	73	;'I'
  3994  00FEBA  52                 	db	82	;'R'
  3995  00FEBB  20                 	db	32
  3996  00FEBC  63                 	db	99	;'c'
  3997  00FEBD  6F                 	db	111	;'o'
  3998  00FEBE  6D                 	db	109	;'m'
  3999  00FEBF  6D                 	db	109	;'m'
  4000  00FEC0  61                 	db	97	;'a'
  4001  00FEC1  6E                 	db	110	;'n'
  4002  00FEC2  64                 	db	100	;'d'
  4003  00FEC3  73                 	db	115	;'s'
  4004  00FEC4  3A                 	db	58	;':'
  4005  00FEC5  00                 	db	0
  4006  00FEC6                     STR_126:
  4007  00FEC6  52                 	db	82	;'R'
  4008  00FEC7  46                 	db	70	;'F'
  4009  00FEC8  20                 	db	32
  4010  00FEC9  63                 	db	99	;'c'
  4011  00FECA  6C                 	db	108	;'l'
  4012  00FECB  65                 	db	101	;'e'
  4013  00FECC  61                 	db	97	;'a'
  4014  00FECD  72                 	db	114	;'r'
  4015  00FECE  20                 	db	32
  4016  00FECF  32                 	db	50	;'2'
  4017  00FED0  2C                 	db	44
  4018  00FED1  42                 	db	66	;'B'
  4019  00FED2  00                 	db	0
  4020  00FED3                     STR_120:
  4021  00FED3  52                 	db	82	;'R'
  4022  00FED4  46                 	db	70	;'F'
  4023  00FED5  20                 	db	32
  4024  00FED6  63                 	db	99	;'c'
  4025  00FED7  6C                 	db	108	;'l'
  4026  00FED8  65                 	db	101	;'e'
  4027  00FED9  61                 	db	97	;'a'
  4028  00FEDA  72                 	db	114	;'r'
  4029  00FEDB  20                 	db	32
  4030  00FEDC  31                 	db	49	;'1'
  4031  00FEDD  2C                 	db	44
  4032  00FEDE  44                 	db	68	;'D'
  4033  00FEDF  00                 	db	0
  4034  00FEE0                     STR_128:
  4035  00FEE0  52                 	db	82	;'R'
  4036  00FEE1  46                 	db	70	;'F'
  4037  00FEE2  20                 	db	32
  4038  00FEE3  63                 	db	99	;'c'
  4039  00FEE4  6C                 	db	108	;'l'
  4040  00FEE5  65                 	db	101	;'e'
  4041  00FEE6  61                 	db	97	;'a'
  4042  00FEE7  72                 	db	114	;'r'
  4043  00FEE8  20                 	db	32
  4044  00FEE9  32                 	db	50	;'2'
  4045  00FEEA  2C                 	db	44
  4046  00FEEB  44                 	db	68	;'D'
  4047  00FEEC  00                 	db	0
  4048  00FEED                     STR_122:
  4049  00FEED  52                 	db	82	;'R'
  4050  00FEEE  46                 	db	70	;'F'
  4051  00FEEF  20                 	db	32
  4052  00FEF0  63                 	db	99	;'c'
  4053  00FEF1  6C                 	db	108	;'l'
  4054  00FEF2  65                 	db	101	;'e'
  4055  00FEF3  61                 	db	97	;'a'
  4056  00FEF4  72                 	db	114	;'r'
  4057  00FEF5  20                 	db	32
  4058  00FEF6  31                 	db	49	;'1'
  4059  00FEF7  2C                 	db	44
  4060  00FEF8  45                 	db	69	;'E'
  4061  00FEF9  00                 	db	0
  4062  00FEFA                     STR_124:
  4063  00FEFA  52                 	db	82	;'R'
  4064  00FEFB  46                 	db	70	;'F'
  4065  00FEFC  20                 	db	32
  4066  00FEFD  63                 	db	99	;'c'
  4067  00FEFE  6C                 	db	108	;'l'
  4068  00FEFF  65                 	db	101	;'e'
  4069  00FF00  61                 	db	97	;'a'
  4070  00FF01  72                 	db	114	;'r'
  4071  00FF02  20                 	db	32
  4072  00FF03  31                 	db	49	;'1'
  4073  00FF04  2C                 	db	44
  4074  00FF05  46                 	db	70	;'F'
  4075  00FF06  00                 	db	0
  4076  00FF07                     STR_130:
  4077  00FF07  52                 	db	82	;'R'
  4078  00FF08  46                 	db	70	;'F'
  4079  00FF09  20                 	db	32
  4080  00FF0A  63                 	db	99	;'c'
  4081  00FF0B  6C                 	db	108	;'l'
  4082  00FF0C  65                 	db	101	;'e'
  4083  00FF0D  61                 	db	97	;'a'
  4084  00FF0E  72                 	db	114	;'r'
  4085  00FF0F  20                 	db	32
  4086  00FF10  32                 	db	50	;'2'
  4087  00FF11  2C                 	db	44
  4088  00FF12  48                 	db	72	;'H'
  4089  00FF13  00                 	db	0
  4090  00FF14                     STR_45:
  4091  00FF14  52                 	db	82	;'R'
  4092  00FF15  65                 	db	101	;'e'
  4093  00FF16  6D                 	db	109	;'m'
  4094  00FF17  6F                 	db	111	;'o'
  4095  00FF18  74                 	db	116	;'t'
  4096  00FF19  65                 	db	101	;'e'
  4097  00FF1A  42                 	db	66	;'B'
  4098  00FF1B  75                 	db	117	;'u'
  4099  00FF1C  74                 	db	116	;'t'
  4100  00FF1D  74                 	db	116	;'t'
  4101  00FF1E  6F                 	db	111	;'o'
  4102  00FF1F  6E                 	db	110	;'n'
  4103  00FF20  00                 	db	0
  4104  00FF21                     STR_114:
  4105  00FF21  52                 	db	82	;'R'
  4106  00FF22  46                 	db	70	;'F'
  4107  00FF23  20                 	db	32
  4108  00FF24  73                 	db	115	;'s'
  4109  00FF25  65                 	db	101	;'e'
  4110  00FF26  74                 	db	116	;'t'
  4111  00FF27  20                 	db	32
  4112  00FF28  32                 	db	50	;'2'
  4113  00FF29  2C                 	db	44
  4114  00FF2A  42                 	db	66	;'B'
  4115  00FF2B  00                 	db	0
  4116  00FF2C                     STR_108:
  4117  00FF2C  52                 	db	82	;'R'
  4118  00FF2D  46                 	db	70	;'F'
  4119  00FF2E  20                 	db	32
  4120  00FF2F  73                 	db	115	;'s'
  4121  00FF30  65                 	db	101	;'e'
  4122  00FF31  74                 	db	116	;'t'
  4123  00FF32  20                 	db	32
  4124  00FF33  31                 	db	49	;'1'
  4125  00FF34  2C                 	db	44
  4126  00FF35  44                 	db	68	;'D'
  4127  00FF36  00                 	db	0
  4128  00FF37                     STR_116:
  4129  00FF37  52                 	db	82	;'R'
  4130  00FF38  46                 	db	70	;'F'
  4131  00FF39  20                 	db	32
  4132  00FF3A  73                 	db	115	;'s'
  4133  00FF3B  65                 	db	101	;'e'
  4134  00FF3C  74                 	db	116	;'t'
  4135  00FF3D  20                 	db	32
  4136  00FF3E  32                 	db	50	;'2'
  4137  00FF3F  2C                 	db	44
  4138  00FF40  44                 	db	68	;'D'
  4139  00FF41  00                 	db	0
  4140  00FF42                     STR_110:
  4141  00FF42  52                 	db	82	;'R'
  4142  00FF43  46                 	db	70	;'F'
  4143  00FF44  20                 	db	32
  4144  00FF45  73                 	db	115	;'s'
  4145  00FF46  65                 	db	101	;'e'
  4146  00FF47  74                 	db	116	;'t'
  4147  00FF48  20                 	db	32
  4148  00FF49  31                 	db	49	;'1'
  4149  00FF4A  2C                 	db	44
  4150  00FF4B  45                 	db	69	;'E'
  4151  00FF4C  00                 	db	0
  4152  00FF4D                     STR_112:
  4153  00FF4D  52                 	db	82	;'R'
  4154  00FF4E  46                 	db	70	;'F'
  4155  00FF4F  20                 	db	32
  4156  00FF50  73                 	db	115	;'s'
  4157  00FF51  65                 	db	101	;'e'
  4158  00FF52  74                 	db	116	;'t'
  4159  00FF53  20                 	db	32
  4160  00FF54  31                 	db	49	;'1'
  4161  00FF55  2C                 	db	44
  4162  00FF56  46                 	db	70	;'F'
  4163  00FF57  00                 	db	0
  4164  00FF58                     STR_118:
  4165  00FF58  52                 	db	82	;'R'
  4166  00FF59  46                 	db	70	;'F'
  4167  00FF5A  20                 	db	32
  4168  00FF5B  73                 	db	115	;'s'
  4169  00FF5C  65                 	db	101	;'e'
  4170  00FF5D  74                 	db	116	;'t'
  4171  00FF5E  20                 	db	32
  4172  00FF5F  32                 	db	50	;'2'
  4173  00FF60  2C                 	db	44
  4174  00FF61  48                 	db	72	;'H'
  4175  00FF62  00                 	db	0
  4176  00FF63                     STR_39:
  4177  00FF63  20                 	db	32
  4178  00FF64  20                 	db	32
  4179  00FF65  20                 	db	32
  4180  00FF66  20                 	db	32
  4181  00FF67  20                 	db	32
  4182  00FF68  20                 	db	32
  4183  00FF69  20                 	db	32
  4184  00FF6A  20                 	db	32
  4185  00FF6B  6F                 	db	111	;'o'
  4186  00FF6C  72                 	db	114	;'r'
  4187  00FF6D  00                 	db	0
  4188  00FF6E                     STR_6:
  4189  00FF6E  53                 	db	83	;'S'
  4190  00FF6F  55                 	db	85	;'U'
  4191  00FF70  2C                 	db	44
  4192  00FF71  20                 	db	32
  4193  00FF72  31                 	db	49	;'1'
  4194  00FF73  31                 	db	49	;'1'
  4195  00FF74  35                 	db	53	;'5'
  4196  00FF75  4B                 	db	75	;'K'
  4197  00FF76  0D                 	db	13
  4198  00FF77  00                 	db	0
  4199  00FF78                     STR_95:
  4200  00FF78  48                 	db	72	;'H'
  4201  00FF79  65                 	db	101	;'e'
  4202  00FF7A  6C                 	db	108	;'l'
  4203  00FF7B  70                 	db	112	;'p'
  4204  00FF7C  20                 	db	32
  4205  00FF7D  4D                 	db	77	;'M'
  4206  00FF7E  65                 	db	101	;'e'
  4207  00FF7F  6E                 	db	110	;'n'
  4208  00FF80  75                 	db	117	;'u'
  4209  00FF81  00                 	db	0
  4210  00FF82                     STR_10:
  4211  00FF82  53                 	db	83	;'S'
  4212  00FF83  59                 	db	89	;'Y'
  4213  00FF84  2C                 	db	44
  4214  00FF85  30                 	db	48	;'0'
  4215  00FF86  30                 	db	48	;'0'
  4216  00FF87  31                 	db	49	;'1'
  4217  00FF88  30                 	db	48	;'0'
  4218  00FF89  0D                 	db	13
  4219  00FF8A  00                 	db	0
  4220  00FF8B                     STR_41:
  4221  00FF8B  45                 	db	69	;'E'
  4222  00FF8C  78                 	db	120	;'x'
  4223  00FF8D  61                 	db	97	;'a'
  4224  00FF8E  6D                 	db	109	;'m'
  4225  00FF8F  70                 	db	112	;'p'
  4226  00FF90  6C                 	db	108	;'l'
  4227  00FF91  65                 	db	101	;'e'
  4228  00FF92  3A                 	db	58	;':'
  4229  00FF93  00                 	db	0
  4230  00FF94                     STR_61:
  4231  00FF94  52                 	db	82	;'R'
  4232  00FF95  46                 	db	70	;'F'
  4233  00FF96  20                 	db	32
  4234  00FF97  63                 	db	99	;'c'
  4235  00FF98  6C                 	db	108	;'l'
  4236  00FF99  65                 	db	101	;'e'
  4237  00FF9A  61                 	db	97	;'a'
  4238  00FF9B  72                 	db	114	;'r'
  4239  00FF9C  00                 	db	0
  4240  00FF9D                     STR_83:
  4241  00FF9D  56                 	db	86	;'V'
  4242  00FF9E  6F                 	db	111	;'o'
  4243  00FF9F  6C                 	db	108	;'l'
  4244  00FFA0  74                 	db	116	;'t'
  4245  00FFA1  61                 	db	97	;'a'
  4246  00FFA2  67                 	db	103	;'g'
  4247  00FFA3  65                 	db	101	;'e'
  4248  00FFA4  00                 	db	0
  4249  00FFA5                     STR_151:
  4250  00FFA5  28                 	db	40
  4251  00FFA6  6E                 	db	110	;'n'
  4252  00FFA7  75                 	db	117	;'u'
  4253  00FFA8  6C                 	db	108	;'l'
  4254  00FFA9  6C                 	db	108	;'l'
  4255  00FFAA  29                 	db	41
  4256  00FFAB  00                 	db	0
  4257  00FFAC                     STR_37:
  4258  00FFAC  55                 	db	85	;'U'
  4259  00FFAD  73                 	db	115	;'s'
  4260  00FFAE  61                 	db	97	;'a'
  4261  00FFAF  67                 	db	103	;'g'
  4262  00FFB0  65                 	db	101	;'e'
  4263  00FFB1  3A                 	db	58	;':'
  4264  00FFB2  00                 	db	0
  4265  00FFB3                     STR_60:
  4266  00FFB3  52                 	db	82	;'R'
  4267  00FFB4  46                 	db	70	;'F'
  4268  00FFB5  20                 	db	32
  4269  00FFB6  73                 	db	115	;'s'
  4270  00FFB7  65                 	db	101	;'e'
  4271  00FFB8  74                 	db	116	;'t'
  4272  00FFB9  00                 	db	0
  4273  00FFBA                     STR_12:
  4274  00FFBA  53                 	db	83	;'S'
  4275  00FFBB  7E                 	db	126
  4276  00FFBC  2C                 	db	44
  4277  00FFBD  30                 	db	48	;'0'
  4278  00FFBE  0D                 	db	13
  4279  00FFBF  00                 	db	0
  4280  00FFC0                     STR_20:
  4281  00FFC0  43                 	db	67	;'C'
  4282  00FFC1  6F                 	db	111	;'o'
  4283  00FFC2  6E                 	db	110	;'n'
  4284  00FFC3  66                 	db	102	;'f'
  4285  00FFC4  31                 	db	49	;'1'
  4286  00FFC5  00                 	db	0
  4287  00FFC6                     STR_22:
  4288  00FFC6  43                 	db	67	;'C'
  4289  00FFC7  6F                 	db	111	;'o'
  4290  00FFC8  6E                 	db	110	;'n'
  4291  00FFC9  66                 	db	102	;'f'
  4292  00FFCA  32                 	db	50	;'2'
  4293  00FFCB  00                 	db	0
  4294  00FFCC                     STR_78:
  4295  00FFCC  52                 	db	82	;'R'
  4296  00FFCD  65                 	db	101	;'e'
  4297  00FFCE  73                 	db	115	;'s'
  4298  00FFCF  65                 	db	101	;'e'
  4299  00FFD0  74                 	db	116	;'t'
  4300  00FFD1  00                 	db	0
  4301  00FFD2                     STR_18:
  4302  00FFD2  2D                 	db	45
  4303  00FFD3  2D                 	db	45
  4304  00FFD4  2D                 	db	45
  4305  00FFD5  0D                 	db	13
  4306  00FFD6  00                 	db	0
  4307  00FFD7                     STR_16:
  4308  00FFD7  44                 	db	68	;'D'
  4309  00FFD8  2C                 	db	44
  4310  00FFD9  30                 	db	48	;'0'
  4311  00FFDA  0D                 	db	13
  4312  00FFDB  00                 	db	0
  4313  00FFDC                     STR_132:
  4314  00FFDC  4E                 	db	78	;'N'
  4315  00FFDD  45                 	db	69	;'E'
  4316  00FFDE  43                 	db	67	;'C'
  4317  00FFDF  3F                 	db	63	;'?'
  4318  00FFE0  00                 	db	0
  4319  00FFE1                     STR_90:
  4320  00FFE1  20                 	db	32
  4321  00FFE2  4D                 	db	77	;'M'
  4322  00FFE3  48                 	db	72	;'H'
  4323  00FFE4  7A                 	db	122	;'z'
  4324  00FFE5  00                 	db	0
  4325  00FFE6                     STR_2:
  4326  00FFE6  24                 	db	36
  4327  00FFE7  24                 	db	36
  4328  00FFE8  24                 	db	36
  4329  00FFE9  00                 	db	0
  4330  00FFEA                     STR_91:
  4331  00FFEA  3F                 	db	63	;'?'
  4332  00FFEB  3F                 	db	63	;'?'
  4333  00FFEC  3F                 	db	63	;'?'
  4334  00FFED  00                 	db	0
  4335  00FFEE                     STR_24:
  4336  00FFEE  4E                 	db	78	;'N'
  4337  00FFEF  45                 	db	69	;'E'
  4338  00FFF0  43                 	db	67	;'C'
  4339  00FFF1  00                 	db	0
  4340  00FFF2                     STR_3:
  4341  00FFF2  43                 	db	67	;'C'
  4342  00FFF3  4D                 	db	77	;'M'
  4343  00FFF4  44                 	db	68	;'D'
  4344  00FFF5  00                 	db	0
  4345  00FFF6                     STR_19:
  4346  00FFF6  45                 	db	69	;'E'
  4347  00FFF7  4E                 	db	78	;'N'
  4348  00FFF8  44                 	db	68	;'D'
  4349  00FFF9  00                 	db	0
  4350  00FFFA                     STR_5:
  4351  00FFFA  41                 	db	65	;'A'
  4352  00FFFB  4F                 	db	79	;'O'
  4353  00FFFC  4B                 	db	75	;'K'
  4354  00FFFD  00                 	db	0
  4355  0000                     
  4356                           ; #config settings
  4357  00FFFE  00                 	db	0	; dummy byte at the end
  4358  0000                     
  4359                           	psect	cinit
  4360  007FDE                     __pcinit:
  4361                           	opt stack 0
  4362  007FDE                     start_initialization:
  4363                           	opt stack 0
  4364  007FDE                     __initialization:
  4365                           	opt stack 0
  4366                           
  4367                           ; Clear objects allocated to BANK7 (200 bytes)
  4368  007FDE  EE07  F000         	lfsr	0,__pbssBANK7
  4369  007FE2  0EC8               	movlw	200
  4370  007FE4                     clear_0:
  4371  007FE4  6AEE               	clrf	postinc0,c
  4372  007FE6  06E8               	decf	wreg,f,c
  4373  007FE8  E1FD               	bnz	clear_0
  4374                           
  4375                           ; Clear objects allocated to BANK6 (255 bytes)
  4376  007FEA  EE06  F000         	lfsr	0,__pbssBANK6
  4377  007FEE  EE10 F0FF          	lfsr	1,255
  4378  007FF2                     clear_1:
  4379  007FF2  6AEE               	clrf	postinc0,c
  4380  007FF4  50E5               	movf	postdec1,w,c
  4381  007FF6  50E1               	movf	fsr1l,w,c
  4382  007FF8  E1FC               	bnz	clear_1
  4383  007FFA  50E2               	movf	fsr1h,w,c
  4384  007FFC  E1FA               	bnz	clear_1
  4385                           
  4386                           ; Clear objects allocated to BANK5 (255 bytes)
  4387  007FFE  EE05  F000         	lfsr	0,__pbssBANK5
  4388  008002  EE10 F0FF          	lfsr	1,255
  4389  008006                     clear_2:
  4390  008006  6AEE               	clrf	postinc0,c
  4391  008008  50E5               	movf	postdec1,w,c
  4392  00800A  50E1               	movf	fsr1l,w,c
  4393  00800C  E1FC               	bnz	clear_2
  4394  00800E  50E2               	movf	fsr1h,w,c
  4395  008010  E1FA               	bnz	clear_2
  4396                           
  4397                           ; Clear objects allocated to BANK4 (136 bytes)
  4398  008012  EE04  F000         	lfsr	0,__pbssBANK4
  4399  008016  0E88               	movlw	136
  4400  008018                     clear_3:
  4401  008018  6AEE               	clrf	postinc0,c
  4402  00801A  06E8               	decf	wreg,f,c
  4403  00801C  E1FD               	bnz	clear_3
  4404                           
  4405                           ; Clear objects allocated to BANK2 (23 bytes)
  4406  00801E  EE02  F0CF         	lfsr	0,__pbssBANK2
  4407  008022  0E17               	movlw	23
  4408  008024                     clear_4:
  4409  008024  6AEE               	clrf	postinc0,c
  4410  008026  06E8               	decf	wreg,f,c
  4411  008028  E1FD               	bnz	clear_4
  4412                           
  4413                           ; Clear objects allocated to BANK1 (1 bytes)
  4414  00802A  0101               	movlb	1
  4415  00802C  6BFF               	clrf	__pbssBANK1& (0+255),b
  4416                           
  4417                           ; Clear objects allocated to BANK0 (9 bytes)
  4418  00802E  EE00  F0DA         	lfsr	0,__pbssBANK0
  4419  008032  0E09               	movlw	9
  4420  008034                     clear_5:
  4421  008034  6AEE               	clrf	postinc0,c
  4422  008036  06E8               	decf	wreg,f,c
  4423  008038  E1FD               	bnz	clear_5
  4424                           
  4425                           ; Clear objects allocated to COMRAM (25 bytes)
  4426  00803A  EE00  F023         	lfsr	0,__pbssCOMRAM
  4427  00803E  0E19               	movlw	25
  4428  008040                     clear_6:
  4429  008040  6AEE               	clrf	postinc0,c
  4430  008042  06E8               	decf	wreg,f,c
  4431  008044  E1FD               	bnz	clear_6
  4432                           
  4433                           ; Initialize objects allocated to BANK2 (54 bytes)
  4434                           ; load TBLPTR registers with __pidataBANK2
  4435  008046  0E38               	movlw	low __pidataBANK2
  4436  008048  6EF6               	movwf	tblptrl,c
  4437  00804A  0E92               	movlw	high __pidataBANK2
  4438  00804C  6EF7               	movwf	tblptrh,c
  4439  00804E  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4440  008050  6EF8               	movwf	tblptru,c
  4441  008052  EE02  F099         	lfsr	0,__pdataBANK2
  4442  008056  EE10 F036          	lfsr	1,54
  4443  00805A                     copy_data0:
  4444  00805A  0009               	tblrd		*+
  4445  00805C  CFF5 FFEE          	movff	tablat,postinc0
  4446  008060  50E5               	movf	postdec1,w,c
  4447  008062  50E1               	movf	fsr1l,w,c
  4448  008064  E1FA               	bnz	copy_data0
  4449                           
  4450                           ; Initialize objects allocated to BANK0 (1 bytes)
  4451                           ; load TBLPTR registers with __pidataBANK0
  4452  008066  0EC4               	movlw	low __pidataBANK0
  4453  008068  6EF6               	movwf	tblptrl,c
  4454  00806A  0E95               	movlw	high __pidataBANK0
  4455  00806C  6EF7               	movwf	tblptrh,c
  4456  00806E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  4457  008070  6EF8               	movwf	tblptru,c
  4458  008072  0009               	tblrd		*+	;fetch initializer
  4459  008074  CFF5 F0E3          	movff	tablat,__pdataBANK0
  4460                           
  4461                           ; Initialize objects allocated to COMRAM (9 bytes)
  4462                           ; load TBLPTR registers with __pidataCOMRAM
  4463  008078  0EAE               	movlw	low __pidataCOMRAM
  4464  00807A  6EF6               	movwf	tblptrl,c
  4465  00807C  0E95               	movlw	high __pidataCOMRAM
  4466  00807E  6EF7               	movwf	tblptrh,c
  4467  008080  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  4468  008082  6EF8               	movwf	tblptru,c
  4469  008084  EE00  F03C         	lfsr	0,__pdataCOMRAM
  4470  008088  EE10 F009          	lfsr	1,9
  4471  00808C                     copy_data1:
  4472  00808C  0009               	tblrd		*+
  4473  00808E  CFF5 FFEE          	movff	tablat,postinc0
  4474  008092  50E5               	movf	postdec1,w,c
  4475  008094  50E1               	movf	fsr1l,w,c
  4476  008096  E1FA               	bnz	copy_data1
  4477  008098                     end_of_initialization:
  4478                           	opt stack 0
  4479  008098                     __end_of__initialization:
  4480                           	opt stack 0
  4481  008098  0100               	movlb	0
  4482  00809A  EF86  F028         	goto	_main	;jump to C main() function
  4483                           tblptru	equ	0xFF8
  4484                           tblptrh	equ	0xFF7
  4485                           tblptrl	equ	0xFF6
  4486                           tablat	equ	0xFF5
  4487                           postinc0	equ	0xFEE
  4488                           wreg	equ	0xFE8
  4489                           postdec1	equ	0xFE5
  4490                           fsr1h	equ	0xFE2
  4491                           fsr1l	equ	0xFE1
  4492                           
  4493                           	psect	bssCOMRAM
  4494  000023                     __pbssCOMRAM:
  4495                           	opt stack 0
  4496  000023                     _IRsendCode:
  4497                           	opt stack 0
  4498  000023                     	ds	4
  4499  000027                     _CommandStringPos:
  4500                           	opt stack 0
  4501  000027                     	ds	1
  4502  000028                     _Conf2_ChannelB_Status:
  4503                           	opt stack 0
  4504  000028                     	ds	1
  4505  000029                     _Conf2_ChannelD_Status:
  4506                           	opt stack 0
  4507  000029                     	ds	1
  4508  00002A                     _Conf2_ChannelH_1_Status:
  4509                           	opt stack 0
  4510  00002A                     	ds	1
  4511  00002B                     _Conf2_ChannelH_2_Status:
  4512                           	opt stack 0
  4513  00002B                     	ds	1
  4514  00002C                     _Conf2_ChannelH_3_Status:
  4515                           	opt stack 0
  4516  00002C                     	ds	1
  4517  00002D                     _IRbit:
  4518                           	opt stack 0
  4519  00002D                     	ds	1
  4520  00002E                     _IRcodeBit:
  4521                           	opt stack 0
  4522  00002E                     	ds	1
  4523  00002F                     _IRpinOLD:
  4524                           	opt stack 0
  4525  00002F                     	ds	1
  4526  000030                     _IRrawCodeNum:
  4527                           	opt stack 0
  4528  000030                     	ds	1
  4529  000031                     _IRrepeatAmount:
  4530                           	opt stack 0
  4531  000031                     	ds	1
  4532  000032                     _IRrepeatflag:
  4533                           	opt stack 0
  4534  000032                     	ds	1
  4535  000033                     _IRsendFlag:
  4536                           	opt stack 0
  4537  000033                     	ds	1
  4538  000034                     _RFConfig:
  4539                           	opt stack 0
  4540  000034                     	ds	1
  4541  000035                     _RFcodeBit:
  4542                           	opt stack 0
  4543  000035                     	ds	1
  4544  000036                     _RFcodePlace:
  4545                           	opt stack 0
  4546  000036                     	ds	1
  4547  000037                     _RFsendFlag:
  4548                           	opt stack 0
  4549  000037                     	ds	1
  4550  000038                     _Sendcount:
  4551                           	opt stack 0
  4552  000038                     	ds	1
  4553  000039                     _Timer1_Postscaler:
  4554                           	opt stack 0
  4555  000039                     	ds	1
  4556  00003A                     _Timer2_Postscaler:
  4557                           	opt stack 0
  4558  00003A                     	ds	1
  4559  00003B                     _Timer3_Postscaler:
  4560                           	opt stack 0
  4561  00003B                     	ds	1
  4562                           tblptru	equ	0xFF8
  4563                           tblptrh	equ	0xFF7
  4564                           tblptrl	equ	0xFF6
  4565                           tablat	equ	0xFF5
  4566                           postinc0	equ	0xFEE
  4567                           wreg	equ	0xFE8
  4568                           postdec1	equ	0xFE5
  4569                           fsr1h	equ	0xFE2
  4570                           fsr1l	equ	0xFE1
  4571                           
  4572                           	psect	dataCOMRAM
  4573  00003C                     __pdataCOMRAM:
  4574                           	opt stack 0
  4575  00003C                     _SN:
  4576                           	opt stack 0
  4577  00003C                     	ds	4
  4578  000040                     _IRbitPosition:
  4579                           	opt stack 0
  4580  000040                     	ds	1
  4581  000041                     _IRcodePlace:
  4582                           	opt stack 0
  4583  000041                     	ds	1
  4584  000042                     _RF_IR:
  4585                           	opt stack 0
  4586  000042                     	ds	1
  4587  000043                     _RF_IR_Postscaler:
  4588                           	opt stack 0
  4589  000043                     	ds	1
  4590  000044                     _ReceivingIR:
  4591                           	opt stack 0
  4592  000044                     	ds	1
  4593                           tblptru	equ	0xFF8
  4594                           tblptrh	equ	0xFF7
  4595                           tblptrl	equ	0xFF6
  4596                           tablat	equ	0xFF5
  4597                           postinc0	equ	0xFEE
  4598                           wreg	equ	0xFE8
  4599                           postdec1	equ	0xFE5
  4600                           fsr1h	equ	0xFE2
  4601                           fsr1l	equ	0xFE1
  4602                           
  4603                           	psect	bssBANK0
  4604  0000DA                     __pbssBANK0:
  4605                           	opt stack 0
  4606  0000DA                     _IRmod:
  4607                           	opt stack 0
  4608  0000DA                     	ds	1
  4609  0000DB                     _NewReceivedString:
  4610                           	opt stack 0
  4611  0000DB                     	ds	1
  4612  0000DC                     _ReceivedStringPos:
  4613                           	opt stack 0
  4614  0000DC                     	ds	1
  4615  0000DD                     _IR_NEC:
  4616                           	opt stack 0
  4617  0000DD                     	ds	4
  4618  0000E1                     _IR_New_Code:
  4619                           	opt stack 0
  4620  0000E1                     	ds	1
  4621  0000E2                     _IRaddress:
  4622                           	opt stack 0
  4623  0000E2                     	ds	1
  4624                           tblptru	equ	0xFF8
  4625                           tblptrh	equ	0xFF7
  4626                           tblptrl	equ	0xFF6
  4627                           tablat	equ	0xFF5
  4628                           postinc0	equ	0xFEE
  4629                           wreg	equ	0xFE8
  4630                           postdec1	equ	0xFE5
  4631                           fsr1h	equ	0xFE2
  4632                           fsr1l	equ	0xFE1
  4633                           
  4634                           	psect	dataBANK0
  4635  0000E3                     __pdataBANK0:
  4636                           	opt stack 0
  4637  0000E3                     _Sent:
  4638                           	opt stack 0
  4639  0000E3                     	ds	1
  4640                           tblptru	equ	0xFF8
  4641                           tblptrh	equ	0xFF7
  4642                           tblptrl	equ	0xFF6
  4643                           tablat	equ	0xFF5
  4644                           postinc0	equ	0xFEE
  4645                           wreg	equ	0xFE8
  4646                           postdec1	equ	0xFE5
  4647                           fsr1h	equ	0xFE2
  4648                           fsr1l	equ	0xFE1
  4649                           
  4650                           	psect	bssBANK1
  4651  0001FF                     __pbssBANK1:
  4652                           	opt stack 0
  4653  0001FF                     _IRcommand:
  4654                           	opt stack 0
  4655  0001FF                     	ds	1
  4656                           tblptru	equ	0xFF8
  4657                           tblptrh	equ	0xFF7
  4658                           tblptrl	equ	0xFF6
  4659                           tablat	equ	0xFF5
  4660                           postinc0	equ	0xFEE
  4661                           wreg	equ	0xFE8
  4662                           postdec1	equ	0xFE5
  4663                           fsr1h	equ	0xFE2
  4664                           fsr1l	equ	0xFE1
  4665                           
  4666                           	psect	bssBANK2
  4667  0002CF                     __pbssBANK2:
  4668                           	opt stack 0
  4669  0002CF                     _RFsendCode:
  4670                           	opt stack 0
  4671  0002CF                     	ds	20
  4672  0002E3                     _BatteryVoltage:
  4673                           	opt stack 0
  4674  0002E3                     	ds	3
  4675                           tblptru	equ	0xFF8
  4676                           tblptrh	equ	0xFF7
  4677                           tblptrl	equ	0xFF6
  4678                           tablat	equ	0xFF5
  4679                           postinc0	equ	0xFEE
  4680                           wreg	equ	0xFE8
  4681                           postdec1	equ	0xFE5
  4682                           fsr1h	equ	0xFE2
  4683                           fsr1l	equ	0xFE1
  4684                           
  4685                           	psect	dataBANK2
  4686  000299                     __pdataBANK2:
  4687                           	opt stack 0
  4688  000299                     _ProductName:
  4689                           	opt stack 0
  4690  000299                     	ds	50
  4691  0002CB                     _IRtimeout:
  4692                           	opt stack 0
  4693  0002CB                     	ds	4
  4694                           tblptru	equ	0xFF8
  4695                           tblptrh	equ	0xFF7
  4696                           tblptrl	equ	0xFF6
  4697                           tablat	equ	0xFF5
  4698                           postinc0	equ	0xFEE
  4699                           wreg	equ	0xFE8
  4700                           postdec1	equ	0xFE5
  4701                           fsr1h	equ	0xFE2
  4702                           fsr1l	equ	0xFE1
  4703                           
  4704                           	psect	bssBANK4
  4705  000400                     __pbssBANK4:
  4706                           	opt stack 0
  4707  000400                     _Global:
  4708                           	opt stack 0
  4709  000400                     	ds	136
  4710                           tblptru	equ	0xFF8
  4711                           tblptrh	equ	0xFF7
  4712                           tblptrl	equ	0xFF6
  4713                           tablat	equ	0xFF5
  4714                           postinc0	equ	0xFEE
  4715                           wreg	equ	0xFE8
  4716                           postdec1	equ	0xFE5
  4717                           fsr1h	equ	0xFE2
  4718                           fsr1l	equ	0xFE1
  4719                           
  4720                           	psect	bssBANK5
  4721  000500                     __pbssBANK5:
  4722                           	opt stack 0
  4723  000500                     _CommandString:
  4724                           	opt stack 0
  4725  000500                     	ds	255
  4726                           tblptru	equ	0xFF8
  4727                           tblptrh	equ	0xFF7
  4728                           tblptrl	equ	0xFF6
  4729                           tablat	equ	0xFF5
  4730                           postinc0	equ	0xFEE
  4731                           wreg	equ	0xFE8
  4732                           postdec1	equ	0xFE5
  4733                           fsr1h	equ	0xFE2
  4734                           fsr1l	equ	0xFE1
  4735                           
  4736                           	psect	bssBANK6
  4737  000600                     __pbssBANK6:
  4738                           	opt stack 0
  4739  000600                     _ReceivedString:
  4740                           	opt stack 0
  4741  000600                     	ds	255
  4742                           tblptru	equ	0xFF8
  4743                           tblptrh	equ	0xFF7
  4744                           tblptrl	equ	0xFF6
  4745                           tablat	equ	0xFF5
  4746                           postinc0	equ	0xFEE
  4747                           wreg	equ	0xFE8
  4748                           postdec1	equ	0xFE5
  4749                           fsr1h	equ	0xFE2
  4750                           fsr1l	equ	0xFE1
  4751                           
  4752                           	psect	bssBANK7
  4753  000700                     __pbssBANK7:
  4754                           	opt stack 0
  4755  000700                     _IRRawCode:
  4756                           	opt stack 0
  4757  000700                     	ds	200
  4758                           tblptru	equ	0xFF8
  4759                           tblptrh	equ	0xFF7
  4760                           tblptrl	equ	0xFF6
  4761                           tablat	equ	0xFF5
  4762                           postinc0	equ	0xFEE
  4763                           wreg	equ	0xFE8
  4764                           postdec1	equ	0xFE5
  4765                           fsr1h	equ	0xFE2
  4766                           fsr1l	equ	0xFE1
  4767                           
  4768                           	psect	cstackBANK3
  4769  000300                     __pcstackBANK3:
  4770                           	opt stack 0
  4771  000300                     main@BluetoothString:
  4772                           	opt stack 0
  4773                           
  4774                           ; 255 bytes @ 0x0
  4775  000300                     	ds	255
  4776                           tblptru	equ	0xFF8
  4777                           tblptrh	equ	0xFF7
  4778                           tblptrl	equ	0xFF6
  4779                           tablat	equ	0xFF5
  4780                           postinc0	equ	0xFEE
  4781                           wreg	equ	0xFE8
  4782                           postdec1	equ	0xFE5
  4783                           fsr1h	equ	0xFE2
  4784                           fsr1l	equ	0xFE1
  4785                           
  4786                           	psect	cstackBANK2
  4787  000200                     __pcstackBANK2:
  4788                           	opt stack 0
  4789  000200                     UseBluetooth@String:
  4790                           	opt stack 0
  4791                           
  4792                           ; 2 bytes @ 0x0
  4793  000200                     	ds	2
  4794  000202                     UseBluetooth@StringPos:
  4795                           	opt stack 0
  4796                           
  4797                           ; 1 bytes @ 0x2
  4798  000202                     	ds	1
  4799  000203                     ??_UseBluetooth:
  4800                           
  4801                           ; 0 bytes @ 0x3
  4802  000203                     	ds	12
  4803  00020F                     UseBluetooth@buf:
  4804                           	opt stack 0
  4805                           
  4806                           ; 100 bytes @ 0xF
  4807  00020F                     	ds	100
  4808  000273                     UseBluetooth@rfchannelSTR:
  4809                           	opt stack 0
  4810                           
  4811                           ; 10 bytes @ 0x73
  4812  000273                     	ds	10
  4813  00027D                     UseBluetooth@set:
  4814                           	opt stack 0
  4815                           
  4816                           ; 1 bytes @ 0x7D
  4817  00027D                     	ds	1
  4818  00027E                     UseBluetooth@tempNec:
  4819                           	opt stack 0
  4820                           
  4821                           ; 4 bytes @ 0x7E
  4822  00027E                     	ds	4
  4823  000282                     UseBluetooth@timeout:
  4824                           	opt stack 0
  4825                           
  4826                           ; 1 bytes @ 0x82
  4827  000282                     	ds	1
  4828  000283                     UseBluetooth@EmptyPlace:
  4829                           	opt stack 0
  4830                           
  4831                           ; 1 bytes @ 0x83
  4832  000283                     	ds	1
  4833  000284                     UseBluetooth@device:
  4834                           	opt stack 0
  4835                           
  4836                           ; 1 bytes @ 0x84
  4837  000284                     	ds	1
  4838  000285                     UseBluetooth@EnteredNEC:
  4839                           	opt stack 0
  4840                           
  4841                           ; 4 bytes @ 0x85
  4842  000285                     	ds	4
  4843  000289                     UseBluetooth@ok:
  4844                           	opt stack 0
  4845                           
  4846                           ; 1 bytes @ 0x89
  4847  000289                     	ds	1
  4848  00028A                     UseBluetooth@tempRFArray:
  4849                           	opt stack 0
  4850                           
  4851                           ; 1 bytes @ 0x8A
  4852  00028A                     	ds	1
  4853  00028B                     UseBluetooth@rfconf:
  4854                           	opt stack 0
  4855                           
  4856                           ; 1 bytes @ 0x8B
  4857  00028B                     	ds	1
  4858  00028C                     UseBluetooth@NecAddress:
  4859                           	opt stack 0
  4860                           
  4861                           ; 1 bytes @ 0x8C
  4862  00028C                     	ds	1
  4863  00028D                     UseBluetooth@NecCommand:
  4864                           	opt stack 0
  4865                           
  4866                           ; 1 bytes @ 0x8D
  4867  00028D                     	ds	1
  4868  00028E                     UseBluetooth@temp:
  4869                           	opt stack 0
  4870                           
  4871                           ; 4 bytes @ 0x8E
  4872  00028E                     	ds	4
  4873  000292                     UseBluetooth@i:
  4874                           	opt stack 0
  4875                           
  4876                           ; 1 bytes @ 0x92
  4877  000292                     	ds	1
  4878  000293                     main@IRtask:
  4879                           	opt stack 0
  4880                           
  4881                           ; 1 bytes @ 0x93
  4882  000293                     	ds	1
  4883  000294                     main@Bluetoothtask:
  4884                           	opt stack 0
  4885                           
  4886                           ; 1 bytes @ 0x94
  4887  000294                     	ds	1
  4888  000295                     main@BluetoothStringPos:
  4889                           	opt stack 0
  4890                           
  4891                           ; 1 bytes @ 0x95
  4892  000295                     	ds	1
  4893  000296                     main@Connected:
  4894                           	opt stack 0
  4895                           
  4896                           ; 1 bytes @ 0x96
  4897  000296                     	ds	1
  4898  000297                     main@VoltageStatus:
  4899                           	opt stack 0
  4900                           
  4901                           ; 1 bytes @ 0x97
  4902  000297                     	ds	1
  4903  000298                     main@i:
  4904                           	opt stack 0
  4905                           
  4906                           ; 1 bytes @ 0x98
  4907  000298                     	ds	1
  4908                           tblptru	equ	0xFF8
  4909                           tblptrh	equ	0xFF7
  4910                           tblptrl	equ	0xFF6
  4911                           tablat	equ	0xFF5
  4912                           postinc0	equ	0xFEE
  4913                           wreg	equ	0xFE8
  4914                           postdec1	equ	0xFE5
  4915                           fsr1h	equ	0xFE2
  4916                           fsr1l	equ	0xFE1
  4917                           
  4918                           	psect	cstackBANK1
  4919  000100                     __pcstackBANK1:
  4920                           	opt stack 0
  4921  000100                     ??_sprintf:
  4922  000100                     ?_SetEEPROM:
  4923                           	opt stack 0
  4924  000100                     SyncEEPROMToGlobal@k:
  4925                           	opt stack 0
  4926  000100                     _InitUART$3806:
  4927                           	opt stack 0
  4928  000100                     SetEEPROM@Temp:
  4929                           	opt stack 0
  4930  000100                     StringAddEqual@temp:
  4931                           	opt stack 0
  4932                           
  4933                           ; 255 bytes @ 0x0
  4934  000100                     	ds	1
  4935  000101                     SyncEEPROMToGlobal@i:
  4936                           	opt stack 0
  4937                           
  4938                           ; 1 bytes @ 0x1
  4939  000101                     	ds	1
  4940  000102                     SyncEEPROMToGlobal@j:
  4941                           	opt stack 0
  4942                           
  4943                           ; 1 bytes @ 0x2
  4944  000102                     	ds	1
  4945  000103                     InitUART@spbrg:
  4946                           	opt stack 0
  4947  000103                     SyncEEPROMToGlobal@Temp:
  4948                           	opt stack 0
  4949                           
  4950                           ; 136 bytes @ 0x3
  4951  000103                     	ds	2
  4952  000105                     InitUART@config:
  4953                           	opt stack 0
  4954                           
  4955                           ; 1 bytes @ 0x5
  4956  000105                     	ds	1
  4957  000106                     _sprintf$3810:
  4958                           	opt stack 0
  4959  000106                     InitUART@temp:
  4960                           	opt stack 0
  4961                           
  4962                           ; 4 bytes @ 0x6
  4963  000106                     	ds	3
  4964  000109                     sprintf@idx:
  4965                           	opt stack 0
  4966                           
  4967                           ; 1 bytes @ 0x9
  4968  000109                     	ds	1
  4969  00010A                     sprintf@cp:
  4970                           	opt stack 0
  4971                           
  4972                           ; 2 bytes @ 0xA
  4973  00010A                     	ds	2
  4974  00010C                     sprintf@len:
  4975                           	opt stack 0
  4976                           
  4977                           ; 2 bytes @ 0xC
  4978  00010C                     	ds	2
  4979  00010E                     sprintf@ap:
  4980                           	opt stack 0
  4981                           
  4982                           ; 2 bytes @ 0xE
  4983  00010E                     	ds	2
  4984  000110                     sprintf@prec:
  4985                           	opt stack 0
  4986                           
  4987                           ; 2 bytes @ 0x10
  4988  000110                     	ds	2
  4989  000112                     sprintf@tmpval:
  4990                           	opt stack 0
  4991                           
  4992                           ; 4 bytes @ 0x12
  4993  000112                     	ds	4
  4994  000116                     sprintf@exp:
  4995                           	opt stack 0
  4996                           
  4997                           ; 2 bytes @ 0x16
  4998  000116                     	ds	2
  4999  000118                     sprintf@val:
  5000                           	opt stack 0
  5001                           
  5002                           ; 4 bytes @ 0x18
  5003  000118                     	ds	4
  5004  00011C                     sprintf@fval:
  5005                           	opt stack 0
  5006                           
  5007                           ; 3 bytes @ 0x1C
  5008  00011C                     	ds	3
  5009  00011F                     sprintf@width:
  5010                           	opt stack 0
  5011                           
  5012                           ; 2 bytes @ 0x1F
  5013  00011F                     	ds	2
  5014  000121                     sprintf@flag:
  5015                           	opt stack 0
  5016                           
  5017                           ; 2 bytes @ 0x21
  5018  000121                     	ds	2
  5019  000123                     sprintf@c:
  5020                           	opt stack 0
  5021                           
  5022                           ; 1 bytes @ 0x23
  5023  000123                     	ds	1
  5024  000124                     BluetoothInitialSetup@RFchannel:
  5025                           	opt stack 0
  5026                           
  5027                           ; 10 bytes @ 0x24
  5028  000124                     	ds	10
  5029  00012E                     BluetoothInitialSetup@buf:
  5030                           	opt stack 0
  5031                           
  5032                           ; 50 bytes @ 0x2E
  5033  00012E                     	ds	50
  5034  000160                     BluetoothInitialSetup@ok:
  5035                           	opt stack 0
  5036                           
  5037                           ; 1 bytes @ 0x60
  5038  000160                     	ds	40
  5039  000188                     SetEEPROM@burn:
  5040                           	opt stack 0
  5041                           
  5042                           ; 4 bytes @ 0x88
  5043  000188                     	ds	119
  5044                           tblptru	equ	0xFF8
  5045                           tblptrh	equ	0xFF7
  5046                           tblptrl	equ	0xFF6
  5047                           tablat	equ	0xFF5
  5048                           postinc0	equ	0xFEE
  5049                           wreg	equ	0xFE8
  5050                           postdec1	equ	0xFE5
  5051                           fsr1h	equ	0xFE2
  5052                           fsr1l	equ	0xFE1
  5053                           
  5054                           	psect	cstackBANK0
  5055  000060                     __pcstackBANK0:
  5056                           	opt stack 0
  5057  000060                     IRrawToNEC@NECtemp:
  5058                           	opt stack 0
  5059                           
  5060                           ; 4 bytes @ 0x0
  5061  000060                     	ds	4
  5062  000064                     IRrawToNEC@first:
  5063                           	opt stack 0
  5064                           
  5065                           ; 1 bytes @ 0x4
  5066  000064                     	ds	1
  5067  000065                     IRrawToNEC@i:
  5068                           	opt stack 0
  5069                           
  5070                           ; 1 bytes @ 0x5
  5071  000065                     	ds	1
  5072  000066                     IRrawToNEC@StartBit:
  5073                           	opt stack 0
  5074                           
  5075                           ; 1 bytes @ 0x6
  5076  000066                     	ds	1
  5077  000067                     ??_high_isr:
  5078                           
  5079                           ; 0 bytes @ 0x7
  5080  000067                     	ds	18
  5081  000079                     high_isr@IRpin:
  5082                           	opt stack 0
  5083                           
  5084                           ; 1 bytes @ 0x19
  5085  000079                     	ds	1
  5086  00007A                     high_isr@Time0:
  5087                           	opt stack 0
  5088                           
  5089                           ; 2 bytes @ 0x1A
  5090  00007A                     	ds	2
  5091  00007C                     ??_isdigit:
  5092  00007C                     ??_Reverse_Byte:
  5093  00007C                     ?_ReadEEPROM_1Byte:
  5094                           	opt stack 0
  5095  00007C                     ?___awmod:
  5096                           	opt stack 0
  5097  00007C                     ?___ftpack:
  5098                           	opt stack 0
  5099  00007C                     ?___ftneg:
  5100                           	opt stack 0
  5101  00007C                     ?__tdiv_to_l_:
  5102                           	opt stack 0
  5103  00007C                     ?__div_to_l_:
  5104                           	opt stack 0
  5105  00007C                     ?_Reverse_4Byte:
  5106                           	opt stack 0
  5107  00007C                     ?___lmul:
  5108                           	opt stack 0
  5109  00007C                     ?___lldiv:
  5110                           	opt stack 0
  5111  00007C                     IsLetter@data:
  5112                           	opt stack 0
  5113  00007C                     UARTchar@data:
  5114                           	opt stack 0
  5115  00007C                     ReadUSART@data:
  5116                           	opt stack 0
  5117  00007C                     cleanBuffer@data:
  5118                           	opt stack 0
  5119  00007C                     cleanBuffer16bit@data:
  5120                           	opt stack 0
  5121  00007C                     StringMatch@This:
  5122                           	opt stack 0
  5123  00007C                     StringContains@This:
  5124                           	opt stack 0
  5125  00007C                     lowercaseString@Input:
  5126                           	opt stack 0
  5127  00007C                     lowercaseChar@Input:
  5128                           	opt stack 0
  5129  00007C                     GetStringAfterComma@This:
  5130                           	opt stack 0
  5131  00007C                     OpenUSART@spbrg:
  5132                           	opt stack 0
  5133  00007C                     ReadEEPROM_1Byte@address:
  5134                           	opt stack 0
  5135  00007C                     WriteEEPROM_1Byte@address:
  5136                           	opt stack 0
  5137  00007C                     SendRF@Code:
  5138                           	opt stack 0
  5139  00007C                     ___awmod@dividend:
  5140                           	opt stack 0
  5141  00007C                     __div_to_l_@f1:
  5142                           	opt stack 0
  5143  00007C                     ___ftpack@arg:
  5144                           	opt stack 0
  5145  00007C                     __tdiv_to_l_@f1:
  5146                           	opt stack 0
  5147  00007C                     ___ftge@ff1:
  5148                           	opt stack 0
  5149  00007C                     ___ftneg@f1:
  5150                           	opt stack 0
  5151  00007C                     delayUS@US:
  5152                           	opt stack 0
  5153  00007C                     Reverse_4Byte@This:
  5154                           	opt stack 0
  5155  00007C                     ___lmul@multiplier:
  5156                           	opt stack 0
  5157  00007C                     ___lldiv@dividend:
  5158                           	opt stack 0
  5159                           
  5160                           ; 4 bytes @ 0x1C
  5161  00007C                     	ds	1
  5162  00007D                     _isdigit$3485:
  5163                           	opt stack 0
  5164  00007D                     UARTstring@data:
  5165                           	opt stack 0
  5166                           
  5167                           ; 2 bytes @ 0x1D
  5168  00007D                     	ds	1
  5169  00007E                     Reverse_Byte@temp:
  5170                           	opt stack 0
  5171  00007E                     GetStringAfterComma@CommaNumber:
  5172                           	opt stack 0
  5173  00007E                     OpenUSART@config:
  5174                           	opt stack 0
  5175  00007E                     ReadEEPROM_1Byte@GIEstatus:
  5176                           	opt stack 0
  5177  00007E                     WriteEEPROM_1Byte@data:
  5178                           	opt stack 0
  5179  00007E                     SendRF@Config:
  5180                           	opt stack 0
  5181  00007E                     isdigit@c:
  5182                           	opt stack 0
  5183  00007E                     cleanBuffer@count:
  5184                           	opt stack 0
  5185  00007E                     cleanBuffer16bit@count:
  5186                           	opt stack 0
  5187  00007E                     StringMatch@That:
  5188                           	opt stack 0
  5189  00007E                     StringContains@That:
  5190                           	opt stack 0
  5191  00007E                     ___awmod@divisor:
  5192                           	opt stack 0
  5193                           
  5194                           ; 2 bytes @ 0x1E
  5195  00007E                     	ds	1
  5196  00007F                     Reverse_Byte@This:
  5197                           	opt stack 0
  5198  00007F                     ReadEEPROM_1Byte@PEIEstatus:
  5199                           	opt stack 0
  5200  00007F                     WriteEEPROM_1Byte@GIEstatus:
  5201                           	opt stack 0
  5202  00007F                     SendRF@size:
  5203                           	opt stack 0
  5204  00007F                     ___ftpack@exp:
  5205                           	opt stack 0
  5206  00007F                     StringMatchCaseInsensitive@This:
  5207                           	opt stack 0
  5208  00007F                     StringContainsCaseInsensitive@This:
  5209                           	opt stack 0
  5210  00007F                     GetStringAfterComma@result:
  5211                           	opt stack 0
  5212  00007F                     UARTstringCRLN@data:
  5213                           	opt stack 0
  5214  00007F                     UARTcommandMenu@Command:
  5215                           	opt stack 0
  5216  00007F                     __div_to_l_@f2:
  5217                           	opt stack 0
  5218  00007F                     __tdiv_to_l_@f2:
  5219                           	opt stack 0
  5220  00007F                     ___ftge@ff2:
  5221                           	opt stack 0
  5222                           
  5223                           ; 3 bytes @ 0x1F
  5224  00007F                     	ds	1
  5225  000080                     ??_delayUS:
  5226  000080                     ??_cleanBuffer:
  5227  000080                     ??_cleanBuffer16bit:
  5228  000080                     ??_StringMatch:
  5229  000080                     ??_StringContains:
  5230  000080                     ??_Reverse_4Byte:
  5231  000080                     ?_GetMemoryChar:
  5232                           	opt stack 0
  5233  000080                     ?_GetMemoryLong:
  5234                           	opt stack 0
  5235  000080                     ?_EncodeNEC:
  5236                           	opt stack 0
  5237  000080                     WriteEEPROM_1Byte@PEIEstatus:
  5238                           	opt stack 0
  5239  000080                     EncodeNEC@command:
  5240                           	opt stack 0
  5241  000080                     SendRF@RepeatAmount:
  5242                           	opt stack 0
  5243  000080                     ___awmod@counter:
  5244                           	opt stack 0
  5245  000080                     ___ftpack@sign:
  5246                           	opt stack 0
  5247  000080                     DecodeNEC@Nec:
  5248                           	opt stack 0
  5249  000080                     ___lmul@multiplicand:
  5250                           	opt stack 0
  5251  000080                     ___lldiv@divisor:
  5252                           	opt stack 0
  5253                           
  5254                           ; 4 bytes @ 0x20
  5255  000080                     	ds	1
  5256  000081                     ??___ftpack:
  5257  000081                     ??_SendRF:
  5258  000081                     StringContains@begin:
  5259                           	opt stack 0
  5260  000081                     ___awmod@sign:
  5261                           	opt stack 0
  5262  000081                     StringMatchCaseInsensitive@That:
  5263                           	opt stack 0
  5264  000081                     StringContainsCaseInsensitive@That:
  5265                           	opt stack 0
  5266  000081                     UARTcommandMenu@Desc:
  5267                           	opt stack 0
  5268  000081                     delayUS@i:
  5269                           	opt stack 0
  5270                           
  5271                           ; 4 bytes @ 0x21
  5272  000081                     	ds	1
  5273  000082                     ??__tdiv_to_l_:
  5274  000082                     ??___ftge:
  5275  000082                     ?___awdiv:
  5276                           	opt stack 0
  5277  000082                     GetStringAfterComma@tempCommaNumber:
  5278                           	opt stack 0
  5279  000082                     ___awdiv@dividend:
  5280                           	opt stack 0
  5281  000082                     __div_to_l_@quot:
  5282                           	opt stack 0
  5283                           
  5284                           ; 4 bytes @ 0x22
  5285  000082                     	ds	1
  5286  000083                     ??_UARTcommandMenu:
  5287  000083                     cleanBuffer@i:
  5288                           	opt stack 0
  5289  000083                     cleanBuffer16bit@i:
  5290                           	opt stack 0
  5291  000083                     StringMatchCaseInsensitive@tempThis:
  5292                           	opt stack 0
  5293  000083                     StringContainsCaseInsensitive@begin:
  5294                           	opt stack 0
  5295  000083                     GetStringAfterComma@count:
  5296                           	opt stack 0
  5297  000083                     SendRF@i:
  5298                           	opt stack 0
  5299                           
  5300                           ; 1 bytes @ 0x23
  5301  000083                     	ds	1
  5302  000084                     ??_GetMemoryLong:
  5303  000084                     ??_EncodeNEC:
  5304  000084                     ?___altoft:
  5305                           	opt stack 0
  5306  000084                     ?___lltoft:
  5307                           	opt stack 0
  5308  000084                     ?___lwtoft:
  5309                           	opt stack 0
  5310  000084                     StringMatchCaseInsensitive@tempThat:
  5311                           	opt stack 0
  5312  000084                     StringContainsCaseInsensitive@tempThis:
  5313                           	opt stack 0
  5314  000084                     GetMemoryChar@AddressFirst:
  5315                           	opt stack 0
  5316  000084                     BufferCopy@from:
  5317                           	opt stack 0
  5318  000084                     DecodeNEC@address:
  5319                           	opt stack 0
  5320  000084                     SendRF_wait@Code:
  5321                           	opt stack 0
  5322  000084                     ___awdiv@divisor:
  5323                           	opt stack 0
  5324  000084                     ___lwtoft@c:
  5325                           	opt stack 0
  5326  000084                     ___lmul@product:
  5327                           	opt stack 0
  5328  000084                     ___altoft@c:
  5329                           	opt stack 0
  5330  000084                     ___lldiv@quotient:
  5331                           	opt stack 0
  5332  000084                     ___lltoft@c:
  5333                           	opt stack 0
  5334                           
  5335                           ; 4 bytes @ 0x24
  5336  000084                     	ds	1
  5337  000085                     StringContainsCaseInsensitive@tempThat:
  5338                           	opt stack 0
  5339  000085                     GetMemoryChar@H:
  5340                           	opt stack 0
  5341  000085                     ReadCodeButtons@temp:
  5342                           	opt stack 0
  5343  000085                     EnterCommandMode@count:
  5344                           	opt stack 0
  5345  000085                     WaitForIRsignal@timeout:
  5346                           	opt stack 0
  5347  000085                     InternalADC_Read@ADCcounts:
  5348                           	opt stack 0
  5349  000085                     __tdiv_to_l_@quot:
  5350                           	opt stack 0
  5351                           
  5352                           ; 4 bytes @ 0x25
  5353  000085                     	ds	1
  5354  000086                     SetMemoryChar@AddressFirst:
  5355                           	opt stack 0
  5356  000086                     SendRF_wait@Config:
  5357                           	opt stack 0
  5358  000086                     ___awdiv@counter:
  5359                           	opt stack 0
  5360  000086                     __div_to_l_@cntr:
  5361                           	opt stack 0
  5362  000086                     BufferCopy@to:
  5363                           	opt stack 0
  5364  000086                     DecodeNEC@command:
  5365                           	opt stack 0
  5366                           
  5367                           ; 2 bytes @ 0x26
  5368  000086                     	ds	1
  5369  000087                     ??_InternalADC_Read:
  5370  000087                     ?___ftdiv:
  5371                           	opt stack 0
  5372  000087                     SetMemoryChar@Test:
  5373                           	opt stack 0
  5374  000087                     SendRF_wait@size:
  5375                           	opt stack 0
  5376  000087                     ___awdiv@sign:
  5377                           	opt stack 0
  5378  000087                     __div_to_l_@exp1:
  5379                           	opt stack 0
  5380  000087                     ___ftdiv@f1:
  5381                           	opt stack 0
  5382                           
  5383                           ; 3 bytes @ 0x27
  5384  000087                     	ds	1
  5385  000088                     ??_DecodeNEC:
  5386  000088                     ??___altoft:
  5387  000088                     ??___lltoft:
  5388  000088                     BufferCopy@count:
  5389                           	opt stack 0
  5390  000088                     UARTcommandMenu@i:
  5391                           	opt stack 0
  5392  000088                     SetMemoryChar@Data:
  5393                           	opt stack 0
  5394  000088                     SendRF_wait@amount:
  5395                           	opt stack 0
  5396  000088                     ___lldiv@counter:
  5397                           	opt stack 0
  5398  000088                     GetNumber@This:
  5399                           	opt stack 0
  5400  000088                     ___awdiv@quotient:
  5401                           	opt stack 0
  5402  000088                     Reverse_4Byte@temp:
  5403                           	opt stack 0
  5404                           
  5405                           ; 4 bytes @ 0x28
  5406  000088                     	ds	1
  5407  000089                     ?___llmod:
  5408                           	opt stack 0
  5409  000089                     BufferCopy@shift:
  5410                           	opt stack 0
  5411  000089                     UARTcommandMenu@place:
  5412                           	opt stack 0
  5413  000089                     InternalADC_Read@AnaChanSel:
  5414                           	opt stack 0
  5415  000089                     SendRF_Channel@channel:
  5416                           	opt stack 0
  5417  000089                     __tdiv_to_l_@cntr:
  5418                           	opt stack 0
  5419  000089                     ___llmod@dividend:
  5420                           	opt stack 0
  5421                           
  5422                           ; 4 bytes @ 0x29
  5423  000089                     	ds	1
  5424  00008A                     ?___wmul:
  5425                           	opt stack 0
  5426  00008A                     BufferCopy@i:
  5427                           	opt stack 0
  5428  00008A                     GetNumber@CommaNumber:
  5429                           	opt stack 0
  5430  00008A                     InternalADC_Read@channel:
  5431                           	opt stack 0
  5432  00008A                     __tdiv_to_l_@exp1:
  5433                           	opt stack 0
  5434  00008A                     ___wmul@multiplier:
  5435                           	opt stack 0
  5436  00008A                     ___ftdiv@f2:
  5437                           	opt stack 0
  5438                           
  5439                           ; 3 bytes @ 0x2A
  5440  00008A                     	ds	1
  5441  00008B                     GetNumber@result:
  5442                           	opt stack 0
  5443  00008B                     StringAddEqual@Input:
  5444                           	opt stack 0
  5445                           
  5446                           ; 2 bytes @ 0x2B
  5447  00008B                     	ds	1
  5448  00008C                     DecodeNEC@temp2:
  5449                           	opt stack 0
  5450  00008C                     ___altoft@exp:
  5451                           	opt stack 0
  5452  00008C                     ___lltoft@exp:
  5453                           	opt stack 0
  5454  00008C                     ___wmul@multiplicand:
  5455                           	opt stack 0
  5456  00008C                     SendNEC_bytes@code:
  5457                           	opt stack 0
  5458                           
  5459                           ; 4 bytes @ 0x2C
  5460  00008C                     	ds	1
  5461  00008D                     ??___ftdiv:
  5462  00008D                     ??_GetNumber:
  5463  00008D                     ??_StringAddEqual:
  5464  00008D                     DecodeNEC@temp3:
  5465                           	opt stack 0
  5466  00008D                     ___altoft@sign:
  5467                           	opt stack 0
  5468  00008D                     ___llmod@divisor:
  5469                           	opt stack 0
  5470                           
  5471                           ; 4 bytes @ 0x2D
  5472  00008D                     	ds	1
  5473  00008E                     DecodeNEC@temp1:
  5474                           	opt stack 0
  5475  00008E                     ___wmul@product:
  5476                           	opt stack 0
  5477                           
  5478                           ; 2 bytes @ 0x2E
  5479  00008E                     	ds	1
  5480  00008F                     StringAddEqual@NullPosition:
  5481                           	opt stack 0
  5482                           
  5483                           ; 1 bytes @ 0x2F
  5484  00008F                     	ds	1
  5485  000090                     StringAddEqual@firstnumber:
  5486                           	opt stack 0
  5487  000090                     SendNEC_bytes@RepeatAmount:
  5488                           	opt stack 0
  5489  000090                     ___ftdiv@cntr:
  5490                           	opt stack 0
  5491                           
  5492                           ; 1 bytes @ 0x30
  5493  000090                     	ds	1
  5494  000091                     StringAddEqual@i:
  5495                           	opt stack 0
  5496  000091                     ___llmod@counter:
  5497                           	opt stack 0
  5498  000091                     ___ftdiv@f3:
  5499                           	opt stack 0
  5500  000091                     SendNEC_wait@code:
  5501                           	opt stack 0
  5502                           
  5503                           ; 4 bytes @ 0x31
  5504  000091                     	ds	1
  5505  000092                     GetNumber@tempCommaNumber:
  5506                           	opt stack 0
  5507  000092                     StringAddEqual@j:
  5508                           	opt stack 0
  5509                           
  5510                           ; 1 bytes @ 0x32
  5511  000092                     	ds	1
  5512  000093                     GetNumber@negative:
  5513                           	opt stack 0
  5514                           
  5515                           ; 1 bytes @ 0x33
  5516  000093                     	ds	1
  5517  000094                     GetNumber@count:
  5518                           	opt stack 0
  5519  000094                     ___ftdiv@exp:
  5520                           	opt stack 0
  5521                           
  5522                           ; 1 bytes @ 0x34
  5523  000094                     	ds	1
  5524  000095                     GetNumber@Hex:
  5525                           	opt stack 0
  5526  000095                     SendNEC_wait@RepeatAmount:
  5527                           	opt stack 0
  5528  000095                     ___ftdiv@sign:
  5529                           	opt stack 0
  5530                           
  5531                           ; 1 bytes @ 0x35
  5532  000095                     	ds	1
  5533  000096                     ?___ftmul:
  5534                           	opt stack 0
  5535  000096                     GetNumber@i:
  5536                           	opt stack 0
  5537  000096                     SendNEC_wait@toggle:
  5538                           	opt stack 0
  5539  000096                     ___ftmul@f1:
  5540                           	opt stack 0
  5541                           
  5542                           ; 3 bytes @ 0x36
  5543  000096                     	ds	1
  5544  000097                     GetNumber@tempThis:
  5545                           	opt stack 0
  5546                           
  5547                           ; 1 bytes @ 0x37
  5548  000097                     	ds	1
  5549  000098                     GetNumber@temp:
  5550                           	opt stack 0
  5551  000098                     GetMemoryLong@temp:
  5552                           	opt stack 0
  5553  000098                     EncodeNEC@temp1:
  5554                           	opt stack 0
  5555                           
  5556                           ; 4 bytes @ 0x38
  5557  000098                     	ds	1
  5558  000099                     ___ftmul@f2:
  5559                           	opt stack 0
  5560                           
  5561                           ; 3 bytes @ 0x39
  5562  000099                     	ds	3
  5563  00009C                     ??___ftmul:
  5564  00009C                     GetMemoryLong@H:
  5565                           	opt stack 0
  5566  00009C                     EncodeNEC@temp2:
  5567                           	opt stack 0
  5568                           
  5569                           ; 4 bytes @ 0x3C
  5570  00009C                     	ds	1
  5571  00009D                     GetMemoryLong@MH:
  5572                           	opt stack 0
  5573                           
  5574                           ; 1 bytes @ 0x3D
  5575  00009D                     	ds	1
  5576  00009E                     GetMemoryLong@ML:
  5577                           	opt stack 0
  5578                           
  5579                           ; 1 bytes @ 0x3E
  5580  00009E                     	ds	1
  5581  00009F                     GetMemoryLong@L:
  5582                           	opt stack 0
  5583  00009F                     ___ftmul@exp:
  5584                           	opt stack 0
  5585                           
  5586                           ; 1 bytes @ 0x3F
  5587  00009F                     	ds	1
  5588  0000A0                     GetMemoryLong@AddressFirst:
  5589                           	opt stack 0
  5590  0000A0                     ___ftmul@f3_as_product:
  5591                           	opt stack 0
  5592  0000A0                     EncodeNEC@temp3:
  5593                           	opt stack 0
  5594                           
  5595                           ; 4 bytes @ 0x40
  5596  0000A0                     	ds	1
  5597  0000A1                     GetEEPROM@Temp:
  5598                           	opt stack 0
  5599  0000A1                     SetMemoryLong@Data:
  5600                           	opt stack 0
  5601                           
  5602                           ; 4 bytes @ 0x41
  5603  0000A1                     	ds	2
  5604  0000A3                     ??_GetEEPROM:
  5605  0000A3                     ___ftmul@cntr:
  5606                           	opt stack 0
  5607                           
  5608                           ; 1 bytes @ 0x43
  5609  0000A3                     	ds	1
  5610  0000A4                     ___ftmul@sign:
  5611                           	opt stack 0
  5612  0000A4                     EncodeNEC@temp4:
  5613                           	opt stack 0
  5614                           
  5615                           ; 4 bytes @ 0x44
  5616  0000A4                     	ds	1
  5617  0000A5                     ?_ReadVoltage:
  5618                           	opt stack 0
  5619  0000A5                     ?_fround:
  5620                           	opt stack 0
  5621  0000A5                     ?_scale:
  5622                           	opt stack 0
  5623  0000A5                     GetEEPROM@Arrayspot:
  5624                           	opt stack 0
  5625  0000A5                     SetMemoryLong@AddressFirst:
  5626                           	opt stack 0
  5627                           
  5628                           ; 1 bytes @ 0x45
  5629  0000A5                     	ds	1
  5630  0000A6                     ??_SetMemoryLong:
  5631  0000A6                     GetEEPROM@k:
  5632                           	opt stack 0
  5633                           
  5634                           ; 1 bytes @ 0x46
  5635  0000A6                     	ds	1
  5636  0000A7                     GetEEPROM@i:
  5637                           	opt stack 0
  5638                           
  5639                           ; 1 bytes @ 0x47
  5640  0000A7                     	ds	1
  5641  0000A8                     GetEEPROM@j:
  5642                           	opt stack 0
  5643  0000A8                     EncodeNEC@address:
  5644                           	opt stack 0
  5645  0000A8                     ReadVoltage@voltage:
  5646                           	opt stack 0
  5647  0000A8                     _fround$3808:
  5648                           	opt stack 0
  5649  0000A8                     _scale$3809:
  5650                           	opt stack 0
  5651                           
  5652                           ; 3 bytes @ 0x48
  5653  0000A8                     	ds	1
  5654  0000A9                     ??_SyncEEPROMToGlobal:
  5655                           
  5656                           ; 0 bytes @ 0x49
  5657  0000A9                     	ds	1
  5658  0000AA                     SetMemoryLong@Test:
  5659                           	opt stack 0
  5660                           
  5661                           ; 4 bytes @ 0x4A
  5662  0000AA                     	ds	1
  5663  0000AB                     scale@scl:
  5664                           	opt stack 0
  5665  0000AB                     ReadVoltage@temp:
  5666                           	opt stack 0
  5667  0000AB                     _fround$3807:
  5668                           	opt stack 0
  5669                           
  5670                           ; 3 bytes @ 0x4B
  5671  0000AB                     	ds	3
  5672  0000AE                     SetMemoryLong@H:
  5673                           	opt stack 0
  5674  0000AE                     fround@prec:
  5675                           	opt stack 0
  5676                           
  5677                           ; 1 bytes @ 0x4E
  5678  0000AE                     	ds	1
  5679  0000AF                     ?___ftadd:
  5680                           	opt stack 0
  5681  0000AF                     SetMemoryLong@MH:
  5682                           	opt stack 0
  5683  0000AF                     ___ftadd@f1:
  5684                           	opt stack 0
  5685                           
  5686                           ; 3 bytes @ 0x4F
  5687  0000AF                     	ds	1
  5688  0000B0                     SetMemoryLong@ML:
  5689                           	opt stack 0
  5690                           
  5691                           ; 1 bytes @ 0x50
  5692  0000B0                     	ds	1
  5693  0000B1                     SetMemoryLong@L:
  5694                           	opt stack 0
  5695                           
  5696                           ; 1 bytes @ 0x51
  5697  0000B1                     	ds	1
  5698  0000B2                     ??_SetEEPROM:
  5699  0000B2                     ___ftadd@f2:
  5700                           	opt stack 0
  5701                           
  5702                           ; 3 bytes @ 0x52
  5703  0000B2                     	ds	2
  5704  0000B4                     SetEEPROM@fail:
  5705                           	opt stack 0
  5706                           
  5707                           ; 4 bytes @ 0x54
  5708  0000B4                     	ds	1
  5709  0000B5                     ??___ftadd:
  5710                           
  5711                           ; 0 bytes @ 0x55
  5712  0000B5                     	ds	3
  5713  0000B8                     SetEEPROM@temp:
  5714                           	opt stack 0
  5715  0000B8                     ___ftadd@sign:
  5716                           	opt stack 0
  5717                           
  5718                           ; 1 bytes @ 0x58
  5719  0000B8                     	ds	1
  5720  0000B9                     SetEEPROM@Arrayspot:
  5721                           	opt stack 0
  5722  0000B9                     ___ftadd@exp2:
  5723                           	opt stack 0
  5724                           
  5725                           ; 1 bytes @ 0x59
  5726  0000B9                     	ds	1
  5727  0000BA                     SetEEPROM@k:
  5728                           	opt stack 0
  5729  0000BA                     ___ftadd@exp1:
  5730                           	opt stack 0
  5731                           
  5732                           ; 1 bytes @ 0x5A
  5733  0000BA                     	ds	1
  5734  0000BB                     ?___ftsub:
  5735                           	opt stack 0
  5736  0000BB                     ?___fttol:
  5737                           	opt stack 0
  5738  0000BB                     SetEEPROM@i:
  5739                           	opt stack 0
  5740  0000BB                     ___ftsub@f1:
  5741                           	opt stack 0
  5742  0000BB                     ___fttol@f1:
  5743                           	opt stack 0
  5744                           
  5745                           ; 3 bytes @ 0x5B
  5746  0000BB                     	ds	1
  5747  0000BC                     SetEEPROM@j:
  5748                           	opt stack 0
  5749                           
  5750                           ; 1 bytes @ 0x5C
  5751  0000BC                     	ds	1
  5752  0000BD                     ??_SetEEPROMdefault:
  5753  0000BD                     UseIRCode@Code:
  5754                           	opt stack 0
  5755                           
  5756                           ; 2 bytes @ 0x5D
  5757  0000BD                     	ds	1
  5758  0000BE                     ___ftsub@f2:
  5759                           	opt stack 0
  5760                           
  5761                           ; 3 bytes @ 0x5E
  5762  0000BE                     	ds	1
  5763  0000BF                     ??___fttol:
  5764  0000BF                     SetEEPROMdefault@k:
  5765                           	opt stack 0
  5766  0000BF                     UseIRCode@NEC:
  5767                           	opt stack 0
  5768                           
  5769                           ; 4 bytes @ 0x5F
  5770  0000BF                     	ds	1
  5771  0000C0                     SetEEPROMdefault@i:
  5772                           	opt stack 0
  5773                           
  5774                           ; 1 bytes @ 0x60
  5775  0000C0                     	ds	1
  5776  0000C1                     SetEEPROMdefault@j:
  5777                           	opt stack 0
  5778                           
  5779                           ; 1 bytes @ 0x61
  5780  0000C1                     	ds	2
  5781  0000C3                     ??_UseIRCode:
  5782                           
  5783                           ; 0 bytes @ 0x63
  5784  0000C3                     	ds	1
  5785  0000C4                     ___fttol@sign1:
  5786                           	opt stack 0
  5787                           
  5788                           ; 1 bytes @ 0x64
  5789  0000C4                     	ds	1
  5790  0000C5                     ___fttol@lval:
  5791                           	opt stack 0
  5792                           
  5793                           ; 4 bytes @ 0x65
  5794  0000C5                     	ds	1
  5795  0000C6                     UseIRCode@found:
  5796                           	opt stack 0
  5797                           
  5798                           ; 1 bytes @ 0x66
  5799  0000C6                     	ds	1
  5800  0000C7                     UseIRCode@j:
  5801                           	opt stack 0
  5802                           
  5803                           ; 1 bytes @ 0x67
  5804  0000C7                     	ds	1
  5805  0000C8                     UseIRCode@i:
  5806                           	opt stack 0
  5807                           
  5808                           ; 1 bytes @ 0x68
  5809  0000C8                     	ds	1
  5810  0000C9                     ___fttol@exp1:
  5811                           	opt stack 0
  5812                           
  5813                           ; 1 bytes @ 0x69
  5814  0000C9                     	ds	1
  5815  0000CA                     ?_sprintf:
  5816                           	opt stack 0
  5817  0000CA                     ?_Round:
  5818                           	opt stack 0
  5819  0000CA                     sprintf@sp:
  5820                           	opt stack 0
  5821  0000CA                     Round@input:
  5822                           	opt stack 0
  5823                           
  5824                           ; 3 bytes @ 0x6A
  5825  0000CA                     	ds	2
  5826  0000CC                     sprintf@f:
  5827                           	opt stack 0
  5828                           
  5829                           ; 2 bytes @ 0x6C
  5830  0000CC                     	ds	1
  5831  0000CD                     Round@temp:
  5832                           	opt stack 0
  5833                           
  5834                           ; 4 bytes @ 0x6D
  5835  0000CD                     	ds	4
  5836  0000D1                     InitUART@Baud:
  5837                           	opt stack 0
  5838                           
  5839                           ; 4 bytes @ 0x71
  5840  0000D1                     	ds	4
  5841  0000D5                     ??_InitUART:
  5842                           
  5843                           ; 0 bytes @ 0x75
  5844  0000D5                     	ds	3
  5845  0000D8                     
  5846                           ; 0 bytes @ 0x78
  5847  0000D8                     	ds	1
  5848  0000D9                     main@ConnectedOLD:
  5849                           	opt stack 0
  5850                           
  5851                           ; 1 bytes @ 0x79
  5852  0000D9                     	ds	1
  5853                           tblptru	equ	0xFF8
  5854                           tblptrh	equ	0xFF7
  5855                           tblptrl	equ	0xFF6
  5856                           tablat	equ	0xFF5
  5857                           postinc0	equ	0xFEE
  5858                           wreg	equ	0xFE8
  5859                           postdec1	equ	0xFE5
  5860                           fsr1h	equ	0xFE2
  5861                           fsr1l	equ	0xFE1
  5862                           
  5863                           	psect	cstackCOMRAM
  5864  000001                     __pcstackCOMRAM:
  5865                           	opt stack 0
  5866  000001                     IsCharacter@data:
  5867                           	opt stack 0
  5868  000001                     i1UARTchar@data:
  5869                           	opt stack 0
  5870  000001                     i1ReadUSART@data:
  5871                           	opt stack 0
  5872  000001                     i1cleanBuffer@data:
  5873                           	opt stack 0
  5874                           
  5875                           ; 2 bytes @ 0x0
  5876  000001                     	ds	1
  5877  000002                     EraseScreen@characters:
  5878                           	opt stack 0
  5879  000002                     i1UARTstring@data:
  5880                           	opt stack 0
  5881                           
  5882                           ; 2 bytes @ 0x1
  5883  000002                     	ds	1
  5884  000003                     EraseScreen@i:
  5885                           	opt stack 0
  5886  000003                     i1cleanBuffer@count:
  5887                           	opt stack 0
  5888                           
  5889                           ; 2 bytes @ 0x2
  5890  000003                     	ds	1
  5891  000004                     i1UARTstringCRLN@data:
  5892                           	opt stack 0
  5893                           
  5894                           ; 2 bytes @ 0x3
  5895  000004                     	ds	1
  5896  000005                     ??i1_cleanBuffer:
  5897                           
  5898                           ; 0 bytes @ 0x4
  5899  000005                     	ds	1
  5900  000006                     
  5901                           ; 0 bytes @ 0x5
  5902  000006                     	ds	2
  5903  000008                     i1cleanBuffer@i:
  5904                           	opt stack 0
  5905                           
  5906                           ; 1 bytes @ 0x7
  5907  000008                     	ds	1
  5908  000009                     ??_low_isr:
  5909                           
  5910                           ; 0 bytes @ 0x8
  5911  000009                     	ds	17
  5912  00001A                     low_isr@data:
  5913                           	opt stack 0
  5914                           
  5915                           ; 1 bytes @ 0x19
  5916  00001A                     	ds	1
  5917  00001B                     SetTimer0@temp:
  5918                           	opt stack 0
  5919  00001B                     IRrawToNEC@Raw:
  5920                           	opt stack 0
  5921  00001B                     i2cleanBuffer16bit@data:
  5922                           	opt stack 0
  5923                           
  5924                           ; 2 bytes @ 0x1A
  5925  00001B                     	ds	2
  5926  00001D                     IRrawToNEC@NEC:
  5927                           	opt stack 0
  5928  00001D                     i2cleanBuffer16bit@count:
  5929                           	opt stack 0
  5930                           
  5931                           ; 2 bytes @ 0x1C
  5932  00001D                     	ds	2
  5933  00001F                     ??i2_cleanBuffer16bit:
  5934  00001F                     IRrawToNEC@Invert:
  5935                           	opt stack 0
  5936                           
  5937                           ; 1 bytes @ 0x1E
  5938  00001F                     	ds	1
  5939  000020                     ??_IRrawToNEC:
  5940                           
  5941                           ; 0 bytes @ 0x1F
  5942  000020                     	ds	2
  5943  000022                     i2cleanBuffer16bit@i:
  5944                           	opt stack 0
  5945                           
  5946                           ; 1 bytes @ 0x21
  5947  000022                     	ds	1
  5948                           tblptru	equ	0xFF8
  5949                           tblptrh	equ	0xFF7
  5950                           tblptrl	equ	0xFF6
  5951                           tablat	equ	0xFF5
  5952                           postinc0	equ	0xFEE
  5953                           wreg	equ	0xFE8
  5954                           postdec1	equ	0xFE5
  5955                           fsr1h	equ	0xFE2
  5956                           fsr1l	equ	0xFE1
  5957                           
  5958 ;;
  5959 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5960 ;;
  5961 ;; *************** function _main *****************
  5962 ;; Defined at:
  5963 ;;		line 74 in file "main.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;		None
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  BluetoothStr  255    0[BANK3 ] unsigned char [255]
  5968 ;;  i               1  152[BANK2 ] unsigned char 
  5969 ;;  VoltageStatu    1  151[BANK2 ] unsigned char 
  5970 ;;  Connected       1  150[BANK2 ] unsigned char 
  5971 ;;  BluetoothStr    1  149[BANK2 ] unsigned char 
  5972 ;;  Bluetoothtas    1  148[BANK2 ] unsigned char 
  5973 ;;  IRtask          1  147[BANK2 ] unsigned char 
  5974 ;;  ConnectedOLD    1  121[BANK0 ] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;		None               void
  5977 ;; Registers used:
  5978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5985 ;;      Locals:         0       1       0       6     255       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;      Totals:         0       1       0       6     255       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5988 ;;Total ram usage:      262 bytes
  5989 ;; Hardware stack levels required when called:   14
  5990 ;; This function calls:
  5991 ;;		_BlueConnected
  5992 ;;		_BufferCopy
  5993 ;;		_ClearUSART
  5994 ;;		_ConfigureOscillator
  5995 ;;		_InitApp
  5996 ;;		_Init_System
  5997 ;;		_ReadIRpin
  5998 ;;		_ReadVoltage
  5999 ;;		_UARTchar
  6000 ;;		_UARTstring
  6001 ;;		_UARTstringCRLN
  6002 ;;		_UseBluetooth
  6003 ;;		_UseIRCode
  6004 ;;		___ftadd
  6005 ;;		___ftge
  6006 ;;		___ftsub
  6007 ;;		_cleanBuffer
  6008 ;;		_delayUS
  6009 ;; This function is called by:
  6010 ;;		Startup code after reset
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text0
  6015  00510C                     __ptext0:
  6016                           	opt stack 0
  6017  00510C                     _main:
  6018                           	opt stack 17
  6019                           
  6020                           ;main.c: 76: unsigned char i=0;
  6021                           
  6022                           ;incstack = 0
  6023  00510C  0E00               	movlw	0
  6024  00510E  0102               	movlb	2	; () banked
  6025  005110  6F98               	movwf	main@i& (0+255),b
  6026                           
  6027                           ;main.c: 77: unsigned char IRtask = 0;
  6028  005112  0E00               	movlw	0
  6029  005114  0102               	movlb	2	; () banked
  6030  005116  6F93               	movwf	main@IRtask& (0+255),b
  6031                           
  6032                           ;main.c: 78: unsigned char Bluetoothtask = 0;
  6033  005118  0E00               	movlw	0
  6034  00511A  0102               	movlb	2	; () banked
  6035  00511C  6F94               	movwf	main@Bluetoothtask& (0+255),b
  6036                           
  6037                           ;main.c: 79: unsigned char VoltageStatus = 1;
  6038  00511E  0E01               	movlw	1
  6039  005120  0102               	movlb	2	; () banked
  6040  005122  6F97               	movwf	main@VoltageStatus& (0+255),b
  6041                           
  6042                           ;main.c: 80: unsigned char BluetoothString[255];
  6043                           ;main.c: 81: unsigned char BluetoothStringPos = 0;
  6044  005124  0E00               	movlw	0
  6045  005126  0102               	movlb	2	; () banked
  6046  005128  6F95               	movwf	main@BluetoothStringPos& (0+255),b
  6047                           
  6048                           ; BSR set to: 2
  6049                           ;main.c: 82: unsigned char Connected, ConnectedOLD;
  6050                           ;main.c: 85: ConfigureOscillator();
  6051  00512A  ECE1  F04A         	call	_ConfigureOscillator	;wreg free
  6052                           
  6053                           ;main.c: 86: InitApp();
  6054  00512E  EC3F  F048         	call	_InitApp	;wreg free
  6055                           
  6056                           ;main.c: 87: Init_System();
  6057  005132  EC64  F045         	call	_Init_System	;wreg free
  6058                           
  6059                           ;main.c: 89: BatteryVoltage = ReadVoltage();
  6060  005136  EC4F  F040         	call	_ReadVoltage	;wreg free
  6061  00513A  C0A5  F2E3         	movff	?_ReadVoltage,_BatteryVoltage
  6062  00513E  C0A6  F2E4         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  6063  005142  C0A7  F2E5         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  6064                           
  6065                           ;main.c: 90: if(BatteryVoltage < 3.7 )
  6066  005146  C2E3  F07C         	movff	_BatteryVoltage,___ftge@ff1
  6067  00514A  C2E4  F07D         	movff	_BatteryVoltage+1,___ftge@ff1+1
  6068  00514E  C2E5  F07E         	movff	_BatteryVoltage+2,___ftge@ff1+2
  6069  005152  0ECD               	movlw	205
  6070  005154  0100               	movlb	0	; () banked
  6071  005156  6F7F               	movwf	___ftge@ff2& (0+255),b
  6072  005158  0E6C               	movlw	108
  6073  00515A  0100               	movlb	0	; () banked
  6074  00515C  6F80               	movwf	(___ftge@ff2+1)& (0+255),b
  6075  00515E  0E40               	movlw	64
  6076  005160  0100               	movlb	0	; () banked
  6077  005162  6F81               	movwf	(___ftge@ff2+2)& (0+255),b
  6078  005164  ECC1  F03E         	call	___ftge	;wreg free
  6079  005168  0100               	movlb	0	; () banked
  6080  00516A  B0D8               	btfsc	status,0,c
  6081  00516C  D002               	goto	l16228
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;main.c: 91: {
  6085                           ;main.c: 92: VoltageStatus = 34;
  6086  00516E  0E22               	movlw	34
  6087  005170  D015               	goto	L1
  6088  005172                     l16228:
  6089                           
  6090                           ;main.c: 94: else if (BatteryVoltage > 30.0)
  6091  005172  0E00               	movlw	0
  6092  005174  0100               	movlb	0	; () banked
  6093  005176  6F7C               	movwf	___ftge@ff1& (0+255),b
  6094  005178  0EF0               	movlw	240
  6095  00517A  0100               	movlb	0	; () banked
  6096  00517C  6F7D               	movwf	(___ftge@ff1+1)& (0+255),b
  6097  00517E  0E41               	movlw	65
  6098  005180  0100               	movlb	0	; () banked
  6099  005182  6F7E               	movwf	(___ftge@ff1+2)& (0+255),b
  6100  005184  C2E3  F07F         	movff	_BatteryVoltage,___ftge@ff2
  6101  005188  C2E4  F080         	movff	_BatteryVoltage+1,___ftge@ff2+1
  6102  00518C  C2E5  F081         	movff	_BatteryVoltage+2,___ftge@ff2+2
  6103  005190  ECC1  F03E         	call	___ftge	;wreg free
  6104  005194  0100               	movlb	0	; () banked
  6105  005196  B0D8               	btfsc	status,0,c
  6106  005198  D004               	goto	l16232
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;main.c: 95: {
  6110                           ;main.c: 96: VoltageStatus = 98;
  6111  00519A  0E62               	movlw	98
  6112  00519C                     L1:
  6113  00519C  0102               	movlb	2	; () banked
  6114  00519E  6F97               	movwf	main@VoltageStatus& (0+255),b
  6115                           
  6116                           ; BSR set to: 2
  6117  0051A0  D000               	goto	l16232
  6118  0051A2                     l16232:
  6119                           
  6120                           ;main.c: 97: }
  6121                           ;main.c: 98: if(VoltageStatus == 1)
  6122  0051A2  0102               	movlb	2	; () banked
  6123  0051A4  0597               	decf	main@VoltageStatus& (0+255),w,b
  6124  0051A6  A4D8               	btfss	status,2,c
  6125  0051A8  D027               	goto	l16254
  6126                           
  6127                           ; BSR set to: 2
  6128                           ;main.c: 99: {
  6129                           ;main.c: 101: for(i =0;i<10;i++)
  6130  0051AA  0E00               	movlw	0
  6131  0051AC  0102               	movlb	2	; () banked
  6132  0051AE  6F98               	movwf	main@i& (0+255),b
  6133  0051B0                     l16236:
  6134                           
  6135                           ; BSR set to: 2
  6136  0051B0  0E09               	movlw	9
  6137  0051B2  0102               	movlb	2	; () banked
  6138  0051B4  6598               	cpfsgt	main@i& (0+255),b
  6139  0051B6  D001               	goto	l16240
  6140                           
  6141                           ; BSR set to: 2
  6142  0051B8  D01D               	goto	l16252
  6143  0051BA                     l16240:
  6144                           
  6145                           ; BSR set to: 2
  6146                           ;main.c: 102: {
  6147                           ;main.c: 103: (LATC |= 0x02);
  6148  0051BA  828B               	bsf	3979,1,c	;volatile
  6149                           
  6150                           ;main.c: 104: (LATC &= ~0x04);
  6151  0051BC  948B               	bcf	3979,2,c	;volatile
  6152                           
  6153                           ; BSR set to: 2
  6154                           ;main.c: 105: delayUS(50000);
  6155  0051BE  0E50               	movlw	80
  6156  0051C0  0100               	movlb	0	; () banked
  6157  0051C2  6F7C               	movwf	delayUS@US& (0+255),b
  6158  0051C4  0EC3               	movlw	195
  6159  0051C6  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6160  0051C8  0E00               	movlw	0
  6161  0051CA  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6162  0051CC  0E00               	movlw	0
  6163  0051CE  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6164  0051D0  EC7B  F047         	call	_delayUS	;wreg free
  6165                           
  6166                           ;main.c: 106: (LATC &= ~0x02);
  6167  0051D4  928B               	bcf	3979,1,c	;volatile
  6168                           
  6169                           ;main.c: 107: (LATC |= 0x04);
  6170  0051D6  848B               	bsf	3979,2,c	;volatile
  6171                           
  6172                           ;main.c: 108: delayUS(50000);
  6173  0051D8  0E50               	movlw	80
  6174  0051DA  0100               	movlb	0	; () banked
  6175  0051DC  6F7C               	movwf	delayUS@US& (0+255),b
  6176  0051DE  0EC3               	movlw	195
  6177  0051E0  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6178  0051E2  0E00               	movlw	0
  6179  0051E4  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6180  0051E6  0E00               	movlw	0
  6181  0051E8  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6182  0051EA  EC7B  F047         	call	_delayUS	;wreg free
  6183  0051EE  0102               	movlb	2	; () banked
  6184  0051F0  2B98               	incf	main@i& (0+255),f,b
  6185  0051F2  D7DE               	goto	l16236
  6186  0051F4                     l16252:
  6187                           
  6188                           ; BSR set to: 2
  6189                           ;main.c: 109: }
  6190                           ;main.c: 110: (LATC &= ~0x04);
  6191  0051F4  948B               	bcf	3979,2,c	;volatile
  6192                           
  6193                           ;main.c: 111: }
  6194  0051F6  D024               	goto	l142
  6195  0051F8                     l16254:
  6196                           
  6197                           ; BSR set to: 2
  6198                           ;main.c: 112: else
  6199                           ;main.c: 113: {
  6200                           ;main.c: 114: for(i =0;i<10;i++)
  6201  0051F8  0E00               	movlw	0
  6202  0051FA  0102               	movlb	2	; () banked
  6203  0051FC  6F98               	movwf	main@i& (0+255),b
  6204  0051FE                     l16256:
  6205                           
  6206                           ; BSR set to: 2
  6207  0051FE  0E09               	movlw	9
  6208  005200  0102               	movlb	2	; () banked
  6209  005202  6598               	cpfsgt	main@i& (0+255),b
  6210  005204  D001               	goto	l16260
  6211                           
  6212                           ; BSR set to: 2
  6213  005206  D01C               	goto	l142
  6214  005208                     l16260:
  6215                           
  6216                           ; BSR set to: 2
  6217                           ;main.c: 115: {
  6218                           ;main.c: 116: (LATC |= 0x02);
  6219  005208  828B               	bsf	3979,1,c	;volatile
  6220                           
  6221                           ; BSR set to: 2
  6222                           ;main.c: 117: delayUS(100000);
  6223  00520A  0EA0               	movlw	160
  6224  00520C  0100               	movlb	0	; () banked
  6225  00520E  6F7C               	movwf	delayUS@US& (0+255),b
  6226  005210  0E86               	movlw	134
  6227  005212  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6228  005214  0E01               	movlw	1
  6229  005216  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6230  005218  0E00               	movlw	0
  6231  00521A  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6232  00521C  EC7B  F047         	call	_delayUS	;wreg free
  6233                           
  6234                           ;main.c: 118: (LATC &= ~0x02);
  6235  005220  928B               	bcf	3979,1,c	;volatile
  6236                           
  6237                           ;main.c: 119: delayUS(100000);
  6238  005222  0EA0               	movlw	160
  6239  005224  0100               	movlb	0	; () banked
  6240  005226  6F7C               	movwf	delayUS@US& (0+255),b
  6241  005228  0E86               	movlw	134
  6242  00522A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6243  00522C  0E01               	movlw	1
  6244  00522E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6245  005230  0E00               	movlw	0
  6246  005232  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6247  005234  EC7B  F047         	call	_delayUS	;wreg free
  6248  005238  0102               	movlb	2	; () banked
  6249  00523A  2B98               	incf	main@i& (0+255),f,b
  6250  00523C  D7E0               	goto	l16256
  6251                           
  6252                           ; BSR set to: 2
  6253                           
  6254                           ; BSR set to: 2
  6255  00523E  D000               	goto	l142
  6256  005240                     l142:
  6257                           
  6258                           ;main.c: 124: {
  6259                           ;main.c: 125: IRtask = IR_New_Code;
  6260  005240  C0E1  F293         	movff	_IR_New_Code,main@IRtask
  6261                           
  6262                           ;main.c: 126: Bluetoothtask = NewReceivedString;
  6263  005244  C0DB  F294         	movff	_NewReceivedString,main@Bluetoothtask	;volatile
  6264                           
  6265                           ;main.c: 127: BatteryVoltage = ReadVoltage();
  6266  005248  EC4F  F040         	call	_ReadVoltage	;wreg free
  6267  00524C  C0A5  F2E3         	movff	?_ReadVoltage,_BatteryVoltage
  6268  005250  C0A6  F2E4         	movff	?_ReadVoltage+1,_BatteryVoltage+1
  6269  005254  C0A7  F2E5         	movff	?_ReadVoltage+2,_BatteryVoltage+2
  6270                           
  6271                           ;main.c: 128: if(VoltageStatus == 34)
  6272  005258  0E22               	movlw	34
  6273  00525A  0102               	movlb	2	; () banked
  6274  00525C  1997               	xorwf	main@VoltageStatus& (0+255),w,b
  6275  00525E  A4D8               	btfss	status,2,c
  6276  005260  D018               	goto	l16276
  6277                           
  6278                           ; BSR set to: 2
  6279                           ;main.c: 129: {
  6280                           ;main.c: 131: BatteryVoltage -= 0.5;
  6281  005262  C2E3  F0BB         	movff	_BatteryVoltage,___ftsub@f1
  6282  005266  C2E4  F0BC         	movff	_BatteryVoltage+1,___ftsub@f1+1
  6283  00526A  C2E5  F0BD         	movff	_BatteryVoltage+2,___ftsub@f1+2
  6284  00526E  0E00               	movlw	0
  6285  005270  0100               	movlb	0	; () banked
  6286  005272  6FBE               	movwf	___ftsub@f2& (0+255),b
  6287  005274  0E00               	movlw	0
  6288  005276  0100               	movlb	0	; () banked
  6289  005278  6FBF               	movwf	(___ftsub@f2+1)& (0+255),b
  6290  00527A  0E3F               	movlw	63
  6291  00527C  0100               	movlb	0	; () banked
  6292  00527E  6FC0               	movwf	(___ftsub@f2+2)& (0+255),b
  6293  005280  ECD0  F047         	call	___ftsub	;wreg free
  6294  005284  C0BB  F2E3         	movff	?___ftsub,_BatteryVoltage
  6295  005288  C0BC  F2E4         	movff	?___ftsub+1,_BatteryVoltage+1
  6296  00528C  C0BD  F2E5         	movff	?___ftsub+2,_BatteryVoltage+2
  6297                           
  6298                           ;main.c: 132: }
  6299  005290  D01D               	goto	l144
  6300  005292                     l16276:
  6301                           
  6302                           ;main.c: 133: else if(VoltageStatus == 98)
  6303  005292  0E62               	movlw	98
  6304  005294  0102               	movlb	2	; () banked
  6305  005296  1997               	xorwf	main@VoltageStatus& (0+255),w,b
  6306  005298  A4D8               	btfss	status,2,c
  6307  00529A  D018               	goto	l144
  6308                           
  6309                           ; BSR set to: 2
  6310                           ;main.c: 134: {
  6311                           ;main.c: 136: BatteryVoltage += 0.5;
  6312  00529C  C2E3  F0AF         	movff	_BatteryVoltage,___ftadd@f1
  6313  0052A0  C2E4  F0B0         	movff	_BatteryVoltage+1,___ftadd@f1+1
  6314  0052A4  C2E5  F0B1         	movff	_BatteryVoltage+2,___ftadd@f1+2
  6315  0052A8  0E00               	movlw	0
  6316  0052AA  0100               	movlb	0	; () banked
  6317  0052AC  6FB2               	movwf	___ftadd@f2& (0+255),b
  6318  0052AE  0E00               	movlw	0
  6319  0052B0  0100               	movlb	0	; () banked
  6320  0052B2  6FB3               	movwf	(___ftadd@f2+1)& (0+255),b
  6321  0052B4  0E3F               	movlw	63
  6322  0052B6  0100               	movlb	0	; () banked
  6323  0052B8  6FB4               	movwf	(___ftadd@f2+2)& (0+255),b
  6324  0052BA  ECBD  F02D         	call	___ftadd	;wreg free
  6325  0052BE  C0AF  F2E3         	movff	?___ftadd,_BatteryVoltage
  6326  0052C2  C0B0  F2E4         	movff	?___ftadd+1,_BatteryVoltage+1
  6327  0052C6  C0B1  F2E5         	movff	?___ftadd+2,_BatteryVoltage+2
  6328  0052CA  D000               	goto	l144
  6329  0052CC                     l144:
  6330                           
  6331                           ;main.c: 137: }
  6332                           ;main.c: 139: if(BatteryVoltage < 3.7 )
  6333  0052CC  C2E3  F07C         	movff	_BatteryVoltage,___ftge@ff1
  6334  0052D0  C2E4  F07D         	movff	_BatteryVoltage+1,___ftge@ff1+1
  6335  0052D4  C2E5  F07E         	movff	_BatteryVoltage+2,___ftge@ff1+2
  6336  0052D8  0ECD               	movlw	205
  6337  0052DA  0100               	movlb	0	; () banked
  6338  0052DC  6F7F               	movwf	___ftge@ff2& (0+255),b
  6339  0052DE  0E6C               	movlw	108
  6340  0052E0  0100               	movlb	0	; () banked
  6341  0052E2  6F80               	movwf	(___ftge@ff2+1)& (0+255),b
  6342  0052E4  0E40               	movlw	64
  6343  0052E6  0100               	movlb	0	; () banked
  6344  0052E8  6F81               	movwf	(___ftge@ff2+2)& (0+255),b
  6345  0052EA  ECC1  F03E         	call	___ftge	;wreg free
  6346  0052EE  0100               	movlb	0	; () banked
  6347  0052F0  B0D8               	btfsc	status,0,c
  6348  0052F2  D002               	goto	l16282
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;main.c: 140: {
  6352                           ;main.c: 141: VoltageStatus = 34;
  6353  0052F4  0E22               	movlw	34
  6354  0052F6  D017               	goto	L3
  6355  0052F8                     l16282:
  6356                           
  6357                           ;main.c: 143: else if(BatteryVoltage > 30.0)
  6358  0052F8  0E00               	movlw	0
  6359  0052FA  0100               	movlb	0	; () banked
  6360  0052FC  6F7C               	movwf	___ftge@ff1& (0+255),b
  6361  0052FE  0EF0               	movlw	240
  6362  005300  0100               	movlb	0	; () banked
  6363  005302  6F7D               	movwf	(___ftge@ff1+1)& (0+255),b
  6364  005304  0E41               	movlw	65
  6365  005306  0100               	movlb	0	; () banked
  6366  005308  6F7E               	movwf	(___ftge@ff1+2)& (0+255),b
  6367  00530A  C2E3  F07F         	movff	_BatteryVoltage,___ftge@ff2
  6368  00530E  C2E4  F080         	movff	_BatteryVoltage+1,___ftge@ff2+1
  6369  005312  C2E5  F081         	movff	_BatteryVoltage+2,___ftge@ff2+2
  6370  005316  ECC1  F03E         	call	___ftge	;wreg free
  6371  00531A  0100               	movlb	0	; () banked
  6372  00531C  B0D8               	btfsc	status,0,c
  6373  00531E  D002               	goto	l16286
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;main.c: 144: {
  6377                           ;main.c: 145: VoltageStatus = 98;
  6378  005320  0E62               	movlw	98
  6379  005322  D001               	goto	L3
  6380  005324                     l16286:
  6381                           
  6382                           ;main.c: 147: else
  6383                           ;main.c: 148: {
  6384                           ;main.c: 149: VoltageStatus = 1;
  6385  005324  0E01               	movlw	1
  6386  005326                     L3:
  6387  005326  0102               	movlb	2	; () banked
  6388  005328  6F97               	movwf	main@VoltageStatus& (0+255),b
  6389  00532A  D000               	goto	l147
  6390  00532C                     l147:
  6391                           
  6392                           ; BSR set to: 2
  6393                           ;main.c: 150: }
  6394                           ;main.c: 152: if(IRtask && IR_NEC)
  6395  00532C  0102               	movlb	2	; () banked
  6396  00532E  5193               	movf	main@IRtask& (0+255),w,b
  6397  005330  0102               	movlb	2	; () banked
  6398  005332  B4D8               	btfsc	status,2,c
  6399  005334  D01B               	goto	l16292
  6400                           
  6401                           ; BSR set to: 2
  6402  005336  0100               	movlb	0	; () banked
  6403  005338  51DD               	movf	_IR_NEC& (0+255),w,b
  6404  00533A  0100               	movlb	0	; () banked
  6405  00533C  11DE               	iorwf	(_IR_NEC+1)& (0+255),w,b
  6406  00533E  0100               	movlb	0	; () banked
  6407  005340  11DF               	iorwf	(_IR_NEC+2)& (0+255),w,b
  6408  005342  0100               	movlb	0	; () banked
  6409  005344  11E0               	iorwf	(_IR_NEC+3)& (0+255),w,b
  6410  005346  B4D8               	btfsc	status,2,c
  6411  005348  D011               	goto	l16292
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;main.c: 153: {
  6415                           ;main.c: 154: UseIRCode(&IR_New_Code, IR_NEC);
  6416  00534A  0EE1               	movlw	low _IR_New_Code
  6417  00534C  0100               	movlb	0	; () banked
  6418  00534E  6FBD               	movwf	UseIRCode@Code& (0+255),b
  6419  005350  0E00               	movlw	high _IR_New_Code
  6420  005352  0100               	movlb	0	; () banked
  6421  005354  6FBE               	movwf	(UseIRCode@Code+1)& (0+255),b
  6422  005356  C0DD  F0BF         	movff	_IR_NEC,UseIRCode@NEC
  6423  00535A  C0DE  F0C0         	movff	_IR_NEC+1,UseIRCode@NEC+1
  6424  00535E  C0DF  F0C1         	movff	_IR_NEC+2,UseIRCode@NEC+2
  6425  005362  C0E0  F0C2         	movff	_IR_NEC+3,UseIRCode@NEC+3
  6426  005366  ECFC  F02E         	call	_UseIRCode	;wreg free
  6427  00536A  D000               	goto	l16292
  6428  00536C                     l16292:
  6429                           
  6430                           ;main.c: 155: }
  6431                           ;main.c: 157: Connected = BlueConnected();
  6432  00536C  EC9D  F04A         	call	_BlueConnected	;wreg free
  6433  005370  0102               	movlb	2	; () banked
  6434  005372  6F96               	movwf	main@Connected& (0+255),b
  6435                           
  6436                           ; BSR set to: 2
  6437                           ;main.c: 158: if(Connected != ConnectedOLD)
  6438  005374  0100               	movlb	0	; () banked
  6439  005376  51D9               	movf	main@ConnectedOLD& (0+255),w,b
  6440  005378  0102               	movlb	2	; () banked
  6441  00537A  1996               	xorwf	main@Connected& (0+255),w,b
  6442  00537C  B4D8               	btfsc	status,2,c
  6443  00537E  D024               	goto	l16306
  6444                           
  6445                           ; BSR set to: 2
  6446                           ;main.c: 159: {
  6447                           ;main.c: 160: if(Connected)
  6448  005380  0102               	movlb	2	; () banked
  6449  005382  5196               	movf	main@Connected& (0+255),w,b
  6450  005384  0102               	movlb	2	; () banked
  6451  005386  B4D8               	btfsc	status,2,c
  6452  005388  D01F               	goto	l16306
  6453                           
  6454                           ; BSR set to: 2
  6455                           ;main.c: 161: {
  6456                           ;main.c: 162: delayUS(1000);
  6457  00538A  0EE8               	movlw	232
  6458  00538C  0100               	movlb	0	; () banked
  6459  00538E  6F7C               	movwf	delayUS@US& (0+255),b
  6460  005390  0E03               	movlw	3
  6461  005392  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6462  005394  0E00               	movlw	0
  6463  005396  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6464  005398  0E00               	movlw	0
  6465  00539A  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6466  00539C  EC7B  F047         	call	_delayUS	;wreg free
  6467                           
  6468                           ;main.c: 163: UARTstringCRLN(ProjectName);
  6469  0053A0  0EAF               	movlw	low _ProjectName
  6470  0053A2  0100               	movlb	0	; () banked
  6471  0053A4  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  6472  0053A6  0EF1               	movlw	high _ProjectName
  6473  0053A8  0100               	movlb	0	; () banked
  6474  0053AA  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  6475  0053AC  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  6476                           
  6477                           ;main.c: 164: UARTstring(CRLN);
  6478  0053B0  0EA7               	movlw	low _CRLN
  6479  0053B2  0100               	movlb	0	; () banked
  6480  0053B4  6F7D               	movwf	UARTstring@data& (0+255),b
  6481  0053B6  0EF3               	movlw	high _CRLN
  6482  0053B8  0100               	movlb	0	; () banked
  6483  0053BA  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  6484  0053BC  ECF7  F046         	call	_UARTstring	;wreg free
  6485                           
  6486                           ;main.c: 165: UARTchar('>');
  6487  0053C0  0E3E               	movlw	62
  6488  0053C2  ECE3  F049         	call	_UARTchar
  6489  0053C6  D000               	goto	l16306
  6490  0053C8                     l16306:
  6491                           
  6492                           ;main.c: 166: }
  6493                           ;main.c: 167: }
  6494                           ;main.c: 168: if(Bluetoothtask >= 1 && Connected)
  6495  0053C8  0102               	movlb	2	; () banked
  6496  0053CA  5194               	movf	main@Bluetoothtask& (0+255),w,b
  6497  0053CC  0102               	movlb	2	; () banked
  6498  0053CE  B4D8               	btfsc	status,2,c
  6499  0053D0  D066               	goto	l16348
  6500                           
  6501                           ; BSR set to: 2
  6502  0053D2  0102               	movlb	2	; () banked
  6503  0053D4  5196               	movf	main@Connected& (0+255),w,b
  6504  0053D6  0102               	movlb	2	; () banked
  6505  0053D8  B4D8               	btfsc	status,2,c
  6506  0053DA  D061               	goto	l16348
  6507                           
  6508                           ; BSR set to: 2
  6509                           ;main.c: 169: {
  6510                           ;main.c: 170: cleanBuffer(BluetoothString, 255);
  6511  0053DC  0E00               	movlw	low main@BluetoothString
  6512  0053DE  0100               	movlb	0	; () banked
  6513  0053E0  6F7C               	movwf	cleanBuffer@data& (0+255),b
  6514  0053E2  0E03               	movlw	high main@BluetoothString
  6515  0053E4  0100               	movlb	0	; () banked
  6516  0053E6  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  6517  0053E8  0E00               	movlw	0
  6518  0053EA  0100               	movlb	0	; () banked
  6519  0053EC  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  6520  0053EE  697E               	setf	cleanBuffer@count& (0+255),b
  6521  0053F0  ECCA  F046         	call	_cleanBuffer	;wreg free
  6522                           
  6523                           ;main.c: 171: BufferCopy(ReceivedString,BluetoothString, ReceivedStringPos, 0);
  6524  0053F4  0E00               	movlw	low _ReceivedString
  6525  0053F6  0100               	movlb	0	; () banked
  6526  0053F8  6F84               	movwf	BufferCopy@from& (0+255),b
  6527  0053FA  0E06               	movlw	high _ReceivedString
  6528  0053FC  0100               	movlb	0	; () banked
  6529  0053FE  6F85               	movwf	(BufferCopy@from+1)& (0+255),b
  6530  005400  0E00               	movlw	low main@BluetoothString
  6531  005402  0100               	movlb	0	; () banked
  6532  005404  6F86               	movwf	BufferCopy@to& (0+255),b
  6533  005406  0E03               	movlw	high main@BluetoothString
  6534  005408  0100               	movlb	0	; () banked
  6535  00540A  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
  6536  00540C  C0DC  F088         	movff	_ReceivedStringPos,BufferCopy@count
  6537  005410  0E00               	movlw	0
  6538  005412  0100               	movlb	0	; () banked
  6539  005414  6F89               	movwf	BufferCopy@shift& (0+255),b
  6540  005416  ECE5  F043         	call	_BufferCopy	;wreg free
  6541                           
  6542                           ;main.c: 172: BluetoothStringPos = ReceivedStringPos;
  6543  00541A  C0DC  F295         	movff	_ReceivedStringPos,main@BluetoothStringPos
  6544                           
  6545                           ;main.c: 173: cleanBuffer(ReceivedString, ReceivedStringPos);
  6546  00541E  0E00               	movlw	low _ReceivedString
  6547  005420  0100               	movlb	0	; () banked
  6548  005422  6F7C               	movwf	cleanBuffer@data& (0+255),b
  6549  005424  0E06               	movlw	high _ReceivedString
  6550  005426  0100               	movlb	0	; () banked
  6551  005428  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  6552  00542A  C0DC  F07E         	movff	_ReceivedStringPos,cleanBuffer@count
  6553  00542E  0100               	movlb	0	; () banked
  6554  005430  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
  6555  005432  ECCA  F046         	call	_cleanBuffer	;wreg free
  6556                           
  6557                           ;main.c: 174: ReceivedStringPos = 0;
  6558  005436  0E00               	movlw	0
  6559  005438  0100               	movlb	0	; () banked
  6560  00543A  6FDC               	movwf	_ReceivedStringPos& (0+255),b
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;main.c: 175: NewReceivedString = 0;
  6564  00543C  0E00               	movlw	0
  6565  00543E  0100               	movlb	0	; () banked
  6566  005440  6FDB               	movwf	_NewReceivedString& (0+255),b	;volatile
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;main.c: 176: if(BluetoothString[0] != 0)
  6570  005442  0103               	movlb	3	; () banked
  6571  005444  5100               	movf	main@BluetoothString& (0+255),w,b
  6572  005446  0103               	movlb	3	; () banked
  6573  005448  B4D8               	btfsc	status,2,c
  6574  00544A  D00B               	goto	l16326
  6575                           
  6576                           ; BSR set to: 3
  6577                           ;main.c: 177: {
  6578                           ;main.c: 178: UseBluetooth(&BluetoothString, BluetoothStringPos);
  6579  00544C  0E00               	movlw	low main@BluetoothString
  6580  00544E  0102               	movlb	2	; () banked
  6581  005450  6F00               	movwf	UseBluetooth@String& (0+255),b
  6582  005452  0E03               	movlw	high main@BluetoothString
  6583  005454  0102               	movlb	2	; () banked
  6584  005456  6F01               	movwf	(UseBluetooth@String+1)& (0+255),b
  6585  005458  C295  F202         	movff	main@BluetoothStringPos,UseBluetooth@StringPos
  6586  00545C  ECFB  F000         	call	_UseBluetooth	;wreg free
  6587  005460  D000               	goto	l16326
  6588  005462                     l16326:
  6589                           
  6590                           ;main.c: 179: }
  6591                           ;main.c: 180: UARTstring(CRLN);
  6592  005462  0EA7               	movlw	low _CRLN
  6593  005464  0100               	movlb	0	; () banked
  6594  005466  6F7D               	movwf	UARTstring@data& (0+255),b
  6595  005468  0EF3               	movlw	high _CRLN
  6596  00546A  0100               	movlb	0	; () banked
  6597  00546C  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  6598  00546E  ECF7  F046         	call	_UARTstring	;wreg free
  6599                           
  6600                           ;main.c: 181: UARTchar('>');
  6601  005472  0E3E               	movlw	62
  6602  005474  ECE3  F049         	call	_UARTchar
  6603                           
  6604                           ;main.c: 182: if(IR_New_Code)
  6605  005478  0100               	movlb	0	; () banked
  6606  00547A  51E1               	movf	_IR_New_Code& (0+255),w,b
  6607  00547C  B4D8               	btfsc	status,2,c
  6608  00547E  D004               	goto	l16334
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;main.c: 183: {
  6612                           ;main.c: 184: IR_New_Code = 0;
  6613  005480  0E00               	movlw	0
  6614  005482  0100               	movlb	0	; () banked
  6615  005484  6FE1               	movwf	_IR_New_Code& (0+255),b
  6616  005486  D000               	goto	l16334
  6617  005488                     l16334:
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;main.c: 185: }
  6621                           ;main.c: 187: IRpinOLD = ReadIRpin();
  6622  005488  EC96  F04A         	call	_ReadIRpin	;wreg free
  6623  00548C  6E2F               	movwf	_IRpinOLD,c
  6624                           
  6625                           ;main.c: 188: INTCONbits.RBIF = 0;
  6626  00548E  90F2               	bcf	intcon,0,c	;volatile
  6627                           
  6628                           ;main.c: 189: (IOCBbits.IOCB4 = 1);
  6629  005490  887D               	bsf	3965,4,c	;volatile
  6630                           
  6631                           ;main.c: 190: INTCONbits.RBIE = 1;
  6632  005492  86F2               	bsf	intcon,3,c	;volatile
  6633                           
  6634                           ;main.c: 191: ClearUSART();
  6635  005494  EC81  F04A         	call	_ClearUSART	;wreg free
  6636                           
  6637                           ;main.c: 192: PIR1bits.RCIF = 0;
  6638  005498  9A9E               	bcf	3998,5,c	;volatile
  6639                           
  6640                           ;main.c: 193: PIE1bits.RCIE = 1;
  6641  00549A  8A9D               	bsf	3997,5,c	;volatile
  6642  00549C  D000               	goto	l16348
  6643  00549E                     l16348:
  6644                           
  6645                           ;main.c: 194: }
  6646                           ;main.c: 195: ConnectedOLD = Connected;
  6647  00549E  C296  F0D9         	movff	main@Connected,main@ConnectedOLD
  6648                           
  6649                           ;main.c: 197: if(IRtimeout < 5000)
  6650  0054A2  0102               	movlb	2	; () banked
  6651  0054A4  51CE               	movf	(_IRtimeout+3)& (0+255),w,b
  6652  0054A6  0102               	movlb	2	; () banked
  6653  0054A8  11CD               	iorwf	(_IRtimeout+2)& (0+255),w,b
  6654  0054AA  E110               	bnz	l16354
  6655  0054AC  0E88               	movlw	136
  6656  0054AE  0102               	movlb	2	; () banked
  6657  0054B0  5DCB               	subwf	_IRtimeout& (0+255),w,b
  6658  0054B2  0E13               	movlw	19
  6659  0054B4  0102               	movlb	2	; () banked
  6660  0054B6  59CC               	subwfb	(_IRtimeout+1)& (0+255),w,b
  6661  0054B8  B0D8               	btfsc	status,0,c
  6662  0054BA  D008               	goto	l16354
  6663                           
  6664                           ; BSR set to: 2
  6665                           ;main.c: 198: {
  6666                           ;main.c: 199: IRtimeout++;
  6667  0054BC  0E01               	movlw	1
  6668  0054BE  0102               	movlb	2	; () banked
  6669  0054C0  27CB               	addwf	_IRtimeout& (0+255),f,b
  6670  0054C2  0E00               	movlw	0
  6671  0054C4  23CC               	addwfc	(_IRtimeout+1)& (0+255),f,b
  6672  0054C6  23CD               	addwfc	(_IRtimeout+2)& (0+255),f,b
  6673  0054C8  23CE               	addwfc	(_IRtimeout+3)& (0+255),f,b
  6674                           
  6675                           ;main.c: 200: }
  6676  0054CA  D6BA               	goto	l142
  6677  0054CC                     l16354:
  6678                           
  6679                           ; BSR set to: 2
  6680                           ;main.c: 201: else if(IRtimeout == 5000)
  6681  0054CC  0E88               	movlw	136
  6682  0054CE  0102               	movlb	2	; () banked
  6683  0054D0  19CB               	xorwf	_IRtimeout& (0+255),w,b
  6684  0054D2  E108               	bnz	u20601
  6685  0054D4  0E13               	movlw	19
  6686  0054D6  0102               	movlb	2	; () banked
  6687  0054D8  19CC               	xorwf	(_IRtimeout+1)& (0+255),w,b
  6688  0054DA  0102               	movlb	2	; () banked
  6689  0054DC  11CD               	iorwf	(_IRtimeout+2)& (0+255),w,b
  6690  0054DE  0102               	movlb	2	; () banked
  6691  0054E0  11CE               	iorwf	(_IRtimeout+3)& (0+255),w,b
  6692  0054E2  A4D8               	btfss	status,2,c
  6693  0054E4                     u20601:
  6694  0054E4  D6AD               	goto	l142
  6695                           
  6696                           ; BSR set to: 2
  6697                           ;main.c: 202: {
  6698                           ;main.c: 203: IRtimeout++;
  6699  0054E6  0E01               	movlw	1
  6700  0054E8  0102               	movlb	2	; () banked
  6701  0054EA  27CB               	addwf	_IRtimeout& (0+255),f,b
  6702  0054EC  0E00               	movlw	0
  6703  0054EE  23CC               	addwfc	(_IRtimeout+1)& (0+255),f,b
  6704  0054F0  23CD               	addwfc	(_IRtimeout+2)& (0+255),f,b
  6705  0054F2  23CE               	addwfc	(_IRtimeout+3)& (0+255),f,b
  6706                           
  6707                           ; BSR set to: 2
  6708                           ;main.c: 204: IR_NEC = 0;
  6709  0054F4  0E00               	movlw	0
  6710  0054F6  0100               	movlb	0	; () banked
  6711  0054F8  6FDD               	movwf	_IR_NEC& (0+255),b
  6712  0054FA  0E00               	movlw	0
  6713  0054FC  6FDE               	movwf	(_IR_NEC+1)& (0+255),b
  6714  0054FE  0E00               	movlw	0
  6715  005500  6FDF               	movwf	(_IR_NEC+2)& (0+255),b
  6716  005502  0E00               	movlw	0
  6717  005504  6FE0               	movwf	(_IR_NEC+3)& (0+255),b
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;main.c: 205: IR_New_Code = 0;
  6721  005506  0E00               	movlw	0
  6722  005508  0100               	movlb	0	; () banked
  6723  00550A  6FE1               	movwf	_IR_New_Code& (0+255),b
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;main.c: 206: IRpinOLD = ReadIRpin();
  6727  00550C  EC96  F04A         	call	_ReadIRpin	;wreg free
  6728  005510  6E2F               	movwf	_IRpinOLD,c
  6729                           
  6730                           ;main.c: 207: INTCONbits.RBIF = 0;
  6731  005512  90F2               	bcf	intcon,0,c	;volatile
  6732                           
  6733                           ;main.c: 208: (IOCBbits.IOCB4 = 1);
  6734  005514  887D               	bsf	3965,4,c	;volatile
  6735                           
  6736                           ;main.c: 209: INTCONbits.RBIE = 1;
  6737  005516  86F2               	bsf	intcon,3,c	;volatile
  6738  005518  D693               	goto	l142
  6739  00551A  EFF9  F000         	goto	start
  6740  00551E                     __end_of_main:
  6741                           	opt stack 0
  6742                           tblptru	equ	0xFF8
  6743                           tblptrh	equ	0xFF7
  6744                           tblptrl	equ	0xFF6
  6745                           tablat	equ	0xFF5
  6746                           intcon	equ	0xFF2
  6747                           postinc0	equ	0xFEE
  6748                           wreg	equ	0xFE8
  6749                           postdec1	equ	0xFE5
  6750                           fsr1h	equ	0xFE2
  6751                           fsr1l	equ	0xFE1
  6752                           status	equ	0xFD8
  6753                           
  6754 ;; *************** function _UseIRCode *****************
  6755 ;; Defined at:
  6756 ;;		line 271 in file "IR.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  Code            2   93[BANK0 ] PTR unsigned char 
  6759 ;;		 -> IR_New_Code(1), 
  6760 ;;  NEC             4   95[BANK0 ] unsigned long 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;  i               1  104[BANK0 ] unsigned char 
  6763 ;;  j               1  103[BANK0 ] unsigned char 
  6764 ;;  found           1  102[BANK0 ] unsigned char 
  6765 ;; Return value:  Size  Location     Type
  6766 ;;		None               void
  6767 ;; Registers used:
  6768 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6774 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6775 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6776 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6777 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;Total ram usage:       12 bytes
  6779 ;; Hardware stack levels used:    1
  6780 ;; Hardware stack levels required when called:   11
  6781 ;; This function calls:
  6782 ;;		_DecodeNEC
  6783 ;;		_LEDTimerON
  6784 ;;		_ReadCodeButtons
  6785 ;;		_ReadIRpin
  6786 ;;		_ReadPushButton
  6787 ;;		_SendRF_Channel
  6788 ;;		_SyncGlobalToEEPROM
  6789 ;;		_delayUS
  6790 ;; This function is called by:
  6791 ;;		_main
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text1
  6796  005DF8                     __ptext1:
  6797                           	opt stack 0
  6798  005DF8                     _UseIRCode:
  6799                           	opt stack 19
  6800                           
  6801                           ;IR.c: 273: unsigned char i,j;
  6802                           ;IR.c: 274: unsigned char found = 0;
  6803                           
  6804                           ;incstack = 0
  6805  005DF8  0E00               	movlw	0
  6806  005DFA  0100               	movlb	0	; () banked
  6807  005DFC  6FC6               	movwf	UseIRCode@found& (0+255),b
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;IR.c: 276: LEDTimerON();
  6811  005DFE  EC59  F04A         	call	_LEDTimerON	;wreg free
  6812                           
  6813                           ;IR.c: 277: if(*Code == 2 || *Code == 1)
  6814  005E02  C0BD  FFD9         	movff	UseIRCode@Code,fsr2l
  6815  005E06  C0BE  FFDA         	movff	UseIRCode@Code+1,fsr2h
  6816  005E0A  0E02               	movlw	2
  6817  005E0C  18DE               	xorwf	postinc2,w,c
  6818  005E0E  B4D8               	btfsc	status,2,c
  6819  005E10  D007               	goto	l15258
  6820  005E12  C0BD  FFD9         	movff	UseIRCode@Code,fsr2l
  6821  005E16  C0BE  FFDA         	movff	UseIRCode@Code+1,fsr2h
  6822  005E1A  04DE               	decf	postinc2,w,c
  6823  005E1C  A4D8               	btfss	status,2,c
  6824  005E1E  D113               	goto	l15344
  6825  005E20                     l15258:
  6826                           
  6827                           ;IR.c: 278: {
  6828                           ;IR.c: 279: DecodeNEC(NEC, &IRaddress, &IRcommand);
  6829  005E20  C0BF  F080         	movff	UseIRCode@NEC,DecodeNEC@Nec
  6830  005E24  C0C0  F081         	movff	UseIRCode@NEC+1,DecodeNEC@Nec+1
  6831  005E28  C0C1  F082         	movff	UseIRCode@NEC+2,DecodeNEC@Nec+2
  6832  005E2C  C0C2  F083         	movff	UseIRCode@NEC+3,DecodeNEC@Nec+3
  6833  005E30  0EE2               	movlw	low _IRaddress
  6834  005E32  0100               	movlb	0	; () banked
  6835  005E34  6F84               	movwf	DecodeNEC@address& (0+255),b
  6836  005E36  0E00               	movlw	high _IRaddress
  6837  005E38  0100               	movlb	0	; () banked
  6838  005E3A  6F85               	movwf	(DecodeNEC@address+1)& (0+255),b
  6839  005E3C  0EFF               	movlw	low _IRcommand
  6840  005E3E  0100               	movlb	0	; () banked
  6841  005E40  6F86               	movwf	DecodeNEC@command& (0+255),b
  6842  005E42  0E01               	movlw	high _IRcommand
  6843  005E44  0100               	movlb	0	; () banked
  6844  005E46  6F87               	movwf	(DecodeNEC@command+1)& (0+255),b
  6845  005E48  ECB9  F041         	call	_DecodeNEC	;wreg free
  6846                           
  6847                           ;IR.c: 280: if(ReadPushButton())
  6848  005E4C  EC73  F04A         	call	_ReadPushButton	;wreg free
  6849  005E50  0900               	iorlw	0
  6850  005E52  B4D8               	btfsc	status,2,c
  6851  005E54  D055               	goto	l15298
  6852                           
  6853                           ;IR.c: 281: {
  6854                           ;IR.c: 282: Global.SWNECcode = NEC;
  6855  005E56  C0BF  F401         	movff	UseIRCode@NEC,_Global+1
  6856  005E5A  C0C0  F402         	movff	UseIRCode@NEC+1,_Global+2
  6857  005E5E  C0C1  F403         	movff	UseIRCode@NEC+2,_Global+3
  6858  005E62  C0C2  F404         	movff	UseIRCode@NEC+3,_Global+4
  6859                           
  6860                           ;IR.c: 283: if(SyncGlobalToEEPROM())
  6861  005E66  EC1C  F048         	call	_SyncGlobalToEEPROM	;wreg free
  6862  005E6A  0900               	iorlw	0
  6863  005E6C  B4D8               	btfsc	status,2,c
  6864  005E6E  D024               	goto	l15282
  6865                           
  6866                           ;IR.c: 284: {
  6867                           ;IR.c: 286: for(i =0;i<10;i++)
  6868  005E70  0E00               	movlw	0
  6869  005E72  0100               	movlb	0	; () banked
  6870  005E74  6FC8               	movwf	UseIRCode@i& (0+255),b
  6871  005E76                     l15268:
  6872                           
  6873                           ; BSR set to: 0
  6874  005E76  0E09               	movlw	9
  6875  005E78  0100               	movlb	0	; () banked
  6876  005E7A  65C8               	cpfsgt	UseIRCode@i& (0+255),b
  6877  005E7C  D001               	goto	l15272
  6878                           
  6879                           ; BSR set to: 0
  6880  005E7E  D0E3               	goto	l15344
  6881  005E80                     l15272:
  6882                           
  6883                           ; BSR set to: 0
  6884                           ;IR.c: 287: {
  6885                           ;IR.c: 288: (LATC |= 0x04);
  6886  005E80  848B               	bsf	3979,2,c	;volatile
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;IR.c: 289: delayUS(50000);
  6890  005E82  0E50               	movlw	80
  6891  005E84  0100               	movlb	0	; () banked
  6892  005E86  6F7C               	movwf	delayUS@US& (0+255),b
  6893  005E88  0EC3               	movlw	195
  6894  005E8A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6895  005E8C  0E00               	movlw	0
  6896  005E8E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6897  005E90  0E00               	movlw	0
  6898  005E92  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6899  005E94  EC7B  F047         	call	_delayUS	;wreg free
  6900                           
  6901                           ;IR.c: 290: (LATC &= ~0x04);
  6902  005E98  948B               	bcf	3979,2,c	;volatile
  6903                           
  6904                           ;IR.c: 291: delayUS(50000);
  6905  005E9A  0E50               	movlw	80
  6906  005E9C  0100               	movlb	0	; () banked
  6907  005E9E  6F7C               	movwf	delayUS@US& (0+255),b
  6908  005EA0  0EC3               	movlw	195
  6909  005EA2  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6910  005EA4  0E00               	movlw	0
  6911  005EA6  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6912  005EA8  0E00               	movlw	0
  6913  005EAA  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6914  005EAC  EC7B  F047         	call	_delayUS	;wreg free
  6915  005EB0  0100               	movlb	0	; () banked
  6916  005EB2  2BC8               	incf	UseIRCode@i& (0+255),f,b
  6917  005EB4  D7E0               	goto	l15268
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;IR.c: 292: }
  6921                           ;IR.c: 293: }
  6922                           
  6923                           ; BSR set to: 0
  6924  005EB6  D0C7               	goto	l15344
  6925  005EB8                     l15282:
  6926                           
  6927                           ;IR.c: 294: else
  6928                           ;IR.c: 295: {
  6929                           ;IR.c: 297: for(i =0;i<10;i++)
  6930  005EB8  0E00               	movlw	0
  6931  005EBA  0100               	movlb	0	; () banked
  6932  005EBC  6FC8               	movwf	UseIRCode@i& (0+255),b
  6933  005EBE                     l15284:
  6934                           
  6935                           ; BSR set to: 0
  6936  005EBE  0E09               	movlw	9
  6937  005EC0  0100               	movlb	0	; () banked
  6938  005EC2  65C8               	cpfsgt	UseIRCode@i& (0+255),b
  6939  005EC4  D001               	goto	l15288
  6940                           
  6941                           ; BSR set to: 0
  6942  005EC6  D0BF               	goto	l15344
  6943  005EC8                     l15288:
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;IR.c: 298: {
  6947                           ;IR.c: 299: (LATC |= 0x02);
  6948  005EC8  828B               	bsf	3979,1,c	;volatile
  6949                           
  6950                           ; BSR set to: 0
  6951                           ;IR.c: 300: delayUS(50000);
  6952  005ECA  0E50               	movlw	80
  6953  005ECC  0100               	movlb	0	; () banked
  6954  005ECE  6F7C               	movwf	delayUS@US& (0+255),b
  6955  005ED0  0EC3               	movlw	195
  6956  005ED2  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6957  005ED4  0E00               	movlw	0
  6958  005ED6  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6959  005ED8  0E00               	movlw	0
  6960  005EDA  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6961  005EDC  EC7B  F047         	call	_delayUS	;wreg free
  6962                           
  6963                           ;IR.c: 301: (LATC &= ~0x02);
  6964  005EE0  928B               	bcf	3979,1,c	;volatile
  6965                           
  6966                           ;IR.c: 302: delayUS(50000);
  6967  005EE2  0E50               	movlw	80
  6968  005EE4  0100               	movlb	0	; () banked
  6969  005EE6  6F7C               	movwf	delayUS@US& (0+255),b
  6970  005EE8  0EC3               	movlw	195
  6971  005EEA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6972  005EEC  0E00               	movlw	0
  6973  005EEE  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6974  005EF0  0E00               	movlw	0
  6975  005EF2  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6976  005EF4  EC7B  F047         	call	_delayUS	;wreg free
  6977  005EF8  0100               	movlb	0	; () banked
  6978  005EFA  2BC8               	incf	UseIRCode@i& (0+255),f,b
  6979  005EFC  D7E0               	goto	l15284
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;IR.c: 303: }
  6983                           ;IR.c: 304: }
  6984                           ;IR.c: 305: }
  6985                           
  6986                           ; BSR set to: 0
  6987                           
  6988                           ; BSR set to: 0
  6989  005EFE  D0A3               	goto	l15344
  6990  005F00                     l15298:
  6991                           
  6992                           ;IR.c: 306: else
  6993                           ;IR.c: 307: {
  6994                           ;IR.c: 308: if(NEC == Global.SWNECcode)
  6995  005F00  0100               	movlb	0	; () banked
  6996  005F02  51BF               	movf	UseIRCode@NEC& (0+255),w,b
  6997  005F04  0104               	movlb	4	; () banked
  6998  005F06  1901               	xorwf	(_Global+1)& (0+255),w,b
  6999  005F08  E121               	bnz	l15308
  7000  005F0A  0100               	movlb	0	; () banked
  7001  005F0C  51C0               	movf	(UseIRCode@NEC+1)& (0+255),w,b
  7002  005F0E  0104               	movlb	4	; () banked
  7003  005F10  1902               	xorwf	(_Global+2)& (0+255),w,b
  7004  005F12  E11C               	bnz	l15308
  7005  005F14  0100               	movlb	0	; () banked
  7006  005F16  51C1               	movf	(UseIRCode@NEC+2)& (0+255),w,b
  7007  005F18  0104               	movlb	4	; () banked
  7008  005F1A  1903               	xorwf	(_Global+3)& (0+255),w,b
  7009  005F1C  E117               	bnz	l15308
  7010  005F1E  0100               	movlb	0	; () banked
  7011  005F20  51C2               	movf	(UseIRCode@NEC+3)& (0+255),w,b
  7012  005F22  0104               	movlb	4	; () banked
  7013  005F24  1904               	xorwf	(_Global+4)& (0+255),w,b
  7014  005F26  A4D8               	btfss	status,2,c
  7015  005F28  D011               	goto	l15308
  7016                           
  7017                           ; BSR set to: 4
  7018                           ;IR.c: 309: {
  7019                           ;IR.c: 310: if(*Code == 2)
  7020  005F2A  C0BD  FFD9         	movff	UseIRCode@Code,fsr2l
  7021  005F2E  C0BE  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7022  005F32  0E02               	movlw	2
  7023  005F34  18DE               	xorwf	postinc2,w,c
  7024  005F36  B4D8               	btfsc	status,2,c
  7025                           
  7026                           ; BSR set to: 4
  7027                           ;IR.c: 311: {
  7028                           ;IR.c: 312: (LATC |= 0x02);
  7029  005F38  828B               	bsf	3979,1,c	;volatile
  7030                           
  7031                           ; BSR set to: 4
  7032                           ;IR.c: 313: }
  7033                           ;IR.c: 314: (LATC |= 0x04);
  7034  005F3A  848B               	bsf	3979,2,c	;volatile
  7035                           
  7036                           ; BSR set to: 4
  7037                           ;IR.c: 315: SendRF_Channel(ReadCodeButtons());
  7038  005F3C  ECA6  F047         	call	_ReadCodeButtons	;wreg free
  7039  005F40  EC30  F030         	call	_SendRF_Channel
  7040                           
  7041                           ;IR.c: 316: found = 1;
  7042  005F44  0E01               	movlw	1
  7043  005F46  0100               	movlb	0	; () banked
  7044  005F48  6FC6               	movwf	UseIRCode@found& (0+255),b
  7045  005F4A  D000               	goto	l15308
  7046  005F4C                     l15308:
  7047                           
  7048                           ;IR.c: 317: }
  7049                           ;IR.c: 319: for(j=0; j < 3; j++)
  7050  005F4C  0E00               	movlw	0
  7051  005F4E  0100               	movlb	0	; () banked
  7052  005F50  6FC7               	movwf	UseIRCode@j& (0+255),b
  7053  005F52                     l15310:
  7054                           
  7055                           ; BSR set to: 0
  7056  005F52  0E02               	movlw	2
  7057  005F54  0100               	movlb	0	; () banked
  7058  005F56  65C7               	cpfsgt	UseIRCode@j& (0+255),b
  7059  005F58  D001               	goto	l15314
  7060                           
  7061                           ; BSR set to: 0
  7062  005F5A  D06E               	goto	l15340
  7063  005F5C                     l15314:
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;IR.c: 320: {
  7067                           ;IR.c: 321: for(i=0; i < 15; i++)
  7068  005F5C  0E00               	movlw	0
  7069  005F5E  0100               	movlb	0	; () banked
  7070  005F60  6FC8               	movwf	UseIRCode@i& (0+255),b
  7071  005F62                     l15316:
  7072                           
  7073                           ; BSR set to: 0
  7074  005F62  0E0E               	movlw	14
  7075  005F64  0100               	movlb	0	; () banked
  7076  005F66  65C8               	cpfsgt	UseIRCode@i& (0+255),b
  7077  005F68  D001               	goto	l15320
  7078                           
  7079                           ; BSR set to: 0
  7080  005F6A  D063               	goto	l15336
  7081  005F6C                     l15320:
  7082                           
  7083                           ; BSR set to: 0
  7084                           ;IR.c: 322: {
  7085                           ;IR.c: 324: if(IRaddress == Global.RemoteButtonRF[i][j][0])
  7086  005F6C  0100               	movlb	0	; () banked
  7087  005F6E  51C8               	movf	UseIRCode@i& (0+255),w,b
  7088  005F70  0D06               	mullw	6
  7089  005F72  0E00               	movlw	low _Global
  7090  005F74  0100               	movlb	0	; () banked
  7091  005F76  6FC3               	movwf	??_UseIRCode& (0+255),b
  7092  005F78  0E04               	movlw	high _Global
  7093  005F7A  0100               	movlb	0	; () banked
  7094  005F7C  6FC4               	movwf	(??_UseIRCode+1)& (0+255),b
  7095  005F7E  0E2E               	movlw	46
  7096  005F80  0100               	movlb	0	; () banked
  7097  005F82  27C3               	addwf	??_UseIRCode& (0+255),f,b
  7098  005F84  0E00               	movlw	0
  7099  005F86  23C4               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  7100  005F88  50F3               	movf	prodl,w,c
  7101  005F8A  0100               	movlb	0	; () banked
  7102  005F8C  27C3               	addwf	??_UseIRCode& (0+255),f,b
  7103  005F8E  50F4               	movf	prodh,w,c
  7104  005F90  0100               	movlb	0	; () banked
  7105  005F92  23C4               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  7106  005F94  0100               	movlb	0	; () banked
  7107  005F96  51C7               	movf	UseIRCode@j& (0+255),w,b
  7108  005F98  0D02               	mullw	2
  7109  005F9A  50F3               	movf	prodl,w,c
  7110  005F9C  0100               	movlb	0	; () banked
  7111  005F9E  25C3               	addwf	??_UseIRCode& (0+255),w,b
  7112  005FA0  6ED9               	movwf	fsr2l,c
  7113  005FA2  50F4               	movf	prodh,w,c
  7114  005FA4  0100               	movlb	0	; () banked
  7115  005FA6  21C4               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  7116  005FA8  6EDA               	movwf	fsr2h,c
  7117  005FAA  0100               	movlb	0	; () banked
  7118  005FAC  51E2               	movf	_IRaddress& (0+255),w,b
  7119  005FAE  18DE               	xorwf	postinc2,w,c
  7120  005FB0  A4D8               	btfss	status,2,c
  7121  005FB2  D03C               	goto	l15332
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;IR.c: 325: {
  7125                           ;IR.c: 326: if(IRcommand == Global.RemoteButtonRF[i][j][1])
  7126  005FB4  0100               	movlb	0	; () banked
  7127  005FB6  51C8               	movf	UseIRCode@i& (0+255),w,b
  7128  005FB8  0D06               	mullw	6
  7129  005FBA  0E00               	movlw	low _Global
  7130  005FBC  0100               	movlb	0	; () banked
  7131  005FBE  6FC3               	movwf	??_UseIRCode& (0+255),b
  7132  005FC0  0E04               	movlw	high _Global
  7133  005FC2  0100               	movlb	0	; () banked
  7134  005FC4  6FC4               	movwf	(??_UseIRCode+1)& (0+255),b
  7135  005FC6  0E2E               	movlw	46
  7136  005FC8  0100               	movlb	0	; () banked
  7137  005FCA  27C3               	addwf	??_UseIRCode& (0+255),f,b
  7138  005FCC  0E00               	movlw	0
  7139  005FCE  23C4               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  7140  005FD0  50F3               	movf	prodl,w,c
  7141  005FD2  0100               	movlb	0	; () banked
  7142  005FD4  27C3               	addwf	??_UseIRCode& (0+255),f,b
  7143  005FD6  50F4               	movf	prodh,w,c
  7144  005FD8  0100               	movlb	0	; () banked
  7145  005FDA  23C4               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  7146  005FDC  0100               	movlb	0	; () banked
  7147  005FDE  51C7               	movf	UseIRCode@j& (0+255),w,b
  7148  005FE0  0D02               	mullw	2
  7149  005FE2  50F3               	movf	prodl,w,c
  7150  005FE4  0100               	movlb	0	; () banked
  7151  005FE6  27C3               	addwf	??_UseIRCode& (0+255),f,b
  7152  005FE8  50F4               	movf	prodh,w,c
  7153  005FEA  0100               	movlb	0	; () banked
  7154  005FEC  23C4               	addwfc	(??_UseIRCode+1)& (0+255),f,b
  7155  005FEE  0E01               	movlw	1
  7156  005FF0  0100               	movlb	0	; () banked
  7157  005FF2  25C3               	addwf	??_UseIRCode& (0+255),w,b
  7158  005FF4  6ED9               	movwf	fsr2l,c
  7159  005FF6  0E00               	movlw	0
  7160  005FF8  0100               	movlb	0	; () banked
  7161  005FFA  21C4               	addwfc	(??_UseIRCode+1)& (0+255),w,b
  7162  005FFC  6EDA               	movwf	fsr2h,c
  7163  005FFE  0101               	movlb	1	; () banked
  7164  006000  51FF               	movf	_IRcommand& (0+255),w,b
  7165  006002  18DE               	xorwf	postinc2,w,c
  7166  006004  A4D8               	btfss	status,2,c
  7167  006006  D012               	goto	l15332
  7168                           
  7169                           ; BSR set to: 1
  7170                           ;IR.c: 327: {
  7171                           ;IR.c: 328: if(*Code == 2)
  7172  006008  C0BD  FFD9         	movff	UseIRCode@Code,fsr2l
  7173  00600C  C0BE  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7174  006010  0E02               	movlw	2
  7175  006012  18DE               	xorwf	postinc2,w,c
  7176  006014  A4D8               	btfss	status,2,c
  7177  006016  D002               	goto	l15328
  7178                           
  7179                           ; BSR set to: 1
  7180                           ;IR.c: 329: {
  7181                           ;IR.c: 330: (LATC |= 0x02);
  7182  006018  828B               	bsf	3979,1,c	;volatile
  7183  00601A  D000               	goto	l15328
  7184  00601C                     l15328:
  7185                           
  7186                           ; BSR set to: 1
  7187                           ;IR.c: 331: }
  7188                           ;IR.c: 332: SendRF_Channel(i);
  7189  00601C  0100               	movlb	0	; () banked
  7190  00601E  51C8               	movf	UseIRCode@i& (0+255),w,b
  7191  006020  EC30  F030         	call	_SendRF_Channel
  7192                           
  7193                           ;IR.c: 333: found = 1;
  7194  006024  0E01               	movlw	1
  7195  006026  0100               	movlb	0	; () banked
  7196  006028  6FC6               	movwf	UseIRCode@found& (0+255),b
  7197                           
  7198                           ; BSR set to: 0
  7199  00602A  D000               	goto	l15332
  7200  00602C                     l15332:
  7201  00602C  0100               	movlb	0	; () banked
  7202  00602E  2BC8               	incf	UseIRCode@i& (0+255),f,b
  7203  006030  D798               	goto	l15316
  7204  006032                     l15336:
  7205                           
  7206                           ; BSR set to: 0
  7207  006032  0100               	movlb	0	; () banked
  7208  006034  2BC7               	incf	UseIRCode@j& (0+255),f,b
  7209  006036  D78D               	goto	l15310
  7210  006038                     l15340:
  7211                           
  7212                           ; BSR set to: 0
  7213                           ;IR.c: 334: }
  7214                           ;IR.c: 335: }
  7215                           ;IR.c: 336: }
  7216                           ;IR.c: 337: }
  7217                           ;IR.c: 339: if(found == 0)
  7218  006038  0100               	movlb	0	; () banked
  7219  00603A  51C6               	movf	UseIRCode@found& (0+255),w,b
  7220  00603C  0100               	movlb	0	; () banked
  7221  00603E  A4D8               	btfss	status,2,c
  7222  006040  D002               	goto	l15344
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;IR.c: 340: {
  7226                           ;IR.c: 341: (LATC |= 0x02);
  7227  006042  828B               	bsf	3979,1,c	;volatile
  7228                           
  7229                           ; BSR set to: 0
  7230                           
  7231                           ; BSR set to: 0
  7232  006044  D000               	goto	l15344
  7233  006046                     l15344:
  7234                           
  7235                           ;IR.c: 342: }
  7236                           ;IR.c: 343: }
  7237                           ;IR.c: 344: }
  7238                           ;IR.c: 345: *Code = 0;
  7239  006046  C0BD  FFD9         	movff	UseIRCode@Code,fsr2l
  7240  00604A  C0BE  FFDA         	movff	UseIRCode@Code+1,fsr2h
  7241  00604E  0E00               	movlw	0
  7242  006050  6EDF               	movwf	indf2,c
  7243                           
  7244                           ;IR.c: 346: IRpinOLD = ReadIRpin();
  7245  006052  EC96  F04A         	call	_ReadIRpin	;wreg free
  7246  006056  6E2F               	movwf	_IRpinOLD,c
  7247                           
  7248                           ;IR.c: 347: INTCONbits.RBIF = 0;
  7249  006058  90F2               	bcf	intcon,0,c	;volatile
  7250                           
  7251                           ;IR.c: 348: (IOCBbits.IOCB4 = 1);
  7252  00605A  887D               	bsf	3965,4,c	;volatile
  7253                           
  7254                           ;IR.c: 349: INTCONbits.RBIE = 1;
  7255  00605C  86F2               	bsf	intcon,3,c	;volatile
  7256  00605E  0012               	return		;funcret
  7257  006060                     __end_of_UseIRCode:
  7258                           	opt stack 0
  7259                           tblptru	equ	0xFF8
  7260                           tblptrh	equ	0xFF7
  7261                           tblptrl	equ	0xFF6
  7262                           tablat	equ	0xFF5
  7263                           prodh	equ	0xFF4
  7264                           prodl	equ	0xFF3
  7265                           intcon	equ	0xFF2
  7266                           postinc0	equ	0xFEE
  7267                           wreg	equ	0xFE8
  7268                           postdec1	equ	0xFE5
  7269                           fsr1h	equ	0xFE2
  7270                           fsr1l	equ	0xFE1
  7271                           indf2	equ	0xFDF
  7272                           postinc2	equ	0xFDE
  7273                           fsr2h	equ	0xFDA
  7274                           fsr2l	equ	0xFD9
  7275                           status	equ	0xFD8
  7276                           
  7277 ;; *************** function _SendRF_Channel *****************
  7278 ;; Defined at:
  7279 ;;		line 165 in file "RF.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  channel         1    wreg     unsigned char 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  channel         1   41[BANK0 ] unsigned char 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;		None               void
  7286 ;; Registers used:
  7287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7297 ;;Total ram usage:        1 bytes
  7298 ;; Hardware stack levels used:    1
  7299 ;; Hardware stack levels required when called:    9
  7300 ;; This function calls:
  7301 ;;		_SendRF_wait
  7302 ;; This function is called by:
  7303 ;;		_UseIRCode
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           	psect	text2
  7308  006060                     __ptext2:
  7309                           	opt stack 0
  7310  006060                     _SendRF_Channel:
  7311                           	opt stack 20
  7312                           
  7313                           ;incstack = 0
  7314                           ;SendRF_Channel@channel stored from wreg
  7315  006060  0100               	movlb	0	; () banked
  7316  006062  6F89               	movwf	SendRF_Channel@channel& (0+255),b
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;RF.c: 167: switch (channel)
  7320  006064  D10D               	goto	l15080
  7321  006066                     l15022:
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;RF.c: 171: SendRF_wait(Conf1_ChannelD,1,12,4);
  7325  006066  0E69               	movlw	low _Conf1_ChannelD
  7326  006068  0100               	movlb	0	; () banked
  7327  00606A  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7328  00606C  0EF3               	movlw	high _Conf1_ChannelD
  7329  00606E  0100               	movlb	0	; () banked
  7330  006070  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7331  006072  0E01               	movlw	1
  7332  006074  0100               	movlb	0	; () banked
  7333  006076  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7334  006078  0E0C               	movlw	12
  7335  00607A  0100               	movlb	0	; () banked
  7336  00607C  6F87               	movwf	SendRF_wait@size& (0+255),b
  7337  00607E  0E04               	movlw	4
  7338  006080  0100               	movlb	0	; () banked
  7339  006082  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7340  006084  ECA5  F048         	call	_SendRF_wait	;wreg free
  7341                           
  7342                           ;RF.c: 172: break;
  7343  006088  0012               	return	
  7344  00608A                     l15024:
  7345                           
  7346                           ;RF.c: 175: SendRF_wait(Conf1_ChannelE,1,12,4);
  7347  00608A  0E75               	movlw	low _Conf1_ChannelE
  7348  00608C  0100               	movlb	0	; () banked
  7349  00608E  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7350  006090  0EF3               	movlw	high _Conf1_ChannelE
  7351  006092  0100               	movlb	0	; () banked
  7352  006094  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7353  006096  0E01               	movlw	1
  7354  006098  0100               	movlb	0	; () banked
  7355  00609A  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7356  00609C  0E0C               	movlw	12
  7357  00609E  0100               	movlb	0	; () banked
  7358  0060A0  6F87               	movwf	SendRF_wait@size& (0+255),b
  7359  0060A2  0E04               	movlw	4
  7360  0060A4  0100               	movlb	0	; () banked
  7361  0060A6  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7362  0060A8  ECA5  F048         	call	_SendRF_wait	;wreg free
  7363                           
  7364                           ;RF.c: 176: break;
  7365  0060AC  0012               	return	
  7366  0060AE                     l15026:
  7367                           
  7368                           ;RF.c: 179: SendRF_wait(Conf1_ChannelF,1,12,4);
  7369  0060AE  0E81               	movlw	low _Conf1_ChannelF
  7370  0060B0  0100               	movlb	0	; () banked
  7371  0060B2  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7372  0060B4  0EF3               	movlw	high _Conf1_ChannelF
  7373  0060B6  0100               	movlb	0	; () banked
  7374  0060B8  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7375  0060BA  0E01               	movlw	1
  7376  0060BC  0100               	movlb	0	; () banked
  7377  0060BE  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7378  0060C0  0E0C               	movlw	12
  7379  0060C2  0100               	movlb	0	; () banked
  7380  0060C4  6F87               	movwf	SendRF_wait@size& (0+255),b
  7381  0060C6  0E04               	movlw	4
  7382  0060C8  0100               	movlb	0	; () banked
  7383  0060CA  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7384  0060CC  ECA5  F048         	call	_SendRF_wait	;wreg free
  7385                           
  7386                           ;RF.c: 180: break;
  7387  0060D0  0012               	return	
  7388  0060D2                     l15028:
  7389                           
  7390                           ;RF.c: 183: if(Conf2_ChannelB_Status)
  7391  0060D2  5028               	movf	_Conf2_ChannelB_Status,w,c
  7392  0060D4  B4D8               	btfsc	status,2,c
  7393  0060D6  D014               	goto	l15034
  7394                           
  7395                           ;RF.c: 184: {
  7396                           ;RF.c: 185: SendRF_wait(Conf2_ChannelB_OFF,2,16,4);
  7397  0060D8  0E8E               	movlw	low _Conf2_ChannelB_OFF
  7398  0060DA  0100               	movlb	0	; () banked
  7399  0060DC  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7400  0060DE  0EF2               	movlw	high _Conf2_ChannelB_OFF
  7401  0060E0  0100               	movlb	0	; () banked
  7402  0060E2  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7403  0060E4  0E02               	movlw	2
  7404  0060E6  0100               	movlb	0	; () banked
  7405  0060E8  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7406  0060EA  0E10               	movlw	16
  7407  0060EC  0100               	movlb	0	; () banked
  7408  0060EE  6F87               	movwf	SendRF_wait@size& (0+255),b
  7409  0060F0  0E04               	movlw	4
  7410  0060F2  0100               	movlb	0	; () banked
  7411  0060F4  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7412  0060F6  ECA5  F048         	call	_SendRF_wait	;wreg free
  7413                           
  7414                           ;RF.c: 186: Conf2_ChannelB_Status = 0;
  7415  0060FA  0E00               	movlw	0
  7416  0060FC  6E28               	movwf	_Conf2_ChannelB_Status,c
  7417                           
  7418                           ;RF.c: 187: }
  7419  0060FE  0012               	return	
  7420  006100                     l15034:
  7421                           
  7422                           ;RF.c: 188: else
  7423                           ;RF.c: 189: {
  7424                           ;RF.c: 190: SendRF_wait(Conf2_ChannelB_ON,2,16,4);
  7425  006100  0E9E               	movlw	low _Conf2_ChannelB_ON
  7426  006102  0100               	movlb	0	; () banked
  7427  006104  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7428  006106  0EF2               	movlw	high _Conf2_ChannelB_ON
  7429  006108  0100               	movlb	0	; () banked
  7430  00610A  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7431  00610C  0E02               	movlw	2
  7432  00610E  0100               	movlb	0	; () banked
  7433  006110  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7434  006112  0E10               	movlw	16
  7435  006114  0100               	movlb	0	; () banked
  7436  006116  6F87               	movwf	SendRF_wait@size& (0+255),b
  7437  006118  0E04               	movlw	4
  7438  00611A  0100               	movlb	0	; () banked
  7439  00611C  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7440  00611E  ECA5  F048         	call	_SendRF_wait	;wreg free
  7441                           
  7442                           ;RF.c: 191: Conf2_ChannelB_Status = 1;
  7443  006122  0E01               	movlw	1
  7444  006124  6E28               	movwf	_Conf2_ChannelB_Status,c
  7445                           
  7446                           ;RF.c: 192: }
  7447                           ;RF.c: 193: break;
  7448  006126  0012               	return	
  7449  006128                     l15038:
  7450                           
  7451                           ;RF.c: 196: if(Conf2_ChannelD_Status)
  7452  006128  5029               	movf	_Conf2_ChannelD_Status,w,c
  7453  00612A  B4D8               	btfsc	status,2,c
  7454  00612C  D014               	goto	l15044
  7455                           
  7456                           ;RF.c: 197: {
  7457                           ;RF.c: 198: SendRF_wait(Conf2_ChannelD_OFF,2,16,4);
  7458  00612E  0EAE               	movlw	low _Conf2_ChannelD_OFF
  7459  006130  0100               	movlb	0	; () banked
  7460  006132  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7461  006134  0EF2               	movlw	high _Conf2_ChannelD_OFF
  7462  006136  0100               	movlb	0	; () banked
  7463  006138  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7464  00613A  0E02               	movlw	2
  7465  00613C  0100               	movlb	0	; () banked
  7466  00613E  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7467  006140  0E10               	movlw	16
  7468  006142  0100               	movlb	0	; () banked
  7469  006144  6F87               	movwf	SendRF_wait@size& (0+255),b
  7470  006146  0E04               	movlw	4
  7471  006148  0100               	movlb	0	; () banked
  7472  00614A  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7473  00614C  ECA5  F048         	call	_SendRF_wait	;wreg free
  7474                           
  7475                           ;RF.c: 199: Conf2_ChannelD_Status = 0;
  7476  006150  0E00               	movlw	0
  7477  006152  6E29               	movwf	_Conf2_ChannelD_Status,c
  7478                           
  7479                           ;RF.c: 200: }
  7480  006154  0012               	return	
  7481  006156                     l15044:
  7482                           
  7483                           ;RF.c: 201: else
  7484                           ;RF.c: 202: {
  7485                           ;RF.c: 203: SendRF_wait(Conf2_ChannelD_ON,2,16,4);
  7486  006156  0EBE               	movlw	low _Conf2_ChannelD_ON
  7487  006158  0100               	movlb	0	; () banked
  7488  00615A  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7489  00615C  0EF2               	movlw	high _Conf2_ChannelD_ON
  7490  00615E  0100               	movlb	0	; () banked
  7491  006160  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7492  006162  0E02               	movlw	2
  7493  006164  0100               	movlb	0	; () banked
  7494  006166  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7495  006168  0E10               	movlw	16
  7496  00616A  0100               	movlb	0	; () banked
  7497  00616C  6F87               	movwf	SendRF_wait@size& (0+255),b
  7498  00616E  0E04               	movlw	4
  7499  006170  0100               	movlb	0	; () banked
  7500  006172  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7501  006174  ECA5  F048         	call	_SendRF_wait	;wreg free
  7502                           
  7503                           ;RF.c: 204: Conf2_ChannelD_Status = 1;
  7504  006178  0E01               	movlw	1
  7505  00617A  6E29               	movwf	_Conf2_ChannelD_Status,c
  7506                           
  7507                           ;RF.c: 205: }
  7508                           ;RF.c: 206: break;
  7509  00617C  0012               	return	
  7510  00617E                     l15048:
  7511                           
  7512                           ;RF.c: 209: if(Conf2_ChannelH_1_Status)
  7513  00617E  502A               	movf	_Conf2_ChannelH_1_Status,w,c
  7514  006180  B4D8               	btfsc	status,2,c
  7515  006182  D014               	goto	l15054
  7516                           
  7517                           ;RF.c: 210: {
  7518                           ;RF.c: 211: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,4);
  7519  006184  0ECE               	movlw	low _Conf2_ChannelH_1_OFF
  7520  006186  0100               	movlb	0	; () banked
  7521  006188  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7522  00618A  0EF2               	movlw	high _Conf2_ChannelH_1_OFF
  7523  00618C  0100               	movlb	0	; () banked
  7524  00618E  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7525  006190  0E02               	movlw	2
  7526  006192  0100               	movlb	0	; () banked
  7527  006194  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7528  006196  0E10               	movlw	16
  7529  006198  0100               	movlb	0	; () banked
  7530  00619A  6F87               	movwf	SendRF_wait@size& (0+255),b
  7531  00619C  0E04               	movlw	4
  7532  00619E  0100               	movlb	0	; () banked
  7533  0061A0  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7534  0061A2  ECA5  F048         	call	_SendRF_wait	;wreg free
  7535                           
  7536                           ;RF.c: 212: Conf2_ChannelH_1_Status = 0;
  7537  0061A6  0E00               	movlw	0
  7538  0061A8  6E2A               	movwf	_Conf2_ChannelH_1_Status,c
  7539                           
  7540                           ;RF.c: 213: }
  7541  0061AA  0012               	return	
  7542  0061AC                     l15054:
  7543                           
  7544                           ;RF.c: 214: else
  7545                           ;RF.c: 215: {
  7546                           ;RF.c: 216: SendRF_wait(Conf2_ChannelH_1_ON,2,16,4);
  7547  0061AC  0EDE               	movlw	low _Conf2_ChannelH_1_ON
  7548  0061AE  0100               	movlb	0	; () banked
  7549  0061B0  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7550  0061B2  0EF2               	movlw	high _Conf2_ChannelH_1_ON
  7551  0061B4  0100               	movlb	0	; () banked
  7552  0061B6  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7553  0061B8  0E02               	movlw	2
  7554  0061BA  0100               	movlb	0	; () banked
  7555  0061BC  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7556  0061BE  0E10               	movlw	16
  7557  0061C0  0100               	movlb	0	; () banked
  7558  0061C2  6F87               	movwf	SendRF_wait@size& (0+255),b
  7559  0061C4  0E04               	movlw	4
  7560  0061C6  0100               	movlb	0	; () banked
  7561  0061C8  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7562  0061CA  ECA5  F048         	call	_SendRF_wait	;wreg free
  7563                           
  7564                           ;RF.c: 217: Conf2_ChannelH_1_Status = 1;
  7565  0061CE  0E01               	movlw	1
  7566  0061D0  6E2A               	movwf	_Conf2_ChannelH_1_Status,c
  7567                           
  7568                           ;RF.c: 218: }
  7569                           ;RF.c: 219: break;
  7570  0061D2  0012               	return	
  7571  0061D4                     l15058:
  7572                           
  7573                           ;RF.c: 222: if(Conf2_ChannelH_2_Status)
  7574  0061D4  502B               	movf	_Conf2_ChannelH_2_Status,w,c
  7575  0061D6  B4D8               	btfsc	status,2,c
  7576  0061D8  D014               	goto	l15064
  7577                           
  7578                           ;RF.c: 223: {
  7579                           ;RF.c: 224: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,4);
  7580  0061DA  0EEE               	movlw	low _Conf2_ChannelH_2_OFF
  7581  0061DC  0100               	movlb	0	; () banked
  7582  0061DE  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7583  0061E0  0EF2               	movlw	high _Conf2_ChannelH_2_OFF
  7584  0061E2  0100               	movlb	0	; () banked
  7585  0061E4  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7586  0061E6  0E02               	movlw	2
  7587  0061E8  0100               	movlb	0	; () banked
  7588  0061EA  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7589  0061EC  0E10               	movlw	16
  7590  0061EE  0100               	movlb	0	; () banked
  7591  0061F0  6F87               	movwf	SendRF_wait@size& (0+255),b
  7592  0061F2  0E04               	movlw	4
  7593  0061F4  0100               	movlb	0	; () banked
  7594  0061F6  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7595  0061F8  ECA5  F048         	call	_SendRF_wait	;wreg free
  7596                           
  7597                           ;RF.c: 225: Conf2_ChannelH_2_Status = 0;
  7598  0061FC  0E00               	movlw	0
  7599  0061FE  6E2B               	movwf	_Conf2_ChannelH_2_Status,c
  7600                           
  7601                           ;RF.c: 226: }
  7602  006200  0012               	return	
  7603  006202                     l15064:
  7604                           
  7605                           ;RF.c: 227: else
  7606                           ;RF.c: 228: {
  7607                           ;RF.c: 229: SendRF_wait(Conf2_ChannelH_2_ON,2,16,4);
  7608  006202  0EFE               	movlw	low _Conf2_ChannelH_2_ON
  7609  006204  0100               	movlb	0	; () banked
  7610  006206  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7611  006208  0EF2               	movlw	high _Conf2_ChannelH_2_ON
  7612  00620A  0100               	movlb	0	; () banked
  7613  00620C  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7614  00620E  0E02               	movlw	2
  7615  006210  0100               	movlb	0	; () banked
  7616  006212  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7617  006214  0E10               	movlw	16
  7618  006216  0100               	movlb	0	; () banked
  7619  006218  6F87               	movwf	SendRF_wait@size& (0+255),b
  7620  00621A  0E04               	movlw	4
  7621  00621C  0100               	movlb	0	; () banked
  7622  00621E  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7623  006220  ECA5  F048         	call	_SendRF_wait	;wreg free
  7624                           
  7625                           ;RF.c: 230: Conf2_ChannelH_2_Status = 1;
  7626  006224  0E01               	movlw	1
  7627  006226  6E2B               	movwf	_Conf2_ChannelH_2_Status,c
  7628                           
  7629                           ;RF.c: 231: }
  7630                           ;RF.c: 232: break;
  7631  006228  0012               	return	
  7632  00622A                     l15068:
  7633                           
  7634                           ;RF.c: 235: if(Conf2_ChannelH_3_Status)
  7635  00622A  502C               	movf	_Conf2_ChannelH_3_Status,w,c
  7636  00622C  B4D8               	btfsc	status,2,c
  7637  00622E  D014               	goto	l15074
  7638                           
  7639                           ;RF.c: 236: {
  7640                           ;RF.c: 237: SendRF_wait(Conf2_ChannelH_3_OFF,2,16,4);
  7641  006230  0E0E               	movlw	low _Conf2_ChannelH_3_OFF
  7642  006232  0100               	movlb	0	; () banked
  7643  006234  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7644  006236  0EF3               	movlw	high _Conf2_ChannelH_3_OFF
  7645  006238  0100               	movlb	0	; () banked
  7646  00623A  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7647  00623C  0E02               	movlw	2
  7648  00623E  0100               	movlb	0	; () banked
  7649  006240  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7650  006242  0E10               	movlw	16
  7651  006244  0100               	movlb	0	; () banked
  7652  006246  6F87               	movwf	SendRF_wait@size& (0+255),b
  7653  006248  0E04               	movlw	4
  7654  00624A  0100               	movlb	0	; () banked
  7655  00624C  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7656  00624E  ECA5  F048         	call	_SendRF_wait	;wreg free
  7657                           
  7658                           ;RF.c: 238: Conf2_ChannelH_3_Status = 0;
  7659  006252  0E00               	movlw	0
  7660  006254  6E2C               	movwf	_Conf2_ChannelH_3_Status,c
  7661                           
  7662                           ;RF.c: 239: }
  7663  006256  0012               	return	
  7664  006258                     l15074:
  7665                           
  7666                           ;RF.c: 240: else
  7667                           ;RF.c: 241: {
  7668                           ;RF.c: 242: SendRF_wait(Conf2_ChannelH_3_ON,2,16,4);
  7669  006258  0E1E               	movlw	low _Conf2_ChannelH_3_ON
  7670  00625A  0100               	movlb	0	; () banked
  7671  00625C  6F84               	movwf	SendRF_wait@Code& (0+255),b
  7672  00625E  0EF3               	movlw	high _Conf2_ChannelH_3_ON
  7673  006260  0100               	movlb	0	; () banked
  7674  006262  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  7675  006264  0E02               	movlw	2
  7676  006266  0100               	movlb	0	; () banked
  7677  006268  6F86               	movwf	SendRF_wait@Config& (0+255),b
  7678  00626A  0E10               	movlw	16
  7679  00626C  0100               	movlb	0	; () banked
  7680  00626E  6F87               	movwf	SendRF_wait@size& (0+255),b
  7681  006270  0E04               	movlw	4
  7682  006272  0100               	movlb	0	; () banked
  7683  006274  6F88               	movwf	SendRF_wait@amount& (0+255),b
  7684  006276  ECA5  F048         	call	_SendRF_wait	;wreg free
  7685                           
  7686                           ;RF.c: 243: Conf2_ChannelH_3_Status = 1;
  7687  00627A  0E01               	movlw	1
  7688  00627C  6E2C               	movwf	_Conf2_ChannelH_3_Status,c
  7689                           
  7690                           ;RF.c: 248: }
  7691                           
  7692                           ;RF.c: 247: break;
  7693                           
  7694                           ;RF.c: 246: default:
  7695                           
  7696                           ;RF.c: 244: }
  7697                           ;RF.c: 245: break;
  7698  00627E  0012               	return	
  7699  006280                     l15080:
  7700  006280  0100               	movlb	0	; () banked
  7701  006282  5189               	movf	SendRF_Channel@channel& (0+255),w,b
  7702                           
  7703                           ; Switch size 1, requested type "space"
  7704                           ; Number of cases is 8, Range of values is 0 to 7
  7705                           ; switch strategies available:
  7706                           ; Name         Instructions Cycles
  7707                           ; simple_byte           25    13 (average)
  7708                           ;	Chosen strategy is simple_byte
  7709  006284  0A00               	xorlw	0	; case 0
  7710  006286  B4D8               	btfsc	status,2,c
  7711  006288  D6EE               	goto	l15022
  7712  00628A  0A01               	xorlw	1	; case 1
  7713  00628C  B4D8               	btfsc	status,2,c
  7714  00628E  D6FD               	goto	l15024
  7715  006290  0A03               	xorlw	3	; case 2
  7716  006292  B4D8               	btfsc	status,2,c
  7717  006294  D70C               	goto	l15026
  7718  006296  0A01               	xorlw	1	; case 3
  7719  006298  B4D8               	btfsc	status,2,c
  7720  00629A  D71B               	goto	l15028
  7721  00629C  0A07               	xorlw	7	; case 4
  7722  00629E  B4D8               	btfsc	status,2,c
  7723  0062A0  D743               	goto	l15038
  7724  0062A2  0A01               	xorlw	1	; case 5
  7725  0062A4  B4D8               	btfsc	status,2,c
  7726  0062A6  D76B               	goto	l15048
  7727  0062A8  0A03               	xorlw	3	; case 6
  7728  0062AA  B4D8               	btfsc	status,2,c
  7729  0062AC  D793               	goto	l15058
  7730  0062AE  0A01               	xorlw	1	; case 7
  7731  0062B0  A4D8               	btfss	status,2,c
  7732  0062B2  0012               	return	
  7733  0062B4  D7BA               	goto	l15068
  7734                           
  7735                           ; BSR set to: 0
  7736  0062B6  0012               	return		;funcret
  7737  0062B8                     __end_of_SendRF_Channel:
  7738                           	opt stack 0
  7739                           tblptru	equ	0xFF8
  7740                           tblptrh	equ	0xFF7
  7741                           tblptrl	equ	0xFF6
  7742                           tablat	equ	0xFF5
  7743                           prodh	equ	0xFF4
  7744                           prodl	equ	0xFF3
  7745                           intcon	equ	0xFF2
  7746                           postinc0	equ	0xFEE
  7747                           wreg	equ	0xFE8
  7748                           postdec1	equ	0xFE5
  7749                           fsr1h	equ	0xFE2
  7750                           fsr1l	equ	0xFE1
  7751                           indf2	equ	0xFDF
  7752                           postinc2	equ	0xFDE
  7753                           fsr2h	equ	0xFDA
  7754                           fsr2l	equ	0xFD9
  7755                           status	equ	0xFD8
  7756                           
  7757 ;; *************** function _ReadPushButton *****************
  7758 ;; Defined at:
  7759 ;;		line 52 in file "Button.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;		None
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;		None
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1    wreg      unsigned char 
  7766 ;; Registers used:
  7767 ;;		wreg
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7777 ;;Total ram usage:        0 bytes
  7778 ;; Hardware stack levels used:    1
  7779 ;; Hardware stack levels required when called:    6
  7780 ;; This function calls:
  7781 ;;		Nothing
  7782 ;; This function is called by:
  7783 ;;		_UseIRCode
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text3
  7788  0094E6                     __ptext3:
  7789                           	opt stack 0
  7790  0094E6                     _ReadPushButton:
  7791                           	opt stack 23
  7792                           
  7793                           ;Button.c: 55: if((PORTC & 0x01) != 0x01)
  7794                           
  7795                           ;incstack = 0
  7796  0094E6  B082               	btfsc	3970,0,c	;volatile
  7797  0094E8  D002               	goto	l14990
  7798                           
  7799                           ;Button.c: 56: {
  7800                           ;Button.c: 57: return 1;
  7801  0094EA  0E01               	movlw	1
  7802  0094EC  0012               	return	
  7803  0094EE                     l14990:
  7804                           
  7805                           ;Button.c: 58: }
  7806                           ;Button.c: 59: return 0;
  7807  0094EE  0E00               	movlw	0
  7808  0094F0  0012               	return	
  7809  0094F2  0012               	return		;funcret
  7810  0094F4                     __end_of_ReadPushButton:
  7811                           	opt stack 0
  7812                           tblptru	equ	0xFF8
  7813                           tblptrh	equ	0xFF7
  7814                           tblptrl	equ	0xFF6
  7815                           tablat	equ	0xFF5
  7816                           prodh	equ	0xFF4
  7817                           prodl	equ	0xFF3
  7818                           intcon	equ	0xFF2
  7819                           postinc0	equ	0xFEE
  7820                           wreg	equ	0xFE8
  7821                           postdec1	equ	0xFE5
  7822                           fsr1h	equ	0xFE2
  7823                           fsr1l	equ	0xFE1
  7824                           indf2	equ	0xFDF
  7825                           postinc2	equ	0xFDE
  7826                           fsr2h	equ	0xFDA
  7827                           fsr2l	equ	0xFD9
  7828                           status	equ	0xFD8
  7829                           
  7830 ;; *************** function _ReadCodeButtons *****************
  7831 ;; Defined at:
  7832 ;;		line 67 in file "Button.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;		None
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  temp            1   37[BANK0 ] unsigned char 
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      unsigned char 
  7839 ;; Registers used:
  7840 ;;		wreg, status,2, status,0, cstack
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7849 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7850 ;;Total ram usage:        1 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    7
  7853 ;; This function calls:
  7854 ;;		_delayUS
  7855 ;; This function is called by:
  7856 ;;		_UseIRCode
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           	psect	text4
  7861  008F4C                     __ptext4:
  7862                           	opt stack 0
  7863  008F4C                     _ReadCodeButtons:
  7864                           	opt stack 22
  7865                           
  7866                           ;Button.c: 69: unsigned char temp = 0;
  7867                           
  7868                           ;incstack = 0
  7869  008F4C  0E00               	movlw	0
  7870  008F4E  0100               	movlb	0	; () banked
  7871  008F50  6F85               	movwf	ReadCodeButtons@temp& (0+255),b
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;Button.c: 71: (LATC &= ~0x10);
  7875  008F52  988B               	bcf	3979,4,c	;volatile
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;Button.c: 72: delayUS(5);
  7879  008F54  0E05               	movlw	5
  7880  008F56  0100               	movlb	0	; () banked
  7881  008F58  6F7C               	movwf	delayUS@US& (0+255),b
  7882  008F5A  0E00               	movlw	0
  7883  008F5C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7884  008F5E  0E00               	movlw	0
  7885  008F60  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7886  008F62  0E00               	movlw	0
  7887  008F64  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7888  008F66  EC7B  F047         	call	_delayUS	;wreg free
  7889                           
  7890                           ;Button.c: 75: if((PORTB & 0x01) != 0x01)
  7891  008F6A  B081               	btfsc	3969,0,c	;volatile
  7892  008F6C  D004               	goto	l15004
  7893                           
  7894                           ;Button.c: 76: {
  7895                           ;Button.c: 77: temp +=8;
  7896  008F6E  0E08               	movlw	8
  7897  008F70  0100               	movlb	0	; () banked
  7898  008F72  2785               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7899  008F74  D000               	goto	l15004
  7900  008F76                     l15004:
  7901                           
  7902                           ;Button.c: 78: }
  7903                           ;Button.c: 79: if((PORTB & 0x02) != 0x02)
  7904  008F76  B281               	btfsc	3969,1,c	;volatile
  7905  008F78  D004               	goto	l15008
  7906                           
  7907                           ;Button.c: 80: {
  7908                           ;Button.c: 81: temp +=4;
  7909  008F7A  0E04               	movlw	4
  7910  008F7C  0100               	movlb	0	; () banked
  7911  008F7E  2785               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7912  008F80  D000               	goto	l15008
  7913  008F82                     l15008:
  7914                           
  7915                           ;Button.c: 82: }
  7916                           ;Button.c: 83: if((PORTB & 0x04) != 0x04)
  7917  008F82  B481               	btfsc	3969,2,c	;volatile
  7918  008F84  D004               	goto	l15012
  7919                           
  7920                           ;Button.c: 84: {
  7921                           ;Button.c: 85: temp +=2;
  7922  008F86  0E02               	movlw	2
  7923  008F88  0100               	movlb	0	; () banked
  7924  008F8A  2785               	addwf	ReadCodeButtons@temp& (0+255),f,b
  7925  008F8C  D000               	goto	l15012
  7926  008F8E                     l15012:
  7927                           
  7928                           ;Button.c: 86: }
  7929                           ;Button.c: 87: if((PORTB & 0x08) != 0x08)
  7930  008F8E  B681               	btfsc	3969,3,c	;volatile
  7931  008F90  D002               	goto	l1647
  7932                           
  7933                           ;Button.c: 88: {
  7934                           ;Button.c: 89: temp +=1;
  7935  008F92  0100               	movlb	0	; () banked
  7936  008F94  2B85               	incf	ReadCodeButtons@temp& (0+255),f,b
  7937  008F96                     l1647:
  7938                           
  7939                           ;Button.c: 90: }
  7940                           ;Button.c: 91: (LATC |= 0x10);
  7941  008F96  888B               	bsf	3979,4,c	;volatile
  7942                           
  7943                           ;Button.c: 92: return temp;
  7944  008F98  0100               	movlb	0	; () banked
  7945  008F9A  5185               	movf	ReadCodeButtons@temp& (0+255),w,b
  7946  008F9C  0012               	return	
  7947                           
  7948                           ; BSR set to: 0
  7949                           
  7950                           ; BSR set to: 0
  7951  008F9E  0012               	return		;funcret
  7952  008FA0                     __end_of_ReadCodeButtons:
  7953                           	opt stack 0
  7954                           tblptru	equ	0xFF8
  7955                           tblptrh	equ	0xFF7
  7956                           tblptrl	equ	0xFF6
  7957                           tablat	equ	0xFF5
  7958                           prodh	equ	0xFF4
  7959                           prodl	equ	0xFF3
  7960                           intcon	equ	0xFF2
  7961                           postinc0	equ	0xFEE
  7962                           wreg	equ	0xFE8
  7963                           postdec1	equ	0xFE5
  7964                           fsr1h	equ	0xFE2
  7965                           fsr1l	equ	0xFE1
  7966                           indf2	equ	0xFDF
  7967                           postinc2	equ	0xFDE
  7968                           fsr2h	equ	0xFDA
  7969                           fsr2l	equ	0xFD9
  7970                           status	equ	0xFD8
  7971                           
  7972 ;; *************** function _UseBluetooth *****************
  7973 ;; Defined at:
  7974 ;;		line 282 in file "Bluetooth.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;  String          2    0[BANK2 ] PTR unsigned char 
  7977 ;;		 -> main@BluetoothString(255), 
  7978 ;;  StringPos       1    2[BANK2 ] unsigned char 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  buf           100   15[BANK2 ] unsigned char [100]
  7981 ;;  rfchannelSTR   10  115[BANK2 ] unsigned char [10]
  7982 ;;  temp            4  142[BANK2 ] unsigned long 
  7983 ;;  EnteredNEC      4  133[BANK2 ] unsigned long 
  7984 ;;  tempNec         4  126[BANK2 ] unsigned long 
  7985 ;;  i               1  146[BANK2 ] unsigned char 
  7986 ;;  NecCommand      1  141[BANK2 ] unsigned char 
  7987 ;;  NecAddress      1  140[BANK2 ] unsigned char 
  7988 ;;  rfconf          1  139[BANK2 ] unsigned char 
  7989 ;;  tempRFArray     1  138[BANK2 ] unsigned char 
  7990 ;;  ok              1  137[BANK2 ] unsigned char 
  7991 ;;  device          1  132[BANK2 ] unsigned char 
  7992 ;;  EmptyPlace      1  131[BANK2 ] unsigned char 
  7993 ;;  timeout         1  130[BANK2 ] unsigned char 
  7994 ;;  set             1  125[BANK2 ] unsigned char 
  7995 ;; Return value:  Size  Location     Type
  7996 ;;                  1    wreg      unsigned char 
  7997 ;; Registers used:
  7998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8004 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8005 ;;      Locals:         0       0       0     132       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8006 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8007 ;;      Totals:         0       0       0     147       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8008 ;;Total ram usage:      147 bytes
  8009 ;; Hardware stack levels used:    1
  8010 ;; Hardware stack levels required when called:   11
  8011 ;; This function calls:
  8012 ;;		_ClearUSART
  8013 ;;		_DecodeNEC
  8014 ;;		_EncodeNEC
  8015 ;;		_GetNumber
  8016 ;;		_GetStringAfterComma
  8017 ;;		_ReadVoltage
  8018 ;;		_SendNEC_wait
  8019 ;;		_SendRF_wait
  8020 ;;		_StringAddEqual
  8021 ;;		_StringContains
  8022 ;;		_StringContainsCaseInsensitive
  8023 ;;		_StringMatch
  8024 ;;		_StringMatchCaseInsensitive
  8025 ;;		_SyncGlobalToEEPROM
  8026 ;;		_UARTchar
  8027 ;;		_UARTcommandMenu
  8028 ;;		_UARTstring
  8029 ;;		_UARTstringCRLN
  8030 ;;		_WaitForIRsignal
  8031 ;;		_cleanBuffer
  8032 ;;		_delayUS
  8033 ;;		_lowercaseString
  8034 ;;		_sprintf
  8035 ;; This function is called by:
  8036 ;;		_main
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text5
  8041  0001F6                     __ptext5:
  8042                           	opt stack 0
  8043  0001F6                     _UseBluetooth:
  8044                           	opt stack 19
  8045                           
  8046                           ;Bluetooth.c: 284: unsigned char ok = 1;
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;incstack = 0
  8050  0001F6  0E01               	movlw	1
  8051  0001F8  0102               	movlb	2	; () banked
  8052  0001FA  6F89               	movwf	UseBluetooth@ok& (0+255),b
  8053                           
  8054                           ;Bluetooth.c: 286: unsigned long EnteredNEC = 0;
  8055  0001FC  0E00               	movlw	0
  8056  0001FE  0102               	movlb	2	; () banked
  8057  000200  6F85               	movwf	UseBluetooth@EnteredNEC& (0+255),b
  8058  000202  0E00               	movlw	0
  8059  000204  6F86               	movwf	(UseBluetooth@EnteredNEC+1)& (0+255),b
  8060  000206  0E00               	movlw	0
  8061  000208  6F87               	movwf	(UseBluetooth@EnteredNEC+2)& (0+255),b
  8062  00020A  0E00               	movlw	0
  8063  00020C  6F88               	movwf	(UseBluetooth@EnteredNEC+3)& (0+255),b
  8064                           
  8065                           ;Bluetooth.c: 287: unsigned char NecAddress = 0;
  8066  00020E  0E00               	movlw	0
  8067  000210  0102               	movlb	2	; () banked
  8068  000212  6F8C               	movwf	UseBluetooth@NecAddress& (0+255),b
  8069                           
  8070                           ;Bluetooth.c: 288: unsigned char NecCommand = 0;
  8071  000214  0E00               	movlw	0
  8072  000216  0102               	movlb	2	; () banked
  8073  000218  6F8D               	movwf	UseBluetooth@NecCommand& (0+255),b
  8074                           
  8075                           ;Bluetooth.c: 289: unsigned long temp = 0;
  8076  00021A  0E00               	movlw	0
  8077  00021C  0102               	movlb	2	; () banked
  8078  00021E  6F8E               	movwf	UseBluetooth@temp& (0+255),b
  8079  000220  0E00               	movlw	0
  8080  000222  6F8F               	movwf	(UseBluetooth@temp+1)& (0+255),b
  8081  000224  0E00               	movlw	0
  8082  000226  6F90               	movwf	(UseBluetooth@temp+2)& (0+255),b
  8083  000228  0E00               	movlw	0
  8084  00022A  6F91               	movwf	(UseBluetooth@temp+3)& (0+255),b
  8085                           
  8086                           ;Bluetooth.c: 290: unsigned long tempNec = 0;
  8087  00022C  0E00               	movlw	0
  8088  00022E  0102               	movlb	2	; () banked
  8089  000230  6F7E               	movwf	UseBluetooth@tempNec& (0+255),b
  8090  000232  0E00               	movlw	0
  8091  000234  6F7F               	movwf	(UseBluetooth@tempNec+1)& (0+255),b
  8092  000236  0E00               	movlw	0
  8093  000238  6F80               	movwf	(UseBluetooth@tempNec+2)& (0+255),b
  8094  00023A  0E00               	movlw	0
  8095  00023C  6F81               	movwf	(UseBluetooth@tempNec+3)& (0+255),b
  8096                           
  8097                           ;Bluetooth.c: 291: unsigned char buf[100];
  8098                           ;Bluetooth.c: 292: unsigned char timeout =0;
  8099  00023E  0E00               	movlw	0
  8100  000240  0102               	movlb	2	; () banked
  8101  000242  6F82               	movwf	UseBluetooth@timeout& (0+255),b
  8102                           
  8103                           ;Bluetooth.c: 293: unsigned char rfchannelSTR[10];
  8104                           ;Bluetooth.c: 294: unsigned char rfconf, i, tempRFArray;
  8105                           ;Bluetooth.c: 295: unsigned char device = 0;
  8106  000244  0E00               	movlw	0
  8107  000246  0102               	movlb	2	; () banked
  8108  000248  6F84               	movwf	UseBluetooth@device& (0+255),b
  8109                           
  8110                           ;Bluetooth.c: 296: unsigned char EmptyPlace = 0;
  8111  00024A  0E00               	movlw	0
  8112  00024C  0102               	movlb	2	; () banked
  8113  00024E  6F83               	movwf	UseBluetooth@EmptyPlace& (0+255),b
  8114                           
  8115                           ;Bluetooth.c: 297: unsigned char set = 0;
  8116  000250  0E00               	movlw	0
  8117  000252  0102               	movlb	2	; () banked
  8118  000254  6F7D               	movwf	UseBluetooth@set& (0+255),b
  8119                           
  8120                           ; BSR set to: 2
  8121                           ;Bluetooth.c: 299: cleanBuffer(buf,100);
  8122  000256  0E0F               	movlw	low UseBluetooth@buf
  8123  000258  0100               	movlb	0	; () banked
  8124  00025A  6F7C               	movwf	cleanBuffer@data& (0+255),b
  8125  00025C  0E02               	movlw	high UseBluetooth@buf
  8126  00025E  0100               	movlb	0	; () banked
  8127  000260  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  8128  000262  0E00               	movlw	0
  8129  000264  0100               	movlb	0	; () banked
  8130  000266  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  8131  000268  0E64               	movlw	100
  8132  00026A  6F7E               	movwf	cleanBuffer@count& (0+255),b
  8133  00026C  ECCA  F046         	call	_cleanBuffer	;wreg free
  8134                           
  8135                           ;Bluetooth.c: 300: cleanBuffer(rfchannelSTR,10);
  8136  000270  0E73               	movlw	low UseBluetooth@rfchannelSTR
  8137  000272  0100               	movlb	0	; () banked
  8138  000274  6F7C               	movwf	cleanBuffer@data& (0+255),b
  8139  000276  0E02               	movlw	high UseBluetooth@rfchannelSTR
  8140  000278  0100               	movlb	0	; () banked
  8141  00027A  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  8142  00027C  0E00               	movlw	0
  8143  00027E  0100               	movlb	0	; () banked
  8144  000280  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  8145  000282  0E0A               	movlw	10
  8146  000284  6F7E               	movwf	cleanBuffer@count& (0+255),b
  8147  000286  ECCA  F046         	call	_cleanBuffer	;wreg free
  8148                           
  8149                           ;Bluetooth.c: 302: if(StringContainsCaseInsensitive(String,(unsigned char *)"Conf1"))
  8150  00028A  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  8151  00028E  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  8152  000292  0EC0               	movlw	low STR_20
  8153  000294  0100               	movlb	0	; () banked
  8154  000296  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8155  000298  0EFF               	movlw	high STR_20
  8156  00029A  0100               	movlb	0	; () banked
  8157  00029C  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8158  00029E  EC98  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  8159  0002A2  0900               	iorlw	0
  8160  0002A4  B4D8               	btfsc	status,2,c
  8161  0002A6  D083               	goto	l15384
  8162                           
  8163                           ;Bluetooth.c: 303: {
  8164                           ;Bluetooth.c: 304: if(StringMatchCaseInsensitive(String,Conf1_ChannelD_STR))
  8165  0002A8  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8166  0002AC  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8167  0002B0  0E2E               	movlw	low _Conf1_ChannelD_STR
  8168  0002B2  0100               	movlb	0	; () banked
  8169  0002B4  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8170  0002B6  0EF3               	movlw	high _Conf1_ChannelD_STR
  8171  0002B8  0100               	movlb	0	; () banked
  8172  0002BA  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8173  0002BC  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8174  0002C0  0900               	iorlw	0
  8175  0002C2  B4D8               	btfsc	status,2,c
  8176  0002C4  D012               	goto	l15366
  8177                           
  8178                           ;Bluetooth.c: 305: {
  8179                           ;Bluetooth.c: 307: SendRF_wait(Conf1_ChannelD,1,12,8);
  8180  0002C6  0E69               	movlw	low _Conf1_ChannelD
  8181  0002C8  0100               	movlb	0	; () banked
  8182  0002CA  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8183  0002CC  0EF3               	movlw	high _Conf1_ChannelD
  8184  0002CE  0100               	movlb	0	; () banked
  8185  0002D0  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8186  0002D2  0E01               	movlw	1
  8187  0002D4  0100               	movlb	0	; () banked
  8188  0002D6  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8189  0002D8  0E0C               	movlw	12
  8190  0002DA  0100               	movlb	0	; () banked
  8191  0002DC  6F87               	movwf	SendRF_wait@size& (0+255),b
  8192  0002DE  0E08               	movlw	8
  8193  0002E0  0100               	movlb	0	; () banked
  8194  0002E2  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8195  0002E4  ECA5  F048         	call	_SendRF_wait	;wreg free
  8196                           
  8197                           ;Bluetooth.c: 308: }
  8198  0002E8  D054               	goto	l15378
  8199  0002EA                     l15366:
  8200                           
  8201                           ;Bluetooth.c: 309: else if(StringMatchCaseInsensitive(String,Conf1_ChannelE_STR))
  8202  0002EA  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8203  0002EE  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8204  0002F2  0E3D               	movlw	low _Conf1_ChannelE_STR
  8205  0002F4  0100               	movlb	0	; () banked
  8206  0002F6  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8207  0002F8  0EF3               	movlw	high _Conf1_ChannelE_STR
  8208  0002FA  0100               	movlb	0	; () banked
  8209  0002FC  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8210  0002FE  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8211  000302  0900               	iorlw	0
  8212  000304  B4D8               	btfsc	status,2,c
  8213  000306  D012               	goto	l15370
  8214                           
  8215                           ;Bluetooth.c: 310: {
  8216                           ;Bluetooth.c: 312: SendRF_wait(Conf1_ChannelE,1,12,8);
  8217  000308  0E75               	movlw	low _Conf1_ChannelE
  8218  00030A  0100               	movlb	0	; () banked
  8219  00030C  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8220  00030E  0EF3               	movlw	high _Conf1_ChannelE
  8221  000310  0100               	movlb	0	; () banked
  8222  000312  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8223  000314  0E01               	movlw	1
  8224  000316  0100               	movlb	0	; () banked
  8225  000318  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8226  00031A  0E0C               	movlw	12
  8227  00031C  0100               	movlb	0	; () banked
  8228  00031E  6F87               	movwf	SendRF_wait@size& (0+255),b
  8229  000320  0E08               	movlw	8
  8230  000322  0100               	movlb	0	; () banked
  8231  000324  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8232  000326  ECA5  F048         	call	_SendRF_wait	;wreg free
  8233                           
  8234                           ;Bluetooth.c: 313: }
  8235  00032A  D033               	goto	l15378
  8236  00032C                     l15370:
  8237                           
  8238                           ;Bluetooth.c: 314: else if(StringMatchCaseInsensitive(String,Conf1_ChannelF_STR))
  8239  00032C  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8240  000330  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8241  000334  0E4C               	movlw	low _Conf1_ChannelF_STR
  8242  000336  0100               	movlb	0	; () banked
  8243  000338  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8244  00033A  0EF3               	movlw	high _Conf1_ChannelF_STR
  8245  00033C  0100               	movlb	0	; () banked
  8246  00033E  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8247  000340  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8248  000344  0900               	iorlw	0
  8249  000346  B4D8               	btfsc	status,2,c
  8250  000348  D012               	goto	l15374
  8251                           
  8252                           ;Bluetooth.c: 315: {
  8253                           ;Bluetooth.c: 317: SendRF_wait(Conf1_ChannelF,1,12,8);
  8254  00034A  0E81               	movlw	low _Conf1_ChannelF
  8255  00034C  0100               	movlb	0	; () banked
  8256  00034E  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8257  000350  0EF3               	movlw	high _Conf1_ChannelF
  8258  000352  0100               	movlb	0	; () banked
  8259  000354  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8260  000356  0E01               	movlw	1
  8261  000358  0100               	movlb	0	; () banked
  8262  00035A  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8263  00035C  0E0C               	movlw	12
  8264  00035E  0100               	movlb	0	; () banked
  8265  000360  6F87               	movwf	SendRF_wait@size& (0+255),b
  8266  000362  0E08               	movlw	8
  8267  000364  0100               	movlb	0	; () banked
  8268  000366  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8269  000368  ECA5  F048         	call	_SendRF_wait	;wreg free
  8270                           
  8271                           ;Bluetooth.c: 318: }
  8272  00036C  D012               	goto	l15378
  8273  00036E                     l15374:
  8274                           
  8275                           ;Bluetooth.c: 319: else
  8276                           ;Bluetooth.c: 320: {
  8277                           ;Bluetooth.c: 322: UARTstring((unsigned char *)SYNTAX_ERR);
  8278  00036E  0E5B               	movlw	low _SYNTAX_ERR
  8279  000370  0100               	movlb	0	; () banked
  8280  000372  6F7D               	movwf	UARTstring@data& (0+255),b
  8281  000374  0EF3               	movlw	high _SYNTAX_ERR
  8282  000376  0100               	movlb	0	; () banked
  8283  000378  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  8284  00037A  ECF7  F046         	call	_UARTstring	;wreg free
  8285                           
  8286                           ;Bluetooth.c: 323: UARTstring((unsigned char *)CRLN);
  8287  00037E  0EA7               	movlw	low _CRLN
  8288  000380  0100               	movlb	0	; () banked
  8289  000382  6F7D               	movwf	UARTstring@data& (0+255),b
  8290  000384  0EF3               	movlw	high _CRLN
  8291  000386  0100               	movlb	0	; () banked
  8292  000388  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  8293  00038A  ECF7  F046         	call	_UARTstring	;wreg free
  8294                           
  8295                           ;Bluetooth.c: 324: return 0;
  8296                           ;	Return value of _UseBluetooth is never used
  8297  00038E  0012               	return	
  8298  000390  D000               	goto	l15378
  8299  000392                     l15378:
  8300                           
  8301                           ;Bluetooth.c: 325: }
  8302                           ;Bluetooth.c: 326: if(ok)
  8303  000392  0102               	movlb	2	; () banked
  8304  000394  5189               	movf	UseBluetooth@ok& (0+255),w,b
  8305  000396  0102               	movlb	2	; () banked
  8306  000398  B4D8               	btfsc	status,2,c
  8307  00039A  0012               	return	
  8308                           
  8309                           ; BSR set to: 2
  8310                           ;Bluetooth.c: 327: {
  8311                           ;Bluetooth.c: 328: UARTstringCRLN((unsigned char *)"Configuration 1 RF code sent");
  8312  00039C  0E23               	movlw	low STR_21
  8313  00039E  0100               	movlb	0	; () banked
  8314  0003A0  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  8315  0003A2  0EFB               	movlw	high STR_21
  8316  0003A4  0100               	movlb	0	; () banked
  8317  0003A6  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8318  0003A8  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  8319                           
  8320                           ;Bluetooth.c: 330: }
  8321                           ;Bluetooth.c: 331: }
  8322                           
  8323                           ;Bluetooth.c: 329: return 1;
  8324                           ;	Return value of _UseBluetooth is never used
  8325  0003AC  0012               	return	
  8326  0003AE                     l15384:
  8327                           
  8328                           ;Bluetooth.c: 332: else if(StringContainsCaseInsensitive(String,(unsigned char *)"Conf2"
      +                          ))
  8329  0003AE  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  8330  0003B2  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  8331  0003B6  0EC6               	movlw	low STR_22
  8332  0003B8  0100               	movlb	0	; () banked
  8333  0003BA  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8334  0003BC  0EFF               	movlw	high STR_22
  8335  0003BE  0100               	movlb	0	; () banked
  8336  0003C0  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8337  0003C2  EC98  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  8338  0003C6  0900               	iorlw	0
  8339  0003C8  B4D8               	btfsc	status,2,c
  8340  0003CA  D16A               	goto	l15436
  8341                           
  8342                           ;Bluetooth.c: 333: {
  8343                           ;Bluetooth.c: 334: if(StringMatchCaseInsensitive(String,Conf2_ChannelB_ON_STR))
  8344  0003CC  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8345  0003D0  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8346  0003D4  0E6A               	movlw	low _Conf2_ChannelB_ON_STR
  8347  0003D6  0100               	movlb	0	; () banked
  8348  0003D8  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8349  0003DA  0EF2               	movlw	high _Conf2_ChannelB_ON_STR
  8350  0003DC  0100               	movlb	0	; () banked
  8351  0003DE  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8352  0003E0  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8353  0003E4  0900               	iorlw	0
  8354  0003E6  B4D8               	btfsc	status,2,c
  8355  0003E8  D012               	goto	l15390
  8356                           
  8357                           ;Bluetooth.c: 335: {
  8358                           ;Bluetooth.c: 337: SendRF_wait(Conf2_ChannelB_ON,2,16,8);
  8359  0003EA  0E9E               	movlw	low _Conf2_ChannelB_ON
  8360  0003EC  0100               	movlb	0	; () banked
  8361  0003EE  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8362  0003F0  0EF2               	movlw	high _Conf2_ChannelB_ON
  8363  0003F2  0100               	movlb	0	; () banked
  8364  0003F4  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8365  0003F6  0E02               	movlw	2
  8366  0003F8  0100               	movlb	0	; () banked
  8367  0003FA  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8368  0003FC  0E10               	movlw	16
  8369  0003FE  0100               	movlb	0	; () banked
  8370  000400  6F87               	movwf	SendRF_wait@size& (0+255),b
  8371  000402  0E08               	movlw	8
  8372  000404  0100               	movlb	0	; () banked
  8373  000406  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8374  000408  ECA5  F048         	call	_SendRF_wait	;wreg free
  8375                           
  8376                           ;Bluetooth.c: 338: }
  8377  00040C  D13B               	goto	l15430
  8378  00040E                     l15390:
  8379                           
  8380                           ;Bluetooth.c: 339: else if(StringMatchCaseInsensitive(String,Conf2_ChannelB_OFF_STR))
  8381  00040E  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8382  000412  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8383  000416  0E44               	movlw	low _Conf2_ChannelB_OFF_STR
  8384  000418  0100               	movlb	0	; () banked
  8385  00041A  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8386  00041C  0EF2               	movlw	high _Conf2_ChannelB_OFF_STR
  8387  00041E  0100               	movlb	0	; () banked
  8388  000420  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8389  000422  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8390  000426  0900               	iorlw	0
  8391  000428  B4D8               	btfsc	status,2,c
  8392  00042A  D012               	goto	l15394
  8393                           
  8394                           ;Bluetooth.c: 340: {
  8395                           ;Bluetooth.c: 342: SendRF_wait(Conf2_ChannelB_OFF,2,16,8);
  8396  00042C  0E8E               	movlw	low _Conf2_ChannelB_OFF
  8397  00042E  0100               	movlb	0	; () banked
  8398  000430  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8399  000432  0EF2               	movlw	high _Conf2_ChannelB_OFF
  8400  000434  0100               	movlb	0	; () banked
  8401  000436  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8402  000438  0E02               	movlw	2
  8403  00043A  0100               	movlb	0	; () banked
  8404  00043C  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8405  00043E  0E10               	movlw	16
  8406  000440  0100               	movlb	0	; () banked
  8407  000442  6F87               	movwf	SendRF_wait@size& (0+255),b
  8408  000444  0E08               	movlw	8
  8409  000446  0100               	movlb	0	; () banked
  8410  000448  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8411  00044A  ECA5  F048         	call	_SendRF_wait	;wreg free
  8412                           
  8413                           ;Bluetooth.c: 343: }
  8414  00044E  D11A               	goto	l15430
  8415  000450                     l15394:
  8416                           
  8417                           ;Bluetooth.c: 344: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_ON_STR))
  8418  000450  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8419  000454  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8420  000458  0E7C               	movlw	low _Conf2_ChannelD_ON_STR
  8421  00045A  0100               	movlb	0	; () banked
  8422  00045C  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8423  00045E  0EF2               	movlw	high _Conf2_ChannelD_ON_STR
  8424  000460  0100               	movlb	0	; () banked
  8425  000462  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8426  000464  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8427  000468  0900               	iorlw	0
  8428  00046A  B4D8               	btfsc	status,2,c
  8429  00046C  D012               	goto	l15398
  8430                           
  8431                           ;Bluetooth.c: 345: {
  8432                           ;Bluetooth.c: 347: SendRF_wait(Conf2_ChannelD_ON,2,16,8);
  8433  00046E  0EBE               	movlw	low _Conf2_ChannelD_ON
  8434  000470  0100               	movlb	0	; () banked
  8435  000472  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8436  000474  0EF2               	movlw	high _Conf2_ChannelD_ON
  8437  000476  0100               	movlb	0	; () banked
  8438  000478  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8439  00047A  0E02               	movlw	2
  8440  00047C  0100               	movlb	0	; () banked
  8441  00047E  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8442  000480  0E10               	movlw	16
  8443  000482  0100               	movlb	0	; () banked
  8444  000484  6F87               	movwf	SendRF_wait@size& (0+255),b
  8445  000486  0E08               	movlw	8
  8446  000488  0100               	movlb	0	; () banked
  8447  00048A  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8448  00048C  ECA5  F048         	call	_SendRF_wait	;wreg free
  8449                           
  8450                           ;Bluetooth.c: 348: }
  8451  000490  D0F9               	goto	l15430
  8452  000492                     l15398:
  8453                           
  8454                           ;Bluetooth.c: 349: else if(StringMatchCaseInsensitive(String,Conf2_ChannelD_OFF_STR))
  8455  000492  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8456  000496  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8457  00049A  0E57               	movlw	low _Conf2_ChannelD_OFF_STR
  8458  00049C  0100               	movlb	0	; () banked
  8459  00049E  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8460  0004A0  0EF2               	movlw	high _Conf2_ChannelD_OFF_STR
  8461  0004A2  0100               	movlb	0	; () banked
  8462  0004A4  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8463  0004A6  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8464  0004AA  0900               	iorlw	0
  8465  0004AC  B4D8               	btfsc	status,2,c
  8466  0004AE  D012               	goto	l15402
  8467                           
  8468                           ;Bluetooth.c: 350: {
  8469                           ;Bluetooth.c: 352: SendRF_wait(Conf2_ChannelD_OFF,2,16,8);
  8470  0004B0  0EAE               	movlw	low _Conf2_ChannelD_OFF
  8471  0004B2  0100               	movlb	0	; () banked
  8472  0004B4  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8473  0004B6  0EF2               	movlw	high _Conf2_ChannelD_OFF
  8474  0004B8  0100               	movlb	0	; () banked
  8475  0004BA  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8476  0004BC  0E02               	movlw	2
  8477  0004BE  0100               	movlb	0	; () banked
  8478  0004C0  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8479  0004C2  0E10               	movlw	16
  8480  0004C4  0100               	movlb	0	; () banked
  8481  0004C6  6F87               	movwf	SendRF_wait@size& (0+255),b
  8482  0004C8  0E08               	movlw	8
  8483  0004CA  0100               	movlb	0	; () banked
  8484  0004CC  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8485  0004CE  ECA5  F048         	call	_SendRF_wait	;wreg free
  8486                           
  8487                           ;Bluetooth.c: 353: }
  8488  0004D2  D0D8               	goto	l15430
  8489  0004D4                     l15402:
  8490                           
  8491                           ;Bluetooth.c: 354: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_ON_STR))
  8492  0004D4  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8493  0004D8  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8494  0004DC  0E08               	movlw	low _Conf2_ChannelH_1_ON_STR
  8495  0004DE  0100               	movlb	0	; () banked
  8496  0004E0  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8497  0004E2  0EF2               	movlw	high _Conf2_ChannelH_1_ON_STR
  8498  0004E4  0100               	movlb	0	; () banked
  8499  0004E6  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8500  0004E8  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8501  0004EC  0900               	iorlw	0
  8502  0004EE  B4D8               	btfsc	status,2,c
  8503  0004F0  D012               	goto	l15406
  8504                           
  8505                           ;Bluetooth.c: 355: {
  8506                           ;Bluetooth.c: 357: SendRF_wait(Conf2_ChannelH_1_ON,2,16,8);
  8507  0004F2  0EDE               	movlw	low _Conf2_ChannelH_1_ON
  8508  0004F4  0100               	movlb	0	; () banked
  8509  0004F6  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8510  0004F8  0EF2               	movlw	high _Conf2_ChannelH_1_ON
  8511  0004FA  0100               	movlb	0	; () banked
  8512  0004FC  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8513  0004FE  0E02               	movlw	2
  8514  000500  0100               	movlb	0	; () banked
  8515  000502  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8516  000504  0E10               	movlw	16
  8517  000506  0100               	movlb	0	; () banked
  8518  000508  6F87               	movwf	SendRF_wait@size& (0+255),b
  8519  00050A  0E08               	movlw	8
  8520  00050C  0100               	movlb	0	; () banked
  8521  00050E  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8522  000510  ECA5  F048         	call	_SendRF_wait	;wreg free
  8523                           
  8524                           ;Bluetooth.c: 358: }
  8525  000514  D0B7               	goto	l15430
  8526  000516                     l15406:
  8527                           
  8528                           ;Bluetooth.c: 359: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_1_OFF_STR))
  8529  000516  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8530  00051A  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8531  00051E  0EC9               	movlw	low _Conf2_ChannelH_1_OFF_STR
  8532  000520  0100               	movlb	0	; () banked
  8533  000522  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8534  000524  0EF1               	movlw	high _Conf2_ChannelH_1_OFF_STR
  8535  000526  0100               	movlb	0	; () banked
  8536  000528  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8537  00052A  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8538  00052E  0900               	iorlw	0
  8539  000530  B4D8               	btfsc	status,2,c
  8540  000532  D012               	goto	l15410
  8541                           
  8542                           ;Bluetooth.c: 360: {
  8543                           ;Bluetooth.c: 362: SendRF_wait(Conf2_ChannelH_1_OFF,2,16,8);
  8544  000534  0ECE               	movlw	low _Conf2_ChannelH_1_OFF
  8545  000536  0100               	movlb	0	; () banked
  8546  000538  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8547  00053A  0EF2               	movlw	high _Conf2_ChannelH_1_OFF
  8548  00053C  0100               	movlb	0	; () banked
  8549  00053E  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8550  000540  0E02               	movlw	2
  8551  000542  0100               	movlb	0	; () banked
  8552  000544  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8553  000546  0E10               	movlw	16
  8554  000548  0100               	movlb	0	; () banked
  8555  00054A  6F87               	movwf	SendRF_wait@size& (0+255),b
  8556  00054C  0E08               	movlw	8
  8557  00054E  0100               	movlb	0	; () banked
  8558  000550  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8559  000552  ECA5  F048         	call	_SendRF_wait	;wreg free
  8560                           
  8561                           ;Bluetooth.c: 363: }
  8562  000556  D096               	goto	l15430
  8563  000558                     l15410:
  8564                           
  8565                           ;Bluetooth.c: 364: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_ON_STR))
  8566  000558  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8567  00055C  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8568  000560  0E1C               	movlw	low _Conf2_ChannelH_2_ON_STR
  8569  000562  0100               	movlb	0	; () banked
  8570  000564  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8571  000566  0EF2               	movlw	high _Conf2_ChannelH_2_ON_STR
  8572  000568  0100               	movlb	0	; () banked
  8573  00056A  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8574  00056C  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8575  000570  0900               	iorlw	0
  8576  000572  B4D8               	btfsc	status,2,c
  8577  000574  D012               	goto	l15414
  8578                           
  8579                           ;Bluetooth.c: 365: {
  8580                           ;Bluetooth.c: 367: SendRF_wait(Conf2_ChannelH_2_ON,2,16,8);
  8581  000576  0EFE               	movlw	low _Conf2_ChannelH_2_ON
  8582  000578  0100               	movlb	0	; () banked
  8583  00057A  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8584  00057C  0EF2               	movlw	high _Conf2_ChannelH_2_ON
  8585  00057E  0100               	movlb	0	; () banked
  8586  000580  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8587  000582  0E02               	movlw	2
  8588  000584  0100               	movlb	0	; () banked
  8589  000586  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8590  000588  0E10               	movlw	16
  8591  00058A  0100               	movlb	0	; () banked
  8592  00058C  6F87               	movwf	SendRF_wait@size& (0+255),b
  8593  00058E  0E08               	movlw	8
  8594  000590  0100               	movlb	0	; () banked
  8595  000592  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8596  000594  ECA5  F048         	call	_SendRF_wait	;wreg free
  8597                           
  8598                           ;Bluetooth.c: 368: }
  8599  000598  D075               	goto	l15430
  8600  00059A                     l15414:
  8601                           
  8602                           ;Bluetooth.c: 369: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_2_OFF_STR))
  8603  00059A  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8604  00059E  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8605  0005A2  0EDE               	movlw	low _Conf2_ChannelH_2_OFF_STR
  8606  0005A4  0100               	movlb	0	; () banked
  8607  0005A6  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8608  0005A8  0EF1               	movlw	high _Conf2_ChannelH_2_OFF_STR
  8609  0005AA  0100               	movlb	0	; () banked
  8610  0005AC  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8611  0005AE  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8612  0005B2  0900               	iorlw	0
  8613  0005B4  B4D8               	btfsc	status,2,c
  8614  0005B6  D012               	goto	l15418
  8615                           
  8616                           ;Bluetooth.c: 370: {
  8617                           ;Bluetooth.c: 372: SendRF_wait(Conf2_ChannelH_2_OFF,2,16,8);
  8618  0005B8  0EEE               	movlw	low _Conf2_ChannelH_2_OFF
  8619  0005BA  0100               	movlb	0	; () banked
  8620  0005BC  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8621  0005BE  0EF2               	movlw	high _Conf2_ChannelH_2_OFF
  8622  0005C0  0100               	movlb	0	; () banked
  8623  0005C2  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8624  0005C4  0E02               	movlw	2
  8625  0005C6  0100               	movlb	0	; () banked
  8626  0005C8  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8627  0005CA  0E10               	movlw	16
  8628  0005CC  0100               	movlb	0	; () banked
  8629  0005CE  6F87               	movwf	SendRF_wait@size& (0+255),b
  8630  0005D0  0E08               	movlw	8
  8631  0005D2  0100               	movlb	0	; () banked
  8632  0005D4  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8633  0005D6  ECA5  F048         	call	_SendRF_wait	;wreg free
  8634                           
  8635                           ;Bluetooth.c: 373: }
  8636  0005DA  D054               	goto	l15430
  8637  0005DC                     l15418:
  8638                           
  8639                           ;Bluetooth.c: 374: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_ON_STR))
  8640  0005DC  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8641  0005E0  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8642  0005E4  0E30               	movlw	low _Conf2_ChannelH_3_ON_STR
  8643  0005E6  0100               	movlb	0	; () banked
  8644  0005E8  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8645  0005EA  0EF2               	movlw	high _Conf2_ChannelH_3_ON_STR
  8646  0005EC  0100               	movlb	0	; () banked
  8647  0005EE  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8648  0005F0  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8649  0005F4  0900               	iorlw	0
  8650  0005F6  B4D8               	btfsc	status,2,c
  8651  0005F8  D012               	goto	l15422
  8652                           
  8653                           ;Bluetooth.c: 375: {
  8654                           ;Bluetooth.c: 377: SendRF_wait(Conf2_ChannelH_3_ON,2,16,8);
  8655  0005FA  0E1E               	movlw	low _Conf2_ChannelH_3_ON
  8656  0005FC  0100               	movlb	0	; () banked
  8657  0005FE  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8658  000600  0EF3               	movlw	high _Conf2_ChannelH_3_ON
  8659  000602  0100               	movlb	0	; () banked
  8660  000604  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8661  000606  0E02               	movlw	2
  8662  000608  0100               	movlb	0	; () banked
  8663  00060A  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8664  00060C  0E10               	movlw	16
  8665  00060E  0100               	movlb	0	; () banked
  8666  000610  6F87               	movwf	SendRF_wait@size& (0+255),b
  8667  000612  0E08               	movlw	8
  8668  000614  0100               	movlb	0	; () banked
  8669  000616  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8670  000618  ECA5  F048         	call	_SendRF_wait	;wreg free
  8671                           
  8672                           ;Bluetooth.c: 378: }
  8673  00061C  D033               	goto	l15430
  8674  00061E                     l15422:
  8675                           
  8676                           ;Bluetooth.c: 379: else if(StringMatchCaseInsensitive(String,Conf2_ChannelH_3_OFF_STR))
  8677  00061E  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
  8678  000622  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
  8679  000626  0EF3               	movlw	low _Conf2_ChannelH_3_OFF_STR
  8680  000628  0100               	movlb	0	; () banked
  8681  00062A  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
  8682  00062C  0EF1               	movlw	high _Conf2_ChannelH_3_OFF_STR
  8683  00062E  0100               	movlb	0	; () banked
  8684  000630  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
  8685  000632  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
  8686  000636  0900               	iorlw	0
  8687  000638  B4D8               	btfsc	status,2,c
  8688  00063A  D012               	goto	l15426
  8689                           
  8690                           ;Bluetooth.c: 380: {
  8691                           ;Bluetooth.c: 382: SendRF_wait(Conf2_ChannelH_2_OFF,3,16,8);
  8692  00063C  0EEE               	movlw	low _Conf2_ChannelH_2_OFF
  8693  00063E  0100               	movlb	0	; () banked
  8694  000640  6F84               	movwf	SendRF_wait@Code& (0+255),b
  8695  000642  0EF2               	movlw	high _Conf2_ChannelH_2_OFF
  8696  000644  0100               	movlb	0	; () banked
  8697  000646  6F85               	movwf	(SendRF_wait@Code+1)& (0+255),b
  8698  000648  0E03               	movlw	3
  8699  00064A  0100               	movlb	0	; () banked
  8700  00064C  6F86               	movwf	SendRF_wait@Config& (0+255),b
  8701  00064E  0E10               	movlw	16
  8702  000650  0100               	movlb	0	; () banked
  8703  000652  6F87               	movwf	SendRF_wait@size& (0+255),b
  8704  000654  0E08               	movlw	8
  8705  000656  0100               	movlb	0	; () banked
  8706  000658  6F88               	movwf	SendRF_wait@amount& (0+255),b
  8707  00065A  ECA5  F048         	call	_SendRF_wait	;wreg free
  8708                           
  8709                           ;Bluetooth.c: 383: }
  8710  00065E  D012               	goto	l15430
  8711  000660                     l15426:
  8712                           
  8713                           ;Bluetooth.c: 384: else
  8714                           ;Bluetooth.c: 385: {
  8715                           ;Bluetooth.c: 387: UARTstring((unsigned char *)SYNTAX_ERR);
  8716  000660  0E5B               	movlw	low _SYNTAX_ERR
  8717  000662  0100               	movlb	0	; () banked
  8718  000664  6F7D               	movwf	UARTstring@data& (0+255),b
  8719  000666  0EF3               	movlw	high _SYNTAX_ERR
  8720  000668  0100               	movlb	0	; () banked
  8721  00066A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  8722  00066C  ECF7  F046         	call	_UARTstring	;wreg free
  8723                           
  8724                           ;Bluetooth.c: 388: UARTstring(CRLN);
  8725  000670  0EA7               	movlw	low _CRLN
  8726  000672  0100               	movlb	0	; () banked
  8727  000674  6F7D               	movwf	UARTstring@data& (0+255),b
  8728  000676  0EF3               	movlw	high _CRLN
  8729  000678  0100               	movlb	0	; () banked
  8730  00067A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  8731  00067C  ECF7  F046         	call	_UARTstring	;wreg free
  8732                           
  8733                           ;Bluetooth.c: 389: return 0;
  8734                           ;	Return value of _UseBluetooth is never used
  8735  000680  0012               	return	
  8736  000682  D000               	goto	l15430
  8737  000684                     l15430:
  8738                           
  8739                           ;Bluetooth.c: 390: }
  8740                           ;Bluetooth.c: 391: if(ok)
  8741  000684  0102               	movlb	2	; () banked
  8742  000686  5189               	movf	UseBluetooth@ok& (0+255),w,b
  8743  000688  0102               	movlb	2	; () banked
  8744  00068A  B4D8               	btfsc	status,2,c
  8745  00068C  0012               	return	
  8746                           
  8747                           ; BSR set to: 2
  8748                           ;Bluetooth.c: 392: {
  8749                           ;Bluetooth.c: 393: UARTstringCRLN((unsigned char *)"Configuration 2 RF code sent");
  8750  00068E  0E40               	movlw	low STR_23
  8751  000690  0100               	movlb	0	; () banked
  8752  000692  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  8753  000694  0EFB               	movlw	high STR_23
  8754  000696  0100               	movlb	0	; () banked
  8755  000698  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8756  00069A  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  8757                           
  8758                           ;Bluetooth.c: 395: }
  8759                           ;Bluetooth.c: 396: }
  8760                           
  8761                           ;Bluetooth.c: 394: return 1;
  8762                           ;	Return value of _UseBluetooth is never used
  8763  00069E  0012               	return	
  8764  0006A0                     l15436:
  8765                           
  8766                           ;Bluetooth.c: 397: else if(StringContainsCaseInsensitive(String,(unsigned char *)"NEC"))
  8767  0006A0  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  8768  0006A4  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  8769  0006A8  0EEE               	movlw	low STR_24
  8770  0006AA  0100               	movlb	0	; () banked
  8771  0006AC  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  8772  0006AE  0EFF               	movlw	high STR_24
  8773  0006B0  0100               	movlb	0	; () banked
  8774  0006B2  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  8775  0006B4  EC98  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  8776  0006B8  0900               	iorlw	0
  8777  0006BA  B4D8               	btfsc	status,2,c
  8778  0006BC  D1EF               	goto	l15500
  8779                           
  8780                           ;Bluetooth.c: 398: {
  8781                           ;Bluetooth.c: 399: if(!GetNumber(String, 2, &temp))
  8782  0006BE  C200  F088         	movff	UseBluetooth@String,GetNumber@This
  8783  0006C2  C201  F089         	movff	UseBluetooth@String+1,GetNumber@This+1
  8784  0006C6  0E02               	movlw	2
  8785  0006C8  0100               	movlb	0	; () banked
  8786  0006CA  6F8A               	movwf	GetNumber@CommaNumber& (0+255),b
  8787  0006CC  0E8E               	movlw	low UseBluetooth@temp
  8788  0006CE  0100               	movlb	0	; () banked
  8789  0006D0  6F8B               	movwf	GetNumber@result& (0+255),b
  8790  0006D2  0E02               	movlw	high UseBluetooth@temp
  8791  0006D4  0100               	movlb	0	; () banked
  8792  0006D6  6F8C               	movwf	(GetNumber@result+1)& (0+255),b
  8793  0006D8  EC31  F024         	call	_GetNumber	;wreg free
  8794  0006DC  0900               	iorlw	0
  8795  0006DE  A4D8               	btfss	status,2,c
  8796  0006E0  D0C9               	goto	l15472
  8797                           
  8798                           ;Bluetooth.c: 400: {
  8799                           ;Bluetooth.c: 401: if(temp > 0xFF)
  8800  0006E2  0102               	movlb	2	; () banked
  8801  0006E4  5191               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  8802  0006E6  0102               	movlb	2	; () banked
  8803  0006E8  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  8804  0006EA  E104               	bnz	u19280
  8805  0006EC  0102               	movlb	2	; () banked
  8806  0006EE  058F               	decf	(UseBluetooth@temp+1)& (0+255),w,b
  8807  0006F0  A0D8               	btfss	status,0,c
  8808  0006F2  D011               	goto	l1880
  8809  0006F4                     u19280:
  8810                           
  8811                           ; BSR set to: 2
  8812                           ;Bluetooth.c: 402: {
  8813                           ;Bluetooth.c: 403: UARTstringCRLN((unsigned char *)"Error: Command larger that 255");
  8814  0006F4  0E0E               	movlw	low STR_25
  8815  0006F6  0100               	movlb	0	; () banked
  8816  0006F8  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  8817  0006FA  0EFA               	movlw	high STR_25
  8818  0006FC  0100               	movlb	0	; () banked
  8819  0006FE  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8820  000700  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  8821                           
  8822                           ;Bluetooth.c: 404: UARTstring(CRLN);
  8823  000704  0EA7               	movlw	low _CRLN
  8824  000706  0100               	movlb	0	; () banked
  8825  000708  6F7D               	movwf	UARTstring@data& (0+255),b
  8826  00070A  0EF3               	movlw	high _CRLN
  8827  00070C  0100               	movlb	0	; () banked
  8828  00070E  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  8829  000710  ECF7  F046         	call	_UARTstring	;wreg free
  8830                           
  8831                           ;Bluetooth.c: 405: return 0;
  8832                           ;	Return value of _UseBluetooth is never used
  8833  000714  0012               	return	
  8834  000716                     l1880:
  8835                           
  8836                           ; BSR set to: 2
  8837                           ;Bluetooth.c: 406: }
  8838                           ;Bluetooth.c: 407: NecCommand = (unsigned char)temp;
  8839  000716  C28E  F28D         	movff	UseBluetooth@temp,UseBluetooth@NecCommand
  8840                           
  8841                           ; BSR set to: 2
  8842                           ;Bluetooth.c: 408: if(!GetNumber(String, 1, &temp))
  8843  00071A  C200  F088         	movff	UseBluetooth@String,GetNumber@This
  8844  00071E  C201  F089         	movff	UseBluetooth@String+1,GetNumber@This+1
  8845  000722  0E01               	movlw	1
  8846  000724  0100               	movlb	0	; () banked
  8847  000726  6F8A               	movwf	GetNumber@CommaNumber& (0+255),b
  8848  000728  0E8E               	movlw	low UseBluetooth@temp
  8849  00072A  0100               	movlb	0	; () banked
  8850  00072C  6F8B               	movwf	GetNumber@result& (0+255),b
  8851  00072E  0E02               	movlw	high UseBluetooth@temp
  8852  000730  0100               	movlb	0	; () banked
  8853  000732  6F8C               	movwf	(GetNumber@result+1)& (0+255),b
  8854  000734  EC31  F024         	call	_GetNumber	;wreg free
  8855  000738  0900               	iorlw	0
  8856  00073A  A4D8               	btfss	status,2,c
  8857  00073C  D092               	goto	l15470
  8858                           
  8859                           ;Bluetooth.c: 409: {
  8860                           ;Bluetooth.c: 410: if(temp > 0xFF)
  8861  00073E  0102               	movlb	2	; () banked
  8862  000740  5191               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  8863  000742  0102               	movlb	2	; () banked
  8864  000744  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  8865  000746  E104               	bnz	u19300
  8866  000748  0102               	movlb	2	; () banked
  8867  00074A  058F               	decf	(UseBluetooth@temp+1)& (0+255),w,b
  8868  00074C  A0D8               	btfss	status,0,c
  8869  00074E  D011               	goto	l1882
  8870  000750                     u19300:
  8871                           
  8872                           ; BSR set to: 2
  8873                           ;Bluetooth.c: 411: {
  8874                           ;Bluetooth.c: 412: UARTstringCRLN((unsigned char *)"Error: Address larger that 255");
  8875  000750  0E2D               	movlw	low STR_26
  8876  000752  0100               	movlb	0	; () banked
  8877  000754  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  8878  000756  0EFA               	movlw	high STR_26
  8879  000758  0100               	movlb	0	; () banked
  8880  00075A  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8881  00075C  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  8882                           
  8883                           ;Bluetooth.c: 413: UARTstring(CRLN);
  8884  000760  0EA7               	movlw	low _CRLN
  8885  000762  0100               	movlb	0	; () banked
  8886  000764  6F7D               	movwf	UARTstring@data& (0+255),b
  8887  000766  0EF3               	movlw	high _CRLN
  8888  000768  0100               	movlb	0	; () banked
  8889  00076A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  8890  00076C  ECF7  F046         	call	_UARTstring	;wreg free
  8891                           
  8892                           ;Bluetooth.c: 414: return 0;
  8893                           ;	Return value of _UseBluetooth is never used
  8894  000770  0012               	return	
  8895  000772                     l1882:
  8896                           
  8897                           ; BSR set to: 2
  8898                           ;Bluetooth.c: 415: }
  8899                           ;Bluetooth.c: 416: NecAddress = (unsigned char) temp;
  8900  000772  C28E  F28C         	movff	UseBluetooth@temp,UseBluetooth@NecAddress
  8901                           
  8902                           ; BSR set to: 2
  8903                           ;Bluetooth.c: 417: sprintf(buf,"NEC address: 0x%02X ", NecAddress);
  8904  000776  0E0F               	movlw	low UseBluetooth@buf
  8905  000778  0100               	movlb	0	; () banked
  8906  00077A  6FCA               	movwf	sprintf@sp& (0+255),b
  8907  00077C  0E02               	movlw	high UseBluetooth@buf
  8908  00077E  0100               	movlb	0	; () banked
  8909  000780  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  8910  000782  0ED1               	movlw	low STR_27
  8911  000784  0100               	movlb	0	; () banked
  8912  000786  6FCC               	movwf	sprintf@f& (0+255),b
  8913  000788  0EFC               	movlw	high STR_27
  8914  00078A  0100               	movlb	0	; () banked
  8915  00078C  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  8916  00078E  C28C  F0CE         	movff	UseBluetooth@NecAddress,?_sprintf+4
  8917  000792  0100               	movlb	0	; () banked
  8918  000794  6BCF               	clrf	(?_sprintf+5)& (0+255),b
  8919  000796  ECF0  F010         	call	_sprintf	;wreg free
  8920                           
  8921                           ;Bluetooth.c: 418: UARTstringCRLN(buf);
  8922  00079A  0E0F               	movlw	low UseBluetooth@buf
  8923  00079C  0100               	movlb	0	; () banked
  8924  00079E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  8925  0007A0  0E02               	movlw	high UseBluetooth@buf
  8926  0007A2  0100               	movlb	0	; () banked
  8927  0007A4  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8928  0007A6  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  8929                           
  8930                           ;Bluetooth.c: 419: sprintf(buf,"NEC command: 0x%02X ", NecCommand);
  8931  0007AA  0E0F               	movlw	low UseBluetooth@buf
  8932  0007AC  0100               	movlb	0	; () banked
  8933  0007AE  6FCA               	movwf	sprintf@sp& (0+255),b
  8934  0007B0  0E02               	movlw	high UseBluetooth@buf
  8935  0007B2  0100               	movlb	0	; () banked
  8936  0007B4  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  8937  0007B6  0EBC               	movlw	low STR_28
  8938  0007B8  0100               	movlb	0	; () banked
  8939  0007BA  6FCC               	movwf	sprintf@f& (0+255),b
  8940  0007BC  0EFC               	movlw	high STR_28
  8941  0007BE  0100               	movlb	0	; () banked
  8942  0007C0  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  8943  0007C2  C28D  F0CE         	movff	UseBluetooth@NecCommand,?_sprintf+4
  8944  0007C6  0100               	movlb	0	; () banked
  8945  0007C8  6BCF               	clrf	(?_sprintf+5)& (0+255),b
  8946  0007CA  ECF0  F010         	call	_sprintf	;wreg free
  8947                           
  8948                           ;Bluetooth.c: 420: UARTstringCRLN(buf);
  8949  0007CE  0E0F               	movlw	low UseBluetooth@buf
  8950  0007D0  0100               	movlb	0	; () banked
  8951  0007D2  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  8952  0007D4  0E02               	movlw	high UseBluetooth@buf
  8953  0007D6  0100               	movlb	0	; () banked
  8954  0007D8  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  8955  0007DA  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  8956                           
  8957                           ;Bluetooth.c: 421: EnteredNEC = EncodeNEC(NecAddress, NecCommand);
  8958  0007DE  C28D  F080         	movff	UseBluetooth@NecCommand,EncodeNEC@command
  8959  0007E2  0102               	movlb	2	; () banked
  8960  0007E4  518C               	movf	UseBluetooth@NecAddress& (0+255),w,b
  8961  0007E6  EC5D  F039         	call	_EncodeNEC
  8962  0007EA  C080  F285         	movff	?_EncodeNEC,UseBluetooth@EnteredNEC
  8963  0007EE  C081  F286         	movff	?_EncodeNEC+1,UseBluetooth@EnteredNEC+1
  8964  0007F2  C082  F287         	movff	?_EncodeNEC+2,UseBluetooth@EnteredNEC+2
  8965  0007F6  C083  F288         	movff	?_EncodeNEC+3,UseBluetooth@EnteredNEC+3
  8966                           
  8967                           ;Bluetooth.c: 422: SendNEC_wait(EnteredNEC,0);
  8968  0007FA  C285  F091         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  8969  0007FE  C286  F092         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  8970  000802  C287  F093         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  8971  000806  C288  F094         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  8972  00080A  0E00               	movlw	0
  8973  00080C  0100               	movlb	0	; () banked
  8974  00080E  6F95               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  8975  000810  EC04  F043         	call	_SendNEC_wait	;wreg free
  8976                           
  8977                           ;Bluetooth.c: 423: sprintf(buf,"Sent NEC code = 0x%lX ", EnteredNEC);
  8978  000814  0E0F               	movlw	low UseBluetooth@buf
  8979  000816  0100               	movlb	0	; () banked
  8980  000818  6FCA               	movwf	sprintf@sp& (0+255),b
  8981  00081A  0E02               	movlw	high UseBluetooth@buf
  8982  00081C  0100               	movlb	0	; () banked
  8983  00081E  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  8984  000820  0E4D               	movlw	low STR_29
  8985  000822  0100               	movlb	0	; () banked
  8986  000824  6FCC               	movwf	sprintf@f& (0+255),b
  8987  000826  0EFC               	movlw	high STR_29
  8988  000828  0100               	movlb	0	; () banked
  8989  00082A  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  8990  00082C  C285  F0CE         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  8991  000830  C286  F0CF         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  8992  000834  C287  F0D0         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  8993  000838  C288  F0D1         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  8994  00083C  ECF0  F010         	call	_sprintf	;wreg free
  8995                           
  8996                           ;Bluetooth.c: 424: UARTstringCRLN(buf);
  8997  000840  0E0F               	movlw	low UseBluetooth@buf
  8998  000842  0100               	movlb	0	; () banked
  8999  000844  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9000  000846  0E02               	movlw	high UseBluetooth@buf
  9001  000848  0100               	movlb	0	; () banked
  9002  00084A  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9003  00084C  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9004                           
  9005                           ;Bluetooth.c: 425: UARTstring(CRLN);
  9006  000850  0EA7               	movlw	low _CRLN
  9007  000852  0100               	movlb	0	; () banked
  9008  000854  6F7D               	movwf	UARTstring@data& (0+255),b
  9009  000856  0EF3               	movlw	high _CRLN
  9010  000858  0100               	movlb	0	; () banked
  9011  00085A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9012  00085C  ECF7  F046         	call	_UARTstring	;wreg free
  9013                           
  9014                           ;Bluetooth.c: 426: }
  9015  000860  0012               	return	
  9016  000862                     l15470:
  9017                           
  9018                           ;Bluetooth.c: 427: else
  9019                           ;Bluetooth.c: 428: {
  9020                           ;Bluetooth.c: 429: UARTstringCRLN((unsigned char *)"Error: could not decode Address");
  9021  000862  0EEE               	movlw	low STR_30
  9022  000864  0100               	movlb	0	; () banked
  9023  000866  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9024  000868  0EF9               	movlw	high STR_30
  9025  00086A  0100               	movlb	0	; () banked
  9026  00086C  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9027  00086E  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9028                           
  9029                           ;Bluetooth.c: 430: }
  9030                           ;Bluetooth.c: 431: }
  9031  000872  0012               	return	
  9032  000874                     l15472:
  9033                           
  9034                           ;Bluetooth.c: 432: else if(!GetNumber(String, 1, &EnteredNEC))
  9035  000874  C200  F088         	movff	UseBluetooth@String,GetNumber@This
  9036  000878  C201  F089         	movff	UseBluetooth@String+1,GetNumber@This+1
  9037  00087C  0E01               	movlw	1
  9038  00087E  0100               	movlb	0	; () banked
  9039  000880  6F8A               	movwf	GetNumber@CommaNumber& (0+255),b
  9040  000882  0E85               	movlw	low UseBluetooth@EnteredNEC
  9041  000884  0100               	movlb	0	; () banked
  9042  000886  6F8B               	movwf	GetNumber@result& (0+255),b
  9043  000888  0E02               	movlw	high UseBluetooth@EnteredNEC
  9044  00088A  0100               	movlb	0	; () banked
  9045  00088C  6F8C               	movwf	(GetNumber@result+1)& (0+255),b
  9046  00088E  EC31  F024         	call	_GetNumber	;wreg free
  9047  000892  0900               	iorlw	0
  9048  000894  A4D8               	btfss	status,2,c
  9049  000896  D08A               	goto	l15494
  9050                           
  9051                           ;Bluetooth.c: 433: {
  9052                           ;Bluetooth.c: 434: SendNEC_wait(EnteredNEC,0);
  9053  000898  C285  F091         	movff	UseBluetooth@EnteredNEC,SendNEC_wait@code
  9054  00089C  C286  F092         	movff	UseBluetooth@EnteredNEC+1,SendNEC_wait@code+1
  9055  0008A0  C287  F093         	movff	UseBluetooth@EnteredNEC+2,SendNEC_wait@code+2
  9056  0008A4  C288  F094         	movff	UseBluetooth@EnteredNEC+3,SendNEC_wait@code+3
  9057  0008A8  0E00               	movlw	0
  9058  0008AA  0100               	movlb	0	; () banked
  9059  0008AC  6F95               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  9060  0008AE  EC04  F043         	call	_SendNEC_wait	;wreg free
  9061                           
  9062                           ;Bluetooth.c: 435: sprintf(buf,"sent NEC code 0x%lX", EnteredNEC);
  9063  0008B2  0E0F               	movlw	low UseBluetooth@buf
  9064  0008B4  0100               	movlb	0	; () banked
  9065  0008B6  6FCA               	movwf	sprintf@sp& (0+255),b
  9066  0008B8  0E02               	movlw	high UseBluetooth@buf
  9067  0008BA  0100               	movlb	0	; () banked
  9068  0008BC  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9069  0008BE  0E4D               	movlw	low STR_31
  9070  0008C0  0100               	movlb	0	; () banked
  9071  0008C2  6FCC               	movwf	sprintf@f& (0+255),b
  9072  0008C4  0EFD               	movlw	high STR_31
  9073  0008C6  0100               	movlb	0	; () banked
  9074  0008C8  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9075  0008CA  C285  F0CE         	movff	UseBluetooth@EnteredNEC,?_sprintf+4
  9076  0008CE  C286  F0CF         	movff	UseBluetooth@EnteredNEC+1,?_sprintf+5
  9077  0008D2  C287  F0D0         	movff	UseBluetooth@EnteredNEC+2,?_sprintf+6
  9078  0008D6  C288  F0D1         	movff	UseBluetooth@EnteredNEC+3,?_sprintf+7
  9079  0008DA  ECF0  F010         	call	_sprintf	;wreg free
  9080                           
  9081                           ;Bluetooth.c: 436: UARTstringCRLN(buf);
  9082  0008DE  0E0F               	movlw	low UseBluetooth@buf
  9083  0008E0  0100               	movlb	0	; () banked
  9084  0008E2  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9085  0008E4  0E02               	movlw	high UseBluetooth@buf
  9086  0008E6  0100               	movlb	0	; () banked
  9087  0008E8  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9088  0008EA  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9089                           
  9090                           ;Bluetooth.c: 437: if(DecodeNEC(EnteredNEC, &NecAddress, &NecCommand))
  9091  0008EE  C285  F080         	movff	UseBluetooth@EnteredNEC,DecodeNEC@Nec
  9092  0008F2  C286  F081         	movff	UseBluetooth@EnteredNEC+1,DecodeNEC@Nec+1
  9093  0008F6  C287  F082         	movff	UseBluetooth@EnteredNEC+2,DecodeNEC@Nec+2
  9094  0008FA  C288  F083         	movff	UseBluetooth@EnteredNEC+3,DecodeNEC@Nec+3
  9095  0008FE  0E8C               	movlw	low UseBluetooth@NecAddress
  9096  000900  0100               	movlb	0	; () banked
  9097  000902  6F84               	movwf	DecodeNEC@address& (0+255),b
  9098  000904  0E02               	movlw	high UseBluetooth@NecAddress
  9099  000906  0100               	movlb	0	; () banked
  9100  000908  6F85               	movwf	(DecodeNEC@address+1)& (0+255),b
  9101  00090A  0E8D               	movlw	low UseBluetooth@NecCommand
  9102  00090C  0100               	movlb	0	; () banked
  9103  00090E  6F86               	movwf	DecodeNEC@command& (0+255),b
  9104  000910  0E02               	movlw	high UseBluetooth@NecCommand
  9105  000912  0100               	movlb	0	; () banked
  9106  000914  6F87               	movwf	(DecodeNEC@command+1)& (0+255),b
  9107  000916  ECB9  F041         	call	_DecodeNEC	;wreg free
  9108  00091A  0900               	iorlw	0
  9109  00091C  B4D8               	btfsc	status,2,c
  9110  00091E  D035               	goto	l15488
  9111                           
  9112                           ;Bluetooth.c: 438: {
  9113                           ;Bluetooth.c: 439: sprintf(buf,"address: 0x%02X ", NecAddress);
  9114  000920  0E0F               	movlw	low UseBluetooth@buf
  9115  000922  0100               	movlb	0	; () banked
  9116  000924  6FCA               	movwf	sprintf@sp& (0+255),b
  9117  000926  0E02               	movlw	high UseBluetooth@buf
  9118  000928  0100               	movlb	0	; () banked
  9119  00092A  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9120  00092C  0ED5               	movlw	low (STR_27+4)
  9121  00092E  0100               	movlb	0	; () banked
  9122  000930  6FCC               	movwf	sprintf@f& (0+255),b
  9123  000932  0EFC               	movlw	high (STR_27+4)
  9124  000934  0100               	movlb	0	; () banked
  9125  000936  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9126  000938  C28C  F0CE         	movff	UseBluetooth@NecAddress,?_sprintf+4
  9127  00093C  0100               	movlb	0	; () banked
  9128  00093E  6BCF               	clrf	(?_sprintf+5)& (0+255),b
  9129  000940  ECF0  F010         	call	_sprintf	;wreg free
  9130                           
  9131                           ;Bluetooth.c: 440: UARTstringCRLN(buf);
  9132  000944  0E0F               	movlw	low UseBluetooth@buf
  9133  000946  0100               	movlb	0	; () banked
  9134  000948  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9135  00094A  0E02               	movlw	high UseBluetooth@buf
  9136  00094C  0100               	movlb	0	; () banked
  9137  00094E  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9138  000950  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9139                           
  9140                           ;Bluetooth.c: 441: sprintf(buf,"command: 0x%02X ", NecCommand);
  9141  000954  0E0F               	movlw	low UseBluetooth@buf
  9142  000956  0100               	movlb	0	; () banked
  9143  000958  6FCA               	movwf	sprintf@sp& (0+255),b
  9144  00095A  0E02               	movlw	high UseBluetooth@buf
  9145  00095C  0100               	movlb	0	; () banked
  9146  00095E  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9147  000960  0E99               	movlw	low (STR_48+27)
  9148  000962  0100               	movlb	0	; () banked
  9149  000964  6FCC               	movwf	sprintf@f& (0+255),b
  9150  000966  0EF7               	movlw	high (STR_48+27)
  9151  000968  0100               	movlb	0	; () banked
  9152  00096A  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9153  00096C  C28D  F0CE         	movff	UseBluetooth@NecCommand,?_sprintf+4
  9154  000970  0100               	movlb	0	; () banked
  9155  000972  6BCF               	clrf	(?_sprintf+5)& (0+255),b
  9156  000974  ECF0  F010         	call	_sprintf	;wreg free
  9157                           
  9158                           ;Bluetooth.c: 442: UARTstringCRLN(buf);
  9159  000978  0E0F               	movlw	low UseBluetooth@buf
  9160  00097A  0100               	movlb	0	; () banked
  9161  00097C  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9162  00097E  0E02               	movlw	high UseBluetooth@buf
  9163  000980  0100               	movlb	0	; () banked
  9164  000982  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9165  000984  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9166                           
  9167                           ;Bluetooth.c: 443: }
  9168  000988  D008               	goto	l1887
  9169  00098A                     l15488:
  9170                           
  9171                           ;Bluetooth.c: 444: else
  9172                           ;Bluetooth.c: 445: {
  9173                           ;Bluetooth.c: 446: UARTstringCRLN((unsigned char *)"Error: could not decode NEC code");
  9174  00098A  0E2D               	movlw	low STR_34
  9175  00098C  0100               	movlb	0	; () banked
  9176  00098E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9177  000990  0EF9               	movlw	high STR_34
  9178  000992  0100               	movlb	0	; () banked
  9179  000994  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9180  000996  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9181  00099A                     l1887:
  9182                           
  9183                           ;Bluetooth.c: 447: }
  9184                           ;Bluetooth.c: 448: UARTstring(CRLN);
  9185  00099A  0EA7               	movlw	low _CRLN
  9186  00099C  0100               	movlb	0	; () banked
  9187  00099E  6F7D               	movwf	UARTstring@data& (0+255),b
  9188  0009A0  0EF3               	movlw	high _CRLN
  9189  0009A2  0100               	movlb	0	; () banked
  9190  0009A4  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9191  0009A6  ECF7  F046         	call	_UARTstring	;wreg free
  9192                           
  9193                           ;Bluetooth.c: 450: }
  9194                           
  9195                           ;Bluetooth.c: 449: return 1;
  9196                           ;	Return value of _UseBluetooth is never used
  9197  0009AA  0012               	return	
  9198  0009AC                     l15494:
  9199                           
  9200                           ;Bluetooth.c: 451: else
  9201                           ;Bluetooth.c: 452: {
  9202                           ;Bluetooth.c: 453: if(!StringContains(String,(unsigned char *)"?"))
  9203  0009AC  C200  F07C         	movff	UseBluetooth@String,StringContains@This
  9204  0009B0  C201  F07D         	movff	UseBluetooth@String+1,StringContains@This+1
  9205  0009B4  0EEC               	movlw	low (STR_91+2)
  9206  0009B6  0100               	movlb	0	; () banked
  9207  0009B8  6F7E               	movwf	StringContains@That& (0+255),b
  9208  0009BA  0EFF               	movlw	high (STR_91+2)
  9209  0009BC  0100               	movlb	0	; () banked
  9210  0009BE  6F7F               	movwf	(StringContains@That+1)& (0+255),b
  9211  0009C0  EC60  F041         	call	_StringContains	;wreg free
  9212  0009C4  0900               	iorlw	0
  9213  0009C6  A4D8               	btfss	status,2,c
  9214  0009C8  D010               	goto	l1889
  9215                           
  9216                           ;Bluetooth.c: 454: {
  9217                           ;Bluetooth.c: 455: UARTstring(CRLN);
  9218  0009CA  0EA7               	movlw	low _CRLN
  9219  0009CC  0100               	movlb	0	; () banked
  9220  0009CE  6F7D               	movwf	UARTstring@data& (0+255),b
  9221  0009D0  0EF3               	movlw	high _CRLN
  9222  0009D2  0100               	movlb	0	; () banked
  9223  0009D4  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9224  0009D6  ECF7  F046         	call	_UARTstring	;wreg free
  9225                           
  9226                           ;Bluetooth.c: 456: UARTstringCRLN((unsigned char *)"NEC code not entered correctly");
  9227  0009DA  0EE7               	movlw	low STR_36
  9228  0009DC  0100               	movlb	0	; () banked
  9229  0009DE  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9230  0009E0  0EFA               	movlw	high STR_36
  9231  0009E2  0100               	movlb	0	; () banked
  9232  0009E4  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9233  0009E6  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9234  0009EA                     l1889:
  9235                           
  9236                           ;Bluetooth.c: 457: }
  9237                           ;Bluetooth.c: 458: UARTstring(CRLN);
  9238  0009EA  0EA7               	movlw	low _CRLN
  9239  0009EC  0100               	movlb	0	; () banked
  9240  0009EE  6F7D               	movwf	UARTstring@data& (0+255),b
  9241  0009F0  0EF3               	movlw	high _CRLN
  9242  0009F2  0100               	movlb	0	; () banked
  9243  0009F4  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9244  0009F6  ECF7  F046         	call	_UARTstring	;wreg free
  9245                           
  9246                           ;Bluetooth.c: 459: UARTstringCRLN((unsigned char *)"Usage:");
  9247  0009FA  0EAC               	movlw	low STR_37
  9248  0009FC  0100               	movlb	0	; () banked
  9249  0009FE  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9250  000A00  0EFF               	movlw	high STR_37
  9251  000A02  0100               	movlb	0	; () banked
  9252  000A04  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9253  000A06  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9254                           
  9255                           ;Bluetooth.c: 460: UARTstringCRLN((unsigned char *)"NEC = (32 bit code)");
  9256  000A0A  0E25               	movlw	low STR_38
  9257  000A0C  0100               	movlb	0	; () banked
  9258  000A0E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9259  000A10  0EFD               	movlw	high STR_38
  9260  000A12  0100               	movlb	0	; () banked
  9261  000A14  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9262  000A16  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9263                           
  9264                           ;Bluetooth.c: 461: UARTstringCRLN((unsigned char *)"        or");
  9265  000A1A  0E63               	movlw	low STR_39
  9266  000A1C  0100               	movlb	0	; () banked
  9267  000A1E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9268  000A20  0EFF               	movlw	high STR_39
  9269  000A22  0100               	movlb	0	; () banked
  9270  000A24  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9271  000A26  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9272                           
  9273                           ;Bluetooth.c: 462: UARTstringCRLN((unsigned char *)"NEC = address,command");
  9274  000A2A  0E91               	movlw	low STR_40
  9275  000A2C  0100               	movlb	0	; () banked
  9276  000A2E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9277  000A30  0EFC               	movlw	high STR_40
  9278  000A32  0100               	movlb	0	; () banked
  9279  000A34  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9280  000A36  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9281                           
  9282                           ;Bluetooth.c: 463: UARTstring(CRLN);
  9283  000A3A  0EA7               	movlw	low _CRLN
  9284  000A3C  0100               	movlb	0	; () banked
  9285  000A3E  6F7D               	movwf	UARTstring@data& (0+255),b
  9286  000A40  0EF3               	movlw	high _CRLN
  9287  000A42  0100               	movlb	0	; () banked
  9288  000A44  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9289  000A46  ECF7  F046         	call	_UARTstring	;wreg free
  9290                           
  9291                           ;Bluetooth.c: 464: UARTstringCRLN((unsigned char *)"Example:");
  9292  000A4A  0E8B               	movlw	low STR_41
  9293  000A4C  0100               	movlb	0	; () banked
  9294  000A4E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9295  000A50  0EFF               	movlw	high STR_41
  9296  000A52  0100               	movlb	0	; () banked
  9297  000A54  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9298  000A56  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9299                           
  9300                           ;Bluetooth.c: 465: UARTstringCRLN((unsigned char *)"NEC = 0x1CE350AF ");
  9301  000A5A  0EE8               	movlw	low STR_42
  9302  000A5C  0100               	movlb	0	; () banked
  9303  000A5E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9304  000A60  0EFD               	movlw	high STR_42
  9305  000A62  0100               	movlb	0	; () banked
  9306  000A64  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9307  000A66  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9308                           
  9309                           ;Bluetooth.c: 466: UARTstringCRLN((unsigned char *)"      or");
  9310  000A6A  0E65               	movlw	low (STR_39+2)
  9311  000A6C  0100               	movlb	0	; () banked
  9312  000A6E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9313  000A70  0EFF               	movlw	high (STR_39+2)
  9314  000A72  0100               	movlb	0	; () banked
  9315  000A74  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9316  000A76  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9317                           
  9318                           ;Bluetooth.c: 467: UARTstringCRLN((unsigned char *)"NEC = 0x38, 0x0A");
  9319  000A7A  0E40               	movlw	low STR_44
  9320  000A7C  0100               	movlb	0	; () banked
  9321  000A7E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9322  000A80  0EFE               	movlw	high STR_44
  9323  000A82  0100               	movlb	0	; () banked
  9324  000A84  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9325  000A86  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9326                           
  9327                           ;Bluetooth.c: 468: UARTstring(CRLN);
  9328  000A8A  0EA7               	movlw	low _CRLN
  9329  000A8C  0100               	movlb	0	; () banked
  9330  000A8E  6F7D               	movwf	UARTstring@data& (0+255),b
  9331  000A90  0EF3               	movlw	high _CRLN
  9332  000A92  0100               	movlb	0	; () banked
  9333  000A94  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9334  000A96  ECF7  F046         	call	_UARTstring	;wreg free
  9335                           
  9336                           ;Bluetooth.c: 470: }
  9337                           ;Bluetooth.c: 471: }
  9338                           
  9339                           ;Bluetooth.c: 469: return 0;
  9340                           ;	Return value of _UseBluetooth is never used
  9341  000A9A  0012               	return	
  9342  000A9C                     l15500:
  9343                           
  9344                           ;Bluetooth.c: 472: else if(StringContainsCaseInsensitive(String,(unsigned char *)"Remote
      +                          Button"))
  9345  000A9C  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9346  000AA0  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9347  000AA4  0E14               	movlw	low STR_45
  9348  000AA6  0100               	movlb	0	; () banked
  9349  000AA8  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9350  000AAA  0EFF               	movlw	high STR_45
  9351  000AAC  0100               	movlb	0	; () banked
  9352  000AAE  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9353  000AB0  EC98  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  9354  000AB4  0900               	iorlw	0
  9355  000AB6  B4D8               	btfsc	status,2,c
  9356  000AB8  D2C8               	goto	l15588
  9357                           
  9358                           ;Bluetooth.c: 473: {
  9359                           ;Bluetooth.c: 474: if(StringAddEqual(String))
  9360  000ABA  C200  F08B         	movff	UseBluetooth@String,StringAddEqual@Input
  9361  000ABE  C201  F08C         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
  9362  000AC2  EC5C  F031         	call	_StringAddEqual	;wreg free
  9363  000AC6  0900               	iorlw	0
  9364  000AC8  B4D8               	btfsc	status,2,c
  9365  000ACA  D266               	goto	l15582
  9366                           
  9367                           ;Bluetooth.c: 475: {
  9368                           ;Bluetooth.c: 476: StringPos++;
  9369  000ACC  0102               	movlb	2	; () banked
  9370  000ACE  2B02               	incf	UseBluetooth@StringPos& (0+255),f,b
  9371                           
  9372                           ; BSR set to: 2
  9373                           ;Bluetooth.c: 477: if(!GetNumber(String, 1, &temp))
  9374  000AD0  C200  F088         	movff	UseBluetooth@String,GetNumber@This
  9375  000AD4  C201  F089         	movff	UseBluetooth@String+1,GetNumber@This+1
  9376  000AD8  0E01               	movlw	1
  9377  000ADA  0100               	movlb	0	; () banked
  9378  000ADC  6F8A               	movwf	GetNumber@CommaNumber& (0+255),b
  9379  000ADE  0E8E               	movlw	low UseBluetooth@temp
  9380  000AE0  0100               	movlb	0	; () banked
  9381  000AE2  6F8B               	movwf	GetNumber@result& (0+255),b
  9382  000AE4  0E02               	movlw	high UseBluetooth@temp
  9383  000AE6  0100               	movlb	0	; () banked
  9384  000AE8  6F8C               	movwf	(GetNumber@result+1)& (0+255),b
  9385  000AEA  EC31  F024         	call	_GetNumber	;wreg free
  9386  000AEE  0900               	iorlw	0
  9387  000AF0  A4D8               	btfss	status,2,c
  9388  000AF2  D252               	goto	l15582
  9389                           
  9390                           ;Bluetooth.c: 478: {
  9391                           ;Bluetooth.c: 479: if(temp <= 20 && temp > 0)
  9392  000AF4  0102               	movlb	2	; () banked
  9393  000AF6  5191               	movf	(UseBluetooth@temp+3)& (0+255),w,b
  9394  000AF8  0102               	movlb	2	; () banked
  9395  000AFA  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  9396  000AFC  0102               	movlb	2	; () banked
  9397  000AFE  118F               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
  9398  000B00  E104               	bnz	u19371
  9399  000B02  0E15               	movlw	21
  9400  000B04  0102               	movlb	2	; () banked
  9401  000B06  5D8E               	subwf	UseBluetooth@temp& (0+255),w,b
  9402  000B08  B0D8               	btfsc	status,0,c
  9403  000B0A                     u19371:
  9404  000B0A  D22C               	goto	l15578
  9405                           
  9406                           ; BSR set to: 2
  9407  000B0C  0102               	movlb	2	; () banked
  9408  000B0E  518E               	movf	UseBluetooth@temp& (0+255),w,b
  9409  000B10  0102               	movlb	2	; () banked
  9410  000B12  118F               	iorwf	(UseBluetooth@temp+1)& (0+255),w,b
  9411  000B14  0102               	movlb	2	; () banked
  9412  000B16  1190               	iorwf	(UseBluetooth@temp+2)& (0+255),w,b
  9413  000B18  0102               	movlb	2	; () banked
  9414  000B1A  1191               	iorwf	(UseBluetooth@temp+3)& (0+255),w,b
  9415  000B1C  B4D8               	btfsc	status,2,c
  9416  000B1E  D222               	goto	l15578
  9417                           
  9418                           ; BSR set to: 2
  9419                           ;Bluetooth.c: 480: {
  9420                           ;Bluetooth.c: 481: if(!StringContainsCaseInsensitive(String,(unsigned char *)"set"))
  9421  000B20  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
  9422  000B24  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
  9423  000B28  0E85               	movlw	low (STR_56+16)
  9424  000B2A  0100               	movlb	0	; () banked
  9425  000B2C  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
  9426  000B2E  0EFD               	movlw	high (STR_56+16)
  9427  000B30  0100               	movlb	0	; () banked
  9428  000B32  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
  9429  000B34  EC98  F03A         	call	_StringContainsCaseInsensitive	;wreg free
  9430  000B38  0900               	iorlw	0
  9431  000B3A  A4D8               	btfss	status,2,c
  9432  000B3C  D123               	goto	l15538
  9433                           
  9434                           ;Bluetooth.c: 482: {
  9435                           ;Bluetooth.c: 483: tempNec = EncodeNEC(Global.RemoteButtonNEC[temp-1][0], Global.RemoteB
      +                          uttonNEC[temp-1][1]);
  9436  000B3E  0EFE               	movlw	254
  9437  000B40  0102               	movlb	2	; () banked
  9438  000B42  6F03               	movwf	??_UseBluetooth& (0+255),b
  9439  000B44  0EFF               	movlw	255
  9440  000B46  0102               	movlb	2	; () banked
  9441  000B48  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9442  000B4A  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9443  000B4E  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9444  000B52  90D8               	bcf	status,0,c
  9445  000B54  0102               	movlb	2	; () banked
  9446  000B56  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9447  000B58  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9448  000B5A  0102               	movlb	2	; () banked
  9449  000B5C  5103               	movf	??_UseBluetooth& (0+255),w,b
  9450  000B5E  0102               	movlb	2	; () banked
  9451  000B60  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9452  000B62  0102               	movlb	2	; () banked
  9453  000B64  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9454  000B66  0102               	movlb	2	; () banked
  9455  000B68  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9456  000B6A  0E00               	movlw	low _Global
  9457  000B6C  0102               	movlb	2	; () banked
  9458  000B6E  6F07               	movwf	(??_UseBluetooth+4)& (0+255),b
  9459  000B70  0E04               	movlw	high _Global
  9460  000B72  0102               	movlb	2	; () banked
  9461  000B74  6F08               	movwf	(??_UseBluetooth+5)& (0+255),b
  9462  000B76  0E05               	movlw	5
  9463  000B78  0102               	movlb	2	; () banked
  9464  000B7A  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9465  000B7C  0E00               	movlw	0
  9466  000B7E  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9467  000B80  0102               	movlb	2	; () banked
  9468  000B82  5105               	movf	(??_UseBluetooth+2)& (0+255),w,b
  9469  000B84  0102               	movlb	2	; () banked
  9470  000B86  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9471  000B88  0102               	movlb	2	; () banked
  9472  000B8A  5106               	movf	(??_UseBluetooth+3)& (0+255),w,b
  9473  000B8C  0102               	movlb	2	; () banked
  9474  000B8E  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9475  000B90  0E01               	movlw	1
  9476  000B92  0102               	movlb	2	; () banked
  9477  000B94  2507               	addwf	(??_UseBluetooth+4)& (0+255),w,b
  9478  000B96  6ED9               	movwf	fsr2l,c
  9479  000B98  0E00               	movlw	0
  9480  000B9A  0102               	movlb	2	; () banked
  9481  000B9C  2108               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
  9482  000B9E  6EDA               	movwf	fsr2h,c
  9483  000BA0  50DF               	movf	indf2,w,c
  9484  000BA2  0100               	movlb	0	; () banked
  9485  000BA4  6F80               	movwf	EncodeNEC@command& (0+255),b
  9486  000BA6  0EFE               	movlw	254
  9487  000BA8  0102               	movlb	2	; () banked
  9488  000BAA  6F09               	movwf	(??_UseBluetooth+6)& (0+255),b
  9489  000BAC  0EFF               	movlw	255
  9490  000BAE  0102               	movlb	2	; () banked
  9491  000BB0  6F0A               	movwf	(??_UseBluetooth+7)& (0+255),b
  9492  000BB2  C28E  F20B         	movff	UseBluetooth@temp,??_UseBluetooth+8
  9493  000BB6  C28F  F20C         	movff	UseBluetooth@temp+1,??_UseBluetooth+9
  9494  000BBA  90D8               	bcf	status,0,c
  9495  000BBC  0102               	movlb	2	; () banked
  9496  000BBE  370B               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
  9497  000BC0  370C               	rlcf	(??_UseBluetooth+9)& (0+255),f,b
  9498  000BC2  0102               	movlb	2	; () banked
  9499  000BC4  5109               	movf	(??_UseBluetooth+6)& (0+255),w,b
  9500  000BC6  0102               	movlb	2	; () banked
  9501  000BC8  270B               	addwf	(??_UseBluetooth+8)& (0+255),f,b
  9502  000BCA  0102               	movlb	2	; () banked
  9503  000BCC  510A               	movf	(??_UseBluetooth+7)& (0+255),w,b
  9504  000BCE  0102               	movlb	2	; () banked
  9505  000BD0  230C               	addwfc	(??_UseBluetooth+9)& (0+255),f,b
  9506  000BD2  0E05               	movlw	low (_Global+5)
  9507  000BD4  0102               	movlb	2	; () banked
  9508  000BD6  250B               	addwf	(??_UseBluetooth+8)& (0+255),w,b
  9509  000BD8  6ED9               	movwf	fsr2l,c
  9510  000BDA  0E04               	movlw	high (_Global+5)
  9511  000BDC  0102               	movlb	2	; () banked
  9512  000BDE  210C               	addwfc	(??_UseBluetooth+9)& (0+255),w,b
  9513  000BE0  6EDA               	movwf	fsr2h,c
  9514  000BE2  50DF               	movf	indf2,w,c
  9515  000BE4  EC5D  F039         	call	_EncodeNEC
  9516  000BE8  C080  F27E         	movff	?_EncodeNEC,UseBluetooth@tempNec
  9517  000BEC  C081  F27F         	movff	?_EncodeNEC+1,UseBluetooth@tempNec+1
  9518  000BF0  C082  F280         	movff	?_EncodeNEC+2,UseBluetooth@tempNec+2
  9519  000BF4  C083  F281         	movff	?_EncodeNEC+3,UseBluetooth@tempNec+3
  9520                           
  9521                           ;Bluetooth.c: 484: if(tempNec != 0x00FF00FF)
  9522  000BF8  0102               	movlb	2	; () banked
  9523  000BFA  297E               	incf	UseBluetooth@tempNec& (0+255),w,b
  9524  000BFC  E108               	bnz	u19400
  9525  000BFE  0102               	movlb	2	; () banked
  9526  000C00  2980               	incf	(UseBluetooth@tempNec+2)& (0+255),w,b
  9527  000C02  0102               	movlb	2	; () banked
  9528  000C04  117F               	iorwf	(UseBluetooth@tempNec+1)& (0+255),w,b
  9529  000C06  0102               	movlb	2	; () banked
  9530  000C08  1181               	iorwf	(UseBluetooth@tempNec+3)& (0+255),w,b
  9531  000C0A  B4D8               	btfsc	status,2,c
  9532  000C0C  D0A9               	goto	l15532
  9533  000C0E                     u19400:
  9534                           
  9535                           ; BSR set to: 2
  9536                           ;Bluetooth.c: 485: {
  9537                           ;Bluetooth.c: 486: SendNEC_wait(tempNec,0);
  9538  000C0E  C27E  F091         	movff	UseBluetooth@tempNec,SendNEC_wait@code
  9539  000C12  C27F  F092         	movff	UseBluetooth@tempNec+1,SendNEC_wait@code+1
  9540  000C16  C280  F093         	movff	UseBluetooth@tempNec+2,SendNEC_wait@code+2
  9541  000C1A  C281  F094         	movff	UseBluetooth@tempNec+3,SendNEC_wait@code+3
  9542  000C1E  0E00               	movlw	0
  9543  000C20  0100               	movlb	0	; () banked
  9544  000C22  6F95               	movwf	SendNEC_wait@RepeatAmount& (0+255),b
  9545  000C24  EC04  F043         	call	_SendNEC_wait	;wreg free
  9546                           
  9547                           ;Bluetooth.c: 487: sprintf(buf,"Sent NEC code 0x%lX ", tempNec);
  9548  000C28  0E0F               	movlw	low UseBluetooth@buf
  9549  000C2A  0100               	movlb	0	; () banked
  9550  000C2C  6FCA               	movwf	sprintf@sp& (0+255),b
  9551  000C2E  0E02               	movlw	high UseBluetooth@buf
  9552  000C30  0100               	movlb	0	; () banked
  9553  000C32  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9554  000C34  0EE6               	movlw	low STR_47
  9555  000C36  0100               	movlb	0	; () banked
  9556  000C38  6FCC               	movwf	sprintf@f& (0+255),b
  9557  000C3A  0EFC               	movlw	high STR_47
  9558  000C3C  0100               	movlb	0	; () banked
  9559  000C3E  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9560  000C40  C27E  F0CE         	movff	UseBluetooth@tempNec,?_sprintf+4
  9561  000C44  C27F  F0CF         	movff	UseBluetooth@tempNec+1,?_sprintf+5
  9562  000C48  C280  F0D0         	movff	UseBluetooth@tempNec+2,?_sprintf+6
  9563  000C4C  C281  F0D1         	movff	UseBluetooth@tempNec+3,?_sprintf+7
  9564  000C50  ECF0  F010         	call	_sprintf	;wreg free
  9565                           
  9566                           ;Bluetooth.c: 488: UARTstringCRLN(buf);
  9567  000C54  0E0F               	movlw	low UseBluetooth@buf
  9568  000C56  0100               	movlb	0	; () banked
  9569  000C58  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9570  000C5A  0E02               	movlw	high UseBluetooth@buf
  9571  000C5C  0100               	movlb	0	; () banked
  9572  000C5E  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9573  000C60  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9574                           
  9575                           ;Bluetooth.c: 489: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",Global.Remo
      +                          teButtonNEC[temp-1][0], Global.RemoteButtonNEC[temp-1][1]);
  9576  000C64  0E0F               	movlw	low UseBluetooth@buf
  9577  000C66  0100               	movlb	0	; () banked
  9578  000C68  6FCA               	movwf	sprintf@sp& (0+255),b
  9579  000C6A  0E02               	movlw	high UseBluetooth@buf
  9580  000C6C  0100               	movlb	0	; () banked
  9581  000C6E  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9582  000C70  0E7E               	movlw	low STR_48
  9583  000C72  0100               	movlb	0	; () banked
  9584  000C74  6FCC               	movwf	sprintf@f& (0+255),b
  9585  000C76  0EF7               	movlw	high STR_48
  9586  000C78  0100               	movlb	0	; () banked
  9587  000C7A  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9588  000C7C  0EFE               	movlw	254
  9589  000C7E  0102               	movlb	2	; () banked
  9590  000C80  6F03               	movwf	??_UseBluetooth& (0+255),b
  9591  000C82  0EFF               	movlw	255
  9592  000C84  0102               	movlb	2	; () banked
  9593  000C86  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9594  000C88  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9595  000C8C  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9596  000C90  90D8               	bcf	status,0,c
  9597  000C92  0102               	movlb	2	; () banked
  9598  000C94  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9599  000C96  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9600  000C98  0102               	movlb	2	; () banked
  9601  000C9A  5103               	movf	??_UseBluetooth& (0+255),w,b
  9602  000C9C  0102               	movlb	2	; () banked
  9603  000C9E  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9604  000CA0  0102               	movlb	2	; () banked
  9605  000CA2  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9606  000CA4  0102               	movlb	2	; () banked
  9607  000CA6  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9608  000CA8  0E05               	movlw	low (_Global+5)
  9609  000CAA  0102               	movlb	2	; () banked
  9610  000CAC  2505               	addwf	(??_UseBluetooth+2)& (0+255),w,b
  9611  000CAE  6ED9               	movwf	fsr2l,c
  9612  000CB0  0E04               	movlw	high (_Global+5)
  9613  000CB2  0102               	movlb	2	; () banked
  9614  000CB4  2106               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
  9615  000CB6  6EDA               	movwf	fsr2h,c
  9616  000CB8  50DF               	movf	indf2,w,c
  9617  000CBA  0102               	movlb	2	; () banked
  9618  000CBC  6F07               	movwf	(??_UseBluetooth+4)& (0+255),b
  9619  000CBE  0102               	movlb	2	; () banked
  9620  000CC0  5107               	movf	(??_UseBluetooth+4)& (0+255),w,b
  9621  000CC2  0100               	movlb	0	; () banked
  9622  000CC4  6FCE               	movwf	(?_sprintf+4)& (0+255),b
  9623  000CC6  6BCF               	clrf	(?_sprintf+5)& (0+255),b
  9624  000CC8  0EFE               	movlw	254
  9625  000CCA  0102               	movlb	2	; () banked
  9626  000CCC  6F08               	movwf	(??_UseBluetooth+5)& (0+255),b
  9627  000CCE  0EFF               	movlw	255
  9628  000CD0  0102               	movlb	2	; () banked
  9629  000CD2  6F09               	movwf	(??_UseBluetooth+6)& (0+255),b
  9630  000CD4  C28E  F20A         	movff	UseBluetooth@temp,??_UseBluetooth+7
  9631  000CD8  C28F  F20B         	movff	UseBluetooth@temp+1,??_UseBluetooth+8
  9632  000CDC  90D8               	bcf	status,0,c
  9633  000CDE  0102               	movlb	2	; () banked
  9634  000CE0  370A               	rlcf	(??_UseBluetooth+7)& (0+255),f,b
  9635  000CE2  370B               	rlcf	(??_UseBluetooth+8)& (0+255),f,b
  9636  000CE4  0102               	movlb	2	; () banked
  9637  000CE6  5108               	movf	(??_UseBluetooth+5)& (0+255),w,b
  9638  000CE8  0102               	movlb	2	; () banked
  9639  000CEA  270A               	addwf	(??_UseBluetooth+7)& (0+255),f,b
  9640  000CEC  0102               	movlb	2	; () banked
  9641  000CEE  5109               	movf	(??_UseBluetooth+6)& (0+255),w,b
  9642  000CF0  0102               	movlb	2	; () banked
  9643  000CF2  230B               	addwfc	(??_UseBluetooth+8)& (0+255),f,b
  9644  000CF4  0E00               	movlw	low _Global
  9645  000CF6  0102               	movlb	2	; () banked
  9646  000CF8  6F0C               	movwf	(??_UseBluetooth+9)& (0+255),b
  9647  000CFA  0E04               	movlw	high _Global
  9648  000CFC  0102               	movlb	2	; () banked
  9649  000CFE  6F0D               	movwf	(??_UseBluetooth+10)& (0+255),b
  9650  000D00  0E05               	movlw	5
  9651  000D02  0102               	movlb	2	; () banked
  9652  000D04  270C               	addwf	(??_UseBluetooth+9)& (0+255),f,b
  9653  000D06  0E00               	movlw	0
  9654  000D08  230D               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
  9655  000D0A  0102               	movlb	2	; () banked
  9656  000D0C  510A               	movf	(??_UseBluetooth+7)& (0+255),w,b
  9657  000D0E  0102               	movlb	2	; () banked
  9658  000D10  270C               	addwf	(??_UseBluetooth+9)& (0+255),f,b
  9659  000D12  0102               	movlb	2	; () banked
  9660  000D14  510B               	movf	(??_UseBluetooth+8)& (0+255),w,b
  9661  000D16  0102               	movlb	2	; () banked
  9662  000D18  230D               	addwfc	(??_UseBluetooth+10)& (0+255),f,b
  9663  000D1A  0E01               	movlw	1
  9664  000D1C  0102               	movlb	2	; () banked
  9665  000D1E  250C               	addwf	(??_UseBluetooth+9)& (0+255),w,b
  9666  000D20  6ED9               	movwf	fsr2l,c
  9667  000D22  0E00               	movlw	0
  9668  000D24  0102               	movlb	2	; () banked
  9669  000D26  210D               	addwfc	(??_UseBluetooth+10)& (0+255),w,b
  9670  000D28  6EDA               	movwf	fsr2h,c
  9671  000D2A  50DF               	movf	indf2,w,c
  9672  000D2C  0102               	movlb	2	; () banked
  9673  000D2E  6F0E               	movwf	(??_UseBluetooth+11)& (0+255),b
  9674  000D30  0102               	movlb	2	; () banked
  9675  000D32  510E               	movf	(??_UseBluetooth+11)& (0+255),w,b
  9676  000D34  0100               	movlb	0	; () banked
  9677  000D36  6FD0               	movwf	(?_sprintf+6)& (0+255),b
  9678  000D38  6BD1               	clrf	(?_sprintf+7)& (0+255),b
  9679  000D3A  ECF0  F010         	call	_sprintf	;wreg free
  9680                           
  9681                           ;Bluetooth.c: 490: UARTstringCRLN(buf);
  9682  000D3E  0E0F               	movlw	low UseBluetooth@buf
  9683  000D40  0100               	movlb	0	; () banked
  9684  000D42  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9685  000D44  0E02               	movlw	high UseBluetooth@buf
  9686  000D46  0100               	movlb	0	; () banked
  9687  000D48  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9688  000D4A  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9689                           
  9690                           ;Bluetooth.c: 491: UARTstring(CRLN);
  9691  000D4E  0EA7               	movlw	low _CRLN
  9692  000D50  0100               	movlb	0	; () banked
  9693  000D52  6F7D               	movwf	UARTstring@data& (0+255),b
  9694  000D54  0EF3               	movlw	high _CRLN
  9695  000D56  0100               	movlb	0	; () banked
  9696  000D58  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9697  000D5A  ECF7  F046         	call	_UARTstring	;wreg free
  9698                           
  9699                           ;Bluetooth.c: 492: return 1;
  9700                           ;	Return value of _UseBluetooth is never used
  9701  000D5E  0012               	return	
  9702  000D60                     l15532:
  9703                           
  9704                           ;Bluetooth.c: 493: }
  9705                           ;Bluetooth.c: 494: UARTstring(CRLN);
  9706  000D60  0EA7               	movlw	low _CRLN
  9707  000D62  0100               	movlb	0	; () banked
  9708  000D64  6F7D               	movwf	UARTstring@data& (0+255),b
  9709  000D66  0EF3               	movlw	high _CRLN
  9710  000D68  0100               	movlb	0	; () banked
  9711  000D6A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9712  000D6C  ECF7  F046         	call	_UARTstring	;wreg free
  9713                           
  9714                           ;Bluetooth.c: 495: UARTstringCRLN((unsigned char *)"Error: No NEC code saved for specifi
      +                          ed command");
  9715  000D70  0EDF               	movlw	low STR_49
  9716  000D72  0100               	movlb	0	; () banked
  9717  000D74  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9718  000D76  0EF5               	movlw	high STR_49
  9719  000D78  0100               	movlb	0	; () banked
  9720  000D7A  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9721  000D7C  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9722                           
  9723                           ;Bluetooth.c: 496: return 0;
  9724                           ;	Return value of _UseBluetooth is never used
  9725  000D80  0012               	return	
  9726                           
  9727                           ;Bluetooth.c: 497: }
  9728  000D82  D10A               	goto	l15582
  9729  000D84                     l15538:
  9730                           
  9731                           ;Bluetooth.c: 498: else
  9732                           ;Bluetooth.c: 499: {
  9733                           ;Bluetooth.c: 500: if(!WaitForIRsignal())
  9734  000D84  EC9D  F043         	call	_WaitForIRsignal	;wreg free
  9735  000D88  0900               	iorlw	0
  9736  000D8A  B4D8               	btfsc	status,2,c
  9737  000D8C  0012               	return	
  9738  000D8E  D001               	goto	l15542
  9739                           
  9740                           ;Bluetooth.c: 501: {
  9741                           ;Bluetooth.c: 502: return 0;
  9742                           ;	Return value of _UseBluetooth is never used
  9743  000D90  0012               	return	
  9744  000D92                     l15542:
  9745                           
  9746                           ;Bluetooth.c: 503: }
  9747                           ;Bluetooth.c: 506: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
  9748  000D92  C0DD  F080         	movff	_IR_NEC,DecodeNEC@Nec
  9749  000D96  C0DE  F081         	movff	_IR_NEC+1,DecodeNEC@Nec+1
  9750  000D9A  C0DF  F082         	movff	_IR_NEC+2,DecodeNEC@Nec+2
  9751  000D9E  C0E0  F083         	movff	_IR_NEC+3,DecodeNEC@Nec+3
  9752  000DA2  0E8C               	movlw	low UseBluetooth@NecAddress
  9753  000DA4  0100               	movlb	0	; () banked
  9754  000DA6  6F84               	movwf	DecodeNEC@address& (0+255),b
  9755  000DA8  0E02               	movlw	high UseBluetooth@NecAddress
  9756  000DAA  0100               	movlb	0	; () banked
  9757  000DAC  6F85               	movwf	(DecodeNEC@address+1)& (0+255),b
  9758  000DAE  0E8D               	movlw	low UseBluetooth@NecCommand
  9759  000DB0  0100               	movlb	0	; () banked
  9760  000DB2  6F86               	movwf	DecodeNEC@command& (0+255),b
  9761  000DB4  0E02               	movlw	high UseBluetooth@NecCommand
  9762  000DB6  0100               	movlb	0	; () banked
  9763  000DB8  6F87               	movwf	(DecodeNEC@command+1)& (0+255),b
  9764  000DBA  ECB9  F041         	call	_DecodeNEC	;wreg free
  9765                           
  9766                           ;Bluetooth.c: 507: Global.RemoteButtonNEC[temp - 1][0] = NecAddress;
  9767  000DBE  0EFE               	movlw	254
  9768  000DC0  0102               	movlb	2	; () banked
  9769  000DC2  6F03               	movwf	??_UseBluetooth& (0+255),b
  9770  000DC4  0EFF               	movlw	255
  9771  000DC6  0102               	movlb	2	; () banked
  9772  000DC8  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9773  000DCA  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9774  000DCE  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9775  000DD2  90D8               	bcf	status,0,c
  9776  000DD4  0102               	movlb	2	; () banked
  9777  000DD6  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9778  000DD8  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9779  000DDA  0102               	movlb	2	; () banked
  9780  000DDC  5103               	movf	??_UseBluetooth& (0+255),w,b
  9781  000DDE  0102               	movlb	2	; () banked
  9782  000DE0  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9783  000DE2  0102               	movlb	2	; () banked
  9784  000DE4  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9785  000DE6  0102               	movlb	2	; () banked
  9786  000DE8  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9787  000DEA  0E05               	movlw	low (_Global+5)
  9788  000DEC  0102               	movlb	2	; () banked
  9789  000DEE  2505               	addwf	(??_UseBluetooth+2)& (0+255),w,b
  9790  000DF0  6ED9               	movwf	fsr2l,c
  9791  000DF2  0E04               	movlw	high (_Global+5)
  9792  000DF4  0102               	movlb	2	; () banked
  9793  000DF6  2106               	addwfc	(??_UseBluetooth+3)& (0+255),w,b
  9794  000DF8  6EDA               	movwf	fsr2h,c
  9795  000DFA  C28C  FFDF         	movff	UseBluetooth@NecAddress,indf2
  9796                           
  9797                           ; BSR set to: 2
  9798                           ;Bluetooth.c: 508: Global.RemoteButtonNEC[temp - 1][1] = NecCommand;
  9799  000DFE  0EFE               	movlw	254
  9800  000E00  0102               	movlb	2	; () banked
  9801  000E02  6F03               	movwf	??_UseBluetooth& (0+255),b
  9802  000E04  0EFF               	movlw	255
  9803  000E06  0102               	movlb	2	; () banked
  9804  000E08  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
  9805  000E0A  C28E  F205         	movff	UseBluetooth@temp,??_UseBluetooth+2
  9806  000E0E  C28F  F206         	movff	UseBluetooth@temp+1,??_UseBluetooth+3
  9807  000E12  90D8               	bcf	status,0,c
  9808  000E14  0102               	movlb	2	; () banked
  9809  000E16  3705               	rlcf	(??_UseBluetooth+2)& (0+255),f,b
  9810  000E18  3706               	rlcf	(??_UseBluetooth+3)& (0+255),f,b
  9811  000E1A  0102               	movlb	2	; () banked
  9812  000E1C  5103               	movf	??_UseBluetooth& (0+255),w,b
  9813  000E1E  0102               	movlb	2	; () banked
  9814  000E20  2705               	addwf	(??_UseBluetooth+2)& (0+255),f,b
  9815  000E22  0102               	movlb	2	; () banked
  9816  000E24  5104               	movf	(??_UseBluetooth+1)& (0+255),w,b
  9817  000E26  0102               	movlb	2	; () banked
  9818  000E28  2306               	addwfc	(??_UseBluetooth+3)& (0+255),f,b
  9819  000E2A  0E00               	movlw	low _Global
  9820  000E2C  0102               	movlb	2	; () banked
  9821  000E2E  6F07               	movwf	(??_UseBluetooth+4)& (0+255),b
  9822  000E30  0E04               	movlw	high _Global
  9823  000E32  0102               	movlb	2	; () banked
  9824  000E34  6F08               	movwf	(??_UseBluetooth+5)& (0+255),b
  9825  000E36  0E05               	movlw	5
  9826  000E38  0102               	movlb	2	; () banked
  9827  000E3A  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9828  000E3C  0E00               	movlw	0
  9829  000E3E  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9830  000E40  0102               	movlb	2	; () banked
  9831  000E42  5105               	movf	(??_UseBluetooth+2)& (0+255),w,b
  9832  000E44  0102               	movlb	2	; () banked
  9833  000E46  2707               	addwf	(??_UseBluetooth+4)& (0+255),f,b
  9834  000E48  0102               	movlb	2	; () banked
  9835  000E4A  5106               	movf	(??_UseBluetooth+3)& (0+255),w,b
  9836  000E4C  0102               	movlb	2	; () banked
  9837  000E4E  2308               	addwfc	(??_UseBluetooth+5)& (0+255),f,b
  9838  000E50  0E01               	movlw	1
  9839  000E52  0102               	movlb	2	; () banked
  9840  000E54  2507               	addwf	(??_UseBluetooth+4)& (0+255),w,b
  9841  000E56  6ED9               	movwf	fsr2l,c
  9842  000E58  0E00               	movlw	0
  9843  000E5A  0102               	movlb	2	; () banked
  9844  000E5C  2108               	addwfc	(??_UseBluetooth+5)& (0+255),w,b
  9845  000E5E  6EDA               	movwf	fsr2h,c
  9846  000E60  C28D  FFDF         	movff	UseBluetooth@NecCommand,indf2
  9847                           
  9848                           ; BSR set to: 2
  9849                           ;Bluetooth.c: 509: SyncGlobalToEEPROM();
  9850  000E64  EC1C  F048         	call	_SyncGlobalToEEPROM	;wreg free
  9851                           
  9852                           ;Bluetooth.c: 510: UARTstring(CRLN);
  9853  000E68  0EA7               	movlw	low _CRLN
  9854  000E6A  0100               	movlb	0	; () banked
  9855  000E6C  6F7D               	movwf	UARTstring@data& (0+255),b
  9856  000E6E  0EF3               	movlw	high _CRLN
  9857  000E70  0100               	movlb	0	; () banked
  9858  000E72  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9859  000E74  ECF7  F046         	call	_UARTstring	;wreg free
  9860                           
  9861                           ;Bluetooth.c: 511: sprintf(buf,"RemoteButton%ld now transmits NEC code 0x%lX ",temp, IR_
      +                          NEC);
  9862  000E78  0E0F               	movlw	low UseBluetooth@buf
  9863  000E7A  0100               	movlb	0	; () banked
  9864  000E7C  6FCA               	movwf	sprintf@sp& (0+255),b
  9865  000E7E  0E02               	movlw	high UseBluetooth@buf
  9866  000E80  0100               	movlb	0	; () banked
  9867  000E82  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9868  000E84  0E0E               	movlw	low STR_50
  9869  000E86  0100               	movlb	0	; () banked
  9870  000E88  6FCC               	movwf	sprintf@f& (0+255),b
  9871  000E8A  0EF6               	movlw	high STR_50
  9872  000E8C  0100               	movlb	0	; () banked
  9873  000E8E  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9874  000E90  C28E  F0CE         	movff	UseBluetooth@temp,?_sprintf+4
  9875  000E94  C28F  F0CF         	movff	UseBluetooth@temp+1,?_sprintf+5
  9876  000E98  C290  F0D0         	movff	UseBluetooth@temp+2,?_sprintf+6
  9877  000E9C  C291  F0D1         	movff	UseBluetooth@temp+3,?_sprintf+7
  9878  000EA0  C0DD  F0D2         	movff	_IR_NEC,?_sprintf+8
  9879  000EA4  C0DE  F0D3         	movff	_IR_NEC+1,?_sprintf+9
  9880  000EA8  C0DF  F0D4         	movff	_IR_NEC+2,?_sprintf+10
  9881  000EAC  C0E0  F0D5         	movff	_IR_NEC+3,?_sprintf+11
  9882  000EB0  ECF0  F010         	call	_sprintf	;wreg free
  9883                           
  9884                           ;Bluetooth.c: 512: UARTstringCRLN(buf);
  9885  000EB4  0E0F               	movlw	low UseBluetooth@buf
  9886  000EB6  0100               	movlb	0	; () banked
  9887  000EB8  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9888  000EBA  0E02               	movlw	high UseBluetooth@buf
  9889  000EBC  0100               	movlb	0	; () banked
  9890  000EBE  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9891  000EC0  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9892                           
  9893                           ;Bluetooth.c: 513: sprintf(buf,"NEC Code address: 0x%02X , command: 0x%02X ",NecAddress,
      +                           NecCommand);
  9894  000EC4  0E0F               	movlw	low UseBluetooth@buf
  9895  000EC6  0100               	movlb	0	; () banked
  9896  000EC8  6FCA               	movwf	sprintf@sp& (0+255),b
  9897  000ECA  0E02               	movlw	high UseBluetooth@buf
  9898  000ECC  0100               	movlb	0	; () banked
  9899  000ECE  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
  9900  000ED0  0E7E               	movlw	low STR_48
  9901  000ED2  0100               	movlb	0	; () banked
  9902  000ED4  6FCC               	movwf	sprintf@f& (0+255),b
  9903  000ED6  0EF7               	movlw	high STR_48
  9904  000ED8  0100               	movlb	0	; () banked
  9905  000EDA  6FCD               	movwf	(sprintf@f+1)& (0+255),b
  9906  000EDC  C28C  F0CE         	movff	UseBluetooth@NecAddress,?_sprintf+4
  9907  000EE0  0100               	movlb	0	; () banked
  9908  000EE2  6BCF               	clrf	(?_sprintf+5)& (0+255),b
  9909  000EE4  C28D  F0D0         	movff	UseBluetooth@NecCommand,?_sprintf+6
  9910  000EE8  0100               	movlb	0	; () banked
  9911  000EEA  6BD1               	clrf	(?_sprintf+7)& (0+255),b
  9912  000EEC  ECF0  F010         	call	_sprintf	;wreg free
  9913                           
  9914                           ;Bluetooth.c: 514: UARTstringCRLN(buf);
  9915  000EF0  0E0F               	movlw	low UseBluetooth@buf
  9916  000EF2  0100               	movlb	0	; () banked
  9917  000EF4  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
  9918  000EF6  0E02               	movlw	high UseBluetooth@buf
  9919  000EF8  0100               	movlb	0	; () banked
  9920  000EFA  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
  9921  000EFC  EC9C  F045         	call	_UARTstringCRLN	;wreg free
  9922                           
  9923                           ;Bluetooth.c: 515: UARTstring(CRLN);
  9924  000F00  0EA7               	movlw	low _CRLN
  9925  000F02  0100               	movlb	0	; () banked
  9926  000F04  6F7D               	movwf	UARTstring@data& (0+255),b
  9927  000F06  0EF3               	movlw	high _CRLN
  9928  000F08  0100               	movlb	0	; () banked
  9929  000F0A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
  9930  000F0C  ECF7  F046         	call	_UARTstring	;wreg free
  9931                           
  9932                           ;Bluetooth.c: 517: for(i =0;i<10;i++)
  9933  000F10  0E00               	movlw	0
  9934  000F12  0102               	movlb	2	; () banked
  9935  000F14  6F92               	movwf	UseBluetooth@i& (0+255),b
  9936                           
  9937                           ; BSR set to: 2
  9938  000F16  0E09               	movlw	9
  9939  000F18  0102               	movlb	2	; () banked
  9940  000F1A  6592               	cpfsgt	UseBluetooth@i& (0+255),b
  9941  000F1C  D002               	goto	l15568
  9942  000F1E  0012               	return	
  9943                           
  9944                           ; BSR set to: 2
  9945  000F20  0012               	return	
  9946  000F22                     l15568:
  9947                           
  9948                           ; BSR set to: 2
  9949                           ;Bluetooth.c: 518: {
  9950                           ;Bluetooth.c: 519: (LATC |= 0x04);
  9951  000F22  848B               	bsf	3979,2,c	;volatile
  9952                           
  9953                           ; BSR set to: 2
  9954                           ;Bluetooth.c: 520: delayUS(50000);
  9955  000F24  0E50               	movlw	80
  9956  000F26  0100               	movlb	0	; () banked
  9957  000F28  6F7C               	movwf	delayUS@US& (0+255),b
  9958  000F2A  0EC3               	movlw	195
  9959  000F2C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  9960  000F2E  0E00               	movlw	0
  9961  000F30  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  9962  000F32  0E00               	movlw	0
  9963  000F34  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  9964  000F36  EC7B  F047         	call	_delayUS	;wreg free
  9965                           
  9966                           ;Bluetooth.c: 521: (LATC &= ~0x04);
  9967  000F3A  948B               	bcf	3979,2,c	;volatile
  9968                           
  9969                           ;Bluetooth.c: 522: delayUS(50000);
  9970  000F3C  0E50               	movlw	80
  9971  000F3E  0100               	movlb	0	; () banked
  9972  000F40  6F7C               	movwf	delayUS@US& (0+255),b
  9973  000F42  0EC3               	movlw	195
  9974  000F44  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  9975  000F46  0E00               	movlw	0
  9976  000F48  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  9977  000F4A  0E00               	movlw	0
  9978  000F4C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  9979  000F4E  EC7B  F047         	call	_delayUS	;wreg free
  9980  000F52  0102               	movlb	2	; () banked
  9981  000F54  2B92               	incf	UseBluetooth@i& (0+255),f,b
  9982                           
  9983                           ; BSR set to: 2
  9984  000F56  0E09               	movlw	9
  9985  000F58  0102               	movlb	2	; () banked
  9986  000F5A  6592               	cpfsgt	UseBluetooth@i& (0+255),b
  9987  000F5C  D7E2               	goto	l15568
  9988  000F5E  0012               	return	
  9989                           
  9990                           ; BSR set to: 2
  9991                           ;Bluetooth.c: 523: }
  9992                           ;Bluetooth.c: 524: return 1;
  9993                           ;	Return value of _UseBluetooth is never used
  9994  000F60  0012               	return	
  9995                           
  9996                           ; BSR set to: 2
  9997                           ;Bluetooth.c: 525: }
  9998                           ;Bluetooth.c: 526: }
  9999  000F62  D01A               	goto	l15582
 10000  000F64                     l15578:
 10001                           
 10002                           ; BSR set to: 2
 10003                           ;Bluetooth.c: 527: else
 10004                           ;Bluetooth.c: 528: {
 10005                           ;Bluetooth.c: 529: UARTstring(CRLN);
 10006  000F64  0EA7               	movlw	low _CRLN
 10007  000F66  0100               	movlb	0	; () banked
 10008  000F68  6F7D               	movwf	UARTstring@data& (0+255),b
 10009  000F6A  0EF3               	movlw	high _CRLN
 10010  000F6C  0100               	movlb	0	; () banked
 10011  000F6E  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10012  000F70  ECF7  F046         	call	_UARTstring	;wreg free
 10013                           
 10014                           ;Bluetooth.c: 530: UARTstringCRLN((unsigned char *)"Error: Remote button number too high
      +                          ");
 10015  000F74  0E9E               	movlw	low STR_52
 10016  000F76  0100               	movlb	0	; () banked
 10017  000F78  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10018  000F7A  0EF8               	movlw	high STR_52
 10019  000F7C  0100               	movlb	0	; () banked
 10020  000F7E  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10021  000F80  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10022                           
 10023                           ;Bluetooth.c: 531: UARTstring(CRLN);
 10024  000F84  0EA7               	movlw	low _CRLN
 10025  000F86  0100               	movlb	0	; () banked
 10026  000F88  6F7D               	movwf	UARTstring@data& (0+255),b
 10027  000F8A  0EF3               	movlw	high _CRLN
 10028  000F8C  0100               	movlb	0	; () banked
 10029  000F8E  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10030  000F90  ECF7  F046         	call	_UARTstring	;wreg free
 10031                           
 10032                           ;Bluetooth.c: 532: return 0;
 10033                           ;	Return value of _UseBluetooth is never used
 10034  000F94  0012               	return	
 10035  000F96  D000               	goto	l15582
 10036  000F98                     l15582:
 10037                           
 10038                           ;Bluetooth.c: 533: }
 10039                           ;Bluetooth.c: 534: }
 10040                           ;Bluetooth.c: 535: }
 10041                           ;Bluetooth.c: 536: UARTstring(CRLN);
 10042  000F98  0EA7               	movlw	low _CRLN
 10043  000F9A  0100               	movlb	0	; () banked
 10044  000F9C  6F7D               	movwf	UARTstring@data& (0+255),b
 10045  000F9E  0EF3               	movlw	high _CRLN
 10046  000FA0  0100               	movlb	0	; () banked
 10047  000FA2  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10048  000FA4  ECF7  F046         	call	_UARTstring	;wreg free
 10049                           
 10050                           ;Bluetooth.c: 537: UARTstringCRLN((unsigned char *)"Error: Remote button not specified")
      +                          ;
 10051  000FA8  0EE7               	movlw	low STR_53
 10052  000FAA  0100               	movlb	0	; () banked
 10053  000FAC  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10054  000FAE  0EF8               	movlw	high STR_53
 10055  000FB0  0100               	movlb	0	; () banked
 10056  000FB2  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10057  000FB4  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10058                           
 10059                           ;Bluetooth.c: 538: UARTstring(CRLN);
 10060  000FB8  0EA7               	movlw	low _CRLN
 10061  000FBA  0100               	movlb	0	; () banked
 10062  000FBC  6F7D               	movwf	UARTstring@data& (0+255),b
 10063  000FBE  0EF3               	movlw	high _CRLN
 10064  000FC0  0100               	movlb	0	; () banked
 10065  000FC2  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10066  000FC4  ECF7  F046         	call	_UARTstring	;wreg free
 10067                           
 10068                           ;Bluetooth.c: 539: UARTstringCRLN((unsigned char *)"Usage:");
 10069  000FC8  0EAC               	movlw	low STR_37
 10070  000FCA  0100               	movlb	0	; () banked
 10071  000FCC  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10072  000FCE  0EFF               	movlw	high STR_37
 10073  000FD0  0100               	movlb	0	; () banked
 10074  000FD2  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10075  000FD4  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10076                           
 10077                           ;Bluetooth.c: 540: UARTstringCRLN((unsigned char *)"RemoteButton'x'");
 10078  000FD8  0E51               	movlw	low STR_55
 10079  000FDA  0100               	movlb	0	; () banked
 10080  000FDC  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10081  000FDE  0EFE               	movlw	high STR_55
 10082  000FE0  0100               	movlb	0	; () banked
 10083  000FE2  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10084  000FE4  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10085                           
 10086                           ;Bluetooth.c: 541: UARTstringCRLN((unsigned char *)"RemoteButton'x' set");
 10087  000FE8  0E75               	movlw	low STR_56
 10088  000FEA  0100               	movlb	0	; () banked
 10089  000FEC  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10090  000FEE  0EFD               	movlw	high STR_56
 10091  000FF0  0100               	movlb	0	; () banked
 10092  000FF2  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10093  000FF4  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10094                           
 10095                           ;Bluetooth.c: 542: UARTstring(CRLN);
 10096  000FF8  0EA7               	movlw	low _CRLN
 10097  000FFA  0100               	movlb	0	; () banked
 10098  000FFC  6F7D               	movwf	UARTstring@data& (0+255),b
 10099  000FFE  0EF3               	movlw	high _CRLN
 10100  001000  0100               	movlb	0	; () banked
 10101  001002  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10102  001004  ECF7  F046         	call	_UARTstring	;wreg free
 10103                           
 10104                           ;Bluetooth.c: 543: UARTstringCRLN((unsigned char *)"Example:");
 10105  001008  0E8B               	movlw	low STR_41
 10106  00100A  0100               	movlb	0	; () banked
 10107  00100C  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10108  00100E  0EFF               	movlw	high STR_41
 10109  001010  0100               	movlb	0	; () banked
 10110  001012  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10111  001014  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10112                           
 10113                           ;Bluetooth.c: 544: UARTstringCRLN((unsigned char *)"RemoteButton1");
 10114  001018  0E90               	movlw	low STR_58
 10115  00101A  0100               	movlb	0	; () banked
 10116  00101C  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10117  00101E  0EFE               	movlw	high STR_58
 10118  001020  0100               	movlb	0	; () banked
 10119  001022  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10120  001024  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10121                           
 10122                           ;Bluetooth.c: 545: UARTstringCRLN((unsigned char *)"RemoteButton1 set");
 10123  001028  0EFA               	movlw	low STR_59
 10124  00102A  0100               	movlb	0	; () banked
 10125  00102C  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10126  00102E  0EFD               	movlw	high STR_59
 10127  001030  0100               	movlb	0	; () banked
 10128  001032  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10129  001034  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10130                           
 10131                           ;Bluetooth.c: 546: UARTstring(CRLN);
 10132  001038  0EA7               	movlw	low _CRLN
 10133  00103A  0100               	movlb	0	; () banked
 10134  00103C  6F7D               	movwf	UARTstring@data& (0+255),b
 10135  00103E  0EF3               	movlw	high _CRLN
 10136  001040  0100               	movlb	0	; () banked
 10137  001042  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10138  001044  ECF7  F046         	call	_UARTstring	;wreg free
 10139                           
 10140                           ;Bluetooth.c: 548: }
 10141                           
 10142                           ;Bluetooth.c: 547: return 0;
 10143                           ;	Return value of _UseBluetooth is never used
 10144  001048  0012               	return	
 10145  00104A                     l15588:
 10146                           
 10147                           ;Bluetooth.c: 549: else if(StringContainsCaseInsensitive(String,(unsigned char *)"RF set
      +                          ") || StringContainsCaseInsensitive(String,(unsigned char *)"RF clear"))
 10148  00104A  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10149  00104E  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10150  001052  0EB3               	movlw	low STR_60
 10151  001054  0100               	movlb	0	; () banked
 10152  001056  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10153  001058  0EFF               	movlw	high STR_60
 10154  00105A  0100               	movlb	0	; () banked
 10155  00105C  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10156  00105E  EC98  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10157  001062  0900               	iorlw	0
 10158  001064  A4D8               	btfss	status,2,c
 10159  001066  D010               	goto	l15592
 10160  001068  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10161  00106C  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10162  001070  0E94               	movlw	low STR_61
 10163  001072  0100               	movlb	0	; () banked
 10164  001074  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10165  001076  0EFF               	movlw	high STR_61
 10166  001078  0100               	movlb	0	; () banked
 10167  00107A  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10168  00107C  EC98  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10169  001080  0900               	iorlw	0
 10170  001082  B4D8               	btfsc	status,2,c
 10171  001084  EFB0  F00C         	goto	l15870
 10172  001088                     l15592:
 10173                           
 10174                           ;Bluetooth.c: 550: {
 10175                           ;Bluetooth.c: 551: if(StringContainsCaseInsensitive(String,(unsigned char *)"RF set"))
 10176  001088  C200  F07F         	movff	UseBluetooth@String,StringContainsCaseInsensitive@This
 10177  00108C  C201  F080         	movff	UseBluetooth@String+1,StringContainsCaseInsensitive@This+1
 10178  001090  0EB3               	movlw	low STR_60
 10179  001092  0100               	movlb	0	; () banked
 10180  001094  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10181  001096  0EFF               	movlw	high STR_60
 10182  001098  0100               	movlb	0	; () banked
 10183  00109A  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10184  00109C  EC98  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10185  0010A0  0900               	iorlw	0
 10186  0010A2  B4D8               	btfsc	status,2,c
 10187  0010A4  D002               	goto	l15596
 10188                           
 10189                           ;Bluetooth.c: 552: {
 10190                           ;Bluetooth.c: 553: set = 1;
 10191  0010A6  0E01               	movlw	1
 10192  0010A8  D001               	goto	L4
 10193  0010AA                     l15596:
 10194                           
 10195                           ;Bluetooth.c: 555: else
 10196                           ;Bluetooth.c: 556: {
 10197                           ;Bluetooth.c: 557: set = 0;
 10198  0010AA  0E00               	movlw	0
 10199  0010AC                     L4:
 10200  0010AC  0102               	movlb	2	; () banked
 10201  0010AE  6F7D               	movwf	UseBluetooth@set& (0+255),b
 10202  0010B0  D000               	goto	l15598
 10203  0010B2                     l15598:
 10204                           
 10205                           ; BSR set to: 2
 10206                           ;Bluetooth.c: 558: }
 10207                           ;Bluetooth.c: 559: if(!StringAddEqual(String))
 10208  0010B2  C200  F08B         	movff	UseBluetooth@String,StringAddEqual@Input
 10209  0010B6  C201  F08C         	movff	UseBluetooth@String+1,StringAddEqual@Input+1
 10210  0010BA  EC5C  F031         	call	_StringAddEqual	;wreg free
 10211  0010BE  0900               	iorlw	0
 10212  0010C0  A4D8               	btfss	status,2,c
 10213  0010C2  D011               	goto	l15604
 10214                           
 10215                           ;Bluetooth.c: 560: {
 10216                           ;Bluetooth.c: 561: UARTstringCRLN((unsigned char *)"Error: No RF configuration specified
      +                          ");
 10217  0010C4  0E54               	movlw	low STR_63
 10218  0010C6  0100               	movlb	0	; () banked
 10219  0010C8  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10220  0010CA  0EF8               	movlw	high STR_63
 10221  0010CC  0100               	movlb	0	; () banked
 10222  0010CE  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10223  0010D0  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10224                           
 10225                           ;Bluetooth.c: 562: UARTstring(CRLN);
 10226  0010D4  0EA7               	movlw	low _CRLN
 10227  0010D6  0100               	movlb	0	; () banked
 10228  0010D8  6F7D               	movwf	UARTstring@data& (0+255),b
 10229  0010DA  0EF3               	movlw	high _CRLN
 10230  0010DC  0100               	movlb	0	; () banked
 10231  0010DE  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10232  0010E0  ECF7  F046         	call	_UARTstring	;wreg free
 10233                           
 10234                           ;Bluetooth.c: 563: return 0;
 10235                           ;	Return value of _UseBluetooth is never used
 10236  0010E4  0012               	return	
 10237  0010E6                     l15604:
 10238                           
 10239                           ;Bluetooth.c: 564: }
 10240                           ;Bluetooth.c: 565: StringPos++;
 10241  0010E6  0102               	movlb	2	; () banked
 10242  0010E8  2B02               	incf	UseBluetooth@StringPos& (0+255),f,b
 10243                           
 10244                           ; BSR set to: 2
 10245                           ;Bluetooth.c: 566: UARTstring(CRLN);
 10246  0010EA  0EA7               	movlw	low _CRLN
 10247  0010EC  0100               	movlb	0	; () banked
 10248  0010EE  6F7D               	movwf	UARTstring@data& (0+255),b
 10249  0010F0  0EF3               	movlw	high _CRLN
 10250  0010F2  0100               	movlb	0	; () banked
 10251  0010F4  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10252  0010F6  ECF7  F046         	call	_UARTstring	;wreg free
 10253                           
 10254                           ;Bluetooth.c: 567: if(!GetNumber(String, 1, &temp))
 10255  0010FA  C200  F088         	movff	UseBluetooth@String,GetNumber@This
 10256  0010FE  C201  F089         	movff	UseBluetooth@String+1,GetNumber@This+1
 10257  001102  0E01               	movlw	1
 10258  001104  0100               	movlb	0	; () banked
 10259  001106  6F8A               	movwf	GetNumber@CommaNumber& (0+255),b
 10260  001108  0E8E               	movlw	low UseBluetooth@temp
 10261  00110A  0100               	movlb	0	; () banked
 10262  00110C  6F8B               	movwf	GetNumber@result& (0+255),b
 10263  00110E  0E02               	movlw	high UseBluetooth@temp
 10264  001110  0100               	movlb	0	; () banked
 10265  001112  6F8C               	movwf	(GetNumber@result+1)& (0+255),b
 10266  001114  EC31  F024         	call	_GetNumber	;wreg free
 10267  001118  0900               	iorlw	0
 10268  00111A  A4D8               	btfss	status,2,c
 10269  00111C  D003               	goto	l15612
 10270                           
 10271                           ;Bluetooth.c: 568: {
 10272                           ;Bluetooth.c: 569: rfconf = (unsigned char) temp;
 10273  00111E  C28E  F28B         	movff	UseBluetooth@temp,UseBluetooth@rfconf
 10274                           
 10275                           ;Bluetooth.c: 570: }
 10276  001122  D011               	goto	l15616
 10277  001124                     l15612:
 10278                           
 10279                           ;Bluetooth.c: 571: else
 10280                           ;Bluetooth.c: 572: {
 10281                           ;Bluetooth.c: 573: UARTstringCRLN((unsigned char *)"Error: No RF configuration specified
      +                          ");
 10282  001124  0E54               	movlw	low STR_63
 10283  001126  0100               	movlb	0	; () banked
 10284  001128  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10285  00112A  0EF8               	movlw	high STR_63
 10286  00112C  0100               	movlb	0	; () banked
 10287  00112E  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10288  001130  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10289                           
 10290                           ;Bluetooth.c: 574: UARTstring(CRLN);
 10291  001134  0EA7               	movlw	low _CRLN
 10292  001136  0100               	movlb	0	; () banked
 10293  001138  6F7D               	movwf	UARTstring@data& (0+255),b
 10294  00113A  0EF3               	movlw	high _CRLN
 10295  00113C  0100               	movlb	0	; () banked
 10296  00113E  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10297  001140  ECF7  F046         	call	_UARTstring	;wreg free
 10298                           
 10299                           ;Bluetooth.c: 575: return 0;
 10300                           ;	Return value of _UseBluetooth is never used
 10301  001144  0012               	return	
 10302  001146                     l15616:
 10303                           
 10304                           ;Bluetooth.c: 576: }
 10305                           ;Bluetooth.c: 577: if(rfconf <= 0 || rfconf > 2)
 10306  001146  0102               	movlb	2	; () banked
 10307  001148  518B               	movf	UseBluetooth@rfconf& (0+255),w,b
 10308  00114A  0102               	movlb	2	; () banked
 10309  00114C  B4D8               	btfsc	status,2,c
 10310  00114E  D005               	goto	l15620
 10311                           
 10312                           ; BSR set to: 2
 10313  001150  0E02               	movlw	2
 10314  001152  0102               	movlb	2	; () banked
 10315  001154  658B               	cpfsgt	UseBluetooth@rfconf& (0+255),b
 10316  001156  D012               	goto	l15624
 10317  001158  D000               	goto	l15620
 10318  00115A                     l15620:
 10319                           
 10320                           ; BSR set to: 2
 10321                           ;Bluetooth.c: 578: {
 10322                           ;Bluetooth.c: 579: UARTstringCRLN((unsigned char *)"Error: RF configuration out of range
      +                          ");
 10323  00115A  0E79               	movlw	low STR_65
 10324  00115C  0100               	movlb	0	; () banked
 10325  00115E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10326  001160  0EF8               	movlw	high STR_65
 10327  001162  0100               	movlb	0	; () banked
 10328  001164  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10329  001166  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10330                           
 10331                           ;Bluetooth.c: 580: UARTstring(CRLN);
 10332  00116A  0EA7               	movlw	low _CRLN
 10333  00116C  0100               	movlb	0	; () banked
 10334  00116E  6F7D               	movwf	UARTstring@data& (0+255),b
 10335  001170  0EF3               	movlw	high _CRLN
 10336  001172  0100               	movlb	0	; () banked
 10337  001174  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10338  001176  ECF7  F046         	call	_UARTstring	;wreg free
 10339                           
 10340                           ;Bluetooth.c: 581: return 0;
 10341                           ;	Return value of _UseBluetooth is never used
 10342  00117A  0012               	return	
 10343  00117C                     l15624:
 10344                           
 10345                           ;Bluetooth.c: 582: }
 10346                           ;Bluetooth.c: 583: if(GetStringAfterComma(String, 1, rfchannelSTR))
 10347  00117C  C200  F07C         	movff	UseBluetooth@String,GetStringAfterComma@This
 10348  001180  C201  F07D         	movff	UseBluetooth@String+1,GetStringAfterComma@This+1
 10349  001184  0E01               	movlw	1
 10350  001186  0100               	movlb	0	; () banked
 10351  001188  6F7E               	movwf	GetStringAfterComma@CommaNumber& (0+255),b
 10352  00118A  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10353  00118C  0100               	movlb	0	; () banked
 10354  00118E  6F7F               	movwf	GetStringAfterComma@result& (0+255),b
 10355  001190  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10356  001192  0100               	movlb	0	; () banked
 10357  001194  6F80               	movwf	(GetStringAfterComma@result+1)& (0+255),b
 10358  001196  EC4A  F03C         	call	_GetStringAfterComma	;wreg free
 10359  00119A  0900               	iorlw	0
 10360  00119C  B4D8               	btfsc	status,2,c
 10361  00119E  D011               	goto	l15632
 10362                           
 10363                           ;Bluetooth.c: 584: {
 10364                           ;Bluetooth.c: 585: UARTstringCRLN((unsigned char *)"Error: No RF channel specified");
 10365  0011A0  0EA9               	movlw	low STR_66
 10366  0011A2  0100               	movlb	0	; () banked
 10367  0011A4  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10368  0011A6  0EFA               	movlw	high STR_66
 10369  0011A8  0100               	movlb	0	; () banked
 10370  0011AA  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10371  0011AC  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10372                           
 10373                           ;Bluetooth.c: 586: UARTstring(CRLN);
 10374  0011B0  0EA7               	movlw	low _CRLN
 10375  0011B2  0100               	movlb	0	; () banked
 10376  0011B4  6F7D               	movwf	UARTstring@data& (0+255),b
 10377  0011B6  0EF3               	movlw	high _CRLN
 10378  0011B8  0100               	movlb	0	; () banked
 10379  0011BA  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10380  0011BC  ECF7  F046         	call	_UARTstring	;wreg free
 10381                           
 10382                           ;Bluetooth.c: 588: }
 10383                           
 10384                           ;Bluetooth.c: 587: return 0;
 10385                           ;	Return value of _UseBluetooth is never used
 10386  0011C0  0012               	return	
 10387  0011C2                     l15632:
 10388                           
 10389                           ;Bluetooth.c: 589: else
 10390                           ;Bluetooth.c: 590: {
 10391                           ;Bluetooth.c: 591: lowercaseString(rfchannelSTR);
 10392  0011C2  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10393  0011C4  0100               	movlb	0	; () banked
 10394  0011C6  6F7C               	movwf	lowercaseString@Input& (0+255),b
 10395  0011C8  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10396  0011CA  0100               	movlb	0	; () banked
 10397  0011CC  6F7D               	movwf	(lowercaseString@Input+1)& (0+255),b
 10398  0011CE  EC62  F048         	call	_lowercaseString	;wreg free
 10399                           
 10400                           ;Bluetooth.c: 592: if(rfchannelSTR[1] == 0 || rfchannelSTR[1] == ' ')
 10401  0011D2  0102               	movlb	2	; () banked
 10402  0011D4  5174               	movf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 10403  0011D6  B4D8               	btfsc	status,2,c
 10404  0011D8  D005               	goto	l15638
 10405                           
 10406                           ; BSR set to: 2
 10407  0011DA  0E20               	movlw	32
 10408  0011DC  0102               	movlb	2	; () banked
 10409  0011DE  1974               	xorwf	(UseBluetooth@rfchannelSTR+1)& (0+255),w,b
 10410  0011E0  A4D8               	btfss	status,2,c
 10411  0011E2  D3AD               	goto	l15866
 10412  0011E4                     l15638:
 10413                           
 10414                           ; BSR set to: 2
 10415                           ;Bluetooth.c: 593: {
 10416                           ;Bluetooth.c: 594: rfchannelSTR[1] = 0;
 10417  0011E4  0E00               	movlw	0
 10418  0011E6  0102               	movlb	2	; () banked
 10419  0011E8  6F74               	movwf	(UseBluetooth@rfchannelSTR+1)& (0+255),b
 10420                           
 10421                           ; BSR set to: 2
 10422                           ;Bluetooth.c: 595: if(rfconf == 1)
 10423  0011EA  0102               	movlb	2	; () banked
 10424  0011EC  058B               	decf	UseBluetooth@rfconf& (0+255),w,b
 10425  0011EE  A4D8               	btfss	status,2,c
 10426  0011F0  D015               	goto	l15646
 10427                           
 10428                           ; BSR set to: 2
 10429                           ;Bluetooth.c: 596: {
 10430                           ;Bluetooth.c: 597: if(!StringContainsCaseInsensitive(Conf1_Channels, rfchannelSTR))
 10431  0011F2  0E9B               	movlw	low _Conf1_Channels
 10432  0011F4  0100               	movlb	0	; () banked
 10433  0011F6  6F7F               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 10434  0011F8  0EF3               	movlw	high _Conf1_Channels
 10435  0011FA  0100               	movlb	0	; () banked
 10436  0011FC  6F80               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 10437  0011FE  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10438  001200  0100               	movlb	0	; () banked
 10439  001202  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10440  001204  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10441  001206  0100               	movlb	0	; () banked
 10442  001208  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10443  00120A  EC98  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10444  00120E  0900               	iorlw	0
 10445  001210  A4D8               	btfss	status,2,c
 10446  001212  D019               	goto	l1921
 10447                           
 10448                           ;Bluetooth.c: 598: {
 10449                           ;Bluetooth.c: 599: ok = 0;
 10450  001214  0E00               	movlw	0
 10451  001216  0102               	movlb	2	; () banked
 10452  001218  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10453                           
 10454                           ; BSR set to: 2
 10455                           ;Bluetooth.c: 600: }
 10456                           ;Bluetooth.c: 601: }
 10457  00121A  D015               	goto	l1921
 10458  00121C                     l15646:
 10459                           
 10460                           ; BSR set to: 2
 10461                           ;Bluetooth.c: 602: else if(rfconf == 2)
 10462  00121C  0E02               	movlw	2
 10463  00121E  0102               	movlb	2	; () banked
 10464  001220  198B               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 10465  001222  A4D8               	btfss	status,2,c
 10466  001224  D010               	goto	l1921
 10467                           
 10468                           ; BSR set to: 2
 10469                           ;Bluetooth.c: 603: {
 10470                           ;Bluetooth.c: 604: if(!StringContainsCaseInsensitive(Conf2_Channels, rfchannelSTR))
 10471  001226  0E9F               	movlw	low _Conf2_Channels
 10472  001228  0100               	movlb	0	; () banked
 10473  00122A  6F7F               	movwf	StringContainsCaseInsensitive@This& (0+255),b
 10474  00122C  0EF3               	movlw	high _Conf2_Channels
 10475  00122E  0100               	movlb	0	; () banked
 10476  001230  6F80               	movwf	(StringContainsCaseInsensitive@This+1)& (0+255),b
 10477  001232  0E73               	movlw	low UseBluetooth@rfchannelSTR
 10478  001234  0100               	movlb	0	; () banked
 10479  001236  6F81               	movwf	StringContainsCaseInsensitive@That& (0+255),b
 10480  001238  0E02               	movlw	high UseBluetooth@rfchannelSTR
 10481  00123A  0100               	movlb	0	; () banked
 10482  00123C  6F82               	movwf	(StringContainsCaseInsensitive@That+1)& (0+255),b
 10483  00123E  EC98  F03A         	call	_StringContainsCaseInsensitive	;wreg free
 10484  001242  D7E5               	goto	L10
 10485                           
 10486                           ; BSR set to: 2
 10487                           
 10488                           ;Bluetooth.c: 605: {
 10489                           ;Bluetooth.c: 606: ok = 0;
 10490  001244  D000               	goto	l1921
 10491  001246                     l1921:
 10492                           
 10493                           ;Bluetooth.c: 607: }
 10494                           ;Bluetooth.c: 608: }
 10495                           ;Bluetooth.c: 609: if(!ok)
 10496  001246  0102               	movlb	2	; () banked
 10497  001248  5189               	movf	UseBluetooth@ok& (0+255),w,b
 10498  00124A  0102               	movlb	2	; () banked
 10499  00124C  A4D8               	btfss	status,2,c
 10500  00124E  D011               	goto	l15656
 10501                           
 10502                           ; BSR set to: 2
 10503                           ;Bluetooth.c: 610: {
 10504                           ;Bluetooth.c: 611: UARTstringCRLN((unsigned char *)"Error: RF channel out of range");
 10505  001250  0EC8               	movlw	low STR_67
 10506  001252  0100               	movlb	0	; () banked
 10507  001254  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10508  001256  0EFA               	movlw	high STR_67
 10509  001258  0100               	movlb	0	; () banked
 10510  00125A  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10511  00125C  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10512                           
 10513                           ;Bluetooth.c: 612: UARTstring(CRLN);
 10514  001260  0EA7               	movlw	low _CRLN
 10515  001262  0100               	movlb	0	; () banked
 10516  001264  6F7D               	movwf	UARTstring@data& (0+255),b
 10517  001266  0EF3               	movlw	high _CRLN
 10518  001268  0100               	movlb	0	; () banked
 10519  00126A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10520  00126C  ECF7  F046         	call	_UARTstring	;wreg free
 10521                           
 10522                           ;Bluetooth.c: 613: return 0;
 10523                           ;	Return value of _UseBluetooth is never used
 10524  001270  0012               	return	
 10525  001272                     l15656:
 10526                           
 10527                           ;Bluetooth.c: 614: }
 10528                           ;Bluetooth.c: 616: if(rfconf == 1)
 10529  001272  0102               	movlb	2	; () banked
 10530  001274  058B               	decf	UseBluetooth@rfconf& (0+255),w,b
 10531  001276  A4D8               	btfss	status,2,c
 10532  001278  D017               	goto	l15670
 10533                           
 10534                           ; BSR set to: 2
 10535                           ;Bluetooth.c: 617: {
 10536                           ;Bluetooth.c: 618: if(rfchannelSTR[0] == 'd')
 10537  00127A  0E64               	movlw	100
 10538  00127C  0102               	movlb	2	; () banked
 10539  00127E  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10540  001280  A4D8               	btfss	status,2,c
 10541  001282  D002               	goto	l15662
 10542                           
 10543                           ; BSR set to: 2
 10544                           ;Bluetooth.c: 619: {
 10545                           ;Bluetooth.c: 620: tempRFArray = 0;
 10546  001284  0E00               	movlw	0
 10547  001286  D0B9               	goto	L9
 10548  001288                     l15662:
 10549                           
 10550                           ; BSR set to: 2
 10551                           ;Bluetooth.c: 622: else if(rfchannelSTR[0] == 'e')
 10552  001288  0E65               	movlw	101
 10553  00128A  0102               	movlb	2	; () banked
 10554  00128C  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10555  00128E  A4D8               	btfss	status,2,c
 10556  001290  D002               	goto	l15666
 10557                           
 10558                           ; BSR set to: 2
 10559                           ;Bluetooth.c: 623: {
 10560                           ;Bluetooth.c: 624: tempRFArray = 1;
 10561  001292  0E01               	movlw	1
 10562  001294  D0B2               	goto	L9
 10563  001296                     l15666:
 10564                           
 10565                           ; BSR set to: 2
 10566                           ;Bluetooth.c: 626: else if(rfchannelSTR[0] == 'f')
 10567  001296  0E66               	movlw	102
 10568  001298  0102               	movlb	2	; () banked
 10569  00129A  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10570  00129C  A4D8               	btfss	status,2,c
 10571  00129E  0012               	return	
 10572                           
 10573                           ; BSR set to: 2
 10574                           ;Bluetooth.c: 627: {
 10575                           ;Bluetooth.c: 628: tempRFArray = 2;
 10576  0012A0  0E02               	movlw	2
 10577  0012A2  D0AB               	goto	L9
 10578                           
 10579                           ; BSR set to: 2
 10580                           ;Bluetooth.c: 630: else
 10581                           ;Bluetooth.c: 631: {
 10582                           ;Bluetooth.c: 633: return 0;
 10583                           ;	Return value of _UseBluetooth is never used
 10584                           
 10585                           ;Bluetooth.c: 629: }
 10586  0012A4  0012               	return	
 10587                           
 10588                           ; BSR set to: 2
 10589                           ;Bluetooth.c: 634: }
 10590                           ;Bluetooth.c: 635: }
 10591                           
 10592                           ; BSR set to: 2
 10593                           
 10594                           ; BSR set to: 2
 10595  0012A6  D0AE               	goto	l15738
 10596  0012A8                     l15670:
 10597                           
 10598                           ; BSR set to: 2
 10599                           ;Bluetooth.c: 636: else if(rfconf ==2)
 10600  0012A8  0E02               	movlw	2
 10601  0012AA  0102               	movlb	2	; () banked
 10602  0012AC  198B               	xorwf	UseBluetooth@rfconf& (0+255),w,b
 10603  0012AE  A4D8               	btfss	status,2,c
 10604  0012B0  D0A9               	goto	l15738
 10605                           
 10606                           ; BSR set to: 2
 10607                           ;Bluetooth.c: 637: {
 10608                           ;Bluetooth.c: 638: if(rfchannelSTR[0] == 'b')
 10609  0012B2  0E62               	movlw	98
 10610  0012B4  0102               	movlb	2	; () banked
 10611  0012B6  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10612  0012B8  A4D8               	btfss	status,2,c
 10613  0012BA  D002               	goto	l15676
 10614                           
 10615                           ; BSR set to: 2
 10616                           ;Bluetooth.c: 639: {
 10617                           ;Bluetooth.c: 640: tempRFArray = 3;
 10618  0012BC  0E03               	movlw	3
 10619  0012BE  D09D               	goto	L9
 10620  0012C0                     l15676:
 10621                           
 10622                           ; BSR set to: 2
 10623                           ;Bluetooth.c: 642: else if(rfchannelSTR[0] == 'd')
 10624  0012C0  0E64               	movlw	100
 10625  0012C2  0102               	movlb	2	; () banked
 10626  0012C4  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10627  0012C6  A4D8               	btfss	status,2,c
 10628  0012C8  D002               	goto	l15680
 10629                           
 10630                           ; BSR set to: 2
 10631                           ;Bluetooth.c: 643: {
 10632                           ;Bluetooth.c: 644: tempRFArray = 4;
 10633  0012CA  0E04               	movlw	4
 10634  0012CC  D096               	goto	L9
 10635  0012CE                     l15680:
 10636                           
 10637                           ; BSR set to: 2
 10638                           ;Bluetooth.c: 646: else if(rfchannelSTR[0] == 'h')
 10639  0012CE  0E68               	movlw	104
 10640  0012D0  0102               	movlb	2	; () banked
 10641  0012D2  1973               	xorwf	UseBluetooth@rfchannelSTR& (0+255),w,b
 10642  0012D4  A4D8               	btfss	status,2,c
 10643  0012D6  0012               	return	
 10644                           
 10645                           ; BSR set to: 2
 10646                           ;Bluetooth.c: 647: {
 10647                           ;Bluetooth.c: 648: cleanBuffer(ReceivedString, ReceivedStringPos);
 10648  0012D8  0E00               	movlw	low _ReceivedString
 10649  0012DA  0100               	movlb	0	; () banked
 10650  0012DC  6F7C               	movwf	cleanBuffer@data& (0+255),b
 10651  0012DE  0E06               	movlw	high _ReceivedString
 10652  0012E0  0100               	movlb	0	; () banked
 10653  0012E2  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 10654  0012E4  C0DC  F07E         	movff	_ReceivedStringPos,cleanBuffer@count
 10655  0012E8  0100               	movlb	0	; () banked
 10656  0012EA  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 10657  0012EC  ECCA  F046         	call	_cleanBuffer	;wreg free
 10658                           
 10659                           ;Bluetooth.c: 649: ReceivedStringPos = 0;
 10660  0012F0  0E00               	movlw	0
 10661  0012F2  0100               	movlb	0	; () banked
 10662  0012F4  6FDC               	movwf	_ReceivedStringPos& (0+255),b
 10663                           
 10664                           ; BSR set to: 0
 10665                           ;Bluetooth.c: 650: NewReceivedString = 0;
 10666  0012F6  0E00               	movlw	0
 10667  0012F8  0100               	movlb	0	; () banked
 10668  0012FA  6FDB               	movwf	_NewReceivedString& (0+255),b	;volatile
 10669                           
 10670                           ; BSR set to: 0
 10671                           ;Bluetooth.c: 651: UARTstring((unsigned char *)"Which device?");
 10672  0012FC  0E9E               	movlw	low STR_68
 10673  0012FE  0100               	movlb	0	; () banked
 10674  001300  6F7D               	movwf	UARTstring@data& (0+255),b
 10675  001302  0EFE               	movlw	high STR_68
 10676  001304  0100               	movlb	0	; () banked
 10677  001306  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10678  001308  ECF7  F046         	call	_UARTstring	;wreg free
 10679                           
 10680                           ;Bluetooth.c: 652: UARTstring(CRLN);
 10681  00130C  0EA7               	movlw	low _CRLN
 10682  00130E  0100               	movlb	0	; () banked
 10683  001310  6F7D               	movwf	UARTstring@data& (0+255),b
 10684  001312  0EF3               	movlw	high _CRLN
 10685  001314  0100               	movlb	0	; () banked
 10686  001316  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10687  001318  ECF7  F046         	call	_UARTstring	;wreg free
 10688                           
 10689                           ;Bluetooth.c: 653: UARTchar('>');
 10690  00131C  0E3E               	movlw	62
 10691  00131E  ECE3  F049         	call	_UARTchar
 10692                           
 10693                           ;Bluetooth.c: 654: timeout = 0;
 10694  001322  0E00               	movlw	0
 10695  001324  0102               	movlb	2	; () banked
 10696  001326  6F82               	movwf	UseBluetooth@timeout& (0+255),b
 10697                           
 10698                           ; BSR set to: 2
 10699                           ;Bluetooth.c: 655: ClearUSART();
 10700  001328  EC81  F04A         	call	_ClearUSART	;wreg free
 10701                           
 10702                           ;Bluetooth.c: 656: PIR1bits.RCIF = 0;
 10703  00132C  9A9E               	bcf	3998,5,c	;volatile
 10704                           
 10705                           ;Bluetooth.c: 657: PIE1bits.RCIE = 1;
 10706  00132E  8A9D               	bsf	3997,5,c	;volatile
 10707                           
 10708                           ;Bluetooth.c: 658: while(!NewReceivedString)
 10709  001330  D023               	goto	l15712
 10710  001332                     l15702:
 10711                           
 10712                           ;Bluetooth.c: 659: {
 10713                           ;Bluetooth.c: 660: delayUS(300000);
 10714  001332  0EE0               	movlw	224
 10715  001334  0100               	movlb	0	; () banked
 10716  001336  6F7C               	movwf	delayUS@US& (0+255),b
 10717  001338  0E93               	movlw	147
 10718  00133A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 10719  00133C  0E04               	movlw	4
 10720  00133E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 10721  001340  0E00               	movlw	0
 10722  001342  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 10723  001344  EC7B  F047         	call	_delayUS	;wreg free
 10724                           
 10725                           ;Bluetooth.c: 661: timeout++;
 10726  001348  0102               	movlb	2	; () banked
 10727  00134A  2B82               	incf	UseBluetooth@timeout& (0+255),f,b
 10728                           
 10729                           ; BSR set to: 2
 10730                           ;Bluetooth.c: 662: if(timeout > 25)
 10731  00134C  0E19               	movlw	25
 10732  00134E  0102               	movlb	2	; () banked
 10733  001350  6582               	cpfsgt	UseBluetooth@timeout& (0+255),b
 10734  001352  D012               	goto	l15712
 10735                           
 10736                           ; BSR set to: 2
 10737                           ;Bluetooth.c: 663: {
 10738                           ;Bluetooth.c: 664: UARTstring(CRLN);
 10739  001354  0EA7               	movlw	low _CRLN
 10740  001356  0100               	movlb	0	; () banked
 10741  001358  6F7D               	movwf	UARTstring@data& (0+255),b
 10742  00135A  0EF3               	movlw	high _CRLN
 10743  00135C  0100               	movlb	0	; () banked
 10744  00135E  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10745  001360  ECF7  F046         	call	_UARTstring	;wreg free
 10746                           
 10747                           ;Bluetooth.c: 665: UARTstringCRLN((unsigned char *)"Error: No RF config 2, channel H dev
      +                          ice specified");
 10748  001364  0E55               	movlw	low STR_69
 10749  001366  0100               	movlb	0	; () banked
 10750  001368  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10751  00136A  0EF4               	movlw	high STR_69
 10752  00136C  0100               	movlb	0	; () banked
 10753  00136E  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10754  001370  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10755                           
 10756                           ;Bluetooth.c: 666: return 0;
 10757                           ;	Return value of _UseBluetooth is never used
 10758  001374  0012               	return	
 10759  001376  D000               	goto	l15712
 10760  001378                     l15712:
 10761  001378  0100               	movlb	0	; () banked
 10762  00137A  51DB               	movf	_NewReceivedString& (0+255),w,b	;volatile
 10763  00137C  B4D8               	btfsc	status,2,c
 10764  00137E  D7D9               	goto	l15702
 10765                           
 10766                           ; BSR set to: 0
 10767                           ;Bluetooth.c: 667: }
 10768                           ;Bluetooth.c: 668: }
 10769                           ;Bluetooth.c: 669: PIE1bits.RCIE = 0;
 10770  001380  9A9D               	bcf	3997,5,c	;volatile
 10771                           
 10772                           ; BSR set to: 0
 10773                           ;Bluetooth.c: 670: ok = 1;
 10774  001382  0E01               	movlw	1
 10775  001384  0102               	movlb	2	; () banked
 10776  001386  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10777                           
 10778                           ; BSR set to: 2
 10779                           ;Bluetooth.c: 671: if(ReceivedString[0] < '1' || ReceivedString[0] > '3')
 10780  001388  0E30               	movlw	48
 10781  00138A  0106               	movlb	6	; () banked
 10782  00138C  6500               	cpfsgt	_ReceivedString& (0+255),b
 10783  00138E  D005               	goto	l15720
 10784                           
 10785                           ; BSR set to: 6
 10786  001390  0E33               	movlw	51
 10787  001392  0106               	movlb	6	; () banked
 10788  001394  6500               	cpfsgt	_ReceivedString& (0+255),b
 10789  001396  D00D               	goto	l15724
 10790  001398  D000               	goto	l15720
 10791  00139A                     l15720:
 10792                           
 10793                           ; BSR set to: 6
 10794                           ;Bluetooth.c: 672: {
 10795                           ;Bluetooth.c: 673: UARTstringCRLN((unsigned char *)"Error: RF config 2, channel H device
      +                           out of range");
 10796  00139A  0E87               	movlw	low STR_70
 10797  00139C  0100               	movlb	0	; () banked
 10798  00139E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 10799  0013A0  0EF4               	movlw	high STR_70
 10800  0013A2  0100               	movlb	0	; () banked
 10801  0013A4  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 10802  0013A6  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 10803                           
 10804                           ;Bluetooth.c: 674: ok = 0;
 10805  0013AA  0E00               	movlw	0
 10806  0013AC  0102               	movlb	2	; () banked
 10807  0013AE  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10808  0013B0  D000               	goto	l15724
 10809  0013B2                     l15724:
 10810                           
 10811                           ;Bluetooth.c: 675: }
 10812                           ;Bluetooth.c: 676: cleanBuffer(ReceivedString, ReceivedStringPos);
 10813  0013B2  0E00               	movlw	low _ReceivedString
 10814  0013B4  0100               	movlb	0	; () banked
 10815  0013B6  6F7C               	movwf	cleanBuffer@data& (0+255),b
 10816  0013B8  0E06               	movlw	high _ReceivedString
 10817  0013BA  0100               	movlb	0	; () banked
 10818  0013BC  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 10819  0013BE  C0DC  F07E         	movff	_ReceivedStringPos,cleanBuffer@count
 10820  0013C2  0100               	movlb	0	; () banked
 10821  0013C4  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 10822  0013C6  ECCA  F046         	call	_cleanBuffer	;wreg free
 10823                           
 10824                           ;Bluetooth.c: 677: ReceivedStringPos = 0;
 10825  0013CA  0E00               	movlw	0
 10826  0013CC  0100               	movlb	0	; () banked
 10827  0013CE  6FDC               	movwf	_ReceivedStringPos& (0+255),b
 10828                           
 10829                           ; BSR set to: 0
 10830                           ;Bluetooth.c: 678: NewReceivedString = 0;
 10831  0013D0  0E00               	movlw	0
 10832  0013D2  0100               	movlb	0	; () banked
 10833  0013D4  6FDB               	movwf	_NewReceivedString& (0+255),b	;volatile
 10834                           
 10835                           ; BSR set to: 0
 10836                           ;Bluetooth.c: 679: if(!ok)
 10837  0013D6  0102               	movlb	2	; () banked
 10838  0013D8  5189               	movf	UseBluetooth@ok& (0+255),w,b
 10839  0013DA  0102               	movlb	2	; () banked
 10840  0013DC  B4D8               	btfsc	status,2,c
 10841  0013DE  0012               	return	
 10842  0013E0  D001               	goto	l15734
 10843                           
 10844                           ; BSR set to: 2
 10845                           ;Bluetooth.c: 680: {
 10846                           ;Bluetooth.c: 681: return 0;
 10847                           ;	Return value of _UseBluetooth is never used
 10848  0013E2  0012               	return	
 10849  0013E4                     l15734:
 10850                           
 10851                           ; BSR set to: 2
 10852                           ;Bluetooth.c: 682: }
 10853                           ;Bluetooth.c: 683: device = String[0] - '0';
 10854  0013E4  C200  FFD9         	movff	UseBluetooth@String,fsr2l
 10855  0013E8  C201  FFDA         	movff	UseBluetooth@String+1,fsr2h
 10856  0013EC  50DF               	movf	indf2,w,c
 10857  0013EE  0FD0               	addlw	208
 10858  0013F0  0102               	movlb	2	; () banked
 10859  0013F2  6F84               	movwf	UseBluetooth@device& (0+255),b
 10860                           
 10861                           ; BSR set to: 2
 10862                           ;Bluetooth.c: 684: tempRFArray = device + 4;
 10863  0013F4  0102               	movlb	2	; () banked
 10864  0013F6  5184               	movf	UseBluetooth@device& (0+255),w,b
 10865  0013F8  0F04               	addlw	4
 10866  0013FA                     L9:
 10867  0013FA  0102               	movlb	2	; () banked
 10868  0013FC  6F8A               	movwf	UseBluetooth@tempRFArray& (0+255),b
 10869                           
 10870                           ;Bluetooth.c: 685: }
 10871  0013FE  D002               	goto	l15738
 10872                           
 10873                           ; BSR set to: 2
 10874                           ;Bluetooth.c: 686: else
 10875                           ;Bluetooth.c: 687: {
 10876                           ;Bluetooth.c: 689: return 0;
 10877                           ;	Return value of _UseBluetooth is never used
 10878  001400  0012               	return	
 10879                           
 10880                           ; BSR set to: 2
 10881                           
 10882                           ; BSR set to: 2
 10883                           
 10884                           ; BSR set to: 2
 10885                           
 10886                           ; BSR set to: 2
 10887  001402  D000               	goto	l15738
 10888  001404                     l15738:
 10889                           
 10890                           ; BSR set to: 2
 10891                           ;Bluetooth.c: 690: }
 10892                           ;Bluetooth.c: 691: }
 10893                           ;Bluetooth.c: 692: if(set)
 10894  001404  0102               	movlb	2	; () banked
 10895  001406  517D               	movf	UseBluetooth@set& (0+255),w,b
 10896  001408  0102               	movlb	2	; () banked
 10897  00140A  B4D8               	btfsc	status,2,c
 10898  00140C  D1D3               	goto	l15826
 10899                           
 10900                           ; BSR set to: 2
 10901                           ;Bluetooth.c: 693: {
 10902                           ;Bluetooth.c: 694: if(!WaitForIRsignal())
 10903  00140E  EC9D  F043         	call	_WaitForIRsignal	;wreg free
 10904  001412  0900               	iorlw	0
 10905  001414  B4D8               	btfsc	status,2,c
 10906  001416  0012               	return	
 10907  001418  D001               	goto	l15744
 10908                           
 10909                           ;Bluetooth.c: 695: {
 10910                           ;Bluetooth.c: 696: return 0;
 10911                           ;	Return value of _UseBluetooth is never used
 10912  00141A  0012               	return	
 10913  00141C                     l15744:
 10914                           
 10915                           ;Bluetooth.c: 697: }
 10916                           ;Bluetooth.c: 698: UARTstring(CRLN);
 10917  00141C  0EA7               	movlw	low _CRLN
 10918  00141E  0100               	movlb	0	; () banked
 10919  001420  6F7D               	movwf	UARTstring@data& (0+255),b
 10920  001422  0EF3               	movlw	high _CRLN
 10921  001424  0100               	movlb	0	; () banked
 10922  001426  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 10923  001428  ECF7  F046         	call	_UARTstring	;wreg free
 10924                           
 10925                           ;Bluetooth.c: 699: DecodeNEC(IR_NEC, &NecAddress, &NecCommand);
 10926  00142C  C0DD  F080         	movff	_IR_NEC,DecodeNEC@Nec
 10927  001430  C0DE  F081         	movff	_IR_NEC+1,DecodeNEC@Nec+1
 10928  001434  C0DF  F082         	movff	_IR_NEC+2,DecodeNEC@Nec+2
 10929  001438  C0E0  F083         	movff	_IR_NEC+3,DecodeNEC@Nec+3
 10930  00143C  0E8C               	movlw	low UseBluetooth@NecAddress
 10931  00143E  0100               	movlb	0	; () banked
 10932  001440  6F84               	movwf	DecodeNEC@address& (0+255),b
 10933  001442  0E02               	movlw	high UseBluetooth@NecAddress
 10934  001444  0100               	movlb	0	; () banked
 10935  001446  6F85               	movwf	(DecodeNEC@address+1)& (0+255),b
 10936  001448  0E8D               	movlw	low UseBluetooth@NecCommand
 10937  00144A  0100               	movlb	0	; () banked
 10938  00144C  6F86               	movwf	DecodeNEC@command& (0+255),b
 10939  00144E  0E02               	movlw	high UseBluetooth@NecCommand
 10940  001450  0100               	movlb	0	; () banked
 10941  001452  6F87               	movwf	(DecodeNEC@command+1)& (0+255),b
 10942  001454  ECB9  F041         	call	_DecodeNEC	;wreg free
 10943                           
 10944                           ;Bluetooth.c: 700: ok = 0;
 10945  001458  0E00               	movlw	0
 10946  00145A  0102               	movlb	2	; () banked
 10947  00145C  6F89               	movwf	UseBluetooth@ok& (0+255),b
 10948                           
 10949                           ; BSR set to: 2
 10950                           ;Bluetooth.c: 701: for(i=0; i < 3; i++)
 10951  00145E  0E00               	movlw	0
 10952  001460  0102               	movlb	2	; () banked
 10953  001462  6F92               	movwf	UseBluetooth@i& (0+255),b
 10954  001464                     l15752:
 10955                           
 10956                           ; BSR set to: 2
 10957  001464  0E02               	movlw	2
 10958  001466  0102               	movlb	2	; () banked
 10959  001468  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 10960  00146A  D001               	goto	l15756
 10961                           
 10962                           ; BSR set to: 2
 10963  00146C  D053               	goto	l15768
 10964  00146E                     l15756:
 10965                           
 10966                           ; BSR set to: 2
 10967                           ;Bluetooth.c: 702: {
 10968                           ;Bluetooth.c: 703: if(Global.RemoteButtonRF[tempRFArray][i][0] == 0 && Global.RemoteButt
      +                          onRF[tempRFArray][i][1] == 0)
 10969  00146E  0102               	movlb	2	; () banked
 10970  001470  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 10971  001472  0D06               	mullw	6
 10972  001474  0E00               	movlw	low _Global
 10973  001476  0102               	movlb	2	; () banked
 10974  001478  6F03               	movwf	??_UseBluetooth& (0+255),b
 10975  00147A  0E04               	movlw	high _Global
 10976  00147C  0102               	movlb	2	; () banked
 10977  00147E  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 10978  001480  0E2E               	movlw	46
 10979  001482  0102               	movlb	2	; () banked
 10980  001484  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10981  001486  0E00               	movlw	0
 10982  001488  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10983  00148A  50F3               	movf	prodl,w,c
 10984  00148C  0102               	movlb	2	; () banked
 10985  00148E  2703               	addwf	??_UseBluetooth& (0+255),f,b
 10986  001490  50F4               	movf	prodh,w,c
 10987  001492  0102               	movlb	2	; () banked
 10988  001494  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 10989  001496  0102               	movlb	2	; () banked
 10990  001498  5192               	movf	UseBluetooth@i& (0+255),w,b
 10991  00149A  0D02               	mullw	2
 10992  00149C  50F3               	movf	prodl,w,c
 10993  00149E  0102               	movlb	2	; () banked
 10994  0014A0  2503               	addwf	??_UseBluetooth& (0+255),w,b
 10995  0014A2  6ED9               	movwf	fsr2l,c
 10996  0014A4  50F4               	movf	prodh,w,c
 10997  0014A6  0102               	movlb	2	; () banked
 10998  0014A8  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 10999  0014AA  6EDA               	movwf	fsr2h,c
 11000  0014AC  50DF               	movf	indf2,w,c
 11001  0014AE  A4D8               	btfss	status,2,c
 11002  0014B0  D02E               	goto	l15764
 11003                           
 11004                           ; BSR set to: 2
 11005  0014B2  0102               	movlb	2	; () banked
 11006  0014B4  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11007  0014B6  0D06               	mullw	6
 11008  0014B8  0E00               	movlw	low _Global
 11009  0014BA  0102               	movlb	2	; () banked
 11010  0014BC  6F03               	movwf	??_UseBluetooth& (0+255),b
 11011  0014BE  0E04               	movlw	high _Global
 11012  0014C0  0102               	movlb	2	; () banked
 11013  0014C2  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11014  0014C4  0E2E               	movlw	46
 11015  0014C6  0102               	movlb	2	; () banked
 11016  0014C8  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11017  0014CA  0E00               	movlw	0
 11018  0014CC  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11019  0014CE  50F3               	movf	prodl,w,c
 11020  0014D0  0102               	movlb	2	; () banked
 11021  0014D2  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11022  0014D4  50F4               	movf	prodh,w,c
 11023  0014D6  0102               	movlb	2	; () banked
 11024  0014D8  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11025  0014DA  0102               	movlb	2	; () banked
 11026  0014DC  5192               	movf	UseBluetooth@i& (0+255),w,b
 11027  0014DE  0D02               	mullw	2
 11028  0014E0  50F3               	movf	prodl,w,c
 11029  0014E2  0102               	movlb	2	; () banked
 11030  0014E4  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11031  0014E6  50F4               	movf	prodh,w,c
 11032  0014E8  0102               	movlb	2	; () banked
 11033  0014EA  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11034  0014EC  0E01               	movlw	1
 11035  0014EE  0102               	movlb	2	; () banked
 11036  0014F0  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11037  0014F2  6ED9               	movwf	fsr2l,c
 11038  0014F4  0E00               	movlw	0
 11039  0014F6  0102               	movlb	2	; () banked
 11040  0014F8  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11041  0014FA  6EDA               	movwf	fsr2h,c
 11042  0014FC  50DF               	movf	indf2,w,c
 11043  0014FE  A4D8               	btfss	status,2,c
 11044  001500  D006               	goto	l15764
 11045                           
 11046                           ; BSR set to: 2
 11047                           ;Bluetooth.c: 704: {
 11048                           ;Bluetooth.c: 705: EmptyPlace = i;
 11049  001502  C292  F283         	movff	UseBluetooth@i,UseBluetooth@EmptyPlace
 11050                           
 11051                           ; BSR set to: 2
 11052                           ;Bluetooth.c: 706: ok = 1;
 11053  001506  0E01               	movlw	1
 11054  001508  0102               	movlb	2	; () banked
 11055  00150A  6F89               	movwf	UseBluetooth@ok& (0+255),b
 11056                           
 11057                           ;Bluetooth.c: 707: break;
 11058  00150C  D003               	goto	l15768
 11059  00150E                     l15764:
 11060                           
 11061                           ; BSR set to: 2
 11062  00150E  0102               	movlb	2	; () banked
 11063  001510  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11064  001512  D7A8               	goto	l15752
 11065  001514                     l15768:
 11066                           
 11067                           ; BSR set to: 2
 11068                           ;Bluetooth.c: 708: }
 11069                           ;Bluetooth.c: 709: }
 11070                           ;Bluetooth.c: 710: if(!ok)
 11071  001514  0102               	movlb	2	; () banked
 11072  001516  5189               	movf	UseBluetooth@ok& (0+255),w,b
 11073  001518  0102               	movlb	2	; () banked
 11074  00151A  A4D8               	btfss	status,2,c
 11075  00151C  D009               	goto	l15774
 11076                           
 11077                           ; BSR set to: 2
 11078                           ;Bluetooth.c: 711: {
 11079                           ;Bluetooth.c: 712: UARTstringCRLN((unsigned char *)"Error: No space available to this RF
      +                           code");
 11080  00151E  0E02               	movlw	low STR_71
 11081  001520  0100               	movlb	0	; () banked
 11082  001522  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11083  001524  0EF8               	movlw	high STR_71
 11084  001526  0100               	movlb	0	; () banked
 11085  001528  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11086  00152A  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 11087                           
 11088                           ;Bluetooth.c: 713: return 0;
 11089                           ;	Return value of _UseBluetooth is never used
 11090  00152E  0012               	return	
 11091  001530                     l15774:
 11092                           
 11093                           ;Bluetooth.c: 714: }
 11094                           ;Bluetooth.c: 715: ok = 1;
 11095  001530  0E01               	movlw	1
 11096  001532  0102               	movlb	2	; () banked
 11097  001534  6F89               	movwf	UseBluetooth@ok& (0+255),b
 11098                           
 11099                           ;Bluetooth.c: 716: if(EmptyPlace)
 11100  001536  0102               	movlb	2	; () banked
 11101  001538  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11102  00153A  0102               	movlb	2	; () banked
 11103  00153C  B4D8               	btfsc	status,2,c
 11104  00153E  D062               	goto	l15788
 11105                           
 11106                           ; BSR set to: 2
 11107                           ;Bluetooth.c: 717: {
 11108                           ;Bluetooth.c: 719: for(i=0; i < EmptyPlace; i++)
 11109  001540  0E00               	movlw	0
 11110  001542  0102               	movlb	2	; () banked
 11111  001544  6F92               	movwf	UseBluetooth@i& (0+255),b
 11112  001546  D056               	goto	l15786
 11113  001548                     l15778:
 11114                           
 11115                           ; BSR set to: 2
 11116                           ;Bluetooth.c: 720: {
 11117                           ;Bluetooth.c: 721: if(NecAddress == Global.RemoteButtonRF[tempRFArray][i][0])
 11118  001548  0102               	movlb	2	; () banked
 11119  00154A  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11120  00154C  0D06               	mullw	6
 11121  00154E  0E00               	movlw	low _Global
 11122  001550  0102               	movlb	2	; () banked
 11123  001552  6F03               	movwf	??_UseBluetooth& (0+255),b
 11124  001554  0E04               	movlw	high _Global
 11125  001556  0102               	movlb	2	; () banked
 11126  001558  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11127  00155A  0E2E               	movlw	46
 11128  00155C  0102               	movlb	2	; () banked
 11129  00155E  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11130  001560  0E00               	movlw	0
 11131  001562  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11132  001564  50F3               	movf	prodl,w,c
 11133  001566  0102               	movlb	2	; () banked
 11134  001568  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11135  00156A  50F4               	movf	prodh,w,c
 11136  00156C  0102               	movlb	2	; () banked
 11137  00156E  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11138  001570  0102               	movlb	2	; () banked
 11139  001572  5192               	movf	UseBluetooth@i& (0+255),w,b
 11140  001574  0D02               	mullw	2
 11141  001576  50F3               	movf	prodl,w,c
 11142  001578  0102               	movlb	2	; () banked
 11143  00157A  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11144  00157C  6ED9               	movwf	fsr2l,c
 11145  00157E  50F4               	movf	prodh,w,c
 11146  001580  0102               	movlb	2	; () banked
 11147  001582  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11148  001584  6EDA               	movwf	fsr2h,c
 11149  001586  0102               	movlb	2	; () banked
 11150  001588  518C               	movf	UseBluetooth@NecAddress& (0+255),w,b
 11151  00158A  18DE               	xorwf	postinc2,w,c
 11152  00158C  A4D8               	btfss	status,2,c
 11153  00158E  D02F               	goto	l15784
 11154                           
 11155                           ; BSR set to: 2
 11156                           ;Bluetooth.c: 722: {
 11157                           ;Bluetooth.c: 723: if(NecCommand == Global.RemoteButtonRF[tempRFArray][i][1])
 11158  001590  0102               	movlb	2	; () banked
 11159  001592  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11160  001594  0D06               	mullw	6
 11161  001596  0E00               	movlw	low _Global
 11162  001598  0102               	movlb	2	; () banked
 11163  00159A  6F03               	movwf	??_UseBluetooth& (0+255),b
 11164  00159C  0E04               	movlw	high _Global
 11165  00159E  0102               	movlb	2	; () banked
 11166  0015A0  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11167  0015A2  0E2E               	movlw	46
 11168  0015A4  0102               	movlb	2	; () banked
 11169  0015A6  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11170  0015A8  0E00               	movlw	0
 11171  0015AA  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11172  0015AC  50F3               	movf	prodl,w,c
 11173  0015AE  0102               	movlb	2	; () banked
 11174  0015B0  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11175  0015B2  50F4               	movf	prodh,w,c
 11176  0015B4  0102               	movlb	2	; () banked
 11177  0015B6  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11178  0015B8  0102               	movlb	2	; () banked
 11179  0015BA  5192               	movf	UseBluetooth@i& (0+255),w,b
 11180  0015BC  0D02               	mullw	2
 11181  0015BE  50F3               	movf	prodl,w,c
 11182  0015C0  0102               	movlb	2	; () banked
 11183  0015C2  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11184  0015C4  50F4               	movf	prodh,w,c
 11185  0015C6  0102               	movlb	2	; () banked
 11186  0015C8  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11187  0015CA  0E01               	movlw	1
 11188  0015CC  0102               	movlb	2	; () banked
 11189  0015CE  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11190  0015D0  6ED9               	movwf	fsr2l,c
 11191  0015D2  0E00               	movlw	0
 11192  0015D4  0102               	movlb	2	; () banked
 11193  0015D6  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11194  0015D8  6EDA               	movwf	fsr2h,c
 11195  0015DA  0102               	movlb	2	; () banked
 11196  0015DC  518D               	movf	UseBluetooth@NecCommand& (0+255),w,b
 11197  0015DE  18DE               	xorwf	postinc2,w,c
 11198  0015E0  A4D8               	btfss	status,2,c
 11199  0015E2  D005               	goto	l15784
 11200                           
 11201                           ; BSR set to: 2
 11202                           ;Bluetooth.c: 724: {
 11203                           ;Bluetooth.c: 725: ok = 0;
 11204  0015E4  0E00               	movlw	0
 11205  0015E6  0102               	movlb	2	; () banked
 11206  0015E8  6F89               	movwf	UseBluetooth@ok& (0+255),b
 11207                           
 11208                           ;Bluetooth.c: 726: break;
 11209  0015EA  D00C               	goto	l15788
 11210                           
 11211                           ; BSR set to: 2
 11212  0015EC  D000               	goto	l15784
 11213  0015EE                     l15784:
 11214                           
 11215                           ; BSR set to: 2
 11216  0015EE  0102               	movlb	2	; () banked
 11217  0015F0  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11218  0015F2  D000               	goto	l15786
 11219  0015F4                     l15786:
 11220                           
 11221                           ; BSR set to: 2
 11222  0015F4  0102               	movlb	2	; () banked
 11223  0015F6  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11224  0015F8  0102               	movlb	2	; () banked
 11225  0015FA  5D92               	subwf	UseBluetooth@i& (0+255),w,b
 11226  0015FC  B0D8               	btfsc	status,0,c
 11227  0015FE  D002               	goto	l15788
 11228  001600  D7A3               	goto	l15778
 11229                           
 11230                           ; BSR set to: 2
 11231  001602  D000               	goto	l15788
 11232  001604                     l15788:
 11233                           
 11234                           ; BSR set to: 2
 11235                           ;Bluetooth.c: 727: }
 11236                           ;Bluetooth.c: 728: }
 11237                           ;Bluetooth.c: 729: }
 11238                           ;Bluetooth.c: 730: }
 11239                           ;Bluetooth.c: 731: if(!ok)
 11240  001604  0102               	movlb	2	; () banked
 11241  001606  5189               	movf	UseBluetooth@ok& (0+255),w,b
 11242  001608  0102               	movlb	2	; () banked
 11243  00160A  A4D8               	btfss	status,2,c
 11244  00160C  D009               	goto	l15794
 11245                           
 11246                           ; BSR set to: 2
 11247                           ;Bluetooth.c: 732: {
 11248                           ;Bluetooth.c: 733: UARTstringCRLN((unsigned char *)"Error: NEC code already saved to thi
      +                          s RF code");
 11249  00160E  0E50               	movlw	low STR_72
 11250  001610  0100               	movlb	0	; () banked
 11251  001612  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11252  001614  0EF7               	movlw	high STR_72
 11253  001616  0100               	movlb	0	; () banked
 11254  001618  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11255  00161A  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 11256                           
 11257                           ;Bluetooth.c: 734: return 0;
 11258                           ;	Return value of _UseBluetooth is never used
 11259  00161E  0012               	return	
 11260  001620                     l15794:
 11261                           
 11262                           ;Bluetooth.c: 735: }
 11263                           ;Bluetooth.c: 738: Global.RemoteButtonRF[tempRFArray][EmptyPlace][0] = NecAddress;
 11264  001620  0102               	movlb	2	; () banked
 11265  001622  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11266  001624  0D06               	mullw	6
 11267  001626  0E00               	movlw	low _Global
 11268  001628  0102               	movlb	2	; () banked
 11269  00162A  6F03               	movwf	??_UseBluetooth& (0+255),b
 11270  00162C  0E04               	movlw	high _Global
 11271  00162E  0102               	movlb	2	; () banked
 11272  001630  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11273  001632  0E2E               	movlw	46
 11274  001634  0102               	movlb	2	; () banked
 11275  001636  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11276  001638  0E00               	movlw	0
 11277  00163A  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11278  00163C  50F3               	movf	prodl,w,c
 11279  00163E  0102               	movlb	2	; () banked
 11280  001640  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11281  001642  50F4               	movf	prodh,w,c
 11282  001644  0102               	movlb	2	; () banked
 11283  001646  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11284  001648  0102               	movlb	2	; () banked
 11285  00164A  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11286  00164C  0D02               	mullw	2
 11287  00164E  50F3               	movf	prodl,w,c
 11288  001650  0102               	movlb	2	; () banked
 11289  001652  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11290  001654  6ED9               	movwf	fsr2l,c
 11291  001656  50F4               	movf	prodh,w,c
 11292  001658  0102               	movlb	2	; () banked
 11293  00165A  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11294  00165C  6EDA               	movwf	fsr2h,c
 11295  00165E  C28C  FFDF         	movff	UseBluetooth@NecAddress,indf2
 11296                           
 11297                           ;Bluetooth.c: 739: Global.RemoteButtonRF[tempRFArray][EmptyPlace][1] = NecCommand;
 11298  001662  0102               	movlb	2	; () banked
 11299  001664  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11300  001666  0D06               	mullw	6
 11301  001668  0E00               	movlw	low _Global
 11302  00166A  0102               	movlb	2	; () banked
 11303  00166C  6F03               	movwf	??_UseBluetooth& (0+255),b
 11304  00166E  0E04               	movlw	high _Global
 11305  001670  0102               	movlb	2	; () banked
 11306  001672  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11307  001674  0E2E               	movlw	46
 11308  001676  0102               	movlb	2	; () banked
 11309  001678  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11310  00167A  0E00               	movlw	0
 11311  00167C  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11312  00167E  50F3               	movf	prodl,w,c
 11313  001680  0102               	movlb	2	; () banked
 11314  001682  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11315  001684  50F4               	movf	prodh,w,c
 11316  001686  0102               	movlb	2	; () banked
 11317  001688  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11318  00168A  0102               	movlb	2	; () banked
 11319  00168C  5183               	movf	UseBluetooth@EmptyPlace& (0+255),w,b
 11320  00168E  0D02               	mullw	2
 11321  001690  50F3               	movf	prodl,w,c
 11322  001692  0102               	movlb	2	; () banked
 11323  001694  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11324  001696  50F4               	movf	prodh,w,c
 11325  001698  0102               	movlb	2	; () banked
 11326  00169A  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11327  00169C  0E01               	movlw	1
 11328  00169E  0102               	movlb	2	; () banked
 11329  0016A0  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11330  0016A2  6ED9               	movwf	fsr2l,c
 11331  0016A4  0E00               	movlw	0
 11332  0016A6  0102               	movlb	2	; () banked
 11333  0016A8  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11334  0016AA  6EDA               	movwf	fsr2h,c
 11335  0016AC  C28D  FFDF         	movff	UseBluetooth@NecCommand,indf2
 11336                           
 11337                           ; BSR set to: 2
 11338                           ;Bluetooth.c: 740: SyncGlobalToEEPROM();
 11339  0016B0  EC1C  F048         	call	_SyncGlobalToEEPROM	;wreg free
 11340                           
 11341                           ;Bluetooth.c: 742: if(device)
 11342  0016B4  0102               	movlb	2	; () banked
 11343  0016B6  5184               	movf	UseBluetooth@device& (0+255),w,b
 11344  0016B8  0102               	movlb	2	; () banked
 11345  0016BA  B4D8               	btfsc	status,2,c
 11346  0016BC  D023               	goto	l15802
 11347                           
 11348                           ; BSR set to: 2
 11349                           ;Bluetooth.c: 743: {
 11350                           ;Bluetooth.c: 744: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c dev
      +                          ice %d",IR_NEC, rfconf, rfchannelSTR[0], device);
 11351  0016BE  0E0F               	movlw	low UseBluetooth@buf
 11352  0016C0  0100               	movlb	0	; () banked
 11353  0016C2  6FCA               	movwf	sprintf@sp& (0+255),b
 11354  0016C4  0E02               	movlw	high UseBluetooth@buf
 11355  0016C6  0100               	movlb	0	; () banked
 11356  0016C8  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 11357  0016CA  0EAA               	movlw	low STR_73
 11358  0016CC  0100               	movlb	0	; () banked
 11359  0016CE  6FCC               	movwf	sprintf@f& (0+255),b
 11360  0016D0  0EF3               	movlw	high STR_73
 11361  0016D2  0100               	movlb	0	; () banked
 11362  0016D4  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 11363  0016D6  C0DD  F0CE         	movff	_IR_NEC,?_sprintf+4
 11364  0016DA  C0DE  F0CF         	movff	_IR_NEC+1,?_sprintf+5
 11365  0016DE  C0DF  F0D0         	movff	_IR_NEC+2,?_sprintf+6
 11366  0016E2  C0E0  F0D1         	movff	_IR_NEC+3,?_sprintf+7
 11367  0016E6  C28B  F0D2         	movff	UseBluetooth@rfconf,?_sprintf+8
 11368  0016EA  0100               	movlb	0	; () banked
 11369  0016EC  6BD3               	clrf	(?_sprintf+9)& (0+255),b
 11370  0016EE  C273  F0D4         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 11371  0016F2  0100               	movlb	0	; () banked
 11372  0016F4  6BD5               	clrf	(?_sprintf+11)& (0+255),b
 11373  0016F6  C284  F0D6         	movff	UseBluetooth@device,?_sprintf+12
 11374  0016FA  0100               	movlb	0	; () banked
 11375  0016FC  6BD7               	clrf	(?_sprintf+13)& (0+255),b
 11376  0016FE  ECF0  F010         	call	_sprintf	;wreg free
 11377                           
 11378                           ;Bluetooth.c: 745: }
 11379  001702  D01F               	goto	l15804
 11380  001704                     l15802:
 11381                           
 11382                           ;Bluetooth.c: 746: else
 11383                           ;Bluetooth.c: 747: {
 11384                           ;Bluetooth.c: 748: sprintf(buf,"NEC code 0x%lX now transmits RF config %d channel %c ",I
      +                          R_NEC, rfconf, rfchannelSTR[0]);
 11385  001704  0E0F               	movlw	low UseBluetooth@buf
 11386  001706  0100               	movlb	0	; () banked
 11387  001708  6FCA               	movwf	sprintf@sp& (0+255),b
 11388  00170A  0E02               	movlw	high UseBluetooth@buf
 11389  00170C  0100               	movlb	0	; () banked
 11390  00170E  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 11391  001710  0EE9               	movlw	low STR_74
 11392  001712  0100               	movlb	0	; () banked
 11393  001714  6FCC               	movwf	sprintf@f& (0+255),b
 11394  001716  0EF3               	movlw	high STR_74
 11395  001718  0100               	movlb	0	; () banked
 11396  00171A  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 11397  00171C  C0DD  F0CE         	movff	_IR_NEC,?_sprintf+4
 11398  001720  C0DE  F0CF         	movff	_IR_NEC+1,?_sprintf+5
 11399  001724  C0DF  F0D0         	movff	_IR_NEC+2,?_sprintf+6
 11400  001728  C0E0  F0D1         	movff	_IR_NEC+3,?_sprintf+7
 11401  00172C  C28B  F0D2         	movff	UseBluetooth@rfconf,?_sprintf+8
 11402  001730  0100               	movlb	0	; () banked
 11403  001732  6BD3               	clrf	(?_sprintf+9)& (0+255),b
 11404  001734  C273  F0D4         	movff	UseBluetooth@rfchannelSTR,?_sprintf+10
 11405  001738  0100               	movlb	0	; () banked
 11406  00173A  6BD5               	clrf	(?_sprintf+11)& (0+255),b
 11407  00173C  ECF0  F010         	call	_sprintf	;wreg free
 11408  001740  D000               	goto	l15804
 11409  001742                     l15804:
 11410                           
 11411                           ;Bluetooth.c: 749: }
 11412                           ;Bluetooth.c: 750: UARTstringCRLN(buf);
 11413  001742  0E0F               	movlw	low UseBluetooth@buf
 11414  001744  0100               	movlb	0	; () banked
 11415  001746  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11416  001748  0E02               	movlw	high UseBluetooth@buf
 11417  00174A  0100               	movlb	0	; () banked
 11418  00174C  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11419  00174E  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 11420                           
 11421                           ;Bluetooth.c: 751: UARTstring(CRLN);
 11422  001752  0EA7               	movlw	low _CRLN
 11423  001754  0100               	movlb	0	; () banked
 11424  001756  6F7D               	movwf	UARTstring@data& (0+255),b
 11425  001758  0EF3               	movlw	high _CRLN
 11426  00175A  0100               	movlb	0	; () banked
 11427  00175C  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 11428  00175E  ECF7  F046         	call	_UARTstring	;wreg free
 11429                           
 11430                           ;Bluetooth.c: 753: for(i =0;i<10;i++)
 11431  001762  0E00               	movlw	0
 11432  001764  0102               	movlb	2	; () banked
 11433  001766  6F92               	movwf	UseBluetooth@i& (0+255),b
 11434                           
 11435                           ; BSR set to: 2
 11436  001768  0E09               	movlw	9
 11437  00176A  0102               	movlb	2	; () banked
 11438  00176C  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11439  00176E  D002               	goto	l15814
 11440  001770  0012               	return	
 11441                           
 11442                           ; BSR set to: 2
 11443  001772  0012               	return	
 11444  001774                     l15814:
 11445                           
 11446                           ; BSR set to: 2
 11447                           ;Bluetooth.c: 754: {
 11448                           ;Bluetooth.c: 755: (LATC |= 0x04);
 11449  001774  848B               	bsf	3979,2,c	;volatile
 11450                           
 11451                           ; BSR set to: 2
 11452                           ;Bluetooth.c: 756: delayUS(50000);
 11453  001776  0E50               	movlw	80
 11454  001778  0100               	movlb	0	; () banked
 11455  00177A  6F7C               	movwf	delayUS@US& (0+255),b
 11456  00177C  0EC3               	movlw	195
 11457  00177E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 11458  001780  0E00               	movlw	0
 11459  001782  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 11460  001784  0E00               	movlw	0
 11461  001786  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 11462  001788  EC7B  F047         	call	_delayUS	;wreg free
 11463                           
 11464                           ;Bluetooth.c: 757: (LATC &= ~0x04);
 11465  00178C  948B               	bcf	3979,2,c	;volatile
 11466                           
 11467                           ;Bluetooth.c: 758: delayUS(50000);
 11468  00178E  0E50               	movlw	80
 11469  001790  0100               	movlb	0	; () banked
 11470  001792  6F7C               	movwf	delayUS@US& (0+255),b
 11471  001794  0EC3               	movlw	195
 11472  001796  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 11473  001798  0E00               	movlw	0
 11474  00179A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 11475  00179C  0E00               	movlw	0
 11476  00179E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 11477  0017A0  EC7B  F047         	call	_delayUS	;wreg free
 11478  0017A4  0102               	movlb	2	; () banked
 11479  0017A6  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11480                           
 11481                           ; BSR set to: 2
 11482  0017A8  0E09               	movlw	9
 11483  0017AA  0102               	movlb	2	; () banked
 11484  0017AC  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11485  0017AE  D7E2               	goto	l15814
 11486  0017B0  0012               	return	
 11487                           
 11488                           ; BSR set to: 2
 11489                           ;Bluetooth.c: 761: }
 11490                           
 11491                           ; BSR set to: 2
 11492                           ;Bluetooth.c: 759: }
 11493                           ;Bluetooth.c: 760: return 1;
 11494                           ;	Return value of _UseBluetooth is never used
 11495  0017B2  0012               	return	
 11496  0017B4                     l15826:
 11497                           
 11498                           ; BSR set to: 2
 11499                           ;Bluetooth.c: 762: else
 11500                           ;Bluetooth.c: 763: {
 11501                           ;Bluetooth.c: 765: for(i=0; i < 3; i++)
 11502  0017B4  0E00               	movlw	0
 11503  0017B6  0102               	movlb	2	; () banked
 11504  0017B8  6F92               	movwf	UseBluetooth@i& (0+255),b
 11505  0017BA                     l15828:
 11506                           
 11507                           ; BSR set to: 2
 11508  0017BA  0E02               	movlw	2
 11509  0017BC  0102               	movlb	2	; () banked
 11510  0017BE  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11511  0017C0  D001               	goto	l15832
 11512                           
 11513                           ; BSR set to: 2
 11514  0017C2  D04B               	goto	l15838
 11515  0017C4                     l15832:
 11516                           
 11517                           ; BSR set to: 2
 11518                           ;Bluetooth.c: 766: {
 11519                           ;Bluetooth.c: 768: Global.RemoteButtonRF[tempRFArray][i][0] = 0;
 11520  0017C4  0102               	movlb	2	; () banked
 11521  0017C6  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11522  0017C8  0D06               	mullw	6
 11523  0017CA  0E00               	movlw	low _Global
 11524  0017CC  0102               	movlb	2	; () banked
 11525  0017CE  6F03               	movwf	??_UseBluetooth& (0+255),b
 11526  0017D0  0E04               	movlw	high _Global
 11527  0017D2  0102               	movlb	2	; () banked
 11528  0017D4  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11529  0017D6  0E2E               	movlw	46
 11530  0017D8  0102               	movlb	2	; () banked
 11531  0017DA  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11532  0017DC  0E00               	movlw	0
 11533  0017DE  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11534  0017E0  50F3               	movf	prodl,w,c
 11535  0017E2  0102               	movlb	2	; () banked
 11536  0017E4  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11537  0017E6  50F4               	movf	prodh,w,c
 11538  0017E8  0102               	movlb	2	; () banked
 11539  0017EA  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11540  0017EC  0102               	movlb	2	; () banked
 11541  0017EE  5192               	movf	UseBluetooth@i& (0+255),w,b
 11542  0017F0  0D02               	mullw	2
 11543  0017F2  50F3               	movf	prodl,w,c
 11544  0017F4  0102               	movlb	2	; () banked
 11545  0017F6  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11546  0017F8  6ED9               	movwf	fsr2l,c
 11547  0017FA  50F4               	movf	prodh,w,c
 11548  0017FC  0102               	movlb	2	; () banked
 11549  0017FE  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11550  001800  6EDA               	movwf	fsr2h,c
 11551  001802  0E00               	movlw	0
 11552  001804  6EDF               	movwf	indf2,c
 11553                           
 11554                           ;Bluetooth.c: 769: Global.RemoteButtonRF[tempRFArray][i][1] = 0;
 11555  001806  0102               	movlb	2	; () banked
 11556  001808  518A               	movf	UseBluetooth@tempRFArray& (0+255),w,b
 11557  00180A  0D06               	mullw	6
 11558  00180C  0E00               	movlw	low _Global
 11559  00180E  0102               	movlb	2	; () banked
 11560  001810  6F03               	movwf	??_UseBluetooth& (0+255),b
 11561  001812  0E04               	movlw	high _Global
 11562  001814  0102               	movlb	2	; () banked
 11563  001816  6F04               	movwf	(??_UseBluetooth+1)& (0+255),b
 11564  001818  0E2E               	movlw	46
 11565  00181A  0102               	movlb	2	; () banked
 11566  00181C  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11567  00181E  0E00               	movlw	0
 11568  001820  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11569  001822  50F3               	movf	prodl,w,c
 11570  001824  0102               	movlb	2	; () banked
 11571  001826  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11572  001828  50F4               	movf	prodh,w,c
 11573  00182A  0102               	movlb	2	; () banked
 11574  00182C  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11575  00182E  0102               	movlb	2	; () banked
 11576  001830  5192               	movf	UseBluetooth@i& (0+255),w,b
 11577  001832  0D02               	mullw	2
 11578  001834  50F3               	movf	prodl,w,c
 11579  001836  0102               	movlb	2	; () banked
 11580  001838  2703               	addwf	??_UseBluetooth& (0+255),f,b
 11581  00183A  50F4               	movf	prodh,w,c
 11582  00183C  0102               	movlb	2	; () banked
 11583  00183E  2304               	addwfc	(??_UseBluetooth+1)& (0+255),f,b
 11584  001840  0E01               	movlw	1
 11585  001842  0102               	movlb	2	; () banked
 11586  001844  2503               	addwf	??_UseBluetooth& (0+255),w,b
 11587  001846  6ED9               	movwf	fsr2l,c
 11588  001848  0E00               	movlw	0
 11589  00184A  0102               	movlb	2	; () banked
 11590  00184C  2104               	addwfc	(??_UseBluetooth+1)& (0+255),w,b
 11591  00184E  6EDA               	movwf	fsr2h,c
 11592  001850  0E00               	movlw	0
 11593  001852  6EDF               	movwf	indf2,c
 11594                           
 11595                           ; BSR set to: 2
 11596  001854  0102               	movlb	2	; () banked
 11597  001856  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11598  001858  D7B0               	goto	l15828
 11599  00185A                     l15838:
 11600                           
 11601                           ; BSR set to: 2
 11602                           ;Bluetooth.c: 770: }
 11603                           ;Bluetooth.c: 771: SyncGlobalToEEPROM();
 11604  00185A  EC1C  F048         	call	_SyncGlobalToEEPROM	;wreg free
 11605                           
 11606                           ;Bluetooth.c: 772: if(device)
 11607  00185E  0102               	movlb	2	; () banked
 11608  001860  5184               	movf	UseBluetooth@device& (0+255),w,b
 11609  001862  0102               	movlb	2	; () banked
 11610  001864  B4D8               	btfsc	status,2,c
 11611  001866  D01B               	goto	l15844
 11612                           
 11613                           ; BSR set to: 2
 11614                           ;Bluetooth.c: 773: {
 11615                           ;Bluetooth.c: 774: sprintf(buf,"RF config %d channel %c device %d successfully erased",r
      +                          fconf, rfchannelSTR[0], device);
 11616  001868  0E0F               	movlw	low UseBluetooth@buf
 11617  00186A  0100               	movlb	0	; () banked
 11618  00186C  6FCA               	movwf	sprintf@sp& (0+255),b
 11619  00186E  0E02               	movlw	high UseBluetooth@buf
 11620  001870  0100               	movlb	0	; () banked
 11621  001872  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 11622  001874  0E1F               	movlw	low STR_75
 11623  001876  0100               	movlb	0	; () banked
 11624  001878  6FCC               	movwf	sprintf@f& (0+255),b
 11625  00187A  0EF4               	movlw	high STR_75
 11626  00187C  0100               	movlb	0	; () banked
 11627  00187E  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 11628  001880  C28B  F0CE         	movff	UseBluetooth@rfconf,?_sprintf+4
 11629  001884  0100               	movlb	0	; () banked
 11630  001886  6BCF               	clrf	(?_sprintf+5)& (0+255),b
 11631  001888  C273  F0D0         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 11632  00188C  0100               	movlb	0	; () banked
 11633  00188E  6BD1               	clrf	(?_sprintf+7)& (0+255),b
 11634  001890  C284  F0D2         	movff	UseBluetooth@device,?_sprintf+8
 11635  001894  0100               	movlb	0	; () banked
 11636  001896  6BD3               	clrf	(?_sprintf+9)& (0+255),b
 11637  001898  ECF0  F010         	call	_sprintf	;wreg free
 11638                           
 11639                           ;Bluetooth.c: 775: }
 11640  00189C  D017               	goto	l15846
 11641  00189E                     l15844:
 11642                           
 11643                           ;Bluetooth.c: 776: else
 11644                           ;Bluetooth.c: 777: {
 11645                           ;Bluetooth.c: 778: sprintf(buf,"RF config %d channel %c successfully erased",rfconf, rfc
      +                          hannelSTR[0]);
 11646  00189E  0E0F               	movlw	low UseBluetooth@buf
 11647  0018A0  0100               	movlb	0	; () banked
 11648  0018A2  6FCA               	movwf	sprintf@sp& (0+255),b
 11649  0018A4  0E02               	movlw	high UseBluetooth@buf
 11650  0018A6  0100               	movlb	0	; () banked
 11651  0018A8  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 11652  0018AA  0EAA               	movlw	low STR_76
 11653  0018AC  0100               	movlb	0	; () banked
 11654  0018AE  6FCC               	movwf	sprintf@f& (0+255),b
 11655  0018B0  0EF7               	movlw	high STR_76
 11656  0018B2  0100               	movlb	0	; () banked
 11657  0018B4  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 11658  0018B6  C28B  F0CE         	movff	UseBluetooth@rfconf,?_sprintf+4
 11659  0018BA  0100               	movlb	0	; () banked
 11660  0018BC  6BCF               	clrf	(?_sprintf+5)& (0+255),b
 11661  0018BE  C273  F0D0         	movff	UseBluetooth@rfchannelSTR,?_sprintf+6
 11662  0018C2  0100               	movlb	0	; () banked
 11663  0018C4  6BD1               	clrf	(?_sprintf+7)& (0+255),b
 11664  0018C6  ECF0  F010         	call	_sprintf	;wreg free
 11665  0018CA  D000               	goto	l15846
 11666  0018CC                     l15846:
 11667                           
 11668                           ;Bluetooth.c: 779: }
 11669                           ;Bluetooth.c: 780: UARTstringCRLN(buf);
 11670  0018CC  0E0F               	movlw	low UseBluetooth@buf
 11671  0018CE  0100               	movlb	0	; () banked
 11672  0018D0  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11673  0018D2  0E02               	movlw	high UseBluetooth@buf
 11674  0018D4  0100               	movlb	0	; () banked
 11675  0018D6  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11676  0018D8  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 11677                           
 11678                           ;Bluetooth.c: 781: UARTstring(CRLN);
 11679  0018DC  0EA7               	movlw	low _CRLN
 11680  0018DE  0100               	movlb	0	; () banked
 11681  0018E0  6F7D               	movwf	UARTstring@data& (0+255),b
 11682  0018E2  0EF3               	movlw	high _CRLN
 11683  0018E4  0100               	movlb	0	; () banked
 11684  0018E6  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 11685  0018E8  ECF7  F046         	call	_UARTstring	;wreg free
 11686                           
 11687                           ;Bluetooth.c: 783: for(i =0;i<10;i++)
 11688  0018EC  0E00               	movlw	0
 11689  0018EE  0102               	movlb	2	; () banked
 11690  0018F0  6F92               	movwf	UseBluetooth@i& (0+255),b
 11691                           
 11692                           ; BSR set to: 2
 11693  0018F2  0E09               	movlw	9
 11694  0018F4  0102               	movlb	2	; () banked
 11695  0018F6  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11696  0018F8  D002               	goto	l15856
 11697  0018FA  0012               	return	
 11698                           
 11699                           ; BSR set to: 2
 11700  0018FC  0012               	return	
 11701  0018FE                     l15856:
 11702                           
 11703                           ; BSR set to: 2
 11704                           ;Bluetooth.c: 784: {
 11705                           ;Bluetooth.c: 785: (LATC |= 0x04);
 11706  0018FE  848B               	bsf	3979,2,c	;volatile
 11707                           
 11708                           ; BSR set to: 2
 11709                           ;Bluetooth.c: 786: delayUS(50000);
 11710  001900  0E50               	movlw	80
 11711  001902  0100               	movlb	0	; () banked
 11712  001904  6F7C               	movwf	delayUS@US& (0+255),b
 11713  001906  0EC3               	movlw	195
 11714  001908  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 11715  00190A  0E00               	movlw	0
 11716  00190C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 11717  00190E  0E00               	movlw	0
 11718  001910  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 11719  001912  EC7B  F047         	call	_delayUS	;wreg free
 11720                           
 11721                           ;Bluetooth.c: 787: (LATC &= ~0x04);
 11722  001916  948B               	bcf	3979,2,c	;volatile
 11723                           
 11724                           ;Bluetooth.c: 788: delayUS(50000);
 11725  001918  0E50               	movlw	80
 11726  00191A  0100               	movlb	0	; () banked
 11727  00191C  6F7C               	movwf	delayUS@US& (0+255),b
 11728  00191E  0EC3               	movlw	195
 11729  001920  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 11730  001922  0E00               	movlw	0
 11731  001924  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 11732  001926  0E00               	movlw	0
 11733  001928  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 11734  00192A  EC7B  F047         	call	_delayUS	;wreg free
 11735  00192E  0102               	movlb	2	; () banked
 11736  001930  2B92               	incf	UseBluetooth@i& (0+255),f,b
 11737                           
 11738                           ; BSR set to: 2
 11739  001932  0E09               	movlw	9
 11740  001934  0102               	movlb	2	; () banked
 11741  001936  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 11742  001938  D7E2               	goto	l15856
 11743  00193A  0012               	return	
 11744                           
 11745                           ; BSR set to: 2
 11746                           ;Bluetooth.c: 791: }
 11747                           ;Bluetooth.c: 792: }
 11748                           
 11749                           ; BSR set to: 2
 11750                           ;Bluetooth.c: 789: }
 11751                           ;Bluetooth.c: 790: return 1;
 11752                           ;	Return value of _UseBluetooth is never used
 11753  00193C  0012               	return	
 11754  00193E                     l15866:
 11755                           
 11756                           ; BSR set to: 2
 11757                           ;Bluetooth.c: 793: else
 11758                           ;Bluetooth.c: 794: {
 11759                           ;Bluetooth.c: 795: UARTstringCRLN((unsigned char *)"Error: RF channel needs to be one ch
      +                          aracter");
 11760  00193E  0ED6               	movlw	low STR_77
 11761  001940  0100               	movlb	0	; () banked
 11762  001942  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11763  001944  0EF7               	movlw	high STR_77
 11764  001946  0100               	movlb	0	; () banked
 11765  001948  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11766  00194A  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 11767                           
 11768                           ;Bluetooth.c: 796: UARTstring(CRLN);
 11769  00194E  0EA7               	movlw	low _CRLN
 11770  001950  0100               	movlb	0	; () banked
 11771  001952  6F7D               	movwf	UARTstring@data& (0+255),b
 11772  001954  0EF3               	movlw	high _CRLN
 11773  001956  0100               	movlb	0	; () banked
 11774  001958  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 11775  00195A  ECF7  F046         	call	_UARTstring	;wreg free
 11776                           
 11777                           ;Bluetooth.c: 798: }
 11778                           ;Bluetooth.c: 799: }
 11779                           ;Bluetooth.c: 800: }
 11780                           
 11781                           ;Bluetooth.c: 797: return 0;
 11782                           ;	Return value of _UseBluetooth is never used
 11783  00195E  0012               	return	
 11784  001960                     l15870:
 11785                           
 11786                           ;Bluetooth.c: 801: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Reset"))
 11787  001960  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 11788  001964  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 11789  001968  0ECC               	movlw	low STR_78
 11790  00196A  0100               	movlb	0	; () banked
 11791  00196C  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 11792  00196E  0EFF               	movlw	high STR_78
 11793  001970  0100               	movlb	0	; () banked
 11794  001972  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 11795  001974  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
 11796  001978  0900               	iorlw	0
 11797  00197A  B4D8               	btfsc	status,2,c
 11798  00197C  D097               	goto	l15932
 11799                           
 11800                           ;Bluetooth.c: 802: {
 11801                           ;Bluetooth.c: 803: cleanBuffer(ReceivedString, ReceivedStringPos);
 11802  00197E  0E00               	movlw	low _ReceivedString
 11803  001980  0100               	movlb	0	; () banked
 11804  001982  6F7C               	movwf	cleanBuffer@data& (0+255),b
 11805  001984  0E06               	movlw	high _ReceivedString
 11806  001986  0100               	movlb	0	; () banked
 11807  001988  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 11808  00198A  C0DC  F07E         	movff	_ReceivedStringPos,cleanBuffer@count
 11809  00198E  0100               	movlb	0	; () banked
 11810  001990  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 11811  001992  ECCA  F046         	call	_cleanBuffer	;wreg free
 11812                           
 11813                           ;Bluetooth.c: 804: ReceivedStringPos = 0;
 11814  001996  0E00               	movlw	0
 11815  001998  0100               	movlb	0	; () banked
 11816  00199A  6FDC               	movwf	_ReceivedStringPos& (0+255),b
 11817                           
 11818                           ; BSR set to: 0
 11819                           ;Bluetooth.c: 805: NewReceivedString = 0;
 11820  00199C  0E00               	movlw	0
 11821  00199E  0100               	movlb	0	; () banked
 11822  0019A0  6FDB               	movwf	_NewReceivedString& (0+255),b	;volatile
 11823                           
 11824                           ; BSR set to: 0
 11825                           ;Bluetooth.c: 806: UARTstring((unsigned char *)"Enter Y to reset or N to cancel");
 11826  0019A2  0ECE               	movlw	low STR_79
 11827  0019A4  0100               	movlb	0	; () banked
 11828  0019A6  6F7D               	movwf	UARTstring@data& (0+255),b
 11829  0019A8  0EF9               	movlw	high STR_79
 11830  0019AA  0100               	movlb	0	; () banked
 11831  0019AC  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 11832  0019AE  ECF7  F046         	call	_UARTstring	;wreg free
 11833                           
 11834                           ;Bluetooth.c: 807: UARTstring(CRLN);
 11835  0019B2  0EA7               	movlw	low _CRLN
 11836  0019B4  0100               	movlb	0	; () banked
 11837  0019B6  6F7D               	movwf	UARTstring@data& (0+255),b
 11838  0019B8  0EF3               	movlw	high _CRLN
 11839  0019BA  0100               	movlb	0	; () banked
 11840  0019BC  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 11841  0019BE  ECF7  F046         	call	_UARTstring	;wreg free
 11842                           
 11843                           ;Bluetooth.c: 808: UARTchar('>');
 11844  0019C2  0E3E               	movlw	62
 11845  0019C4  ECE3  F049         	call	_UARTchar
 11846                           
 11847                           ;Bluetooth.c: 809: timeout = 0;
 11848  0019C8  0E00               	movlw	0
 11849  0019CA  0102               	movlb	2	; () banked
 11850  0019CC  6F82               	movwf	UseBluetooth@timeout& (0+255),b
 11851                           
 11852                           ; BSR set to: 2
 11853                           ;Bluetooth.c: 810: ClearUSART();
 11854  0019CE  EC81  F04A         	call	_ClearUSART	;wreg free
 11855                           
 11856                           ;Bluetooth.c: 811: PIR1bits.RCIF = 0;
 11857  0019D2  9A9E               	bcf	3998,5,c	;volatile
 11858                           
 11859                           ;Bluetooth.c: 812: PIE1bits.RCIE = 1;
 11860  0019D4  8A9D               	bsf	3997,5,c	;volatile
 11861                           
 11862                           ;Bluetooth.c: 813: while(!NewReceivedString)
 11863  0019D6  D023               	goto	l15902
 11864  0019D8                     l15892:
 11865                           
 11866                           ;Bluetooth.c: 814: {
 11867                           ;Bluetooth.c: 815: delayUS(300000);
 11868  0019D8  0EE0               	movlw	224
 11869  0019DA  0100               	movlb	0	; () banked
 11870  0019DC  6F7C               	movwf	delayUS@US& (0+255),b
 11871  0019DE  0E93               	movlw	147
 11872  0019E0  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 11873  0019E2  0E04               	movlw	4
 11874  0019E4  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 11875  0019E6  0E00               	movlw	0
 11876  0019E8  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 11877  0019EA  EC7B  F047         	call	_delayUS	;wreg free
 11878                           
 11879                           ;Bluetooth.c: 816: timeout++;
 11880  0019EE  0102               	movlb	2	; () banked
 11881  0019F0  2B82               	incf	UseBluetooth@timeout& (0+255),f,b
 11882                           
 11883                           ; BSR set to: 2
 11884                           ;Bluetooth.c: 817: if(timeout > 25)
 11885  0019F2  0E19               	movlw	25
 11886  0019F4  0102               	movlb	2	; () banked
 11887  0019F6  6582               	cpfsgt	UseBluetooth@timeout& (0+255),b
 11888  0019F8  D012               	goto	l15902
 11889                           
 11890                           ; BSR set to: 2
 11891                           ;Bluetooth.c: 818: {
 11892                           ;Bluetooth.c: 819: UARTstring(CRLN);
 11893  0019FA  0EA7               	movlw	low _CRLN
 11894  0019FC  0100               	movlb	0	; () banked
 11895  0019FE  6F7D               	movwf	UARTstring@data& (0+255),b
 11896  001A00  0EF3               	movlw	high _CRLN
 11897  001A02  0100               	movlb	0	; () banked
 11898  001A04  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 11899  001A06  ECF7  F046         	call	_UARTstring	;wreg free
 11900                           
 11901                           ;Bluetooth.c: 820: UARTstringCRLN((unsigned char *)"Device resumes without reset");
 11902  001A0A  0E06               	movlw	low STR_80
 11903  001A0C  0100               	movlb	0	; () banked
 11904  001A0E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11905  001A10  0EFB               	movlw	high STR_80
 11906  001A12  0100               	movlb	0	; () banked
 11907  001A14  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11908  001A16  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 11909                           
 11910                           ;Bluetooth.c: 821: return 0;
 11911                           ;	Return value of _UseBluetooth is never used
 11912  001A1A  0012               	return	
 11913  001A1C  D000               	goto	l15902
 11914  001A1E                     l15902:
 11915  001A1E  0100               	movlb	0	; () banked
 11916  001A20  51DB               	movf	_NewReceivedString& (0+255),w,b	;volatile
 11917  001A22  B4D8               	btfsc	status,2,c
 11918  001A24  D7D9               	goto	l15892
 11919                           
 11920                           ; BSR set to: 0
 11921                           ;Bluetooth.c: 822: }
 11922                           ;Bluetooth.c: 823: }
 11923                           ;Bluetooth.c: 824: PIE1bits.RCIE = 0;
 11924  001A26  9A9D               	bcf	3997,5,c	;volatile
 11925                           
 11926                           ; BSR set to: 0
 11927                           ;Bluetooth.c: 825: if(ReceivedString[0] == 'Y' || ReceivedString[0] == 'y' && ReceivedSt
      +                          ring[1] == 0)
 11928  001A28  0E59               	movlw	89
 11929  001A2A  0106               	movlb	6	; () banked
 11930  001A2C  1900               	xorwf	_ReceivedString& (0+255),w,b
 11931  001A2E  B4D8               	btfsc	status,2,c
 11932  001A30  D009               	goto	l15910
 11933                           
 11934                           ; BSR set to: 6
 11935  001A32  0E79               	movlw	121
 11936  001A34  0106               	movlb	6	; () banked
 11937  001A36  1900               	xorwf	_ReceivedString& (0+255),w,b
 11938  001A38  A4D8               	btfss	status,2,c
 11939  001A3A  D014               	goto	l15920
 11940                           
 11941                           ; BSR set to: 6
 11942  001A3C  0106               	movlb	6	; () banked
 11943  001A3E  5101               	movf	(_ReceivedString+1)& (0+255),w,b
 11944  001A40  A4D8               	btfss	status,2,c
 11945  001A42  D010               	goto	l15920
 11946  001A44                     l15910:
 11947                           
 11948                           ; BSR set to: 6
 11949                           ;Bluetooth.c: 826: {
 11950                           ;Bluetooth.c: 828: UARTstringCRLN((unsigned char *)"System will reset");
 11951  001A44  0E0C               	movlw	low STR_81
 11952  001A46  0100               	movlb	0	; () banked
 11953  001A48  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11954  001A4A  0EFE               	movlw	high STR_81
 11955  001A4C  0100               	movlb	0	; () banked
 11956  001A4E  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11957  001A50  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 11958                           
 11959                           ;Bluetooth.c: 829: Global.EEPROMinitFlag = 0;
 11960  001A54  0E00               	movlw	0
 11961  001A56  0104               	movlb	4	; () banked
 11962  001A58  6F2D               	movwf	(_Global+45)& (0+255),b
 11963                           
 11964                           ; BSR set to: 4
 11965                           ;Bluetooth.c: 830: SyncGlobalToEEPROM();
 11966  001A5A  EC1C  F048         	call	_SyncGlobalToEEPROM	;wreg free
 11967  001A5E  00FF               	reset		;# 
 11968                           
 11969                           ;Bluetooth.c: 832: return 1;
 11970                           ;	Return value of _UseBluetooth is never used
 11971  001A60  0012               	return	
 11972                           
 11973                           ;Bluetooth.c: 833: }
 11974  001A62  D011               	goto	l15922
 11975  001A64                     l15920:
 11976                           
 11977                           ;Bluetooth.c: 834: else
 11978                           ;Bluetooth.c: 835: {
 11979                           ;Bluetooth.c: 836: UARTstring(CRLN);
 11980  001A64  0EA7               	movlw	low _CRLN
 11981  001A66  0100               	movlb	0	; () banked
 11982  001A68  6F7D               	movwf	UARTstring@data& (0+255),b
 11983  001A6A  0EF3               	movlw	high _CRLN
 11984  001A6C  0100               	movlb	0	; () banked
 11985  001A6E  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 11986  001A70  ECF7  F046         	call	_UARTstring	;wreg free
 11987                           
 11988                           ;Bluetooth.c: 837: UARTstringCRLN((unsigned char *)"Device resumes without reset");
 11989  001A74  0E06               	movlw	low STR_80
 11990  001A76  0100               	movlb	0	; () banked
 11991  001A78  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 11992  001A7A  0EFB               	movlw	high STR_80
 11993  001A7C  0100               	movlb	0	; () banked
 11994  001A7E  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 11995  001A80  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 11996  001A84  D000               	goto	l15922
 11997  001A86                     l15922:
 11998                           
 11999                           ;Bluetooth.c: 838: }
 12000                           ;Bluetooth.c: 839: cleanBuffer(ReceivedString, ReceivedStringPos);
 12001  001A86  0E00               	movlw	low _ReceivedString
 12002  001A88  0100               	movlb	0	; () banked
 12003  001A8A  6F7C               	movwf	cleanBuffer@data& (0+255),b
 12004  001A8C  0E06               	movlw	high _ReceivedString
 12005  001A8E  0100               	movlb	0	; () banked
 12006  001A90  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 12007  001A92  C0DC  F07E         	movff	_ReceivedStringPos,cleanBuffer@count
 12008  001A96  0100               	movlb	0	; () banked
 12009  001A98  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 12010  001A9A  ECCA  F046         	call	_cleanBuffer	;wreg free
 12011                           
 12012                           ;Bluetooth.c: 840: ReceivedStringPos = 0;
 12013  001A9E  0E00               	movlw	0
 12014  001AA0  0100               	movlb	0	; () banked
 12015  001AA2  6FDC               	movwf	_ReceivedStringPos& (0+255),b
 12016                           
 12017                           ; BSR set to: 0
 12018                           ;Bluetooth.c: 841: NewReceivedString = 0;
 12019  001AA4  0E00               	movlw	0
 12020  001AA6  0100               	movlb	0	; () banked
 12021  001AA8  6FDB               	movwf	_NewReceivedString& (0+255),b	;volatile
 12022                           
 12023                           ; BSR set to: 0
 12024                           ;Bluetooth.c: 843: }
 12025                           
 12026                           ; BSR set to: 0
 12027                           ;Bluetooth.c: 842: return 0;
 12028                           ;	Return value of _UseBluetooth is never used
 12029  001AAA  0012               	return	
 12030  001AAC                     l15932:
 12031                           
 12032                           ;Bluetooth.c: 844: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Voltage")
      +                          )
 12033  001AAC  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 12034  001AB0  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 12035  001AB4  0E9D               	movlw	low STR_83
 12036  001AB6  0100               	movlb	0	; () banked
 12037  001AB8  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 12038  001ABA  0EFF               	movlw	high STR_83
 12039  001ABC  0100               	movlb	0	; () banked
 12040  001ABE  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 12041  001AC0  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
 12042  001AC4  0900               	iorlw	0
 12043  001AC6  B4D8               	btfsc	status,2,c
 12044  001AC8  D02F               	goto	l15942
 12045                           
 12046                           ;Bluetooth.c: 845: {
 12047                           ;Bluetooth.c: 846: UARTstring(CRLN);
 12048  001ACA  0EA7               	movlw	low _CRLN
 12049  001ACC  0100               	movlb	0	; () banked
 12050  001ACE  6F7D               	movwf	UARTstring@data& (0+255),b
 12051  001AD0  0EF3               	movlw	high _CRLN
 12052  001AD2  0100               	movlb	0	; () banked
 12053  001AD4  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12054  001AD6  ECF7  F046         	call	_UARTstring	;wreg free
 12055                           
 12056                           ;Bluetooth.c: 847: sprintf(buf,"Supply Voltage = %f", (double) ReadVoltage());
 12057  001ADA  0E0F               	movlw	low UseBluetooth@buf
 12058  001ADC  0100               	movlb	0	; () banked
 12059  001ADE  6FCA               	movwf	sprintf@sp& (0+255),b
 12060  001AE0  0E02               	movlw	high UseBluetooth@buf
 12061  001AE2  0100               	movlb	0	; () banked
 12062  001AE4  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 12063  001AE6  0E61               	movlw	low STR_84
 12064  001AE8  0100               	movlb	0	; () banked
 12065  001AEA  6FCC               	movwf	sprintf@f& (0+255),b
 12066  001AEC  0EFD               	movlw	high STR_84
 12067  001AEE  0100               	movlb	0	; () banked
 12068  001AF0  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 12069  001AF2  EC4F  F040         	call	_ReadVoltage	;wreg free
 12070  001AF6  C0A5  F0CE         	movff	?_ReadVoltage,?_sprintf+4
 12071  001AFA  C0A6  F0CF         	movff	?_ReadVoltage+1,?_sprintf+5
 12072  001AFE  C0A7  F0D0         	movff	?_ReadVoltage+2,?_sprintf+6
 12073  001B02  ECF0  F010         	call	_sprintf	;wreg free
 12074                           
 12075                           ;Bluetooth.c: 848: UARTstringCRLN(buf);
 12076  001B06  0E0F               	movlw	low UseBluetooth@buf
 12077  001B08  0100               	movlb	0	; () banked
 12078  001B0A  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12079  001B0C  0E02               	movlw	high UseBluetooth@buf
 12080  001B0E  0100               	movlb	0	; () banked
 12081  001B10  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12082  001B12  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 12083                           
 12084                           ;Bluetooth.c: 849: UARTstring(CRLN);
 12085  001B16  0EA7               	movlw	low _CRLN
 12086  001B18  0100               	movlb	0	; () banked
 12087  001B1A  6F7D               	movwf	UARTstring@data& (0+255),b
 12088  001B1C  0EF3               	movlw	high _CRLN
 12089  001B1E  0100               	movlb	0	; () banked
 12090  001B20  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12091  001B22  ECF7  F046         	call	_UARTstring	;wreg free
 12092                           
 12093                           ;Bluetooth.c: 850: }
 12094  001B26  0012               	return	
 12095  001B28                     l15942:
 12096                           
 12097                           ;Bluetooth.c: 851: else if(StringMatchCaseInsensitive(String,(unsigned char *)"Version")
      +                          )
 12098  001B28  C200  F07F         	movff	UseBluetooth@String,StringMatchCaseInsensitive@This
 12099  001B2C  C201  F080         	movff	UseBluetooth@String+1,StringMatchCaseInsensitive@This+1
 12100  001B30  0E25               	movlw	low (STR_99+27)
 12101  001B32  0100               	movlb	0	; () banked
 12102  001B34  6F81               	movwf	StringMatchCaseInsensitive@That& (0+255),b
 12103  001B36  0EF9               	movlw	high (STR_99+27)
 12104  001B38  0100               	movlb	0	; () banked
 12105  001B3A  6F82               	movwf	(StringMatchCaseInsensitive@That+1)& (0+255),b
 12106  001B3C  EC53  F043         	call	_StringMatchCaseInsensitive	;wreg free
 12107  001B40  0900               	iorlw	0
 12108  001B42  B4D8               	btfsc	status,2,c
 12109  001B44  D093               	goto	l15964
 12110                           
 12111                           ;Bluetooth.c: 852: {
 12112                           ;Bluetooth.c: 853: UARTstring(CRLN);
 12113  001B46  0EA7               	movlw	low _CRLN
 12114  001B48  0100               	movlb	0	; () banked
 12115  001B4A  6F7D               	movwf	UARTstring@data& (0+255),b
 12116  001B4C  0EF3               	movlw	high _CRLN
 12117  001B4E  0100               	movlb	0	; () banked
 12118  001B50  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12119  001B52  ECF7  F046         	call	_UARTstring	;wreg free
 12120                           
 12121                           ;Bluetooth.c: 854: sprintf(buf,"Firmware Version: %s", FirmVersion);
 12122  001B56  0E0F               	movlw	low UseBluetooth@buf
 12123  001B58  0100               	movlb	0	; () banked
 12124  001B5A  6FCA               	movwf	sprintf@sp& (0+255),b
 12125  001B5C  0E02               	movlw	high UseBluetooth@buf
 12126  001B5E  0100               	movlb	0	; () banked
 12127  001B60  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 12128  001B62  0E10               	movlw	low STR_86
 12129  001B64  0100               	movlb	0	; () banked
 12130  001B66  6FCC               	movwf	sprintf@f& (0+255),b
 12131  001B68  0EFD               	movlw	high STR_86
 12132  001B6A  0100               	movlb	0	; () banked
 12133  001B6C  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 12134  001B6E  0E8D               	movlw	low _FirmVersion
 12135  001B70  0100               	movlb	0	; () banked
 12136  001B72  6FCE               	movwf	(?_sprintf+4)& (0+255),b
 12137  001B74  0EF3               	movlw	high _FirmVersion
 12138  001B76  0100               	movlb	0	; () banked
 12139  001B78  6FCF               	movwf	(?_sprintf+5)& (0+255),b
 12140  001B7A  ECF0  F010         	call	_sprintf	;wreg free
 12141                           
 12142                           ;Bluetooth.c: 855: UARTstringCRLN(buf);
 12143  001B7E  0E0F               	movlw	low UseBluetooth@buf
 12144  001B80  0100               	movlb	0	; () banked
 12145  001B82  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12146  001B84  0E02               	movlw	high UseBluetooth@buf
 12147  001B86  0100               	movlb	0	; () banked
 12148  001B88  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12149  001B8A  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 12150                           
 12151                           ;Bluetooth.c: 856: UARTstring(CRLN);
 12152  001B8E  0EA7               	movlw	low _CRLN
 12153  001B90  0100               	movlb	0	; () banked
 12154  001B92  6F7D               	movwf	UARTstring@data& (0+255),b
 12155  001B94  0EF3               	movlw	high _CRLN
 12156  001B96  0100               	movlb	0	; () banked
 12157  001B98  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12158  001B9A  ECF7  F046         	call	_UARTstring	;wreg free
 12159                           
 12160                           ;Bluetooth.c: 858: sprintf(buf,"PCB has Bluetooth capability");
 12161  001B9E  0E0F               	movlw	low UseBluetooth@buf
 12162  001BA0  0100               	movlb	0	; () banked
 12163  001BA2  6FCA               	movwf	sprintf@sp& (0+255),b
 12164  001BA4  0E02               	movlw	high UseBluetooth@buf
 12165  001BA6  0100               	movlb	0	; () banked
 12166  001BA8  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 12167  001BAA  0E5D               	movlw	low STR_87
 12168  001BAC  0100               	movlb	0	; () banked
 12169  001BAE  6FCC               	movwf	sprintf@f& (0+255),b
 12170  001BB0  0EFB               	movlw	high STR_87
 12171  001BB2  0100               	movlb	0	; () banked
 12172  001BB4  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 12173  001BB6  ECF0  F010         	call	_sprintf	;wreg free
 12174                           
 12175                           ;Bluetooth.c: 862: UARTstringCRLN(buf);
 12176  001BBA  0E0F               	movlw	low UseBluetooth@buf
 12177  001BBC  0100               	movlb	0	; () banked
 12178  001BBE  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12179  001BC0  0E02               	movlw	high UseBluetooth@buf
 12180  001BC2  0100               	movlb	0	; () banked
 12181  001BC4  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12182  001BC6  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 12183                           
 12184                           ;Bluetooth.c: 863: UARTstring(CRLN);
 12185  001BCA  0EA7               	movlw	low _CRLN
 12186  001BCC  0100               	movlb	0	; () banked
 12187  001BCE  6F7D               	movwf	UARTstring@data& (0+255),b
 12188  001BD0  0EF3               	movlw	high _CRLN
 12189  001BD2  0100               	movlb	0	; () banked
 12190  001BD4  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12191  001BD6  ECF7  F046         	call	_UARTstring	;wreg free
 12192                           
 12193                           ;Bluetooth.c: 864: sprintf(buf,"PCB Version: %s", PCBVersion);
 12194  001BDA  0E0F               	movlw	low UseBluetooth@buf
 12195  001BDC  0100               	movlb	0	; () banked
 12196  001BDE  6FCA               	movwf	sprintf@sp& (0+255),b
 12197  001BE0  0E02               	movlw	high UseBluetooth@buf
 12198  001BE2  0100               	movlb	0	; () banked
 12199  001BE4  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 12200  001BE6  0E61               	movlw	low STR_88
 12201  001BE8  0100               	movlb	0	; () banked
 12202  001BEA  6FCC               	movwf	sprintf@f& (0+255),b
 12203  001BEC  0EFE               	movlw	high STR_88
 12204  001BEE  0100               	movlb	0	; () banked
 12205  001BF0  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 12206  001BF2  0E96               	movlw	low _PCBVersion
 12207  001BF4  0100               	movlb	0	; () banked
 12208  001BF6  6FCE               	movwf	(?_sprintf+4)& (0+255),b
 12209  001BF8  0EF3               	movlw	high _PCBVersion
 12210  001BFA  0100               	movlb	0	; () banked
 12211  001BFC  6FCF               	movwf	(?_sprintf+5)& (0+255),b
 12212  001BFE  ECF0  F010         	call	_sprintf	;wreg free
 12213                           
 12214                           ;Bluetooth.c: 865: UARTstringCRLN(buf);
 12215  001C02  0E0F               	movlw	low UseBluetooth@buf
 12216  001C04  0100               	movlb	0	; () banked
 12217  001C06  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12218  001C08  0E02               	movlw	high UseBluetooth@buf
 12219  001C0A  0100               	movlb	0	; () banked
 12220  001C0C  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12221  001C0E  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 12222                           
 12223                           ;Bluetooth.c: 866: sprintf(buf,"Transmitting Frequency: %s", Frequency);
 12224  001C12  0E0F               	movlw	low UseBluetooth@buf
 12225  001C14  0100               	movlb	0	; () banked
 12226  001C16  6FCA               	movwf	sprintf@sp& (0+255),b
 12227  001C18  0E02               	movlw	high UseBluetooth@buf
 12228  001C1A  0100               	movlb	0	; () banked
 12229  001C1C  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 12230  001C1E  0ECE               	movlw	low STR_89
 12231  001C20  0100               	movlb	0	; () banked
 12232  001C22  6FCC               	movwf	sprintf@f& (0+255),b
 12233  001C24  0EFB               	movlw	high STR_89
 12234  001C26  0100               	movlb	0	; () banked
 12235  001C28  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 12236  001C2A  0EA3               	movlw	low _Frequency
 12237  001C2C  0100               	movlb	0	; () banked
 12238  001C2E  6FCE               	movwf	(?_sprintf+4)& (0+255),b
 12239  001C30  0EF3               	movlw	high _Frequency
 12240  001C32  0100               	movlb	0	; () banked
 12241  001C34  6FCF               	movwf	(?_sprintf+5)& (0+255),b
 12242  001C36  ECF0  F010         	call	_sprintf	;wreg free
 12243                           
 12244                           ;Bluetooth.c: 867: UARTstring(buf);
 12245  001C3A  0E0F               	movlw	low UseBluetooth@buf
 12246  001C3C  0100               	movlb	0	; () banked
 12247  001C3E  6F7D               	movwf	UARTstring@data& (0+255),b
 12248  001C40  0E02               	movlw	high UseBluetooth@buf
 12249  001C42  0100               	movlb	0	; () banked
 12250  001C44  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12251  001C46  ECF7  F046         	call	_UARTstring	;wreg free
 12252                           
 12253                           ;Bluetooth.c: 868: UARTstringCRLN(" MHz");
 12254  001C4A  0EE1               	movlw	low STR_90
 12255  001C4C  0100               	movlb	0	; () banked
 12256  001C4E  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12257  001C50  0EFF               	movlw	high STR_90
 12258  001C52  0100               	movlb	0	; () banked
 12259  001C54  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12260  001C56  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 12261                           
 12262                           ;Bluetooth.c: 869: UARTstring(CRLN);
 12263  001C5A  0EA7               	movlw	low _CRLN
 12264  001C5C  0100               	movlb	0	; () banked
 12265  001C5E  6F7D               	movwf	UARTstring@data& (0+255),b
 12266  001C60  0EF3               	movlw	high _CRLN
 12267  001C62  0100               	movlb	0	; () banked
 12268  001C64  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12269  001C66  ECF7  F046         	call	_UARTstring	;wreg free
 12270                           
 12271                           ;Bluetooth.c: 870: }
 12272  001C6A  0012               	return	
 12273  001C6C                     l15964:
 12274                           
 12275                           ;Bluetooth.c: 871: else if(StringMatch(String,(unsigned char *)"???"))
 12276  001C6C  C200  F07C         	movff	UseBluetooth@String,StringMatch@This
 12277  001C70  C201  F07D         	movff	UseBluetooth@String+1,StringMatch@This+1
 12278  001C74  0EEA               	movlw	low STR_91
 12279  001C76  0100               	movlb	0	; () banked
 12280  001C78  6F7E               	movwf	StringMatch@That& (0+255),b
 12281  001C7A  0EFF               	movlw	high STR_91
 12282  001C7C  0100               	movlb	0	; () banked
 12283  001C7E  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 12284  001C80  EC28  F045         	call	_StringMatch	;wreg free
 12285  001C84  0900               	iorlw	0
 12286  001C86  B4D8               	btfsc	status,2,c
 12287  001C88  D291               	goto	l16030
 12288                           
 12289                           ;Bluetooth.c: 872: {
 12290                           ;Bluetooth.c: 873: UARTstring(CRLN);
 12291  001C8A  0EA7               	movlw	low _CRLN
 12292  001C8C  0100               	movlb	0	; () banked
 12293  001C8E  6F7D               	movwf	UARTstring@data& (0+255),b
 12294  001C90  0EF3               	movlw	high _CRLN
 12295  001C92  0100               	movlb	0	; () banked
 12296  001C94  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12297  001C96  ECF7  F046         	call	_UARTstring	;wreg free
 12298                           
 12299                           ;Bluetooth.c: 874: for(i=0; i< 34; i++ )
 12300  001C9A  0E00               	movlw	0
 12301  001C9C  0102               	movlb	2	; () banked
 12302  001C9E  6F92               	movwf	UseBluetooth@i& (0+255),b
 12303  001CA0                     l15970:
 12304                           
 12305                           ; BSR set to: 2
 12306  001CA0  0E21               	movlw	33
 12307  001CA2  0102               	movlb	2	; () banked
 12308  001CA4  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12309  001CA6  D001               	goto	l15974
 12310                           
 12311                           ; BSR set to: 2
 12312  001CA8  D006               	goto	l15980
 12313  001CAA                     l15974:
 12314                           
 12315                           ; BSR set to: 2
 12316                           ;Bluetooth.c: 875: {
 12317                           ;Bluetooth.c: 876: UARTchar('~');
 12318  001CAA  0E7E               	movlw	126
 12319  001CAC  ECE3  F049         	call	_UARTchar
 12320  001CB0  0102               	movlb	2	; () banked
 12321  001CB2  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12322  001CB4  D7F5               	goto	l15970
 12323  001CB6                     l15980:
 12324                           
 12325                           ; BSR set to: 2
 12326                           ;Bluetooth.c: 877: }
 12327                           ;Bluetooth.c: 878: UARTstring((unsigned char *)"Command Menu");
 12328  001CB6  0EF7               	movlw	low (STR_148+14)
 12329  001CB8  0100               	movlb	0	; () banked
 12330  001CBA  6F7D               	movwf	UARTstring@data& (0+255),b
 12331  001CBC  0EFB               	movlw	high (STR_148+14)
 12332  001CBE  0100               	movlb	0	; () banked
 12333  001CC0  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12334  001CC2  ECF7  F046         	call	_UARTstring	;wreg free
 12335                           
 12336                           ;Bluetooth.c: 879: for(i=0; i< 34; i++ )
 12337  001CC6  0E00               	movlw	0
 12338  001CC8  0102               	movlb	2	; () banked
 12339  001CCA  6F92               	movwf	UseBluetooth@i& (0+255),b
 12340  001CCC                     l15984:
 12341                           
 12342                           ; BSR set to: 2
 12343  001CCC  0E21               	movlw	33
 12344  001CCE  0102               	movlb	2	; () banked
 12345  001CD0  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12346  001CD2  D001               	goto	l15988
 12347                           
 12348                           ; BSR set to: 2
 12349  001CD4  D006               	goto	l15994
 12350  001CD6                     l15988:
 12351                           
 12352                           ; BSR set to: 2
 12353                           ;Bluetooth.c: 880: {
 12354                           ;Bluetooth.c: 881: UARTchar('~');
 12355  001CD6  0E7E               	movlw	126
 12356  001CD8  ECE3  F049         	call	_UARTchar
 12357  001CDC  0102               	movlb	2	; () banked
 12358  001CDE  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12359  001CE0  D7F5               	goto	l15984
 12360  001CE2                     l15994:
 12361                           
 12362                           ; BSR set to: 2
 12363                           ;Bluetooth.c: 882: }
 12364                           ;Bluetooth.c: 883: UARTstring(CRLN);
 12365  001CE2  0EA7               	movlw	low _CRLN
 12366  001CE4  0100               	movlb	0	; () banked
 12367  001CE6  6F7D               	movwf	UARTstring@data& (0+255),b
 12368  001CE8  0EF3               	movlw	high _CRLN
 12369  001CEA  0100               	movlb	0	; () banked
 12370  001CEC  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12371  001CEE  ECF7  F046         	call	_UARTstring	;wreg free
 12372                           
 12373                           ;Bluetooth.c: 884: UARTstring(CRLN);
 12374  001CF2  0EA7               	movlw	low _CRLN
 12375  001CF4  0100               	movlb	0	; () banked
 12376  001CF6  6F7D               	movwf	UARTstring@data& (0+255),b
 12377  001CF8  0EF3               	movlw	high _CRLN
 12378  001CFA  0100               	movlb	0	; () banked
 12379  001CFC  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12380  001CFE  ECF7  F046         	call	_UARTstring	;wreg free
 12381                           
 12382                           ;Bluetooth.c: 885: UARTstringCRLN((unsigned char *)"System commands:");
 12383  001D02  0E2F               	movlw	low STR_93
 12384  001D04  0100               	movlb	0	; () banked
 12385  001D06  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12386  001D08  0EFE               	movlw	high STR_93
 12387  001D0A  0100               	movlb	0	; () banked
 12388  001D0C  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12389  001D0E  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 12390                           
 12391                           ;Bluetooth.c: 886: UARTcommandMenu((unsigned char *)"???", (unsigned char *)"Help Menu")
      +                          ;
 12392  001D12  0EEA               	movlw	low STR_91
 12393  001D14  0100               	movlb	0	; () banked
 12394  001D16  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12395  001D18  0EFF               	movlw	high STR_91
 12396  001D1A  0100               	movlb	0	; () banked
 12397  001D1C  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12398  001D1E  0E78               	movlw	low STR_95
 12399  001D20  0100               	movlb	0	; () banked
 12400  001D22  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12401  001D24  0EFF               	movlw	high STR_95
 12402  001D26  0100               	movlb	0	; () banked
 12403  001D28  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12404  001D2A  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12405                           
 12406                           ;Bluetooth.c: 887: UARTcommandMenu((unsigned char *)"Reset", (unsigned char *)"Clears me
      +                          mory and resets device");
 12407  001D2E  0ECC               	movlw	low STR_78
 12408  001D30  0100               	movlb	0	; () banked
 12409  001D32  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12410  001D34  0EFF               	movlw	high STR_78
 12411  001D36  0100               	movlb	0	; () banked
 12412  001D38  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12413  001D3A  0EAE               	movlw	low STR_97
 12414  001D3C  0100               	movlb	0	; () banked
 12415  001D3E  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12416  001D40  0EF9               	movlw	high STR_97
 12417  001D42  0100               	movlb	0	; () banked
 12418  001D44  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12419  001D46  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12420                           
 12421                           ;Bluetooth.c: 888: UARTcommandMenu((unsigned char *)"Version", (unsigned char *)"Display
      +                          s Firmware/Hardware Version");
 12422  001D4A  0E25               	movlw	low (STR_99+27)
 12423  001D4C  0100               	movlb	0	; () banked
 12424  001D4E  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12425  001D50  0EF9               	movlw	high (STR_99+27)
 12426  001D52  0100               	movlb	0	; () banked
 12427  001D54  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12428  001D56  0E0A               	movlw	low STR_99
 12429  001D58  0100               	movlb	0	; () banked
 12430  001D5A  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12431  001D5C  0EF9               	movlw	high STR_99
 12432  001D5E  0100               	movlb	0	; () banked
 12433  001D60  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12434  001D62  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12435                           
 12436                           ;Bluetooth.c: 889: UARTstring(CRLN);
 12437  001D66  0EA7               	movlw	low _CRLN
 12438  001D68  0100               	movlb	0	; () banked
 12439  001D6A  6F7D               	movwf	UARTstring@data& (0+255),b
 12440  001D6C  0EF3               	movlw	high _CRLN
 12441  001D6E  0100               	movlb	0	; () banked
 12442  001D70  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12443  001D72  ECF7  F046         	call	_UARTstring	;wreg free
 12444                           
 12445                           ;Bluetooth.c: 890: UARTstringCRLN((unsigned char *)"Diagnostic Commands:");
 12446  001D76  0EFB               	movlw	low STR_100
 12447  001D78  0100               	movlb	0	; () banked
 12448  001D7A  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12449  001D7C  0EFC               	movlw	high STR_100
 12450  001D7E  0100               	movlb	0	; () banked
 12451  001D80  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12452  001D82  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 12453                           
 12454                           ;Bluetooth.c: 891: UARTcommandMenu((unsigned char *)"Voltage", (unsigned char *)"Display
      +                          s the supply voltage");
 12455  001D86  0E9D               	movlw	low STR_83
 12456  001D88  0100               	movlb	0	; () banked
 12457  001D8A  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12458  001D8C  0EFF               	movlw	high STR_83
 12459  001D8E  0100               	movlb	0	; () banked
 12460  001D90  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12461  001D92  0E96               	movlw	low STR_102
 12462  001D94  0100               	movlb	0	; () banked
 12463  001D96  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12464  001D98  0EFB               	movlw	high STR_102
 12465  001D9A  0100               	movlb	0	; () banked
 12466  001D9C  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12467  001D9E  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12468                           
 12469                           ;Bluetooth.c: 892: UARTstring(CRLN);
 12470  001DA2  0EA7               	movlw	low _CRLN
 12471  001DA4  0100               	movlb	0	; () banked
 12472  001DA6  6F7D               	movwf	UARTstring@data& (0+255),b
 12473  001DA8  0EF3               	movlw	high _CRLN
 12474  001DAA  0100               	movlb	0	; () banked
 12475  001DAC  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12476  001DAE  ECF7  F046         	call	_UARTstring	;wreg free
 12477                           
 12478                           ;Bluetooth.c: 893: UARTstringCRLN((unsigned char *)"IR commands:");
 12479  001DB2  0EB9               	movlw	low STR_103
 12480  001DB4  0100               	movlb	0	; () banked
 12481  001DB6  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12482  001DB8  0EFE               	movlw	high STR_103
 12483  001DBA  0100               	movlb	0	; () banked
 12484  001DBC  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12485  001DBE  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 12486                           
 12487                           ;Bluetooth.c: 894: for(i=1; i <= 20; i++)
 12488  001DC2  0E01               	movlw	1
 12489  001DC4  0102               	movlb	2	; () banked
 12490  001DC6  6F92               	movwf	UseBluetooth@i& (0+255),b
 12491  001DC8                     l15998:
 12492                           
 12493                           ; BSR set to: 2
 12494  001DC8  0E14               	movlw	20
 12495  001DCA  0102               	movlb	2	; () banked
 12496  001DCC  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12497  001DCE  D001               	goto	l16002
 12498                           
 12499                           ; BSR set to: 2
 12500  001DD0  D030               	goto	l16012
 12501  001DD2                     l16002:
 12502                           
 12503                           ; BSR set to: 2
 12504                           ;Bluetooth.c: 895: {
 12505                           ;Bluetooth.c: 896: cleanBuffer(buf,50);
 12506  001DD2  0E0F               	movlw	low UseBluetooth@buf
 12507  001DD4  0100               	movlb	0	; () banked
 12508  001DD6  6F7C               	movwf	cleanBuffer@data& (0+255),b
 12509  001DD8  0E02               	movlw	high UseBluetooth@buf
 12510  001DDA  0100               	movlb	0	; () banked
 12511  001DDC  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 12512  001DDE  0E00               	movlw	0
 12513  001DE0  0100               	movlb	0	; () banked
 12514  001DE2  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 12515  001DE4  0E32               	movlw	50
 12516  001DE6  6F7E               	movwf	cleanBuffer@count& (0+255),b
 12517  001DE8  ECCA  F046         	call	_cleanBuffer	;wreg free
 12518                           
 12519                           ;Bluetooth.c: 897: sprintf(buf,"RemoteButton%d",i);
 12520  001DEC  0E0F               	movlw	low UseBluetooth@buf
 12521  001DEE  0100               	movlb	0	; () banked
 12522  001DF0  6FCA               	movwf	sprintf@sp& (0+255),b
 12523  001DF2  0E02               	movlw	high UseBluetooth@buf
 12524  001DF4  0100               	movlb	0	; () banked
 12525  001DF6  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 12526  001DF8  0E81               	movlw	low STR_104
 12527  001DFA  0100               	movlb	0	; () banked
 12528  001DFC  6FCC               	movwf	sprintf@f& (0+255),b
 12529  001DFE  0EFE               	movlw	high STR_104
 12530  001E00  0100               	movlb	0	; () banked
 12531  001E02  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 12532  001E04  C292  F0CE         	movff	UseBluetooth@i,?_sprintf+4
 12533  001E08  0100               	movlb	0	; () banked
 12534  001E0A  6BCF               	clrf	(?_sprintf+5)& (0+255),b
 12535  001E0C  ECF0  F010         	call	_sprintf	;wreg free
 12536                           
 12537                           ;Bluetooth.c: 898: UARTcommandMenu(buf, "Transmits saved NEC code");
 12538  001E10  0E0F               	movlw	low UseBluetooth@buf
 12539  001E12  0100               	movlb	0	; () banked
 12540  001E14  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12541  001E16  0E02               	movlw	high UseBluetooth@buf
 12542  001E18  0100               	movlb	0	; () banked
 12543  001E1A  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12544  001E1C  0E04               	movlw	low STR_105
 12545  001E1E  0100               	movlb	0	; () banked
 12546  001E20  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12547  001E22  0EFC               	movlw	high STR_105
 12548  001E24  0100               	movlb	0	; () banked
 12549  001E26  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12550  001E28  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12551  001E2C  0102               	movlb	2	; () banked
 12552  001E2E  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12553  001E30  D7CB               	goto	l15998
 12554  001E32                     l16012:
 12555                           
 12556                           ; BSR set to: 2
 12557                           ;Bluetooth.c: 899: }
 12558                           ;Bluetooth.c: 900: for(i=1; i <= 20; i++)
 12559  001E32  0E01               	movlw	1
 12560  001E34  0102               	movlb	2	; () banked
 12561  001E36  6F92               	movwf	UseBluetooth@i& (0+255),b
 12562  001E38                     l16014:
 12563                           
 12564                           ; BSR set to: 2
 12565  001E38  0E14               	movlw	20
 12566  001E3A  0102               	movlb	2	; () banked
 12567  001E3C  6592               	cpfsgt	UseBluetooth@i& (0+255),b
 12568  001E3E  D001               	goto	l16018
 12569                           
 12570                           ; BSR set to: 2
 12571  001E40  D030               	goto	l16028
 12572  001E42                     l16018:
 12573                           
 12574                           ; BSR set to: 2
 12575                           ;Bluetooth.c: 901: {
 12576                           ;Bluetooth.c: 902: cleanBuffer(buf,50);
 12577  001E42  0E0F               	movlw	low UseBluetooth@buf
 12578  001E44  0100               	movlb	0	; () banked
 12579  001E46  6F7C               	movwf	cleanBuffer@data& (0+255),b
 12580  001E48  0E02               	movlw	high UseBluetooth@buf
 12581  001E4A  0100               	movlb	0	; () banked
 12582  001E4C  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 12583  001E4E  0E00               	movlw	0
 12584  001E50  0100               	movlb	0	; () banked
 12585  001E52  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 12586  001E54  0E32               	movlw	50
 12587  001E56  6F7E               	movwf	cleanBuffer@count& (0+255),b
 12588  001E58  ECCA  F046         	call	_cleanBuffer	;wreg free
 12589                           
 12590                           ;Bluetooth.c: 903: sprintf(buf,"RemoteButton%d set",i);
 12591  001E5C  0E0F               	movlw	low UseBluetooth@buf
 12592  001E5E  0100               	movlb	0	; () banked
 12593  001E60  6FCA               	movwf	sprintf@sp& (0+255),b
 12594  001E62  0E02               	movlw	high UseBluetooth@buf
 12595  001E64  0100               	movlb	0	; () banked
 12596  001E66  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 12597  001E68  0ED5               	movlw	low STR_106
 12598  001E6A  0100               	movlb	0	; () banked
 12599  001E6C  6FCC               	movwf	sprintf@f& (0+255),b
 12600  001E6E  0EFD               	movlw	high STR_106
 12601  001E70  0100               	movlb	0	; () banked
 12602  001E72  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 12603  001E74  C292  F0CE         	movff	UseBluetooth@i,?_sprintf+4
 12604  001E78  0100               	movlb	0	; () banked
 12605  001E7A  6BCF               	clrf	(?_sprintf+5)& (0+255),b
 12606  001E7C  ECF0  F010         	call	_sprintf	;wreg free
 12607                           
 12608                           ;Bluetooth.c: 904: UARTcommandMenu(buf,(unsigned char *) "Allows saving NEC codes");
 12609  001E80  0E0F               	movlw	low UseBluetooth@buf
 12610  001E82  0100               	movlb	0	; () banked
 12611  001E84  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12612  001E86  0E02               	movlw	high UseBluetooth@buf
 12613  001E88  0100               	movlb	0	; () banked
 12614  001E8A  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12615  001E8C  0E35               	movlw	low STR_107
 12616  001E8E  0100               	movlb	0	; () banked
 12617  001E90  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12618  001E92  0EFC               	movlw	high STR_107
 12619  001E94  0100               	movlb	0	; () banked
 12620  001E96  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12621  001E98  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12622  001E9C  0102               	movlb	2	; () banked
 12623  001E9E  2B92               	incf	UseBluetooth@i& (0+255),f,b
 12624  001EA0  D7CB               	goto	l16014
 12625  001EA2                     l16028:
 12626                           
 12627                           ; BSR set to: 2
 12628                           ;Bluetooth.c: 905: }
 12629                           ;Bluetooth.c: 906: UARTcommandMenu("RF set 1,D", "Sets Remote button to send RF Config 1
      +                           channel D");
 12630  001EA2  0E2C               	movlw	low STR_108
 12631  001EA4  0100               	movlb	0	; () banked
 12632  001EA6  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12633  001EA8  0EFF               	movlw	high STR_108
 12634  001EAA  0100               	movlb	0	; () banked
 12635  001EAC  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12636  001EAE  0EEA               	movlw	low STR_109
 12637  001EB0  0100               	movlb	0	; () banked
 12638  001EB2  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12639  001EB4  0EF4               	movlw	high STR_109
 12640  001EB6  0100               	movlb	0	; () banked
 12641  001EB8  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12642  001EBA  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12643                           
 12644                           ;Bluetooth.c: 907: UARTcommandMenu("RF set 1,E", "Sets Remote button to send RF Config 1
      +                           channel E");
 12645  001EBE  0E42               	movlw	low STR_110
 12646  001EC0  0100               	movlb	0	; () banked
 12647  001EC2  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12648  001EC4  0EFF               	movlw	high STR_110
 12649  001EC6  0100               	movlb	0	; () banked
 12650  001EC8  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12651  001ECA  0E4C               	movlw	low STR_111
 12652  001ECC  0100               	movlb	0	; () banked
 12653  001ECE  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12654  001ED0  0EF5               	movlw	high STR_111
 12655  001ED2  0100               	movlb	0	; () banked
 12656  001ED4  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12657  001ED6  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12658                           
 12659                           ;Bluetooth.c: 908: UARTcommandMenu("RF set 1,F", "Sets Remote button to send RF Config 1
      +                           channel F");
 12660  001EDA  0E4D               	movlw	low STR_112
 12661  001EDC  0100               	movlb	0	; () banked
 12662  001EDE  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12663  001EE0  0EFF               	movlw	high STR_112
 12664  001EE2  0100               	movlb	0	; () banked
 12665  001EE4  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12666  001EE6  0E7D               	movlw	low STR_113
 12667  001EE8  0100               	movlb	0	; () banked
 12668  001EEA  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12669  001EEC  0EF5               	movlw	high STR_113
 12670  001EEE  0100               	movlb	0	; () banked
 12671  001EF0  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12672  001EF2  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12673                           
 12674                           ;Bluetooth.c: 909: UARTcommandMenu("RF set 2,B", "Sets Remote button to send RF Config 2
      +                           channel B");
 12675  001EF6  0E21               	movlw	low STR_114
 12676  001EF8  0100               	movlb	0	; () banked
 12677  001EFA  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12678  001EFC  0EFF               	movlw	high STR_114
 12679  001EFE  0100               	movlb	0	; () banked
 12680  001F00  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12681  001F02  0EB9               	movlw	low STR_115
 12682  001F04  0100               	movlb	0	; () banked
 12683  001F06  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12684  001F08  0EF4               	movlw	high STR_115
 12685  001F0A  0100               	movlb	0	; () banked
 12686  001F0C  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12687  001F0E  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12688                           
 12689                           ;Bluetooth.c: 910: UARTcommandMenu("RF set 2,D", "Sets Remote button to send RF Config 2
      +                           channel D");
 12690  001F12  0E37               	movlw	low STR_116
 12691  001F14  0100               	movlb	0	; () banked
 12692  001F16  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12693  001F18  0EFF               	movlw	high STR_116
 12694  001F1A  0100               	movlb	0	; () banked
 12695  001F1C  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12696  001F1E  0E1B               	movlw	low STR_117
 12697  001F20  0100               	movlb	0	; () banked
 12698  001F22  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12699  001F24  0EF5               	movlw	high STR_117
 12700  001F26  0100               	movlb	0	; () banked
 12701  001F28  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12702  001F2A  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12703                           
 12704                           ;Bluetooth.c: 911: UARTcommandMenu("RF set 2,H", "Sets Remote button to send RF Config 2
      +                           channel H");
 12705  001F2E  0E58               	movlw	low STR_118
 12706  001F30  0100               	movlb	0	; () banked
 12707  001F32  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12708  001F34  0EFF               	movlw	high STR_118
 12709  001F36  0100               	movlb	0	; () banked
 12710  001F38  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12711  001F3A  0EAE               	movlw	low STR_119
 12712  001F3C  0100               	movlb	0	; () banked
 12713  001F3E  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12714  001F40  0EF5               	movlw	high STR_119
 12715  001F42  0100               	movlb	0	; () banked
 12716  001F44  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12717  001F46  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12718                           
 12719                           ;Bluetooth.c: 912: UARTcommandMenu("RF clear 1,D", "Clears saved Button for RF Config 1 
      +                          channel D");
 12720  001F4A  0ED3               	movlw	low STR_120
 12721  001F4C  0100               	movlb	0	; () banked
 12722  001F4E  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12723  001F50  0EFE               	movlw	high STR_120
 12724  001F52  0100               	movlb	0	; () banked
 12725  001F54  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12726  001F56  0E6A               	movlw	low STR_121
 12727  001F58  0100               	movlb	0	; () banked
 12728  001F5A  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12729  001F5C  0EF6               	movlw	high STR_121
 12730  001F5E  0100               	movlb	0	; () banked
 12731  001F60  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12732  001F62  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12733                           
 12734                           ;Bluetooth.c: 913: UARTcommandMenu("RF clear 1,E", "Clears saved Button for RF Config 1 
      +                          channel E");
 12735  001F66  0EED               	movlw	low STR_122
 12736  001F68  0100               	movlb	0	; () banked
 12737  001F6A  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12738  001F6C  0EFE               	movlw	high STR_122
 12739  001F6E  0100               	movlb	0	; () banked
 12740  001F70  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12741  001F72  0EC6               	movlw	low STR_123
 12742  001F74  0100               	movlb	0	; () banked
 12743  001F76  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12744  001F78  0EF6               	movlw	high STR_123
 12745  001F7A  0100               	movlb	0	; () banked
 12746  001F7C  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12747  001F7E  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12748                           
 12749                           ;Bluetooth.c: 914: UARTcommandMenu("RF clear 1,F", "Clears saved Button for RF Config 1 
      +                          channel F");
 12750  001F82  0EFA               	movlw	low STR_124
 12751  001F84  0100               	movlb	0	; () banked
 12752  001F86  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12753  001F88  0EFE               	movlw	high STR_124
 12754  001F8A  0100               	movlb	0	; () banked
 12755  001F8C  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12756  001F8E  0EF4               	movlw	low STR_125
 12757  001F90  0100               	movlb	0	; () banked
 12758  001F92  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12759  001F94  0EF6               	movlw	high STR_125
 12760  001F96  0100               	movlb	0	; () banked
 12761  001F98  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12762  001F9A  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12763                           
 12764                           ;Bluetooth.c: 915: UARTcommandMenu("RF clear 2,B", "Clears saved Button for RF Config 2 
      +                          channel B");
 12765  001F9E  0EC6               	movlw	low STR_126
 12766  001FA0  0100               	movlb	0	; () banked
 12767  001FA2  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12768  001FA4  0EFE               	movlw	high STR_126
 12769  001FA6  0100               	movlb	0	; () banked
 12770  001FA8  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12771  001FAA  0E3C               	movlw	low STR_127
 12772  001FAC  0100               	movlb	0	; () banked
 12773  001FAE  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12774  001FB0  0EF6               	movlw	high STR_127
 12775  001FB2  0100               	movlb	0	; () banked
 12776  001FB4  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12777  001FB6  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12778                           
 12779                           ;Bluetooth.c: 916: UARTcommandMenu("RF clear 2,D", "Clears saved Button for RF Config 2 
      +                          channel D");
 12780  001FBA  0EE0               	movlw	low STR_128
 12781  001FBC  0100               	movlb	0	; () banked
 12782  001FBE  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12783  001FC0  0EFE               	movlw	high STR_128
 12784  001FC2  0100               	movlb	0	; () banked
 12785  001FC4  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12786  001FC6  0E98               	movlw	low STR_129
 12787  001FC8  0100               	movlb	0	; () banked
 12788  001FCA  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12789  001FCC  0EF6               	movlw	high STR_129
 12790  001FCE  0100               	movlb	0	; () banked
 12791  001FD0  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12792  001FD2  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12793                           
 12794                           ;Bluetooth.c: 917: UARTcommandMenu("RF clear 2,H", "Clears saved Button for RF Config 2 
      +                          channel H");
 12795  001FD6  0E07               	movlw	low STR_130
 12796  001FD8  0100               	movlb	0	; () banked
 12797  001FDA  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12798  001FDC  0EFF               	movlw	high STR_130
 12799  001FDE  0100               	movlb	0	; () banked
 12800  001FE0  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12801  001FE2  0E22               	movlw	low STR_131
 12802  001FE4  0100               	movlb	0	; () banked
 12803  001FE6  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12804  001FE8  0EF7               	movlw	high STR_131
 12805  001FEA  0100               	movlb	0	; () banked
 12806  001FEC  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12807  001FEE  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12808                           
 12809                           ;Bluetooth.c: 918: UARTcommandMenu((unsigned char *)"NEC?", (unsigned char *)"NEC descri
      +                          ption for Arbitrary code send");
 12810  001FF2  0EDC               	movlw	low STR_132
 12811  001FF4  0100               	movlb	0	; () banked
 12812  001FF6  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12813  001FF8  0EFF               	movlw	high STR_132
 12814  001FFA  0100               	movlb	0	; () banked
 12815  001FFC  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12816  001FFE  0E2C               	movlw	low STR_133
 12817  002000  0100               	movlb	0	; () banked
 12818  002002  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12819  002004  0EF8               	movlw	high STR_133
 12820  002006  0100               	movlb	0	; () banked
 12821  002008  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12822  00200A  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12823                           
 12824                           ;Bluetooth.c: 919: UARTstring(CRLN);
 12825  00200E  0EA7               	movlw	low _CRLN
 12826  002010  0100               	movlb	0	; () banked
 12827  002012  6F7D               	movwf	UARTstring@data& (0+255),b
 12828  002014  0EF3               	movlw	high _CRLN
 12829  002016  0100               	movlb	0	; () banked
 12830  002018  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 12831  00201A  ECF7  F046         	call	_UARTstring	;wreg free
 12832                           
 12833                           ;Bluetooth.c: 920: UARTstringCRLN((unsigned char *)"RF commands:");
 12834  00201E  0EAC               	movlw	low STR_134
 12835  002020  0100               	movlb	0	; () banked
 12836  002022  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 12837  002024  0EFE               	movlw	high STR_134
 12838  002026  0100               	movlb	0	; () banked
 12839  002028  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 12840  00202A  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 12841                           
 12842                           ;Bluetooth.c: 921: UARTcommandMenu(Conf1_ChannelD_STR, (unsigned char *)"RFK100LC Channe
      +                          l D");
 12843  00202E  0E2E               	movlw	low _Conf1_ChannelD_STR
 12844  002030  0100               	movlb	0	; () banked
 12845  002032  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12846  002034  0EF3               	movlw	high _Conf1_ChannelD_STR
 12847  002036  0100               	movlb	0	; () banked
 12848  002038  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12849  00203A  0E89               	movlw	low STR_135
 12850  00203C  0100               	movlb	0	; () banked
 12851  00203E  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12852  002040  0EFD               	movlw	high STR_135
 12853  002042  0100               	movlb	0	; () banked
 12854  002044  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12855  002046  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12856                           
 12857                           ;Bluetooth.c: 922: UARTcommandMenu(Conf1_ChannelE_STR, (unsigned char *)"RFK100LC Channe
      +                          l E");
 12858  00204A  0E3D               	movlw	low _Conf1_ChannelE_STR
 12859  00204C  0100               	movlb	0	; () banked
 12860  00204E  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12861  002050  0EF3               	movlw	high _Conf1_ChannelE_STR
 12862  002052  0100               	movlb	0	; () banked
 12863  002054  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12864  002056  0E9C               	movlw	low STR_136
 12865  002058  0100               	movlb	0	; () banked
 12866  00205A  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12867  00205C  0EFD               	movlw	high STR_136
 12868  00205E  0100               	movlb	0	; () banked
 12869  002060  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12870  002062  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12871                           
 12872                           ;Bluetooth.c: 923: UARTcommandMenu(Conf1_ChannelF_STR, (unsigned char *)"RFK100LC Channe
      +                          l F");
 12873  002066  0E4C               	movlw	low _Conf1_ChannelF_STR
 12874  002068  0100               	movlb	0	; () banked
 12875  00206A  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12876  00206C  0EF3               	movlw	high _Conf1_ChannelF_STR
 12877  00206E  0100               	movlb	0	; () banked
 12878  002070  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12879  002072  0EAF               	movlw	low STR_137
 12880  002074  0100               	movlb	0	; () banked
 12881  002076  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12882  002078  0EFD               	movlw	high STR_137
 12883  00207A  0100               	movlb	0	; () banked
 12884  00207C  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12885  00207E  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12886                           
 12887                           ;Bluetooth.c: 924: UARTcommandMenu(Conf2_ChannelB_ON_STR, (unsigned char *)"RFK306LC Cha
      +                          nnel B ON");
 12888  002082  0E6A               	movlw	low _Conf2_ChannelB_ON_STR
 12889  002084  0100               	movlb	0	; () banked
 12890  002086  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12891  002088  0EF2               	movlw	high _Conf2_ChannelB_ON_STR
 12892  00208A  0100               	movlb	0	; () banked
 12893  00208C  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12894  00208E  0E7B               	movlw	low STR_138
 12895  002090  0100               	movlb	0	; () banked
 12896  002092  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12897  002094  0EFC               	movlw	high STR_138
 12898  002096  0100               	movlb	0	; () banked
 12899  002098  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12900  00209A  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12901                           
 12902                           ;Bluetooth.c: 925: UARTcommandMenu(Conf2_ChannelB_OFF_STR, (unsigned char *)"RFK306LC Ch
      +                          annel B OFF");
 12903  00209E  0E44               	movlw	low _Conf2_ChannelB_OFF_STR
 12904  0020A0  0100               	movlb	0	; () banked
 12905  0020A2  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12906  0020A4  0EF2               	movlw	high _Conf2_ChannelB_OFF_STR
 12907  0020A6  0100               	movlb	0	; () banked
 12908  0020A8  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12909  0020AA  0E64               	movlw	low STR_139
 12910  0020AC  0100               	movlb	0	; () banked
 12911  0020AE  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12912  0020B0  0EFC               	movlw	high STR_139
 12913  0020B2  0100               	movlb	0	; () banked
 12914  0020B4  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12915  0020B6  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12916                           
 12917                           ;Bluetooth.c: 926: UARTcommandMenu(Conf2_ChannelD_ON_STR, (unsigned char *)"TR009 Channe
      +                          l D ON");
 12918  0020BA  0E7C               	movlw	low _Conf2_ChannelD_ON_STR
 12919  0020BC  0100               	movlb	0	; () banked
 12920  0020BE  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12921  0020C0  0EF2               	movlw	high _Conf2_ChannelD_ON_STR
 12922  0020C2  0100               	movlb	0	; () banked
 12923  0020C4  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12924  0020C6  0EC2               	movlw	low STR_140
 12925  0020C8  0100               	movlb	0	; () banked
 12926  0020CA  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12927  0020CC  0EFD               	movlw	high STR_140
 12928  0020CE  0100               	movlb	0	; () banked
 12929  0020D0  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12930  0020D2  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12931                           
 12932                           ;Bluetooth.c: 927: UARTcommandMenu(Conf2_ChannelD_OFF_STR, (unsigned char *)"TR009 Chann
      +                          el D OFF");
 12933  0020D6  0E57               	movlw	low _Conf2_ChannelD_OFF_STR
 12934  0020D8  0100               	movlb	0	; () banked
 12935  0020DA  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12936  0020DC  0EF2               	movlw	high _Conf2_ChannelD_OFF_STR
 12937  0020DE  0100               	movlb	0	; () banked
 12938  0020E0  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12939  0020E2  0E39               	movlw	low STR_141
 12940  0020E4  0100               	movlb	0	; () banked
 12941  0020E6  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12942  0020E8  0EFD               	movlw	high STR_141
 12943  0020EA  0100               	movlb	0	; () banked
 12944  0020EC  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12945  0020EE  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12946                           
 12947                           ;Bluetooth.c: 928: UARTcommandMenu(Conf2_ChannelH_1_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 1 ON");
 12948  0020F2  0E08               	movlw	low _Conf2_ChannelH_1_ON_STR
 12949  0020F4  0100               	movlb	0	; () banked
 12950  0020F6  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12951  0020F8  0EF2               	movlw	high _Conf2_ChannelH_1_ON_STR
 12952  0020FA  0100               	movlb	0	; () banked
 12953  0020FC  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12954  0020FE  0E4C               	movlw	low STR_142
 12955  002100  0100               	movlb	0	; () banked
 12956  002102  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12957  002104  0EFA               	movlw	high STR_142
 12958  002106  0100               	movlb	0	; () banked
 12959  002108  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12960  00210A  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12961                           
 12962                           ;Bluetooth.c: 929: UARTcommandMenu(Conf2_ChannelH_1_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 1 OFF");
 12963  00210E  0EC9               	movlw	low _Conf2_ChannelH_1_OFF_STR
 12964  002110  0100               	movlb	0	; () banked
 12965  002112  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12966  002114  0EF1               	movlw	high _Conf2_ChannelH_1_OFF_STR
 12967  002116  0100               	movlb	0	; () banked
 12968  002118  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12969  00211A  0E4E               	movlw	low STR_143
 12970  00211C  0100               	movlb	0	; () banked
 12971  00211E  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12972  002120  0EF9               	movlw	high STR_143
 12973  002122  0100               	movlb	0	; () banked
 12974  002124  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12975  002126  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12976                           
 12977                           ;Bluetooth.c: 930: UARTcommandMenu(Conf2_ChannelH_2_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 2 ON");
 12978  00212A  0E1C               	movlw	low _Conf2_ChannelH_2_ON_STR
 12979  00212C  0100               	movlb	0	; () banked
 12980  00212E  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12981  002130  0EF2               	movlw	high _Conf2_ChannelH_2_ON_STR
 12982  002132  0100               	movlb	0	; () banked
 12983  002134  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12984  002136  0E6B               	movlw	low STR_144
 12985  002138  0100               	movlb	0	; () banked
 12986  00213A  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 12987  00213C  0EFA               	movlw	high STR_144
 12988  00213E  0100               	movlb	0	; () banked
 12989  002140  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 12990  002142  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 12991                           
 12992                           ;Bluetooth.c: 931: UARTcommandMenu(Conf2_ChannelH_2_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 2 OFF");
 12993  002146  0EDE               	movlw	low _Conf2_ChannelH_2_OFF_STR
 12994  002148  0100               	movlb	0	; () banked
 12995  00214A  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 12996  00214C  0EF1               	movlw	high _Conf2_ChannelH_2_OFF_STR
 12997  00214E  0100               	movlb	0	; () banked
 12998  002150  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 12999  002152  0E6E               	movlw	low STR_145
 13000  002154  0100               	movlb	0	; () banked
 13001  002156  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 13002  002158  0EF9               	movlw	high STR_145
 13003  00215A  0100               	movlb	0	; () banked
 13004  00215C  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13005  00215E  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 13006                           
 13007                           ;Bluetooth.c: 932: UARTcommandMenu(Conf2_ChannelH_3_ON_STR, (unsigned char *)"RC-015*3 C
      +                          hannel H device 3 ON");
 13008  002162  0E30               	movlw	low _Conf2_ChannelH_3_ON_STR
 13009  002164  0100               	movlb	0	; () banked
 13010  002166  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 13011  002168  0EF2               	movlw	high _Conf2_ChannelH_3_ON_STR
 13012  00216A  0100               	movlb	0	; () banked
 13013  00216C  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13014  00216E  0E8A               	movlw	low STR_146
 13015  002170  0100               	movlb	0	; () banked
 13016  002172  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 13017  002174  0EFA               	movlw	high STR_146
 13018  002176  0100               	movlb	0	; () banked
 13019  002178  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13020  00217A  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 13021                           
 13022                           ;Bluetooth.c: 933: UARTcommandMenu(Conf2_ChannelH_3_OFF_STR, (unsigned char *)"RC-015*3 
      +                          Channel H device 3 OFF");
 13023  00217E  0EF3               	movlw	low _Conf2_ChannelH_3_OFF_STR
 13024  002180  0100               	movlb	0	; () banked
 13025  002182  6F7F               	movwf	UARTcommandMenu@Command& (0+255),b
 13026  002184  0EF1               	movlw	high _Conf2_ChannelH_3_OFF_STR
 13027  002186  0100               	movlb	0	; () banked
 13028  002188  6F80               	movwf	(UARTcommandMenu@Command+1)& (0+255),b
 13029  00218A  0E8E               	movlw	low STR_147
 13030  00218C  0100               	movlb	0	; () banked
 13031  00218E  6F81               	movwf	UARTcommandMenu@Desc& (0+255),b
 13032  002190  0EF9               	movlw	high STR_147
 13033  002192  0100               	movlb	0	; () banked
 13034  002194  6F82               	movwf	(UARTcommandMenu@Desc+1)& (0+255),b
 13035  002196  ECBB  F03B         	call	_UARTcommandMenu	;wreg free
 13036                           
 13037                           ;Bluetooth.c: 934: UARTstring(CRLN);
 13038  00219A  0EA7               	movlw	low _CRLN
 13039  00219C  0100               	movlb	0	; () banked
 13040  00219E  6F7D               	movwf	UARTstring@data& (0+255),b
 13041  0021A0  0EF3               	movlw	high _CRLN
 13042  0021A2  0100               	movlb	0	; () banked
 13043  0021A4  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 13044  0021A6  ECF7  F046         	call	_UARTstring	;wreg free
 13045                           
 13046                           ;Bluetooth.c: 935: }
 13047  0021AA  0012               	return	
 13048  0021AC                     l16030:
 13049                           
 13050                           ;Bluetooth.c: 936: else
 13051                           ;Bluetooth.c: 937: {
 13052                           ;Bluetooth.c: 938: UARTstringCRLN(SYNTAX_ERR);
 13053  0021AC  0E5B               	movlw	low _SYNTAX_ERR
 13054  0021AE  0100               	movlb	0	; () banked
 13055  0021B0  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 13056  0021B2  0EF3               	movlw	high _SYNTAX_ERR
 13057  0021B4  0100               	movlb	0	; () banked
 13058  0021B6  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13059  0021B8  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 13060                           
 13061                           ;Bluetooth.c: 939: UARTstringCRLN((unsigned char *)"Enter ??? for Command Menu");
 13062  0021BC  0EE9               	movlw	low STR_148
 13063  0021BE  0100               	movlb	0	; () banked
 13064  0021C0  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 13065  0021C2  0EFB               	movlw	high STR_148
 13066  0021C4  0100               	movlb	0	; () banked
 13067  0021C6  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13068  0021C8  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 13069                           
 13070                           ;Bluetooth.c: 940: UARTstring(CRLN);
 13071  0021CC  0EA7               	movlw	low _CRLN
 13072  0021CE  0100               	movlb	0	; () banked
 13073  0021D0  6F7D               	movwf	UARTstring@data& (0+255),b
 13074  0021D2  0EF3               	movlw	high _CRLN
 13075  0021D4  0100               	movlb	0	; () banked
 13076  0021D6  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 13077  0021D8  ECF7  F046         	call	_UARTstring	;wreg free
 13078                           
 13079                           ;Bluetooth.c: 941: return 0;
 13080                           ;	Return value of _UseBluetooth is never used
 13081  0021DC  0012               	return	
 13082                           
 13083                           ;Bluetooth.c: 942: }
 13084                           ;Bluetooth.c: 944: return 0;
 13085                           ;	Return value of _UseBluetooth is never used
 13086  0021DE  0012               	return		;funcret
 13087  0021E0                     __end_of_UseBluetooth:
 13088                           	opt stack 0
 13089                           tblptru	equ	0xFF8
 13090                           tblptrh	equ	0xFF7
 13091                           tblptrl	equ	0xFF6
 13092                           tablat	equ	0xFF5
 13093                           prodh	equ	0xFF4
 13094                           prodl	equ	0xFF3
 13095                           intcon	equ	0xFF2
 13096                           postinc0	equ	0xFEE
 13097                           wreg	equ	0xFE8
 13098                           postdec1	equ	0xFE5
 13099                           fsr1h	equ	0xFE2
 13100                           fsr1l	equ	0xFE1
 13101                           indf2	equ	0xFDF
 13102                           postinc2	equ	0xFDE
 13103                           fsr2h	equ	0xFDA
 13104                           fsr2l	equ	0xFD9
 13105                           status	equ	0xFD8
 13106                           
 13107 ;; *************** function _lowercaseString *****************
 13108 ;; Defined at:
 13109 ;;		line 332 in file "MISC.c"
 13110 ;; Parameters:    Size  Location     Type
 13111 ;;  Input           2   28[BANK0 ] PTR unsigned char 
 13112 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 13113 ;; Auto vars:     Size  Location     Type
 13114 ;;		None
 13115 ;; Return value:  Size  Location     Type
 13116 ;;		None               void
 13117 ;; Registers used:
 13118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13119 ;; Tracked objects:
 13120 ;;		On entry : 0/0
 13121 ;;		On exit  : 0/0
 13122 ;;		Unchanged: 0/0
 13123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13124 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13126 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13127 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13128 ;;Total ram usage:        3 bytes
 13129 ;; Hardware stack levels used:    1
 13130 ;; Hardware stack levels required when called:    6
 13131 ;; This function calls:
 13132 ;;		Nothing
 13133 ;; This function is called by:
 13134 ;;		_UseBluetooth
 13135 ;; This function uses a non-reentrant model
 13136 ;;
 13137                           
 13138                           	psect	text6
 13139  0090C4                     __ptext6:
 13140                           	opt stack 0
 13141  0090C4                     _lowercaseString:
 13142                           	opt stack 23
 13143                           
 13144                           ;MISC.c: 334: while((*Input != 0))
 13145                           
 13146                           ;incstack = 0
 13147  0090C4  D019               	goto	l14624
 13148  0090C6                     l14616:
 13149                           
 13150                           ;MISC.c: 335: {
 13151                           ;MISC.c: 336: if((*Input >= 65) && (*Input <= 90 ))
 13152  0090C6  C07C  FFD9         	movff	lowercaseString@Input,fsr2l
 13153  0090CA  C07D  FFDA         	movff	lowercaseString@Input+1,fsr2h
 13154  0090CE  0E40               	movlw	64
 13155  0090D0  64DF               	cpfsgt	indf2,c
 13156  0090D2  D00E               	goto	l14622
 13157  0090D4  C07C  FFD9         	movff	lowercaseString@Input,fsr2l
 13158  0090D8  C07D  FFDA         	movff	lowercaseString@Input+1,fsr2h
 13159  0090DC  0E5B               	movlw	91
 13160  0090DE  60DF               	cpfslt	indf2,c
 13161  0090E0  D007               	goto	l14622
 13162                           
 13163                           ;MISC.c: 337: {
 13164                           ;MISC.c: 338: *Input += 32;
 13165  0090E2  C07C  FFD9         	movff	lowercaseString@Input,fsr2l
 13166  0090E6  C07D  FFDA         	movff	lowercaseString@Input+1,fsr2h
 13167  0090EA  0E20               	movlw	32
 13168  0090EC  26DF               	addwf	indf2,f,c
 13169  0090EE  D000               	goto	l14622
 13170  0090F0                     l14622:
 13171                           
 13172                           ;MISC.c: 339: }
 13173                           ;MISC.c: 340: Input++;
 13174  0090F0  0100               	movlb	0	; () banked
 13175  0090F2  4B7C               	infsnz	lowercaseString@Input& (0+255),f,b
 13176  0090F4  2B7D               	incf	(lowercaseString@Input+1)& (0+255),f,b
 13177  0090F6  D000               	goto	l14624
 13178  0090F8                     l14624:
 13179  0090F8  C07C  FFD9         	movff	lowercaseString@Input,fsr2l
 13180  0090FC  C07D  FFDA         	movff	lowercaseString@Input+1,fsr2h
 13181  009100  50DF               	movf	indf2,w,c
 13182  009102  A4D8               	btfss	status,2,c
 13183  009104  D7E0               	goto	l14616
 13184  009106  0012               	return		;funcret
 13185  009108                     __end_of_lowercaseString:
 13186                           	opt stack 0
 13187                           tblptru	equ	0xFF8
 13188                           tblptrh	equ	0xFF7
 13189                           tblptrl	equ	0xFF6
 13190                           tablat	equ	0xFF5
 13191                           prodh	equ	0xFF4
 13192                           prodl	equ	0xFF3
 13193                           intcon	equ	0xFF2
 13194                           postinc0	equ	0xFEE
 13195                           wreg	equ	0xFE8
 13196                           postdec1	equ	0xFE5
 13197                           fsr1h	equ	0xFE2
 13198                           fsr1l	equ	0xFE1
 13199                           indf2	equ	0xFDF
 13200                           postinc2	equ	0xFDE
 13201                           fsr2h	equ	0xFDA
 13202                           fsr2l	equ	0xFD9
 13203                           status	equ	0xFD8
 13204                           
 13205 ;; *************** function _WaitForIRsignal *****************
 13206 ;; Defined at:
 13207 ;;		line 952 in file "Bluetooth.c"
 13208 ;; Parameters:    Size  Location     Type
 13209 ;;		None
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;  timeout         1   37[BANK0 ] unsigned char 
 13212 ;; Return value:  Size  Location     Type
 13213 ;;                  1    wreg      unsigned char 
 13214 ;; Registers used:
 13215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13216 ;; Tracked objects:
 13217 ;;		On entry : 0/0
 13218 ;;		On exit  : 0/0
 13219 ;;		Unchanged: 0/0
 13220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13224 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13225 ;;Total ram usage:        1 bytes
 13226 ;; Hardware stack levels used:    1
 13227 ;; Hardware stack levels required when called:    9
 13228 ;; This function calls:
 13229 ;;		_LEDTimerON
 13230 ;;		_UARTchar
 13231 ;;		_UARTstring
 13232 ;;		_UARTstringCRLN
 13233 ;;		_delayUS
 13234 ;; This function is called by:
 13235 ;;		_UseBluetooth
 13236 ;; This function uses a non-reentrant model
 13237 ;;
 13238                           
 13239                           	psect	text7
 13240  00873A                     __ptext7:
 13241                           	opt stack 0
 13242  00873A                     _WaitForIRsignal:
 13243                           	opt stack 20
 13244                           
 13245                           ;Bluetooth.c: 954: unsigned char timeout = 0;
 13246                           
 13247                           ;incstack = 0
 13248  00873A  0E00               	movlw	0
 13249  00873C  0100               	movlb	0	; () banked
 13250  00873E  6F85               	movwf	WaitForIRsignal@timeout& (0+255),b
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;Bluetooth.c: 956: UARTstring(CRLN);
 13254  008740  0EA7               	movlw	low _CRLN
 13255  008742  0100               	movlb	0	; () banked
 13256  008744  6F7D               	movwf	UARTstring@data& (0+255),b
 13257  008746  0EF3               	movlw	high _CRLN
 13258  008748  0100               	movlb	0	; () banked
 13259  00874A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 13260  00874C  ECF7  F046         	call	_UARTstring	;wreg free
 13261                           
 13262                           ;Bluetooth.c: 957: UARTstring((unsigned char *)"Press Remote Control button");
 13263  008750  0EB2               	movlw	low STR_149
 13264  008752  0100               	movlb	0	; () banked
 13265  008754  6F7D               	movwf	UARTstring@data& (0+255),b
 13266  008756  0EFB               	movlw	high STR_149
 13267  008758  0100               	movlb	0	; () banked
 13268  00875A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 13269  00875C  ECF7  F046         	call	_UARTstring	;wreg free
 13270                           
 13271                           ;Bluetooth.c: 958: timeout = 0;
 13272  008760  0E00               	movlw	0
 13273  008762  0100               	movlb	0	; () banked
 13274  008764  6F85               	movwf	WaitForIRsignal@timeout& (0+255),b
 13275                           
 13276                           ;Bluetooth.c: 959: while(IR_New_Code != 1)
 13277  008766  D027               	goto	l15148
 13278  008768                     l15134:
 13279                           
 13280                           ; BSR set to: 0
 13281                           ;Bluetooth.c: 960: {
 13282                           ;Bluetooth.c: 961: UARTchar('.');
 13283  008768  0E2E               	movlw	46
 13284  00876A  ECE3  F049         	call	_UARTchar
 13285                           
 13286                           ;Bluetooth.c: 962: delayUS(300000);
 13287  00876E  0EE0               	movlw	224
 13288  008770  0100               	movlb	0	; () banked
 13289  008772  6F7C               	movwf	delayUS@US& (0+255),b
 13290  008774  0E93               	movlw	147
 13291  008776  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 13292  008778  0E04               	movlw	4
 13293  00877A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 13294  00877C  0E00               	movlw	0
 13295  00877E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 13296  008780  EC7B  F047         	call	_delayUS	;wreg free
 13297                           
 13298                           ;Bluetooth.c: 963: timeout++;
 13299  008784  0100               	movlb	0	; () banked
 13300  008786  2B85               	incf	WaitForIRsignal@timeout& (0+255),f,b
 13301                           
 13302                           ; BSR set to: 0
 13303                           ;Bluetooth.c: 964: if(timeout > 25)
 13304  008788  0E19               	movlw	25
 13305  00878A  0100               	movlb	0	; () banked
 13306  00878C  6585               	cpfsgt	WaitForIRsignal@timeout& (0+255),b
 13307  00878E  D013               	goto	l15148
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;Bluetooth.c: 965: {
 13311                           ;Bluetooth.c: 966: UARTstring(CRLN);
 13312  008790  0EA7               	movlw	low _CRLN
 13313  008792  0100               	movlb	0	; () banked
 13314  008794  6F7D               	movwf	UARTstring@data& (0+255),b
 13315  008796  0EF3               	movlw	high _CRLN
 13316  008798  0100               	movlb	0	; () banked
 13317  00879A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 13318  00879C  ECF7  F046         	call	_UARTstring	;wreg free
 13319                           
 13320                           ;Bluetooth.c: 967: UARTstringCRLN((unsigned char *)"Error: No remote button was pressed"
      +                          );
 13321  0087A0  0EC3               	movlw	low STR_150
 13322  0087A2  0100               	movlb	0	; () banked
 13323  0087A4  6F7F               	movwf	UARTstringCRLN@data& (0+255),b
 13324  0087A6  0EF8               	movlw	high STR_150
 13325  0087A8  0100               	movlb	0	; () banked
 13326  0087AA  6F80               	movwf	(UARTstringCRLN@data+1)& (0+255),b
 13327  0087AC  EC9C  F045         	call	_UARTstringCRLN	;wreg free
 13328                           
 13329                           ;Bluetooth.c: 968: return 0;
 13330  0087B0  0E00               	movlw	0
 13331  0087B2  0012               	return	
 13332  0087B4  D000               	goto	l15148
 13333  0087B6                     l15148:
 13334  0087B6  0100               	movlb	0	; () banked
 13335  0087B8  05E1               	decf	_IR_New_Code& (0+255),w,b
 13336  0087BA  A4D8               	btfss	status,2,c
 13337  0087BC  D7D5               	goto	l15134
 13338                           
 13339                           ; BSR set to: 0
 13340                           ;Bluetooth.c: 969: }
 13341                           ;Bluetooth.c: 970: }
 13342                           ;Bluetooth.c: 971: (LATC |= 0x04);
 13343                           
 13344                           ; BSR set to: 0
 13345  0087BE  848B               	bsf	3979,2,c	;volatile
 13346                           
 13347                           ; BSR set to: 0
 13348                           ;Bluetooth.c: 972: LEDTimerON();
 13349  0087C0  EC59  F04A         	call	_LEDTimerON	;wreg free
 13350                           
 13351                           ;Bluetooth.c: 973: return 1;
 13352  0087C4  0E01               	movlw	1
 13353  0087C6  0012               	return	
 13354  0087C8  0012               	return		;funcret
 13355  0087CA                     __end_of_WaitForIRsignal:
 13356                           	opt stack 0
 13357                           tblptru	equ	0xFF8
 13358                           tblptrh	equ	0xFF7
 13359                           tblptrl	equ	0xFF6
 13360                           tablat	equ	0xFF5
 13361                           prodh	equ	0xFF4
 13362                           prodl	equ	0xFF3
 13363                           intcon	equ	0xFF2
 13364                           postinc0	equ	0xFEE
 13365                           wreg	equ	0xFE8
 13366                           postdec1	equ	0xFE5
 13367                           fsr1h	equ	0xFE2
 13368                           fsr1l	equ	0xFE1
 13369                           indf2	equ	0xFDF
 13370                           postinc2	equ	0xFDE
 13371                           fsr2h	equ	0xFDA
 13372                           fsr2l	equ	0xFD9
 13373                           status	equ	0xFD8
 13374                           
 13375 ;; *************** function _UARTstringCRLN *****************
 13376 ;; Defined at:
 13377 ;;		line 262 in file "UART.c"
 13378 ;; Parameters:    Size  Location     Type
 13379 ;;  data            2   31[BANK0 ] PTR unsigned char 
 13380 ;;		 -> STR_150(36), STR_148(27), STR_134(13), STR_103(13), 
 13381 ;;		 -> STR_100(21), STR_93(17), STR_90(5), STR_82(29), 
 13382 ;;		 -> STR_81(18), STR_80(29), STR_77(44), STR_72(46), 
 13383 ;;		 -> STR_71(42), STR_70(50), STR_69(50), STR_67(31), 
 13384 ;;		 -> STR_66(31), STR_65(37), STR_64(37), STR_63(37), 
 13385 ;;		 -> STR_59(18), STR_58(14), STR_57(9), STR_56(20), 
 13386 ;;		 -> STR_55(16), STR_54(7), STR_53(35), STR_52(37), 
 13387 ;;		 -> STR_49(47), STR_44(17), STR_43(9), STR_42(18), 
 13388 ;;		 -> STR_41(9), STR_40(22), STR_39(11), STR_38(20), 
 13389 ;;		 -> STR_37(7), STR_36(31), STR_34(33), STR_30(32), 
 13390 ;;		 -> STR_26(31), STR_25(31), STR_23(29), STR_21(29), 
 13391 ;;		 -> SYNTAX_ERR(14), UseBluetooth@buf(100), STR_1(16), ProjectName(26), 
 13392 ;; Auto vars:     Size  Location     Type
 13393 ;;		None
 13394 ;; Return value:  Size  Location     Type
 13395 ;;		None               void
 13396 ;; Registers used:
 13397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13398 ;; Tracked objects:
 13399 ;;		On entry : 0/0
 13400 ;;		On exit  : 0/0
 13401 ;;		Unchanged: 0/0
 13402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13403 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13406 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13407 ;;Total ram usage:        2 bytes
 13408 ;; Hardware stack levels used:    1
 13409 ;; Hardware stack levels required when called:    8
 13410 ;; This function calls:
 13411 ;;		_UARTchar
 13412 ;;		_UARTstring
 13413 ;; This function is called by:
 13414 ;;		_main
 13415 ;;		_UseBluetooth
 13416 ;;		_WaitForIRsignal
 13417 ;; This function uses a non-reentrant model
 13418 ;;
 13419                           
 13420                           	psect	text8
 13421  008B38                     __ptext8:
 13422                           	opt stack 0
 13423  008B38                     _UARTstringCRLN:
 13424                           	opt stack 20
 13425                           
 13426                           ;UART.c: 264: while(*data != 0)
 13427                           
 13428                           ;incstack = 0
 13429  008B38  D017               	goto	l13782
 13430  008B3A                     l13778:
 13431                           
 13432                           ;UART.c: 265: {
 13433                           ;UART.c: 266: UARTchar(*data);
 13434  008B3A  C07F  FFF6         	movff	UARTstringCRLN@data,tblptrl
 13435  008B3E  C080  FFF7         	movff	UARTstringCRLN@data+1,tblptrh
 13436  008B42  0E00               	movlw	low (__mediumconst shr (0+16))
 13437  008B44  6EF8               	movwf	tblptru,c
 13438  008B46  0E0F               	movlw	(high __ramtop+-1)
 13439  008B48  64F7               	cpfsgt	tblptrh,c
 13440  008B4A  D003               	bra	u16907
 13441  008B4C  0008               	tblrd		*
 13442  008B4E  50F5               	movf	tablat,w,c
 13443  008B50  D005               	bra	u16900
 13444  008B52                     u16907:
 13445  008B52  CFF6 FFE9          	movff	tblptrl,fsr0l
 13446  008B56  CFF7 FFEA          	movff	tblptrh,fsr0h
 13447  008B5A  50EF               	movf	indf0,w,c
 13448  008B5C                     u16900:
 13449  008B5C  ECE3  F049         	call	_UARTchar
 13450                           
 13451                           ;UART.c: 267: *data++;
 13452  008B60  0100               	movlb	0	; () banked
 13453  008B62  4B7F               	infsnz	UARTstringCRLN@data& (0+255),f,b
 13454  008B64  2B80               	incf	(UARTstringCRLN@data+1)& (0+255),f,b
 13455  008B66  D000               	goto	l13782
 13456  008B68                     l13782:
 13457  008B68  C07F  FFF6         	movff	UARTstringCRLN@data,tblptrl
 13458  008B6C  C080  FFF7         	movff	UARTstringCRLN@data+1,tblptrh
 13459  008B70  0E00               	movlw	low (__mediumconst shr (0+16))
 13460  008B72  6EF8               	movwf	tblptru,c
 13461  008B74  0E0F               	movlw	(high __ramtop+-1)
 13462  008B76  64F7               	cpfsgt	tblptrh,c
 13463  008B78  D003               	bra	u16917
 13464  008B7A  0008               	tblrd		*
 13465  008B7C  50F5               	movf	tablat,w,c
 13466  008B7E  D005               	bra	u16910
 13467  008B80                     u16917:
 13468  008B80  CFF6 FFE9          	movff	tblptrl,fsr0l
 13469  008B84  CFF7 FFEA          	movff	tblptrh,fsr0h
 13470  008B88  50EF               	movf	indf0,w,c
 13471  008B8A                     u16910:
 13472  008B8A  0900               	iorlw	0
 13473  008B8C  A4D8               	btfss	status,2,c
 13474  008B8E  D7D5               	goto	l13778
 13475                           
 13476                           ;UART.c: 268: }
 13477                           ;UART.c: 269: UARTstring(CRLN);
 13478  008B90  0EA7               	movlw	low _CRLN
 13479  008B92  0100               	movlb	0	; () banked
 13480  008B94  6F7D               	movwf	UARTstring@data& (0+255),b
 13481  008B96  0EF3               	movlw	high _CRLN
 13482  008B98  0100               	movlb	0	; () banked
 13483  008B9A  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 13484  008B9C  ECF7  F046         	call	_UARTstring	;wreg free
 13485  008BA0  0012               	return		;funcret
 13486  008BA2                     __end_of_UARTstringCRLN:
 13487                           	opt stack 0
 13488                           tblptru	equ	0xFF8
 13489                           tblptrh	equ	0xFF7
 13490                           tblptrl	equ	0xFF6
 13491                           tablat	equ	0xFF5
 13492                           prodh	equ	0xFF4
 13493                           prodl	equ	0xFF3
 13494                           intcon	equ	0xFF2
 13495                           indf0	equ	0xFEF
 13496                           postinc0	equ	0xFEE
 13497                           fsr0h	equ	0xFEA
 13498                           fsr0l	equ	0xFE9
 13499                           wreg	equ	0xFE8
 13500                           postdec1	equ	0xFE5
 13501                           fsr1h	equ	0xFE2
 13502                           fsr1l	equ	0xFE1
 13503                           indf2	equ	0xFDF
 13504                           postinc2	equ	0xFDE
 13505                           fsr2h	equ	0xFDA
 13506                           fsr2l	equ	0xFD9
 13507                           status	equ	0xFD8
 13508                           
 13509 ;; *************** function _UARTcommandMenu *****************
 13510 ;; Defined at:
 13511 ;;		line 277 in file "UART.c"
 13512 ;; Parameters:    Size  Location     Type
 13513 ;;  Command         2   31[BANK0 ] PTR unsigned char 
 13514 ;;		 -> STR_132(5), STR_130(13), STR_128(13), STR_126(13), 
 13515 ;;		 -> STR_124(13), STR_122(13), STR_120(13), STR_118(11), 
 13516 ;;		 -> STR_116(11), STR_114(11), STR_112(11), STR_110(11), 
 13517 ;;		 -> STR_108(11), STR_101(8), STR_98(8), STR_96(6), 
 13518 ;;		 -> STR_94(4), Conf2_ChannelH_3_OFF_STR(21), Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), 
 13519 ;;		 -> Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR(21), Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(1
      +9), 
 13520 ;;		 -> Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), 
 13521 ;;		 -> Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), UseBluetooth@buf(100), 
 13522 ;;  Desc            2   33[BANK0 ] PTR unsigned char 
 13523 ;;		 -> STR_147(32), STR_146(31), STR_145(32), STR_144(31), 
 13524 ;;		 -> STR_143(32), STR_142(31), STR_141(20), STR_140(19), 
 13525 ;;		 -> STR_139(23), STR_138(22), STR_137(19), STR_136(19), 
 13526 ;;		 -> STR_135(19), STR_133(40), STR_131(46), STR_129(46), 
 13527 ;;		 -> STR_127(46), STR_125(46), STR_123(46), STR_121(46), 
 13528 ;;		 -> STR_119(49), STR_117(49), STR_115(49), STR_113(49), 
 13529 ;;		 -> STR_111(49), STR_109(49), STR_107(24), STR_105(25), 
 13530 ;;		 -> STR_102(28), STR_99(35), STR_97(32), STR_95(10), 
 13531 ;; Auto vars:     Size  Location     Type
 13532 ;;  place           1   41[BANK0 ] unsigned char 
 13533 ;;  i               1   40[BANK0 ] unsigned char 
 13534 ;; Return value:  Size  Location     Type
 13535 ;;		None               void
 13536 ;; Registers used:
 13537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13538 ;; Tracked objects:
 13539 ;;		On entry : 0/0
 13540 ;;		On exit  : 0/0
 13541 ;;		Unchanged: 0/0
 13542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13543 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13544 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13545 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13546 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13547 ;;Total ram usage:       11 bytes
 13548 ;; Hardware stack levels used:    1
 13549 ;; Hardware stack levels required when called:    8
 13550 ;; This function calls:
 13551 ;;		_UARTchar
 13552 ;;		_UARTstring
 13553 ;; This function is called by:
 13554 ;;		_UseBluetooth
 13555 ;; This function uses a non-reentrant model
 13556 ;;
 13557                           
 13558                           	psect	text9
 13559  007776                     __ptext9:
 13560                           	opt stack 0
 13561  007776                     _UARTcommandMenu:
 13562                           	opt stack 21
 13563                           
 13564                           ;UART.c: 279: unsigned char place = 0;
 13565                           
 13566                           ;incstack = 0
 13567  007776  0E00               	movlw	0
 13568  007778  0100               	movlb	0	; () banked
 13569  00777A  6F89               	movwf	UARTcommandMenu@place& (0+255),b
 13570                           
 13571                           ;UART.c: 280: unsigned char i;
 13572                           ;UART.c: 282: while((*Command != 0) && (place < 30))
 13573  00777C  D019               	goto	l14936
 13574  00777E                     l14930:
 13575                           
 13576                           ; BSR set to: 0
 13577                           ;UART.c: 283: {
 13578                           ;UART.c: 284: UARTchar(*Command);
 13579  00777E  C07F  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 13580  007782  C080  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 13581  007786  0E00               	movlw	low (__mediumconst shr (0+16))
 13582  007788  6EF8               	movwf	tblptru,c
 13583  00778A  0E0F               	movlw	(high __ramtop+-1)
 13584  00778C  64F7               	cpfsgt	tblptrh,c
 13585  00778E  D003               	bra	u18627
 13586  007790  0008               	tblrd		*
 13587  007792  50F5               	movf	tablat,w,c
 13588  007794  D005               	bra	u18620
 13589  007796                     u18627:
 13590  007796  CFF6 FFE9          	movff	tblptrl,fsr0l
 13591  00779A  CFF7 FFEA          	movff	tblptrh,fsr0h
 13592  00779E  50EF               	movf	indf0,w,c
 13593  0077A0                     u18620:
 13594  0077A0  ECE3  F049         	call	_UARTchar
 13595                           
 13596                           ;UART.c: 285: *Command++;
 13597  0077A4  0100               	movlb	0	; () banked
 13598  0077A6  4B7F               	infsnz	UARTcommandMenu@Command& (0+255),f,b
 13599  0077A8  2B80               	incf	(UARTcommandMenu@Command+1)& (0+255),f,b
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;UART.c: 286: place++;
 13603  0077AA  0100               	movlb	0	; () banked
 13604  0077AC  2B89               	incf	UARTcommandMenu@place& (0+255),f,b
 13605  0077AE  D000               	goto	l14936
 13606  0077B0                     l14936:
 13607                           
 13608                           ; BSR set to: 0
 13609  0077B0  C07F  FFF6         	movff	UARTcommandMenu@Command,tblptrl
 13610  0077B4  C080  FFF7         	movff	UARTcommandMenu@Command+1,tblptrh
 13611  0077B8  0E00               	movlw	low (__mediumconst shr (0+16))
 13612  0077BA  6EF8               	movwf	tblptru,c
 13613  0077BC  0E0F               	movlw	(high __ramtop+-1)
 13614  0077BE  64F7               	cpfsgt	tblptrh,c
 13615  0077C0  D003               	bra	u18637
 13616  0077C2  0008               	tblrd		*
 13617  0077C4  50F5               	movf	tablat,w,c
 13618  0077C6  D005               	bra	u18630
 13619  0077C8                     u18637:
 13620  0077C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 13621  0077CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 13622  0077D0  50EF               	movf	indf0,w,c
 13623  0077D2                     u18630:
 13624  0077D2  0900               	iorlw	0
 13625  0077D4  B4D8               	btfsc	status,2,c
 13626  0077D6  D005               	goto	l14940
 13627  0077D8  0E1D               	movlw	29
 13628  0077DA  0100               	movlb	0	; () banked
 13629  0077DC  6589               	cpfsgt	UARTcommandMenu@place& (0+255),b
 13630  0077DE  D7CF               	goto	l14930
 13631                           
 13632                           ; BSR set to: 0
 13633  0077E0  D000               	goto	l14940
 13634  0077E2                     l14940:
 13635                           
 13636                           ;UART.c: 287: }
 13637                           ;UART.c: 288: for(i =0; i < ((30 - place) + 1); i++)
 13638  0077E2  0E00               	movlw	0
 13639  0077E4  0100               	movlb	0	; () banked
 13640  0077E6  6F88               	movwf	UARTcommandMenu@i& (0+255),b
 13641  0077E8  D006               	goto	l14946
 13642  0077EA                     l14942:
 13643                           
 13644                           ; BSR set to: 0
 13645                           ;UART.c: 289: {
 13646                           ;UART.c: 290: UARTchar('-');
 13647  0077EA  0E2D               	movlw	45
 13648  0077EC  ECE3  F049         	call	_UARTchar
 13649  0077F0  0100               	movlb	0	; () banked
 13650  0077F2  2B88               	incf	UARTcommandMenu@i& (0+255),f,b
 13651  0077F4  D000               	goto	l14946
 13652  0077F6                     l14946:
 13653                           
 13654                           ; BSR set to: 0
 13655  0077F6  0100               	movlb	0	; () banked
 13656  0077F8  5189               	movf	UARTcommandMenu@place& (0+255),w,b
 13657  0077FA  0100               	movlb	0	; () banked
 13658  0077FC  6F83               	movwf	??_UARTcommandMenu& (0+255),b
 13659  0077FE  6B84               	clrf	(??_UARTcommandMenu+1)& (0+255),b
 13660  007800  0100               	movlb	0	; () banked
 13661  007802  1F83               	comf	??_UARTcommandMenu& (0+255),f,b
 13662  007804  1F84               	comf	(??_UARTcommandMenu+1)& (0+255),f,b
 13663  007806  4B83               	infsnz	??_UARTcommandMenu& (0+255),f,b
 13664  007808  2B84               	incf	(??_UARTcommandMenu+1)& (0+255),f,b
 13665  00780A  0E1F               	movlw	31
 13666  00780C  0100               	movlb	0	; () banked
 13667  00780E  2783               	addwf	??_UARTcommandMenu& (0+255),f,b
 13668  007810  0E00               	movlw	0
 13669  007812  2384               	addwfc	(??_UARTcommandMenu+1)& (0+255),f,b
 13670  007814  0100               	movlb	0	; () banked
 13671  007816  5188               	movf	UARTcommandMenu@i& (0+255),w,b
 13672  007818  0100               	movlb	0	; () banked
 13673  00781A  6F85               	movwf	(??_UARTcommandMenu+2)& (0+255),b
 13674  00781C  6B86               	clrf	(??_UARTcommandMenu+3)& (0+255),b
 13675  00781E  0100               	movlb	0	; () banked
 13676  007820  5183               	movf	??_UARTcommandMenu& (0+255),w,b
 13677  007822  0100               	movlb	0	; () banked
 13678  007824  5D85               	subwf	(??_UARTcommandMenu+2)& (0+255),w,b
 13679  007826  0100               	movlb	0	; () banked
 13680  007828  5186               	movf	(??_UARTcommandMenu+3)& (0+255),w,b
 13681  00782A  0A80               	xorlw	128
 13682  00782C  0100               	movlb	0	; () banked
 13683  00782E  6F87               	movwf	(??_UARTcommandMenu+4)& (0+255),b
 13684  007830  0100               	movlb	0	; () banked
 13685  007832  5184               	movf	(??_UARTcommandMenu+1)& (0+255),w,b
 13686  007834  0A80               	xorlw	128
 13687  007836  0100               	movlb	0	; () banked
 13688  007838  5987               	subwfb	(??_UARTcommandMenu+4)& (0+255),w,b
 13689  00783A  A0D8               	btfss	status,0,c
 13690  00783C  D7D6               	goto	l14942
 13691                           
 13692                           ; BSR set to: 0
 13693                           ;UART.c: 291: }
 13694                           ;UART.c: 292: place = 0;
 13695                           
 13696                           ; BSR set to: 0
 13697  00783E  0E00               	movlw	0
 13698  007840  0100               	movlb	0	; () banked
 13699  007842  6F89               	movwf	UARTcommandMenu@place& (0+255),b
 13700                           
 13701                           ;UART.c: 293: while((*Desc != 0) && (place < (50 - 1)))
 13702  007844  D00F               	goto	l14956
 13703  007846                     l14950:
 13704                           
 13705                           ; BSR set to: 0
 13706                           ;UART.c: 294: {
 13707                           ;UART.c: 295: UARTchar(*Desc);
 13708  007846  C081  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 13709  00784A  C082  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 13710  00784E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13711  00784E  6AF8               	clrf	tblptru,c
 13712  007850                     	endif
 13713  007850                     	if	0	;tblptru may be non-zero
 13714  007850                     	endif
 13715  007850  0008               	tblrd		*
 13716  007852  50F5               	movf	tablat,w,c
 13717  007854  ECE3  F049         	call	_UARTchar
 13718                           
 13719                           ;UART.c: 296: *Desc++;
 13720  007858  0100               	movlb	0	; () banked
 13721  00785A  4B81               	infsnz	UARTcommandMenu@Desc& (0+255),f,b
 13722  00785C  2B82               	incf	(UARTcommandMenu@Desc+1)& (0+255),f,b
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;UART.c: 297: place++;
 13726  00785E  0100               	movlb	0	; () banked
 13727  007860  2B89               	incf	UARTcommandMenu@place& (0+255),f,b
 13728  007862  D000               	goto	l14956
 13729  007864                     l14956:
 13730                           
 13731                           ; BSR set to: 0
 13732  007864  C081  FFF6         	movff	UARTcommandMenu@Desc,tblptrl
 13733  007868  C082  FFF7         	movff	UARTcommandMenu@Desc+1,tblptrh
 13734  00786C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13735  00786C  6AF8               	clrf	tblptru,c
 13736  00786E                     	endif
 13737  00786E                     	if	0	;tblptru may be non-zero
 13738  00786E                     	endif
 13739  00786E  0008               	tblrd		*
 13740  007870  50F5               	movf	tablat,w,c
 13741  007872  0900               	iorlw	0
 13742  007874  B4D8               	btfsc	status,2,c
 13743  007876  D005               	goto	l14960
 13744                           
 13745                           ; BSR set to: 0
 13746  007878  0E30               	movlw	48
 13747  00787A  0100               	movlb	0	; () banked
 13748  00787C  6589               	cpfsgt	UARTcommandMenu@place& (0+255),b
 13749  00787E  D7E3               	goto	l14950
 13750                           
 13751                           ; BSR set to: 0
 13752  007880  D000               	goto	l14960
 13753  007882                     l14960:
 13754                           
 13755                           ; BSR set to: 0
 13756                           ;UART.c: 298: }
 13757                           ;UART.c: 299: UARTstring(CRLN);
 13758  007882  0EA7               	movlw	low _CRLN
 13759  007884  0100               	movlb	0	; () banked
 13760  007886  6F7D               	movwf	UARTstring@data& (0+255),b
 13761  007888  0EF3               	movlw	high _CRLN
 13762  00788A  0100               	movlb	0	; () banked
 13763  00788C  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 13764  00788E  ECF7  F046         	call	_UARTstring	;wreg free
 13765  007892  0012               	return		;funcret
 13766  007894                     __end_of_UARTcommandMenu:
 13767                           	opt stack 0
 13768                           tblptru	equ	0xFF8
 13769                           tblptrh	equ	0xFF7
 13770                           tblptrl	equ	0xFF6
 13771                           tablat	equ	0xFF5
 13772                           prodh	equ	0xFF4
 13773                           prodl	equ	0xFF3
 13774                           intcon	equ	0xFF2
 13775                           indf0	equ	0xFEF
 13776                           postinc0	equ	0xFEE
 13777                           fsr0h	equ	0xFEA
 13778                           fsr0l	equ	0xFE9
 13779                           wreg	equ	0xFE8
 13780                           postdec1	equ	0xFE5
 13781                           fsr1h	equ	0xFE2
 13782                           fsr1l	equ	0xFE1
 13783                           indf2	equ	0xFDF
 13784                           postinc2	equ	0xFDE
 13785                           fsr2h	equ	0xFDA
 13786                           fsr2l	equ	0xFD9
 13787                           status	equ	0xFD8
 13788                           
 13789 ;; *************** function _StringMatchCaseInsensitive *****************
 13790 ;; Defined at:
 13791 ;;		line 217 in file "MISC.c"
 13792 ;; Parameters:    Size  Location     Type
 13793 ;;  This            2   31[BANK0 ] PTR unsigned char 
 13794 ;;		 -> main@BluetoothString(255), 
 13795 ;;  That            2   33[BANK0 ] PTR const unsigned char 
 13796 ;;		 -> STR_85(8), STR_83(8), STR_78(6), Conf2_ChannelH_3_OFF_STR(21), 
 13797 ;;		 -> Conf2_ChannelH_3_ON_STR(20), Conf2_ChannelH_2_OFF_STR(21), Conf2_ChannelH_2_ON_STR(20), Conf2_ChannelH_1_OFF_STR
      +(21), 
 13798 ;;		 -> Conf2_ChannelH_1_ON_STR(20), Conf2_ChannelD_OFF_STR(19), Conf2_ChannelD_ON_STR(18), Conf2_ChannelB_OFF_STR(19), 
 13799 ;;		 -> Conf2_ChannelB_ON_STR(18), Conf1_ChannelF_STR(15), Conf1_ChannelE_STR(15), Conf1_ChannelD_STR(15), 
 13800 ;; Auto vars:     Size  Location     Type
 13801 ;;  tempThat        1   36[BANK0 ] unsigned char 
 13802 ;;  tempThis        1   35[BANK0 ] unsigned char 
 13803 ;; Return value:  Size  Location     Type
 13804 ;;                  1    wreg      unsigned char 
 13805 ;; Registers used:
 13806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13807 ;; Tracked objects:
 13808 ;;		On entry : 0/0
 13809 ;;		On exit  : 0/0
 13810 ;;		Unchanged: 0/0
 13811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13812 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13813 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13815 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13816 ;;Total ram usage:        6 bytes
 13817 ;; Hardware stack levels used:    1
 13818 ;; Hardware stack levels required when called:    7
 13819 ;; This function calls:
 13820 ;;		_lowercaseChar
 13821 ;; This function is called by:
 13822 ;;		_UseBluetooth
 13823 ;; This function uses a non-reentrant model
 13824 ;;
 13825                           
 13826                           	psect	text10
 13827  0086A6                     __ptext10:
 13828                           	opt stack 0
 13829  0086A6                     _StringMatchCaseInsensitive:
 13830                           	opt stack 22
 13831                           
 13832                           ;MISC.c: 219: unsigned char tempThis,
 13833                           ;MISC.c: 220: tempThat;
 13834                           ;MISC.c: 222: while(*This != 0)
 13835                           
 13836                           ;incstack = 0
 13837  0086A6  D033               	goto	l14560
 13838  0086A8                     l14542:
 13839                           
 13840                           ;MISC.c: 223: {
 13841                           ;MISC.c: 224: tempThis = *This;
 13842  0086A8  C07F  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 13843  0086AC  C080  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 13844  0086B0  50DF               	movf	indf2,w,c
 13845  0086B2  0100               	movlb	0	; () banked
 13846  0086B4  6F83               	movwf	StringMatchCaseInsensitive@tempThis& (0+255),b
 13847                           
 13848                           ; BSR set to: 0
 13849                           ;MISC.c: 225: tempThat = *That;
 13850  0086B6  C081  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 13851  0086BA  C082  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 13852  0086BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13853  0086BE  6AF8               	clrf	tblptru,c
 13854  0086C0                     	endif
 13855  0086C0                     	if	0	;tblptru may be non-zero
 13856  0086C0                     	endif
 13857  0086C0  0008               	tblrd		*
 13858  0086C2  CFF5 F084          	movff	tablat,StringMatchCaseInsensitive@tempThat
 13859                           
 13860                           ; BSR set to: 0
 13861                           ;MISC.c: 226: lowercaseChar(&tempThis);
 13862  0086C6  0E83               	movlw	low StringMatchCaseInsensitive@tempThis
 13863  0086C8  0100               	movlb	0	; () banked
 13864  0086CA  6F7C               	movwf	lowercaseChar@Input& (0+255),b
 13865  0086CC  0E00               	movlw	high StringMatchCaseInsensitive@tempThis
 13866  0086CE  0100               	movlb	0	; () banked
 13867  0086D0  6F7D               	movwf	(lowercaseChar@Input+1)& (0+255),b
 13868  0086D2  EC95  F049         	call	_lowercaseChar	;wreg free
 13869                           
 13870                           ;MISC.c: 227: lowercaseChar(&tempThat);
 13871  0086D6  0E84               	movlw	low StringMatchCaseInsensitive@tempThat
 13872  0086D8  0100               	movlb	0	; () banked
 13873  0086DA  6F7C               	movwf	lowercaseChar@Input& (0+255),b
 13874  0086DC  0E00               	movlw	high StringMatchCaseInsensitive@tempThat
 13875  0086DE  0100               	movlb	0	; () banked
 13876  0086E0  6F7D               	movwf	(lowercaseChar@Input+1)& (0+255),b
 13877  0086E2  EC95  F049         	call	_lowercaseChar	;wreg free
 13878                           
 13879                           ;MISC.c: 229: if((tempThis != tempThat) || (tempThat == 0))
 13880  0086E6  0100               	movlb	0	; () banked
 13881  0086E8  5184               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 13882  0086EA  0100               	movlb	0	; () banked
 13883  0086EC  1983               	xorwf	StringMatchCaseInsensitive@tempThis& (0+255),w,b
 13884  0086EE  A4D8               	btfss	status,2,c
 13885  0086F0  D005               	goto	l14554
 13886                           
 13887                           ; BSR set to: 0
 13888  0086F2  0100               	movlb	0	; () banked
 13889  0086F4  5184               	movf	StringMatchCaseInsensitive@tempThat& (0+255),w,b
 13890  0086F6  0100               	movlb	0	; () banked
 13891  0086F8  A4D8               	btfss	status,2,c
 13892  0086FA  D002               	goto	l14558
 13893  0086FC                     l14554:
 13894                           
 13895                           ; BSR set to: 0
 13896                           ;MISC.c: 230: {
 13897                           ;MISC.c: 231: return 0;
 13898  0086FC  0E00               	movlw	0
 13899                           
 13900                           ; BSR set to: 0
 13901  0086FE  0012               	return	
 13902  008700                     l14558:
 13903                           
 13904                           ; BSR set to: 0
 13905                           ;MISC.c: 232: }
 13906                           ;MISC.c: 233: This++;
 13907  008700  0100               	movlb	0	; () banked
 13908  008702  4B7F               	infsnz	StringMatchCaseInsensitive@This& (0+255),f,b
 13909  008704  2B80               	incf	(StringMatchCaseInsensitive@This+1)& (0+255),f,b
 13910                           
 13911                           ;MISC.c: 234: That++;
 13912  008706  0100               	movlb	0	; () banked
 13913  008708  4B81               	infsnz	StringMatchCaseInsensitive@That& (0+255),f,b
 13914  00870A  2B82               	incf	(StringMatchCaseInsensitive@That+1)& (0+255),f,b
 13915  00870C  D000               	goto	l14560
 13916  00870E                     l14560:
 13917  00870E  C07F  FFD9         	movff	StringMatchCaseInsensitive@This,fsr2l
 13918  008712  C080  FFDA         	movff	StringMatchCaseInsensitive@This+1,fsr2h
 13919  008716  50DF               	movf	indf2,w,c
 13920  008718  A4D8               	btfss	status,2,c
 13921  00871A  D7C6               	goto	l14542
 13922                           
 13923                           ;MISC.c: 235: }
 13924                           ;MISC.c: 236: if(*That == 0)
 13925  00871C  C081  FFF6         	movff	StringMatchCaseInsensitive@That,tblptrl
 13926  008720  C082  FFF7         	movff	StringMatchCaseInsensitive@That+1,tblptrh
 13927  008724                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13928  008724  6AF8               	clrf	tblptru,c
 13929  008726                     	endif
 13930  008726                     	if	0	;tblptru may be non-zero
 13931  008726                     	endif
 13932  008726  0008               	tblrd		*
 13933  008728  50F5               	movf	tablat,w,c
 13934  00872A  0900               	iorlw	0
 13935  00872C  A4D8               	btfss	status,2,c
 13936  00872E  D002               	goto	l14570
 13937                           
 13938                           ;MISC.c: 237: {
 13939                           ;MISC.c: 238: return 1;
 13940  008730  0E01               	movlw	1
 13941                           
 13942                           ;MISC.c: 239: }
 13943  008732  0012               	return	
 13944  008734                     l14570:
 13945                           
 13946                           ;MISC.c: 240: else
 13947                           ;MISC.c: 241: {
 13948                           ;MISC.c: 242: return 0;
 13949  008734  0E00               	movlw	0
 13950  008736  0012               	return	
 13951  008738  0012               	return		;funcret
 13952  00873A                     __end_of_StringMatchCaseInsensitive:
 13953                           	opt stack 0
 13954                           tblptru	equ	0xFF8
 13955                           tblptrh	equ	0xFF7
 13956                           tblptrl	equ	0xFF6
 13957                           tablat	equ	0xFF5
 13958                           prodh	equ	0xFF4
 13959                           prodl	equ	0xFF3
 13960                           intcon	equ	0xFF2
 13961                           indf0	equ	0xFEF
 13962                           postinc0	equ	0xFEE
 13963                           fsr0h	equ	0xFEA
 13964                           fsr0l	equ	0xFE9
 13965                           wreg	equ	0xFE8
 13966                           postdec1	equ	0xFE5
 13967                           fsr1h	equ	0xFE2
 13968                           fsr1l	equ	0xFE1
 13969                           indf2	equ	0xFDF
 13970                           postinc2	equ	0xFDE
 13971                           fsr2h	equ	0xFDA
 13972                           fsr2l	equ	0xFD9
 13973                           status	equ	0xFD8
 13974                           
 13975 ;; *************** function _StringMatch *****************
 13976 ;; Defined at:
 13977 ;;		line 190 in file "MISC.c"
 13978 ;; Parameters:    Size  Location     Type
 13979 ;;  This            2   28[BANK0 ] PTR unsigned char 
 13980 ;;		 -> main@BluetoothString(255), 
 13981 ;;  That            2   30[BANK0 ] PTR const unsigned char 
 13982 ;;		 -> STR_91(4), 
 13983 ;; Auto vars:     Size  Location     Type
 13984 ;;		None
 13985 ;; Return value:  Size  Location     Type
 13986 ;;                  1    wreg      unsigned char 
 13987 ;; Registers used:
 13988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13989 ;; Tracked objects:
 13990 ;;		On entry : 0/0
 13991 ;;		On exit  : 0/0
 13992 ;;		Unchanged: 0/0
 13993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13994 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13997 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13998 ;;Total ram usage:        5 bytes
 13999 ;; Hardware stack levels used:    1
 14000 ;; Hardware stack levels required when called:    6
 14001 ;; This function calls:
 14002 ;;		Nothing
 14003 ;; This function is called by:
 14004 ;;		_UseBluetooth
 14005 ;; This function uses a non-reentrant model
 14006 ;;
 14007                           
 14008                           	psect	text11
 14009  008A50                     __ptext11:
 14010                           	opt stack 0
 14011  008A50                     _StringMatch:
 14012                           	opt stack 23
 14013                           
 14014                           ;MISC.c: 192: while(*This != 0)
 14015                           
 14016                           ;incstack = 0
 14017  008A50  D025               	goto	l14526
 14018  008A52                     l14516:
 14019                           
 14020                           ;MISC.c: 193: {
 14021                           ;MISC.c: 194: if(*This != *That || *That == 0)
 14022  008A52  C07C  FFD9         	movff	StringMatch@This,fsr2l
 14023  008A56  C07D  FFDA         	movff	StringMatch@This+1,fsr2h
 14024  008A5A  50DF               	movf	indf2,w,c
 14025  008A5C  0100               	movlb	0	; () banked
 14026  008A5E  6F80               	movwf	??_StringMatch& (0+255),b
 14027  008A60  C07E  FFF6         	movff	StringMatch@That,tblptrl
 14028  008A64  C07F  FFF7         	movff	StringMatch@That+1,tblptrh
 14029  008A68                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14030  008A68  6AF8               	clrf	tblptru,c
 14031  008A6A                     	endif
 14032  008A6A                     	if	0	;tblptru may be non-zero
 14033  008A6A                     	endif
 14034  008A6A  0008               	tblrd		*
 14035  008A6C  50F5               	movf	tablat,w,c
 14036  008A6E  0100               	movlb	0	; () banked
 14037  008A70  1980               	xorwf	??_StringMatch& (0+255),w,b
 14038  008A72  A4D8               	btfss	status,2,c
 14039  008A74  D00A               	goto	l14520
 14040                           
 14041                           ; BSR set to: 0
 14042  008A76  C07E  FFF6         	movff	StringMatch@That,tblptrl
 14043  008A7A  C07F  FFF7         	movff	StringMatch@That+1,tblptrh
 14044  008A7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14045  008A7E  6AF8               	clrf	tblptru,c
 14046  008A80                     	endif
 14047  008A80                     	if	0	;tblptru may be non-zero
 14048  008A80                     	endif
 14049  008A80  0008               	tblrd		*
 14050  008A82  50F5               	movf	tablat,w,c
 14051  008A84  0900               	iorlw	0
 14052  008A86  A4D8               	btfss	status,2,c
 14053  008A88  D002               	goto	l14524
 14054  008A8A                     l14520:
 14055                           
 14056                           ; BSR set to: 0
 14057                           ;MISC.c: 195: {
 14058                           ;MISC.c: 196: return 0;
 14059  008A8A  0E00               	movlw	0
 14060                           
 14061                           ; BSR set to: 0
 14062  008A8C  0012               	return	
 14063  008A8E                     l14524:
 14064                           
 14065                           ; BSR set to: 0
 14066                           ;MISC.c: 197: }
 14067                           ;MISC.c: 198: This++;
 14068  008A8E  0100               	movlb	0	; () banked
 14069  008A90  4B7C               	infsnz	StringMatch@This& (0+255),f,b
 14070  008A92  2B7D               	incf	(StringMatch@This+1)& (0+255),f,b
 14071                           
 14072                           ;MISC.c: 199: That++;
 14073  008A94  0100               	movlb	0	; () banked
 14074  008A96  4B7E               	infsnz	StringMatch@That& (0+255),f,b
 14075  008A98  2B7F               	incf	(StringMatch@That+1)& (0+255),f,b
 14076  008A9A  D000               	goto	l14526
 14077  008A9C                     l14526:
 14078  008A9C  C07C  FFD9         	movff	StringMatch@This,fsr2l
 14079  008AA0  C07D  FFDA         	movff	StringMatch@This+1,fsr2h
 14080  008AA4  50DF               	movf	indf2,w,c
 14081  008AA6  A4D8               	btfss	status,2,c
 14082  008AA8  D7D4               	goto	l14516
 14083                           
 14084                           ;MISC.c: 200: }
 14085                           ;MISC.c: 201: if(*That == 0)
 14086  008AAA  C07E  FFF6         	movff	StringMatch@That,tblptrl
 14087  008AAE  C07F  FFF7         	movff	StringMatch@That+1,tblptrh
 14088  008AB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14089  008AB2  6AF8               	clrf	tblptru,c
 14090  008AB4                     	endif
 14091  008AB4                     	if	0	;tblptru may be non-zero
 14092  008AB4                     	endif
 14093  008AB4  0008               	tblrd		*
 14094  008AB6  50F5               	movf	tablat,w,c
 14095  008AB8  0900               	iorlw	0
 14096  008ABA  A4D8               	btfss	status,2,c
 14097  008ABC  D002               	goto	l14536
 14098                           
 14099                           ;MISC.c: 202: {
 14100                           ;MISC.c: 203: return 1;
 14101  008ABE  0E01               	movlw	1
 14102                           
 14103                           ;MISC.c: 204: }
 14104  008AC0  0012               	return	
 14105  008AC2                     l14536:
 14106                           
 14107                           ;MISC.c: 205: else
 14108                           ;MISC.c: 206: {
 14109                           ;MISC.c: 207: return 0;
 14110  008AC2  0E00               	movlw	0
 14111  008AC4  0012               	return	
 14112  008AC6  0012               	return		;funcret
 14113  008AC8                     __end_of_StringMatch:
 14114                           	opt stack 0
 14115                           tblptru	equ	0xFF8
 14116                           tblptrh	equ	0xFF7
 14117                           tblptrl	equ	0xFF6
 14118                           tablat	equ	0xFF5
 14119                           prodh	equ	0xFF4
 14120                           prodl	equ	0xFF3
 14121                           intcon	equ	0xFF2
 14122                           indf0	equ	0xFEF
 14123                           postinc0	equ	0xFEE
 14124                           fsr0h	equ	0xFEA
 14125                           fsr0l	equ	0xFE9
 14126                           wreg	equ	0xFE8
 14127                           postdec1	equ	0xFE5
 14128                           fsr1h	equ	0xFE2
 14129                           fsr1l	equ	0xFE1
 14130                           indf2	equ	0xFDF
 14131                           postinc2	equ	0xFDE
 14132                           fsr2h	equ	0xFDA
 14133                           fsr2l	equ	0xFD9
 14134                           status	equ	0xFD8
 14135                           
 14136 ;; *************** function _StringContainsCaseInsensitive *****************
 14137 ;; Defined at:
 14138 ;;		line 289 in file "MISC.c"
 14139 ;; Parameters:    Size  Location     Type
 14140 ;;  This            2   31[BANK0 ] PTR unsigned char 
 14141 ;;		 -> Conf2_Channels(4), Conf1_Channels(4), main@BluetoothString(255), 
 14142 ;;  That            2   33[BANK0 ] PTR const unsigned char 
 14143 ;;		 -> STR_62(7), STR_61(9), STR_60(7), STR_46(4), 
 14144 ;;		 -> STR_45(13), STR_24(4), STR_22(6), STR_20(6), 
 14145 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 14146 ;; Auto vars:     Size  Location     Type
 14147 ;;  tempThat        1   37[BANK0 ] unsigned char 
 14148 ;;  tempThis        1   36[BANK0 ] unsigned char 
 14149 ;;  begin           1   35[BANK0 ] unsigned char 
 14150 ;; Return value:  Size  Location     Type
 14151 ;;                  1    wreg      unsigned char 
 14152 ;; Registers used:
 14153 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14154 ;; Tracked objects:
 14155 ;;		On entry : 0/0
 14156 ;;		On exit  : 0/0
 14157 ;;		Unchanged: 0/0
 14158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14159 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14160 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14162 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14163 ;;Total ram usage:        7 bytes
 14164 ;; Hardware stack levels used:    1
 14165 ;; Hardware stack levels required when called:    7
 14166 ;; This function calls:
 14167 ;;		_lowercaseChar
 14168 ;; This function is called by:
 14169 ;;		_UseBluetooth
 14170 ;; This function uses a non-reentrant model
 14171 ;;
 14172                           
 14173                           	psect	text12
 14174  007530                     __ptext12:
 14175                           	opt stack 0
 14176  007530                     _StringContainsCaseInsensitive:
 14177                           	opt stack 22
 14178                           
 14179                           ;MISC.c: 291: unsigned char tempThis,
 14180                           ;MISC.c: 292: tempThat;
 14181                           ;MISC.c: 293: unsigned char begin = 0;
 14182                           
 14183                           ;incstack = 0
 14184  007530  0E00               	movlw	0
 14185  007532  0100               	movlb	0	; () banked
 14186  007534  6F83               	movwf	StringContainsCaseInsensitive@begin& (0+255),b
 14187                           
 14188                           ;MISC.c: 295: while(*This != 0)
 14189  007536  D078               	goto	l14608
 14190  007538                     l14576:
 14191                           
 14192                           ;MISC.c: 296: {
 14193                           ;MISC.c: 297: tempThis = *This;
 14194  007538  C07F  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 14195  00753C  C080  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 14196  007540  0E00               	movlw	low (__mediumconst shr (0+16))
 14197  007542  6EF8               	movwf	tblptru,c
 14198  007544  0E0F               	movlw	(high __ramtop+-1)
 14199  007546  64F7               	cpfsgt	tblptrh,c
 14200  007548  D003               	bra	u17857
 14201  00754A  0008               	tblrd		*
 14202  00754C  50F5               	movf	tablat,w,c
 14203  00754E  D005               	bra	u17850
 14204  007550                     u17857:
 14205  007550  CFF6 FFE9          	movff	tblptrl,fsr0l
 14206  007554  CFF7 FFEA          	movff	tblptrh,fsr0h
 14207  007558  50EF               	movf	indf0,w,c
 14208  00755A                     u17850:
 14209  00755A  0100               	movlb	0	; () banked
 14210  00755C  6F84               	movwf	StringContainsCaseInsensitive@tempThis& (0+255),b
 14211                           
 14212                           ;MISC.c: 298: tempThat = *That;
 14213  00755E  C081  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 14214  007562  C082  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 14215  007566  0E00               	movlw	low (__mediumconst shr (0+16))
 14216  007568  6EF8               	movwf	tblptru,c
 14217  00756A  0E0F               	movlw	(high __ramtop+-1)
 14218  00756C  64F7               	cpfsgt	tblptrh,c
 14219  00756E  D003               	bra	u17867
 14220  007570  0008               	tblrd		*
 14221  007572  50F5               	movf	tablat,w,c
 14222  007574  D005               	bra	u17860
 14223  007576                     u17867:
 14224  007576  CFF6 FFE9          	movff	tblptrl,fsr0l
 14225  00757A  CFF7 FFEA          	movff	tblptrh,fsr0h
 14226  00757E  50EF               	movf	indf0,w,c
 14227  007580                     u17860:
 14228  007580  0100               	movlb	0	; () banked
 14229  007582  6F85               	movwf	StringContainsCaseInsensitive@tempThat& (0+255),b
 14230                           
 14231                           ; BSR set to: 0
 14232                           ;MISC.c: 299: lowercaseChar(&tempThis);
 14233  007584  0E84               	movlw	low StringContainsCaseInsensitive@tempThis
 14234  007586  0100               	movlb	0	; () banked
 14235  007588  6F7C               	movwf	lowercaseChar@Input& (0+255),b
 14236  00758A  0E00               	movlw	high StringContainsCaseInsensitive@tempThis
 14237  00758C  0100               	movlb	0	; () banked
 14238  00758E  6F7D               	movwf	(lowercaseChar@Input+1)& (0+255),b
 14239  007590  EC95  F049         	call	_lowercaseChar	;wreg free
 14240                           
 14241                           ;MISC.c: 300: lowercaseChar(&tempThat);
 14242  007594  0E85               	movlw	low StringContainsCaseInsensitive@tempThat
 14243  007596  0100               	movlb	0	; () banked
 14244  007598  6F7C               	movwf	lowercaseChar@Input& (0+255),b
 14245  00759A  0E00               	movlw	high StringContainsCaseInsensitive@tempThat
 14246  00759C  0100               	movlb	0	; () banked
 14247  00759E  6F7D               	movwf	(lowercaseChar@Input+1)& (0+255),b
 14248  0075A0  EC95  F049         	call	_lowercaseChar	;wreg free
 14249                           
 14250                           ;MISC.c: 302: if(tempThis == tempThat)
 14251  0075A4  0100               	movlb	0	; () banked
 14252  0075A6  5185               	movf	StringContainsCaseInsensitive@tempThat& (0+255),w,b
 14253  0075A8  0100               	movlb	0	; () banked
 14254  0075AA  1984               	xorwf	StringContainsCaseInsensitive@tempThis& (0+255),w,b
 14255  0075AC  A4D8               	btfss	status,2,c
 14256  0075AE  D033               	goto	l14600
 14257                           
 14258                           ; BSR set to: 0
 14259                           ;MISC.c: 303: {
 14260                           ;MISC.c: 304: begin = 1;
 14261  0075B0  0E01               	movlw	1
 14262  0075B2  0100               	movlb	0	; () banked
 14263  0075B4  6F83               	movwf	StringContainsCaseInsensitive@begin& (0+255),b
 14264                           
 14265                           ; BSR set to: 0
 14266                           ;MISC.c: 305: That++;
 14267  0075B6  0100               	movlb	0	; () banked
 14268  0075B8  4B81               	infsnz	StringContainsCaseInsensitive@That& (0+255),f,b
 14269  0075BA  2B82               	incf	(StringContainsCaseInsensitive@That+1)& (0+255),f,b
 14270                           
 14271                           ; BSR set to: 0
 14272                           ;MISC.c: 306: if(*That == 0)
 14273  0075BC  C081  FFF6         	movff	StringContainsCaseInsensitive@That,tblptrl
 14274  0075C0  C082  FFF7         	movff	StringContainsCaseInsensitive@That+1,tblptrh
 14275  0075C4  0E00               	movlw	low (__mediumconst shr (0+16))
 14276  0075C6  6EF8               	movwf	tblptru,c
 14277  0075C8  0E0F               	movlw	(high __ramtop+-1)
 14278  0075CA  64F7               	cpfsgt	tblptrh,c
 14279  0075CC  D003               	bra	u17887
 14280  0075CE  0008               	tblrd		*
 14281  0075D0  50F5               	movf	tablat,w,c
 14282  0075D2  D005               	bra	u17880
 14283  0075D4                     u17887:
 14284  0075D4  CFF6 FFE9          	movff	tblptrl,fsr0l
 14285  0075D8  CFF7 FFEA          	movff	tblptrh,fsr0h
 14286  0075DC  50EF               	movf	indf0,w,c
 14287  0075DE                     u17880:
 14288  0075DE  0900               	iorlw	0
 14289  0075E0  A4D8               	btfss	status,2,c
 14290  0075E2  D002               	goto	l14594
 14291                           
 14292                           ;MISC.c: 307: {
 14293                           ;MISC.c: 308: return 1;
 14294  0075E4  0E01               	movlw	1
 14295  0075E6  0012               	return	
 14296  0075E8                     l14594:
 14297                           
 14298                           ;MISC.c: 309: }
 14299                           ;MISC.c: 310: if(*This == 0)
 14300  0075E8  C07F  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 14301  0075EC  C080  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 14302  0075F0  0E00               	movlw	low (__mediumconst shr (0+16))
 14303  0075F2  6EF8               	movwf	tblptru,c
 14304  0075F4  0E0F               	movlw	(high __ramtop+-1)
 14305  0075F6  64F7               	cpfsgt	tblptrh,c
 14306  0075F8  D003               	bra	u17907
 14307  0075FA  0008               	tblrd		*
 14308  0075FC  50F5               	movf	tablat,w,c
 14309  0075FE  D005               	bra	u17900
 14310  007600                     u17907:
 14311  007600  CFF6 FFE9          	movff	tblptrl,fsr0l
 14312  007604  CFF7 FFEA          	movff	tblptrh,fsr0h
 14313  007608  50EF               	movf	indf0,w,c
 14314  00760A                     u17900:
 14315  00760A  0900               	iorlw	0
 14316  00760C  A4D8               	btfss	status,2,c
 14317  00760E  D008               	goto	l14606
 14318                           
 14319                           ;MISC.c: 311: {
 14320                           ;MISC.c: 312: return 0;
 14321  007610  0E00               	movlw	0
 14322  007612  0012               	return	
 14323                           
 14324                           ;MISC.c: 313: }
 14325                           ;MISC.c: 314: }
 14326  007614  D005               	goto	l14606
 14327  007616                     l14600:
 14328                           
 14329                           ;MISC.c: 315: else
 14330                           ;MISC.c: 316: {
 14331                           ;MISC.c: 317: if(begin == 1)
 14332  007616  0100               	movlb	0	; () banked
 14333  007618  0583               	decf	StringContainsCaseInsensitive@begin& (0+255),w,b
 14334  00761A  D7F8               	goto	L11
 14335                           
 14336                           ; BSR set to: 0
 14337                           
 14338                           ; BSR set to: 0
 14339                           ;MISC.c: 318: {
 14340                           ;MISC.c: 319: return 0;
 14341  00761C  0012               	return	
 14342                           
 14343                           ; BSR set to: 0
 14344  00761E  D000               	goto	l14606
 14345  007620                     l14606:
 14346                           
 14347                           ;MISC.c: 320: }
 14348                           ;MISC.c: 321: }
 14349                           ;MISC.c: 322: This++;
 14350  007620  0100               	movlb	0	; () banked
 14351  007622  4B7F               	infsnz	StringContainsCaseInsensitive@This& (0+255),f,b
 14352  007624  2B80               	incf	(StringContainsCaseInsensitive@This+1)& (0+255),f,b
 14353  007626  D000               	goto	l14608
 14354  007628                     l14608:
 14355                           
 14356                           ; BSR set to: 0
 14357  007628  C07F  FFF6         	movff	StringContainsCaseInsensitive@This,tblptrl
 14358  00762C  C080  FFF7         	movff	StringContainsCaseInsensitive@This+1,tblptrh
 14359  007630  0E00               	movlw	low (__mediumconst shr (0+16))
 14360  007632  6EF8               	movwf	tblptru,c
 14361  007634  0E0F               	movlw	(high __ramtop+-1)
 14362  007636  64F7               	cpfsgt	tblptrh,c
 14363  007638  D003               	bra	u17937
 14364  00763A  0008               	tblrd		*
 14365  00763C  50F5               	movf	tablat,w,c
 14366  00763E  D005               	bra	u17930
 14367  007640                     u17937:
 14368  007640  CFF6 FFE9          	movff	tblptrl,fsr0l
 14369  007644  CFF7 FFEA          	movff	tblptrh,fsr0h
 14370  007648  50EF               	movf	indf0,w,c
 14371  00764A                     u17930:
 14372  00764A  0900               	iorlw	0
 14373  00764C  A4D8               	btfss	status,2,c
 14374  00764E  D774               	goto	l14576
 14375                           
 14376                           ;MISC.c: 323: }
 14377                           ;MISC.c: 324: return 0;
 14378  007650  0E00               	movlw	0
 14379  007652  0012               	return	
 14380  007654  0012               	return		;funcret
 14381  007656                     __end_of_StringContainsCaseInsensitive:
 14382                           	opt stack 0
 14383                           tblptru	equ	0xFF8
 14384                           tblptrh	equ	0xFF7
 14385                           tblptrl	equ	0xFF6
 14386                           tablat	equ	0xFF5
 14387                           prodh	equ	0xFF4
 14388                           prodl	equ	0xFF3
 14389                           intcon	equ	0xFF2
 14390                           indf0	equ	0xFEF
 14391                           postinc0	equ	0xFEE
 14392                           fsr0h	equ	0xFEA
 14393                           fsr0l	equ	0xFE9
 14394                           wreg	equ	0xFE8
 14395                           postdec1	equ	0xFE5
 14396                           fsr1h	equ	0xFE2
 14397                           fsr1l	equ	0xFE1
 14398                           indf2	equ	0xFDF
 14399                           postinc2	equ	0xFDE
 14400                           fsr2h	equ	0xFDA
 14401                           fsr2l	equ	0xFD9
 14402                           status	equ	0xFD8
 14403                           
 14404 ;; *************** function _StringAddEqual *****************
 14405 ;; Defined at:
 14406 ;;		line 591 in file "MISC.c"
 14407 ;; Parameters:    Size  Location     Type
 14408 ;;  Input           2   43[BANK0 ] PTR unsigned char 
 14409 ;;		 -> main@BluetoothString(255), 
 14410 ;; Auto vars:     Size  Location     Type
 14411 ;;  temp          255    0[BANK1 ] unsigned char [255]
 14412 ;;  j               1   50[BANK0 ] unsigned char 
 14413 ;;  i               1   49[BANK0 ] unsigned char 
 14414 ;;  firstnumber     1   48[BANK0 ] unsigned char 
 14415 ;;  NullPosition    1   47[BANK0 ] unsigned char 
 14416 ;; Return value:  Size  Location     Type
 14417 ;;                  1    wreg      unsigned char 
 14418 ;; Registers used:
 14419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14420 ;; Tracked objects:
 14421 ;;		On entry : 0/0
 14422 ;;		On exit  : 0/0
 14423 ;;		Unchanged: 0/0
 14424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14425 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14426 ;;      Locals:         0       4     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14427 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14428 ;;      Totals:         0       8     255       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14429 ;;Total ram usage:      263 bytes
 14430 ;; Hardware stack levels used:    1
 14431 ;; Hardware stack levels required when called:    8
 14432 ;; This function calls:
 14433 ;;		_BufferCopy
 14434 ;;		_cleanBuffer
 14435 ;; This function is called by:
 14436 ;;		_UseBluetooth
 14437 ;; This function uses a non-reentrant model
 14438 ;;
 14439                           
 14440                           	psect	text13
 14441  0062B8                     __ptext13:
 14442                           	opt stack 0
 14443  0062B8                     _StringAddEqual:
 14444                           	opt stack 21
 14445                           
 14446                           ;MISC.c: 593: unsigned char i;
 14447                           ;MISC.c: 594: unsigned char j =0;
 14448                           
 14449                           ;incstack = 0
 14450  0062B8  0E00               	movlw	0
 14451  0062BA  0100               	movlb	0	; () banked
 14452  0062BC  6F92               	movwf	StringAddEqual@j& (0+255),b
 14453                           
 14454                           ; BSR set to: 0
 14455                           ;MISC.c: 595: unsigned char firstnumber = 255;
 14456  0062BE  0100               	movlb	0	; () banked
 14457  0062C0  6990               	setf	StringAddEqual@firstnumber& (0+255),b
 14458                           
 14459                           ;MISC.c: 596: unsigned char temp[255];
 14460                           ;MISC.c: 597: unsigned char NullPosition;
 14461                           ;MISC.c: 598: for(i = 0; i<255; i++)
 14462  0062C2  0E00               	movlw	0
 14463  0062C4  0100               	movlb	0	; () banked
 14464  0062C6  6F91               	movwf	StringAddEqual@i& (0+255),b
 14465  0062C8                     l14796:
 14466                           
 14467                           ; BSR set to: 0
 14468  0062C8  0100               	movlb	0	; () banked
 14469  0062CA  2991               	incf	StringAddEqual@i& (0+255),w,b
 14470  0062CC  B4D8               	btfsc	status,2,c
 14471  0062CE  D012               	goto	l14808
 14472  0062D0  D001               	goto	l14800
 14473                           
 14474                           ; BSR set to: 0
 14475  0062D2  D010               	goto	l14808
 14476  0062D4                     l14800:
 14477                           
 14478                           ; BSR set to: 0
 14479                           ;MISC.c: 599: {
 14480                           ;MISC.c: 600: if(*Input == 0)
 14481  0062D4  C08B  FFD9         	movff	StringAddEqual@Input,fsr2l
 14482  0062D8  C08C  FFDA         	movff	StringAddEqual@Input+1,fsr2h
 14483  0062DC  50DF               	movf	indf2,w,c
 14484  0062DE  A4D8               	btfss	status,2,c
 14485  0062E0  D003               	goto	l14804
 14486                           
 14487                           ; BSR set to: 0
 14488                           ;MISC.c: 601: {
 14489                           ;MISC.c: 602: NullPosition = i;
 14490  0062E2  C091  F08F         	movff	StringAddEqual@i,StringAddEqual@NullPosition
 14491                           
 14492                           ;MISC.c: 603: break;
 14493  0062E6  D006               	goto	l14808
 14494  0062E8                     l14804:
 14495                           
 14496                           ; BSR set to: 0
 14497                           ;MISC.c: 604: }
 14498                           ;MISC.c: 605: Input++;
 14499  0062E8  0100               	movlb	0	; () banked
 14500  0062EA  4B8B               	infsnz	StringAddEqual@Input& (0+255),f,b
 14501  0062EC  2B8C               	incf	(StringAddEqual@Input+1)& (0+255),f,b
 14502  0062EE  0100               	movlb	0	; () banked
 14503  0062F0  2B91               	incf	StringAddEqual@i& (0+255),f,b
 14504  0062F2  D7EA               	goto	l14796
 14505  0062F4                     l14808:
 14506                           
 14507                           ; BSR set to: 0
 14508                           ;MISC.c: 606: }
 14509                           ;MISC.c: 607: Input-=NullPosition;
 14510  0062F4  0100               	movlb	0	; () banked
 14511  0062F6  518F               	movf	StringAddEqual@NullPosition& (0+255),w,b
 14512  0062F8  0D01               	mullw	1
 14513  0062FA  50F3               	movf	prodl,w,c
 14514  0062FC  0100               	movlb	0	; () banked
 14515  0062FE  5F8B               	subwf	StringAddEqual@Input& (0+255),f,b
 14516  006300  50F4               	movf	prodh,w,c
 14517  006302  0100               	movlb	0	; () banked
 14518  006304  5B8C               	subwfb	(StringAddEqual@Input+1)& (0+255),f,b
 14519                           
 14520                           ; BSR set to: 0
 14521                           ;MISC.c: 608: cleanBuffer(temp,NullPosition +1);
 14522  006306  0E00               	movlw	low StringAddEqual@temp
 14523  006308  0100               	movlb	0	; () banked
 14524  00630A  6F7C               	movwf	cleanBuffer@data& (0+255),b
 14525  00630C  0E01               	movlw	high StringAddEqual@temp
 14526  00630E  0100               	movlb	0	; () banked
 14527  006310  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 14528  006312  0E01               	movlw	1
 14529  006314  0100               	movlb	0	; () banked
 14530  006316  258F               	addwf	StringAddEqual@NullPosition& (0+255),w,b
 14531  006318  0100               	movlb	0	; () banked
 14532  00631A  6F7E               	movwf	cleanBuffer@count& (0+255),b
 14533  00631C  0100               	movlb	0	; () banked
 14534  00631E  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 14535  006320  0E00               	movlw	0
 14536  006322  237F               	addwfc	(cleanBuffer@count+1)& (0+255),f,b
 14537  006324  ECCA  F046         	call	_cleanBuffer	;wreg free
 14538                           
 14539                           ;MISC.c: 609: i = 0;
 14540  006328  0E00               	movlw	0
 14541  00632A  0100               	movlb	0	; () banked
 14542  00632C  6F91               	movwf	StringAddEqual@i& (0+255),b
 14543                           
 14544                           ;MISC.c: 610: while(Input[i] != 0)
 14545  00632E  D032               	goto	l14822
 14546  006330                     l14814:
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;MISC.c: 611: {
 14550                           ;MISC.c: 612: if(((Input[i] >= 48) && (Input[i] <= 57)) || (Input[i] == '-'))
 14551  006330  0100               	movlb	0	; () banked
 14552  006332  5191               	movf	StringAddEqual@i& (0+255),w,b
 14553  006334  0D01               	mullw	1
 14554  006336  50F3               	movf	prodl,w,c
 14555  006338  0100               	movlb	0	; () banked
 14556  00633A  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 14557  00633C  6ED9               	movwf	fsr2l,c
 14558  00633E  50F4               	movf	prodh,w,c
 14559  006340  0100               	movlb	0	; () banked
 14560  006342  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14561  006344  6EDA               	movwf	fsr2h,c
 14562  006346  0E2F               	movlw	47
 14563  006348  64DF               	cpfsgt	indf2,c
 14564  00634A  D00F               	goto	l14818
 14565                           
 14566                           ; BSR set to: 0
 14567  00634C  0100               	movlb	0	; () banked
 14568  00634E  5191               	movf	StringAddEqual@i& (0+255),w,b
 14569  006350  0D01               	mullw	1
 14570  006352  50F3               	movf	prodl,w,c
 14571  006354  0100               	movlb	0	; () banked
 14572  006356  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 14573  006358  6ED9               	movwf	fsr2l,c
 14574  00635A  50F4               	movf	prodh,w,c
 14575  00635C  0100               	movlb	0	; () banked
 14576  00635E  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14577  006360  6EDA               	movwf	fsr2h,c
 14578  006362  0E39               	movlw	57
 14579  006364  64DF               	cpfsgt	indf2,c
 14580  006366  D010               	goto	l485
 14581  006368  D000               	goto	l14818
 14582  00636A                     l14818:
 14583                           
 14584                           ; BSR set to: 0
 14585  00636A  0100               	movlb	0	; () banked
 14586  00636C  5191               	movf	StringAddEqual@i& (0+255),w,b
 14587  00636E  0D01               	mullw	1
 14588  006370  50F3               	movf	prodl,w,c
 14589  006372  0100               	movlb	0	; () banked
 14590  006374  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 14591  006376  6ED9               	movwf	fsr2l,c
 14592  006378  50F4               	movf	prodh,w,c
 14593  00637A  0100               	movlb	0	; () banked
 14594  00637C  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14595  00637E  6EDA               	movwf	fsr2h,c
 14596  006380  0E2D               	movlw	45
 14597  006382  18DE               	xorwf	postinc2,w,c
 14598  006384  A4D8               	btfss	status,2,c
 14599  006386  D003               	goto	l14820
 14600  006388                     l485:
 14601                           
 14602                           ; BSR set to: 0
 14603                           ;MISC.c: 613: {
 14604                           ;MISC.c: 614: firstnumber = i;
 14605  006388  C091  F090         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 14606                           
 14607                           ;MISC.c: 615: break;
 14608  00638C  D011               	goto	l14824
 14609  00638E                     l14820:
 14610                           
 14611                           ; BSR set to: 0
 14612                           ;MISC.c: 616: }
 14613                           ;MISC.c: 617: i++;
 14614  00638E  0100               	movlb	0	; () banked
 14615  006390  2B91               	incf	StringAddEqual@i& (0+255),f,b
 14616  006392  D000               	goto	l14822
 14617  006394                     l14822:
 14618                           
 14619                           ; BSR set to: 0
 14620  006394  0100               	movlb	0	; () banked
 14621  006396  5191               	movf	StringAddEqual@i& (0+255),w,b
 14622  006398  0D01               	mullw	1
 14623  00639A  50F3               	movf	prodl,w,c
 14624  00639C  0100               	movlb	0	; () banked
 14625  00639E  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 14626  0063A0  6ED9               	movwf	fsr2l,c
 14627  0063A2  50F4               	movf	prodh,w,c
 14628  0063A4  0100               	movlb	0	; () banked
 14629  0063A6  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14630  0063A8  6EDA               	movwf	fsr2h,c
 14631  0063AA  50DF               	movf	indf2,w,c
 14632  0063AC  A4D8               	btfss	status,2,c
 14633  0063AE  D7C0               	goto	l14814
 14634  0063B0                     l14824:
 14635                           
 14636                           ; BSR set to: 0
 14637                           ;MISC.c: 618: }
 14638                           ;MISC.c: 619: if(firstnumber == 255)
 14639  0063B0  0100               	movlb	0	; () banked
 14640  0063B2  2990               	incf	StringAddEqual@firstnumber& (0+255),w,b
 14641  0063B4  A4D8               	btfss	status,2,c
 14642  0063B6  D002               	goto	l14830
 14643                           
 14644                           ; BSR set to: 0
 14645                           ;MISC.c: 620: {
 14646                           ;MISC.c: 622: return 0;
 14647  0063B8  0E00               	movlw	0
 14648                           
 14649                           ; BSR set to: 0
 14650  0063BA  0012               	return	
 14651  0063BC                     l14830:
 14652                           
 14653                           ; BSR set to: 0
 14654                           ;MISC.c: 623: }
 14655                           ;MISC.c: 624: for(j=0;j<firstnumber;j++)
 14656  0063BC  0E00               	movlw	0
 14657  0063BE  0100               	movlb	0	; () banked
 14658  0063C0  6F92               	movwf	StringAddEqual@j& (0+255),b
 14659  0063C2  D019               	goto	l14836
 14660  0063C4                     l14832:
 14661                           
 14662                           ; BSR set to: 0
 14663                           ;MISC.c: 625: {
 14664                           ;MISC.c: 626: temp[j] = Input[j];
 14665  0063C4  0100               	movlb	0	; () banked
 14666  0063C6  5192               	movf	StringAddEqual@j& (0+255),w,b
 14667  0063C8  0D01               	mullw	1
 14668  0063CA  50F3               	movf	prodl,w,c
 14669  0063CC  0100               	movlb	0	; () banked
 14670  0063CE  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 14671  0063D0  6ED9               	movwf	fsr2l,c
 14672  0063D2  50F4               	movf	prodh,w,c
 14673  0063D4  0100               	movlb	0	; () banked
 14674  0063D6  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14675  0063D8  6EDA               	movwf	fsr2h,c
 14676  0063DA  0100               	movlb	0	; () banked
 14677  0063DC  5192               	movf	StringAddEqual@j& (0+255),w,b
 14678  0063DE  0D01               	mullw	1
 14679  0063E0  0E00               	movlw	low StringAddEqual@temp
 14680  0063E2  24F3               	addwf	prodl,w,c
 14681  0063E4  6EE1               	movwf	fsr1l,c
 14682  0063E6  0E01               	movlw	high StringAddEqual@temp
 14683  0063E8  20F4               	addwfc	prodh,w,c
 14684  0063EA  6EE2               	movwf	fsr1h,c
 14685  0063EC  CFDF FFE7          	movff	indf2,indf1
 14686                           
 14687                           ; BSR set to: 0
 14688  0063F0  0100               	movlb	0	; () banked
 14689  0063F2  2B92               	incf	StringAddEqual@j& (0+255),f,b
 14690  0063F4  D000               	goto	l14836
 14691  0063F6                     l14836:
 14692                           
 14693                           ; BSR set to: 0
 14694  0063F6  0100               	movlb	0	; () banked
 14695  0063F8  5190               	movf	StringAddEqual@firstnumber& (0+255),w,b
 14696  0063FA  0100               	movlb	0	; () banked
 14697  0063FC  5D92               	subwf	StringAddEqual@j& (0+255),w,b
 14698  0063FE  A0D8               	btfss	status,0,c
 14699  006400  D7E1               	goto	l14832
 14700                           
 14701                           ; BSR set to: 0
 14702                           ;MISC.c: 627: }
 14703                           ;MISC.c: 628: temp[firstnumber] = '=';
 14704                           
 14705                           ; BSR set to: 0
 14706  006402  0100               	movlb	0	; () banked
 14707  006404  5190               	movf	StringAddEqual@firstnumber& (0+255),w,b
 14708  006406  0D01               	mullw	1
 14709  006408  0E00               	movlw	low StringAddEqual@temp
 14710  00640A  24F3               	addwf	prodl,w,c
 14711  00640C  6ED9               	movwf	fsr2l,c
 14712  00640E  0E01               	movlw	high StringAddEqual@temp
 14713  006410  20F4               	addwfc	prodh,w,c
 14714  006412  6EDA               	movwf	fsr2h,c
 14715  006414  0E3D               	movlw	61
 14716  006416  6EDF               	movwf	indf2,c
 14717                           
 14718                           ; BSR set to: 0
 14719                           ;MISC.c: 629: for(j = (firstnumber);j<255;j++)
 14720  006418  C090  F092         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 14721  00641C                     l14842:
 14722                           
 14723                           ; BSR set to: 0
 14724  00641C  0100               	movlb	0	; () banked
 14725  00641E  2992               	incf	StringAddEqual@j& (0+255),w,b
 14726  006420  B4D8               	btfsc	status,2,c
 14727  006422  D034               	goto	l14856
 14728  006424  D001               	goto	l14846
 14729                           
 14730                           ; BSR set to: 0
 14731  006426  D032               	goto	l14856
 14732  006428                     l14846:
 14733                           
 14734                           ; BSR set to: 0
 14735                           ;MISC.c: 630: {
 14736                           ;MISC.c: 631: temp[j+1] = Input[j];
 14737  006428  0100               	movlb	0	; () banked
 14738  00642A  5192               	movf	StringAddEqual@j& (0+255),w,b
 14739  00642C  0D01               	mullw	1
 14740  00642E  50F3               	movf	prodl,w,c
 14741  006430  0100               	movlb	0	; () banked
 14742  006432  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 14743  006434  6ED9               	movwf	fsr2l,c
 14744  006436  50F4               	movf	prodh,w,c
 14745  006438  0100               	movlb	0	; () banked
 14746  00643A  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14747  00643C  6EDA               	movwf	fsr2h,c
 14748  00643E  0100               	movlb	0	; () banked
 14749  006440  5192               	movf	StringAddEqual@j& (0+255),w,b
 14750  006442  0100               	movlb	0	; () banked
 14751  006444  6F8D               	movwf	??_StringAddEqual& (0+255),b
 14752  006446  6B8E               	clrf	(??_StringAddEqual+1)& (0+255),b
 14753  006448  0E01               	movlw	1
 14754  00644A  0100               	movlb	0	; () banked
 14755  00644C  278D               	addwf	??_StringAddEqual& (0+255),f,b
 14756  00644E  0E00               	movlw	0
 14757  006450  238E               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 14758  006452  0E00               	movlw	low StringAddEqual@temp
 14759  006454  0100               	movlb	0	; () banked
 14760  006456  258D               	addwf	??_StringAddEqual& (0+255),w,b
 14761  006458  6EE1               	movwf	fsr1l,c
 14762  00645A  0E01               	movlw	high StringAddEqual@temp
 14763  00645C  0100               	movlb	0	; () banked
 14764  00645E  218E               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 14765  006460  6EE2               	movwf	fsr1h,c
 14766  006462  CFDF FFE7          	movff	indf2,indf1
 14767                           
 14768                           ; BSR set to: 0
 14769                           ;MISC.c: 632: if(Input[j] == 0)
 14770  006466  0100               	movlb	0	; () banked
 14771  006468  5192               	movf	StringAddEqual@j& (0+255),w,b
 14772  00646A  0D01               	mullw	1
 14773  00646C  50F3               	movf	prodl,w,c
 14774  00646E  0100               	movlb	0	; () banked
 14775  006470  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 14776  006472  6ED9               	movwf	fsr2l,c
 14777  006474  50F4               	movf	prodh,w,c
 14778  006476  0100               	movlb	0	; () banked
 14779  006478  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 14780  00647A  6EDA               	movwf	fsr2h,c
 14781  00647C  50DF               	movf	indf2,w,c
 14782  00647E  B4D8               	btfsc	status,2,c
 14783  006480  D005               	goto	l14856
 14784  006482  D001               	goto	l14852
 14785                           
 14786                           ; BSR set to: 0
 14787                           ;MISC.c: 633: {
 14788                           ;MISC.c: 634: break;
 14789  006484  D003               	goto	l14856
 14790  006486                     l14852:
 14791                           
 14792                           ; BSR set to: 0
 14793  006486  0100               	movlb	0	; () banked
 14794  006488  2B92               	incf	StringAddEqual@j& (0+255),f,b
 14795  00648A  D7C8               	goto	l14842
 14796  00648C                     l14856:
 14797                           
 14798                           ; BSR set to: 0
 14799                           ;MISC.c: 635: }
 14800                           ;MISC.c: 636: }
 14801                           ;MISC.c: 637: BufferCopy(temp,Input,NullPosition +1,0);
 14802  00648C  0E00               	movlw	low StringAddEqual@temp
 14803  00648E  0100               	movlb	0	; () banked
 14804  006490  6F84               	movwf	BufferCopy@from& (0+255),b
 14805  006492  0E01               	movlw	high StringAddEqual@temp
 14806  006494  0100               	movlb	0	; () banked
 14807  006496  6F85               	movwf	(BufferCopy@from+1)& (0+255),b
 14808  006498  C08B  F086         	movff	StringAddEqual@Input,BufferCopy@to
 14809  00649C  C08C  F087         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 14810  0064A0  0100               	movlb	0	; () banked
 14811  0064A2  298F               	incf	StringAddEqual@NullPosition& (0+255),w,b
 14812  0064A4  0100               	movlb	0	; () banked
 14813  0064A6  6F88               	movwf	BufferCopy@count& (0+255),b
 14814  0064A8  0E00               	movlw	0
 14815  0064AA  0100               	movlb	0	; () banked
 14816  0064AC  6F89               	movwf	BufferCopy@shift& (0+255),b
 14817  0064AE  ECE5  F043         	call	_BufferCopy	;wreg free
 14818                           
 14819                           ;MISC.c: 638: return 1;
 14820  0064B2  0E01               	movlw	1
 14821  0064B4  0012               	return	
 14822  0064B6  0012               	return		;funcret
 14823  0064B8                     __end_of_StringAddEqual:
 14824                           	opt stack 0
 14825                           tblptru	equ	0xFF8
 14826                           tblptrh	equ	0xFF7
 14827                           tblptrl	equ	0xFF6
 14828                           tablat	equ	0xFF5
 14829                           prodh	equ	0xFF4
 14830                           prodl	equ	0xFF3
 14831                           intcon	equ	0xFF2
 14832                           indf0	equ	0xFEF
 14833                           postinc0	equ	0xFEE
 14834                           fsr0h	equ	0xFEA
 14835                           fsr0l	equ	0xFE9
 14836                           wreg	equ	0xFE8
 14837                           indf1	equ	0xFE7
 14838                           postdec1	equ	0xFE5
 14839                           fsr1h	equ	0xFE2
 14840                           fsr1l	equ	0xFE1
 14841                           indf2	equ	0xFDF
 14842                           postinc2	equ	0xFDE
 14843                           fsr2h	equ	0xFDA
 14844                           fsr2l	equ	0xFD9
 14845                           status	equ	0xFD8
 14846                           
 14847 ;; *************** function _BufferCopy *****************
 14848 ;; Defined at:
 14849 ;;		line 167 in file "MISC.c"
 14850 ;; Parameters:    Size  Location     Type
 14851 ;;  from            2   36[BANK0 ] PTR unsigned char 
 14852 ;;		 -> StringAddEqual@temp(255), ReceivedString(255), 
 14853 ;;  to              2   38[BANK0 ] PTR unsigned char 
 14854 ;;		 -> main@BluetoothString(255), 
 14855 ;;  count           1   40[BANK0 ] unsigned char 
 14856 ;;  shift           1   41[BANK0 ] unsigned char 
 14857 ;; Auto vars:     Size  Location     Type
 14858 ;;  i               1   42[BANK0 ] unsigned char 
 14859 ;; Return value:  Size  Location     Type
 14860 ;;		None               void
 14861 ;; Registers used:
 14862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14863 ;; Tracked objects:
 14864 ;;		On entry : 0/0
 14865 ;;		On exit  : 0/0
 14866 ;;		Unchanged: 0/0
 14867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14868 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14871 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14872 ;;Total ram usage:        7 bytes
 14873 ;; Hardware stack levels used:    1
 14874 ;; Hardware stack levels required when called:    7
 14875 ;; This function calls:
 14876 ;;		_cleanBuffer
 14877 ;; This function is called by:
 14878 ;;		_main
 14879 ;;		_StringAddEqual
 14880 ;; This function uses a non-reentrant model
 14881 ;;
 14882                           
 14883                           	psect	text14
 14884  0087CA                     __ptext14:
 14885                           	opt stack 0
 14886  0087CA                     _BufferCopy:
 14887                           	opt stack 21
 14888                           
 14889                           ;MISC.c: 169: unsigned char i=0;
 14890                           
 14891                           ;incstack = 0
 14892  0087CA  0E00               	movlw	0
 14893  0087CC  0100               	movlb	0	; () banked
 14894  0087CE  6F8A               	movwf	BufferCopy@i& (0+255),b
 14895                           
 14896                           ; BSR set to: 0
 14897                           ;MISC.c: 170: cleanBuffer(to,count);
 14898  0087D0  C086  F07C         	movff	BufferCopy@to,cleanBuffer@data
 14899  0087D4  C087  F07D         	movff	BufferCopy@to+1,cleanBuffer@data+1
 14900  0087D8  C088  F07E         	movff	BufferCopy@count,cleanBuffer@count
 14901  0087DC  0100               	movlb	0	; () banked
 14902  0087DE  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 14903  0087E0  ECCA  F046         	call	_cleanBuffer	;wreg free
 14904                           
 14905                           ;MISC.c: 171: for(i = shift; i>0;i--)
 14906  0087E4  C089  F08A         	movff	BufferCopy@shift,BufferCopy@i
 14907  0087E8                     l13792:
 14908  0087E8  0100               	movlb	0	; () banked
 14909  0087EA  518A               	movf	BufferCopy@i& (0+255),w,b
 14910  0087EC  0100               	movlb	0	; () banked
 14911  0087EE  B4D8               	btfsc	status,2,c
 14912  0087F0  D022               	goto	l13812
 14913  0087F2  D001               	goto	l13796
 14914                           
 14915                           ; BSR set to: 0
 14916  0087F4  D020               	goto	l13812
 14917  0087F6                     l13796:
 14918                           
 14919                           ; BSR set to: 0
 14920                           ;MISC.c: 172: {
 14921                           ;MISC.c: 173: *to = ' ';
 14922  0087F6  C086  FFD9         	movff	BufferCopy@to,fsr2l
 14923  0087FA  C087  FFDA         	movff	BufferCopy@to+1,fsr2h
 14924  0087FE  0E20               	movlw	32
 14925  008800  6EDF               	movwf	indf2,c
 14926                           
 14927                           ; BSR set to: 0
 14928                           ;MISC.c: 174: to++;
 14929  008802  0100               	movlb	0	; () banked
 14930  008804  4B86               	infsnz	BufferCopy@to& (0+255),f,b
 14931  008806  2B87               	incf	(BufferCopy@to+1)& (0+255),f,b
 14932                           
 14933                           ; BSR set to: 0
 14934  008808  0100               	movlb	0	; () banked
 14935  00880A  078A               	decf	BufferCopy@i& (0+255),f,b
 14936  00880C  D7ED               	goto	l13792
 14937                           
 14938                           ; BSR set to: 0
 14939                           ;MISC.c: 175: }
 14940                           ;MISC.c: 176: while(*from != 0 && count >0)
 14941                           
 14942                           ; BSR set to: 0
 14943  00880E  D013               	goto	l13812
 14944  008810                     l13804:
 14945                           
 14946                           ; BSR set to: 0
 14947                           ;MISC.c: 177: {
 14948                           ;MISC.c: 178: *to = *from;
 14949  008810  C084  FFD9         	movff	BufferCopy@from,fsr2l
 14950  008814  C085  FFDA         	movff	BufferCopy@from+1,fsr2h
 14951  008818  C086  FFE1         	movff	BufferCopy@to,fsr1l
 14952  00881C  C087  FFE2         	movff	BufferCopy@to+1,fsr1h
 14953  008820  CFDF FFE7          	movff	indf2,indf1
 14954                           
 14955                           ; BSR set to: 0
 14956                           ;MISC.c: 179: from++;
 14957  008824  0100               	movlb	0	; () banked
 14958  008826  4B84               	infsnz	BufferCopy@from& (0+255),f,b
 14959  008828  2B85               	incf	(BufferCopy@from+1)& (0+255),f,b
 14960                           
 14961                           ; BSR set to: 0
 14962                           ;MISC.c: 180: to++;
 14963  00882A  0100               	movlb	0	; () banked
 14964  00882C  4B86               	infsnz	BufferCopy@to& (0+255),f,b
 14965  00882E  2B87               	incf	(BufferCopy@to+1)& (0+255),f,b
 14966                           
 14967                           ; BSR set to: 0
 14968                           ;MISC.c: 181: count--;
 14969  008830  0100               	movlb	0	; () banked
 14970  008832  0788               	decf	BufferCopy@count& (0+255),f,b
 14971  008834  D000               	goto	l13812
 14972  008836                     l13812:
 14973                           
 14974                           ; BSR set to: 0
 14975  008836  C084  FFD9         	movff	BufferCopy@from,fsr2l
 14976  00883A  C085  FFDA         	movff	BufferCopy@from+1,fsr2h
 14977  00883E  50DF               	movf	indf2,w,c
 14978  008840  B4D8               	btfsc	status,2,c
 14979  008842  0012               	return	
 14980                           
 14981                           ; BSR set to: 0
 14982  008844  0100               	movlb	0	; () banked
 14983  008846  5188               	movf	BufferCopy@count& (0+255),w,b
 14984  008848  0100               	movlb	0	; () banked
 14985  00884A  B4D8               	btfsc	status,2,c
 14986  00884C  0012               	return	
 14987  00884E  D7E0               	goto	l13804
 14988                           
 14989                           ; BSR set to: 0
 14990  008850  0012               	return	
 14991                           
 14992                           ; BSR set to: 0
 14993                           
 14994                           ; BSR set to: 0
 14995  008852  0012               	return		;funcret
 14996  008854                     __end_of_BufferCopy:
 14997                           	opt stack 0
 14998                           tblptru	equ	0xFF8
 14999                           tblptrh	equ	0xFF7
 15000                           tblptrl	equ	0xFF6
 15001                           tablat	equ	0xFF5
 15002                           prodh	equ	0xFF4
 15003                           prodl	equ	0xFF3
 15004                           intcon	equ	0xFF2
 15005                           indf0	equ	0xFEF
 15006                           postinc0	equ	0xFEE
 15007                           fsr0h	equ	0xFEA
 15008                           fsr0l	equ	0xFE9
 15009                           wreg	equ	0xFE8
 15010                           indf1	equ	0xFE7
 15011                           postdec1	equ	0xFE5
 15012                           fsr1h	equ	0xFE2
 15013                           fsr1l	equ	0xFE1
 15014                           indf2	equ	0xFDF
 15015                           postinc2	equ	0xFDE
 15016                           fsr2h	equ	0xFDA
 15017                           fsr2l	equ	0xFD9
 15018                           status	equ	0xFD8
 15019                           
 15020 ;; *************** function _SendRF_wait *****************
 15021 ;; Defined at:
 15022 ;;		line 145 in file "RF.c"
 15023 ;; Parameters:    Size  Location     Type
 15024 ;;  Code            2   36[BANK0 ] PTR const unsigned char 
 15025 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 15026 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 15027 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 15028 ;;		 -> Conf1_ChannelD(12), 
 15029 ;;  Config          1   38[BANK0 ] unsigned char 
 15030 ;;  size            1   39[BANK0 ] unsigned char 
 15031 ;;  amount          1   40[BANK0 ] unsigned char 
 15032 ;; Auto vars:     Size  Location     Type
 15033 ;;		None
 15034 ;; Return value:  Size  Location     Type
 15035 ;;		None               void
 15036 ;; Registers used:
 15037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15038 ;; Tracked objects:
 15039 ;;		On entry : 0/0
 15040 ;;		On exit  : 0/0
 15041 ;;		Unchanged: 0/0
 15042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15043 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15046 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15047 ;;Total ram usage:        5 bytes
 15048 ;; Hardware stack levels used:    1
 15049 ;; Hardware stack levels required when called:    8
 15050 ;; This function calls:
 15051 ;;		_LEDTimerON
 15052 ;;		_ReadIRpin
 15053 ;;		_SendRF
 15054 ;; This function is called by:
 15055 ;;		_UseBluetooth
 15056 ;;		_SendRF_Channel
 15057 ;; This function uses a non-reentrant model
 15058 ;;
 15059                           
 15060                           	psect	text15
 15061  00914A                     __ptext15:
 15062                           	opt stack 0
 15063  00914A                     _SendRF_wait:
 15064                           	opt stack 20
 15065                           
 15066                           ;RF.c: 147: (IOCBbits.IOCB4 = 0);
 15067                           
 15068                           ; BSR set to: 0
 15069                           ;incstack = 0
 15070  00914A  987D               	bcf	3965,4,c	;volatile
 15071                           
 15072                           ;RF.c: 148: INTCONbits.RBIE = 0;
 15073  00914C  96F2               	bcf	intcon,3,c	;volatile
 15074                           
 15075                           ;RF.c: 149: INTCONbits.PEIE = 0;
 15076  00914E  9CF2               	bcf	intcon,6,c	;volatile
 15077                           
 15078                           ;RF.c: 150: LEDTimerON();
 15079  009150  EC59  F04A         	call	_LEDTimerON	;wreg free
 15080                           
 15081                           ;RF.c: 151: (LATC |= 0x04);
 15082  009154  848B               	bsf	3979,2,c	;volatile
 15083                           
 15084                           ;RF.c: 152: SendRF(Code, Config, size, amount);
 15085  009156  C084  F07C         	movff	SendRF_wait@Code,SendRF@Code
 15086  00915A  C085  F07D         	movff	SendRF_wait@Code+1,SendRF@Code+1
 15087  00915E  C086  F07E         	movff	SendRF_wait@Config,SendRF@Config
 15088  009162  C087  F07F         	movff	SendRF_wait@size,SendRF@size
 15089  009166  C088  F080         	movff	SendRF_wait@amount,SendRF@RepeatAmount
 15090  00916A  ECE1  F03D         	call	_SendRF	;wreg free
 15091                           
 15092                           ;RF.c: 153: while(!Sent);
 15093  00916E  D000               	goto	l14216
 15094  009170                     l14216:
 15095  009170  0100               	movlb	0	; () banked
 15096  009172  51E3               	movf	_Sent& (0+255),w,b	;volatile
 15097  009174  B4D8               	btfsc	status,2,c
 15098  009176  D7FC               	goto	l14216
 15099                           
 15100                           ; BSR set to: 0
 15101                           ;RF.c: 154: INTCONbits.PEIE = 1;
 15102  009178  8CF2               	bsf	intcon,6,c	;volatile
 15103                           
 15104                           ; BSR set to: 0
 15105                           ;RF.c: 155: IRpinOLD = ReadIRpin();
 15106  00917A  EC96  F04A         	call	_ReadIRpin	;wreg free
 15107  00917E  6E2F               	movwf	_IRpinOLD,c
 15108                           
 15109                           ;RF.c: 156: INTCONbits.RBIF = 0;
 15110  009180  90F2               	bcf	intcon,0,c	;volatile
 15111                           
 15112                           ;RF.c: 157: (IOCBbits.IOCB4 = 1);
 15113  009182  887D               	bsf	3965,4,c	;volatile
 15114                           
 15115                           ;RF.c: 158: INTCONbits.RBIE = 1;
 15116  009184  86F2               	bsf	intcon,3,c	;volatile
 15117  009186  0012               	return		;funcret
 15118  009188                     __end_of_SendRF_wait:
 15119                           	opt stack 0
 15120                           tblptru	equ	0xFF8
 15121                           tblptrh	equ	0xFF7
 15122                           tblptrl	equ	0xFF6
 15123                           tablat	equ	0xFF5
 15124                           prodh	equ	0xFF4
 15125                           prodl	equ	0xFF3
 15126                           intcon	equ	0xFF2
 15127                           indf0	equ	0xFEF
 15128                           postinc0	equ	0xFEE
 15129                           fsr0h	equ	0xFEA
 15130                           fsr0l	equ	0xFE9
 15131                           wreg	equ	0xFE8
 15132                           indf1	equ	0xFE7
 15133                           postdec1	equ	0xFE5
 15134                           fsr1h	equ	0xFE2
 15135                           fsr1l	equ	0xFE1
 15136                           indf2	equ	0xFDF
 15137                           postinc2	equ	0xFDE
 15138                           fsr2h	equ	0xFDA
 15139                           fsr2l	equ	0xFD9
 15140                           status	equ	0xFD8
 15141                           
 15142 ;; *************** function _SendRF *****************
 15143 ;; Defined at:
 15144 ;;		line 68 in file "RF.c"
 15145 ;; Parameters:    Size  Location     Type
 15146 ;;  Code            2   28[BANK0 ] PTR const unsigned char 
 15147 ;;		 -> Conf2_ChannelH_3_OFF(16), Conf2_ChannelH_3_ON(16), Conf2_ChannelH_2_OFF(16), Conf2_ChannelH_2_ON(16), 
 15148 ;;		 -> Conf2_ChannelH_1_OFF(16), Conf2_ChannelH_1_ON(16), Conf2_ChannelD_OFF(16), Conf2_ChannelD_ON(16), 
 15149 ;;		 -> Conf2_ChannelB_OFF(16), Conf2_ChannelB_ON(16), Conf1_ChannelF(12), Conf1_ChannelE(12), 
 15150 ;;		 -> Conf1_ChannelD(12), 
 15151 ;;  Config          1   30[BANK0 ] unsigned char 
 15152 ;;  size            1   31[BANK0 ] unsigned char 
 15153 ;;  RepeatAmount    1   32[BANK0 ] unsigned char 
 15154 ;; Auto vars:     Size  Location     Type
 15155 ;;  i               1   35[BANK0 ] unsigned char 
 15156 ;; Return value:  Size  Location     Type
 15157 ;;                  1    wreg      unsigned char 
 15158 ;; Registers used:
 15159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 15160 ;; Tracked objects:
 15161 ;;		On entry : 0/0
 15162 ;;		On exit  : 0/0
 15163 ;;		Unchanged: 0/0
 15164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15165 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15166 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15167 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15168 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15169 ;;Total ram usage:        8 bytes
 15170 ;; Hardware stack levels used:    1
 15171 ;; Hardware stack levels required when called:    6
 15172 ;; This function calls:
 15173 ;;		Nothing
 15174 ;; This function is called by:
 15175 ;;		_SendRF_wait
 15176 ;; This function uses a non-reentrant model
 15177 ;;
 15178                           
 15179                           	psect	text16
 15180  007BC2                     __ptext16:
 15181                           	opt stack 0
 15182  007BC2                     _SendRF:
 15183                           	opt stack 21
 15184                           
 15185                           ;RF.c: 70: unsigned char i;
 15186                           ;RF.c: 71: if(Sent)
 15187                           
 15188                           ;incstack = 0
 15189  007BC2  0100               	movlb	0	; () banked
 15190  007BC4  51E3               	movf	_Sent& (0+255),w,b	;volatile
 15191  007BC6  B4D8               	btfsc	status,2,c
 15192  007BC8  0012               	return	
 15193                           
 15194                           ; BSR set to: 0
 15195                           ;RF.c: 72: {
 15196                           ;RF.c: 74: RF_IR = 55;
 15197  007BCA  0E37               	movlw	55
 15198  007BCC  6E42               	movwf	_RF_IR,c
 15199                           
 15200                           ;RF.c: 75: if((Config <= 0) || (Config > 2))
 15201  007BCE  0100               	movlb	0	; () banked
 15202  007BD0  517E               	movf	SendRF@Config& (0+255),w,b
 15203  007BD2  0100               	movlb	0	; () banked
 15204  007BD4  B4D8               	btfsc	status,2,c
 15205  007BD6  0012               	return	
 15206                           
 15207                           ; BSR set to: 0
 15208  007BD8  0E02               	movlw	2
 15209  007BDA  0100               	movlb	0	; () banked
 15210  007BDC  657E               	cpfsgt	SendRF@Config& (0+255),b
 15211  007BDE  D002               	goto	l2118
 15212  007BE0  0012               	return	
 15213                           
 15214                           ; BSR set to: 0
 15215                           ;RF.c: 76: {
 15216                           ;RF.c: 77: return 0;
 15217                           ;	Return value of _SendRF is never used
 15218  007BE2  0012               	return	
 15219  007BE4                     l2118:
 15220                           
 15221                           ; BSR set to: 0
 15222                           ;RF.c: 78: }
 15223                           ;RF.c: 79: RFConfig = Config;
 15224  007BE4  C07E  F034         	movff	SendRF@Config,_RFConfig
 15225                           
 15226                           ; BSR set to: 0
 15227                           ;RF.c: 80: if(Config == 1)
 15228  007BE8  0100               	movlb	0	; () banked
 15229  007BEA  057E               	decf	SendRF@Config& (0+255),w,b
 15230  007BEC  A4D8               	btfss	status,2,c
 15231  007BEE  D002               	goto	l13726
 15232                           
 15233                           ; BSR set to: 0
 15234                           ;RF.c: 81: {
 15235                           ;RF.c: 82: RF_IR_Postscaler = 2;
 15236  007BF0  0E02               	movlw	2
 15237  007BF2  D006               	goto	L12
 15238  007BF4                     l13726:
 15239                           
 15240                           ; BSR set to: 0
 15241                           ;RF.c: 84: else if(Config == 2)
 15242  007BF4  0E02               	movlw	2
 15243  007BF6  0100               	movlb	0	; () banked
 15244  007BF8  197E               	xorwf	SendRF@Config& (0+255),w,b
 15245  007BFA  A4D8               	btfss	status,2,c
 15246  007BFC  0012               	return	
 15247                           
 15248                           ; BSR set to: 0
 15249                           ;RF.c: 85: {
 15250                           ;RF.c: 86: RF_IR_Postscaler = 4;
 15251  007BFE  0E04               	movlw	4
 15252  007C00                     L12:
 15253  007C00  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 15254                           
 15255                           ;RF.c: 87: }
 15256  007C02  D002               	goto	l13730
 15257                           
 15258                           ; BSR set to: 0
 15259                           ;RF.c: 88: else
 15260                           ;RF.c: 89: {
 15261                           ;RF.c: 90: return 0;
 15262                           ;	Return value of _SendRF is never used
 15263  007C04  0012               	return	
 15264                           
 15265                           ; BSR set to: 0
 15266  007C06  D000               	goto	l13730
 15267  007C08                     l13730:
 15268                           
 15269                           ; BSR set to: 0
 15270                           ;RF.c: 91: }
 15271                           ;RF.c: 93: Sent = 0;
 15272  007C08  0E00               	movlw	0
 15273  007C0A  0100               	movlb	0	; () banked
 15274  007C0C  6FE3               	movwf	_Sent& (0+255),b	;volatile
 15275                           
 15276                           ; BSR set to: 0
 15277                           ;RF.c: 94: Sendcount = RepeatAmount;
 15278  007C0E  C080  F038         	movff	SendRF@RepeatAmount,_Sendcount	;volatile
 15279                           
 15280                           ;RF.c: 95: RFsendFlag = 1;
 15281  007C12  0E01               	movlw	1
 15282  007C14  6E37               	movwf	_RFsendFlag,c	;volatile
 15283                           
 15284                           ;RF.c: 96: RFcodeBit = 0;
 15285  007C16  0E00               	movlw	0
 15286  007C18  6E35               	movwf	_RFcodeBit,c
 15287                           
 15288                           ;RF.c: 97: RFcodePlace = 1;
 15289  007C1A  0E01               	movlw	1
 15290  007C1C  6E36               	movwf	_RFcodePlace,c
 15291                           
 15292                           ; BSR set to: 0
 15293                           ;RF.c: 100: if(size >= 20)
 15294  007C1E  0E13               	movlw	19
 15295  007C20  0100               	movlb	0	; () banked
 15296  007C22  657F               	cpfsgt	SendRF@size& (0+255),b
 15297  007C24  D002               	goto	l13738
 15298  007C26  0012               	return	
 15299                           
 15300                           ; BSR set to: 0
 15301                           ;RF.c: 101: {
 15302                           ;RF.c: 102: return 0;
 15303                           ;	Return value of _SendRF is never used
 15304  007C28  0012               	return	
 15305  007C2A                     l13738:
 15306                           
 15307                           ; BSR set to: 0
 15308                           ;RF.c: 103: }
 15309                           ;RF.c: 104: for(i=0;i<size;i++)
 15310  007C2A  0E00               	movlw	0
 15311  007C2C  0100               	movlb	0	; () banked
 15312  007C2E  6F83               	movwf	SendRF@i& (0+255),b
 15313  007C30  D021               	goto	l13744
 15314  007C32                     l13740:
 15315                           
 15316                           ; BSR set to: 0
 15317                           ;RF.c: 105: {
 15318                           ;RF.c: 106: RFsendCode[i] = Code[i];
 15319  007C32  0100               	movlb	0	; () banked
 15320  007C34  5183               	movf	SendRF@i& (0+255),w,b
 15321  007C36  0D01               	mullw	1
 15322  007C38  C07C  F081         	movff	SendRF@Code,??_SendRF
 15323  007C3C  C07D  F082         	movff	SendRF@Code+1,??_SendRF+1
 15324  007C40  50F3               	movf	prodl,w,c
 15325  007C42  0100               	movlb	0	; () banked
 15326  007C44  2781               	addwf	??_SendRF& (0+255),f,b
 15327  007C46  50F4               	movf	prodh,w,c
 15328  007C48  0100               	movlb	0	; () banked
 15329  007C4A  2382               	addwfc	(??_SendRF+1)& (0+255),f,b
 15330  007C4C  C081  FFF6         	movff	??_SendRF,tblptrl
 15331  007C50  C082  FFF7         	movff	??_SendRF+1,tblptrh
 15332  007C54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15333  007C54  6AF8               	clrf	tblptru,c
 15334  007C56                     	endif
 15335  007C56                     	if	0	;tblptru may be non-zero
 15336  007C56                     	endif
 15337  007C56  0100               	movlb	0	; () banked
 15338  007C58  5183               	movf	SendRF@i& (0+255),w,b
 15339  007C5A  0D01               	mullw	1
 15340  007C5C  0ECF               	movlw	low _RFsendCode
 15341  007C5E  24F3               	addwf	prodl,w,c
 15342  007C60  6ED9               	movwf	fsr2l,c
 15343  007C62  0E02               	movlw	high _RFsendCode
 15344  007C64  20F4               	addwfc	prodh,w,c
 15345  007C66  6EDA               	movwf	fsr2h,c
 15346  007C68  0008               	tblrd		*
 15347  007C6A  CFF5 FFDF          	movff	tablat,indf2
 15348                           
 15349                           ; BSR set to: 0
 15350  007C6E  0100               	movlb	0	; () banked
 15351  007C70  2B83               	incf	SendRF@i& (0+255),f,b
 15352  007C72  D000               	goto	l13744
 15353  007C74                     l13744:
 15354                           
 15355                           ; BSR set to: 0
 15356  007C74  0100               	movlb	0	; () banked
 15357  007C76  517F               	movf	SendRF@size& (0+255),w,b
 15358  007C78  0100               	movlb	0	; () banked
 15359  007C7A  5D83               	subwf	SendRF@i& (0+255),w,b
 15360  007C7C  A0D8               	btfss	status,0,c
 15361  007C7E  D7D9               	goto	l13740
 15362                           
 15363                           ; BSR set to: 0
 15364                           ;RF.c: 107: }
 15365                           ;RF.c: 108: RFsendCode[i] = 99;
 15366                           
 15367                           ; BSR set to: 0
 15368  007C80  0100               	movlb	0	; () banked
 15369  007C82  5183               	movf	SendRF@i& (0+255),w,b
 15370  007C84  0D01               	mullw	1
 15371  007C86  0ECF               	movlw	low _RFsendCode
 15372  007C88  24F3               	addwf	prodl,w,c
 15373  007C8A  6ED9               	movwf	fsr2l,c
 15374  007C8C  0E02               	movlw	high _RFsendCode
 15375  007C8E  20F4               	addwfc	prodh,w,c
 15376  007C90  6EDA               	movwf	fsr2h,c
 15377  007C92  0E63               	movlw	99
 15378  007C94  6EDF               	movwf	indf2,c
 15379                           
 15380                           ; BSR set to: 0
 15381                           ;RF.c: 110: (TMR2 = 0);
 15382  007C96  0E00               	movlw	0
 15383  007C98  6ECC               	movwf	4044,c	;volatile
 15384                           
 15385                           ; BSR set to: 0
 15386                           ;RF.c: 111: if(Config == 1)
 15387  007C9A  0100               	movlb	0	; () banked
 15388  007C9C  057E               	decf	SendRF@Config& (0+255),w,b
 15389  007C9E  A4D8               	btfss	status,2,c
 15390  007CA0  D002               	goto	l13754
 15391                           
 15392                           ; BSR set to: 0
 15393                           ;RF.c: 112: {
 15394                           ;RF.c: 113: (PR2 = 250);
 15395  007CA2  0EFA               	movlw	250
 15396  007CA4  D001               	goto	L13
 15397  007CA6                     l13754:
 15398                           
 15399                           ; BSR set to: 0
 15400                           ;RF.c: 115: else
 15401                           ;RF.c: 116: {
 15402                           ;RF.c: 117: (PR2 = 149);
 15403  007CA6  0E95               	movlw	149
 15404  007CA8                     L13:
 15405  007CA8  6ECB               	movwf	4043,c	;volatile
 15406  007CAA  D000               	goto	l13756
 15407  007CAC                     l13756:
 15408                           
 15409                           ; BSR set to: 0
 15410                           ;RF.c: 118: }
 15411                           ;RF.c: 119: (T2CONbits.TMR2ON = 1);
 15412  007CAC  84CA               	bsf	4042,2,c	;volatile
 15413                           
 15414                           ; BSR set to: 0
 15415                           ;RF.c: 120: return 1;
 15416                           ;	Return value of _SendRF is never used
 15417  007CAE  0012               	return	
 15418                           
 15419                           ; BSR set to: 0
 15420                           
 15421                           ; BSR set to: 0
 15422                           ;RF.c: 121: }
 15423                           ;RF.c: 122: return 2;
 15424                           ;	Return value of _SendRF is never used
 15425  007CB0  0012               	return		;funcret
 15426  007CB2                     __end_of_SendRF:
 15427                           	opt stack 0
 15428                           tblptru	equ	0xFF8
 15429                           tblptrh	equ	0xFF7
 15430                           tblptrl	equ	0xFF6
 15431                           tablat	equ	0xFF5
 15432                           prodh	equ	0xFF4
 15433                           prodl	equ	0xFF3
 15434                           intcon	equ	0xFF2
 15435                           indf0	equ	0xFEF
 15436                           postinc0	equ	0xFEE
 15437                           fsr0h	equ	0xFEA
 15438                           fsr0l	equ	0xFE9
 15439                           wreg	equ	0xFE8
 15440                           indf1	equ	0xFE7
 15441                           postdec1	equ	0xFE5
 15442                           fsr1h	equ	0xFE2
 15443                           fsr1l	equ	0xFE1
 15444                           indf2	equ	0xFDF
 15445                           postinc2	equ	0xFDE
 15446                           fsr2h	equ	0xFDA
 15447                           fsr2l	equ	0xFD9
 15448                           status	equ	0xFD8
 15449                           
 15450 ;; *************** function _LEDTimerON *****************
 15451 ;; Defined at:
 15452 ;;		line 149 in file "Timer.c"
 15453 ;; Parameters:    Size  Location     Type
 15454 ;;		None
 15455 ;; Auto vars:     Size  Location     Type
 15456 ;;		None
 15457 ;; Return value:  Size  Location     Type
 15458 ;;		None               void
 15459 ;; Registers used:
 15460 ;;		wreg, status,2, cstack
 15461 ;; Tracked objects:
 15462 ;;		On entry : 0/0
 15463 ;;		On exit  : 0/0
 15464 ;;		Unchanged: 0/0
 15465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15470 ;;Total ram usage:        0 bytes
 15471 ;; Hardware stack levels used:    1
 15472 ;; Hardware stack levels required when called:    7
 15473 ;; This function calls:
 15474 ;;		_ResetTimer1
 15475 ;; This function is called by:
 15476 ;;		_UseIRCode
 15477 ;;		_WaitForIRsignal
 15478 ;;		_SendRF_wait
 15479 ;; This function uses a non-reentrant model
 15480 ;;
 15481                           
 15482                           	psect	text17
 15483  0094B2                     __ptext17:
 15484                           	opt stack 0
 15485  0094B2                     _LEDTimerON:
 15486                           	opt stack 20
 15487                           
 15488                           ;Timer.c: 151: (T1CONbits.TMR1ON = FALSE);
 15489                           
 15490                           ; BSR set to: 0
 15491                           ;incstack = 0
 15492  0094B2  90CD               	bcf	4045,0,c	;volatile
 15493                           
 15494                           ;Timer.c: 152: ResetTimer1();
 15495  0094B4  ECB9  F04A         	call	_ResetTimer1	;wreg free
 15496                           
 15497                           ;Timer.c: 153: Timer1_Postscaler = 0;
 15498  0094B8  0E00               	movlw	0
 15499  0094BA  6E39               	movwf	_Timer1_Postscaler,c
 15500                           
 15501                           ;Timer.c: 154: ResetTimer1();
 15502  0094BC  ECB9  F04A         	call	_ResetTimer1	;wreg free
 15503                           
 15504                           ;Timer.c: 155: (T1CONbits.TMR1ON = TRUE);
 15505  0094C0  80CD               	bsf	4045,0,c	;volatile
 15506  0094C2  0012               	return		;funcret
 15507  0094C4                     __end_of_LEDTimerON:
 15508                           	opt stack 0
 15509                           tblptru	equ	0xFF8
 15510                           tblptrh	equ	0xFF7
 15511                           tblptrl	equ	0xFF6
 15512                           tablat	equ	0xFF5
 15513                           prodh	equ	0xFF4
 15514                           prodl	equ	0xFF3
 15515                           intcon	equ	0xFF2
 15516                           indf0	equ	0xFEF
 15517                           postinc0	equ	0xFEE
 15518                           fsr0h	equ	0xFEA
 15519                           fsr0l	equ	0xFE9
 15520                           wreg	equ	0xFE8
 15521                           indf1	equ	0xFE7
 15522                           postdec1	equ	0xFE5
 15523                           fsr1h	equ	0xFE2
 15524                           fsr1l	equ	0xFE1
 15525                           indf2	equ	0xFDF
 15526                           postinc2	equ	0xFDE
 15527                           fsr2h	equ	0xFDA
 15528                           fsr2l	equ	0xFD9
 15529                           status	equ	0xFD8
 15530                           
 15531 ;; *************** function _ResetTimer1 *****************
 15532 ;; Defined at:
 15533 ;;		line 123 in file "Timer.c"
 15534 ;; Parameters:    Size  Location     Type
 15535 ;;		None
 15536 ;; Auto vars:     Size  Location     Type
 15537 ;;		None
 15538 ;; Return value:  Size  Location     Type
 15539 ;;		None               void
 15540 ;; Registers used:
 15541 ;;		wreg, status,2
 15542 ;; Tracked objects:
 15543 ;;		On entry : 0/0
 15544 ;;		On exit  : 0/0
 15545 ;;		Unchanged: 0/0
 15546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15551 ;;Total ram usage:        0 bytes
 15552 ;; Hardware stack levels used:    1
 15553 ;; Hardware stack levels required when called:    6
 15554 ;; This function calls:
 15555 ;;		Nothing
 15556 ;; This function is called by:
 15557 ;;		_LEDTimerON
 15558 ;; This function uses a non-reentrant model
 15559 ;;
 15560                           
 15561                           	psect	text18
 15562  009572                     __ptext18:
 15563                           	opt stack 0
 15564  009572                     _ResetTimer1:
 15565                           	opt stack 20
 15566                           
 15567                           ;Timer.c: 129: TMR1H = 0;
 15568                           
 15569                           ;incstack = 0
 15570  009572  0E00               	movlw	0
 15571  009574  6ECF               	movwf	4047,c	;volatile
 15572                           
 15573                           ;Timer.c: 130: TMR1L = 2;
 15574  009576  0E02               	movlw	2
 15575  009578  6ECE               	movwf	4046,c	;volatile
 15576  00957A  0012               	return		;funcret
 15577  00957C                     __end_of_ResetTimer1:
 15578                           	opt stack 0
 15579                           tblptru	equ	0xFF8
 15580                           tblptrh	equ	0xFF7
 15581                           tblptrl	equ	0xFF6
 15582                           tablat	equ	0xFF5
 15583                           prodh	equ	0xFF4
 15584                           prodl	equ	0xFF3
 15585                           intcon	equ	0xFF2
 15586                           indf0	equ	0xFEF
 15587                           postinc0	equ	0xFEE
 15588                           fsr0h	equ	0xFEA
 15589                           fsr0l	equ	0xFE9
 15590                           wreg	equ	0xFE8
 15591                           indf1	equ	0xFE7
 15592                           postdec1	equ	0xFE5
 15593                           fsr1h	equ	0xFE2
 15594                           fsr1l	equ	0xFE1
 15595                           indf2	equ	0xFDF
 15596                           postinc2	equ	0xFDE
 15597                           fsr2h	equ	0xFDA
 15598                           fsr2l	equ	0xFD9
 15599                           status	equ	0xFD8
 15600                           
 15601 ;; *************** function _SendNEC_wait *****************
 15602 ;; Defined at:
 15603 ;;		line 419 in file "IR.c"
 15604 ;; Parameters:    Size  Location     Type
 15605 ;;  code            4   49[BANK0 ] unsigned long 
 15606 ;;  RepeatAmount    1   53[BANK0 ] unsigned char 
 15607 ;; Auto vars:     Size  Location     Type
 15608 ;;  toggle          1   54[BANK0 ] unsigned char 
 15609 ;; Return value:  Size  Location     Type
 15610 ;;		None               void
 15611 ;; Registers used:
 15612 ;;		wreg, status,2, status,0, cstack
 15613 ;; Tracked objects:
 15614 ;;		On entry : 0/0
 15615 ;;		On exit  : 0/0
 15616 ;;		Unchanged: 0/0
 15617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15618 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15619 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15621 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15622 ;;Total ram usage:        6 bytes
 15623 ;; Hardware stack levels used:    1
 15624 ;; Hardware stack levels required when called:    8
 15625 ;; This function calls:
 15626 ;;		_CheckReceivingIR
 15627 ;;		_ReadIRpin
 15628 ;;		_SendNEC_bytes
 15629 ;;		_delayUS
 15630 ;; This function is called by:
 15631 ;;		_UseBluetooth
 15632 ;; This function uses a non-reentrant model
 15633 ;;
 15634                           
 15635                           	psect	text19
 15636  008608                     __ptext19:
 15637                           	opt stack 0
 15638  008608                     _SendNEC_wait:
 15639                           	opt stack 21
 15640                           
 15641                           ;IR.c: 421: unsigned char toggle = 0;
 15642                           
 15643                           ;incstack = 0
 15644  008608  0E00               	movlw	0
 15645  00860A  0100               	movlb	0	; () banked
 15646  00860C  6F96               	movwf	SendNEC_wait@toggle& (0+255),b
 15647                           
 15648                           ; BSR set to: 0
 15649                           
 15650                           ;IR.c: 422: while(CheckReceivingIR());
 15651  00860E  D000               	goto	l15084
 15652  008610                     l15084:
 15653  008610  EC62  F04A         	call	_CheckReceivingIR	;wreg free
 15654  008614  0900               	iorlw	0
 15655  008616  A4D8               	btfss	status,2,c
 15656  008618  D7FB               	goto	l15084
 15657                           
 15658                           ;IR.c: 424: (IOCBbits.IOCB4 = 0);
 15659  00861A  987D               	bcf	3965,4,c	;volatile
 15660                           
 15661                           ;IR.c: 425: INTCONbits.RBIE = 0;
 15662  00861C  96F2               	bcf	intcon,3,c	;volatile
 15663                           
 15664                           ;IR.c: 426: INTCONbits.PEIE = 0;
 15665  00861E  9CF2               	bcf	intcon,6,c	;volatile
 15666                           
 15667                           ;IR.c: 428: SendNEC_bytes(code, RepeatAmount);
 15668  008620  C091  F08C         	movff	SendNEC_wait@code,SendNEC_bytes@code
 15669  008624  C092  F08D         	movff	SendNEC_wait@code+1,SendNEC_bytes@code+1
 15670  008628  C093  F08E         	movff	SendNEC_wait@code+2,SendNEC_bytes@code+2
 15671  00862C  C094  F08F         	movff	SendNEC_wait@code+3,SendNEC_bytes@code+3
 15672  008630  C095  F090         	movff	SendNEC_wait@RepeatAmount,SendNEC_bytes@RepeatAmount
 15673  008634  EC2A  F044         	call	_SendNEC_bytes	;wreg free
 15674                           
 15675                           ;IR.c: 429: while(!Sent)
 15676  008638  D01C               	goto	l15106
 15677  00863A                     l15088:
 15678                           
 15679                           ;IR.c: 430: {
 15680                           ;IR.c: 431: if(IRmod)
 15681  00863A  0100               	movlb	0	; () banked
 15682  00863C  51DA               	movf	_IRmod& (0+255),w,b	;volatile
 15683  00863E  B4D8               	btfsc	status,2,c
 15684  008640  D013               	goto	l15102
 15685                           
 15686                           ; BSR set to: 0
 15687                           ;IR.c: 432: {
 15688                           ;IR.c: 434: if(toggle < 9)
 15689  008642  0E09               	movlw	9
 15690  008644  0100               	movlb	0	; () banked
 15691  008646  6196               	cpfslt	SendNEC_wait@toggle& (0+255),b
 15692  008648  D002               	goto	l15094
 15693                           
 15694                           ; BSR set to: 0
 15695                           ;IR.c: 435: {
 15696                           ;IR.c: 436: (LATC |= 0x08);
 15697  00864A  868B               	bsf	3979,3,c	;volatile
 15698                           
 15699                           ;IR.c: 437: }
 15700  00864C  D00A               	goto	l15100
 15701  00864E                     l15094:
 15702                           
 15703                           ; BSR set to: 0
 15704                           ;IR.c: 438: else if(toggle < 17)
 15705  00864E  0E11               	movlw	17
 15706  008650  0100               	movlb	0	; () banked
 15707  008652  6196               	cpfslt	SendNEC_wait@toggle& (0+255),b
 15708  008654  D002               	goto	l15098
 15709                           
 15710                           ; BSR set to: 0
 15711                           ;IR.c: 439: {
 15712                           ;IR.c: 440: (LATC &= ~0x08);
 15713  008656  968B               	bcf	3979,3,c	;volatile
 15714                           
 15715                           ;IR.c: 441: }
 15716  008658  D004               	goto	l15100
 15717  00865A                     l15098:
 15718                           
 15719                           ; BSR set to: 0
 15720                           ;IR.c: 442: else
 15721                           ;IR.c: 443: {
 15722                           ;IR.c: 444: toggle = 0;
 15723  00865A  0E00               	movlw	0
 15724  00865C  0100               	movlb	0	; () banked
 15725  00865E  6F96               	movwf	SendNEC_wait@toggle& (0+255),b
 15726                           
 15727                           ; BSR set to: 0
 15728  008660  D000               	goto	l15100
 15729  008662                     l15100:
 15730                           
 15731                           ; BSR set to: 0
 15732                           ;IR.c: 445: }
 15733                           ;IR.c: 446: toggle++;
 15734  008662  0100               	movlb	0	; () banked
 15735  008664  2B96               	incf	SendNEC_wait@toggle& (0+255),f,b
 15736                           
 15737                           ;IR.c: 447: }
 15738  008666  D005               	goto	l15106
 15739  008668                     l15102:
 15740                           
 15741                           ; BSR set to: 0
 15742                           ;IR.c: 448: else
 15743                           ;IR.c: 449: {
 15744                           ;IR.c: 450: (LATC &= ~0x08);
 15745  008668  968B               	bcf	3979,3,c	;volatile
 15746                           
 15747                           ; BSR set to: 0
 15748                           ;IR.c: 451: toggle = 0;
 15749  00866A  0E00               	movlw	0
 15750  00866C  0100               	movlb	0	; () banked
 15751  00866E  6F96               	movwf	SendNEC_wait@toggle& (0+255),b
 15752                           
 15753                           ; BSR set to: 0
 15754  008670  D000               	goto	l15106
 15755  008672                     l15106:
 15756  008672  0100               	movlb	0	; () banked
 15757  008674  51E3               	movf	_Sent& (0+255),w,b	;volatile
 15758  008676  B4D8               	btfsc	status,2,c
 15759  008678  D7E0               	goto	l15088
 15760                           
 15761                           ; BSR set to: 0
 15762                           ;IR.c: 452: }
 15763                           ;IR.c: 453: }
 15764                           ;IR.c: 455: if(IRbitPosition)
 15765                           
 15766                           ; BSR set to: 0
 15767  00867A  5040               	movf	_IRbitPosition,w,c	;volatile
 15768  00867C  A4D8               	btfss	status,2,c
 15769                           
 15770                           ; BSR set to: 0
 15771                           ;IR.c: 456: {
 15772                           ;IR.c: 458: __nop();
 15773  00867E  F000               	nop	
 15774                           
 15775                           ;IR.c: 459: }
 15776                           ;IR.c: 461: INTCONbits.PEIE = 1;
 15777  008680  8CF2               	bsf	intcon,6,c	;volatile
 15778                           
 15779                           ;IR.c: 462: delayUS(8000);
 15780  008682  0E40               	movlw	64
 15781  008684  0100               	movlb	0	; () banked
 15782  008686  6F7C               	movwf	delayUS@US& (0+255),b
 15783  008688  0E1F               	movlw	31
 15784  00868A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 15785  00868C  0E00               	movlw	0
 15786  00868E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 15787  008690  0E00               	movlw	0
 15788  008692  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 15789  008694  EC7B  F047         	call	_delayUS	;wreg free
 15790                           
 15791                           ;IR.c: 463: IRpinOLD = ReadIRpin();
 15792  008698  EC96  F04A         	call	_ReadIRpin	;wreg free
 15793  00869C  6E2F               	movwf	_IRpinOLD,c
 15794                           
 15795                           ;IR.c: 464: INTCONbits.RBIF = 0;
 15796  00869E  90F2               	bcf	intcon,0,c	;volatile
 15797                           
 15798                           ;IR.c: 465: (IOCBbits.IOCB4 = 1);
 15799  0086A0  887D               	bsf	3965,4,c	;volatile
 15800                           
 15801                           ;IR.c: 466: INTCONbits.RBIE = 1;
 15802  0086A2  86F2               	bsf	intcon,3,c	;volatile
 15803  0086A4  0012               	return		;funcret
 15804  0086A6                     __end_of_SendNEC_wait:
 15805                           	opt stack 0
 15806                           tblptru	equ	0xFF8
 15807                           tblptrh	equ	0xFF7
 15808                           tblptrl	equ	0xFF6
 15809                           tablat	equ	0xFF5
 15810                           prodh	equ	0xFF4
 15811                           prodl	equ	0xFF3
 15812                           intcon	equ	0xFF2
 15813                           indf0	equ	0xFEF
 15814                           postinc0	equ	0xFEE
 15815                           fsr0h	equ	0xFEA
 15816                           fsr0l	equ	0xFE9
 15817                           wreg	equ	0xFE8
 15818                           indf1	equ	0xFE7
 15819                           postdec1	equ	0xFE5
 15820                           fsr1h	equ	0xFE2
 15821                           fsr1l	equ	0xFE1
 15822                           indf2	equ	0xFDF
 15823                           postinc2	equ	0xFDE
 15824                           fsr2h	equ	0xFDA
 15825                           fsr2l	equ	0xFD9
 15826                           status	equ	0xFD8
 15827                           
 15828 ;; *************** function _SendNEC_bytes *****************
 15829 ;; Defined at:
 15830 ;;		line 356 in file "IR.c"
 15831 ;; Parameters:    Size  Location     Type
 15832 ;;  code            4   44[BANK0 ] unsigned long 
 15833 ;;  RepeatAmount    1   48[BANK0 ] unsigned char 
 15834 ;; Auto vars:     Size  Location     Type
 15835 ;;		None
 15836 ;; Return value:  Size  Location     Type
 15837 ;;                  1    wreg      unsigned char 
 15838 ;; Registers used:
 15839 ;;		wreg, status,2, status,0, cstack
 15840 ;; Tracked objects:
 15841 ;;		On entry : 0/0
 15842 ;;		On exit  : 0/0
 15843 ;;		Unchanged: 0/0
 15844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15845 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15848 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15849 ;;Total ram usage:        5 bytes
 15850 ;; Hardware stack levels used:    1
 15851 ;; Hardware stack levels required when called:    7
 15852 ;; This function calls:
 15853 ;;		_Reverse_4Byte
 15854 ;; This function is called by:
 15855 ;;		_SendNEC_wait
 15856 ;; This function uses a non-reentrant model
 15857 ;;
 15858                           
 15859                           	psect	text20
 15860  008854                     __ptext20:
 15861                           	opt stack 0
 15862  008854                     _SendNEC_bytes:
 15863                           	opt stack 21
 15864                           
 15865                           ;IR.c: 385: if(Sent)
 15866                           
 15867                           ;incstack = 0
 15868  008854  0100               	movlb	0	; () banked
 15869  008856  51E3               	movf	_Sent& (0+255),w,b	;volatile
 15870  008858  B4D8               	btfsc	status,2,c
 15871  00885A  0012               	return	
 15872                           
 15873                           ; BSR set to: 0
 15874                           ;IR.c: 386: {
 15875                           ;IR.c: 388: if(!code)
 15876  00885C  0100               	movlb	0	; () banked
 15877  00885E  518C               	movf	SendNEC_bytes@code& (0+255),w,b
 15878  008860  0100               	movlb	0	; () banked
 15879  008862  118D               	iorwf	(SendNEC_bytes@code+1)& (0+255),w,b
 15880  008864  0100               	movlb	0	; () banked
 15881  008866  118E               	iorwf	(SendNEC_bytes@code+2)& (0+255),w,b
 15882  008868  0100               	movlb	0	; () banked
 15883  00886A  118F               	iorwf	(SendNEC_bytes@code+3)& (0+255),w,b
 15884  00886C  B4D8               	btfsc	status,2,c
 15885  00886E  0012               	return	
 15886  008870  D001               	goto	l14050
 15887                           
 15888                           ; BSR set to: 0
 15889                           ;IR.c: 389: {
 15890                           ;IR.c: 390: return 0;
 15891                           ;	Return value of _SendNEC_bytes is never used
 15892  008872  0012               	return	
 15893  008874                     l14050:
 15894                           
 15895                           ; BSR set to: 0
 15896                           ;IR.c: 391: }
 15897                           ;IR.c: 392: RF_IR = 66;
 15898  008874  0E42               	movlw	66
 15899  008876  6E42               	movwf	_RF_IR,c
 15900                           
 15901                           ;IR.c: 393: Sent = 0;
 15902  008878  0E00               	movlw	0
 15903  00887A  0100               	movlb	0	; () banked
 15904  00887C  6FE3               	movwf	_Sent& (0+255),b	;volatile
 15905                           
 15906                           ;IR.c: 394: IRsendFlag = 1;
 15907  00887E  0E01               	movlw	1
 15908  008880  6E33               	movwf	_IRsendFlag,c
 15909                           
 15910                           ;IR.c: 395: IRcodeBit = 0;
 15911  008882  0E00               	movlw	0
 15912  008884  6E2E               	movwf	_IRcodeBit,c
 15913                           
 15914                           ;IR.c: 396: IRcodePlace = 7;
 15915  008886  0E07               	movlw	7
 15916  008888  6E41               	movwf	_IRcodePlace,c
 15917                           
 15918                           ; BSR set to: 0
 15919                           ;IR.c: 397: IRsendCode = Reverse_4Byte(code);
 15920  00888A  C08C  F07C         	movff	SendNEC_bytes@code,Reverse_4Byte@This
 15921  00888E  C08D  F07D         	movff	SendNEC_bytes@code+1,Reverse_4Byte@This+1
 15922  008892  C08E  F07E         	movff	SendNEC_bytes@code+2,Reverse_4Byte@This+2
 15923  008896  C08F  F07F         	movff	SendNEC_bytes@code+3,Reverse_4Byte@This+3
 15924  00889A  EC92  F018         	call	_Reverse_4Byte	;wreg free
 15925  00889E  C07C  F023         	movff	?_Reverse_4Byte,_IRsendCode
 15926  0088A2  C07D  F024         	movff	?_Reverse_4Byte+1,_IRsendCode+1
 15927  0088A6  C07E  F025         	movff	?_Reverse_4Byte+2,_IRsendCode+2
 15928  0088AA  C07F  F026         	movff	?_Reverse_4Byte+3,_IRsendCode+3
 15929                           
 15930                           ;IR.c: 398: if(RepeatAmount)
 15931  0088AE  0100               	movlb	0	; () banked
 15932  0088B0  5190               	movf	SendNEC_bytes@RepeatAmount& (0+255),w,b
 15933  0088B2  0100               	movlb	0	; () banked
 15934  0088B4  B4D8               	btfsc	status,2,c
 15935  0088B6  D003               	goto	l14058
 15936                           
 15937                           ; BSR set to: 0
 15938                           ;IR.c: 399: {
 15939                           ;IR.c: 400: IRrepeatflag = 1;
 15940  0088B8  0E01               	movlw	1
 15941  0088BA  6E32               	movwf	_IRrepeatflag,c
 15942  0088BC  D000               	goto	l14058
 15943  0088BE                     l14058:
 15944                           
 15945                           ; BSR set to: 0
 15946                           ;IR.c: 401: }
 15947                           ;IR.c: 402: IRrepeatAmount = RepeatAmount;
 15948  0088BE  C090  F031         	movff	SendNEC_bytes@RepeatAmount,_IRrepeatAmount
 15949                           
 15950                           ;IR.c: 403: (TMR2 = 0);
 15951  0088C2  0E00               	movlw	0
 15952  0088C4  6ECC               	movwf	4044,c	;volatile
 15953                           
 15954                           ;IR.c: 404: (PR2 = 150);
 15955  0088C6  0E96               	movlw	150
 15956  0088C8  6ECB               	movwf	4043,c	;volatile
 15957                           
 15958                           ;IR.c: 405: RF_IR_Postscaler = 4;
 15959  0088CA  0E04               	movlw	4
 15960  0088CC  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 15961                           
 15962                           ;IR.c: 406: (IRmod = 1);
 15963  0088CE  0E01               	movlw	1
 15964  0088D0  0100               	movlb	0	; () banked
 15965  0088D2  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 15966                           
 15967                           ; BSR set to: 0
 15968                           ;IR.c: 407: (T2CONbits.TMR2ON = 1);
 15969  0088D4  84CA               	bsf	4042,2,c	;volatile
 15970                           
 15971                           ; BSR set to: 0
 15972                           ;IR.c: 408: return 1;
 15973                           ;	Return value of _SendNEC_bytes is never used
 15974  0088D6  0012               	return	
 15975                           
 15976                           ; BSR set to: 0
 15977                           
 15978                           ; BSR set to: 0
 15979                           ;IR.c: 409: }
 15980                           ;IR.c: 410: return 2;
 15981                           ;	Return value of _SendNEC_bytes is never used
 15982  0088D8  0012               	return		;funcret
 15983  0088DA                     __end_of_SendNEC_bytes:
 15984                           	opt stack 0
 15985                           tblptru	equ	0xFF8
 15986                           tblptrh	equ	0xFF7
 15987                           tblptrl	equ	0xFF6
 15988                           tablat	equ	0xFF5
 15989                           prodh	equ	0xFF4
 15990                           prodl	equ	0xFF3
 15991                           intcon	equ	0xFF2
 15992                           indf0	equ	0xFEF
 15993                           postinc0	equ	0xFEE
 15994                           fsr0h	equ	0xFEA
 15995                           fsr0l	equ	0xFE9
 15996                           wreg	equ	0xFE8
 15997                           indf1	equ	0xFE7
 15998                           postdec1	equ	0xFE5
 15999                           fsr1h	equ	0xFE2
 16000                           fsr1l	equ	0xFE1
 16001                           indf2	equ	0xFDF
 16002                           postinc2	equ	0xFDE
 16003                           fsr2h	equ	0xFDA
 16004                           fsr2l	equ	0xFD9
 16005                           status	equ	0xFD8
 16006                           
 16007 ;; *************** function _Reverse_4Byte *****************
 16008 ;; Defined at:
 16009 ;;		line 412 in file "MISC.c"
 16010 ;; Parameters:    Size  Location     Type
 16011 ;;  This            4   28[BANK0 ] unsigned long 
 16012 ;; Auto vars:     Size  Location     Type
 16013 ;;  temp            4   40[BANK0 ] unsigned long 
 16014 ;; Return value:  Size  Location     Type
 16015 ;;                  4   28[BANK0 ] unsigned long 
 16016 ;; Registers used:
 16017 ;;		wreg, status,2, status,0
 16018 ;; Tracked objects:
 16019 ;;		On entry : 0/0
 16020 ;;		On exit  : 0/0
 16021 ;;		Unchanged: 0/0
 16022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16023 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16024 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16025 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16026 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16027 ;;Total ram usage:       16 bytes
 16028 ;; Hardware stack levels used:    1
 16029 ;; Hardware stack levels required when called:    6
 16030 ;; This function calls:
 16031 ;;		Nothing
 16032 ;; This function is called by:
 16033 ;;		_SendNEC_bytes
 16034 ;; This function uses a non-reentrant model
 16035 ;;
 16036                           
 16037                           	psect	text21
 16038  003124                     __ptext21:
 16039                           	opt stack 0
 16040  003124                     _Reverse_4Byte:
 16041                           	opt stack 21
 16042                           
 16043                           ;MISC.c: 414: unsigned long temp=0;
 16044                           
 16045                           ; BSR set to: 0
 16046                           ;incstack = 0
 16047  003124  0E00               	movlw	0
 16048  003126  0100               	movlb	0	; () banked
 16049  003128  6F88               	movwf	Reverse_4Byte@temp& (0+255),b
 16050  00312A  0E00               	movlw	0
 16051  00312C  6F89               	movwf	(Reverse_4Byte@temp+1)& (0+255),b
 16052  00312E  0E00               	movlw	0
 16053  003130  6F8A               	movwf	(Reverse_4Byte@temp+2)& (0+255),b
 16054  003132  0E00               	movlw	0
 16055  003134  6F8B               	movwf	(Reverse_4Byte@temp+3)& (0+255),b
 16056                           
 16057                           ; BSR set to: 0
 16058                           ;MISC.c: 416: temp += (This & 0x00000001) << 31;
 16059  003136  0E01               	movlw	1
 16060  003138  0100               	movlb	0	; () banked
 16061  00313A  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16062  00313C  0100               	movlb	0	; () banked
 16063  00313E  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16064  003140  0E00               	movlw	0
 16065  003142  0100               	movlb	0	; () banked
 16066  003144  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16067  003146  0100               	movlb	0	; () banked
 16068  003148  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16069  00314A  0E00               	movlw	0
 16070  00314C  0100               	movlb	0	; () banked
 16071  00314E  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16072  003150  0100               	movlb	0	; () banked
 16073  003152  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16074  003154  0E00               	movlw	0
 16075  003156  0100               	movlb	0	; () banked
 16076  003158  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16077  00315A  0100               	movlb	0	; () banked
 16078  00315C  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16079  00315E  0E1F               	movlw	31
 16080  003160                     u15855:
 16081  003160  90D8               	bcf	status,0,c
 16082  003162  0100               	movlb	0	; () banked
 16083  003164  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16084  003166  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16085  003168  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16086  00316A  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16087  00316C  2EE8               	decfsz	wreg,f,c
 16088  00316E  D7F8               	goto	u15855
 16089  003170  0100               	movlb	0	; () banked
 16090  003172  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16091  003174  0100               	movlb	0	; () banked
 16092  003176  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16093  003178  0100               	movlb	0	; () banked
 16094  00317A  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16095  00317C  0100               	movlb	0	; () banked
 16096  00317E  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16097  003180  0100               	movlb	0	; () banked
 16098  003182  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16099  003184  0100               	movlb	0	; () banked
 16100  003186  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16101  003188  0100               	movlb	0	; () banked
 16102  00318A  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16103  00318C  0100               	movlb	0	; () banked
 16104  00318E  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16105                           
 16106                           ; BSR set to: 0
 16107                           ;MISC.c: 417: temp += (This & 0x00000002) << 29;
 16108  003190  0E02               	movlw	2
 16109  003192  0100               	movlb	0	; () banked
 16110  003194  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16111  003196  0100               	movlb	0	; () banked
 16112  003198  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16113  00319A  0E00               	movlw	0
 16114  00319C  0100               	movlb	0	; () banked
 16115  00319E  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16116  0031A0  0100               	movlb	0	; () banked
 16117  0031A2  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16118  0031A4  0E00               	movlw	0
 16119  0031A6  0100               	movlb	0	; () banked
 16120  0031A8  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16121  0031AA  0100               	movlb	0	; () banked
 16122  0031AC  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16123  0031AE  0E00               	movlw	0
 16124  0031B0  0100               	movlb	0	; () banked
 16125  0031B2  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16126  0031B4  0100               	movlb	0	; () banked
 16127  0031B6  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16128  0031B8  0E1D               	movlw	29
 16129  0031BA                     u15865:
 16130  0031BA  90D8               	bcf	status,0,c
 16131  0031BC  0100               	movlb	0	; () banked
 16132  0031BE  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16133  0031C0  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16134  0031C2  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16135  0031C4  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16136  0031C6  2EE8               	decfsz	wreg,f,c
 16137  0031C8  D7F8               	goto	u15865
 16138  0031CA  0100               	movlb	0	; () banked
 16139  0031CC  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16140  0031CE  0100               	movlb	0	; () banked
 16141  0031D0  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16142  0031D2  0100               	movlb	0	; () banked
 16143  0031D4  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16144  0031D6  0100               	movlb	0	; () banked
 16145  0031D8  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16146  0031DA  0100               	movlb	0	; () banked
 16147  0031DC  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16148  0031DE  0100               	movlb	0	; () banked
 16149  0031E0  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16150  0031E2  0100               	movlb	0	; () banked
 16151  0031E4  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16152  0031E6  0100               	movlb	0	; () banked
 16153  0031E8  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16154                           
 16155                           ; BSR set to: 0
 16156                           ;MISC.c: 418: temp += (This & 0x00000004) << 27;
 16157  0031EA  0E04               	movlw	4
 16158  0031EC  0100               	movlb	0	; () banked
 16159  0031EE  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16160  0031F0  0100               	movlb	0	; () banked
 16161  0031F2  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16162  0031F4  0E00               	movlw	0
 16163  0031F6  0100               	movlb	0	; () banked
 16164  0031F8  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16165  0031FA  0100               	movlb	0	; () banked
 16166  0031FC  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16167  0031FE  0E00               	movlw	0
 16168  003200  0100               	movlb	0	; () banked
 16169  003202  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16170  003204  0100               	movlb	0	; () banked
 16171  003206  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16172  003208  0E00               	movlw	0
 16173  00320A  0100               	movlb	0	; () banked
 16174  00320C  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16175  00320E  0100               	movlb	0	; () banked
 16176  003210  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16177  003212  0E1B               	movlw	27
 16178  003214                     u15875:
 16179  003214  90D8               	bcf	status,0,c
 16180  003216  0100               	movlb	0	; () banked
 16181  003218  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16182  00321A  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16183  00321C  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16184  00321E  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16185  003220  2EE8               	decfsz	wreg,f,c
 16186  003222  D7F8               	goto	u15875
 16187  003224  0100               	movlb	0	; () banked
 16188  003226  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16189  003228  0100               	movlb	0	; () banked
 16190  00322A  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16191  00322C  0100               	movlb	0	; () banked
 16192  00322E  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16193  003230  0100               	movlb	0	; () banked
 16194  003232  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16195  003234  0100               	movlb	0	; () banked
 16196  003236  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16197  003238  0100               	movlb	0	; () banked
 16198  00323A  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16199  00323C  0100               	movlb	0	; () banked
 16200  00323E  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16201  003240  0100               	movlb	0	; () banked
 16202  003242  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16203                           
 16204                           ; BSR set to: 0
 16205                           ;MISC.c: 419: temp += (This & 0x00000008) << 25;
 16206  003244  0E08               	movlw	8
 16207  003246  0100               	movlb	0	; () banked
 16208  003248  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16209  00324A  0100               	movlb	0	; () banked
 16210  00324C  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16211  00324E  0E00               	movlw	0
 16212  003250  0100               	movlb	0	; () banked
 16213  003252  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16214  003254  0100               	movlb	0	; () banked
 16215  003256  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16216  003258  0E00               	movlw	0
 16217  00325A  0100               	movlb	0	; () banked
 16218  00325C  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16219  00325E  0100               	movlb	0	; () banked
 16220  003260  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16221  003262  0E00               	movlw	0
 16222  003264  0100               	movlb	0	; () banked
 16223  003266  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16224  003268  0100               	movlb	0	; () banked
 16225  00326A  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16226  00326C  0E19               	movlw	25
 16227  00326E                     u15885:
 16228  00326E  90D8               	bcf	status,0,c
 16229  003270  0100               	movlb	0	; () banked
 16230  003272  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16231  003274  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16232  003276  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16233  003278  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16234  00327A  2EE8               	decfsz	wreg,f,c
 16235  00327C  D7F8               	goto	u15885
 16236  00327E  0100               	movlb	0	; () banked
 16237  003280  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16238  003282  0100               	movlb	0	; () banked
 16239  003284  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16240  003286  0100               	movlb	0	; () banked
 16241  003288  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16242  00328A  0100               	movlb	0	; () banked
 16243  00328C  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16244  00328E  0100               	movlb	0	; () banked
 16245  003290  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16246  003292  0100               	movlb	0	; () banked
 16247  003294  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16248  003296  0100               	movlb	0	; () banked
 16249  003298  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16250  00329A  0100               	movlb	0	; () banked
 16251  00329C  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16252                           
 16253                           ; BSR set to: 0
 16254                           ;MISC.c: 420: temp += (This & 0x00000010) << 23;
 16255  00329E  0E10               	movlw	16
 16256  0032A0  0100               	movlb	0	; () banked
 16257  0032A2  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16258  0032A4  0100               	movlb	0	; () banked
 16259  0032A6  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16260  0032A8  0E00               	movlw	0
 16261  0032AA  0100               	movlb	0	; () banked
 16262  0032AC  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16263  0032AE  0100               	movlb	0	; () banked
 16264  0032B0  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16265  0032B2  0E00               	movlw	0
 16266  0032B4  0100               	movlb	0	; () banked
 16267  0032B6  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16268  0032B8  0100               	movlb	0	; () banked
 16269  0032BA  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16270  0032BC  0E00               	movlw	0
 16271  0032BE  0100               	movlb	0	; () banked
 16272  0032C0  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16273  0032C2  0100               	movlb	0	; () banked
 16274  0032C4  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16275  0032C6  0E17               	movlw	23
 16276  0032C8                     u15895:
 16277  0032C8  90D8               	bcf	status,0,c
 16278  0032CA  0100               	movlb	0	; () banked
 16279  0032CC  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16280  0032CE  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16281  0032D0  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16282  0032D2  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16283  0032D4  2EE8               	decfsz	wreg,f,c
 16284  0032D6  D7F8               	goto	u15895
 16285  0032D8  0100               	movlb	0	; () banked
 16286  0032DA  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16287  0032DC  0100               	movlb	0	; () banked
 16288  0032DE  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16289  0032E0  0100               	movlb	0	; () banked
 16290  0032E2  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16291  0032E4  0100               	movlb	0	; () banked
 16292  0032E6  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16293  0032E8  0100               	movlb	0	; () banked
 16294  0032EA  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16295  0032EC  0100               	movlb	0	; () banked
 16296  0032EE  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16297  0032F0  0100               	movlb	0	; () banked
 16298  0032F2  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16299  0032F4  0100               	movlb	0	; () banked
 16300  0032F6  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16301                           
 16302                           ; BSR set to: 0
 16303                           ;MISC.c: 421: temp += (This & 0x00000020) << 21;
 16304  0032F8  0E20               	movlw	32
 16305  0032FA  0100               	movlb	0	; () banked
 16306  0032FC  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16307  0032FE  0100               	movlb	0	; () banked
 16308  003300  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16309  003302  0E00               	movlw	0
 16310  003304  0100               	movlb	0	; () banked
 16311  003306  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16312  003308  0100               	movlb	0	; () banked
 16313  00330A  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16314  00330C  0E00               	movlw	0
 16315  00330E  0100               	movlb	0	; () banked
 16316  003310  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16317  003312  0100               	movlb	0	; () banked
 16318  003314  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16319  003316  0E00               	movlw	0
 16320  003318  0100               	movlb	0	; () banked
 16321  00331A  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16322  00331C  0100               	movlb	0	; () banked
 16323  00331E  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16324  003320  0E15               	movlw	21
 16325  003322                     u15905:
 16326  003322  90D8               	bcf	status,0,c
 16327  003324  0100               	movlb	0	; () banked
 16328  003326  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16329  003328  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16330  00332A  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16331  00332C  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16332  00332E  2EE8               	decfsz	wreg,f,c
 16333  003330  D7F8               	goto	u15905
 16334  003332  0100               	movlb	0	; () banked
 16335  003334  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16336  003336  0100               	movlb	0	; () banked
 16337  003338  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16338  00333A  0100               	movlb	0	; () banked
 16339  00333C  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16340  00333E  0100               	movlb	0	; () banked
 16341  003340  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16342  003342  0100               	movlb	0	; () banked
 16343  003344  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16344  003346  0100               	movlb	0	; () banked
 16345  003348  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16346  00334A  0100               	movlb	0	; () banked
 16347  00334C  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16348  00334E  0100               	movlb	0	; () banked
 16349  003350  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16350                           
 16351                           ; BSR set to: 0
 16352                           ;MISC.c: 422: temp += (This & 0x00000040) << 19;
 16353  003352  0E40               	movlw	64
 16354  003354  0100               	movlb	0	; () banked
 16355  003356  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16356  003358  0100               	movlb	0	; () banked
 16357  00335A  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16358  00335C  0E00               	movlw	0
 16359  00335E  0100               	movlb	0	; () banked
 16360  003360  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16361  003362  0100               	movlb	0	; () banked
 16362  003364  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16363  003366  0E00               	movlw	0
 16364  003368  0100               	movlb	0	; () banked
 16365  00336A  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16366  00336C  0100               	movlb	0	; () banked
 16367  00336E  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16368  003370  0E00               	movlw	0
 16369  003372  0100               	movlb	0	; () banked
 16370  003374  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16371  003376  0100               	movlb	0	; () banked
 16372  003378  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16373  00337A  0E13               	movlw	19
 16374  00337C                     u15915:
 16375  00337C  90D8               	bcf	status,0,c
 16376  00337E  0100               	movlb	0	; () banked
 16377  003380  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16378  003382  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16379  003384  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16380  003386  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16381  003388  2EE8               	decfsz	wreg,f,c
 16382  00338A  D7F8               	goto	u15915
 16383  00338C  0100               	movlb	0	; () banked
 16384  00338E  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16385  003390  0100               	movlb	0	; () banked
 16386  003392  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16387  003394  0100               	movlb	0	; () banked
 16388  003396  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16389  003398  0100               	movlb	0	; () banked
 16390  00339A  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16391  00339C  0100               	movlb	0	; () banked
 16392  00339E  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16393  0033A0  0100               	movlb	0	; () banked
 16394  0033A2  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16395  0033A4  0100               	movlb	0	; () banked
 16396  0033A6  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16397  0033A8  0100               	movlb	0	; () banked
 16398  0033AA  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16399                           
 16400                           ; BSR set to: 0
 16401                           ;MISC.c: 423: temp += (This & 0x00000080) << 17;
 16402  0033AC  0E80               	movlw	128
 16403  0033AE  0100               	movlb	0	; () banked
 16404  0033B0  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16405  0033B2  0100               	movlb	0	; () banked
 16406  0033B4  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16407  0033B6  0E00               	movlw	0
 16408  0033B8  0100               	movlb	0	; () banked
 16409  0033BA  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16410  0033BC  0100               	movlb	0	; () banked
 16411  0033BE  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16412  0033C0  0E00               	movlw	0
 16413  0033C2  0100               	movlb	0	; () banked
 16414  0033C4  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16415  0033C6  0100               	movlb	0	; () banked
 16416  0033C8  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16417  0033CA  0E00               	movlw	0
 16418  0033CC  0100               	movlb	0	; () banked
 16419  0033CE  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16420  0033D0  0100               	movlb	0	; () banked
 16421  0033D2  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16422  0033D4  0E11               	movlw	17
 16423  0033D6                     u15925:
 16424  0033D6  90D8               	bcf	status,0,c
 16425  0033D8  0100               	movlb	0	; () banked
 16426  0033DA  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16427  0033DC  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16428  0033DE  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16429  0033E0  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16430  0033E2  2EE8               	decfsz	wreg,f,c
 16431  0033E4  D7F8               	goto	u15925
 16432  0033E6  0100               	movlb	0	; () banked
 16433  0033E8  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16434  0033EA  0100               	movlb	0	; () banked
 16435  0033EC  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16436  0033EE  0100               	movlb	0	; () banked
 16437  0033F0  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16438  0033F2  0100               	movlb	0	; () banked
 16439  0033F4  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16440  0033F6  0100               	movlb	0	; () banked
 16441  0033F8  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16442  0033FA  0100               	movlb	0	; () banked
 16443  0033FC  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16444  0033FE  0100               	movlb	0	; () banked
 16445  003400  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16446  003402  0100               	movlb	0	; () banked
 16447  003404  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16448                           
 16449                           ; BSR set to: 0
 16450                           ;MISC.c: 424: temp += (This & 0x00000100) << 15;
 16451  003406  0E00               	movlw	0
 16452  003408  0100               	movlb	0	; () banked
 16453  00340A  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16454  00340C  0100               	movlb	0	; () banked
 16455  00340E  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16456  003410  0E01               	movlw	1
 16457  003412  0100               	movlb	0	; () banked
 16458  003414  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16459  003416  0100               	movlb	0	; () banked
 16460  003418  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16461  00341A  0E00               	movlw	0
 16462  00341C  0100               	movlb	0	; () banked
 16463  00341E  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16464  003420  0100               	movlb	0	; () banked
 16465  003422  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16466  003424  0E00               	movlw	0
 16467  003426  0100               	movlb	0	; () banked
 16468  003428  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16469  00342A  0100               	movlb	0	; () banked
 16470  00342C  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16471  00342E  0E0F               	movlw	15
 16472  003430                     u15935:
 16473  003430  90D8               	bcf	status,0,c
 16474  003432  0100               	movlb	0	; () banked
 16475  003434  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16476  003436  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16477  003438  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16478  00343A  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16479  00343C  2EE8               	decfsz	wreg,f,c
 16480  00343E  D7F8               	goto	u15935
 16481  003440  0100               	movlb	0	; () banked
 16482  003442  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16483  003444  0100               	movlb	0	; () banked
 16484  003446  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16485  003448  0100               	movlb	0	; () banked
 16486  00344A  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16487  00344C  0100               	movlb	0	; () banked
 16488  00344E  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16489  003450  0100               	movlb	0	; () banked
 16490  003452  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16491  003454  0100               	movlb	0	; () banked
 16492  003456  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16493  003458  0100               	movlb	0	; () banked
 16494  00345A  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16495  00345C  0100               	movlb	0	; () banked
 16496  00345E  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16497                           
 16498                           ; BSR set to: 0
 16499                           ;MISC.c: 425: temp += (This & 0x00000200) << 13;
 16500  003460  0E00               	movlw	0
 16501  003462  0100               	movlb	0	; () banked
 16502  003464  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16503  003466  0100               	movlb	0	; () banked
 16504  003468  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16505  00346A  0E02               	movlw	2
 16506  00346C  0100               	movlb	0	; () banked
 16507  00346E  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16508  003470  0100               	movlb	0	; () banked
 16509  003472  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16510  003474  0E00               	movlw	0
 16511  003476  0100               	movlb	0	; () banked
 16512  003478  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16513  00347A  0100               	movlb	0	; () banked
 16514  00347C  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16515  00347E  0E00               	movlw	0
 16516  003480  0100               	movlb	0	; () banked
 16517  003482  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16518  003484  0100               	movlb	0	; () banked
 16519  003486  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16520  003488  0E0D               	movlw	13
 16521  00348A                     u15945:
 16522  00348A  90D8               	bcf	status,0,c
 16523  00348C  0100               	movlb	0	; () banked
 16524  00348E  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16525  003490  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16526  003492  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16527  003494  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16528  003496  2EE8               	decfsz	wreg,f,c
 16529  003498  D7F8               	goto	u15945
 16530  00349A  0100               	movlb	0	; () banked
 16531  00349C  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16532  00349E  0100               	movlb	0	; () banked
 16533  0034A0  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16534  0034A2  0100               	movlb	0	; () banked
 16535  0034A4  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16536  0034A6  0100               	movlb	0	; () banked
 16537  0034A8  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16538  0034AA  0100               	movlb	0	; () banked
 16539  0034AC  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16540  0034AE  0100               	movlb	0	; () banked
 16541  0034B0  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16542  0034B2  0100               	movlb	0	; () banked
 16543  0034B4  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16544  0034B6  0100               	movlb	0	; () banked
 16545  0034B8  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16546                           
 16547                           ; BSR set to: 0
 16548                           ;MISC.c: 426: temp += (This & 0x00000400) << 11;
 16549  0034BA  0E00               	movlw	0
 16550  0034BC  0100               	movlb	0	; () banked
 16551  0034BE  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16552  0034C0  0100               	movlb	0	; () banked
 16553  0034C2  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16554  0034C4  0E04               	movlw	4
 16555  0034C6  0100               	movlb	0	; () banked
 16556  0034C8  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16557  0034CA  0100               	movlb	0	; () banked
 16558  0034CC  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16559  0034CE  0E00               	movlw	0
 16560  0034D0  0100               	movlb	0	; () banked
 16561  0034D2  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16562  0034D4  0100               	movlb	0	; () banked
 16563  0034D6  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16564  0034D8  0E00               	movlw	0
 16565  0034DA  0100               	movlb	0	; () banked
 16566  0034DC  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16567  0034DE  0100               	movlb	0	; () banked
 16568  0034E0  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16569  0034E2  0E0B               	movlw	11
 16570  0034E4                     u15955:
 16571  0034E4  90D8               	bcf	status,0,c
 16572  0034E6  0100               	movlb	0	; () banked
 16573  0034E8  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16574  0034EA  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16575  0034EC  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16576  0034EE  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16577  0034F0  2EE8               	decfsz	wreg,f,c
 16578  0034F2  D7F8               	goto	u15955
 16579  0034F4  0100               	movlb	0	; () banked
 16580  0034F6  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16581  0034F8  0100               	movlb	0	; () banked
 16582  0034FA  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16583  0034FC  0100               	movlb	0	; () banked
 16584  0034FE  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16585  003500  0100               	movlb	0	; () banked
 16586  003502  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16587  003504  0100               	movlb	0	; () banked
 16588  003506  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16589  003508  0100               	movlb	0	; () banked
 16590  00350A  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16591  00350C  0100               	movlb	0	; () banked
 16592  00350E  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16593  003510  0100               	movlb	0	; () banked
 16594  003512  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16595                           
 16596                           ; BSR set to: 0
 16597                           ;MISC.c: 427: temp += (This & 0x00000800) << 9;
 16598  003514  0E00               	movlw	0
 16599  003516  0100               	movlb	0	; () banked
 16600  003518  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16601  00351A  0100               	movlb	0	; () banked
 16602  00351C  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16603  00351E  0E08               	movlw	8
 16604  003520  0100               	movlb	0	; () banked
 16605  003522  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16606  003524  0100               	movlb	0	; () banked
 16607  003526  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16608  003528  0E00               	movlw	0
 16609  00352A  0100               	movlb	0	; () banked
 16610  00352C  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16611  00352E  0100               	movlb	0	; () banked
 16612  003530  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16613  003532  0E00               	movlw	0
 16614  003534  0100               	movlb	0	; () banked
 16615  003536  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16616  003538  0100               	movlb	0	; () banked
 16617  00353A  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16618  00353C  0E09               	movlw	9
 16619  00353E                     u15965:
 16620  00353E  90D8               	bcf	status,0,c
 16621  003540  0100               	movlb	0	; () banked
 16622  003542  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16623  003544  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16624  003546  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16625  003548  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16626  00354A  2EE8               	decfsz	wreg,f,c
 16627  00354C  D7F8               	goto	u15965
 16628  00354E  0100               	movlb	0	; () banked
 16629  003550  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16630  003552  0100               	movlb	0	; () banked
 16631  003554  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16632  003556  0100               	movlb	0	; () banked
 16633  003558  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16634  00355A  0100               	movlb	0	; () banked
 16635  00355C  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16636  00355E  0100               	movlb	0	; () banked
 16637  003560  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16638  003562  0100               	movlb	0	; () banked
 16639  003564  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16640  003566  0100               	movlb	0	; () banked
 16641  003568  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16642  00356A  0100               	movlb	0	; () banked
 16643  00356C  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16644                           
 16645                           ; BSR set to: 0
 16646                           ;MISC.c: 428: temp += (This & 0x00001000) << 7;
 16647  00356E  0E00               	movlw	0
 16648  003570  0100               	movlb	0	; () banked
 16649  003572  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16650  003574  0100               	movlb	0	; () banked
 16651  003576  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16652  003578  0E10               	movlw	16
 16653  00357A  0100               	movlb	0	; () banked
 16654  00357C  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16655  00357E  0100               	movlb	0	; () banked
 16656  003580  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16657  003582  0E00               	movlw	0
 16658  003584  0100               	movlb	0	; () banked
 16659  003586  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16660  003588  0100               	movlb	0	; () banked
 16661  00358A  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16662  00358C  0E00               	movlw	0
 16663  00358E  0100               	movlb	0	; () banked
 16664  003590  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16665  003592  0100               	movlb	0	; () banked
 16666  003594  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16667  003596  0E07               	movlw	7
 16668  003598                     u15975:
 16669  003598  90D8               	bcf	status,0,c
 16670  00359A  0100               	movlb	0	; () banked
 16671  00359C  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16672  00359E  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16673  0035A0  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16674  0035A2  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16675  0035A4  2EE8               	decfsz	wreg,f,c
 16676  0035A6  D7F8               	goto	u15975
 16677  0035A8  0100               	movlb	0	; () banked
 16678  0035AA  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16679  0035AC  0100               	movlb	0	; () banked
 16680  0035AE  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16681  0035B0  0100               	movlb	0	; () banked
 16682  0035B2  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16683  0035B4  0100               	movlb	0	; () banked
 16684  0035B6  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16685  0035B8  0100               	movlb	0	; () banked
 16686  0035BA  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16687  0035BC  0100               	movlb	0	; () banked
 16688  0035BE  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16689  0035C0  0100               	movlb	0	; () banked
 16690  0035C2  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16691  0035C4  0100               	movlb	0	; () banked
 16692  0035C6  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16693                           
 16694                           ; BSR set to: 0
 16695                           ;MISC.c: 429: temp += (This & 0x00002000) << 5;
 16696  0035C8  0E00               	movlw	0
 16697  0035CA  0100               	movlb	0	; () banked
 16698  0035CC  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16699  0035CE  0100               	movlb	0	; () banked
 16700  0035D0  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16701  0035D2  0E20               	movlw	32
 16702  0035D4  0100               	movlb	0	; () banked
 16703  0035D6  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16704  0035D8  0100               	movlb	0	; () banked
 16705  0035DA  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16706  0035DC  0E00               	movlw	0
 16707  0035DE  0100               	movlb	0	; () banked
 16708  0035E0  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16709  0035E2  0100               	movlb	0	; () banked
 16710  0035E4  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16711  0035E6  0E00               	movlw	0
 16712  0035E8  0100               	movlb	0	; () banked
 16713  0035EA  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16714  0035EC  0100               	movlb	0	; () banked
 16715  0035EE  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16716  0035F0  0E05               	movlw	5
 16717  0035F2                     u15985:
 16718  0035F2  90D8               	bcf	status,0,c
 16719  0035F4  0100               	movlb	0	; () banked
 16720  0035F6  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16721  0035F8  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16722  0035FA  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16723  0035FC  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16724  0035FE  2EE8               	decfsz	wreg,f,c
 16725  003600  D7F8               	goto	u15985
 16726  003602  0100               	movlb	0	; () banked
 16727  003604  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16728  003606  0100               	movlb	0	; () banked
 16729  003608  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16730  00360A  0100               	movlb	0	; () banked
 16731  00360C  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16732  00360E  0100               	movlb	0	; () banked
 16733  003610  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16734  003612  0100               	movlb	0	; () banked
 16735  003614  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16736  003616  0100               	movlb	0	; () banked
 16737  003618  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16738  00361A  0100               	movlb	0	; () banked
 16739  00361C  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16740  00361E  0100               	movlb	0	; () banked
 16741  003620  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16742                           
 16743                           ; BSR set to: 0
 16744                           ;MISC.c: 430: temp += (This & 0x00004000) << 3;
 16745  003622  0E00               	movlw	0
 16746  003624  0100               	movlb	0	; () banked
 16747  003626  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16748  003628  0100               	movlb	0	; () banked
 16749  00362A  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16750  00362C  0E40               	movlw	64
 16751  00362E  0100               	movlb	0	; () banked
 16752  003630  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16753  003632  0100               	movlb	0	; () banked
 16754  003634  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16755  003636  0E00               	movlw	0
 16756  003638  0100               	movlb	0	; () banked
 16757  00363A  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16758  00363C  0100               	movlb	0	; () banked
 16759  00363E  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16760  003640  0E00               	movlw	0
 16761  003642  0100               	movlb	0	; () banked
 16762  003644  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16763  003646  0100               	movlb	0	; () banked
 16764  003648  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16765  00364A  0E03               	movlw	3
 16766  00364C                     u15995:
 16767  00364C  90D8               	bcf	status,0,c
 16768  00364E  0100               	movlb	0	; () banked
 16769  003650  3780               	rlcf	??_Reverse_4Byte& (0+255),f,b
 16770  003652  3781               	rlcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16771  003654  3782               	rlcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16772  003656  3783               	rlcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16773  003658  2EE8               	decfsz	wreg,f,c
 16774  00365A  D7F8               	goto	u15995
 16775  00365C  0100               	movlb	0	; () banked
 16776  00365E  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 16777  003660  0100               	movlb	0	; () banked
 16778  003662  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16779  003664  0100               	movlb	0	; () banked
 16780  003666  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 16781  003668  0100               	movlb	0	; () banked
 16782  00366A  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16783  00366C  0100               	movlb	0	; () banked
 16784  00366E  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 16785  003670  0100               	movlb	0	; () banked
 16786  003672  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16787  003674  0100               	movlb	0	; () banked
 16788  003676  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 16789  003678  0100               	movlb	0	; () banked
 16790  00367A  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16791                           
 16792                           ; BSR set to: 0
 16793                           ;MISC.c: 431: temp += (This & 0x00008000) << 1;
 16794  00367C  0E00               	movlw	0
 16795  00367E  0100               	movlb	0	; () banked
 16796  003680  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 16797  003682  0100               	movlb	0	; () banked
 16798  003684  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 16799  003686  0E80               	movlw	128
 16800  003688  0100               	movlb	0	; () banked
 16801  00368A  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 16802  00368C  0100               	movlb	0	; () banked
 16803  00368E  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 16804  003690  0E00               	movlw	0
 16805  003692  0100               	movlb	0	; () banked
 16806  003694  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 16807  003696  0100               	movlb	0	; () banked
 16808  003698  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 16809  00369A  0E00               	movlw	0
 16810  00369C  0100               	movlb	0	; () banked
 16811  00369E  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 16812  0036A0  0100               	movlb	0	; () banked
 16813  0036A2  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 16814  0036A4  90D8               	bcf	status,0,c
 16815  0036A6  0100               	movlb	0	; () banked
 16816  0036A8  3580               	rlcf	??_Reverse_4Byte& (0+255),w,b
 16817  0036AA  0100               	movlb	0	; () banked
 16818  0036AC  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16819  0036AE  0100               	movlb	0	; () banked
 16820  0036B0  3581               	rlcf	(??_Reverse_4Byte+1)& (0+255),w,b
 16821  0036B2  0100               	movlb	0	; () banked
 16822  0036B4  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16823  0036B6  0100               	movlb	0	; () banked
 16824  0036B8  3582               	rlcf	(??_Reverse_4Byte+2)& (0+255),w,b
 16825  0036BA  0100               	movlb	0	; () banked
 16826  0036BC  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16827  0036BE  0100               	movlb	0	; () banked
 16828  0036C0  3583               	rlcf	(??_Reverse_4Byte+3)& (0+255),w,b
 16829  0036C2  0100               	movlb	0	; () banked
 16830  0036C4  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16831  0036C6  0100               	movlb	0	; () banked
 16832  0036C8  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16833  0036CA  0100               	movlb	0	; () banked
 16834  0036CC  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16835  0036CE  0100               	movlb	0	; () banked
 16836  0036D0  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16837  0036D2  0100               	movlb	0	; () banked
 16838  0036D4  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16839  0036D6  0100               	movlb	0	; () banked
 16840  0036D8  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16841  0036DA  0100               	movlb	0	; () banked
 16842  0036DC  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16843  0036DE  0100               	movlb	0	; () banked
 16844  0036E0  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16845  0036E2  0100               	movlb	0	; () banked
 16846  0036E4  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16847                           
 16848                           ; BSR set to: 0
 16849                           ;MISC.c: 432: temp += (This & 0x00010000) >> 1;
 16850  0036E6  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16851  0036EA  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16852  0036EE  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16853  0036F2  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16854  0036F6  0100               	movlb	0	; () banked
 16855  0036F8  90D8               	bcf	status,0,c
 16856  0036FA  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16857  0036FC  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16858  0036FE  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16859  003700  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16860  003702  0E00               	movlw	0
 16861  003704  0100               	movlb	0	; () banked
 16862  003706  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 16863  003708  0100               	movlb	0	; () banked
 16864  00370A  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16865  00370C  0E80               	movlw	128
 16866  00370E  0100               	movlb	0	; () banked
 16867  003710  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16868  003712  0100               	movlb	0	; () banked
 16869  003714  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16870  003716  0E00               	movlw	0
 16871  003718  0100               	movlb	0	; () banked
 16872  00371A  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16873  00371C  0100               	movlb	0	; () banked
 16874  00371E  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16875  003720  0E00               	movlw	0
 16876  003722  0100               	movlb	0	; () banked
 16877  003724  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16878  003726  0100               	movlb	0	; () banked
 16879  003728  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16880  00372A  0100               	movlb	0	; () banked
 16881  00372C  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16882  00372E  0100               	movlb	0	; () banked
 16883  003730  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16884  003732  0100               	movlb	0	; () banked
 16885  003734  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16886  003736  0100               	movlb	0	; () banked
 16887  003738  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16888  00373A  0100               	movlb	0	; () banked
 16889  00373C  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16890  00373E  0100               	movlb	0	; () banked
 16891  003740  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16892  003742  0100               	movlb	0	; () banked
 16893  003744  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16894  003746  0100               	movlb	0	; () banked
 16895  003748  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16896                           
 16897                           ; BSR set to: 0
 16898                           ;MISC.c: 433: temp += (This & 0x00020000) >> 3;
 16899  00374A  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16900  00374E  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16901  003752  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16902  003756  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16903  00375A  0E04               	movlw	4
 16904  00375C  D006               	goto	u16000
 16905  00375E                     u16005:
 16906  00375E  0100               	movlb	0	; () banked
 16907  003760  90D8               	bcf	status,0,c
 16908  003762  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16909  003764  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16910  003766  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16911  003768  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16912  00376A                     u16000:
 16913  00376A  2EE8               	decfsz	wreg,f,c
 16914  00376C  D7F8               	goto	u16005
 16915  00376E  0E00               	movlw	0
 16916  003770  0100               	movlb	0	; () banked
 16917  003772  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 16918  003774  0100               	movlb	0	; () banked
 16919  003776  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16920  003778  0E40               	movlw	64
 16921  00377A  0100               	movlb	0	; () banked
 16922  00377C  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16923  00377E  0100               	movlb	0	; () banked
 16924  003780  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16925  003782  0E00               	movlw	0
 16926  003784  0100               	movlb	0	; () banked
 16927  003786  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16928  003788  0100               	movlb	0	; () banked
 16929  00378A  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16930  00378C  0E00               	movlw	0
 16931  00378E  0100               	movlb	0	; () banked
 16932  003790  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16933  003792  0100               	movlb	0	; () banked
 16934  003794  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16935  003796  0100               	movlb	0	; () banked
 16936  003798  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16937  00379A  0100               	movlb	0	; () banked
 16938  00379C  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16939  00379E  0100               	movlb	0	; () banked
 16940  0037A0  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16941  0037A2  0100               	movlb	0	; () banked
 16942  0037A4  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16943  0037A6  0100               	movlb	0	; () banked
 16944  0037A8  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 16945  0037AA  0100               	movlb	0	; () banked
 16946  0037AC  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 16947  0037AE  0100               	movlb	0	; () banked
 16948  0037B0  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 16949  0037B2  0100               	movlb	0	; () banked
 16950  0037B4  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 16951                           
 16952                           ; BSR set to: 0
 16953                           ;MISC.c: 434: temp += (This & 0x00040000) >> 5;
 16954  0037B6  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 16955  0037BA  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 16956  0037BE  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 16957  0037C2  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 16958  0037C6  0E06               	movlw	6
 16959  0037C8  D006               	goto	u16010
 16960  0037CA                     u16015:
 16961  0037CA  0100               	movlb	0	; () banked
 16962  0037CC  90D8               	bcf	status,0,c
 16963  0037CE  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 16964  0037D0  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 16965  0037D2  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 16966  0037D4  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 16967  0037D6                     u16010:
 16968  0037D6  2EE8               	decfsz	wreg,f,c
 16969  0037D8  D7F8               	goto	u16015
 16970  0037DA  0E00               	movlw	0
 16971  0037DC  0100               	movlb	0	; () banked
 16972  0037DE  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 16973  0037E0  0100               	movlb	0	; () banked
 16974  0037E2  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 16975  0037E4  0E20               	movlw	32
 16976  0037E6  0100               	movlb	0	; () banked
 16977  0037E8  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 16978  0037EA  0100               	movlb	0	; () banked
 16979  0037EC  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 16980  0037EE  0E00               	movlw	0
 16981  0037F0  0100               	movlb	0	; () banked
 16982  0037F2  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 16983  0037F4  0100               	movlb	0	; () banked
 16984  0037F6  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 16985  0037F8  0E00               	movlw	0
 16986  0037FA  0100               	movlb	0	; () banked
 16987  0037FC  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 16988  0037FE  0100               	movlb	0	; () banked
 16989  003800  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 16990  003802  0100               	movlb	0	; () banked
 16991  003804  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 16992  003806  0100               	movlb	0	; () banked
 16993  003808  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 16994  00380A  0100               	movlb	0	; () banked
 16995  00380C  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 16996  00380E  0100               	movlb	0	; () banked
 16997  003810  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 16998  003812  0100               	movlb	0	; () banked
 16999  003814  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17000  003816  0100               	movlb	0	; () banked
 17001  003818  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17002  00381A  0100               	movlb	0	; () banked
 17003  00381C  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17004  00381E  0100               	movlb	0	; () banked
 17005  003820  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17006                           
 17007                           ; BSR set to: 0
 17008                           ;MISC.c: 435: temp += (This & 0x00080000) >> 7;
 17009  003822  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17010  003826  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17011  00382A  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17012  00382E  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17013  003832  0E08               	movlw	8
 17014  003834  D006               	goto	u16020
 17015  003836                     u16025:
 17016  003836  0100               	movlb	0	; () banked
 17017  003838  90D8               	bcf	status,0,c
 17018  00383A  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17019  00383C  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17020  00383E  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17021  003840  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17022  003842                     u16020:
 17023  003842  2EE8               	decfsz	wreg,f,c
 17024  003844  D7F8               	goto	u16025
 17025  003846  0E00               	movlw	0
 17026  003848  0100               	movlb	0	; () banked
 17027  00384A  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17028  00384C  0100               	movlb	0	; () banked
 17029  00384E  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17030  003850  0E10               	movlw	16
 17031  003852  0100               	movlb	0	; () banked
 17032  003854  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17033  003856  0100               	movlb	0	; () banked
 17034  003858  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17035  00385A  0E00               	movlw	0
 17036  00385C  0100               	movlb	0	; () banked
 17037  00385E  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17038  003860  0100               	movlb	0	; () banked
 17039  003862  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17040  003864  0E00               	movlw	0
 17041  003866  0100               	movlb	0	; () banked
 17042  003868  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17043  00386A  0100               	movlb	0	; () banked
 17044  00386C  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17045  00386E  0100               	movlb	0	; () banked
 17046  003870  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17047  003872  0100               	movlb	0	; () banked
 17048  003874  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17049  003876  0100               	movlb	0	; () banked
 17050  003878  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17051  00387A  0100               	movlb	0	; () banked
 17052  00387C  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17053  00387E  0100               	movlb	0	; () banked
 17054  003880  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17055  003882  0100               	movlb	0	; () banked
 17056  003884  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17057  003886  0100               	movlb	0	; () banked
 17058  003888  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17059  00388A  0100               	movlb	0	; () banked
 17060  00388C  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17061                           
 17062                           ; BSR set to: 0
 17063                           ;MISC.c: 436: temp += (This & 0x00100000) >> 9;
 17064  00388E  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17065  003892  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17066  003896  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17067  00389A  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17068  00389E  0E0A               	movlw	10
 17069  0038A0  D006               	goto	u16030
 17070  0038A2                     u16035:
 17071  0038A2  0100               	movlb	0	; () banked
 17072  0038A4  90D8               	bcf	status,0,c
 17073  0038A6  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17074  0038A8  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17075  0038AA  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17076  0038AC  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17077  0038AE                     u16030:
 17078  0038AE  2EE8               	decfsz	wreg,f,c
 17079  0038B0  D7F8               	goto	u16035
 17080  0038B2  0E00               	movlw	0
 17081  0038B4  0100               	movlb	0	; () banked
 17082  0038B6  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17083  0038B8  0100               	movlb	0	; () banked
 17084  0038BA  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17085  0038BC  0E08               	movlw	8
 17086  0038BE  0100               	movlb	0	; () banked
 17087  0038C0  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17088  0038C2  0100               	movlb	0	; () banked
 17089  0038C4  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17090  0038C6  0E00               	movlw	0
 17091  0038C8  0100               	movlb	0	; () banked
 17092  0038CA  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17093  0038CC  0100               	movlb	0	; () banked
 17094  0038CE  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17095  0038D0  0E00               	movlw	0
 17096  0038D2  0100               	movlb	0	; () banked
 17097  0038D4  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17098  0038D6  0100               	movlb	0	; () banked
 17099  0038D8  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17100  0038DA  0100               	movlb	0	; () banked
 17101  0038DC  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17102  0038DE  0100               	movlb	0	; () banked
 17103  0038E0  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17104  0038E2  0100               	movlb	0	; () banked
 17105  0038E4  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17106  0038E6  0100               	movlb	0	; () banked
 17107  0038E8  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17108  0038EA  0100               	movlb	0	; () banked
 17109  0038EC  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17110  0038EE  0100               	movlb	0	; () banked
 17111  0038F0  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17112  0038F2  0100               	movlb	0	; () banked
 17113  0038F4  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17114  0038F6  0100               	movlb	0	; () banked
 17115  0038F8  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17116                           
 17117                           ; BSR set to: 0
 17118                           ;MISC.c: 437: temp += (This & 0x00200000) >> 11;
 17119  0038FA  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17120  0038FE  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17121  003902  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17122  003906  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17123  00390A  0E0C               	movlw	12
 17124  00390C  D006               	goto	u16040
 17125  00390E                     u16045:
 17126  00390E  0100               	movlb	0	; () banked
 17127  003910  90D8               	bcf	status,0,c
 17128  003912  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17129  003914  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17130  003916  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17131  003918  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17132  00391A                     u16040:
 17133  00391A  2EE8               	decfsz	wreg,f,c
 17134  00391C  D7F8               	goto	u16045
 17135  00391E  0E00               	movlw	0
 17136  003920  0100               	movlb	0	; () banked
 17137  003922  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17138  003924  0100               	movlb	0	; () banked
 17139  003926  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17140  003928  0E04               	movlw	4
 17141  00392A  0100               	movlb	0	; () banked
 17142  00392C  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17143  00392E  0100               	movlb	0	; () banked
 17144  003930  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17145  003932  0E00               	movlw	0
 17146  003934  0100               	movlb	0	; () banked
 17147  003936  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17148  003938  0100               	movlb	0	; () banked
 17149  00393A  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17150  00393C  0E00               	movlw	0
 17151  00393E  0100               	movlb	0	; () banked
 17152  003940  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17153  003942  0100               	movlb	0	; () banked
 17154  003944  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17155  003946  0100               	movlb	0	; () banked
 17156  003948  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17157  00394A  0100               	movlb	0	; () banked
 17158  00394C  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17159  00394E  0100               	movlb	0	; () banked
 17160  003950  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17161  003952  0100               	movlb	0	; () banked
 17162  003954  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17163  003956  0100               	movlb	0	; () banked
 17164  003958  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17165  00395A  0100               	movlb	0	; () banked
 17166  00395C  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17167  00395E  0100               	movlb	0	; () banked
 17168  003960  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17169  003962  0100               	movlb	0	; () banked
 17170  003964  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17171                           
 17172                           ; BSR set to: 0
 17173                           ;MISC.c: 438: temp += (This & 0x00400000) >> 13;
 17174  003966  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17175  00396A  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17176  00396E  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17177  003972  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17178  003976  0E0E               	movlw	14
 17179  003978  D006               	goto	u16050
 17180  00397A                     u16055:
 17181  00397A  0100               	movlb	0	; () banked
 17182  00397C  90D8               	bcf	status,0,c
 17183  00397E  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17184  003980  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17185  003982  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17186  003984  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17187  003986                     u16050:
 17188  003986  2EE8               	decfsz	wreg,f,c
 17189  003988  D7F8               	goto	u16055
 17190  00398A  0E00               	movlw	0
 17191  00398C  0100               	movlb	0	; () banked
 17192  00398E  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17193  003990  0100               	movlb	0	; () banked
 17194  003992  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17195  003994  0E02               	movlw	2
 17196  003996  0100               	movlb	0	; () banked
 17197  003998  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17198  00399A  0100               	movlb	0	; () banked
 17199  00399C  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17200  00399E  0E00               	movlw	0
 17201  0039A0  0100               	movlb	0	; () banked
 17202  0039A2  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17203  0039A4  0100               	movlb	0	; () banked
 17204  0039A6  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17205  0039A8  0E00               	movlw	0
 17206  0039AA  0100               	movlb	0	; () banked
 17207  0039AC  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17208  0039AE  0100               	movlb	0	; () banked
 17209  0039B0  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17210  0039B2  0100               	movlb	0	; () banked
 17211  0039B4  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17212  0039B6  0100               	movlb	0	; () banked
 17213  0039B8  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17214  0039BA  0100               	movlb	0	; () banked
 17215  0039BC  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17216  0039BE  0100               	movlb	0	; () banked
 17217  0039C0  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17218  0039C2  0100               	movlb	0	; () banked
 17219  0039C4  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17220  0039C6  0100               	movlb	0	; () banked
 17221  0039C8  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17222  0039CA  0100               	movlb	0	; () banked
 17223  0039CC  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17224  0039CE  0100               	movlb	0	; () banked
 17225  0039D0  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17226                           
 17227                           ; BSR set to: 0
 17228                           ;MISC.c: 439: temp += (This & 0x00800000) >> 15;
 17229  0039D2  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17230  0039D6  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17231  0039DA  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17232  0039DE  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17233  0039E2  0E10               	movlw	16
 17234  0039E4  D006               	goto	u16060
 17235  0039E6                     u16065:
 17236  0039E6  0100               	movlb	0	; () banked
 17237  0039E8  90D8               	bcf	status,0,c
 17238  0039EA  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17239  0039EC  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17240  0039EE  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17241  0039F0  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17242  0039F2                     u16060:
 17243  0039F2  2EE8               	decfsz	wreg,f,c
 17244  0039F4  D7F8               	goto	u16065
 17245  0039F6  0E00               	movlw	0
 17246  0039F8  0100               	movlb	0	; () banked
 17247  0039FA  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17248  0039FC  0100               	movlb	0	; () banked
 17249  0039FE  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17250  003A00  0E01               	movlw	1
 17251  003A02  0100               	movlb	0	; () banked
 17252  003A04  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17253  003A06  0100               	movlb	0	; () banked
 17254  003A08  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17255  003A0A  0E00               	movlw	0
 17256  003A0C  0100               	movlb	0	; () banked
 17257  003A0E  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17258  003A10  0100               	movlb	0	; () banked
 17259  003A12  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17260  003A14  0E00               	movlw	0
 17261  003A16  0100               	movlb	0	; () banked
 17262  003A18  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17263  003A1A  0100               	movlb	0	; () banked
 17264  003A1C  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17265  003A1E  0100               	movlb	0	; () banked
 17266  003A20  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17267  003A22  0100               	movlb	0	; () banked
 17268  003A24  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17269  003A26  0100               	movlb	0	; () banked
 17270  003A28  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17271  003A2A  0100               	movlb	0	; () banked
 17272  003A2C  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17273  003A2E  0100               	movlb	0	; () banked
 17274  003A30  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17275  003A32  0100               	movlb	0	; () banked
 17276  003A34  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17277  003A36  0100               	movlb	0	; () banked
 17278  003A38  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17279  003A3A  0100               	movlb	0	; () banked
 17280  003A3C  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17281                           
 17282                           ; BSR set to: 0
 17283                           ;MISC.c: 440: temp += (This & 0x01000000) >> 17;
 17284  003A3E  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17285  003A42  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17286  003A46  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17287  003A4A  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17288  003A4E  0E12               	movlw	18
 17289  003A50  D006               	goto	u16070
 17290  003A52                     u16075:
 17291  003A52  0100               	movlb	0	; () banked
 17292  003A54  90D8               	bcf	status,0,c
 17293  003A56  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17294  003A58  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17295  003A5A  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17296  003A5C  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17297  003A5E                     u16070:
 17298  003A5E  2EE8               	decfsz	wreg,f,c
 17299  003A60  D7F8               	goto	u16075
 17300  003A62  0E80               	movlw	128
 17301  003A64  0100               	movlb	0	; () banked
 17302  003A66  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17303  003A68  0100               	movlb	0	; () banked
 17304  003A6A  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17305  003A6C  0E00               	movlw	0
 17306  003A6E  0100               	movlb	0	; () banked
 17307  003A70  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17308  003A72  0100               	movlb	0	; () banked
 17309  003A74  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17310  003A76  0E00               	movlw	0
 17311  003A78  0100               	movlb	0	; () banked
 17312  003A7A  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17313  003A7C  0100               	movlb	0	; () banked
 17314  003A7E  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17315  003A80  0E00               	movlw	0
 17316  003A82  0100               	movlb	0	; () banked
 17317  003A84  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17318  003A86  0100               	movlb	0	; () banked
 17319  003A88  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17320  003A8A  0100               	movlb	0	; () banked
 17321  003A8C  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17322  003A8E  0100               	movlb	0	; () banked
 17323  003A90  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17324  003A92  0100               	movlb	0	; () banked
 17325  003A94  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17326  003A96  0100               	movlb	0	; () banked
 17327  003A98  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17328  003A9A  0100               	movlb	0	; () banked
 17329  003A9C  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17330  003A9E  0100               	movlb	0	; () banked
 17331  003AA0  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17332  003AA2  0100               	movlb	0	; () banked
 17333  003AA4  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17334  003AA6  0100               	movlb	0	; () banked
 17335  003AA8  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17336                           
 17337                           ; BSR set to: 0
 17338                           ;MISC.c: 441: temp += (This & 0x02000000) >> 19;
 17339  003AAA  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17340  003AAE  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17341  003AB2  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17342  003AB6  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17343  003ABA  0E14               	movlw	20
 17344  003ABC  D006               	goto	u16080
 17345  003ABE                     u16085:
 17346  003ABE  0100               	movlb	0	; () banked
 17347  003AC0  90D8               	bcf	status,0,c
 17348  003AC2  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17349  003AC4  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17350  003AC6  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17351  003AC8  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17352  003ACA                     u16080:
 17353  003ACA  2EE8               	decfsz	wreg,f,c
 17354  003ACC  D7F8               	goto	u16085
 17355  003ACE  0E40               	movlw	64
 17356  003AD0  0100               	movlb	0	; () banked
 17357  003AD2  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17358  003AD4  0100               	movlb	0	; () banked
 17359  003AD6  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17360  003AD8  0E00               	movlw	0
 17361  003ADA  0100               	movlb	0	; () banked
 17362  003ADC  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17363  003ADE  0100               	movlb	0	; () banked
 17364  003AE0  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17365  003AE2  0E00               	movlw	0
 17366  003AE4  0100               	movlb	0	; () banked
 17367  003AE6  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17368  003AE8  0100               	movlb	0	; () banked
 17369  003AEA  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17370  003AEC  0E00               	movlw	0
 17371  003AEE  0100               	movlb	0	; () banked
 17372  003AF0  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17373  003AF2  0100               	movlb	0	; () banked
 17374  003AF4  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17375  003AF6  0100               	movlb	0	; () banked
 17376  003AF8  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17377  003AFA  0100               	movlb	0	; () banked
 17378  003AFC  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17379  003AFE  0100               	movlb	0	; () banked
 17380  003B00  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17381  003B02  0100               	movlb	0	; () banked
 17382  003B04  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17383  003B06  0100               	movlb	0	; () banked
 17384  003B08  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17385  003B0A  0100               	movlb	0	; () banked
 17386  003B0C  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17387  003B0E  0100               	movlb	0	; () banked
 17388  003B10  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17389  003B12  0100               	movlb	0	; () banked
 17390  003B14  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17391                           
 17392                           ; BSR set to: 0
 17393                           ;MISC.c: 442: temp += (This & 0x04000000) >> 21;
 17394  003B16  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17395  003B1A  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17396  003B1E  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17397  003B22  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17398  003B26  0E16               	movlw	22
 17399  003B28  D006               	goto	u16090
 17400  003B2A                     u16095:
 17401  003B2A  0100               	movlb	0	; () banked
 17402  003B2C  90D8               	bcf	status,0,c
 17403  003B2E  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17404  003B30  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17405  003B32  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17406  003B34  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17407  003B36                     u16090:
 17408  003B36  2EE8               	decfsz	wreg,f,c
 17409  003B38  D7F8               	goto	u16095
 17410  003B3A  0E20               	movlw	32
 17411  003B3C  0100               	movlb	0	; () banked
 17412  003B3E  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17413  003B40  0100               	movlb	0	; () banked
 17414  003B42  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17415  003B44  0E00               	movlw	0
 17416  003B46  0100               	movlb	0	; () banked
 17417  003B48  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17418  003B4A  0100               	movlb	0	; () banked
 17419  003B4C  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17420  003B4E  0E00               	movlw	0
 17421  003B50  0100               	movlb	0	; () banked
 17422  003B52  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17423  003B54  0100               	movlb	0	; () banked
 17424  003B56  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17425  003B58  0E00               	movlw	0
 17426  003B5A  0100               	movlb	0	; () banked
 17427  003B5C  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17428  003B5E  0100               	movlb	0	; () banked
 17429  003B60  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17430  003B62  0100               	movlb	0	; () banked
 17431  003B64  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17432  003B66  0100               	movlb	0	; () banked
 17433  003B68  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17434  003B6A  0100               	movlb	0	; () banked
 17435  003B6C  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17436  003B6E  0100               	movlb	0	; () banked
 17437  003B70  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17438  003B72  0100               	movlb	0	; () banked
 17439  003B74  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17440  003B76  0100               	movlb	0	; () banked
 17441  003B78  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17442  003B7A  0100               	movlb	0	; () banked
 17443  003B7C  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17444  003B7E  0100               	movlb	0	; () banked
 17445  003B80  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17446                           
 17447                           ; BSR set to: 0
 17448                           ;MISC.c: 443: temp += (This & 0x08000000) >> 23;
 17449  003B82  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17450  003B86  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17451  003B8A  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17452  003B8E  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17453  003B92  0E18               	movlw	24
 17454  003B94  D006               	goto	u16100
 17455  003B96                     u16105:
 17456  003B96  0100               	movlb	0	; () banked
 17457  003B98  90D8               	bcf	status,0,c
 17458  003B9A  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17459  003B9C  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17460  003B9E  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17461  003BA0  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17462  003BA2                     u16100:
 17463  003BA2  2EE8               	decfsz	wreg,f,c
 17464  003BA4  D7F8               	goto	u16105
 17465  003BA6  0E10               	movlw	16
 17466  003BA8  0100               	movlb	0	; () banked
 17467  003BAA  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17468  003BAC  0100               	movlb	0	; () banked
 17469  003BAE  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17470  003BB0  0E00               	movlw	0
 17471  003BB2  0100               	movlb	0	; () banked
 17472  003BB4  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17473  003BB6  0100               	movlb	0	; () banked
 17474  003BB8  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17475  003BBA  0E00               	movlw	0
 17476  003BBC  0100               	movlb	0	; () banked
 17477  003BBE  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17478  003BC0  0100               	movlb	0	; () banked
 17479  003BC2  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17480  003BC4  0E00               	movlw	0
 17481  003BC6  0100               	movlb	0	; () banked
 17482  003BC8  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17483  003BCA  0100               	movlb	0	; () banked
 17484  003BCC  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17485  003BCE  0100               	movlb	0	; () banked
 17486  003BD0  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17487  003BD2  0100               	movlb	0	; () banked
 17488  003BD4  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17489  003BD6  0100               	movlb	0	; () banked
 17490  003BD8  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17491  003BDA  0100               	movlb	0	; () banked
 17492  003BDC  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17493  003BDE  0100               	movlb	0	; () banked
 17494  003BE0  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17495  003BE2  0100               	movlb	0	; () banked
 17496  003BE4  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17497  003BE6  0100               	movlb	0	; () banked
 17498  003BE8  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17499  003BEA  0100               	movlb	0	; () banked
 17500  003BEC  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17501                           
 17502                           ; BSR set to: 0
 17503                           ;MISC.c: 444: temp += (This & 0x10000000) >> 25;
 17504  003BEE  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17505  003BF2  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17506  003BF6  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17507  003BFA  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17508  003BFE  0E1A               	movlw	26
 17509  003C00  D006               	goto	u16110
 17510  003C02                     u16115:
 17511  003C02  0100               	movlb	0	; () banked
 17512  003C04  90D8               	bcf	status,0,c
 17513  003C06  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17514  003C08  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17515  003C0A  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17516  003C0C  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17517  003C0E                     u16110:
 17518  003C0E  2EE8               	decfsz	wreg,f,c
 17519  003C10  D7F8               	goto	u16115
 17520  003C12  0E08               	movlw	8
 17521  003C14  0100               	movlb	0	; () banked
 17522  003C16  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17523  003C18  0100               	movlb	0	; () banked
 17524  003C1A  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17525  003C1C  0E00               	movlw	0
 17526  003C1E  0100               	movlb	0	; () banked
 17527  003C20  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17528  003C22  0100               	movlb	0	; () banked
 17529  003C24  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17530  003C26  0E00               	movlw	0
 17531  003C28  0100               	movlb	0	; () banked
 17532  003C2A  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17533  003C2C  0100               	movlb	0	; () banked
 17534  003C2E  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17535  003C30  0E00               	movlw	0
 17536  003C32  0100               	movlb	0	; () banked
 17537  003C34  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17538  003C36  0100               	movlb	0	; () banked
 17539  003C38  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17540  003C3A  0100               	movlb	0	; () banked
 17541  003C3C  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17542  003C3E  0100               	movlb	0	; () banked
 17543  003C40  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17544  003C42  0100               	movlb	0	; () banked
 17545  003C44  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17546  003C46  0100               	movlb	0	; () banked
 17547  003C48  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17548  003C4A  0100               	movlb	0	; () banked
 17549  003C4C  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17550  003C4E  0100               	movlb	0	; () banked
 17551  003C50  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17552  003C52  0100               	movlb	0	; () banked
 17553  003C54  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17554  003C56  0100               	movlb	0	; () banked
 17555  003C58  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17556                           
 17557                           ; BSR set to: 0
 17558                           ;MISC.c: 445: temp += (This & 0x20000000) >> 27;
 17559  003C5A  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17560  003C5E  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17561  003C62  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17562  003C66  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17563  003C6A  0E1C               	movlw	28
 17564  003C6C  D006               	goto	u16120
 17565  003C6E                     u16125:
 17566  003C6E  0100               	movlb	0	; () banked
 17567  003C70  90D8               	bcf	status,0,c
 17568  003C72  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17569  003C74  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17570  003C76  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17571  003C78  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17572  003C7A                     u16120:
 17573  003C7A  2EE8               	decfsz	wreg,f,c
 17574  003C7C  D7F8               	goto	u16125
 17575  003C7E  0E04               	movlw	4
 17576  003C80  0100               	movlb	0	; () banked
 17577  003C82  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17578  003C84  0100               	movlb	0	; () banked
 17579  003C86  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17580  003C88  0E00               	movlw	0
 17581  003C8A  0100               	movlb	0	; () banked
 17582  003C8C  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17583  003C8E  0100               	movlb	0	; () banked
 17584  003C90  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17585  003C92  0E00               	movlw	0
 17586  003C94  0100               	movlb	0	; () banked
 17587  003C96  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17588  003C98  0100               	movlb	0	; () banked
 17589  003C9A  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17590  003C9C  0E00               	movlw	0
 17591  003C9E  0100               	movlb	0	; () banked
 17592  003CA0  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17593  003CA2  0100               	movlb	0	; () banked
 17594  003CA4  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17595  003CA6  0100               	movlb	0	; () banked
 17596  003CA8  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17597  003CAA  0100               	movlb	0	; () banked
 17598  003CAC  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17599  003CAE  0100               	movlb	0	; () banked
 17600  003CB0  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17601  003CB2  0100               	movlb	0	; () banked
 17602  003CB4  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17603  003CB6  0100               	movlb	0	; () banked
 17604  003CB8  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17605  003CBA  0100               	movlb	0	; () banked
 17606  003CBC  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17607  003CBE  0100               	movlb	0	; () banked
 17608  003CC0  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17609  003CC2  0100               	movlb	0	; () banked
 17610  003CC4  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17611                           
 17612                           ; BSR set to: 0
 17613                           ;MISC.c: 446: temp += (This & 0x40000000) >> 29;
 17614  003CC6  C07C  F080         	movff	Reverse_4Byte@This,??_Reverse_4Byte
 17615  003CCA  C07D  F081         	movff	Reverse_4Byte@This+1,??_Reverse_4Byte+1
 17616  003CCE  C07E  F082         	movff	Reverse_4Byte@This+2,??_Reverse_4Byte+2
 17617  003CD2  C07F  F083         	movff	Reverse_4Byte@This+3,??_Reverse_4Byte+3
 17618  003CD6  0E1E               	movlw	30
 17619  003CD8  D006               	goto	u16130
 17620  003CDA                     u16135:
 17621  003CDA  0100               	movlb	0	; () banked
 17622  003CDC  90D8               	bcf	status,0,c
 17623  003CDE  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17624  003CE0  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17625  003CE2  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17626  003CE4  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17627  003CE6                     u16130:
 17628  003CE6  2EE8               	decfsz	wreg,f,c
 17629  003CE8  D7F8               	goto	u16135
 17630  003CEA  0E02               	movlw	2
 17631  003CEC  0100               	movlb	0	; () banked
 17632  003CEE  1580               	andwf	??_Reverse_4Byte& (0+255),w,b
 17633  003CF0  0100               	movlb	0	; () banked
 17634  003CF2  6F84               	movwf	(??_Reverse_4Byte+4)& (0+255),b
 17635  003CF4  0E00               	movlw	0
 17636  003CF6  0100               	movlb	0	; () banked
 17637  003CF8  1581               	andwf	(??_Reverse_4Byte+1)& (0+255),w,b
 17638  003CFA  0100               	movlb	0	; () banked
 17639  003CFC  6F85               	movwf	(??_Reverse_4Byte+5)& (0+255),b
 17640  003CFE  0E00               	movlw	0
 17641  003D00  0100               	movlb	0	; () banked
 17642  003D02  1582               	andwf	(??_Reverse_4Byte+2)& (0+255),w,b
 17643  003D04  0100               	movlb	0	; () banked
 17644  003D06  6F86               	movwf	(??_Reverse_4Byte+6)& (0+255),b
 17645  003D08  0E00               	movlw	0
 17646  003D0A  0100               	movlb	0	; () banked
 17647  003D0C  1583               	andwf	(??_Reverse_4Byte+3)& (0+255),w,b
 17648  003D0E  0100               	movlb	0	; () banked
 17649  003D10  6F87               	movwf	(??_Reverse_4Byte+7)& (0+255),b
 17650  003D12  0100               	movlb	0	; () banked
 17651  003D14  5184               	movf	(??_Reverse_4Byte+4)& (0+255),w,b
 17652  003D16  0100               	movlb	0	; () banked
 17653  003D18  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17654  003D1A  0100               	movlb	0	; () banked
 17655  003D1C  5185               	movf	(??_Reverse_4Byte+5)& (0+255),w,b
 17656  003D1E  0100               	movlb	0	; () banked
 17657  003D20  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17658  003D22  0100               	movlb	0	; () banked
 17659  003D24  5186               	movf	(??_Reverse_4Byte+6)& (0+255),w,b
 17660  003D26  0100               	movlb	0	; () banked
 17661  003D28  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17662  003D2A  0100               	movlb	0	; () banked
 17663  003D2C  5187               	movf	(??_Reverse_4Byte+7)& (0+255),w,b
 17664  003D2E  0100               	movlb	0	; () banked
 17665  003D30  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17666                           
 17667                           ; BSR set to: 0
 17668                           ;MISC.c: 447: temp += (This & 0x80000000) >> 31;
 17669  003D32  0E00               	movlw	0
 17670  003D34  0100               	movlb	0	; () banked
 17671  003D36  157C               	andwf	Reverse_4Byte@This& (0+255),w,b
 17672  003D38  0100               	movlb	0	; () banked
 17673  003D3A  6F80               	movwf	??_Reverse_4Byte& (0+255),b
 17674  003D3C  0E00               	movlw	0
 17675  003D3E  0100               	movlb	0	; () banked
 17676  003D40  157D               	andwf	(Reverse_4Byte@This+1)& (0+255),w,b
 17677  003D42  0100               	movlb	0	; () banked
 17678  003D44  6F81               	movwf	(??_Reverse_4Byte+1)& (0+255),b
 17679  003D46  0E00               	movlw	0
 17680  003D48  0100               	movlb	0	; () banked
 17681  003D4A  157E               	andwf	(Reverse_4Byte@This+2)& (0+255),w,b
 17682  003D4C  0100               	movlb	0	; () banked
 17683  003D4E  6F82               	movwf	(??_Reverse_4Byte+2)& (0+255),b
 17684  003D50  0E80               	movlw	128
 17685  003D52  0100               	movlb	0	; () banked
 17686  003D54  157F               	andwf	(Reverse_4Byte@This+3)& (0+255),w,b
 17687  003D56  0100               	movlb	0	; () banked
 17688  003D58  6F83               	movwf	(??_Reverse_4Byte+3)& (0+255),b
 17689  003D5A  0E20               	movlw	32
 17690  003D5C  D006               	goto	u16140
 17691  003D5E                     u16145:
 17692  003D5E  0100               	movlb	0	; () banked
 17693  003D60  90D8               	bcf	status,0,c
 17694  003D62  3383               	rrcf	(??_Reverse_4Byte+3)& (0+255),f,b
 17695  003D64  3382               	rrcf	(??_Reverse_4Byte+2)& (0+255),f,b
 17696  003D66  3381               	rrcf	(??_Reverse_4Byte+1)& (0+255),f,b
 17697  003D68  3380               	rrcf	??_Reverse_4Byte& (0+255),f,b
 17698  003D6A                     u16140:
 17699  003D6A  2EE8               	decfsz	wreg,f,c
 17700  003D6C  D7F8               	goto	u16145
 17701  003D6E  0100               	movlb	0	; () banked
 17702  003D70  5180               	movf	??_Reverse_4Byte& (0+255),w,b
 17703  003D72  0100               	movlb	0	; () banked
 17704  003D74  2788               	addwf	Reverse_4Byte@temp& (0+255),f,b
 17705  003D76  0100               	movlb	0	; () banked
 17706  003D78  5181               	movf	(??_Reverse_4Byte+1)& (0+255),w,b
 17707  003D7A  0100               	movlb	0	; () banked
 17708  003D7C  2389               	addwfc	(Reverse_4Byte@temp+1)& (0+255),f,b
 17709  003D7E  0100               	movlb	0	; () banked
 17710  003D80  5182               	movf	(??_Reverse_4Byte+2)& (0+255),w,b
 17711  003D82  0100               	movlb	0	; () banked
 17712  003D84  238A               	addwfc	(Reverse_4Byte@temp+2)& (0+255),f,b
 17713  003D86  0100               	movlb	0	; () banked
 17714  003D88  5183               	movf	(??_Reverse_4Byte+3)& (0+255),w,b
 17715  003D8A  0100               	movlb	0	; () banked
 17716  003D8C  238B               	addwfc	(Reverse_4Byte@temp+3)& (0+255),f,b
 17717                           
 17718                           ; BSR set to: 0
 17719                           ;MISC.c: 449: return temp;
 17720  003D8E  C088  F07C         	movff	Reverse_4Byte@temp,?_Reverse_4Byte
 17721  003D92  C089  F07D         	movff	Reverse_4Byte@temp+1,?_Reverse_4Byte+1
 17722  003D96  C08A  F07E         	movff	Reverse_4Byte@temp+2,?_Reverse_4Byte+2
 17723  003D9A  C08B  F07F         	movff	Reverse_4Byte@temp+3,?_Reverse_4Byte+3
 17724  003D9E  0012               	return	
 17725                           
 17726                           ; BSR set to: 0
 17727                           
 17728                           ; BSR set to: 0
 17729  003DA0  0012               	return		;funcret
 17730  003DA2                     __end_of_Reverse_4Byte:
 17731                           	opt stack 0
 17732                           tblptru	equ	0xFF8
 17733                           tblptrh	equ	0xFF7
 17734                           tblptrl	equ	0xFF6
 17735                           tablat	equ	0xFF5
 17736                           prodh	equ	0xFF4
 17737                           prodl	equ	0xFF3
 17738                           intcon	equ	0xFF2
 17739                           indf0	equ	0xFEF
 17740                           postinc0	equ	0xFEE
 17741                           fsr0h	equ	0xFEA
 17742                           fsr0l	equ	0xFE9
 17743                           wreg	equ	0xFE8
 17744                           indf1	equ	0xFE7
 17745                           postdec1	equ	0xFE5
 17746                           fsr1h	equ	0xFE2
 17747                           fsr1l	equ	0xFE1
 17748                           indf2	equ	0xFDF
 17749                           postinc2	equ	0xFDE
 17750                           fsr2h	equ	0xFDA
 17751                           fsr2l	equ	0xFD9
 17752                           status	equ	0xFD8
 17753                           
 17754 ;; *************** function _CheckReceivingIR *****************
 17755 ;; Defined at:
 17756 ;;		line 508 in file "IR.c"
 17757 ;; Parameters:    Size  Location     Type
 17758 ;;		None
 17759 ;; Auto vars:     Size  Location     Type
 17760 ;;		None
 17761 ;; Return value:  Size  Location     Type
 17762 ;;                  1    wreg      unsigned char 
 17763 ;; Registers used:
 17764 ;;		wreg, status,2, status,0
 17765 ;; Tracked objects:
 17766 ;;		On entry : 0/0
 17767 ;;		On exit  : 0/0
 17768 ;;		Unchanged: 0/0
 17769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17774 ;;Total ram usage:        0 bytes
 17775 ;; Hardware stack levels used:    1
 17776 ;; Hardware stack levels required when called:    6
 17777 ;; This function calls:
 17778 ;;		Nothing
 17779 ;; This function is called by:
 17780 ;;		_SendNEC_wait
 17781 ;; This function uses a non-reentrant model
 17782 ;;
 17783                           
 17784                           	psect	text22
 17785  0094C4                     __ptext22:
 17786                           	opt stack 0
 17787  0094C4                     _CheckReceivingIR:
 17788                           	opt stack 22
 17789                           
 17790                           ;IR.c: 510: if(ReceivingIR == 13)
 17791                           
 17792                           ; BSR set to: 0
 17793                           ;incstack = 0
 17794  0094C4  0E0D               	movlw	13
 17795  0094C6  1844               	xorwf	_ReceivingIR,w,c	;volatile
 17796  0094C8  A4D8               	btfss	status,2,c
 17797  0094CA  D002               	goto	l14070
 17798                           
 17799                           ;IR.c: 511: {
 17800                           ;IR.c: 512: return 0;
 17801  0094CC  0E00               	movlw	0
 17802  0094CE  0012               	return	
 17803  0094D0                     l14070:
 17804                           
 17805                           ;IR.c: 513: }
 17806                           ;IR.c: 514: return 1;
 17807  0094D0  0E01               	movlw	1
 17808  0094D2  0012               	return	
 17809  0094D4  0012               	return		;funcret
 17810  0094D6                     __end_of_CheckReceivingIR:
 17811                           	opt stack 0
 17812                           tblptru	equ	0xFF8
 17813                           tblptrh	equ	0xFF7
 17814                           tblptrl	equ	0xFF6
 17815                           tablat	equ	0xFF5
 17816                           prodh	equ	0xFF4
 17817                           prodl	equ	0xFF3
 17818                           intcon	equ	0xFF2
 17819                           indf0	equ	0xFEF
 17820                           postinc0	equ	0xFEE
 17821                           fsr0h	equ	0xFEA
 17822                           fsr0l	equ	0xFE9
 17823                           wreg	equ	0xFE8
 17824                           indf1	equ	0xFE7
 17825                           postdec1	equ	0xFE5
 17826                           fsr1h	equ	0xFE2
 17827                           fsr1l	equ	0xFE1
 17828                           indf2	equ	0xFDF
 17829                           postinc2	equ	0xFDE
 17830                           fsr2h	equ	0xFDA
 17831                           fsr2l	equ	0xFD9
 17832                           status	equ	0xFD8
 17833                           
 17834 ;; *************** function _ReadVoltage *****************
 17835 ;; Defined at:
 17836 ;;		line 60 in file "ADC.c"
 17837 ;; Parameters:    Size  Location     Type
 17838 ;;		None
 17839 ;; Auto vars:     Size  Location     Type
 17840 ;;  voltage         3   72[BANK0 ] unsigned char 
 17841 ;;  temp            2   75[BANK0 ] unsigned int 
 17842 ;; Return value:  Size  Location     Type
 17843 ;;                  3   69[BANK0 ] unsigned int 
 17844 ;; Registers used:
 17845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17846 ;; Tracked objects:
 17847 ;;		On entry : 0/0
 17848 ;;		On exit  : 0/0
 17849 ;;		Unchanged: 0/0
 17850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17851 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17852 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17854 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17855 ;;Total ram usage:        8 bytes
 17856 ;; Hardware stack levels used:    1
 17857 ;; Hardware stack levels required when called:    8
 17858 ;; This function calls:
 17859 ;;		_InternalADC_Read
 17860 ;;		_VoltageDividerOFF
 17861 ;;		_VoltageDividerON
 17862 ;;		___ftdiv
 17863 ;;		___ftmul
 17864 ;;		___lwtoft
 17865 ;;		_delayUS
 17866 ;; This function is called by:
 17867 ;;		_main
 17868 ;;		_UseBluetooth
 17869 ;; This function uses a non-reentrant model
 17870 ;;
 17871                           
 17872                           	psect	text23
 17873  00809E                     __ptext23:
 17874                           	opt stack 0
 17875  00809E                     _ReadVoltage:
 17876                           	opt stack 21
 17877                           
 17878                           ;ADC.c: 62: unsigned int temp;
 17879                           ;ADC.c: 63: double voltage;
 17880                           ;ADC.c: 65: VoltageDividerON();
 17881                           
 17882                           ;incstack = 0
 17883  00809E  ECDC  F04A         	call	_VoltageDividerON	;wreg free
 17884                           
 17885                           ;ADC.c: 66: delayUS(5);
 17886  0080A2  0E05               	movlw	5
 17887  0080A4  0100               	movlb	0	; () banked
 17888  0080A6  6F7C               	movwf	delayUS@US& (0+255),b
 17889  0080A8  0E00               	movlw	0
 17890  0080AA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 17891  0080AC  0E00               	movlw	0
 17892  0080AE  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 17893  0080B0  0E00               	movlw	0
 17894  0080B2  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 17895  0080B4  EC7B  F047         	call	_delayUS	;wreg free
 17896                           
 17897                           ;ADC.c: 67: if(InternalADC_Read(0, &temp))
 17898  0080B8  0EAB               	movlw	low ReadVoltage@temp
 17899  0080BA  0100               	movlb	0	; () banked
 17900  0080BC  6F85               	movwf	InternalADC_Read@ADCcounts& (0+255),b
 17901  0080BE  0E00               	movlw	high ReadVoltage@temp
 17902  0080C0  0100               	movlb	0	; () banked
 17903  0080C2  6F86               	movwf	(InternalADC_Read@ADCcounts+1)& (0+255),b
 17904  0080C4  0E00               	movlw	0
 17905  0080C6  EC62  F042         	call	_InternalADC_Read
 17906  0080CA  0900               	iorlw	0
 17907  0080CC  B4D8               	btfsc	status,2,c
 17908  0080CE  D02F               	goto	l14294
 17909                           
 17910                           ;ADC.c: 68: {
 17911                           ;ADC.c: 69: voltage = ((double)temp / 1024.0) * 11 * 3.3;
 17912  0080D0  0E00               	movlw	0
 17913  0080D2  0100               	movlb	0	; () banked
 17914  0080D4  6F8A               	movwf	___ftdiv@f2& (0+255),b
 17915  0080D6  0E80               	movlw	128
 17916  0080D8  0100               	movlb	0	; () banked
 17917  0080DA  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 17918  0080DC  0E44               	movlw	68
 17919  0080DE  0100               	movlb	0	; () banked
 17920  0080E0  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 17921  0080E2  C0AB  F084         	movff	ReadVoltage@temp,___lwtoft@c
 17922  0080E6  C0AC  F085         	movff	ReadVoltage@temp+1,___lwtoft@c+1
 17923  0080EA  EC7F  F049         	call	___lwtoft	;wreg free
 17924  0080EE  C084  F087         	movff	?___lwtoft,___ftdiv@f1
 17925  0080F2  C085  F088         	movff	?___lwtoft+1,___ftdiv@f1+1
 17926  0080F6  C086  F089         	movff	?___lwtoft+2,___ftdiv@f1+2
 17927  0080FA  EC0B  F038         	call	___ftdiv	;wreg free
 17928  0080FE  C087  F096         	movff	?___ftdiv,___ftmul@f1
 17929  008102  C088  F097         	movff	?___ftdiv+1,___ftmul@f1+1
 17930  008106  C089  F098         	movff	?___ftdiv+2,___ftmul@f1+2
 17931  00810A  0E33               	movlw	51
 17932  00810C  0100               	movlb	0	; () banked
 17933  00810E  6F99               	movwf	___ftmul@f2& (0+255),b
 17934  008110  0E11               	movlw	17
 17935  008112  0100               	movlb	0	; () banked
 17936  008114  6F9A               	movwf	(___ftmul@f2+1)& (0+255),b
 17937  008116  0E42               	movlw	66
 17938  008118  0100               	movlb	0	; () banked
 17939  00811A  6F9B               	movwf	(___ftmul@f2+2)& (0+255),b
 17940  00811C  EC55  F037         	call	___ftmul	;wreg free
 17941  008120  C096  F0A8         	movff	?___ftmul,ReadVoltage@voltage
 17942  008124  C097  F0A9         	movff	?___ftmul+1,ReadVoltage@voltage+1
 17943  008128  C098  F0AA         	movff	?___ftmul+2,ReadVoltage@voltage+2
 17944                           
 17945                           ;ADC.c: 70: }
 17946  00812C  D00A               	goto	l14296
 17947  00812E                     l14294:
 17948                           
 17949                           ;ADC.c: 71: else
 17950                           ;ADC.c: 72: {
 17951                           ;ADC.c: 73: voltage = 0.0;
 17952  00812E  0E00               	movlw	0
 17953  008130  0100               	movlb	0	; () banked
 17954  008132  6FA8               	movwf	ReadVoltage@voltage& (0+255),b
 17955  008134  0E00               	movlw	0
 17956  008136  0100               	movlb	0	; () banked
 17957  008138  6FA9               	movwf	(ReadVoltage@voltage+1)& (0+255),b
 17958  00813A  0E00               	movlw	0
 17959  00813C  0100               	movlb	0	; () banked
 17960  00813E  6FAA               	movwf	(ReadVoltage@voltage+2)& (0+255),b
 17961  008140  D000               	goto	l14296
 17962  008142                     l14296:
 17963                           
 17964                           ;ADC.c: 74: }
 17965                           ;ADC.c: 75: VoltageDividerOFF();
 17966  008142  ECDF  F04A         	call	_VoltageDividerOFF	;wreg free
 17967                           
 17968                           ;ADC.c: 76: return voltage;
 17969  008146  C0A8  F0A5         	movff	ReadVoltage@voltage,?_ReadVoltage
 17970  00814A  C0A9  F0A6         	movff	ReadVoltage@voltage+1,?_ReadVoltage+1
 17971  00814E  C0AA  F0A7         	movff	ReadVoltage@voltage+2,?_ReadVoltage+2
 17972  008152  0012               	return	
 17973  008154  0012               	return		;funcret
 17974  008156                     __end_of_ReadVoltage:
 17975                           	opt stack 0
 17976                           tblptru	equ	0xFF8
 17977                           tblptrh	equ	0xFF7
 17978                           tblptrl	equ	0xFF6
 17979                           tablat	equ	0xFF5
 17980                           prodh	equ	0xFF4
 17981                           prodl	equ	0xFF3
 17982                           intcon	equ	0xFF2
 17983                           indf0	equ	0xFEF
 17984                           postinc0	equ	0xFEE
 17985                           fsr0h	equ	0xFEA
 17986                           fsr0l	equ	0xFE9
 17987                           wreg	equ	0xFE8
 17988                           indf1	equ	0xFE7
 17989                           postdec1	equ	0xFE5
 17990                           fsr1h	equ	0xFE2
 17991                           fsr1l	equ	0xFE1
 17992                           indf2	equ	0xFDF
 17993                           postinc2	equ	0xFDE
 17994                           fsr2h	equ	0xFDA
 17995                           fsr2l	equ	0xFD9
 17996                           status	equ	0xFD8
 17997                           
 17998 ;; *************** function ___lwtoft *****************
 17999 ;; Defined at:
 18000 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 18001 ;; Parameters:    Size  Location     Type
 18002 ;;  c               2   36[BANK0 ] unsigned int 
 18003 ;; Auto vars:     Size  Location     Type
 18004 ;;		None
 18005 ;; Return value:  Size  Location     Type
 18006 ;;                  3   36[BANK0 ] float 
 18007 ;; Registers used:
 18008 ;;		wreg, status,2, status,0, cstack
 18009 ;; Tracked objects:
 18010 ;;		On entry : 0/0
 18011 ;;		On exit  : 0/0
 18012 ;;		Unchanged: 0/0
 18013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18014 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18017 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18018 ;;Total ram usage:        3 bytes
 18019 ;; Hardware stack levels used:    1
 18020 ;; Hardware stack levels required when called:    7
 18021 ;; This function calls:
 18022 ;;		___ftpack
 18023 ;; This function is called by:
 18024 ;;		_ReadVoltage
 18025 ;; This function uses a non-reentrant model
 18026 ;;
 18027                           
 18028                           	psect	text24
 18029  0092FE                     __ptext24:
 18030                           	opt stack 0
 18031  0092FE                     ___lwtoft:
 18032                           	opt stack 21
 18033                           
 18034                           ;incstack = 0
 18035  0092FE  C084  F07C         	movff	___lwtoft@c,___ftpack@arg
 18036  009302  C085  F07D         	movff	___lwtoft@c+1,___ftpack@arg+1
 18037  009306  0100               	movlb	0	; () banked
 18038  009308  6B7E               	clrf	(___ftpack@arg+2)& (0+255),b
 18039  00930A  0E8E               	movlw	142
 18040  00930C  0100               	movlb	0	; () banked
 18041  00930E  6F7F               	movwf	___ftpack@exp& (0+255),b
 18042  009310  0E00               	movlw	0
 18043  009312  0100               	movlb	0	; () banked
 18044  009314  6F80               	movwf	___ftpack@sign& (0+255),b
 18045  009316  EC2B  F03B         	call	___ftpack	;wreg free
 18046  00931A  C07C  F084         	movff	?___ftpack,?___lwtoft
 18047  00931E  C07D  F085         	movff	?___ftpack+1,?___lwtoft+1
 18048  009322  C07E  F086         	movff	?___ftpack+2,?___lwtoft+2
 18049  009326  0012               	return	
 18050  009328  0012               	return		;funcret
 18051  00932A                     __end_of___lwtoft:
 18052                           	opt stack 0
 18053                           tblptru	equ	0xFF8
 18054                           tblptrh	equ	0xFF7
 18055                           tblptrl	equ	0xFF6
 18056                           tablat	equ	0xFF5
 18057                           prodh	equ	0xFF4
 18058                           prodl	equ	0xFF3
 18059                           intcon	equ	0xFF2
 18060                           indf0	equ	0xFEF
 18061                           postinc0	equ	0xFEE
 18062                           fsr0h	equ	0xFEA
 18063                           fsr0l	equ	0xFE9
 18064                           wreg	equ	0xFE8
 18065                           indf1	equ	0xFE7
 18066                           postdec1	equ	0xFE5
 18067                           fsr1h	equ	0xFE2
 18068                           fsr1l	equ	0xFE1
 18069                           indf2	equ	0xFDF
 18070                           postinc2	equ	0xFDE
 18071                           fsr2h	equ	0xFDA
 18072                           fsr2l	equ	0xFD9
 18073                           status	equ	0xFD8
 18074                           
 18075 ;; *************** function ___ftdiv *****************
 18076 ;; Defined at:
 18077 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 18078 ;; Parameters:    Size  Location     Type
 18079 ;;  f1              3   39[BANK0 ] float 
 18080 ;;  f2              3   42[BANK0 ] float 
 18081 ;; Auto vars:     Size  Location     Type
 18082 ;;  f3              3   49[BANK0 ] float 
 18083 ;;  sign            1   53[BANK0 ] unsigned char 
 18084 ;;  exp             1   52[BANK0 ] unsigned char 
 18085 ;;  cntr            1   48[BANK0 ] unsigned char 
 18086 ;; Return value:  Size  Location     Type
 18087 ;;                  3   39[BANK0 ] float 
 18088 ;; Registers used:
 18089 ;;		wreg, status,2, status,0, cstack
 18090 ;; Tracked objects:
 18091 ;;		On entry : 0/0
 18092 ;;		On exit  : 0/0
 18093 ;;		Unchanged: 0/0
 18094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18095 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18096 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18097 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18098 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18099 ;;Total ram usage:       15 bytes
 18100 ;; Hardware stack levels used:    1
 18101 ;; Hardware stack levels required when called:    7
 18102 ;; This function calls:
 18103 ;;		___ftpack
 18104 ;; This function is called by:
 18105 ;;		_ReadVoltage
 18106 ;; This function uses a non-reentrant model
 18107 ;;
 18108                           
 18109                           	psect	text25
 18110  007016                     __ptext25:
 18111                           	opt stack 0
 18112  007016                     ___ftdiv:
 18113                           	opt stack 21
 18114                           
 18115                           ;incstack = 0
 18116  007016  C089  F08D         	movff	___ftdiv@f1+2,??___ftdiv
 18117  00701A  0100               	movlb	0	; () banked
 18118  00701C  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 18119  00701E  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 18120  007020  0100               	movlb	0	; () banked
 18121  007022  3588               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 18122  007024  0100               	movlb	0	; () banked
 18123  007026  378D               	rlcf	??___ftdiv& (0+255),f,b
 18124  007028  E301               	bnc	u17481
 18125  00702A  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 18126  00702C                     u17481:
 18127  00702C  0100               	movlb	0	; () banked
 18128  00702E  518D               	movf	??___ftdiv& (0+255),w,b
 18129  007030  0100               	movlb	0	; () banked
 18130  007032  6F94               	movwf	___ftdiv@exp& (0+255),b
 18131  007034  0100               	movlb	0	; () banked
 18132  007036  5194               	movf	___ftdiv@exp& (0+255),w,b
 18133  007038  A4D8               	btfss	status,2,c
 18134  00703A  D00A               	goto	l14242
 18135                           
 18136                           ; BSR set to: 0
 18137  00703C  0E00               	movlw	0
 18138  00703E  0100               	movlb	0	; () banked
 18139  007040  6F87               	movwf	?___ftdiv& (0+255),b
 18140  007042  0E00               	movlw	0
 18141  007044  0100               	movlb	0	; () banked
 18142  007046  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 18143  007048  0E00               	movlw	0
 18144  00704A  0100               	movlb	0	; () banked
 18145  00704C  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 18146                           
 18147                           ; BSR set to: 0
 18148  00704E  0012               	return	
 18149  007050                     l14242:
 18150                           
 18151                           ; BSR set to: 0
 18152  007050  C08C  F08D         	movff	___ftdiv@f2+2,??___ftdiv
 18153  007054  0100               	movlb	0	; () banked
 18154  007056  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 18155  007058  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 18156  00705A  0100               	movlb	0	; () banked
 18157  00705C  358B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 18158  00705E  0100               	movlb	0	; () banked
 18159  007060  378D               	rlcf	??___ftdiv& (0+255),f,b
 18160  007062  E301               	bnc	u17501
 18161  007064  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 18162  007066                     u17501:
 18163  007066  0100               	movlb	0	; () banked
 18164  007068  518D               	movf	??___ftdiv& (0+255),w,b
 18165  00706A  0100               	movlb	0	; () banked
 18166  00706C  6F95               	movwf	___ftdiv@sign& (0+255),b
 18167  00706E  0100               	movlb	0	; () banked
 18168  007070  5195               	movf	___ftdiv@sign& (0+255),w,b
 18169  007072  A4D8               	btfss	status,2,c
 18170  007074  D00A               	goto	l14248
 18171                           
 18172                           ; BSR set to: 0
 18173  007076  0E00               	movlw	0
 18174  007078  0100               	movlb	0	; () banked
 18175  00707A  6F87               	movwf	?___ftdiv& (0+255),b
 18176  00707C  0E00               	movlw	0
 18177  00707E  0100               	movlb	0	; () banked
 18178  007080  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 18179  007082  0E00               	movlw	0
 18180  007084  0100               	movlb	0	; () banked
 18181  007086  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 18182                           
 18183                           ; BSR set to: 0
 18184  007088  0012               	return	
 18185  00708A                     l14248:
 18186                           
 18187                           ; BSR set to: 0
 18188  00708A  0E00               	movlw	0
 18189  00708C  0100               	movlb	0	; () banked
 18190  00708E  6F91               	movwf	___ftdiv@f3& (0+255),b
 18191  007090  0E00               	movlw	0
 18192  007092  0100               	movlb	0	; () banked
 18193  007094  6F92               	movwf	(___ftdiv@f3+1)& (0+255),b
 18194  007096  0E00               	movlw	0
 18195  007098  0100               	movlb	0	; () banked
 18196  00709A  6F93               	movwf	(___ftdiv@f3+2)& (0+255),b
 18197                           
 18198                           ; BSR set to: 0
 18199  00709C  0100               	movlb	0	; () banked
 18200  00709E  5195               	movf	___ftdiv@sign& (0+255),w,b
 18201  0070A0  0F89               	addlw	137
 18202  0070A2  0100               	movlb	0	; () banked
 18203  0070A4  5F94               	subwf	___ftdiv@exp& (0+255),f,b
 18204                           
 18205                           ; BSR set to: 0
 18206  0070A6  C089  F095         	movff	___ftdiv@f1+2,___ftdiv@sign
 18207                           
 18208                           ; BSR set to: 0
 18209  0070AA  0100               	movlb	0	; () banked
 18210  0070AC  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 18211  0070AE  0100               	movlb	0	; () banked
 18212  0070B0  1B95               	xorwf	___ftdiv@sign& (0+255),f,b
 18213                           
 18214                           ; BSR set to: 0
 18215  0070B2  0E80               	movlw	128
 18216  0070B4  0100               	movlb	0	; () banked
 18217  0070B6  1795               	andwf	___ftdiv@sign& (0+255),f,b
 18218                           
 18219                           ; BSR set to: 0
 18220  0070B8  0100               	movlb	0	; () banked
 18221  0070BA  8F88               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 18222                           
 18223                           ; BSR set to: 0
 18224  0070BC  0EFF               	movlw	255
 18225  0070BE  0100               	movlb	0	; () banked
 18226  0070C0  1787               	andwf	___ftdiv@f1& (0+255),f,b
 18227  0070C2  0EFF               	movlw	255
 18228  0070C4  0100               	movlb	0	; () banked
 18229  0070C6  1788               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 18230  0070C8  0E00               	movlw	0
 18231  0070CA  0100               	movlb	0	; () banked
 18232  0070CC  1789               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 18233                           
 18234                           ; BSR set to: 0
 18235  0070CE  0100               	movlb	0	; () banked
 18236  0070D0  8F8B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 18237                           
 18238                           ; BSR set to: 0
 18239  0070D2  0EFF               	movlw	255
 18240  0070D4  0100               	movlb	0	; () banked
 18241  0070D6  178A               	andwf	___ftdiv@f2& (0+255),f,b
 18242  0070D8  0EFF               	movlw	255
 18243  0070DA  0100               	movlb	0	; () banked
 18244  0070DC  178B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 18245  0070DE  0E00               	movlw	0
 18246  0070E0  0100               	movlb	0	; () banked
 18247  0070E2  178C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 18248                           
 18249                           ; BSR set to: 0
 18250  0070E4  0E18               	movlw	24
 18251  0070E6  0100               	movlb	0	; () banked
 18252  0070E8  6F90               	movwf	___ftdiv@cntr& (0+255),b
 18253  0070EA  D000               	goto	l14268
 18254  0070EC                     l14268:
 18255                           
 18256                           ; BSR set to: 0
 18257  0070EC  0100               	movlb	0	; () banked
 18258  0070EE  90D8               	bcf	status,0,c
 18259  0070F0  3791               	rlcf	___ftdiv@f3& (0+255),f,b
 18260  0070F2  3792               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 18261  0070F4  3793               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 18262                           
 18263                           ; BSR set to: 0
 18264  0070F6  0100               	movlb	0	; () banked
 18265  0070F8  518A               	movf	___ftdiv@f2& (0+255),w,b
 18266  0070FA  0100               	movlb	0	; () banked
 18267  0070FC  5D87               	subwf	___ftdiv@f1& (0+255),w,b
 18268  0070FE  0100               	movlb	0	; () banked
 18269  007100  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 18270  007102  0100               	movlb	0	; () banked
 18271  007104  5988               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 18272  007106  0100               	movlb	0	; () banked
 18273  007108  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 18274  00710A  0100               	movlb	0	; () banked
 18275  00710C  5989               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 18276  00710E  A0D8               	btfss	status,0,c
 18277  007110  D00E               	goto	l2730
 18278                           
 18279                           ; BSR set to: 0
 18280  007112  0100               	movlb	0	; () banked
 18281  007114  518A               	movf	___ftdiv@f2& (0+255),w,b
 18282  007116  0100               	movlb	0	; () banked
 18283  007118  5F87               	subwf	___ftdiv@f1& (0+255),f,b
 18284  00711A  0100               	movlb	0	; () banked
 18285  00711C  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 18286  00711E  0100               	movlb	0	; () banked
 18287  007120  5B88               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 18288  007122  0100               	movlb	0	; () banked
 18289  007124  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 18290  007126  0100               	movlb	0	; () banked
 18291  007128  5B89               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 18292                           
 18293                           ; BSR set to: 0
 18294  00712A  0100               	movlb	0	; () banked
 18295  00712C  8191               	bsf	___ftdiv@f3& (0+255),0,b
 18296  00712E                     l2730:
 18297                           
 18298                           ; BSR set to: 0
 18299  00712E  0100               	movlb	0	; () banked
 18300  007130  90D8               	bcf	status,0,c
 18301  007132  3787               	rlcf	___ftdiv@f1& (0+255),f,b
 18302  007134  3788               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 18303  007136  3789               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 18304                           
 18305                           ; BSR set to: 0
 18306  007138  0100               	movlb	0	; () banked
 18307  00713A  2F90               	decfsz	___ftdiv@cntr& (0+255),f,b
 18308  00713C  D7D7               	goto	l14268
 18309  00713E  D000               	goto	l14278
 18310  007140                     l14278:
 18311                           
 18312                           ; BSR set to: 0
 18313  007140  C091  F07C         	movff	___ftdiv@f3,___ftpack@arg
 18314  007144  C092  F07D         	movff	___ftdiv@f3+1,___ftpack@arg+1
 18315  007148  C093  F07E         	movff	___ftdiv@f3+2,___ftpack@arg+2
 18316  00714C  C094  F07F         	movff	___ftdiv@exp,___ftpack@exp
 18317  007150  C095  F080         	movff	___ftdiv@sign,___ftpack@sign
 18318  007154  EC2B  F03B         	call	___ftpack	;wreg free
 18319  007158  C07C  F087         	movff	?___ftpack,?___ftdiv
 18320  00715C  C07D  F088         	movff	?___ftpack+1,?___ftdiv+1
 18321  007160  C07E  F089         	movff	?___ftpack+2,?___ftdiv+2
 18322  007164  0012               	return	
 18323  007166  0012               	return		;funcret
 18324  007168                     __end_of___ftdiv:
 18325                           	opt stack 0
 18326                           tblptru	equ	0xFF8
 18327                           tblptrh	equ	0xFF7
 18328                           tblptrl	equ	0xFF6
 18329                           tablat	equ	0xFF5
 18330                           prodh	equ	0xFF4
 18331                           prodl	equ	0xFF3
 18332                           intcon	equ	0xFF2
 18333                           indf0	equ	0xFEF
 18334                           postinc0	equ	0xFEE
 18335                           fsr0h	equ	0xFEA
 18336                           fsr0l	equ	0xFE9
 18337                           wreg	equ	0xFE8
 18338                           indf1	equ	0xFE7
 18339                           postdec1	equ	0xFE5
 18340                           fsr1h	equ	0xFE2
 18341                           fsr1l	equ	0xFE1
 18342                           indf2	equ	0xFDF
 18343                           postinc2	equ	0xFDE
 18344                           fsr2h	equ	0xFDA
 18345                           fsr2l	equ	0xFD9
 18346                           status	equ	0xFD8
 18347                           
 18348 ;; *************** function _VoltageDividerON *****************
 18349 ;; Defined at:
 18350 ;;		line 148 in file "ADC.c"
 18351 ;; Parameters:    Size  Location     Type
 18352 ;;		None
 18353 ;; Auto vars:     Size  Location     Type
 18354 ;;		None
 18355 ;; Return value:  Size  Location     Type
 18356 ;;		None               void
 18357 ;; Registers used:
 18358 ;;		status,2, status,0
 18359 ;; Tracked objects:
 18360 ;;		On entry : 0/0
 18361 ;;		On exit  : 0/0
 18362 ;;		Unchanged: 0/0
 18363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18368 ;;Total ram usage:        0 bytes
 18369 ;; Hardware stack levels used:    1
 18370 ;; Hardware stack levels required when called:    6
 18371 ;; This function calls:
 18372 ;;		Nothing
 18373 ;; This function is called by:
 18374 ;;		_ReadVoltage
 18375 ;; This function uses a non-reentrant model
 18376 ;;
 18377                           
 18378                           	psect	text26
 18379  0095B8                     __ptext26:
 18380                           	opt stack 0
 18381  0095B8                     _VoltageDividerON:
 18382                           	opt stack 22
 18383                           
 18384                           ;ADC.c: 150: TRISBbits.TRISB5 = 0;
 18385                           
 18386                           ;incstack = 0
 18387  0095B8  9A93               	bcf	3987,5,c	;volatile
 18388                           
 18389                           ;ADC.c: 151: LATB &= ~0x20;
 18390  0095BA  9A8A               	bcf	3978,5,c	;volatile
 18391  0095BC  0012               	return		;funcret
 18392  0095BE                     __end_of_VoltageDividerON:
 18393                           	opt stack 0
 18394                           tblptru	equ	0xFF8
 18395                           tblptrh	equ	0xFF7
 18396                           tblptrl	equ	0xFF6
 18397                           tablat	equ	0xFF5
 18398                           prodh	equ	0xFF4
 18399                           prodl	equ	0xFF3
 18400                           intcon	equ	0xFF2
 18401                           indf0	equ	0xFEF
 18402                           postinc0	equ	0xFEE
 18403                           fsr0h	equ	0xFEA
 18404                           fsr0l	equ	0xFE9
 18405                           wreg	equ	0xFE8
 18406                           indf1	equ	0xFE7
 18407                           postdec1	equ	0xFE5
 18408                           fsr1h	equ	0xFE2
 18409                           fsr1l	equ	0xFE1
 18410                           indf2	equ	0xFDF
 18411                           postinc2	equ	0xFDE
 18412                           fsr2h	equ	0xFDA
 18413                           fsr2l	equ	0xFD9
 18414                           status	equ	0xFD8
 18415                           
 18416 ;; *************** function _VoltageDividerOFF *****************
 18417 ;; Defined at:
 18418 ;;		line 159 in file "ADC.c"
 18419 ;; Parameters:    Size  Location     Type
 18420 ;;		None
 18421 ;; Auto vars:     Size  Location     Type
 18422 ;;		None
 18423 ;; Return value:  Size  Location     Type
 18424 ;;		None               void
 18425 ;; Registers used:
 18426 ;;		None
 18427 ;; Tracked objects:
 18428 ;;		On entry : 0/0
 18429 ;;		On exit  : 0/0
 18430 ;;		Unchanged: 0/0
 18431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18436 ;;Total ram usage:        0 bytes
 18437 ;; Hardware stack levels used:    1
 18438 ;; Hardware stack levels required when called:    6
 18439 ;; This function calls:
 18440 ;;		Nothing
 18441 ;; This function is called by:
 18442 ;;		_ReadVoltage
 18443 ;; This function uses a non-reentrant model
 18444 ;;
 18445                           
 18446                           	psect	text27
 18447  0095BE                     __ptext27:
 18448                           	opt stack 0
 18449  0095BE                     _VoltageDividerOFF:
 18450                           	opt stack 22
 18451                           
 18452                           ;ADC.c: 161: TRISBbits.TRISB5 = 1;
 18453                           
 18454                           ;incstack = 0
 18455  0095BE  8A93               	bsf	3987,5,c	;volatile
 18456  0095C0  0012               	return		;funcret
 18457  0095C2                     __end_of_VoltageDividerOFF:
 18458                           	opt stack 0
 18459                           tblptru	equ	0xFF8
 18460                           tblptrh	equ	0xFF7
 18461                           tblptrl	equ	0xFF6
 18462                           tablat	equ	0xFF5
 18463                           prodh	equ	0xFF4
 18464                           prodl	equ	0xFF3
 18465                           intcon	equ	0xFF2
 18466                           indf0	equ	0xFEF
 18467                           postinc0	equ	0xFEE
 18468                           fsr0h	equ	0xFEA
 18469                           fsr0l	equ	0xFE9
 18470                           wreg	equ	0xFE8
 18471                           indf1	equ	0xFE7
 18472                           postdec1	equ	0xFE5
 18473                           fsr1h	equ	0xFE2
 18474                           fsr1l	equ	0xFE1
 18475                           indf2	equ	0xFDF
 18476                           postinc2	equ	0xFDE
 18477                           fsr2h	equ	0xFDA
 18478                           fsr2l	equ	0xFD9
 18479                           status	equ	0xFD8
 18480                           
 18481 ;; *************** function _InternalADC_Read *****************
 18482 ;; Defined at:
 18483 ;;		line 84 in file "ADC.c"
 18484 ;; Parameters:    Size  Location     Type
 18485 ;;  channel         1    wreg     unsigned char 
 18486 ;;  ADCcounts       2   37[BANK0 ] PTR unsigned int 
 18487 ;;		 -> ReadVoltage@temp(2), 
 18488 ;; Auto vars:     Size  Location     Type
 18489 ;;  channel         1   42[BANK0 ] unsigned char 
 18490 ;;  AnaChanSel      1   41[BANK0 ] unsigned char 
 18491 ;; Return value:  Size  Location     Type
 18492 ;;                  1    wreg      unsigned char 
 18493 ;; Registers used:
 18494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18495 ;; Tracked objects:
 18496 ;;		On entry : 0/0
 18497 ;;		On exit  : 0/0
 18498 ;;		Unchanged: 0/0
 18499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18500 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18501 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18502 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18503 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18504 ;;Total ram usage:        6 bytes
 18505 ;; Hardware stack levels used:    1
 18506 ;; Hardware stack levels required when called:    7
 18507 ;; This function calls:
 18508 ;;		_delayUS
 18509 ;; This function is called by:
 18510 ;;		_ReadVoltage
 18511 ;; This function uses a non-reentrant model
 18512 ;;
 18513                           
 18514                           	psect	text28
 18515  0084C4                     __ptext28:
 18516                           	opt stack 0
 18517  0084C4                     _InternalADC_Read:
 18518                           	opt stack 21
 18519                           
 18520                           ;incstack = 0
 18521                           ;InternalADC_Read@channel stored from wreg
 18522  0084C4  0100               	movlb	0	; () banked
 18523  0084C6  6F8A               	movwf	InternalADC_Read@channel& (0+255),b
 18524                           
 18525                           ; BSR set to: 0
 18526                           ;ADC.c: 86: unsigned char AnaChanSel = 1;
 18527  0084C8  0E01               	movlw	1
 18528  0084CA  0100               	movlb	0	; () banked
 18529  0084CC  6F89               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 18530                           
 18531                           ; BSR set to: 0
 18532                           ;ADC.c: 87: if(channel > 0b1100)
 18533  0084CE  0E0C               	movlw	12
 18534  0084D0  0100               	movlb	0	; () banked
 18535  0084D2  658A               	cpfsgt	InternalADC_Read@channel& (0+255),b
 18536  0084D4  D00A               	goto	l13926
 18537                           
 18538                           ; BSR set to: 0
 18539                           ;ADC.c: 88: {
 18540                           ;ADC.c: 89: *ADCcounts = 0;
 18541  0084D6  C085  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 18542  0084DA  C086  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 18543  0084DE  0E00               	movlw	0
 18544  0084E0  6EDE               	movwf	postinc2,c
 18545  0084E2  0E00               	movlw	0
 18546  0084E4  6EDD               	movwf	postdec2,c
 18547                           
 18548                           ; BSR set to: 0
 18549                           ;ADC.c: 90: return 0;
 18550  0084E6  0E00               	movlw	0
 18551                           
 18552                           ; BSR set to: 0
 18553  0084E8  0012               	return	
 18554  0084EA                     l13926:
 18555                           
 18556                           ; BSR set to: 0
 18557                           ;ADC.c: 91: }
 18558                           ;ADC.c: 92: if(channel > 1)
 18559  0084EA  0E01               	movlw	1
 18560  0084EC  0100               	movlb	0	; () banked
 18561  0084EE  658A               	cpfsgt	InternalADC_Read@channel& (0+255),b
 18562  0084F0  D001               	goto	l13930
 18563                           
 18564                           ; BSR set to: 0
 18565                           ;ADC.c: 95: }
 18566  0084F2  D009               	goto	l13934
 18567  0084F4                     l13930:
 18568                           
 18569                           ; BSR set to: 0
 18570                           ;ADC.c: 96: else if (channel == 0)
 18571  0084F4  0100               	movlb	0	; () banked
 18572  0084F6  518A               	movf	InternalADC_Read@channel& (0+255),w,b
 18573  0084F8  0100               	movlb	0	; () banked
 18574  0084FA  A4D8               	btfss	status,2,c
 18575  0084FC  D004               	goto	l13934
 18576                           
 18577                           ; BSR set to: 0
 18578                           ;ADC.c: 97: {
 18579                           ;ADC.c: 98: AnaChanSel = 0;
 18580  0084FE  0E00               	movlw	0
 18581  008500  0100               	movlb	0	; () banked
 18582  008502  6F89               	movwf	InternalADC_Read@AnaChanSel& (0+255),b
 18583                           
 18584                           ; BSR set to: 0
 18585  008504  D000               	goto	l13934
 18586  008506                     l13934:
 18587                           
 18588                           ; BSR set to: 0
 18589                           ;ADC.c: 99: }
 18590                           ;ADC.c: 101: ADCON0 |= (AnaChanSel << 2);
 18591  008506  0100               	movlb	0	; () banked
 18592  008508  4589               	rlncf	InternalADC_Read@AnaChanSel& (0+255),w,b
 18593  00850A  46E8               	rlncf	wreg,f,c
 18594  00850C  0BFC               	andlw	252
 18595  00850E  12C2               	iorwf	4034,f,c	;volatile
 18596                           
 18597                           ; BSR set to: 0
 18598                           ;ADC.c: 103: ADCON1bits.VCFG0 = 0;
 18599  008510  98C1               	bcf	4033,4,c	;volatile
 18600                           
 18601                           ; BSR set to: 0
 18602                           ;ADC.c: 104: ADCON1bits.VCFG1 = 0;
 18603  008512  9AC1               	bcf	4033,5,c	;volatile
 18604                           
 18605                           ; BSR set to: 0
 18606                           ;ADC.c: 106: (ADCON0bits.ADON = 1);
 18607  008514  80C2               	bsf	4034,0,c	;volatile
 18608                           
 18609                           ; BSR set to: 0
 18610                           ;ADC.c: 107: delayUS(50);
 18611  008516  0E32               	movlw	50
 18612  008518  0100               	movlb	0	; () banked
 18613  00851A  6F7C               	movwf	delayUS@US& (0+255),b
 18614  00851C  0E00               	movlw	0
 18615  00851E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 18616  008520  0E00               	movlw	0
 18617  008522  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 18618  008524  0E00               	movlw	0
 18619  008526  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 18620  008528  EC7B  F047         	call	_delayUS	;wreg free
 18621                           
 18622                           ;ADC.c: 109: ADCON0bits.GO = 1;
 18623  00852C  82C2               	bsf	4034,1,c	;volatile
 18624                           
 18625                           ;ADC.c: 110: while(ADCON0bits.GO);
 18626  00852E  D000               	goto	l747
 18627  008530                     l747:
 18628  008530  B2C2               	btfsc	4034,1,c	;volatile
 18629  008532  D7FE               	goto	l747
 18630                           
 18631                           ;ADC.c: 111: (ADCON0bits.ADON = 0);
 18632  008534  90C2               	bcf	4034,0,c	;volatile
 18633                           
 18634                           ;ADC.c: 113: *ADCcounts = ((ADRESH << 8) + ADRESL);
 18635  008536  50C3               	movf	4035,w,c	;volatile
 18636  008538  CFC4 F087          	movff	4036,??_InternalADC_Read	;volatile
 18637  00853C  0100               	movlb	0	; () banked
 18638  00853E  6B88               	clrf	(??_InternalADC_Read+1)& (0+255),b
 18639  008540  C087  F088         	movff	??_InternalADC_Read,??_InternalADC_Read+1
 18640  008544  0100               	movlb	0	; () banked
 18641  008546  6B87               	clrf	??_InternalADC_Read& (0+255),b
 18642  008548  0100               	movlb	0	; () banked
 18643  00854A  2787               	addwf	??_InternalADC_Read& (0+255),f,b
 18644  00854C  0E00               	movlw	0
 18645  00854E  2388               	addwfc	(??_InternalADC_Read+1)& (0+255),f,b
 18646  008550  C085  FFD9         	movff	InternalADC_Read@ADCcounts,fsr2l
 18647  008554  C086  FFDA         	movff	InternalADC_Read@ADCcounts+1,fsr2h
 18648  008558  C087  FFDE         	movff	??_InternalADC_Read,postinc2
 18649  00855C  C088  FFDD         	movff	??_InternalADC_Read+1,postdec2
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;ADC.c: 114: return 1;
 18653  008560  0E01               	movlw	1
 18654  008562  0012               	return	
 18655                           
 18656                           ; BSR set to: 0
 18657                           
 18658                           ; BSR set to: 0
 18659  008564  0012               	return		;funcret
 18660  008566                     __end_of_InternalADC_Read:
 18661                           	opt stack 0
 18662                           tblptru	equ	0xFF8
 18663                           tblptrh	equ	0xFF7
 18664                           tblptrl	equ	0xFF6
 18665                           tablat	equ	0xFF5
 18666                           prodh	equ	0xFF4
 18667                           prodl	equ	0xFF3
 18668                           intcon	equ	0xFF2
 18669                           indf0	equ	0xFEF
 18670                           postinc0	equ	0xFEE
 18671                           fsr0h	equ	0xFEA
 18672                           fsr0l	equ	0xFE9
 18673                           wreg	equ	0xFE8
 18674                           indf1	equ	0xFE7
 18675                           postdec1	equ	0xFE5
 18676                           fsr1h	equ	0xFE2
 18677                           fsr1l	equ	0xFE1
 18678                           indf2	equ	0xFDF
 18679                           postinc2	equ	0xFDE
 18680                           postdec2	equ	0xFDD
 18681                           fsr2h	equ	0xFDA
 18682                           fsr2l	equ	0xFD9
 18683                           status	equ	0xFD8
 18684                           
 18685 ;; *************** function _GetStringAfterComma *****************
 18686 ;; Defined at:
 18687 ;;		line 646 in file "MISC.c"
 18688 ;; Parameters:    Size  Location     Type
 18689 ;;  This            2   28[BANK0 ] PTR unsigned char 
 18690 ;;		 -> main@BluetoothString(255), 
 18691 ;;  CommaNumber     1   30[BANK0 ] unsigned char 
 18692 ;;  result          2   31[BANK0 ] PTR unsigned char 
 18693 ;;		 -> UseBluetooth@rfchannelSTR(10), 
 18694 ;; Auto vars:     Size  Location     Type
 18695 ;;  count           1   35[BANK0 ] unsigned char 
 18696 ;;  tempCommaNum    1   34[BANK0 ] unsigned char 
 18697 ;; Return value:  Size  Location     Type
 18698 ;;                  1    wreg      unsigned char 
 18699 ;; Registers used:
 18700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18701 ;; Tracked objects:
 18702 ;;		On entry : 0/0
 18703 ;;		On exit  : 0/0
 18704 ;;		Unchanged: 0/0
 18705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18706 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18707 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18708 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18709 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18710 ;;Total ram usage:        8 bytes
 18711 ;; Hardware stack levels used:    1
 18712 ;; Hardware stack levels required when called:    6
 18713 ;; This function calls:
 18714 ;;		Nothing
 18715 ;; This function is called by:
 18716 ;;		_UseBluetooth
 18717 ;; This function uses a non-reentrant model
 18718 ;;
 18719                           
 18720                           	psect	text29
 18721  007894                     __ptext29:
 18722                           	opt stack 0
 18723  007894                     _GetStringAfterComma:
 18724                           	opt stack 23
 18725                           
 18726                           ;MISC.c: 648: unsigned char tempCommaNumber = 1;
 18727                           
 18728                           ; BSR set to: 0
 18729                           ;incstack = 0
 18730  007894  0E01               	movlw	1
 18731  007896  0100               	movlb	0	; () banked
 18732  007898  6F82               	movwf	GetStringAfterComma@tempCommaNumber& (0+255),b
 18733                           
 18734                           ;MISC.c: 649: unsigned char count = 0;
 18735  00789A  0E00               	movlw	0
 18736  00789C  0100               	movlb	0	; () banked
 18737  00789E  6F83               	movwf	GetStringAfterComma@count& (0+255),b
 18738                           
 18739                           ; BSR set to: 0
 18740                           
 18741                           ;MISC.c: 651: SCAN:while(*This != ',' && *This != 0)
 18742  0078A0  D001               	goto	l14866
 18743                           
 18744                           ; BSR set to: 0
 18745  0078A2  D02B               	goto	L14
 18746  0078A4                     l14866:
 18747                           
 18748                           ; BSR set to: 0
 18749  0078A4  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18750  0078A8  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18751  0078AC  0E2C               	movlw	44
 18752  0078AE  18DE               	xorwf	postinc2,w,c
 18753  0078B0  B4D8               	btfsc	status,2,c
 18754  0078B2  D009               	goto	l14870
 18755                           
 18756                           ; BSR set to: 0
 18757  0078B4  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18758  0078B8  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18759  0078BC  50DF               	movf	indf2,w,c
 18760  0078BE  B4D8               	btfsc	status,2,c
 18761  0078C0  D002               	goto	l14870
 18762  0078C2  D01B               	goto	L14
 18763                           
 18764                           ; BSR set to: 0
 18765  0078C4  D000               	goto	l14870
 18766  0078C6                     l14870:
 18767                           
 18768                           ; BSR set to: 0
 18769                           ;MISC.c: 655: }
 18770                           ;MISC.c: 656: if(*This == 0)
 18771  0078C6  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18772  0078CA  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18773  0078CE  50DF               	movf	indf2,w,c
 18774  0078D0  A4D8               	btfss	status,2,c
 18775  0078D2  D003               	goto	l14878
 18776                           
 18777                           ; BSR set to: 0
 18778                           ;MISC.c: 657: {
 18779                           ;MISC.c: 658: return 1;
 18780  0078D4  0E01               	movlw	1
 18781                           
 18782                           ; BSR set to: 0
 18783  0078D6  0012               	return	
 18784                           
 18785                           ; BSR set to: 0
 18786                           ;MISC.c: 659: }
 18787  0078D8  D015               	goto	l14884
 18788  0078DA                     l14878:
 18789                           
 18790                           ; BSR set to: 0
 18791                           ;MISC.c: 660: else if(*This != ',')
 18792  0078DA  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18793  0078DE  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18794  0078E2  0E2C               	movlw	44
 18795  0078E4  18DE               	xorwf	postinc2,w,c
 18796  0078E6  B4D8               	btfsc	status,2,c
 18797  0078E8  D00D               	goto	l14884
 18798                           
 18799                           ; BSR set to: 0
 18800                           ;MISC.c: 661: {
 18801                           ;MISC.c: 662: if(tempCommaNumber < CommaNumber)
 18802  0078EA  0100               	movlb	0	; () banked
 18803  0078EC  517E               	movf	GetStringAfterComma@CommaNumber& (0+255),w,b
 18804  0078EE  0100               	movlb	0	; () banked
 18805  0078F0  5D82               	subwf	GetStringAfterComma@tempCommaNumber& (0+255),w,b
 18806  0078F2  B0D8               	btfsc	status,0,c
 18807  0078F4  D007               	goto	l14884
 18808                           
 18809                           ; BSR set to: 0
 18810                           ;MISC.c: 663: {
 18811                           ;MISC.c: 664: tempCommaNumber++;
 18812  0078F6  0100               	movlb	0	; () banked
 18813  0078F8  2B82               	incf	GetStringAfterComma@tempCommaNumber& (0+255),f,b
 18814  0078FA                     L14:
 18815                           
 18816                           ;MISC.c: 665: This++;
 18817  0078FA  0100               	movlb	0	; () banked
 18818  0078FC  4B7C               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18819  0078FE  2B7D               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18820                           
 18821                           ;MISC.c: 666: goto SCAN;
 18822  007900  D7D1               	goto	l14866
 18823                           
 18824                           ; BSR set to: 0
 18825                           
 18826                           ; BSR set to: 0
 18827  007902  D000               	goto	l14884
 18828  007904                     l14884:
 18829                           
 18830                           ; BSR set to: 0
 18831                           ;MISC.c: 667: }
 18832                           ;MISC.c: 668: }
 18833                           ;MISC.c: 669: if(*This == 0)
 18834  007904  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18835  007908  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18836  00790C  50DF               	movf	indf2,w,c
 18837  00790E  A4D8               	btfss	status,2,c
 18838  007910  D002               	goto	l14890
 18839                           
 18840                           ; BSR set to: 0
 18841                           ;MISC.c: 670: {
 18842                           ;MISC.c: 671: return 1;
 18843  007912  0E01               	movlw	1
 18844                           
 18845                           ; BSR set to: 0
 18846  007914  0012               	return	
 18847  007916                     l14890:
 18848                           
 18849                           ; BSR set to: 0
 18850                           ;MISC.c: 672: }
 18851                           ;MISC.c: 673: This++;
 18852  007916  0100               	movlb	0	; () banked
 18853  007918  4B7C               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18854  00791A  2B7D               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18855                           
 18856                           ; BSR set to: 0
 18857                           ;MISC.c: 674: if(*This == ' ')
 18858  00791C  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18859  007920  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18860  007924  0E20               	movlw	32
 18861  007926  18DE               	xorwf	postinc2,w,c
 18862  007928  A4D8               	btfss	status,2,c
 18863  00792A  D004               	goto	l14896
 18864                           
 18865                           ; BSR set to: 0
 18866                           ;MISC.c: 675: {
 18867                           ;MISC.c: 676: This++;
 18868  00792C  0100               	movlb	0	; () banked
 18869  00792E  4B7C               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18870  007930  2B7D               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18871                           
 18872                           ;MISC.c: 678: }
 18873  007932  D028               	goto	l14918
 18874  007934                     l14896:
 18875                           
 18876                           ; BSR set to: 0
 18877                           ;MISC.c: 679: else if (*This == ',')
 18878  007934  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18879  007938  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18880  00793C  0E2C               	movlw	44
 18881  00793E  18DE               	xorwf	postinc2,w,c
 18882  007940  A4D8               	btfss	status,2,c
 18883  007942  D003               	goto	l14904
 18884                           
 18885                           ; BSR set to: 0
 18886                           ;MISC.c: 680: {
 18887                           ;MISC.c: 681: return 2;
 18888  007944  0E02               	movlw	2
 18889                           
 18890                           ; BSR set to: 0
 18891  007946  0012               	return	
 18892                           
 18893                           ; BSR set to: 0
 18894                           ;MISC.c: 682: }
 18895  007948  D01D               	goto	l14918
 18896  00794A                     l14904:
 18897                           
 18898                           ; BSR set to: 0
 18899                           ;MISC.c: 683: else if(*This == 0)
 18900  00794A  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18901  00794E  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18902  007952  50DF               	movf	indf2,w,c
 18903  007954  A4D8               	btfss	status,2,c
 18904  007956  D016               	goto	l14918
 18905                           
 18906                           ; BSR set to: 0
 18907                           ;MISC.c: 684: {
 18908                           ;MISC.c: 685: return 3;
 18909  007958  0E03               	movlw	3
 18910                           
 18911                           ; BSR set to: 0
 18912  00795A  0012               	return	
 18913                           
 18914                           ; BSR set to: 0
 18915                           ;MISC.c: 686: }
 18916                           ;MISC.c: 687: while(*This != 0 && *This != ' ' && count < 10)
 18917                           
 18918                           ; BSR set to: 0
 18919                           
 18920                           ; BSR set to: 0
 18921  00795C  D013               	goto	l14918
 18922  00795E                     l14910:
 18923                           
 18924                           ; BSR set to: 0
 18925                           ;MISC.c: 688: {
 18926                           ;MISC.c: 689: *result = *This;
 18927  00795E  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18928  007962  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18929  007966  C07F  FFE1         	movff	GetStringAfterComma@result,fsr1l
 18930  00796A  C080  FFE2         	movff	GetStringAfterComma@result+1,fsr1h
 18931  00796E  CFDF FFE7          	movff	indf2,indf1
 18932                           
 18933                           ; BSR set to: 0
 18934                           ;MISC.c: 690: result++;
 18935  007972  0100               	movlb	0	; () banked
 18936  007974  4B7F               	infsnz	GetStringAfterComma@result& (0+255),f,b
 18937  007976  2B80               	incf	(GetStringAfterComma@result+1)& (0+255),f,b
 18938                           
 18939                           ; BSR set to: 0
 18940                           ;MISC.c: 691: This++;
 18941  007978  0100               	movlb	0	; () banked
 18942  00797A  4B7C               	infsnz	GetStringAfterComma@This& (0+255),f,b
 18943  00797C  2B7D               	incf	(GetStringAfterComma@This+1)& (0+255),f,b
 18944                           
 18945                           ; BSR set to: 0
 18946                           ;MISC.c: 692: count++;
 18947  00797E  0100               	movlb	0	; () banked
 18948  007980  2B83               	incf	GetStringAfterComma@count& (0+255),f,b
 18949  007982  D000               	goto	l14918
 18950  007984                     l14918:
 18951                           
 18952                           ; BSR set to: 0
 18953  007984  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18954  007988  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18955  00798C  50DF               	movf	indf2,w,c
 18956  00798E  B4D8               	btfsc	status,2,c
 18957  007990  D00D               	goto	l14924
 18958                           
 18959                           ; BSR set to: 0
 18960  007992  C07C  FFD9         	movff	GetStringAfterComma@This,fsr2l
 18961  007996  C07D  FFDA         	movff	GetStringAfterComma@This+1,fsr2h
 18962  00799A  0E20               	movlw	32
 18963  00799C  18DE               	xorwf	postinc2,w,c
 18964  00799E  B4D8               	btfsc	status,2,c
 18965  0079A0  D005               	goto	l14924
 18966                           
 18967                           ; BSR set to: 0
 18968  0079A2  0E09               	movlw	9
 18969  0079A4  0100               	movlb	0	; () banked
 18970  0079A6  6583               	cpfsgt	GetStringAfterComma@count& (0+255),b
 18971  0079A8  D7DA               	goto	l14910
 18972                           
 18973                           ; BSR set to: 0
 18974  0079AA  D000               	goto	l14924
 18975  0079AC                     l14924:
 18976                           
 18977                           ; BSR set to: 0
 18978                           ;MISC.c: 693: }
 18979                           ;MISC.c: 694: return 0;
 18980  0079AC  0E00               	movlw	0
 18981  0079AE  0012               	return	
 18982                           
 18983                           ; BSR set to: 0
 18984                           
 18985                           ; BSR set to: 0
 18986  0079B0  0012               	return		;funcret
 18987  0079B2                     __end_of_GetStringAfterComma:
 18988                           	opt stack 0
 18989                           tblptru	equ	0xFF8
 18990                           tblptrh	equ	0xFF7
 18991                           tblptrl	equ	0xFF6
 18992                           tablat	equ	0xFF5
 18993                           prodh	equ	0xFF4
 18994                           prodl	equ	0xFF3
 18995                           intcon	equ	0xFF2
 18996                           indf0	equ	0xFEF
 18997                           postinc0	equ	0xFEE
 18998                           fsr0h	equ	0xFEA
 18999                           fsr0l	equ	0xFE9
 19000                           wreg	equ	0xFE8
 19001                           indf1	equ	0xFE7
 19002                           postdec1	equ	0xFE5
 19003                           fsr1h	equ	0xFE2
 19004                           fsr1l	equ	0xFE1
 19005                           indf2	equ	0xFDF
 19006                           postinc2	equ	0xFDE
 19007                           postdec2	equ	0xFDD
 19008                           fsr2h	equ	0xFDA
 19009                           fsr2l	equ	0xFD9
 19010                           status	equ	0xFD8
 19011                           
 19012 ;; *************** function _GetNumber *****************
 19013 ;; Defined at:
 19014 ;;		line 457 in file "MISC.c"
 19015 ;; Parameters:    Size  Location     Type
 19016 ;;  This            2   40[BANK0 ] PTR unsigned char 
 19017 ;;		 -> main@BluetoothString(255), 
 19018 ;;  CommaNumber     1   42[BANK0 ] unsigned char 
 19019 ;;  result          2   43[BANK0 ] PTR unsigned long 
 19020 ;;		 -> UseBluetooth@temp(4), UseBluetooth@EnteredNEC(4), 
 19021 ;; Auto vars:     Size  Location     Type
 19022 ;;  temp            4   56[BANK0 ] long 
 19023 ;;  tempThis        1   55[BANK0 ] unsigned char 
 19024 ;;  i               1   54[BANK0 ] unsigned char 
 19025 ;;  Hex             1   53[BANK0 ] unsigned char 
 19026 ;;  count           1   52[BANK0 ] unsigned char 
 19027 ;;  negative        1   51[BANK0 ] unsigned char 
 19028 ;;  tempCommaNum    1   50[BANK0 ] unsigned char 
 19029 ;; Return value:  Size  Location     Type
 19030 ;;                  1    wreg      unsigned char 
 19031 ;; Registers used:
 19032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19033 ;; Tracked objects:
 19034 ;;		On entry : 0/0
 19035 ;;		On exit  : 0/0
 19036 ;;		Unchanged: 0/0
 19037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19038 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19039 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19040 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19041 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19042 ;;Total ram usage:       20 bytes
 19043 ;; Hardware stack levels used:    1
 19044 ;; Hardware stack levels required when called:    7
 19045 ;; This function calls:
 19046 ;;		_IsLetter
 19047 ;;		___lmul
 19048 ;;		_lowercaseChar
 19049 ;; This function is called by:
 19050 ;;		_UseBluetooth
 19051 ;; This function uses a non-reentrant model
 19052 ;;
 19053                           
 19054                           	psect	text30
 19055  004862                     __ptext30:
 19056                           	opt stack 0
 19057  004862                     _GetNumber:
 19058                           	opt stack 22
 19059                           
 19060                           ;MISC.c: 459: unsigned char i =0;
 19061                           
 19062                           ; BSR set to: 0
 19063                           ;incstack = 0
 19064  004862  0E00               	movlw	0
 19065  004864  0100               	movlb	0	; () banked
 19066  004866  6F96               	movwf	GetNumber@i& (0+255),b
 19067                           
 19068                           ;MISC.c: 460: long temp =0;
 19069  004868  0E00               	movlw	0
 19070  00486A  0100               	movlb	0	; () banked
 19071  00486C  6F98               	movwf	GetNumber@temp& (0+255),b
 19072  00486E  0E00               	movlw	0
 19073  004870  6F99               	movwf	(GetNumber@temp+1)& (0+255),b
 19074  004872  0E00               	movlw	0
 19075  004874  6F9A               	movwf	(GetNumber@temp+2)& (0+255),b
 19076  004876  0E00               	movlw	0
 19077  004878  6F9B               	movwf	(GetNumber@temp+3)& (0+255),b
 19078                           
 19079                           ;MISC.c: 461: unsigned char negative =0;
 19080  00487A  0E00               	movlw	0
 19081  00487C  0100               	movlb	0	; () banked
 19082  00487E  6F93               	movwf	GetNumber@negative& (0+255),b
 19083                           
 19084                           ;MISC.c: 462: unsigned char tempCommaNumber = 1;
 19085  004880  0E01               	movlw	1
 19086  004882  0100               	movlb	0	; () banked
 19087  004884  6F92               	movwf	GetNumber@tempCommaNumber& (0+255),b
 19088                           
 19089                           ;MISC.c: 463: unsigned char count =0;
 19090  004886  0E00               	movlw	0
 19091  004888  0100               	movlb	0	; () banked
 19092  00488A  6F94               	movwf	GetNumber@count& (0+255),b
 19093                           
 19094                           ;MISC.c: 464: unsigned char Hex = 0;
 19095  00488C  0E00               	movlw	0
 19096  00488E  0100               	movlb	0	; () banked
 19097  004890  6F95               	movwf	GetNumber@Hex& (0+255),b
 19098                           
 19099                           ;MISC.c: 465: unsigned char tempThis;
 19100                           ;MISC.c: 467: while(*This != 0)
 19101  004892  D038               	goto	l14648
 19102  004894                     l14628:
 19103                           
 19104                           ; BSR set to: 0
 19105                           ;MISC.c: 468: {
 19106                           ;MISC.c: 469: if(*This == '0')
 19107  004894  C088  FFD9         	movff	GetNumber@This,fsr2l
 19108  004898  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19109  00489C  0E30               	movlw	48
 19110  00489E  18DE               	xorwf	postinc2,w,c
 19111  0048A0  A4D8               	btfss	status,2,c
 19112  0048A2  D02A               	goto	l14644
 19113                           
 19114                           ; BSR set to: 0
 19115                           ;MISC.c: 470: {
 19116                           ;MISC.c: 471: count++;
 19117  0048A4  0100               	movlb	0	; () banked
 19118  0048A6  2B94               	incf	GetNumber@count& (0+255),f,b
 19119                           
 19120                           ;MISC.c: 472: This++;
 19121  0048A8  0100               	movlb	0	; () banked
 19122  0048AA  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19123  0048AC  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19124                           
 19125                           ; BSR set to: 0
 19126                           ;MISC.c: 473: if(*This == 'x' || *This == 'X')
 19127  0048AE  C088  FFD9         	movff	GetNumber@This,fsr2l
 19128  0048B2  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19129  0048B6  0E78               	movlw	120
 19130  0048B8  18DE               	xorwf	postinc2,w,c
 19131  0048BA  B4D8               	btfsc	status,2,c
 19132  0048BC  D008               	goto	l14636
 19133                           
 19134                           ; BSR set to: 0
 19135  0048BE  C088  FFD9         	movff	GetNumber@This,fsr2l
 19136  0048C2  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19137  0048C6  0E58               	movlw	88
 19138  0048C8  18DE               	xorwf	postinc2,w,c
 19139  0048CA  A4D8               	btfss	status,2,c
 19140  0048CC  D015               	goto	l14644
 19141  0048CE                     l14636:
 19142                           
 19143                           ; BSR set to: 0
 19144                           ;MISC.c: 474: {
 19145                           ;MISC.c: 475: This++;
 19146  0048CE  0100               	movlb	0	; () banked
 19147  0048D0  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19148  0048D2  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19149                           
 19150                           ; BSR set to: 0
 19151                           ;MISC.c: 476: if(*This >='0' && *This <='9')
 19152  0048D4  C088  FFD9         	movff	GetNumber@This,fsr2l
 19153  0048D8  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19154  0048DC  0E2F               	movlw	47
 19155  0048DE  64DF               	cpfsgt	indf2,c
 19156  0048E0  D00B               	goto	l14644
 19157                           
 19158                           ; BSR set to: 0
 19159  0048E2  C088  FFD9         	movff	GetNumber@This,fsr2l
 19160  0048E6  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19161  0048EA  0E3A               	movlw	58
 19162  0048EC  60DF               	cpfslt	indf2,c
 19163  0048EE  D004               	goto	l14644
 19164                           
 19165                           ; BSR set to: 0
 19166                           ;MISC.c: 477: {
 19167                           ;MISC.c: 478: Hex = 1;
 19168  0048F0  0E01               	movlw	1
 19169  0048F2  0100               	movlb	0	; () banked
 19170  0048F4  6F95               	movwf	GetNumber@Hex& (0+255),b
 19171                           
 19172                           ; BSR set to: 0
 19173                           
 19174                           ; BSR set to: 0
 19175  0048F6  D000               	goto	l14644
 19176  0048F8                     l14644:
 19177                           
 19178                           ; BSR set to: 0
 19179                           ;MISC.c: 479: }
 19180                           ;MISC.c: 480: }
 19181                           ;MISC.c: 481: }
 19182                           ;MISC.c: 482: count++;
 19183  0048F8  0100               	movlb	0	; () banked
 19184  0048FA  2B94               	incf	GetNumber@count& (0+255),f,b
 19185                           
 19186                           ; BSR set to: 0
 19187                           ;MISC.c: 483: This++;
 19188  0048FC  0100               	movlb	0	; () banked
 19189  0048FE  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19190  004900  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19191  004902  D000               	goto	l14648
 19192  004904                     l14648:
 19193                           
 19194                           ; BSR set to: 0
 19195  004904  C088  FFD9         	movff	GetNumber@This,fsr2l
 19196  004908  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19197  00490C  50DF               	movf	indf2,w,c
 19198  00490E  A4D8               	btfss	status,2,c
 19199  004910  D7C1               	goto	l14628
 19200                           
 19201                           ; BSR set to: 0
 19202                           ;MISC.c: 484: }
 19203                           ;MISC.c: 485: This-=count;
 19204                           
 19205                           ; BSR set to: 0
 19206  004912  0100               	movlb	0	; () banked
 19207  004914  5194               	movf	GetNumber@count& (0+255),w,b
 19208  004916  0D01               	mullw	1
 19209  004918  50F3               	movf	prodl,w,c
 19210  00491A  0100               	movlb	0	; () banked
 19211  00491C  5F88               	subwf	GetNumber@This& (0+255),f,b
 19212  00491E  50F4               	movf	prodh,w,c
 19213  004920  0100               	movlb	0	; () banked
 19214  004922  5B89               	subwfb	(GetNumber@This+1)& (0+255),f,b
 19215                           
 19216                           ; BSR set to: 0
 19217                           
 19218                           ;MISC.c: 487: SCAN:while(*This != '=' && *This != ',' && *This != 0)
 19219  004924  D001               	goto	l14654
 19220                           
 19221                           ; BSR set to: 0
 19222  004926  D03B               	goto	L15
 19223  004928                     l14654:
 19224                           
 19225                           ; BSR set to: 0
 19226  004928  C088  FFD9         	movff	GetNumber@This,fsr2l
 19227  00492C  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19228  004930  0E3D               	movlw	61
 19229  004932  18DE               	xorwf	postinc2,w,c
 19230  004934  B4D8               	btfsc	status,2,c
 19231  004936  D011               	goto	l14660
 19232                           
 19233                           ; BSR set to: 0
 19234  004938  C088  FFD9         	movff	GetNumber@This,fsr2l
 19235  00493C  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19236  004940  0E2C               	movlw	44
 19237  004942  18DE               	xorwf	postinc2,w,c
 19238  004944  B4D8               	btfsc	status,2,c
 19239  004946  D009               	goto	l14660
 19240                           
 19241                           ; BSR set to: 0
 19242  004948  C088  FFD9         	movff	GetNumber@This,fsr2l
 19243  00494C  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19244  004950  50DF               	movf	indf2,w,c
 19245  004952  B4D8               	btfsc	status,2,c
 19246  004954  D002               	goto	l14660
 19247  004956  D023               	goto	L15
 19248                           
 19249                           ; BSR set to: 0
 19250  004958  D000               	goto	l14660
 19251  00495A                     l14660:
 19252                           
 19253                           ; BSR set to: 0
 19254                           ;MISC.c: 491: }
 19255                           ;MISC.c: 492: if(*This == 0)
 19256  00495A  C088  FFD9         	movff	GetNumber@This,fsr2l
 19257  00495E  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19258  004962  50DF               	movf	indf2,w,c
 19259  004964  A4D8               	btfss	status,2,c
 19260  004966  D003               	goto	l14668
 19261                           
 19262                           ; BSR set to: 0
 19263                           ;MISC.c: 493: {
 19264                           ;MISC.c: 494: return 1;
 19265  004968  0E01               	movlw	1
 19266                           
 19267                           ; BSR set to: 0
 19268  00496A  0012               	return	
 19269                           
 19270                           ; BSR set to: 0
 19271                           ;MISC.c: 495: }
 19272  00496C  D01D               	goto	l14676
 19273  00496E                     l14668:
 19274                           
 19275                           ; BSR set to: 0
 19276                           ;MISC.c: 496: else if(*This != '=' || *This != ',')
 19277  00496E  C088  FFD9         	movff	GetNumber@This,fsr2l
 19278  004972  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19279  004976  0E3D               	movlw	61
 19280  004978  18DE               	xorwf	postinc2,w,c
 19281  00497A  A4D8               	btfss	status,2,c
 19282  00497C  D008               	goto	l14672
 19283                           
 19284                           ; BSR set to: 0
 19285  00497E  C088  FFD9         	movff	GetNumber@This,fsr2l
 19286  004982  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19287  004986  0E2C               	movlw	44
 19288  004988  18DE               	xorwf	postinc2,w,c
 19289  00498A  B4D8               	btfsc	status,2,c
 19290  00498C  D00D               	goto	l14676
 19291  00498E                     l14672:
 19292                           
 19293                           ; BSR set to: 0
 19294                           ;MISC.c: 497: {
 19295                           ;MISC.c: 498: if(tempCommaNumber < CommaNumber)
 19296  00498E  0100               	movlb	0	; () banked
 19297  004990  518A               	movf	GetNumber@CommaNumber& (0+255),w,b
 19298  004992  0100               	movlb	0	; () banked
 19299  004994  5D92               	subwf	GetNumber@tempCommaNumber& (0+255),w,b
 19300  004996  B0D8               	btfsc	status,0,c
 19301  004998  D007               	goto	l14676
 19302                           
 19303                           ; BSR set to: 0
 19304                           ;MISC.c: 499: {
 19305                           ;MISC.c: 500: tempCommaNumber++;
 19306  00499A  0100               	movlb	0	; () banked
 19307  00499C  2B92               	incf	GetNumber@tempCommaNumber& (0+255),f,b
 19308  00499E                     L15:
 19309                           
 19310                           ;MISC.c: 501: This++;
 19311  00499E  0100               	movlb	0	; () banked
 19312  0049A0  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19313  0049A2  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19314                           
 19315                           ;MISC.c: 502: goto SCAN;
 19316  0049A4  D7C1               	goto	l14654
 19317                           
 19318                           ; BSR set to: 0
 19319                           
 19320                           ; BSR set to: 0
 19321  0049A6  D000               	goto	l14676
 19322  0049A8                     l14676:
 19323                           
 19324                           ; BSR set to: 0
 19325                           ;MISC.c: 503: }
 19326                           ;MISC.c: 504: }
 19327                           ;MISC.c: 505: if(*This == 0)
 19328  0049A8  C088  FFD9         	movff	GetNumber@This,fsr2l
 19329  0049AC  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19330  0049B0  50DF               	movf	indf2,w,c
 19331  0049B2  A4D8               	btfss	status,2,c
 19332  0049B4  D002               	goto	l14682
 19333                           
 19334                           ; BSR set to: 0
 19335                           ;MISC.c: 506: {
 19336                           ;MISC.c: 507: return 1;
 19337  0049B6  0E01               	movlw	1
 19338                           
 19339                           ; BSR set to: 0
 19340  0049B8  0012               	return	
 19341  0049BA                     l14682:
 19342                           
 19343                           ; BSR set to: 0
 19344                           ;MISC.c: 508: }
 19345                           ;MISC.c: 509: This++;
 19346  0049BA  0100               	movlb	0	; () banked
 19347  0049BC  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19348  0049BE  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19349                           
 19350                           ; BSR set to: 0
 19351                           ;MISC.c: 510: if(*This == ' ')
 19352  0049C0  C088  FFD9         	movff	GetNumber@This,fsr2l
 19353  0049C4  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19354  0049C8  0E20               	movlw	32
 19355  0049CA  18DE               	xorwf	postinc2,w,c
 19356  0049CC  B4D8               	btfsc	status,2,c
 19357  0049CE  D01E               	goto	l14702
 19358                           
 19359                           ; BSR set to: 0
 19360                           ;MISC.c: 515: else if (*This == '=' || *This == ',')
 19361                           
 19362                           ; BSR set to: 0
 19363                           
 19364                           ;MISC.c: 514: }
 19365                           
 19366                           ; BSR set to: 0
 19367                           ;MISC.c: 511: {
 19368                           ;MISC.c: 512: This++;
 19369  0049D0  C088  FFD9         	movff	GetNumber@This,fsr2l
 19370  0049D4  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19371  0049D8  0E3D               	movlw	61
 19372  0049DA  18DE               	xorwf	postinc2,w,c
 19373  0049DC  B4D8               	btfsc	status,2,c
 19374  0049DE  D008               	goto	l14692
 19375                           
 19376                           ; BSR set to: 0
 19377  0049E0  C088  FFD9         	movff	GetNumber@This,fsr2l
 19378  0049E4  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19379  0049E8  0E2C               	movlw	44
 19380  0049EA  18DE               	xorwf	postinc2,w,c
 19381  0049EC  A4D8               	btfss	status,2,c
 19382  0049EE  D003               	goto	l14698
 19383  0049F0                     l14692:
 19384                           
 19385                           ; BSR set to: 0
 19386                           ;MISC.c: 516: {
 19387                           ;MISC.c: 517: return 2;
 19388  0049F0  0E02               	movlw	2
 19389                           
 19390                           ; BSR set to: 0
 19391  0049F2  0012               	return	
 19392                           
 19393                           ; BSR set to: 0
 19394                           ;MISC.c: 518: }
 19395  0049F4  D019               	goto	l14710
 19396  0049F6                     l14698:
 19397                           
 19398                           ; BSR set to: 0
 19399                           ;MISC.c: 519: else if(*This == '-')
 19400  0049F6  C088  FFD9         	movff	GetNumber@This,fsr2l
 19401  0049FA  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19402  0049FE  0E2D               	movlw	45
 19403  004A00  18DE               	xorwf	postinc2,w,c
 19404  004A02  A4D8               	btfss	status,2,c
 19405  004A04  D007               	goto	l14704
 19406                           
 19407                           ; BSR set to: 0
 19408                           ;MISC.c: 520: {
 19409                           ;MISC.c: 521: negative = 1;
 19410  004A06  0E01               	movlw	1
 19411  004A08  0100               	movlb	0	; () banked
 19412  004A0A  6F93               	movwf	GetNumber@negative& (0+255),b
 19413  004A0C                     l14702:
 19414                           
 19415                           ; BSR set to: 0
 19416                           ;MISC.c: 522: This++;
 19417  004A0C  0100               	movlb	0	; () banked
 19418  004A0E  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19419  004A10  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19420                           
 19421                           ;MISC.c: 524: }
 19422  004A12  D00A               	goto	l14710
 19423  004A14                     l14704:
 19424                           
 19425                           ; BSR set to: 0
 19426                           ;MISC.c: 525: else if(*This == 0)
 19427  004A14  C088  FFD9         	movff	GetNumber@This,fsr2l
 19428  004A18  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19429  004A1C  50DF               	movf	indf2,w,c
 19430  004A1E  A4D8               	btfss	status,2,c
 19431  004A20  D003               	goto	l14710
 19432                           
 19433                           ; BSR set to: 0
 19434                           ;MISC.c: 526: {
 19435                           ;MISC.c: 527: return 3;
 19436  004A22  0E03               	movlw	3
 19437                           
 19438                           ; BSR set to: 0
 19439  004A24  0012               	return	
 19440                           
 19441                           ; BSR set to: 0
 19442                           
 19443                           ; BSR set to: 0
 19444                           
 19445                           ; BSR set to: 0
 19446  004A26  D000               	goto	l14710
 19447  004A28                     l14710:
 19448                           
 19449                           ; BSR set to: 0
 19450                           ;MISC.c: 528: }
 19451                           ;MISC.c: 529: if(Hex)
 19452  004A28  0100               	movlb	0	; () banked
 19453  004A2A  5195               	movf	GetNumber@Hex& (0+255),w,b
 19454  004A2C  0100               	movlb	0	; () banked
 19455  004A2E  B4D8               	btfsc	status,2,c
 19456  004A30  D11C               	goto	l14774
 19457                           
 19458                           ; BSR set to: 0
 19459                           ;MISC.c: 530: {
 19460                           ;MISC.c: 531: negative = 0;
 19461  004A32  0E00               	movlw	0
 19462  004A34  0100               	movlb	0	; () banked
 19463  004A36  6F93               	movwf	GetNumber@negative& (0+255),b
 19464                           
 19465                           ;MISC.c: 532: while(*This != 'x' && *This != 'X')
 19466  004A38  D004               	goto	l14716
 19467  004A3A                     l14714:
 19468                           
 19469                           ; BSR set to: 0
 19470                           ;MISC.c: 533: {
 19471                           ;MISC.c: 535: This++;
 19472  004A3A  0100               	movlb	0	; () banked
 19473  004A3C  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19474  004A3E  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19475  004A40  D000               	goto	l14716
 19476  004A42                     l14716:
 19477                           
 19478                           ; BSR set to: 0
 19479  004A42  C088  FFD9         	movff	GetNumber@This,fsr2l
 19480  004A46  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19481  004A4A  0E78               	movlw	120
 19482  004A4C  18DE               	xorwf	postinc2,w,c
 19483  004A4E  B4D8               	btfsc	status,2,c
 19484  004A50  D108               	goto	l14772
 19485                           
 19486                           ; BSR set to: 0
 19487  004A52  C088  FFD9         	movff	GetNumber@This,fsr2l
 19488  004A56  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19489  004A5A  0E58               	movlw	88
 19490  004A5C  18DE               	xorwf	postinc2,w,c
 19491  004A5E  B4D8               	btfsc	status,2,c
 19492  004A60  D100               	goto	l14772
 19493  004A62  D7EB               	goto	l14714
 19494                           
 19495                           ; BSR set to: 0
 19496  004A64  D0FE               	goto	l14772
 19497                           
 19498                           ; BSR set to: 0
 19499  004A66  D0FD               	goto	l14772
 19500                           
 19501                           ; BSR set to: 0
 19502                           ;MISC.c: 538: }
 19503                           ;MISC.c: 539: while(*This != 0 && *This != ' ' && *This != ',' && *This != '=')
 19504                           
 19505                           ; BSR set to: 0
 19506                           ;MISC.c: 536: }
 19507                           ;MISC.c: 537: This++;
 19508  004A68  D100               	goto	l14774
 19509  004A6A                     l14722:
 19510                           
 19511                           ; BSR set to: 0
 19512                           ;MISC.c: 540: {
 19513                           ;MISC.c: 541: if(!Hex)
 19514  004A6A  0100               	movlb	0	; () banked
 19515  004A6C  5195               	movf	GetNumber@Hex& (0+255),w,b
 19516  004A6E  0100               	movlb	0	; () banked
 19517  004A70  A4D8               	btfss	status,2,c
 19518  004A72  D05B               	goto	l14740
 19519                           
 19520                           ; BSR set to: 0
 19521                           ;MISC.c: 542: {
 19522                           ;MISC.c: 543: if(*This >=48 && *This <= 57)
 19523  004A74  C088  FFD9         	movff	GetNumber@This,fsr2l
 19524  004A78  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19525  004A7C  0E2F               	movlw	47
 19526  004A7E  64DF               	cpfsgt	indf2,c
 19527  004A80  D0F0               	goto	l14772
 19528                           
 19529                           ; BSR set to: 0
 19530  004A82  C088  FFD9         	movff	GetNumber@This,fsr2l
 19531  004A86  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19532  004A8A  0E3A               	movlw	58
 19533  004A8C  60DF               	cpfslt	indf2,c
 19534  004A8E  D0E9               	goto	l14772
 19535                           
 19536                           ; BSR set to: 0
 19537                           ;MISC.c: 544: {
 19538                           ;MISC.c: 545: temp = temp * 10;
 19539  004A90  C098  F07C         	movff	GetNumber@temp,___lmul@multiplier
 19540  004A94  C099  F07D         	movff	GetNumber@temp+1,___lmul@multiplier+1
 19541  004A98  C09A  F07E         	movff	GetNumber@temp+2,___lmul@multiplier+2
 19542  004A9C  C09B  F07F         	movff	GetNumber@temp+3,___lmul@multiplier+3
 19543  004AA0  0E0A               	movlw	10
 19544  004AA2  0100               	movlb	0	; () banked
 19545  004AA4  6F80               	movwf	___lmul@multiplicand& (0+255),b
 19546  004AA6  0E00               	movlw	0
 19547  004AA8  6F81               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19548  004AAA  0E00               	movlw	0
 19549  004AAC  6F82               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19550  004AAE  0E00               	movlw	0
 19551  004AB0  6F83               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19552  004AB2  ECEB  F044         	call	___lmul	;wreg free
 19553  004AB6  C07C  F098         	movff	?___lmul,GetNumber@temp
 19554  004ABA  C07D  F099         	movff	?___lmul+1,GetNumber@temp+1
 19555  004ABE  C07E  F09A         	movff	?___lmul+2,GetNumber@temp+2
 19556  004AC2  C07F  F09B         	movff	?___lmul+3,GetNumber@temp+3
 19557                           
 19558                           ;MISC.c: 546: temp += *This - 48;
 19559  004AC6  C088  FFD9         	movff	GetNumber@This,fsr2l
 19560  004ACA  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19561  004ACE  50DF               	movf	indf2,w,c
 19562  004AD0  0100               	movlb	0	; () banked
 19563  004AD2  6F8D               	movwf	??_GetNumber& (0+255),b
 19564  004AD4  0ED0               	movlw	208
 19565  004AD6  0100               	movlb	0	; () banked
 19566  004AD8  258D               	addwf	??_GetNumber& (0+255),w,b
 19567  004ADA  0100               	movlb	0	; () banked
 19568  004ADC  6F8E               	movwf	(??_GetNumber+1)& (0+255),b
 19569  004ADE  0100               	movlb	0	; () banked
 19570  004AE0  6B8F               	clrf	(??_GetNumber+2)& (0+255),b
 19571  004AE2  0EFF               	movlw	255
 19572  004AE4  238F               	addwfc	(??_GetNumber+2)& (0+255),f,b
 19573  004AE6  0100               	movlb	0	; () banked
 19574  004AE8  6B90               	clrf	(??_GetNumber+3)& (0+255),b
 19575  004AEA  0100               	movlb	0	; () banked
 19576  004AEC  BF8F               	btfsc	(??_GetNumber+2)& (0+255),7,b
 19577  004AEE  0790               	decf	(??_GetNumber+3)& (0+255),f,b
 19578  004AF0  0100               	movlb	0	; () banked
 19579  004AF2  5190               	movf	(??_GetNumber+3)& (0+255),w,b
 19580  004AF4  0100               	movlb	0	; () banked
 19581  004AF6  6F91               	movwf	(??_GetNumber+4)& (0+255),b
 19582  004AF8  0100               	movlb	0	; () banked
 19583  004AFA  518E               	movf	(??_GetNumber+1)& (0+255),w,b
 19584  004AFC  0100               	movlb	0	; () banked
 19585  004AFE  2798               	addwf	GetNumber@temp& (0+255),f,b
 19586  004B00  0100               	movlb	0	; () banked
 19587  004B02  518F               	movf	(??_GetNumber+2)& (0+255),w,b
 19588  004B04  0100               	movlb	0	; () banked
 19589  004B06  2399               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19590  004B08  0100               	movlb	0	; () banked
 19591  004B0A  5190               	movf	(??_GetNumber+3)& (0+255),w,b
 19592  004B0C  0100               	movlb	0	; () banked
 19593  004B0E  239A               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19594  004B10  0100               	movlb	0	; () banked
 19595  004B12  5191               	movf	(??_GetNumber+4)& (0+255),w,b
 19596  004B14  0100               	movlb	0	; () banked
 19597  004B16  239B               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19598                           
 19599                           ; BSR set to: 0
 19600                           ;MISC.c: 547: i++;
 19601  004B18  0100               	movlb	0	; () banked
 19602  004B1A  2B96               	incf	GetNumber@i& (0+255),f,b
 19603  004B1C                     l14734:
 19604                           
 19605                           ; BSR set to: 0
 19606                           ;MISC.c: 548: if(i>32)
 19607  004B1C  0E20               	movlw	32
 19608  004B1E  0100               	movlb	0	; () banked
 19609  004B20  6596               	cpfsgt	GetNumber@i& (0+255),b
 19610  004B22  D09F               	goto	l14772
 19611                           
 19612                           ; BSR set to: 0
 19613                           ;MISC.c: 549: {
 19614                           ;MISC.c: 550: return 4;
 19615  004B24  0E04               	movlw	4
 19616                           
 19617                           ; BSR set to: 0
 19618  004B26  0012               	return	
 19619                           
 19620                           ; BSR set to: 0
 19621                           ;MISC.c: 551: }
 19622                           ;MISC.c: 552: }
 19623                           ;MISC.c: 553: }
 19624                           
 19625                           ; BSR set to: 0
 19626  004B28  D09C               	goto	l14772
 19627  004B2A                     l14740:
 19628                           
 19629                           ; BSR set to: 0
 19630                           ;MISC.c: 554: else
 19631                           ;MISC.c: 555: {
 19632                           ;MISC.c: 556: if((*This >=48 && *This <= 57) || (*This >=65 && *This <= 70) || (*This >=
      +                           97 && *This <= 102))
 19633  004B2A  C088  FFD9         	movff	GetNumber@This,fsr2l
 19634  004B2E  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19635  004B32  0E2F               	movlw	47
 19636  004B34  64DF               	cpfsgt	indf2,c
 19637  004B36  D008               	goto	l14744
 19638                           
 19639                           ; BSR set to: 0
 19640  004B38  C088  FFD9         	movff	GetNumber@This,fsr2l
 19641  004B3C  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19642  004B40  0E39               	movlw	57
 19643  004B42  64DF               	cpfsgt	indf2,c
 19644  004B44  D01F               	goto	l14752
 19645  004B46  D000               	goto	l14744
 19646  004B48                     l14744:
 19647                           
 19648                           ; BSR set to: 0
 19649  004B48  C088  FFD9         	movff	GetNumber@This,fsr2l
 19650  004B4C  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19651  004B50  0E40               	movlw	64
 19652  004B52  64DF               	cpfsgt	indf2,c
 19653  004B54  D008               	goto	l14748
 19654                           
 19655                           ; BSR set to: 0
 19656  004B56  C088  FFD9         	movff	GetNumber@This,fsr2l
 19657  004B5A  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19658  004B5E  0E46               	movlw	70
 19659  004B60  64DF               	cpfsgt	indf2,c
 19660  004B62  D010               	goto	l14752
 19661  004B64  D000               	goto	l14748
 19662  004B66                     l14748:
 19663                           
 19664                           ; BSR set to: 0
 19665  004B66  C088  FFD9         	movff	GetNumber@This,fsr2l
 19666  004B6A  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19667  004B6E  0E60               	movlw	96
 19668  004B70  64DF               	cpfsgt	indf2,c
 19669  004B72  D077               	goto	l14772
 19670                           
 19671                           ; BSR set to: 0
 19672  004B74  C088  FFD9         	movff	GetNumber@This,fsr2l
 19673  004B78  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19674  004B7C  0E67               	movlw	103
 19675  004B7E  60DF               	cpfslt	indf2,c
 19676  004B80  D070               	goto	l14772
 19677  004B82  D000               	goto	l14752
 19678  004B84                     l14752:
 19679                           
 19680                           ; BSR set to: 0
 19681                           ;MISC.c: 557: {
 19682                           ;MISC.c: 558: temp <<= 4;
 19683  004B84  0100               	movlb	0	; () banked
 19684  004B86  0E04               	movlw	4
 19685  004B88                     u18305:
 19686  004B88  90D8               	bcf	status,0,c
 19687  004B8A  3798               	rlcf	GetNumber@temp& (0+255),f,b
 19688  004B8C  3799               	rlcf	(GetNumber@temp+1)& (0+255),f,b
 19689  004B8E  379A               	rlcf	(GetNumber@temp+2)& (0+255),f,b
 19690  004B90  379B               	rlcf	(GetNumber@temp+3)& (0+255),f,b
 19691  004B92  2EE8               	decfsz	wreg,f,c
 19692  004B94  D7F9               	goto	u18305
 19693                           
 19694                           ; BSR set to: 0
 19695                           ;MISC.c: 559: tempThis = *This;
 19696  004B96  C088  FFD9         	movff	GetNumber@This,fsr2l
 19697  004B9A  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19698  004B9E  50DF               	movf	indf2,w,c
 19699  004BA0  0100               	movlb	0	; () banked
 19700  004BA2  6F97               	movwf	GetNumber@tempThis& (0+255),b
 19701                           
 19702                           ; BSR set to: 0
 19703                           ;MISC.c: 560: if(IsLetter(tempThis))
 19704  004BA4  0100               	movlb	0	; () banked
 19705  004BA6  5197               	movf	GetNumber@tempThis& (0+255),w,b
 19706  004BA8  ECD4  F049         	call	_IsLetter
 19707  004BAC  0900               	iorlw	0
 19708  004BAE  B4D8               	btfsc	status,2,c
 19709  004BB0  D029               	goto	l14762
 19710                           
 19711                           ;MISC.c: 561: {
 19712                           ;MISC.c: 562: lowercaseChar(&tempThis);
 19713  004BB2  0E97               	movlw	low GetNumber@tempThis
 19714  004BB4  0100               	movlb	0	; () banked
 19715  004BB6  6F7C               	movwf	lowercaseChar@Input& (0+255),b
 19716  004BB8  0E00               	movlw	high GetNumber@tempThis
 19717  004BBA  0100               	movlb	0	; () banked
 19718  004BBC  6F7D               	movwf	(lowercaseChar@Input+1)& (0+255),b
 19719  004BBE  EC95  F049         	call	_lowercaseChar	;wreg free
 19720                           
 19721                           ;MISC.c: 563: temp += (tempThis - 87);
 19722  004BC2  0EA9               	movlw	169
 19723  004BC4  0100               	movlb	0	; () banked
 19724  004BC6  2597               	addwf	GetNumber@tempThis& (0+255),w,b
 19725  004BC8  0100               	movlb	0	; () banked
 19726  004BCA  6F8D               	movwf	??_GetNumber& (0+255),b
 19727  004BCC  0100               	movlb	0	; () banked
 19728  004BCE  6B8E               	clrf	(??_GetNumber+1)& (0+255),b
 19729  004BD0  0EFF               	movlw	255
 19730  004BD2  238E               	addwfc	(??_GetNumber+1)& (0+255),f,b
 19731  004BD4  0100               	movlb	0	; () banked
 19732  004BD6  6B8F               	clrf	(??_GetNumber+2)& (0+255),b
 19733  004BD8  0100               	movlb	0	; () banked
 19734  004BDA  BF8E               	btfsc	(??_GetNumber+1)& (0+255),7,b
 19735  004BDC  078F               	decf	(??_GetNumber+2)& (0+255),f,b
 19736  004BDE  0100               	movlb	0	; () banked
 19737  004BE0  518F               	movf	(??_GetNumber+2)& (0+255),w,b
 19738  004BE2  0100               	movlb	0	; () banked
 19739  004BE4  6F90               	movwf	(??_GetNumber+3)& (0+255),b
 19740  004BE6  0100               	movlb	0	; () banked
 19741  004BE8  518D               	movf	??_GetNumber& (0+255),w,b
 19742  004BEA  0100               	movlb	0	; () banked
 19743  004BEC  2798               	addwf	GetNumber@temp& (0+255),f,b
 19744  004BEE  0100               	movlb	0	; () banked
 19745  004BF0  518E               	movf	(??_GetNumber+1)& (0+255),w,b
 19746  004BF2  0100               	movlb	0	; () banked
 19747  004BF4  2399               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19748  004BF6  0100               	movlb	0	; () banked
 19749  004BF8  518F               	movf	(??_GetNumber+2)& (0+255),w,b
 19750  004BFA  0100               	movlb	0	; () banked
 19751  004BFC  239A               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19752  004BFE  0100               	movlb	0	; () banked
 19753  004C00  5190               	movf	(??_GetNumber+3)& (0+255),w,b
 19754  004C02  D027               	goto	L16
 19755  004C04                     l14762:
 19756                           
 19757                           ;MISC.c: 565: else
 19758                           ;MISC.c: 566: {
 19759                           ;MISC.c: 567: temp += (*This - 48);
 19760  004C04  C088  FFD9         	movff	GetNumber@This,fsr2l
 19761  004C08  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19762  004C0C  50DF               	movf	indf2,w,c
 19763  004C0E  0100               	movlb	0	; () banked
 19764  004C10  6F8D               	movwf	??_GetNumber& (0+255),b
 19765  004C12  0ED0               	movlw	208
 19766  004C14  0100               	movlb	0	; () banked
 19767  004C16  258D               	addwf	??_GetNumber& (0+255),w,b
 19768  004C18  0100               	movlb	0	; () banked
 19769  004C1A  6F8E               	movwf	(??_GetNumber+1)& (0+255),b
 19770  004C1C  0100               	movlb	0	; () banked
 19771  004C1E  6B8F               	clrf	(??_GetNumber+2)& (0+255),b
 19772  004C20  0EFF               	movlw	255
 19773  004C22  238F               	addwfc	(??_GetNumber+2)& (0+255),f,b
 19774  004C24  0100               	movlb	0	; () banked
 19775  004C26  6B90               	clrf	(??_GetNumber+3)& (0+255),b
 19776  004C28  0100               	movlb	0	; () banked
 19777  004C2A  BF8F               	btfsc	(??_GetNumber+2)& (0+255),7,b
 19778  004C2C  0790               	decf	(??_GetNumber+3)& (0+255),f,b
 19779  004C2E  0100               	movlb	0	; () banked
 19780  004C30  5190               	movf	(??_GetNumber+3)& (0+255),w,b
 19781  004C32  0100               	movlb	0	; () banked
 19782  004C34  6F91               	movwf	(??_GetNumber+4)& (0+255),b
 19783  004C36  0100               	movlb	0	; () banked
 19784  004C38  518E               	movf	(??_GetNumber+1)& (0+255),w,b
 19785  004C3A  0100               	movlb	0	; () banked
 19786  004C3C  2798               	addwf	GetNumber@temp& (0+255),f,b
 19787  004C3E  0100               	movlb	0	; () banked
 19788  004C40  518F               	movf	(??_GetNumber+2)& (0+255),w,b
 19789  004C42  0100               	movlb	0	; () banked
 19790  004C44  2399               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19791  004C46  0100               	movlb	0	; () banked
 19792  004C48  5190               	movf	(??_GetNumber+3)& (0+255),w,b
 19793  004C4A  0100               	movlb	0	; () banked
 19794  004C4C  239A               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19795  004C4E  0100               	movlb	0	; () banked
 19796  004C50  5191               	movf	(??_GetNumber+4)& (0+255),w,b
 19797  004C52                     L16:
 19798  004C52  0100               	movlb	0	; () banked
 19799  004C54  239B               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19800  004C56  D000               	goto	l14764
 19801  004C58                     l14764:
 19802                           
 19803                           ; BSR set to: 0
 19804                           ;MISC.c: 568: }
 19805                           ;MISC.c: 569: i++;
 19806  004C58  0100               	movlb	0	; () banked
 19807  004C5A  2B96               	incf	GetNumber@i& (0+255),f,b
 19808  004C5C  D75F               	goto	l14734
 19809                           
 19810                           ; BSR set to: 0
 19811                           
 19812                           ; BSR set to: 0
 19813                           ;MISC.c: 571: {
 19814                           ;MISC.c: 572: return 4;
 19815                           
 19816                           ; BSR set to: 0
 19817                           ;MISC.c: 570: if(i>32)
 19818  004C5E  0012               	return	
 19819                           
 19820                           ; BSR set to: 0
 19821                           
 19822                           ; BSR set to: 0
 19823  004C60  D000               	goto	l14772
 19824  004C62                     l14772:
 19825                           
 19826                           ; BSR set to: 0
 19827                           ;MISC.c: 573: }
 19828                           ;MISC.c: 574: }
 19829                           ;MISC.c: 575: }
 19830                           ;MISC.c: 576: This++;
 19831  004C62  0100               	movlb	0	; () banked
 19832  004C64  4B88               	infsnz	GetNumber@This& (0+255),f,b
 19833  004C66  2B89               	incf	(GetNumber@This+1)& (0+255),f,b
 19834  004C68  D000               	goto	l14774
 19835  004C6A                     l14774:
 19836                           
 19837                           ; BSR set to: 0
 19838  004C6A  C088  FFD9         	movff	GetNumber@This,fsr2l
 19839  004C6E  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19840  004C72  50DF               	movf	indf2,w,c
 19841  004C74  B4D8               	btfsc	status,2,c
 19842  004C76  D01A               	goto	l14782
 19843                           
 19844                           ; BSR set to: 0
 19845  004C78  C088  FFD9         	movff	GetNumber@This,fsr2l
 19846  004C7C  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19847  004C80  0E20               	movlw	32
 19848  004C82  18DE               	xorwf	postinc2,w,c
 19849  004C84  B4D8               	btfsc	status,2,c
 19850  004C86  D012               	goto	l14782
 19851                           
 19852                           ; BSR set to: 0
 19853  004C88  C088  FFD9         	movff	GetNumber@This,fsr2l
 19854  004C8C  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19855  004C90  0E2C               	movlw	44
 19856  004C92  18DE               	xorwf	postinc2,w,c
 19857  004C94  B4D8               	btfsc	status,2,c
 19858  004C96  D00A               	goto	l14782
 19859                           
 19860                           ; BSR set to: 0
 19861  004C98  C088  FFD9         	movff	GetNumber@This,fsr2l
 19862  004C9C  C089  FFDA         	movff	GetNumber@This+1,fsr2h
 19863  004CA0  0E3D               	movlw	61
 19864  004CA2  18DE               	xorwf	postinc2,w,c
 19865  004CA4  B4D8               	btfsc	status,2,c
 19866  004CA6  D002               	goto	l14782
 19867  004CA8  D6E0               	goto	l14722
 19868                           
 19869                           ; BSR set to: 0
 19870  004CAA  D000               	goto	l14782
 19871  004CAC                     l14782:
 19872                           
 19873                           ; BSR set to: 0
 19874                           ;MISC.c: 577: }
 19875                           ;MISC.c: 578: if(negative)
 19876  004CAC  0100               	movlb	0	; () banked
 19877  004CAE  5193               	movf	GetNumber@negative& (0+255),w,b
 19878  004CB0  0100               	movlb	0	; () banked
 19879  004CB2  B4D8               	btfsc	status,2,c
 19880  004CB4  D00A               	goto	l14786
 19881                           
 19882                           ; BSR set to: 0
 19883                           ;MISC.c: 579: {
 19884                           ;MISC.c: 580: temp = (temp * -1);
 19885  004CB6  0100               	movlb	0	; () banked
 19886  004CB8  1F9B               	comf	(GetNumber@temp+3)& (0+255),f,b
 19887  004CBA  1F9A               	comf	(GetNumber@temp+2)& (0+255),f,b
 19888  004CBC  1F99               	comf	(GetNumber@temp+1)& (0+255),f,b
 19889  004CBE  6D98               	negf	GetNumber@temp& (0+255),b
 19890  004CC0  0E00               	movlw	0
 19891  004CC2  2399               	addwfc	(GetNumber@temp+1)& (0+255),f,b
 19892  004CC4  239A               	addwfc	(GetNumber@temp+2)& (0+255),f,b
 19893  004CC6  239B               	addwfc	(GetNumber@temp+3)& (0+255),f,b
 19894  004CC8  D000               	goto	l14786
 19895  004CCA                     l14786:
 19896                           
 19897                           ; BSR set to: 0
 19898                           ;MISC.c: 581: }
 19899                           ;MISC.c: 582: *result = temp;
 19900  004CCA  C08B  FFD9         	movff	GetNumber@result,fsr2l
 19901  004CCE  C08C  FFDA         	movff	GetNumber@result+1,fsr2h
 19902  004CD2  C098  FFDE         	movff	GetNumber@temp,postinc2
 19903  004CD6  C099  FFDE         	movff	GetNumber@temp+1,postinc2
 19904  004CDA  C09A  FFDE         	movff	GetNumber@temp+2,postinc2
 19905  004CDE  C09B  FFDE         	movff	GetNumber@temp+3,postinc2
 19906                           
 19907                           ; BSR set to: 0
 19908                           ;MISC.c: 583: return 0;
 19909  004CE2  0E00               	movlw	0
 19910  004CE4  0012               	return	
 19911                           
 19912                           ; BSR set to: 0
 19913                           
 19914                           ; BSR set to: 0
 19915  004CE6  0012               	return		;funcret
 19916  004CE8                     __end_of_GetNumber:
 19917                           	opt stack 0
 19918                           tblptru	equ	0xFF8
 19919                           tblptrh	equ	0xFF7
 19920                           tblptrl	equ	0xFF6
 19921                           tablat	equ	0xFF5
 19922                           prodh	equ	0xFF4
 19923                           prodl	equ	0xFF3
 19924                           intcon	equ	0xFF2
 19925                           indf0	equ	0xFEF
 19926                           postinc0	equ	0xFEE
 19927                           fsr0h	equ	0xFEA
 19928                           fsr0l	equ	0xFE9
 19929                           wreg	equ	0xFE8
 19930                           indf1	equ	0xFE7
 19931                           postdec1	equ	0xFE5
 19932                           fsr1h	equ	0xFE2
 19933                           fsr1l	equ	0xFE1
 19934                           indf2	equ	0xFDF
 19935                           postinc2	equ	0xFDE
 19936                           postdec2	equ	0xFDD
 19937                           fsr2h	equ	0xFDA
 19938                           fsr2l	equ	0xFD9
 19939                           status	equ	0xFD8
 19940                           
 19941 ;; *************** function _lowercaseChar *****************
 19942 ;; Defined at:
 19943 ;;		line 349 in file "MISC.c"
 19944 ;; Parameters:    Size  Location     Type
 19945 ;;  Input           2   28[BANK0 ] PTR unsigned char 
 19946 ;;		 -> GetNumber@tempThis(1), StringContainsCaseInsensitive@tempThat(1), StringContainsCaseInsensitive@tempThis(1), Str
      +ingMatchCaseInsensitive@tempThat(1), 
 19947 ;;		 -> StringMatchCaseInsensitive@tempThis(1), 
 19948 ;; Auto vars:     Size  Location     Type
 19949 ;;		None
 19950 ;; Return value:  Size  Location     Type
 19951 ;;		None               void
 19952 ;; Registers used:
 19953 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19954 ;; Tracked objects:
 19955 ;;		On entry : 0/0
 19956 ;;		On exit  : 0/0
 19957 ;;		Unchanged: 0/0
 19958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19959 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19961 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19962 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19963 ;;Total ram usage:        3 bytes
 19964 ;; Hardware stack levels used:    1
 19965 ;; Hardware stack levels required when called:    6
 19966 ;; This function calls:
 19967 ;;		Nothing
 19968 ;; This function is called by:
 19969 ;;		_StringMatchCaseInsensitive
 19970 ;;		_StringContainsCaseInsensitive
 19971 ;;		_GetNumber
 19972 ;; This function uses a non-reentrant model
 19973 ;;
 19974                           
 19975                           	psect	text31
 19976  00932A                     __ptext31:
 19977                           	opt stack 0
 19978  00932A                     _lowercaseChar:
 19979                           	opt stack 22
 19980                           
 19981                           ;MISC.c: 351: if((*Input >= 65) && (*Input <= 90 ))
 19982                           
 19983                           ; BSR set to: 0
 19984                           ;incstack = 0
 19985  00932A  C07C  FFD9         	movff	lowercaseChar@Input,fsr2l
 19986  00932E  C07D  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 19987  009332  0E40               	movlw	64
 19988  009334  64DF               	cpfsgt	indf2,c
 19989  009336  0012               	return	
 19990  009338  C07C  FFD9         	movff	lowercaseChar@Input,fsr2l
 19991  00933C  C07D  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 19992  009340  0E5B               	movlw	91
 19993  009342  60DF               	cpfslt	indf2,c
 19994  009344  0012               	return	
 19995                           
 19996                           ;MISC.c: 352: {
 19997                           ;MISC.c: 353: *Input += 32;
 19998  009346  C07C  FFD9         	movff	lowercaseChar@Input,fsr2l
 19999  00934A  C07D  FFDA         	movff	lowercaseChar@Input+1,fsr2h
 20000  00934E  0E20               	movlw	32
 20001  009350  26DF               	addwf	indf2,f,c
 20002  009352  0012               	return	
 20003  009354  0012               	return		;funcret
 20004  009356                     __end_of_lowercaseChar:
 20005                           	opt stack 0
 20006                           tblptru	equ	0xFF8
 20007                           tblptrh	equ	0xFF7
 20008                           tblptrl	equ	0xFF6
 20009                           tablat	equ	0xFF5
 20010                           prodh	equ	0xFF4
 20011                           prodl	equ	0xFF3
 20012                           intcon	equ	0xFF2
 20013                           indf0	equ	0xFEF
 20014                           postinc0	equ	0xFEE
 20015                           fsr0h	equ	0xFEA
 20016                           fsr0l	equ	0xFE9
 20017                           wreg	equ	0xFE8
 20018                           indf1	equ	0xFE7
 20019                           postdec1	equ	0xFE5
 20020                           fsr1h	equ	0xFE2
 20021                           fsr1l	equ	0xFE1
 20022                           indf2	equ	0xFDF
 20023                           postinc2	equ	0xFDE
 20024                           postdec2	equ	0xFDD
 20025                           fsr2h	equ	0xFDA
 20026                           fsr2l	equ	0xFD9
 20027                           status	equ	0xFD8
 20028                           
 20029 ;; *************** function ___lmul *****************
 20030 ;; Defined at:
 20031 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 20032 ;; Parameters:    Size  Location     Type
 20033 ;;  multiplier      4   28[BANK0 ] unsigned long 
 20034 ;;  multiplicand    4   32[BANK0 ] unsigned long 
 20035 ;; Auto vars:     Size  Location     Type
 20036 ;;  product         4   36[BANK0 ] unsigned long 
 20037 ;; Return value:  Size  Location     Type
 20038 ;;                  4   28[BANK0 ] unsigned long 
 20039 ;; Registers used:
 20040 ;;		wreg, status,2, status,0
 20041 ;; Tracked objects:
 20042 ;;		On entry : 0/0
 20043 ;;		On exit  : 0/0
 20044 ;;		Unchanged: 0/0
 20045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20046 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20047 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20049 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20050 ;;Total ram usage:       12 bytes
 20051 ;; Hardware stack levels used:    1
 20052 ;; Hardware stack levels required when called:    6
 20053 ;; This function calls:
 20054 ;;		Nothing
 20055 ;; This function is called by:
 20056 ;;		_GetNumber
 20057 ;; This function uses a non-reentrant model
 20058 ;;
 20059                           
 20060                           	psect	text32
 20061  0089D6                     __ptext32:
 20062                           	opt stack 0
 20063  0089D6                     ___lmul:
 20064                           	opt stack 22
 20065                           
 20066                           ;incstack = 0
 20067  0089D6  0E00               	movlw	0
 20068  0089D8  0100               	movlb	0	; () banked
 20069  0089DA  6F84               	movwf	___lmul@product& (0+255),b
 20070  0089DC  0E00               	movlw	0
 20071  0089DE  6F85               	movwf	(___lmul@product+1)& (0+255),b
 20072  0089E0  0E00               	movlw	0
 20073  0089E2  6F86               	movwf	(___lmul@product+2)& (0+255),b
 20074  0089E4  0E00               	movlw	0
 20075  0089E6  6F87               	movwf	(___lmul@product+3)& (0+255),b
 20076  0089E8  D000               	goto	l14228
 20077  0089EA                     l14228:
 20078                           
 20079                           ; BSR set to: 0
 20080  0089EA  0100               	movlb	0	; () banked
 20081  0089EC  A17C               	btfss	___lmul@multiplier& (0+255),0,b
 20082  0089EE  D011               	goto	l14232
 20083                           
 20084                           ; BSR set to: 0
 20085  0089F0  0100               	movlb	0	; () banked
 20086  0089F2  5180               	movf	___lmul@multiplicand& (0+255),w,b
 20087  0089F4  0100               	movlb	0	; () banked
 20088  0089F6  2784               	addwf	___lmul@product& (0+255),f,b
 20089  0089F8  0100               	movlb	0	; () banked
 20090  0089FA  5181               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 20091  0089FC  0100               	movlb	0	; () banked
 20092  0089FE  2385               	addwfc	(___lmul@product+1)& (0+255),f,b
 20093  008A00  0100               	movlb	0	; () banked
 20094  008A02  5182               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 20095  008A04  0100               	movlb	0	; () banked
 20096  008A06  2386               	addwfc	(___lmul@product+2)& (0+255),f,b
 20097  008A08  0100               	movlb	0	; () banked
 20098  008A0A  5183               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 20099  008A0C  0100               	movlb	0	; () banked
 20100  008A0E  2387               	addwfc	(___lmul@product+3)& (0+255),f,b
 20101  008A10  D000               	goto	l14232
 20102  008A12                     l14232:
 20103                           
 20104                           ; BSR set to: 0
 20105  008A12  0100               	movlb	0	; () banked
 20106  008A14  90D8               	bcf	status,0,c
 20107  008A16  3780               	rlcf	___lmul@multiplicand& (0+255),f,b
 20108  008A18  3781               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 20109  008A1A  3782               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 20110  008A1C  3783               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 20111                           
 20112                           ; BSR set to: 0
 20113  008A1E  0100               	movlb	0	; () banked
 20114  008A20  90D8               	bcf	status,0,c
 20115  008A22  337F               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 20116  008A24  337E               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 20117  008A26  337D               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 20118  008A28  337C               	rrcf	___lmul@multiplier& (0+255),f,b
 20119  008A2A  0100               	movlb	0	; () banked
 20120  008A2C  517C               	movf	___lmul@multiplier& (0+255),w,b
 20121  008A2E  0100               	movlb	0	; () banked
 20122  008A30  117D               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 20123  008A32  0100               	movlb	0	; () banked
 20124  008A34  117E               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 20125  008A36  0100               	movlb	0	; () banked
 20126  008A38  117F               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 20127  008A3A  A4D8               	btfss	status,2,c
 20128  008A3C  D7D6               	goto	l14228
 20129                           
 20130                           ; BSR set to: 0
 20131  008A3E  C084  F07C         	movff	___lmul@product,?___lmul
 20132  008A42  C085  F07D         	movff	___lmul@product+1,?___lmul+1
 20133  008A46  C086  F07E         	movff	___lmul@product+2,?___lmul+2
 20134  008A4A  C087  F07F         	movff	___lmul@product+3,?___lmul+3
 20135                           
 20136                           ; BSR set to: 0
 20137  008A4E  0012               	return		;funcret
 20138  008A50                     __end_of___lmul:
 20139                           	opt stack 0
 20140                           tblptru	equ	0xFF8
 20141                           tblptrh	equ	0xFF7
 20142                           tblptrl	equ	0xFF6
 20143                           tablat	equ	0xFF5
 20144                           prodh	equ	0xFF4
 20145                           prodl	equ	0xFF3
 20146                           intcon	equ	0xFF2
 20147                           indf0	equ	0xFEF
 20148                           postinc0	equ	0xFEE
 20149                           fsr0h	equ	0xFEA
 20150                           fsr0l	equ	0xFE9
 20151                           wreg	equ	0xFE8
 20152                           indf1	equ	0xFE7
 20153                           postdec1	equ	0xFE5
 20154                           fsr1h	equ	0xFE2
 20155                           fsr1l	equ	0xFE1
 20156                           indf2	equ	0xFDF
 20157                           postinc2	equ	0xFDE
 20158                           postdec2	equ	0xFDD
 20159                           fsr2h	equ	0xFDA
 20160                           fsr2l	equ	0xFD9
 20161                           status	equ	0xFD8
 20162                           
 20163 ;; *************** function _IsLetter *****************
 20164 ;; Defined at:
 20165 ;;		line 99 in file "MISC.c"
 20166 ;; Parameters:    Size  Location     Type
 20167 ;;  data            1    wreg     unsigned char 
 20168 ;; Auto vars:     Size  Location     Type
 20169 ;;  data            1   28[BANK0 ] unsigned char 
 20170 ;; Return value:  Size  Location     Type
 20171 ;;                  1    wreg      unsigned char 
 20172 ;; Registers used:
 20173 ;;		wreg, status,2, status,0
 20174 ;; Tracked objects:
 20175 ;;		On entry : 0/0
 20176 ;;		On exit  : 0/0
 20177 ;;		Unchanged: 0/0
 20178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20180 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20182 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20183 ;;Total ram usage:        1 bytes
 20184 ;; Hardware stack levels used:    1
 20185 ;; Hardware stack levels required when called:    6
 20186 ;; This function calls:
 20187 ;;		Nothing
 20188 ;; This function is called by:
 20189 ;;		_GetNumber
 20190 ;; This function uses a non-reentrant model
 20191 ;;
 20192                           
 20193                           	psect	text33
 20194  0093A8                     __ptext33:
 20195                           	opt stack 0
 20196  0093A8                     _IsLetter:
 20197                           	opt stack 22
 20198                           
 20199                           ; BSR set to: 0
 20200                           ;incstack = 0
 20201                           ;IsLetter@data stored from wreg
 20202  0093A8  0100               	movlb	0	; () banked
 20203  0093AA  6F7C               	movwf	IsLetter@data& (0+255),b
 20204                           
 20205                           ; BSR set to: 0
 20206                           ;MISC.c: 101: if(data >= 65 && data <= 90)
 20207  0093AC  0E40               	movlw	64
 20208  0093AE  0100               	movlb	0	; () banked
 20209  0093B0  657C               	cpfsgt	IsLetter@data& (0+255),b
 20210  0093B2  D006               	goto	l13826
 20211                           
 20212                           ; BSR set to: 0
 20213  0093B4  0E5B               	movlw	91
 20214  0093B6  0100               	movlb	0	; () banked
 20215  0093B8  617C               	cpfslt	IsLetter@data& (0+255),b
 20216  0093BA  D002               	goto	l13826
 20217                           
 20218                           ; BSR set to: 0
 20219                           ;MISC.c: 102: {
 20220                           ;MISC.c: 103: return 1;
 20221  0093BC  0E01               	movlw	1
 20222                           
 20223                           ; BSR set to: 0
 20224  0093BE  0012               	return	
 20225  0093C0                     l13826:
 20226                           
 20227                           ; BSR set to: 0
 20228                           ;MISC.c: 104: }
 20229                           ;MISC.c: 105: return 0;
 20230  0093C0  0E00               	movlw	0
 20231  0093C2  0012               	return	
 20232                           
 20233                           ; BSR set to: 0
 20234                           
 20235                           ; BSR set to: 0
 20236  0093C4  0012               	return		;funcret
 20237  0093C6                     __end_of_IsLetter:
 20238                           	opt stack 0
 20239                           tblptru	equ	0xFF8
 20240                           tblptrh	equ	0xFF7
 20241                           tblptrl	equ	0xFF6
 20242                           tablat	equ	0xFF5
 20243                           prodh	equ	0xFF4
 20244                           prodl	equ	0xFF3
 20245                           intcon	equ	0xFF2
 20246                           indf0	equ	0xFEF
 20247                           postinc0	equ	0xFEE
 20248                           fsr0h	equ	0xFEA
 20249                           fsr0l	equ	0xFE9
 20250                           wreg	equ	0xFE8
 20251                           indf1	equ	0xFE7
 20252                           postdec1	equ	0xFE5
 20253                           fsr1h	equ	0xFE2
 20254                           fsr1l	equ	0xFE1
 20255                           indf2	equ	0xFDF
 20256                           postinc2	equ	0xFDE
 20257                           postdec2	equ	0xFDD
 20258                           fsr2h	equ	0xFDA
 20259                           fsr2l	equ	0xFD9
 20260                           status	equ	0xFD8
 20261                           
 20262 ;; *************** function _EncodeNEC *****************
 20263 ;; Defined at:
 20264 ;;		line 522 in file "IR.c"
 20265 ;; Parameters:    Size  Location     Type
 20266 ;;  address         1    wreg     unsigned char 
 20267 ;;  command         1   32[BANK0 ] unsigned char 
 20268 ;; Auto vars:     Size  Location     Type
 20269 ;;  address         1   72[BANK0 ] unsigned char 
 20270 ;;  temp4           4   68[BANK0 ] unsigned long 
 20271 ;;  temp3           4   64[BANK0 ] unsigned long 
 20272 ;;  temp2           4   60[BANK0 ] unsigned long 
 20273 ;;  temp1           4   56[BANK0 ] unsigned long 
 20274 ;; Return value:  Size  Location     Type
 20275 ;;                  4   32[BANK0 ] unsigned long 
 20276 ;; Registers used:
 20277 ;;		wreg, status,2, status,0, cstack
 20278 ;; Tracked objects:
 20279 ;;		On entry : 0/0
 20280 ;;		On exit  : 0/0
 20281 ;;		Unchanged: 0/0
 20282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20283 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20284 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20285 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20286 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20287 ;;Total ram usage:       41 bytes
 20288 ;; Hardware stack levels used:    1
 20289 ;; Hardware stack levels required when called:    7
 20290 ;; This function calls:
 20291 ;;		_Reverse_Byte
 20292 ;; This function is called by:
 20293 ;;		_UseBluetooth
 20294 ;; This function uses a non-reentrant model
 20295 ;;
 20296                           
 20297                           	psect	text34
 20298  0072BA                     __ptext34:
 20299                           	opt stack 0
 20300  0072BA                     _EncodeNEC:
 20301                           	opt stack 22
 20302                           
 20303                           ; BSR set to: 0
 20304                           ;incstack = 0
 20305                           ;EncodeNEC@address stored from wreg
 20306  0072BA  0100               	movlb	0	; () banked
 20307  0072BC  6FA8               	movwf	EncodeNEC@address& (0+255),b
 20308                           
 20309                           ; BSR set to: 0
 20310                           ;IR.c: 524: unsigned long temp1,
 20311                           ;IR.c: 525: temp2,
 20312                           ;IR.c: 526: temp3,
 20313                           ;IR.c: 527: temp4;
 20314                           ;IR.c: 535: temp1 = (unsigned long) Reverse_Byte(address);
 20315  0072BE  0100               	movlb	0	; () banked
 20316  0072C0  51A8               	movf	EncodeNEC@address& (0+255),w,b
 20317  0072C2  ECAB  F040         	call	_Reverse_Byte
 20318  0072C6  0100               	movlb	0	; () banked
 20319  0072C8  6F84               	movwf	??_EncodeNEC& (0+255),b
 20320  0072CA  0100               	movlb	0	; () banked
 20321  0072CC  5184               	movf	??_EncodeNEC& (0+255),w,b
 20322  0072CE  0100               	movlb	0	; () banked
 20323  0072D0  6F98               	movwf	EncodeNEC@temp1& (0+255),b
 20324  0072D2  6B99               	clrf	(EncodeNEC@temp1+1)& (0+255),b
 20325  0072D4  6B9A               	clrf	(EncodeNEC@temp1+2)& (0+255),b
 20326  0072D6  6B9B               	clrf	(EncodeNEC@temp1+3)& (0+255),b
 20327                           
 20328                           ;IR.c: 536: temp2 = (unsigned long) Reverse_Byte(~address);
 20329  0072D8  0100               	movlb	0	; () banked
 20330  0072DA  51A8               	movf	EncodeNEC@address& (0+255),w,b
 20331  0072DC  0AFF               	xorlw	255
 20332  0072DE  ECAB  F040         	call	_Reverse_Byte
 20333  0072E2  0100               	movlb	0	; () banked
 20334  0072E4  6F84               	movwf	??_EncodeNEC& (0+255),b
 20335  0072E6  0100               	movlb	0	; () banked
 20336  0072E8  5184               	movf	??_EncodeNEC& (0+255),w,b
 20337  0072EA  0100               	movlb	0	; () banked
 20338  0072EC  6F9C               	movwf	EncodeNEC@temp2& (0+255),b
 20339  0072EE  6B9D               	clrf	(EncodeNEC@temp2+1)& (0+255),b
 20340  0072F0  6B9E               	clrf	(EncodeNEC@temp2+2)& (0+255),b
 20341  0072F2  6B9F               	clrf	(EncodeNEC@temp2+3)& (0+255),b
 20342                           
 20343                           ;IR.c: 537: temp3 = (unsigned long) Reverse_Byte(command);
 20344  0072F4  0100               	movlb	0	; () banked
 20345  0072F6  5180               	movf	EncodeNEC@command& (0+255),w,b
 20346  0072F8  ECAB  F040         	call	_Reverse_Byte
 20347  0072FC  0100               	movlb	0	; () banked
 20348  0072FE  6F84               	movwf	??_EncodeNEC& (0+255),b
 20349  007300  0100               	movlb	0	; () banked
 20350  007302  5184               	movf	??_EncodeNEC& (0+255),w,b
 20351  007304  0100               	movlb	0	; () banked
 20352  007306  6FA0               	movwf	EncodeNEC@temp3& (0+255),b
 20353  007308  6BA1               	clrf	(EncodeNEC@temp3+1)& (0+255),b
 20354  00730A  6BA2               	clrf	(EncodeNEC@temp3+2)& (0+255),b
 20355  00730C  6BA3               	clrf	(EncodeNEC@temp3+3)& (0+255),b
 20356                           
 20357                           ;IR.c: 538: temp4 = (unsigned long) Reverse_Byte(~command);
 20358  00730E  0100               	movlb	0	; () banked
 20359  007310  5180               	movf	EncodeNEC@command& (0+255),w,b
 20360  007312  0AFF               	xorlw	255
 20361  007314  ECAB  F040         	call	_Reverse_Byte
 20362  007318  0100               	movlb	0	; () banked
 20363  00731A  6F84               	movwf	??_EncodeNEC& (0+255),b
 20364  00731C  0100               	movlb	0	; () banked
 20365  00731E  5184               	movf	??_EncodeNEC& (0+255),w,b
 20366  007320  0100               	movlb	0	; () banked
 20367  007322  6FA4               	movwf	EncodeNEC@temp4& (0+255),b
 20368  007324  6BA5               	clrf	(EncodeNEC@temp4+1)& (0+255),b
 20369  007326  6BA6               	clrf	(EncodeNEC@temp4+2)& (0+255),b
 20370  007328  6BA7               	clrf	(EncodeNEC@temp4+3)& (0+255),b
 20371                           
 20372                           ; BSR set to: 0
 20373                           ;IR.c: 540: return ((temp1 << 24) + (temp2 << 16) + (temp3 << 8) + temp4);
 20374  00732A  C0A0  F085         	movff	EncodeNEC@temp3,??_EncodeNEC+1
 20375  00732E  C0A1  F086         	movff	EncodeNEC@temp3+1,??_EncodeNEC+2
 20376  007332  C0A2  F087         	movff	EncodeNEC@temp3+2,??_EncodeNEC+3
 20377  007336  0100               	movlb	0	; () banked
 20378  007338  6B84               	clrf	??_EncodeNEC& (0+255),b
 20379  00733A  C09C  F088         	movff	EncodeNEC@temp2,??_EncodeNEC+4
 20380  00733E  C09D  F089         	movff	EncodeNEC@temp2+1,??_EncodeNEC+5
 20381  007342  C09E  F08A         	movff	EncodeNEC@temp2+2,??_EncodeNEC+6
 20382  007346  C09F  F08B         	movff	EncodeNEC@temp2+3,??_EncodeNEC+7
 20383  00734A  C089  F08B         	movff	??_EncodeNEC+5,??_EncodeNEC+7
 20384  00734E  C088  F08A         	movff	??_EncodeNEC+4,??_EncodeNEC+6
 20385  007352  0100               	movlb	0	; () banked
 20386  007354  6B89               	clrf	(??_EncodeNEC+5)& (0+255),b
 20387  007356  6B88               	clrf	(??_EncodeNEC+4)& (0+255),b
 20388  007358  C098  F08C         	movff	EncodeNEC@temp1,??_EncodeNEC+8
 20389  00735C  C099  F08D         	movff	EncodeNEC@temp1+1,??_EncodeNEC+9
 20390  007360  C09A  F08E         	movff	EncodeNEC@temp1+2,??_EncodeNEC+10
 20391  007364  C09B  F08F         	movff	EncodeNEC@temp1+3,??_EncodeNEC+11
 20392  007368  C08C  F08F         	movff	??_EncodeNEC+8,??_EncodeNEC+11
 20393  00736C  0100               	movlb	0	; () banked
 20394  00736E  6B8E               	clrf	(??_EncodeNEC+10)& (0+255),b
 20395  007370  6B8D               	clrf	(??_EncodeNEC+9)& (0+255),b
 20396  007372  6B8C               	clrf	(??_EncodeNEC+8)& (0+255),b
 20397  007374  0100               	movlb	0	; () banked
 20398  007376  5188               	movf	(??_EncodeNEC+4)& (0+255),w,b
 20399  007378  0100               	movlb	0	; () banked
 20400  00737A  258C               	addwf	(??_EncodeNEC+8)& (0+255),w,b
 20401  00737C  0100               	movlb	0	; () banked
 20402  00737E  6F90               	movwf	(??_EncodeNEC+12)& (0+255),b
 20403  007380  0100               	movlb	0	; () banked
 20404  007382  5189               	movf	(??_EncodeNEC+5)& (0+255),w,b
 20405  007384  0100               	movlb	0	; () banked
 20406  007386  218D               	addwfc	(??_EncodeNEC+9)& (0+255),w,b
 20407  007388  0100               	movlb	0	; () banked
 20408  00738A  6F91               	movwf	(??_EncodeNEC+13)& (0+255),b
 20409  00738C  0100               	movlb	0	; () banked
 20410  00738E  518A               	movf	(??_EncodeNEC+6)& (0+255),w,b
 20411  007390  0100               	movlb	0	; () banked
 20412  007392  218E               	addwfc	(??_EncodeNEC+10)& (0+255),w,b
 20413  007394  0100               	movlb	0	; () banked
 20414  007396  6F92               	movwf	(??_EncodeNEC+14)& (0+255),b
 20415  007398  0100               	movlb	0	; () banked
 20416  00739A  518B               	movf	(??_EncodeNEC+7)& (0+255),w,b
 20417  00739C  0100               	movlb	0	; () banked
 20418  00739E  218F               	addwfc	(??_EncodeNEC+11)& (0+255),w,b
 20419  0073A0  0100               	movlb	0	; () banked
 20420  0073A2  6F93               	movwf	(??_EncodeNEC+15)& (0+255),b
 20421  0073A4  0100               	movlb	0	; () banked
 20422  0073A6  5184               	movf	??_EncodeNEC& (0+255),w,b
 20423  0073A8  0100               	movlb	0	; () banked
 20424  0073AA  2590               	addwf	(??_EncodeNEC+12)& (0+255),w,b
 20425  0073AC  0100               	movlb	0	; () banked
 20426  0073AE  6F94               	movwf	(??_EncodeNEC+16)& (0+255),b
 20427  0073B0  0100               	movlb	0	; () banked
 20428  0073B2  5185               	movf	(??_EncodeNEC+1)& (0+255),w,b
 20429  0073B4  0100               	movlb	0	; () banked
 20430  0073B6  2191               	addwfc	(??_EncodeNEC+13)& (0+255),w,b
 20431  0073B8  0100               	movlb	0	; () banked
 20432  0073BA  6F95               	movwf	(??_EncodeNEC+17)& (0+255),b
 20433  0073BC  0100               	movlb	0	; () banked
 20434  0073BE  5186               	movf	(??_EncodeNEC+2)& (0+255),w,b
 20435  0073C0  0100               	movlb	0	; () banked
 20436  0073C2  2192               	addwfc	(??_EncodeNEC+14)& (0+255),w,b
 20437  0073C4  0100               	movlb	0	; () banked
 20438  0073C6  6F96               	movwf	(??_EncodeNEC+18)& (0+255),b
 20439  0073C8  0100               	movlb	0	; () banked
 20440  0073CA  5187               	movf	(??_EncodeNEC+3)& (0+255),w,b
 20441  0073CC  0100               	movlb	0	; () banked
 20442  0073CE  2193               	addwfc	(??_EncodeNEC+15)& (0+255),w,b
 20443  0073D0  0100               	movlb	0	; () banked
 20444  0073D2  6F97               	movwf	(??_EncodeNEC+19)& (0+255),b
 20445  0073D4  0100               	movlb	0	; () banked
 20446  0073D6  51A4               	movf	EncodeNEC@temp4& (0+255),w,b
 20447  0073D8  0100               	movlb	0	; () banked
 20448  0073DA  2594               	addwf	(??_EncodeNEC+16)& (0+255),w,b
 20449  0073DC  0100               	movlb	0	; () banked
 20450  0073DE  6F80               	movwf	?_EncodeNEC& (0+255),b
 20451  0073E0  0100               	movlb	0	; () banked
 20452  0073E2  51A5               	movf	(EncodeNEC@temp4+1)& (0+255),w,b
 20453  0073E4  0100               	movlb	0	; () banked
 20454  0073E6  2195               	addwfc	(??_EncodeNEC+17)& (0+255),w,b
 20455  0073E8  0100               	movlb	0	; () banked
 20456  0073EA  6F81               	movwf	(?_EncodeNEC+1)& (0+255),b
 20457  0073EC  0100               	movlb	0	; () banked
 20458  0073EE  51A6               	movf	(EncodeNEC@temp4+2)& (0+255),w,b
 20459  0073F0  0100               	movlb	0	; () banked
 20460  0073F2  2196               	addwfc	(??_EncodeNEC+18)& (0+255),w,b
 20461  0073F4  0100               	movlb	0	; () banked
 20462  0073F6  6F82               	movwf	(?_EncodeNEC+2)& (0+255),b
 20463  0073F8  0100               	movlb	0	; () banked
 20464  0073FA  51A7               	movf	(EncodeNEC@temp4+3)& (0+255),w,b
 20465  0073FC  0100               	movlb	0	; () banked
 20466  0073FE  2197               	addwfc	(??_EncodeNEC+19)& (0+255),w,b
 20467  007400  0100               	movlb	0	; () banked
 20468  007402  6F83               	movwf	(?_EncodeNEC+3)& (0+255),b
 20469  007404  0012               	return	
 20470                           
 20471                           ; BSR set to: 0
 20472                           
 20473                           ; BSR set to: 0
 20474  007406  0012               	return		;funcret
 20475  007408                     __end_of_EncodeNEC:
 20476                           	opt stack 0
 20477                           tblptru	equ	0xFF8
 20478                           tblptrh	equ	0xFF7
 20479                           tblptrl	equ	0xFF6
 20480                           tablat	equ	0xFF5
 20481                           prodh	equ	0xFF4
 20482                           prodl	equ	0xFF3
 20483                           intcon	equ	0xFF2
 20484                           indf0	equ	0xFEF
 20485                           postinc0	equ	0xFEE
 20486                           fsr0h	equ	0xFEA
 20487                           fsr0l	equ	0xFE9
 20488                           wreg	equ	0xFE8
 20489                           indf1	equ	0xFE7
 20490                           postdec1	equ	0xFE5
 20491                           fsr1h	equ	0xFE2
 20492                           fsr1l	equ	0xFE1
 20493                           indf2	equ	0xFDF
 20494                           postinc2	equ	0xFDE
 20495                           postdec2	equ	0xFDD
 20496                           fsr2h	equ	0xFDA
 20497                           fsr2l	equ	0xFD9
 20498                           status	equ	0xFD8
 20499                           
 20500 ;; *************** function _DecodeNEC *****************
 20501 ;; Defined at:
 20502 ;;		line 548 in file "IR.c"
 20503 ;; Parameters:    Size  Location     Type
 20504 ;;  Nec             4   32[BANK0 ] unsigned long 
 20505 ;;  address         2   36[BANK0 ] PTR unsigned char 
 20506 ;;		 -> UseBluetooth@NecAddress(1), IRaddress(1), 
 20507 ;;  command         2   38[BANK0 ] PTR unsigned char 
 20508 ;;		 -> UseBluetooth@NecCommand(1), IRcommand(1), 
 20509 ;; Auto vars:     Size  Location     Type
 20510 ;;  temp1           1   46[BANK0 ] unsigned char 
 20511 ;;  temp3           1   45[BANK0 ] unsigned char 
 20512 ;;  temp2           1   44[BANK0 ] unsigned char 
 20513 ;; Return value:  Size  Location     Type
 20514 ;;                  1    wreg      unsigned char 
 20515 ;; Registers used:
 20516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20517 ;; Tracked objects:
 20518 ;;		On entry : 0/0
 20519 ;;		On exit  : 0/0
 20520 ;;		Unchanged: 0/0
 20521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20522 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20523 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20524 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20525 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20526 ;;Total ram usage:       15 bytes
 20527 ;; Hardware stack levels used:    1
 20528 ;; Hardware stack levels required when called:    7
 20529 ;; This function calls:
 20530 ;;		_Reverse_Byte
 20531 ;; This function is called by:
 20532 ;;		_UseIRCode
 20533 ;;		_UseBluetooth
 20534 ;; This function uses a non-reentrant model
 20535 ;;
 20536                           
 20537                           	psect	text35
 20538  008372                     __ptext35:
 20539                           	opt stack 0
 20540  008372                     _DecodeNEC:
 20541                           	opt stack 22
 20542                           
 20543                           ;IR.c: 550: unsigned char temp1,
 20544                           ;IR.c: 551: temp2,
 20545                           ;IR.c: 552: temp3;
 20546                           ;IR.c: 554: temp1 = ~Reverse_Byte((unsigned char) (Nec & 0x00FF));
 20547                           
 20548                           ; BSR set to: 0
 20549                           ;incstack = 0
 20550  008372  0100               	movlb	0	; () banked
 20551  008374  5180               	movf	DecodeNEC@Nec& (0+255),w,b
 20552  008376  ECAB  F040         	call	_Reverse_Byte
 20553  00837A  0AFF               	xorlw	255
 20554  00837C  0100               	movlb	0	; () banked
 20555  00837E  6F8E               	movwf	DecodeNEC@temp1& (0+255),b
 20556                           
 20557                           ;IR.c: 555: temp2 = Reverse_Byte((unsigned char) ((Nec & 0xFF00)>> 8));
 20558  008380  0100               	movlb	0	; () banked
 20559  008382  5181               	movf	(DecodeNEC@Nec+1)& (0+255),w,b
 20560  008384  ECAB  F040         	call	_Reverse_Byte
 20561  008388  0100               	movlb	0	; () banked
 20562  00838A  6F8C               	movwf	DecodeNEC@temp2& (0+255),b
 20563                           
 20564                           ; BSR set to: 0
 20565                           ;IR.c: 556: if(temp1 != temp2)
 20566  00838C  0100               	movlb	0	; () banked
 20567  00838E  518C               	movf	DecodeNEC@temp2& (0+255),w,b
 20568  008390  0100               	movlb	0	; () banked
 20569  008392  198E               	xorwf	DecodeNEC@temp1& (0+255),w,b
 20570  008394  B4D8               	btfsc	status,2,c
 20571  008396  D002               	goto	l14970
 20572                           
 20573                           ; BSR set to: 0
 20574                           ;IR.c: 557: {
 20575                           ;IR.c: 559: return 0;
 20576  008398  0E00               	movlw	0
 20577                           
 20578                           ; BSR set to: 0
 20579  00839A  0012               	return	
 20580  00839C                     l14970:
 20581                           
 20582                           ; BSR set to: 0
 20583                           ;IR.c: 560: }
 20584                           ;IR.c: 561: temp1 = ~Reverse_Byte((unsigned char) ((Nec & 0x00FF0000) >> 16));
 20585  00839C  0100               	movlb	0	; () banked
 20586  00839E  5182               	movf	(DecodeNEC@Nec+2)& (0+255),w,b
 20587  0083A0  ECAB  F040         	call	_Reverse_Byte
 20588  0083A4  0AFF               	xorlw	255
 20589  0083A6  0100               	movlb	0	; () banked
 20590  0083A8  6F8E               	movwf	DecodeNEC@temp1& (0+255),b
 20591                           
 20592                           ;IR.c: 562: temp3 = Reverse_Byte((unsigned char) ((Nec & 0xFF000000) >> 24));
 20593  0083AA  0E00               	movlw	0
 20594  0083AC  0100               	movlb	0	; () banked
 20595  0083AE  1580               	andwf	DecodeNEC@Nec& (0+255),w,b
 20596  0083B0  0100               	movlb	0	; () banked
 20597  0083B2  6F88               	movwf	??_DecodeNEC& (0+255),b
 20598  0083B4  0E00               	movlw	0
 20599  0083B6  0100               	movlb	0	; () banked
 20600  0083B8  1581               	andwf	(DecodeNEC@Nec+1)& (0+255),w,b
 20601  0083BA  0100               	movlb	0	; () banked
 20602  0083BC  6F89               	movwf	(??_DecodeNEC+1)& (0+255),b
 20603  0083BE  0E00               	movlw	0
 20604  0083C0  0100               	movlb	0	; () banked
 20605  0083C2  1582               	andwf	(DecodeNEC@Nec+2)& (0+255),w,b
 20606  0083C4  0100               	movlb	0	; () banked
 20607  0083C6  6F8A               	movwf	(??_DecodeNEC+2)& (0+255),b
 20608  0083C8  0EFF               	movlw	255
 20609  0083CA  0100               	movlb	0	; () banked
 20610  0083CC  1583               	andwf	(DecodeNEC@Nec+3)& (0+255),w,b
 20611  0083CE  0100               	movlb	0	; () banked
 20612  0083D0  6F8B               	movwf	(??_DecodeNEC+3)& (0+255),b
 20613  0083D2  0E19               	movlw	25
 20614  0083D4  D006               	goto	u18700
 20615  0083D6                     u18705:
 20616  0083D6  0100               	movlb	0	; () banked
 20617  0083D8  90D8               	bcf	status,0,c
 20618  0083DA  338B               	rrcf	(??_DecodeNEC+3)& (0+255),f,b
 20619  0083DC  338A               	rrcf	(??_DecodeNEC+2)& (0+255),f,b
 20620  0083DE  3389               	rrcf	(??_DecodeNEC+1)& (0+255),f,b
 20621  0083E0  3388               	rrcf	??_DecodeNEC& (0+255),f,b
 20622  0083E2                     u18700:
 20623  0083E2  2EE8               	decfsz	wreg,f,c
 20624  0083E4  D7F8               	goto	u18705
 20625  0083E6  0100               	movlb	0	; () banked
 20626  0083E8  5188               	movf	??_DecodeNEC& (0+255),w,b
 20627  0083EA  ECAB  F040         	call	_Reverse_Byte
 20628  0083EE  0100               	movlb	0	; () banked
 20629  0083F0  6F8D               	movwf	DecodeNEC@temp3& (0+255),b
 20630                           
 20631                           ; BSR set to: 0
 20632                           ;IR.c: 563: if(temp1 != temp3)
 20633  0083F2  0100               	movlb	0	; () banked
 20634  0083F4  518D               	movf	DecodeNEC@temp3& (0+255),w,b
 20635  0083F6  0100               	movlb	0	; () banked
 20636  0083F8  198E               	xorwf	DecodeNEC@temp1& (0+255),w,b
 20637  0083FA  B4D8               	btfsc	status,2,c
 20638  0083FC  D002               	goto	l14978
 20639                           
 20640                           ; BSR set to: 0
 20641                           ;IR.c: 564: {
 20642                           ;IR.c: 566: return 0;
 20643  0083FE  0E00               	movlw	0
 20644                           
 20645                           ; BSR set to: 0
 20646  008400  0012               	return	
 20647  008402                     l14978:
 20648                           
 20649                           ; BSR set to: 0
 20650                           ;IR.c: 567: }
 20651                           ;IR.c: 568: *command = temp2;
 20652  008402  C086  FFD9         	movff	DecodeNEC@command,fsr2l
 20653  008406  C087  FFDA         	movff	DecodeNEC@command+1,fsr2h
 20654  00840A  C08C  FFDF         	movff	DecodeNEC@temp2,indf2
 20655                           
 20656                           ;IR.c: 569: *address = temp3;
 20657  00840E  C084  FFD9         	movff	DecodeNEC@address,fsr2l
 20658  008412  C085  FFDA         	movff	DecodeNEC@address+1,fsr2h
 20659  008416  C08D  FFDF         	movff	DecodeNEC@temp3,indf2
 20660                           
 20661                           ; BSR set to: 0
 20662                           ;IR.c: 570: return 1;
 20663  00841A  0E01               	movlw	1
 20664  00841C  0012               	return	
 20665                           
 20666                           ; BSR set to: 0
 20667                           
 20668                           ; BSR set to: 0
 20669  00841E  0012               	return		;funcret
 20670  008420                     __end_of_DecodeNEC:
 20671                           	opt stack 0
 20672                           tblptru	equ	0xFF8
 20673                           tblptrh	equ	0xFF7
 20674                           tblptrl	equ	0xFF6
 20675                           tablat	equ	0xFF5
 20676                           prodh	equ	0xFF4
 20677                           prodl	equ	0xFF3
 20678                           intcon	equ	0xFF2
 20679                           indf0	equ	0xFEF
 20680                           postinc0	equ	0xFEE
 20681                           fsr0h	equ	0xFEA
 20682                           fsr0l	equ	0xFE9
 20683                           wreg	equ	0xFE8
 20684                           indf1	equ	0xFE7
 20685                           postdec1	equ	0xFE5
 20686                           fsr1h	equ	0xFE2
 20687                           fsr1l	equ	0xFE1
 20688                           indf2	equ	0xFDF
 20689                           postinc2	equ	0xFDE
 20690                           postdec2	equ	0xFDD
 20691                           fsr2h	equ	0xFDA
 20692                           fsr2l	equ	0xFD9
 20693                           status	equ	0xFD8
 20694                           
 20695 ;; *************** function _Reverse_Byte *****************
 20696 ;; Defined at:
 20697 ;;		line 362 in file "MISC.c"
 20698 ;; Parameters:    Size  Location     Type
 20699 ;;  This            1    wreg     unsigned char 
 20700 ;; Auto vars:     Size  Location     Type
 20701 ;;  This            1   31[BANK0 ] unsigned char 
 20702 ;;  temp            1   30[BANK0 ] unsigned char 
 20703 ;; Return value:  Size  Location     Type
 20704 ;;                  1    wreg      unsigned char 
 20705 ;; Registers used:
 20706 ;;		wreg, status,2, status,0
 20707 ;; Tracked objects:
 20708 ;;		On entry : 0/0
 20709 ;;		On exit  : 0/0
 20710 ;;		Unchanged: 0/0
 20711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20713 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20714 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20715 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20716 ;;Total ram usage:        4 bytes
 20717 ;; Hardware stack levels used:    1
 20718 ;; Hardware stack levels required when called:    6
 20719 ;; This function calls:
 20720 ;;		Nothing
 20721 ;; This function is called by:
 20722 ;;		_EncodeNEC
 20723 ;;		_DecodeNEC
 20724 ;; This function uses a non-reentrant model
 20725 ;;
 20726                           
 20727                           	psect	text36
 20728  008156                     __ptext36:
 20729                           	opt stack 0
 20730  008156                     _Reverse_Byte:
 20731                           	opt stack 22
 20732                           
 20733                           ; BSR set to: 0
 20734                           ;incstack = 0
 20735                           ;Reverse_Byte@This stored from wreg
 20736  008156  0100               	movlb	0	; () banked
 20737  008158  6F7F               	movwf	Reverse_Byte@This& (0+255),b
 20738                           
 20739                           ; BSR set to: 0
 20740                           ;MISC.c: 364: unsigned char temp=0;
 20741  00815A  0E00               	movlw	0
 20742  00815C  0100               	movlb	0	; () banked
 20743  00815E  6F7E               	movwf	Reverse_Byte@temp& (0+255),b
 20744                           
 20745                           ; BSR set to: 0
 20746                           ;MISC.c: 366: temp += (This & 0x01) << 7;
 20747  008160  C07F  F07C         	movff	Reverse_Byte@This,??_Reverse_Byte
 20748  008164  0E01               	movlw	1
 20749  008166  0100               	movlb	0	; () banked
 20750  008168  177C               	andwf	??_Reverse_Byte& (0+255),f,b
 20751  00816A  0E00               	movlw	0
 20752  00816C  B17C               	btfsc	??_Reverse_Byte& (0+255),0,b
 20753  00816E  0E80               	movlw	128
 20754  008170  6F7C               	movwf	??_Reverse_Byte& (0+255),b
 20755  008172  0100               	movlb	0	; () banked
 20756  008174  517C               	movf	??_Reverse_Byte& (0+255),w,b
 20757  008176  0100               	movlb	0	; () banked
 20758  008178  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20759                           
 20760                           ; BSR set to: 0
 20761                           ;MISC.c: 367: temp += (This & 0x02) << 5;
 20762  00817A  C07F  F07C         	movff	Reverse_Byte@This,??_Reverse_Byte
 20763  00817E  0E02               	movlw	2
 20764  008180  0100               	movlb	0	; () banked
 20765  008182  177C               	andwf	??_Reverse_Byte& (0+255),f,b
 20766  008184  0E05               	movlw	5
 20767  008186  0100               	movlb	0	; () banked
 20768  008188  6F7D               	movwf	(??_Reverse_Byte+1)& (0+255),b
 20769  00818A                     u17025:
 20770  00818A  0100               	movlb	0	; () banked
 20771  00818C  90D8               	bcf	status,0,c
 20772  00818E  377C               	rlcf	??_Reverse_Byte& (0+255),f,b
 20773  008190  0100               	movlb	0	; () banked
 20774  008192  2F7D               	decfsz	(??_Reverse_Byte+1)& (0+255),f,b
 20775  008194  D7FA               	goto	u17025
 20776  008196  0100               	movlb	0	; () banked
 20777  008198  517C               	movf	??_Reverse_Byte& (0+255),w,b
 20778  00819A  0100               	movlb	0	; () banked
 20779  00819C  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20780                           
 20781                           ; BSR set to: 0
 20782                           ;MISC.c: 368: temp += (This & 0x04) << 3;
 20783  00819E  C07F  F07C         	movff	Reverse_Byte@This,??_Reverse_Byte
 20784  0081A2  0E04               	movlw	4
 20785  0081A4  0100               	movlb	0	; () banked
 20786  0081A6  177C               	andwf	??_Reverse_Byte& (0+255),f,b
 20787  0081A8  0100               	movlb	0	; () banked
 20788  0081AA  90D8               	bcf	status,0,c
 20789  0081AC  377C               	rlcf	??_Reverse_Byte& (0+255),f,b
 20790  0081AE  0100               	movlb	0	; () banked
 20791  0081B0  90D8               	bcf	status,0,c
 20792  0081B2  377C               	rlcf	??_Reverse_Byte& (0+255),f,b
 20793  0081B4  0100               	movlb	0	; () banked
 20794  0081B6  90D8               	bcf	status,0,c
 20795  0081B8  357C               	rlcf	??_Reverse_Byte& (0+255),w,b
 20796  0081BA  0100               	movlb	0	; () banked
 20797  0081BC  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20798                           
 20799                           ; BSR set to: 0
 20800                           ;MISC.c: 369: temp += (This & 0x08) << 1;
 20801  0081BE  C07F  F07C         	movff	Reverse_Byte@This,??_Reverse_Byte
 20802  0081C2  0E08               	movlw	8
 20803  0081C4  0100               	movlb	0	; () banked
 20804  0081C6  177C               	andwf	??_Reverse_Byte& (0+255),f,b
 20805  0081C8  0100               	movlb	0	; () banked
 20806  0081CA  90D8               	bcf	status,0,c
 20807  0081CC  357C               	rlcf	??_Reverse_Byte& (0+255),w,b
 20808  0081CE  0100               	movlb	0	; () banked
 20809  0081D0  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20810                           
 20811                           ; BSR set to: 0
 20812                           ;MISC.c: 370: temp += (This & 0x10) >> 1;
 20813  0081D2  0100               	movlb	0	; () banked
 20814  0081D4  90D8               	bcf	status,0,c
 20815  0081D6  317F               	rrcf	Reverse_Byte@This& (0+255),w,b
 20816  0081D8  0B08               	andlw	8
 20817  0081DA  0100               	movlb	0	; () banked
 20818  0081DC  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20819                           
 20820                           ; BSR set to: 0
 20821                           ;MISC.c: 371: temp += (This & 0x20) >> 3;
 20822  0081DE  0100               	movlb	0	; () banked
 20823  0081E0  397F               	swapf	Reverse_Byte@This& (0+255),w,b
 20824  0081E2  46E8               	rlncf	wreg,f,c
 20825  0081E4  0B1F               	andlw	31
 20826  0081E6  0B04               	andlw	4
 20827  0081E8  0100               	movlb	0	; () banked
 20828  0081EA  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20829                           
 20830                           ; BSR set to: 0
 20831                           ;MISC.c: 372: temp += (This & 0x40) >> 5;
 20832  0081EC  0100               	movlb	0	; () banked
 20833  0081EE  397F               	swapf	Reverse_Byte@This& (0+255),w,b
 20834  0081F0  42E8               	rrncf	wreg,f,c
 20835  0081F2  0B07               	andlw	7
 20836  0081F4  0B02               	andlw	2
 20837  0081F6  0100               	movlb	0	; () banked
 20838  0081F8  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20839                           
 20840                           ; BSR set to: 0
 20841                           ;MISC.c: 373: temp += (This & 0x80) >> 7;
 20842  0081FA  0100               	movlb	0	; () banked
 20843  0081FC  457F               	rlncf	Reverse_Byte@This& (0+255),w,b
 20844  0081FE  0B01               	andlw	1
 20845  008200  0100               	movlb	0	; () banked
 20846  008202  277E               	addwf	Reverse_Byte@temp& (0+255),f,b
 20847                           
 20848                           ; BSR set to: 0
 20849                           ;MISC.c: 375: return temp;
 20850  008204  0100               	movlb	0	; () banked
 20851  008206  517E               	movf	Reverse_Byte@temp& (0+255),w,b
 20852  008208  0012               	return	
 20853                           
 20854                           ; BSR set to: 0
 20855                           
 20856                           ; BSR set to: 0
 20857  00820A  0012               	return		;funcret
 20858  00820C                     __end_of_Reverse_Byte:
 20859                           	opt stack 0
 20860                           tblptru	equ	0xFF8
 20861                           tblptrh	equ	0xFF7
 20862                           tblptrl	equ	0xFF6
 20863                           tablat	equ	0xFF5
 20864                           prodh	equ	0xFF4
 20865                           prodl	equ	0xFF3
 20866                           intcon	equ	0xFF2
 20867                           indf0	equ	0xFEF
 20868                           postinc0	equ	0xFEE
 20869                           fsr0h	equ	0xFEA
 20870                           fsr0l	equ	0xFE9
 20871                           wreg	equ	0xFE8
 20872                           indf1	equ	0xFE7
 20873                           postdec1	equ	0xFE5
 20874                           fsr1h	equ	0xFE2
 20875                           fsr1l	equ	0xFE1
 20876                           indf2	equ	0xFDF
 20877                           postinc2	equ	0xFDE
 20878                           postdec2	equ	0xFDD
 20879                           fsr2h	equ	0xFDA
 20880                           fsr2l	equ	0xFD9
 20881                           status	equ	0xFD8
 20882                           
 20883 ;; *************** function _Init_System *****************
 20884 ;; Defined at:
 20885 ;;		line 105 in file "user.c"
 20886 ;; Parameters:    Size  Location     Type
 20887 ;;		None
 20888 ;; Auto vars:     Size  Location     Type
 20889 ;;		None
 20890 ;; Return value:  Size  Location     Type
 20891 ;;		None               void
 20892 ;; Registers used:
 20893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20894 ;; Tracked objects:
 20895 ;;		On entry : 0/0
 20896 ;;		On exit  : 0/0
 20897 ;;		Unchanged: 0/0
 20898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20903 ;;Total ram usage:        0 bytes
 20904 ;; Hardware stack levels used:    1
 20905 ;; Hardware stack levels required when called:   13
 20906 ;; This function calls:
 20907 ;;		_EEPROMinitialized
 20908 ;;		_InitADC
 20909 ;;		_InitBluetooth
 20910 ;;		_InitIR
 20911 ;;		_InitTimers
 20912 ;;		_InitUART
 20913 ;;		_SetEEPROMdefault
 20914 ;;		_SyncEEPROMToGlobal
 20915 ;;		_SyncGlobalToEEPROM
 20916 ;;		_cleanBuffer
 20917 ;; This function is called by:
 20918 ;;		_main
 20919 ;; This function uses a non-reentrant model
 20920 ;;
 20921                           
 20922                           	psect	text37
 20923  008AC8                     __ptext37:
 20924                           	opt stack 0
 20925  008AC8                     _Init_System:
 20926                           	opt stack 17
 20927                           
 20928                           ;user.c: 107: cleanBuffer(&ReceivedString, 255);
 20929                           
 20930                           ; BSR set to: 0
 20931                           ;incstack = 0
 20932  008AC8  0E00               	movlw	low _ReceivedString
 20933  008ACA  0100               	movlb	0	; () banked
 20934  008ACC  6F7C               	movwf	cleanBuffer@data& (0+255),b
 20935  008ACE  0E06               	movlw	high _ReceivedString
 20936  008AD0  0100               	movlb	0	; () banked
 20937  008AD2  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 20938  008AD4  0E00               	movlw	0
 20939  008AD6  0100               	movlb	0	; () banked
 20940  008AD8  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 20941  008ADA  697E               	setf	cleanBuffer@count& (0+255),b
 20942  008ADC  ECCA  F046         	call	_cleanBuffer	;wreg free
 20943                           
 20944                           ;user.c: 110: IPR1bits.RCIP = 0;
 20945  008AE0  9A9F               	bcf	3999,5,c	;volatile
 20946                           
 20947                           ;user.c: 111: INTCON2bits.RBIP = 1;
 20948  008AE2  80F1               	bsf	intcon2,0,c	;volatile
 20949                           
 20950                           ;user.c: 112: INTCON2bits.TMR0IP = 1;
 20951  008AE4  84F1               	bsf	intcon2,2,c	;volatile
 20952                           
 20953                           ;user.c: 113: IPR1bits.TMR2IP = 1;
 20954  008AE6  829F               	bsf	3999,1,c	;volatile
 20955                           
 20956                           ;user.c: 114: IPR1bits.TMR1IP = 0;
 20957  008AE8  909F               	bcf	3999,0,c	;volatile
 20958                           
 20959                           ;user.c: 115: IPR2bits.TMR3IP = 1;
 20960  008AEA  82A2               	bsf	4002,1,c	;volatile
 20961                           
 20962                           ;user.c: 118: RCONbits.IPEN = 1;
 20963  008AEC  8ED0               	bsf	4048,7,c	;volatile
 20964                           
 20965                           ;user.c: 119: INTCONbits.PEIE = 1;
 20966  008AEE  8CF2               	bsf	intcon,6,c	;volatile
 20967                           
 20968                           ;user.c: 120: INTCONbits.GIE = 1;
 20969  008AF0  8EF2               	bsf	intcon,7,c	;volatile
 20970                           
 20971                           ;user.c: 122: SyncEEPROMToGlobal();
 20972  008AF2  EC52  F033         	call	_SyncEEPROMToGlobal	;wreg free
 20973                           
 20974                           ;user.c: 123: if(!EEPROMinitialized())
 20975  008AF6  EC4F  F04A         	call	_EEPROMinitialized	;wreg free
 20976  008AFA  0900               	iorlw	0
 20977  008AFC  A4D8               	btfss	status,2,c
 20978  008AFE  D008               	goto	l15240
 20979                           
 20980                           ;user.c: 124: {
 20981                           ;user.c: 125: SetEEPROMdefault();
 20982  008B00  EC04  F03A         	call	_SetEEPROMdefault	;wreg free
 20983                           
 20984                           ;user.c: 126: Global.EEPROMinitFlag = 59;
 20985  008B04  0E3B               	movlw	59
 20986  008B06  0104               	movlb	4	; () banked
 20987  008B08  6F2D               	movwf	(_Global+45)& (0+255),b
 20988                           
 20989                           ; BSR set to: 4
 20990                           ;user.c: 127: SyncGlobalToEEPROM();
 20991  008B0A  EC1C  F048         	call	_SyncGlobalToEEPROM	;wreg free
 20992  008B0E  D000               	goto	l15240
 20993  008B10                     l15240:
 20994                           
 20995                           ;user.c: 128: }
 20996                           ;user.c: 129: InitADC();
 20997  008B10  EC2F  F04A         	call	_InitADC	;wreg free
 20998                           
 20999                           ;user.c: 130: InitIR();
 21000  008B14  ECF8  F047         	call	_InitIR	;wreg free
 21001                           
 21002                           ;user.c: 132: InitUART(115200);
 21003  008B18  0E00               	movlw	0
 21004  008B1A  0100               	movlb	0	; () banked
 21005  008B1C  6FD1               	movwf	InitUART@Baud& (0+255),b
 21006  008B1E  0EC2               	movlw	194
 21007  008B20  6FD2               	movwf	(InitUART@Baud+1)& (0+255),b
 21008  008B22  0E01               	movlw	1
 21009  008B24  6FD3               	movwf	(InitUART@Baud+2)& (0+255),b
 21010  008B26  0E00               	movlw	0
 21011  008B28  6FD4               	movwf	(InitUART@Baud+3)& (0+255),b
 21012  008B2A  ECD9  F03C         	call	_InitUART	;wreg free
 21013                           
 21014                           ;user.c: 133: InitBluetooth();
 21015  008B2E  EC50  F047         	call	_InitBluetooth	;wreg free
 21016                           
 21017                           ;user.c: 135: InitTimers();
 21018  008B32  EC45  F04A         	call	_InitTimers	;wreg free
 21019  008B36  0012               	return		;funcret
 21020  008B38                     __end_of_Init_System:
 21021                           	opt stack 0
 21022                           tblptru	equ	0xFF8
 21023                           tblptrh	equ	0xFF7
 21024                           tblptrl	equ	0xFF6
 21025                           tablat	equ	0xFF5
 21026                           prodh	equ	0xFF4
 21027                           prodl	equ	0xFF3
 21028                           intcon	equ	0xFF2
 21029                           intcon2	equ	0xFF1
 21030                           indf0	equ	0xFEF
 21031                           postinc0	equ	0xFEE
 21032                           fsr0h	equ	0xFEA
 21033                           fsr0l	equ	0xFE9
 21034                           wreg	equ	0xFE8
 21035                           indf1	equ	0xFE7
 21036                           postdec1	equ	0xFE5
 21037                           fsr1h	equ	0xFE2
 21038                           fsr1l	equ	0xFE1
 21039                           indf2	equ	0xFDF
 21040                           postinc2	equ	0xFDE
 21041                           postdec2	equ	0xFDD
 21042                           fsr2h	equ	0xFDA
 21043                           fsr2l	equ	0xFD9
 21044                           status	equ	0xFD8
 21045                           
 21046 ;; *************** function _SyncEEPROMToGlobal *****************
 21047 ;; Defined at:
 21048 ;;		line 302 in file "EEPROM.c"
 21049 ;; Parameters:    Size  Location     Type
 21050 ;;		None
 21051 ;; Auto vars:     Size  Location     Type
 21052 ;;  Temp          136    3[BANK1 ] struct EEdata
 21053 ;;  j               1    2[BANK1 ] unsigned char 
 21054 ;;  i               1    1[BANK1 ] unsigned char 
 21055 ;;  k               1    0[BANK1 ] unsigned char 
 21056 ;; Return value:  Size  Location     Type
 21057 ;;		None               void
 21058 ;; Registers used:
 21059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21060 ;; Tracked objects:
 21061 ;;		On entry : 0/0
 21062 ;;		On exit  : 0/0
 21063 ;;		Unchanged: 0/0
 21064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21066 ;;      Locals:         0       0     139       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21067 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21068 ;;      Totals:         0       4     139       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21069 ;;Total ram usage:      143 bytes
 21070 ;; Hardware stack levels used:    1
 21071 ;; Hardware stack levels required when called:    9
 21072 ;; This function calls:
 21073 ;;		_GetEEPROM
 21074 ;; This function is called by:
 21075 ;;		_Init_System
 21076 ;; This function uses a non-reentrant model
 21077 ;;
 21078                           
 21079                           	psect	text38
 21080  0066A4                     __ptext38:
 21081                           	opt stack 0
 21082  0066A4                     _SyncEEPROMToGlobal:
 21083                           	opt stack 20
 21084                           
 21085                           ;EEPROM.c: 304: unsigned char i,j,k;
 21086                           ;EEPROM.c: 305: GBLdata Temp;
 21087                           ;EEPROM.c: 307: GetEEPROM(&Temp);
 21088                           
 21089                           ;incstack = 0
 21090  0066A4  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 21091  0066A6  0100               	movlb	0	; () banked
 21092  0066A8  6FA1               	movwf	GetEEPROM@Temp& (0+255),b
 21093  0066AA  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 21094  0066AC  0100               	movlb	0	; () banked
 21095  0066AE  6FA2               	movwf	(GetEEPROM@Temp+1)& (0+255),b
 21096  0066B0  ECD6  F035         	call	_GetEEPROM	;wreg free
 21097                           
 21098                           ;EEPROM.c: 309: Global.BlueToothFlag = Temp.BlueToothFlag;
 21099  0066B4  C103  F400         	movff	SyncEEPROMToGlobal@Temp,_Global
 21100                           
 21101                           ;EEPROM.c: 310: Global.SWNECcode = Temp.SWNECcode;
 21102  0066B8  C104  F401         	movff	SyncEEPROMToGlobal@Temp+1,_Global+1
 21103  0066BC  C105  F402         	movff	SyncEEPROMToGlobal@Temp+2,_Global+2
 21104  0066C0  C106  F403         	movff	SyncEEPROMToGlobal@Temp+3,_Global+3
 21105  0066C4  C107  F404         	movff	SyncEEPROMToGlobal@Temp+4,_Global+4
 21106                           
 21107                           ;EEPROM.c: 311: Global.EEPROMinitFlag = Temp.EEPROMinitFlag;
 21108  0066C8  C130  F42D         	movff	SyncEEPROMToGlobal@Temp+45,_Global+45
 21109                           
 21110                           ;EEPROM.c: 312: for(i=0; i< 20; i++)
 21111  0066CC  0E00               	movlw	0
 21112  0066CE  0101               	movlb	1	; () banked
 21113  0066D0  6F01               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 21114  0066D2  D04F               	goto	l14330
 21115                           
 21116                           ; BSR set to: 1
 21117                           
 21118                           ; BSR set to: 1
 21119  0066D4  D052               	goto	l1000
 21120  0066D6                     l14316:
 21121                           
 21122                           ; BSR set to: 1
 21123                           ;EEPROM.c: 313: {
 21124                           ;EEPROM.c: 314: for(j=0; j < 2; j++)
 21125  0066D6  0E00               	movlw	0
 21126  0066D8  0101               	movlb	1	; () banked
 21127  0066DA  6F02               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 21128  0066DC                     l14318:
 21129                           
 21130                           ; BSR set to: 1
 21131  0066DC  0E01               	movlw	1
 21132  0066DE  0101               	movlb	1	; () banked
 21133  0066E0  6502               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 21134  0066E2  D001               	goto	l14322
 21135                           
 21136                           ; BSR set to: 1
 21137  0066E4  D044               	goto	l14328
 21138  0066E6                     l14322:
 21139                           
 21140                           ; BSR set to: 1
 21141                           ;EEPROM.c: 315: {
 21142                           ;EEPROM.c: 316: Global.RemoteButtonNEC[i][j] = Temp.RemoteButtonNEC[i][j];
 21143  0066E6  0101               	movlb	1	; () banked
 21144  0066E8  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 21145  0066EA  0D02               	mullw	2
 21146  0066EC  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 21147  0066EE  0100               	movlb	0	; () banked
 21148  0066F0  6FA9               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 21149  0066F2  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 21150  0066F4  0100               	movlb	0	; () banked
 21151  0066F6  6FAA               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 21152  0066F8  50F3               	movf	prodl,w,c
 21153  0066FA  0100               	movlb	0	; () banked
 21154  0066FC  27A9               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21155  0066FE  50F4               	movf	prodh,w,c
 21156  006700  0100               	movlb	0	; () banked
 21157  006702  23AA               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21158  006704  0101               	movlb	1	; () banked
 21159  006706  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 21160  006708  0D01               	mullw	1
 21161  00670A  50F3               	movf	prodl,w,c
 21162  00670C  0100               	movlb	0	; () banked
 21163  00670E  27A9               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21164  006710  50F4               	movf	prodh,w,c
 21165  006712  0100               	movlb	0	; () banked
 21166  006714  23AA               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21167  006716  0E05               	movlw	5
 21168  006718  0100               	movlb	0	; () banked
 21169  00671A  25A9               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 21170  00671C  6ED9               	movwf	fsr2l,c
 21171  00671E  0E00               	movlw	0
 21172  006720  0100               	movlb	0	; () banked
 21173  006722  21AA               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 21174  006724  6EDA               	movwf	fsr2h,c
 21175  006726  0101               	movlb	1	; () banked
 21176  006728  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 21177  00672A  0D02               	mullw	2
 21178  00672C  0E00               	movlw	low _Global
 21179  00672E  0100               	movlb	0	; () banked
 21180  006730  6FAB               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 21181  006732  0E04               	movlw	high _Global
 21182  006734  0100               	movlb	0	; () banked
 21183  006736  6FAC               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 21184  006738  0E05               	movlw	5
 21185  00673A  0100               	movlb	0	; () banked
 21186  00673C  27AB               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21187  00673E  0E00               	movlw	0
 21188  006740  23AC               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21189  006742  50F3               	movf	prodl,w,c
 21190  006744  0100               	movlb	0	; () banked
 21191  006746  27AB               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21192  006748  50F4               	movf	prodh,w,c
 21193  00674A  0100               	movlb	0	; () banked
 21194  00674C  23AC               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21195  00674E  0101               	movlb	1	; () banked
 21196  006750  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 21197  006752  0D01               	mullw	1
 21198  006754  50F3               	movf	prodl,w,c
 21199  006756  0100               	movlb	0	; () banked
 21200  006758  25AB               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 21201  00675A  6EE1               	movwf	fsr1l,c
 21202  00675C  50F4               	movf	prodh,w,c
 21203  00675E  0100               	movlb	0	; () banked
 21204  006760  21AC               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 21205  006762  6EE2               	movwf	fsr1h,c
 21206  006764  CFDF FFE7          	movff	indf2,indf1
 21207                           
 21208                           ; BSR set to: 0
 21209  006768  0101               	movlb	1	; () banked
 21210  00676A  2B02               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 21211  00676C  D7B7               	goto	l14318
 21212  00676E                     l14328:
 21213                           
 21214                           ; BSR set to: 1
 21215  00676E  0101               	movlb	1	; () banked
 21216  006770  2B01               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 21217  006772                     l14330:
 21218                           
 21219                           ; BSR set to: 1
 21220  006772  0E13               	movlw	19
 21221  006774  0101               	movlb	1	; () banked
 21222  006776  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 21223  006778  D7AE               	goto	l14316
 21224  00677A                     l1000:
 21225                           
 21226                           ; BSR set to: 1
 21227                           ;EEPROM.c: 317: }
 21228                           ;EEPROM.c: 318: }
 21229                           ;EEPROM.c: 319: Global.EEPROMinitFlag = Temp.EEPROMinitFlag;
 21230  00677A  C130  F42D         	movff	SyncEEPROMToGlobal@Temp+45,_Global+45
 21231                           
 21232                           ; BSR set to: 1
 21233                           ;EEPROM.c: 320: for(i=0; i< 15; i++)
 21234  00677E  0E00               	movlw	0
 21235  006780  0101               	movlb	1	; () banked
 21236  006782  6F01               	movwf	SyncEEPROMToGlobal@i& (0+255),b
 21237                           
 21238                           ; BSR set to: 1
 21239  006784  0E0E               	movlw	14
 21240  006786  0101               	movlb	1	; () banked
 21241  006788  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 21242  00678A  D002               	goto	l14338
 21243  00678C  0012               	return	
 21244                           
 21245                           ; BSR set to: 1
 21246  00678E  0012               	return	
 21247  006790                     l14338:
 21248                           
 21249                           ; BSR set to: 1
 21250                           ;EEPROM.c: 321: {
 21251                           ;EEPROM.c: 322: for(j=0; j < 3; j++)
 21252  006790  0E00               	movlw	0
 21253  006792  0101               	movlb	1	; () banked
 21254  006794  6F02               	movwf	SyncEEPROMToGlobal@j& (0+255),b
 21255  006796                     l14340:
 21256                           
 21257                           ; BSR set to: 1
 21258  006796  0E02               	movlw	2
 21259  006798  0101               	movlb	1	; () banked
 21260  00679A  6502               	cpfsgt	SyncEEPROMToGlobal@j& (0+255),b
 21261  00679C  D001               	goto	l14344
 21262                           
 21263                           ; BSR set to: 1
 21264  00679E  D061               	goto	l14360
 21265  0067A0                     l14344:
 21266                           
 21267                           ; BSR set to: 1
 21268                           ;EEPROM.c: 323: {
 21269                           ;EEPROM.c: 324: for(k=0; k < 2; k++)
 21270  0067A0  0E00               	movlw	0
 21271  0067A2  0101               	movlb	1	; () banked
 21272  0067A4  6F00               	movwf	SyncEEPROMToGlobal@k& (0+255),b
 21273  0067A6                     l14346:
 21274                           
 21275                           ; BSR set to: 1
 21276  0067A6  0E01               	movlw	1
 21277  0067A8  0101               	movlb	1	; () banked
 21278  0067AA  6500               	cpfsgt	SyncEEPROMToGlobal@k& (0+255),b
 21279  0067AC  D001               	goto	l14350
 21280                           
 21281                           ; BSR set to: 1
 21282  0067AE  D056               	goto	l14356
 21283  0067B0                     l14350:
 21284                           
 21285                           ; BSR set to: 1
 21286                           ;EEPROM.c: 325: {
 21287                           ;EEPROM.c: 326: Global.RemoteButtonRF[i][j][k] = Temp.RemoteButtonRF[i][j][k];
 21288  0067B0  0101               	movlb	1	; () banked
 21289  0067B2  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 21290  0067B4  0D06               	mullw	6
 21291  0067B6  0E03               	movlw	low SyncEEPROMToGlobal@Temp
 21292  0067B8  0100               	movlb	0	; () banked
 21293  0067BA  6FA9               	movwf	??_SyncEEPROMToGlobal& (0+255),b
 21294  0067BC  0E01               	movlw	high SyncEEPROMToGlobal@Temp
 21295  0067BE  0100               	movlb	0	; () banked
 21296  0067C0  6FAA               	movwf	(??_SyncEEPROMToGlobal+1)& (0+255),b
 21297  0067C2  50F3               	movf	prodl,w,c
 21298  0067C4  0100               	movlb	0	; () banked
 21299  0067C6  27A9               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21300  0067C8  50F4               	movf	prodh,w,c
 21301  0067CA  0100               	movlb	0	; () banked
 21302  0067CC  23AA               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21303  0067CE  0101               	movlb	1	; () banked
 21304  0067D0  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 21305  0067D2  0D02               	mullw	2
 21306  0067D4  50F3               	movf	prodl,w,c
 21307  0067D6  0100               	movlb	0	; () banked
 21308  0067D8  27A9               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21309  0067DA  50F4               	movf	prodh,w,c
 21310  0067DC  0100               	movlb	0	; () banked
 21311  0067DE  23AA               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21312  0067E0  0101               	movlb	1	; () banked
 21313  0067E2  5100               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 21314  0067E4  0D01               	mullw	1
 21315  0067E6  50F3               	movf	prodl,w,c
 21316  0067E8  0100               	movlb	0	; () banked
 21317  0067EA  27A9               	addwf	??_SyncEEPROMToGlobal& (0+255),f,b
 21318  0067EC  50F4               	movf	prodh,w,c
 21319  0067EE  0100               	movlb	0	; () banked
 21320  0067F0  23AA               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),f,b
 21321  0067F2  0E2E               	movlw	46
 21322  0067F4  0100               	movlb	0	; () banked
 21323  0067F6  25A9               	addwf	??_SyncEEPROMToGlobal& (0+255),w,b
 21324  0067F8  6ED9               	movwf	fsr2l,c
 21325  0067FA  0E00               	movlw	0
 21326  0067FC  0100               	movlb	0	; () banked
 21327  0067FE  21AA               	addwfc	(??_SyncEEPROMToGlobal+1)& (0+255),w,b
 21328  006800  6EDA               	movwf	fsr2h,c
 21329  006802  0101               	movlb	1	; () banked
 21330  006804  5101               	movf	SyncEEPROMToGlobal@i& (0+255),w,b
 21331  006806  0D06               	mullw	6
 21332  006808  0E00               	movlw	low _Global
 21333  00680A  0100               	movlb	0	; () banked
 21334  00680C  6FAB               	movwf	(??_SyncEEPROMToGlobal+2)& (0+255),b
 21335  00680E  0E04               	movlw	high _Global
 21336  006810  0100               	movlb	0	; () banked
 21337  006812  6FAC               	movwf	(??_SyncEEPROMToGlobal+3)& (0+255),b
 21338  006814  0E2E               	movlw	46
 21339  006816  0100               	movlb	0	; () banked
 21340  006818  27AB               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21341  00681A  0E00               	movlw	0
 21342  00681C  23AC               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21343  00681E  50F3               	movf	prodl,w,c
 21344  006820  0100               	movlb	0	; () banked
 21345  006822  27AB               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21346  006824  50F4               	movf	prodh,w,c
 21347  006826  0100               	movlb	0	; () banked
 21348  006828  23AC               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21349  00682A  0101               	movlb	1	; () banked
 21350  00682C  5102               	movf	SyncEEPROMToGlobal@j& (0+255),w,b
 21351  00682E  0D02               	mullw	2
 21352  006830  50F3               	movf	prodl,w,c
 21353  006832  0100               	movlb	0	; () banked
 21354  006834  27AB               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),f,b
 21355  006836  50F4               	movf	prodh,w,c
 21356  006838  0100               	movlb	0	; () banked
 21357  00683A  23AC               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),f,b
 21358  00683C  0101               	movlb	1	; () banked
 21359  00683E  5100               	movf	SyncEEPROMToGlobal@k& (0+255),w,b
 21360  006840  0D01               	mullw	1
 21361  006842  50F3               	movf	prodl,w,c
 21362  006844  0100               	movlb	0	; () banked
 21363  006846  25AB               	addwf	(??_SyncEEPROMToGlobal+2)& (0+255),w,b
 21364  006848  6EE1               	movwf	fsr1l,c
 21365  00684A  50F4               	movf	prodh,w,c
 21366  00684C  0100               	movlb	0	; () banked
 21367  00684E  21AC               	addwfc	(??_SyncEEPROMToGlobal+3)& (0+255),w,b
 21368  006850  6EE2               	movwf	fsr1h,c
 21369  006852  CFDF FFE7          	movff	indf2,indf1
 21370                           
 21371                           ; BSR set to: 0
 21372  006856  0101               	movlb	1	; () banked
 21373  006858  2B00               	incf	SyncEEPROMToGlobal@k& (0+255),f,b
 21374  00685A  D7A5               	goto	l14346
 21375  00685C                     l14356:
 21376                           
 21377                           ; BSR set to: 1
 21378  00685C  0101               	movlb	1	; () banked
 21379  00685E  2B02               	incf	SyncEEPROMToGlobal@j& (0+255),f,b
 21380  006860  D79A               	goto	l14340
 21381  006862                     l14360:
 21382                           
 21383                           ; BSR set to: 1
 21384  006862  0101               	movlb	1	; () banked
 21385  006864  2B01               	incf	SyncEEPROMToGlobal@i& (0+255),f,b
 21386                           
 21387                           ; BSR set to: 1
 21388  006866  0E0E               	movlw	14
 21389  006868  0101               	movlb	1	; () banked
 21390  00686A  6501               	cpfsgt	SyncEEPROMToGlobal@i& (0+255),b
 21391  00686C  D791               	goto	l14338
 21392  00686E  0012               	return	
 21393                           
 21394                           ; BSR set to: 1
 21395                           
 21396                           ; BSR set to: 1
 21397  006870  0012               	return		;funcret
 21398  006872                     __end_of_SyncEEPROMToGlobal:
 21399                           	opt stack 0
 21400                           tblptru	equ	0xFF8
 21401                           tblptrh	equ	0xFF7
 21402                           tblptrl	equ	0xFF6
 21403                           tablat	equ	0xFF5
 21404                           prodh	equ	0xFF4
 21405                           prodl	equ	0xFF3
 21406                           intcon	equ	0xFF2
 21407                           intcon2	equ	0xFF1
 21408                           indf0	equ	0xFEF
 21409                           postinc0	equ	0xFEE
 21410                           fsr0h	equ	0xFEA
 21411                           fsr0l	equ	0xFE9
 21412                           wreg	equ	0xFE8
 21413                           indf1	equ	0xFE7
 21414                           postdec1	equ	0xFE5
 21415                           fsr1h	equ	0xFE2
 21416                           fsr1l	equ	0xFE1
 21417                           indf2	equ	0xFDF
 21418                           postinc2	equ	0xFDE
 21419                           postdec2	equ	0xFDD
 21420                           fsr2h	equ	0xFDA
 21421                           fsr2l	equ	0xFD9
 21422                           status	equ	0xFD8
 21423                           
 21424 ;; *************** function _GetEEPROM *****************
 21425 ;; Defined at:
 21426 ;;		line 134 in file "EEPROM.c"
 21427 ;; Parameters:    Size  Location     Type
 21428 ;;  Temp            2   65[BANK0 ] PTR struct EEdata
 21429 ;;		 -> SyncEEPROMToGlobal@Temp(136), 
 21430 ;; Auto vars:     Size  Location     Type
 21431 ;;  j               1   72[BANK0 ] unsigned char 
 21432 ;;  i               1   71[BANK0 ] unsigned char 
 21433 ;;  k               1   70[BANK0 ] unsigned char 
 21434 ;;  Arrayspot       1   69[BANK0 ] unsigned char 
 21435 ;; Return value:  Size  Location     Type
 21436 ;;		None               void
 21437 ;; Registers used:
 21438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21439 ;; Tracked objects:
 21440 ;;		On entry : 0/0
 21441 ;;		On exit  : 0/0
 21442 ;;		Unchanged: 0/0
 21443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21445 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21446 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21447 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21448 ;;Total ram usage:        8 bytes
 21449 ;; Hardware stack levels used:    1
 21450 ;; Hardware stack levels required when called:    8
 21451 ;; This function calls:
 21452 ;;		_GetMemoryChar
 21453 ;;		_GetMemoryLong
 21454 ;; This function is called by:
 21455 ;;		_SyncEEPROMToGlobal
 21456 ;; This function uses a non-reentrant model
 21457 ;;
 21458                           
 21459                           	psect	text39
 21460  006BAC                     __ptext39:
 21461                           	opt stack 0
 21462  006BAC                     _GetEEPROM:
 21463                           	opt stack 20
 21464                           
 21465                           ;EEPROM.c: 136: unsigned char i,j,k;
 21466                           ;EEPROM.c: 137: unsigned char Arrayspot=5;
 21467                           
 21468                           ; BSR set to: 1
 21469                           ;incstack = 0
 21470  006BAC  0E05               	movlw	5
 21471  006BAE  0100               	movlb	0	; () banked
 21472  006BB0  6FA5               	movwf	GetEEPROM@Arrayspot& (0+255),b
 21473                           
 21474                           ; BSR set to: 0
 21475                           ;EEPROM.c: 139: Temp->BlueToothFlag = GetMemoryChar(0);
 21476  006BB2  0E00               	movlw	0
 21477  006BB4  ECAB  F049         	call	_GetMemoryChar
 21478  006BB8  0100               	movlb	0	; () banked
 21479  006BBA  5180               	movf	?_GetMemoryChar& (0+255),w,b
 21480  006BBC  C0A1  FFD9         	movff	GetEEPROM@Temp,fsr2l
 21481  006BC0  C0A2  FFDA         	movff	GetEEPROM@Temp+1,fsr2h
 21482  006BC4  6EDF               	movwf	indf2,c
 21483                           
 21484                           ; BSR set to: 0
 21485                           ;EEPROM.c: 140: Temp->SWNECcode = GetMemoryLong(1);
 21486  006BC6  0E01               	movlw	1
 21487  006BC8  EC9D  F036         	call	_GetMemoryLong
 21488  006BCC  0100               	movlb	0	; () banked
 21489  006BCE  EE20 F001          	lfsr	2,1
 21490  006BD2  51A1               	movf	GetEEPROM@Temp& (0+255),w,b
 21491  006BD4  26D9               	addwf	fsr2l,f,c
 21492  006BD6  51A2               	movf	(GetEEPROM@Temp+1)& (0+255),w,b
 21493  006BD8  22DA               	addwfc	fsr2h,f,c
 21494  006BDA  0100               	movlb	0	; () banked
 21495  006BDC  C080  FFDE         	movff	?_GetMemoryLong,postinc2
 21496  006BE0  0100               	movlb	0	; () banked
 21497  006BE2  C081  FFDE         	movff	?_GetMemoryLong+1,postinc2
 21498  006BE6  0100               	movlb	0	; () banked
 21499  006BE8  C082  FFDE         	movff	?_GetMemoryLong+2,postinc2
 21500  006BEC  0100               	movlb	0	; () banked
 21501  006BEE  C083  FFDE         	movff	?_GetMemoryLong+3,postinc2
 21502                           
 21503                           ;EEPROM.c: 141: for(i=0; i< 20; i++)
 21504  006BF2  0E00               	movlw	0
 21505  006BF4  0100               	movlb	0	; () banked
 21506  006BF6  6FA7               	movwf	GetEEPROM@i& (0+255),b
 21507  006BF8                     l13984:
 21508                           
 21509                           ; BSR set to: 0
 21510  006BF8  0E13               	movlw	19
 21511  006BFA  0100               	movlb	0	; () banked
 21512  006BFC  65A7               	cpfsgt	GetEEPROM@i& (0+255),b
 21513  006BFE  D001               	goto	l13988
 21514                           
 21515                           ; BSR set to: 0
 21516  006C00  D035               	goto	l14006
 21517  006C02                     l13988:
 21518                           
 21519                           ; BSR set to: 0
 21520                           ;EEPROM.c: 142: {
 21521                           ;EEPROM.c: 143: for(j=0; j < 2; j++)
 21522  006C02  0E00               	movlw	0
 21523  006C04  0100               	movlb	0	; () banked
 21524  006C06  6FA8               	movwf	GetEEPROM@j& (0+255),b
 21525  006C08                     l13990:
 21526                           
 21527                           ; BSR set to: 0
 21528  006C08  0E01               	movlw	1
 21529  006C0A  0100               	movlb	0	; () banked
 21530  006C0C  65A8               	cpfsgt	GetEEPROM@j& (0+255),b
 21531  006C0E  D001               	goto	l13994
 21532                           
 21533                           ; BSR set to: 0
 21534  006C10  D02A               	goto	l14002
 21535  006C12                     l13994:
 21536                           
 21537                           ; BSR set to: 0
 21538                           ;EEPROM.c: 144: {
 21539                           ;EEPROM.c: 145: Temp->RemoteButtonNEC[i][j] = GetMemoryChar(Arrayspot++);
 21540  006C12  0100               	movlb	0	; () banked
 21541  006C14  51A7               	movf	GetEEPROM@i& (0+255),w,b
 21542  006C16  0D02               	mullw	2
 21543  006C18  C0A1  F0A3         	movff	GetEEPROM@Temp,??_GetEEPROM
 21544  006C1C  C0A2  F0A4         	movff	GetEEPROM@Temp+1,??_GetEEPROM+1
 21545  006C20  50F3               	movf	prodl,w,c
 21546  006C22  0100               	movlb	0	; () banked
 21547  006C24  27A3               	addwf	??_GetEEPROM& (0+255),f,b
 21548  006C26  50F4               	movf	prodh,w,c
 21549  006C28  0100               	movlb	0	; () banked
 21550  006C2A  23A4               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21551  006C2C  0100               	movlb	0	; () banked
 21552  006C2E  51A8               	movf	GetEEPROM@j& (0+255),w,b
 21553  006C30  0D01               	mullw	1
 21554  006C32  50F3               	movf	prodl,w,c
 21555  006C34  0100               	movlb	0	; () banked
 21556  006C36  27A3               	addwf	??_GetEEPROM& (0+255),f,b
 21557  006C38  50F4               	movf	prodh,w,c
 21558  006C3A  0100               	movlb	0	; () banked
 21559  006C3C  23A4               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21560  006C3E  0E05               	movlw	5
 21561  006C40  0100               	movlb	0	; () banked
 21562  006C42  25A3               	addwf	??_GetEEPROM& (0+255),w,b
 21563  006C44  6ED9               	movwf	fsr2l,c
 21564  006C46  0E00               	movlw	0
 21565  006C48  0100               	movlb	0	; () banked
 21566  006C4A  21A4               	addwfc	(??_GetEEPROM+1)& (0+255),w,b
 21567  006C4C  6EDA               	movwf	fsr2h,c
 21568  006C4E  0100               	movlb	0	; () banked
 21569  006C50  51A5               	movf	GetEEPROM@Arrayspot& (0+255),w,b
 21570  006C52  ECAB  F049         	call	_GetMemoryChar
 21571  006C56  0100               	movlb	0	; () banked
 21572  006C58  5180               	movf	?_GetMemoryChar& (0+255),w,b
 21573  006C5A  6EDF               	movwf	indf2,c
 21574                           
 21575                           ; BSR set to: 0
 21576  006C5C  0100               	movlb	0	; () banked
 21577  006C5E  2BA5               	incf	GetEEPROM@Arrayspot& (0+255),f,b
 21578                           
 21579                           ; BSR set to: 0
 21580  006C60  0100               	movlb	0	; () banked
 21581  006C62  2BA8               	incf	GetEEPROM@j& (0+255),f,b
 21582  006C64  D7D1               	goto	l13990
 21583  006C66                     l14002:
 21584                           
 21585                           ; BSR set to: 0
 21586  006C66  0100               	movlb	0	; () banked
 21587  006C68  2BA7               	incf	GetEEPROM@i& (0+255),f,b
 21588  006C6A  D7C6               	goto	l13984
 21589  006C6C                     l14006:
 21590                           
 21591                           ; BSR set to: 0
 21592                           ;EEPROM.c: 146: }
 21593                           ;EEPROM.c: 147: }
 21594                           ;EEPROM.c: 148: Temp->EEPROMinitFlag = GetMemoryChar((2*20 + 5));
 21595  006C6C  0100               	movlb	0	; () banked
 21596  006C6E  EE20 F02D          	lfsr	2,45
 21597  006C72  51A1               	movf	GetEEPROM@Temp& (0+255),w,b
 21598  006C74  26D9               	addwf	fsr2l,f,c
 21599  006C76  51A2               	movf	(GetEEPROM@Temp+1)& (0+255),w,b
 21600  006C78  22DA               	addwfc	fsr2h,f,c
 21601  006C7A  0E2D               	movlw	45
 21602  006C7C  ECAB  F049         	call	_GetMemoryChar
 21603  006C80  0100               	movlb	0	; () banked
 21604  006C82  5180               	movf	?_GetMemoryChar& (0+255),w,b
 21605  006C84  6EDF               	movwf	indf2,c
 21606                           
 21607                           ; BSR set to: 0
 21608                           ;EEPROM.c: 149: Arrayspot=(2*20 + 7);
 21609  006C86  0E2F               	movlw	47
 21610  006C88  0100               	movlb	0	; () banked
 21611  006C8A  6FA5               	movwf	GetEEPROM@Arrayspot& (0+255),b
 21612                           
 21613                           ; BSR set to: 0
 21614                           ;EEPROM.c: 150: for(i=0; i< 15; i++)
 21615  006C8C  0E00               	movlw	0
 21616  006C8E  0100               	movlb	0	; () banked
 21617  006C90  6FA7               	movwf	GetEEPROM@i& (0+255),b
 21618                           
 21619                           ; BSR set to: 0
 21620  006C92  0E0E               	movlw	14
 21621  006C94  0100               	movlb	0	; () banked
 21622  006C96  65A7               	cpfsgt	GetEEPROM@i& (0+255),b
 21623  006C98  D002               	goto	l14016
 21624  006C9A  0012               	return	
 21625                           
 21626                           ; BSR set to: 0
 21627  006C9C  0012               	return	
 21628  006C9E                     l14016:
 21629                           
 21630                           ; BSR set to: 0
 21631                           ;EEPROM.c: 151: {
 21632                           ;EEPROM.c: 152: for(j=0; j < 3; j++)
 21633  006C9E  0E00               	movlw	0
 21634  006CA0  0100               	movlb	0	; () banked
 21635  006CA2  6FA8               	movwf	GetEEPROM@j& (0+255),b
 21636  006CA4                     l14018:
 21637                           
 21638                           ; BSR set to: 0
 21639  006CA4  0E02               	movlw	2
 21640  006CA6  0100               	movlb	0	; () banked
 21641  006CA8  65A8               	cpfsgt	GetEEPROM@j& (0+255),b
 21642  006CAA  D001               	goto	l14022
 21643                           
 21644                           ; BSR set to: 0
 21645  006CAC  D03E               	goto	l14040
 21646  006CAE                     l14022:
 21647                           
 21648                           ; BSR set to: 0
 21649                           ;EEPROM.c: 153: {
 21650                           ;EEPROM.c: 154: for(k=0; k < 2; k++)
 21651  006CAE  0E00               	movlw	0
 21652  006CB0  0100               	movlb	0	; () banked
 21653  006CB2  6FA6               	movwf	GetEEPROM@k& (0+255),b
 21654  006CB4                     l14024:
 21655                           
 21656                           ; BSR set to: 0
 21657  006CB4  0E01               	movlw	1
 21658  006CB6  0100               	movlb	0	; () banked
 21659  006CB8  65A6               	cpfsgt	GetEEPROM@k& (0+255),b
 21660  006CBA  D001               	goto	l14028
 21661                           
 21662                           ; BSR set to: 0
 21663  006CBC  D033               	goto	l14036
 21664  006CBE                     l14028:
 21665                           
 21666                           ; BSR set to: 0
 21667                           ;EEPROM.c: 155: {
 21668                           ;EEPROM.c: 156: Temp->RemoteButtonRF[i][j][k] = GetMemoryChar(Arrayspot++);
 21669  006CBE  0100               	movlb	0	; () banked
 21670  006CC0  51A7               	movf	GetEEPROM@i& (0+255),w,b
 21671  006CC2  0D06               	mullw	6
 21672  006CC4  C0A1  F0A3         	movff	GetEEPROM@Temp,??_GetEEPROM
 21673  006CC8  C0A2  F0A4         	movff	GetEEPROM@Temp+1,??_GetEEPROM+1
 21674  006CCC  50F3               	movf	prodl,w,c
 21675  006CCE  0100               	movlb	0	; () banked
 21676  006CD0  27A3               	addwf	??_GetEEPROM& (0+255),f,b
 21677  006CD2  50F4               	movf	prodh,w,c
 21678  006CD4  0100               	movlb	0	; () banked
 21679  006CD6  23A4               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21680  006CD8  0100               	movlb	0	; () banked
 21681  006CDA  51A8               	movf	GetEEPROM@j& (0+255),w,b
 21682  006CDC  0D02               	mullw	2
 21683  006CDE  50F3               	movf	prodl,w,c
 21684  006CE0  0100               	movlb	0	; () banked
 21685  006CE2  27A3               	addwf	??_GetEEPROM& (0+255),f,b
 21686  006CE4  50F4               	movf	prodh,w,c
 21687  006CE6  0100               	movlb	0	; () banked
 21688  006CE8  23A4               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21689  006CEA  0100               	movlb	0	; () banked
 21690  006CEC  51A6               	movf	GetEEPROM@k& (0+255),w,b
 21691  006CEE  0D01               	mullw	1
 21692  006CF0  50F3               	movf	prodl,w,c
 21693  006CF2  0100               	movlb	0	; () banked
 21694  006CF4  27A3               	addwf	??_GetEEPROM& (0+255),f,b
 21695  006CF6  50F4               	movf	prodh,w,c
 21696  006CF8  0100               	movlb	0	; () banked
 21697  006CFA  23A4               	addwfc	(??_GetEEPROM+1)& (0+255),f,b
 21698  006CFC  0E2E               	movlw	46
 21699  006CFE  0100               	movlb	0	; () banked
 21700  006D00  25A3               	addwf	??_GetEEPROM& (0+255),w,b
 21701  006D02  6ED9               	movwf	fsr2l,c
 21702  006D04  0E00               	movlw	0
 21703  006D06  0100               	movlb	0	; () banked
 21704  006D08  21A4               	addwfc	(??_GetEEPROM+1)& (0+255),w,b
 21705  006D0A  6EDA               	movwf	fsr2h,c
 21706  006D0C  0100               	movlb	0	; () banked
 21707  006D0E  51A5               	movf	GetEEPROM@Arrayspot& (0+255),w,b
 21708  006D10  ECAB  F049         	call	_GetMemoryChar
 21709  006D14  0100               	movlb	0	; () banked
 21710  006D16  5180               	movf	?_GetMemoryChar& (0+255),w,b
 21711  006D18  6EDF               	movwf	indf2,c
 21712                           
 21713                           ; BSR set to: 0
 21714  006D1A  0100               	movlb	0	; () banked
 21715  006D1C  2BA5               	incf	GetEEPROM@Arrayspot& (0+255),f,b
 21716                           
 21717                           ; BSR set to: 0
 21718  006D1E  0100               	movlb	0	; () banked
 21719  006D20  2BA6               	incf	GetEEPROM@k& (0+255),f,b
 21720  006D22  D7C8               	goto	l14024
 21721  006D24                     l14036:
 21722                           
 21723                           ; BSR set to: 0
 21724  006D24  0100               	movlb	0	; () banked
 21725  006D26  2BA8               	incf	GetEEPROM@j& (0+255),f,b
 21726  006D28  D7BD               	goto	l14018
 21727  006D2A                     l14040:
 21728                           
 21729                           ; BSR set to: 0
 21730  006D2A  0100               	movlb	0	; () banked
 21731  006D2C  2BA7               	incf	GetEEPROM@i& (0+255),f,b
 21732                           
 21733                           ; BSR set to: 0
 21734  006D2E  0E0E               	movlw	14
 21735  006D30  0100               	movlb	0	; () banked
 21736  006D32  65A7               	cpfsgt	GetEEPROM@i& (0+255),b
 21737  006D34  D7B4               	goto	l14016
 21738  006D36  0012               	return	
 21739                           
 21740                           ; BSR set to: 0
 21741                           
 21742                           ; BSR set to: 0
 21743  006D38  0012               	return		;funcret
 21744  006D3A                     __end_of_GetEEPROM:
 21745                           	opt stack 0
 21746                           tblptru	equ	0xFF8
 21747                           tblptrh	equ	0xFF7
 21748                           tblptrl	equ	0xFF6
 21749                           tablat	equ	0xFF5
 21750                           prodh	equ	0xFF4
 21751                           prodl	equ	0xFF3
 21752                           intcon	equ	0xFF2
 21753                           intcon2	equ	0xFF1
 21754                           indf0	equ	0xFEF
 21755                           postinc0	equ	0xFEE
 21756                           fsr0h	equ	0xFEA
 21757                           fsr0l	equ	0xFE9
 21758                           wreg	equ	0xFE8
 21759                           indf1	equ	0xFE7
 21760                           postdec1	equ	0xFE5
 21761                           fsr1h	equ	0xFE2
 21762                           fsr1l	equ	0xFE1
 21763                           indf2	equ	0xFDF
 21764                           postinc2	equ	0xFDE
 21765                           postdec2	equ	0xFDD
 21766                           fsr2h	equ	0xFDA
 21767                           fsr2l	equ	0xFD9
 21768                           status	equ	0xFD8
 21769                           
 21770 ;; *************** function _SetEEPROMdefault *****************
 21771 ;; Defined at:
 21772 ;;		line 255 in file "EEPROM.c"
 21773 ;; Parameters:    Size  Location     Type
 21774 ;;		None
 21775 ;; Auto vars:     Size  Location     Type
 21776 ;;  j               1   97[BANK0 ] unsigned char 
 21777 ;;  i               1   96[BANK0 ] unsigned char 
 21778 ;;  k               1   95[BANK0 ] unsigned char 
 21779 ;; Return value:  Size  Location     Type
 21780 ;;		None               void
 21781 ;; Registers used:
 21782 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21783 ;; Tracked objects:
 21784 ;;		On entry : 0/0
 21785 ;;		On exit  : 0/0
 21786 ;;		Unchanged: 0/0
 21787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21789 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21790 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21791 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21792 ;;Total ram usage:        5 bytes
 21793 ;; Hardware stack levels used:    1
 21794 ;; Hardware stack levels required when called:   11
 21795 ;; This function calls:
 21796 ;;		_SyncGlobalToEEPROM
 21797 ;; This function is called by:
 21798 ;;		_Init_System
 21799 ;; This function uses a non-reentrant model
 21800 ;;
 21801                           
 21802                           	psect	text40
 21803  007408                     __ptext40:
 21804                           	opt stack 0
 21805  007408                     _SetEEPROMdefault:
 21806                           	opt stack 18
 21807                           
 21808                           ;EEPROM.c: 257: unsigned char i,j,k;
 21809                           ;EEPROM.c: 259: Global.BlueToothFlag = 0;
 21810                           
 21811                           ; BSR set to: 0
 21812                           ;incstack = 0
 21813  007408  0E00               	movlw	0
 21814  00740A  0104               	movlb	4	; () banked
 21815  00740C  6F00               	movwf	_Global& (0+255),b
 21816                           
 21817                           ;EEPROM.c: 260: Global.SWNECcode = 0x00FF00FF;
 21818  00740E  0EFF               	movlw	255
 21819  007410  0104               	movlb	4	; () banked
 21820  007412  6F01               	movwf	(_Global+1)& (0+255),b
 21821  007414  0E00               	movlw	0
 21822  007416  6F02               	movwf	(_Global+2)& (0+255),b
 21823  007418  0EFF               	movlw	255
 21824  00741A  6F03               	movwf	(_Global+3)& (0+255),b
 21825  00741C  0E00               	movlw	0
 21826  00741E  6F04               	movwf	(_Global+4)& (0+255),b
 21827                           
 21828                           ;EEPROM.c: 261: Global.EEPROMinitFlag = 0;
 21829  007420  0E00               	movlw	0
 21830  007422  0104               	movlb	4	; () banked
 21831  007424  6F2D               	movwf	(_Global+45)& (0+255),b
 21832                           
 21833                           ;EEPROM.c: 262: for(i=0; i< 20; i++)
 21834  007426  0E00               	movlw	0
 21835  007428  0100               	movlb	0	; () banked
 21836  00742A  6FC0               	movwf	SetEEPROMdefault@i& (0+255),b
 21837  00742C                     l14376:
 21838                           
 21839                           ; BSR set to: 0
 21840  00742C  0E13               	movlw	19
 21841  00742E  0100               	movlb	0	; () banked
 21842  007430  65C0               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 21843  007432  D001               	goto	l14380
 21844                           
 21845                           ; BSR set to: 0
 21846  007434  D02F               	goto	l14396
 21847  007436                     l14380:
 21848                           
 21849                           ; BSR set to: 0
 21850                           ;EEPROM.c: 263: {
 21851                           ;EEPROM.c: 264: for(j=0; j < 2; j++)
 21852  007436  0E00               	movlw	0
 21853  007438  0100               	movlb	0	; () banked
 21854  00743A  6FC1               	movwf	SetEEPROMdefault@j& (0+255),b
 21855  00743C                     l14382:
 21856                           
 21857                           ; BSR set to: 0
 21858  00743C  0E01               	movlw	1
 21859  00743E  0100               	movlb	0	; () banked
 21860  007440  65C1               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 21861  007442  D001               	goto	l14386
 21862                           
 21863                           ; BSR set to: 0
 21864  007444  D024               	goto	l14392
 21865  007446                     l14386:
 21866                           
 21867                           ; BSR set to: 0
 21868                           ;EEPROM.c: 265: {
 21869                           ;EEPROM.c: 266: Global.RemoteButtonNEC[i][j] = 0x00;
 21870  007446  0100               	movlb	0	; () banked
 21871  007448  51C0               	movf	SetEEPROMdefault@i& (0+255),w,b
 21872  00744A  0D02               	mullw	2
 21873  00744C  0E00               	movlw	low _Global
 21874  00744E  0100               	movlb	0	; () banked
 21875  007450  6FBD               	movwf	??_SetEEPROMdefault& (0+255),b
 21876  007452  0E04               	movlw	high _Global
 21877  007454  0100               	movlb	0	; () banked
 21878  007456  6FBE               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 21879  007458  0E05               	movlw	5
 21880  00745A  0100               	movlb	0	; () banked
 21881  00745C  27BD               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21882  00745E  0E00               	movlw	0
 21883  007460  23BE               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21884  007462  50F3               	movf	prodl,w,c
 21885  007464  0100               	movlb	0	; () banked
 21886  007466  27BD               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21887  007468  50F4               	movf	prodh,w,c
 21888  00746A  0100               	movlb	0	; () banked
 21889  00746C  23BE               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21890  00746E  0100               	movlb	0	; () banked
 21891  007470  51C1               	movf	SetEEPROMdefault@j& (0+255),w,b
 21892  007472  0D01               	mullw	1
 21893  007474  50F3               	movf	prodl,w,c
 21894  007476  0100               	movlb	0	; () banked
 21895  007478  25BD               	addwf	??_SetEEPROMdefault& (0+255),w,b
 21896  00747A  6ED9               	movwf	fsr2l,c
 21897  00747C  50F4               	movf	prodh,w,c
 21898  00747E  0100               	movlb	0	; () banked
 21899  007480  21BE               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 21900  007482  6EDA               	movwf	fsr2h,c
 21901  007484  0E00               	movlw	0
 21902  007486  6EDF               	movwf	indf2,c
 21903                           
 21904                           ; BSR set to: 0
 21905  007488  0100               	movlb	0	; () banked
 21906  00748A  2BC1               	incf	SetEEPROMdefault@j& (0+255),f,b
 21907  00748C  D7D7               	goto	l14382
 21908  00748E                     l14392:
 21909                           
 21910                           ; BSR set to: 0
 21911  00748E  0100               	movlb	0	; () banked
 21912  007490  2BC0               	incf	SetEEPROMdefault@i& (0+255),f,b
 21913  007492  D7CC               	goto	l14376
 21914  007494                     l14396:
 21915                           
 21916                           ; BSR set to: 0
 21917                           ;EEPROM.c: 267: }
 21918                           ;EEPROM.c: 268: }
 21919                           ;EEPROM.c: 269: for(i=0; i< 15; i++)
 21920  007494  0E00               	movlw	0
 21921  007496  0100               	movlb	0	; () banked
 21922  007498  6FC0               	movwf	SetEEPROMdefault@i& (0+255),b
 21923  00749A                     l14398:
 21924                           
 21925                           ; BSR set to: 0
 21926  00749A  0E0E               	movlw	14
 21927  00749C  0100               	movlb	0	; () banked
 21928  00749E  65C0               	cpfsgt	SetEEPROMdefault@i& (0+255),b
 21929  0074A0  D001               	goto	l14402
 21930                           
 21931                           ; BSR set to: 0
 21932  0074A2  D043               	goto	l14428
 21933  0074A4                     l14402:
 21934                           
 21935                           ; BSR set to: 0
 21936                           ;EEPROM.c: 270: {
 21937                           ;EEPROM.c: 271: for(j=0; j < 3; j++)
 21938  0074A4  0E00               	movlw	0
 21939  0074A6  0100               	movlb	0	; () banked
 21940  0074A8  6FC1               	movwf	SetEEPROMdefault@j& (0+255),b
 21941  0074AA                     l14404:
 21942                           
 21943                           ; BSR set to: 0
 21944  0074AA  0E02               	movlw	2
 21945  0074AC  0100               	movlb	0	; () banked
 21946  0074AE  65C1               	cpfsgt	SetEEPROMdefault@j& (0+255),b
 21947  0074B0  D001               	goto	l14408
 21948                           
 21949                           ; BSR set to: 0
 21950  0074B2  D038               	goto	l14424
 21951  0074B4                     l14408:
 21952                           
 21953                           ; BSR set to: 0
 21954                           ;EEPROM.c: 272: {
 21955                           ;EEPROM.c: 273: for(k=0; k < 2; k++)
 21956  0074B4  0E00               	movlw	0
 21957  0074B6  0100               	movlb	0	; () banked
 21958  0074B8  6FBF               	movwf	SetEEPROMdefault@k& (0+255),b
 21959  0074BA                     l14410:
 21960                           
 21961                           ; BSR set to: 0
 21962  0074BA  0E01               	movlw	1
 21963  0074BC  0100               	movlb	0	; () banked
 21964  0074BE  65BF               	cpfsgt	SetEEPROMdefault@k& (0+255),b
 21965  0074C0  D001               	goto	l14414
 21966                           
 21967                           ; BSR set to: 0
 21968  0074C2  D02D               	goto	l14420
 21969  0074C4                     l14414:
 21970                           
 21971                           ; BSR set to: 0
 21972                           ;EEPROM.c: 274: {
 21973                           ;EEPROM.c: 275: Global.RemoteButtonRF[i][j][k] = 0x00;
 21974  0074C4  0100               	movlb	0	; () banked
 21975  0074C6  51C0               	movf	SetEEPROMdefault@i& (0+255),w,b
 21976  0074C8  0D06               	mullw	6
 21977  0074CA  0E00               	movlw	low _Global
 21978  0074CC  0100               	movlb	0	; () banked
 21979  0074CE  6FBD               	movwf	??_SetEEPROMdefault& (0+255),b
 21980  0074D0  0E04               	movlw	high _Global
 21981  0074D2  0100               	movlb	0	; () banked
 21982  0074D4  6FBE               	movwf	(??_SetEEPROMdefault+1)& (0+255),b
 21983  0074D6  0E2E               	movlw	46
 21984  0074D8  0100               	movlb	0	; () banked
 21985  0074DA  27BD               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21986  0074DC  0E00               	movlw	0
 21987  0074DE  23BE               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21988  0074E0  50F3               	movf	prodl,w,c
 21989  0074E2  0100               	movlb	0	; () banked
 21990  0074E4  27BD               	addwf	??_SetEEPROMdefault& (0+255),f,b
 21991  0074E6  50F4               	movf	prodh,w,c
 21992  0074E8  0100               	movlb	0	; () banked
 21993  0074EA  23BE               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 21994  0074EC  0100               	movlb	0	; () banked
 21995  0074EE  51C1               	movf	SetEEPROMdefault@j& (0+255),w,b
 21996  0074F0  0D02               	mullw	2
 21997  0074F2  50F3               	movf	prodl,w,c
 21998  0074F4  0100               	movlb	0	; () banked
 21999  0074F6  27BD               	addwf	??_SetEEPROMdefault& (0+255),f,b
 22000  0074F8  50F4               	movf	prodh,w,c
 22001  0074FA  0100               	movlb	0	; () banked
 22002  0074FC  23BE               	addwfc	(??_SetEEPROMdefault+1)& (0+255),f,b
 22003  0074FE  0100               	movlb	0	; () banked
 22004  007500  51BF               	movf	SetEEPROMdefault@k& (0+255),w,b
 22005  007502  0D01               	mullw	1
 22006  007504  50F3               	movf	prodl,w,c
 22007  007506  0100               	movlb	0	; () banked
 22008  007508  25BD               	addwf	??_SetEEPROMdefault& (0+255),w,b
 22009  00750A  6ED9               	movwf	fsr2l,c
 22010  00750C  50F4               	movf	prodh,w,c
 22011  00750E  0100               	movlb	0	; () banked
 22012  007510  21BE               	addwfc	(??_SetEEPROMdefault+1)& (0+255),w,b
 22013  007512  6EDA               	movwf	fsr2h,c
 22014  007514  0E00               	movlw	0
 22015  007516  6EDF               	movwf	indf2,c
 22016                           
 22017                           ; BSR set to: 0
 22018  007518  0100               	movlb	0	; () banked
 22019  00751A  2BBF               	incf	SetEEPROMdefault@k& (0+255),f,b
 22020  00751C  D7CE               	goto	l14410
 22021  00751E                     l14420:
 22022                           
 22023                           ; BSR set to: 0
 22024  00751E  0100               	movlb	0	; () banked
 22025  007520  2BC1               	incf	SetEEPROMdefault@j& (0+255),f,b
 22026  007522  D7C3               	goto	l14404
 22027  007524                     l14424:
 22028                           
 22029                           ; BSR set to: 0
 22030  007524  0100               	movlb	0	; () banked
 22031  007526  2BC0               	incf	SetEEPROMdefault@i& (0+255),f,b
 22032  007528  D7B8               	goto	l14398
 22033  00752A                     l14428:
 22034                           
 22035                           ; BSR set to: 0
 22036                           ;EEPROM.c: 276: }
 22037                           ;EEPROM.c: 277: }
 22038                           ;EEPROM.c: 278: }
 22039                           ;EEPROM.c: 279: SyncGlobalToEEPROM();
 22040  00752A  EC1C  F048         	call	_SyncGlobalToEEPROM	;wreg free
 22041  00752E  0012               	return		;funcret
 22042  007530                     __end_of_SetEEPROMdefault:
 22043                           	opt stack 0
 22044                           tblptru	equ	0xFF8
 22045                           tblptrh	equ	0xFF7
 22046                           tblptrl	equ	0xFF6
 22047                           tablat	equ	0xFF5
 22048                           prodh	equ	0xFF4
 22049                           prodl	equ	0xFF3
 22050                           intcon	equ	0xFF2
 22051                           intcon2	equ	0xFF1
 22052                           indf0	equ	0xFEF
 22053                           postinc0	equ	0xFEE
 22054                           fsr0h	equ	0xFEA
 22055                           fsr0l	equ	0xFE9
 22056                           wreg	equ	0xFE8
 22057                           indf1	equ	0xFE7
 22058                           postdec1	equ	0xFE5
 22059                           fsr1h	equ	0xFE2
 22060                           fsr1l	equ	0xFE1
 22061                           indf2	equ	0xFDF
 22062                           postinc2	equ	0xFDE
 22063                           postdec2	equ	0xFDD
 22064                           fsr2h	equ	0xFDA
 22065                           fsr2l	equ	0xFD9
 22066                           status	equ	0xFD8
 22067                           
 22068 ;; *************** function _InitUART *****************
 22069 ;; Defined at:
 22070 ;;		line 80 in file "UART.c"
 22071 ;; Parameters:    Size  Location     Type
 22072 ;;  Baud            4  113[BANK0 ] unsigned long 
 22073 ;; Auto vars:     Size  Location     Type
 22074 ;;  temp            4    6[BANK1 ] unsigned long 
 22075 ;;  spbrg           2    3[BANK1 ] unsigned int 
 22076 ;;  config          1    5[BANK1 ] unsigned char 
 22077 ;; Return value:  Size  Location     Type
 22078 ;;		None               void
 22079 ;; Registers used:
 22080 ;;		wreg, status,2, status,0, cstack
 22081 ;; Tracked objects:
 22082 ;;		On entry : 0/0
 22083 ;;		On exit  : 0/0
 22084 ;;		Unchanged: 0/0
 22085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22086 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22087 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22088 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22089 ;;      Totals:         0       8      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22090 ;;Total ram usage:       18 bytes
 22091 ;; Hardware stack levels used:    1
 22092 ;; Hardware stack levels required when called:    9
 22093 ;; This function calls:
 22094 ;;		_ClearUSART
 22095 ;;		_Local_CloseUSART
 22096 ;;		_OpenUSART
 22097 ;;		_Round
 22098 ;;		___fttol
 22099 ;;		___lldiv
 22100 ;;		___lltoft
 22101 ;; This function is called by:
 22102 ;;		_Init_System
 22103 ;; This function uses a non-reentrant model
 22104 ;;
 22105                           
 22106                           	psect	text41
 22107  0079B2                     __ptext41:
 22108                           	opt stack 0
 22109  0079B2                     _InitUART:
 22110                           	opt stack 20
 22111                           
 22112                           ;UART.c: 82: unsigned long temp;
 22113                           ;UART.c: 83: unsigned char config = 0;
 22114                           
 22115                           ;incstack = 0
 22116  0079B2  0E00               	movlw	0
 22117  0079B4  0101               	movlb	1	; () banked
 22118  0079B6  6F05               	movwf	InitUART@config& (0+255),b
 22119                           
 22120                           ; BSR set to: 1
 22121                           ;UART.c: 84: unsigned int spbrg;
 22122                           ;UART.c: 86: Local_CloseUSART();
 22123  0079B8  EC7A  F04A         	call	_Local_CloseUSART	;wreg free
 22124                           
 22125                           ;UART.c: 91: config |= 0b00001000;
 22126  0079BC  0101               	movlb	1	; () banked
 22127  0079BE  8705               	bsf	InitUART@config& (0+255),3,b
 22128                           
 22129                           ; BSR set to: 1
 22130                           ;UART.c: 92: config |= 0b00010000;
 22131  0079C0  0101               	movlb	1	; () banked
 22132  0079C2  8905               	bsf	InitUART@config& (0+255),4,b
 22133                           
 22134                           ; BSR set to: 1
 22135                           ;UART.c: 93: config &= ~0b00000010;
 22136  0079C4  0101               	movlb	1	; () banked
 22137  0079C6  9305               	bcf	InitUART@config& (0+255),1,b
 22138                           
 22139                           ; BSR set to: 1
 22140                           ;UART.c: 96: temp = (64000000L / Baud) - 1;
 22141  0079C8  0E00               	movlw	0
 22142  0079CA  0100               	movlb	0	; () banked
 22143  0079CC  6F7C               	movwf	___lldiv@dividend& (0+255),b
 22144  0079CE  0E90               	movlw	144
 22145  0079D0  6F7D               	movwf	(___lldiv@dividend+1)& (0+255),b
 22146  0079D2  0ED0               	movlw	208
 22147  0079D4  6F7E               	movwf	(___lldiv@dividend+2)& (0+255),b
 22148  0079D6  0E03               	movlw	3
 22149  0079D8  6F7F               	movwf	(___lldiv@dividend+3)& (0+255),b
 22150  0079DA  C0D1  F080         	movff	InitUART@Baud,___lldiv@divisor
 22151  0079DE  C0D2  F081         	movff	InitUART@Baud+1,___lldiv@divisor+1
 22152  0079E2  C0D3  F082         	movff	InitUART@Baud+2,___lldiv@divisor+2
 22153  0079E6  C0D4  F083         	movff	InitUART@Baud+3,___lldiv@divisor+3
 22154  0079EA  EC8C  F03F         	call	___lldiv	;wreg free
 22155  0079EE  0EFF               	movlw	255
 22156  0079F0  0100               	movlb	0	; () banked
 22157  0079F2  257C               	addwf	?___lldiv& (0+255),w,b
 22158  0079F4  0101               	movlb	1	; () banked
 22159  0079F6  6F06               	movwf	InitUART@temp& (0+255),b
 22160  0079F8  0EFF               	movlw	255
 22161  0079FA  0100               	movlb	0	; () banked
 22162  0079FC  217D               	addwfc	(?___lldiv+1)& (0+255),w,b
 22163  0079FE  0101               	movlb	1	; () banked
 22164  007A00  6F07               	movwf	(InitUART@temp+1)& (0+255),b
 22165  007A02  0EFF               	movlw	255
 22166  007A04  0100               	movlb	0	; () banked
 22167  007A06  217E               	addwfc	(?___lldiv+2)& (0+255),w,b
 22168  007A08  0101               	movlb	1	; () banked
 22169  007A0A  6F08               	movwf	(InitUART@temp+2)& (0+255),b
 22170  007A0C  0EFF               	movlw	255
 22171  007A0E  0100               	movlb	0	; () banked
 22172  007A10  217F               	addwfc	(?___lldiv+3)& (0+255),w,b
 22173  007A12  0101               	movlb	1	; () banked
 22174  007A14  6F09               	movwf	(InitUART@temp+3)& (0+255),b
 22175                           
 22176                           ; BSR set to: 1
 22177                           ;UART.c: 97: temp = (temp >> 2) - 1;
 22178  007A16  C106  F0D5         	movff	InitUART@temp,??_InitUART
 22179  007A1A  C107  F0D6         	movff	InitUART@temp+1,??_InitUART+1
 22180  007A1E  C108  F0D7         	movff	InitUART@temp+2,??_InitUART+2
 22181  007A22  C109  F0D8         	movff	InitUART@temp+3,??_InitUART+3
 22182  007A26  0E03               	movlw	3
 22183  007A28  D006               	goto	u17750
 22184  007A2A                     u17755:
 22185  007A2A  0100               	movlb	0	; () banked
 22186  007A2C  90D8               	bcf	status,0,c
 22187  007A2E  33D8               	rrcf	(??_InitUART+3)& (0+255),f,b
 22188  007A30  33D7               	rrcf	(??_InitUART+2)& (0+255),f,b
 22189  007A32  33D6               	rrcf	(??_InitUART+1)& (0+255),f,b
 22190  007A34  33D5               	rrcf	??_InitUART& (0+255),f,b
 22191  007A36                     u17750:
 22192  007A36  2EE8               	decfsz	wreg,f,c
 22193  007A38  D7F8               	goto	u17755
 22194  007A3A  0EFF               	movlw	255
 22195  007A3C  0100               	movlb	0	; () banked
 22196  007A3E  25D5               	addwf	??_InitUART& (0+255),w,b
 22197  007A40  0101               	movlb	1	; () banked
 22198  007A42  6F06               	movwf	InitUART@temp& (0+255),b
 22199  007A44  0EFF               	movlw	255
 22200  007A46  0100               	movlb	0	; () banked
 22201  007A48  21D6               	addwfc	(??_InitUART+1)& (0+255),w,b
 22202  007A4A  0101               	movlb	1	; () banked
 22203  007A4C  6F07               	movwf	(InitUART@temp+1)& (0+255),b
 22204  007A4E  0EFF               	movlw	255
 22205  007A50  0100               	movlb	0	; () banked
 22206  007A52  21D7               	addwfc	(??_InitUART+2)& (0+255),w,b
 22207  007A54  0101               	movlb	1	; () banked
 22208  007A56  6F08               	movwf	(InitUART@temp+2)& (0+255),b
 22209  007A58  0EFF               	movlw	255
 22210  007A5A  0100               	movlb	0	; () banked
 22211  007A5C  21D8               	addwfc	(??_InitUART+3)& (0+255),w,b
 22212  007A5E  0101               	movlb	1	; () banked
 22213  007A60  6F09               	movwf	(InitUART@temp+3)& (0+255),b
 22214                           
 22215                           ; BSR set to: 1
 22216                           ;UART.c: 98: spbrg = (unsigned int) Round(temp);
 22217  007A62  C106  F084         	movff	InitUART@temp,___lltoft@c
 22218  007A66  C107  F085         	movff	InitUART@temp+1,___lltoft@c+1
 22219  007A6A  C108  F086         	movff	InitUART@temp+2,___lltoft@c+2
 22220  007A6E  C109  F087         	movff	InitUART@temp+3,___lltoft@c+3
 22221  007A72  EC6D  F044         	call	___lltoft	;wreg free
 22222  007A76  C084  F0CA         	movff	?___lltoft,Round@input
 22223  007A7A  C085  F0CB         	movff	?___lltoft+1,Round@input+1
 22224  007A7E  C086  F0CC         	movff	?___lltoft+2,Round@input+2
 22225  007A82  ECD1  F045         	call	_Round	;wreg free
 22226  007A86  C0CA  F100         	movff	?_Round,_InitUART$3806
 22227  007A8A  C0CB  F101         	movff	?_Round+1,_InitUART$3806+1
 22228  007A8E  C0CC  F102         	movff	?_Round+2,_InitUART$3806+2
 22229                           
 22230                           ;UART.c: 98: spbrg = (unsigned int) Round(temp);
 22231  007A92  C100  F0BB         	movff	_InitUART$3806,___fttol@f1
 22232  007A96  C101  F0BC         	movff	_InitUART$3806+1,___fttol@f1+1
 22233  007A9A  C102  F0BD         	movff	_InitUART$3806+2,___fttol@f1+2
 22234  007A9E  ECB4  F038         	call	___fttol	;wreg free
 22235  007AA2  C0BB  F103         	movff	?___fttol,InitUART@spbrg
 22236  007AA6  C0BC  F104         	movff	?___fttol+1,InitUART@spbrg+1
 22237                           
 22238                           ;UART.c: 100: BAUDCONbits.BRG16 = 1;
 22239  007AAA  86B8               	bsf	4024,3,c	;volatile
 22240                           
 22241                           ;UART.c: 102: ClearUSART();
 22242  007AAC  EC81  F04A         	call	_ClearUSART	;wreg free
 22243                           
 22244                           ;UART.c: 103: OpenUSART(config, spbrg);
 22245  007AB0  C103  F07C         	movff	InitUART@spbrg,OpenUSART@spbrg
 22246  007AB4  C104  F07D         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 22247  007AB8  0101               	movlb	1	; () banked
 22248  007ABA  5105               	movf	InitUART@config& (0+255),w,b
 22249  007ABC  ECAD  F044         	call	_OpenUSART
 22250                           
 22251                           ;UART.c: 105: PIR1bits.RCIF = 0;
 22252  007AC0  9A9E               	bcf	3998,5,c	;volatile
 22253                           
 22254                           ;UART.c: 106: PIE1bits.RCIE = 1;
 22255  007AC2  8A9D               	bsf	3997,5,c	;volatile
 22256                           
 22257                           ;UART.c: 107: INTCONbits.PEIE = 1;
 22258  007AC4  8CF2               	bsf	intcon,6,c	;volatile
 22259  007AC6  0012               	return		;funcret
 22260  007AC8                     __end_of_InitUART:
 22261                           	opt stack 0
 22262                           tblptru	equ	0xFF8
 22263                           tblptrh	equ	0xFF7
 22264                           tblptrl	equ	0xFF6
 22265                           tablat	equ	0xFF5
 22266                           prodh	equ	0xFF4
 22267                           prodl	equ	0xFF3
 22268                           intcon	equ	0xFF2
 22269                           intcon2	equ	0xFF1
 22270                           indf0	equ	0xFEF
 22271                           postinc0	equ	0xFEE
 22272                           fsr0h	equ	0xFEA
 22273                           fsr0l	equ	0xFE9
 22274                           wreg	equ	0xFE8
 22275                           indf1	equ	0xFE7
 22276                           postdec1	equ	0xFE5
 22277                           fsr1h	equ	0xFE2
 22278                           fsr1l	equ	0xFE1
 22279                           indf2	equ	0xFDF
 22280                           postinc2	equ	0xFDE
 22281                           postdec2	equ	0xFDD
 22282                           fsr2h	equ	0xFDA
 22283                           fsr2l	equ	0xFD9
 22284                           status	equ	0xFD8
 22285                           
 22286 ;; *************** function _Round *****************
 22287 ;; Defined at:
 22288 ;;		line 155 in file "MISC.c"
 22289 ;; Parameters:    Size  Location     Type
 22290 ;;  input           3  106[BANK0 ] unsigned char 
 22291 ;; Auto vars:     Size  Location     Type
 22292 ;;  temp            4  109[BANK0 ] long 
 22293 ;; Return value:  Size  Location     Type
 22294 ;;                  3  106[BANK0 ] long 
 22295 ;; Registers used:
 22296 ;;		wreg, status,2, status,0, cstack
 22297 ;; Tracked objects:
 22298 ;;		On entry : 0/0
 22299 ;;		On exit  : 0/0
 22300 ;;		Unchanged: 0/0
 22301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22302 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22303 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22305 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22306 ;;Total ram usage:        7 bytes
 22307 ;; Hardware stack levels used:    1
 22308 ;; Hardware stack levels required when called:    8
 22309 ;; This function calls:
 22310 ;;		___altoft
 22311 ;;		___ftadd
 22312 ;;		___fttol
 22313 ;; This function is called by:
 22314 ;;		_InitUART
 22315 ;; This function uses a non-reentrant model
 22316 ;;
 22317                           
 22318                           	psect	text42
 22319  008BA2                     __ptext42:
 22320                           	opt stack 0
 22321  008BA2                     _Round:
 22322                           	opt stack 20
 22323                           
 22324                           ;MISC.c: 157: long temp = (long)(input + 0.5);
 22325                           
 22326                           ;incstack = 0
 22327  008BA2  0E00               	movlw	0
 22328  008BA4  0100               	movlb	0	; () banked
 22329  008BA6  6FB2               	movwf	___ftadd@f2& (0+255),b
 22330  008BA8  0E00               	movlw	0
 22331  008BAA  0100               	movlb	0	; () banked
 22332  008BAC  6FB3               	movwf	(___ftadd@f2+1)& (0+255),b
 22333  008BAE  0E3F               	movlw	63
 22334  008BB0  0100               	movlb	0	; () banked
 22335  008BB2  6FB4               	movwf	(___ftadd@f2+2)& (0+255),b
 22336  008BB4  C0CA  F0AF         	movff	Round@input,___ftadd@f1
 22337  008BB8  C0CB  F0B0         	movff	Round@input+1,___ftadd@f1+1
 22338  008BBC  C0CC  F0B1         	movff	Round@input+2,___ftadd@f1+2
 22339  008BC0  ECBD  F02D         	call	___ftadd	;wreg free
 22340  008BC4  C0AF  F0BB         	movff	?___ftadd,___fttol@f1
 22341  008BC8  C0B0  F0BC         	movff	?___ftadd+1,___fttol@f1+1
 22342  008BCC  C0B1  F0BD         	movff	?___ftadd+2,___fttol@f1+2
 22343  008BD0  ECB4  F038         	call	___fttol	;wreg free
 22344  008BD4  C0BB  F0CD         	movff	?___fttol,Round@temp
 22345  008BD8  C0BC  F0CE         	movff	?___fttol+1,Round@temp+1
 22346  008BDC  C0BD  F0CF         	movff	?___fttol+2,Round@temp+2
 22347  008BE0  C0BE  F0D0         	movff	?___fttol+3,Round@temp+3
 22348                           
 22349                           ;MISC.c: 159: return temp;
 22350  008BE4  C0CD  F084         	movff	Round@temp,___altoft@c
 22351  008BE8  C0CE  F085         	movff	Round@temp+1,___altoft@c+1
 22352  008BEC  C0CF  F086         	movff	Round@temp+2,___altoft@c+2
 22353  008BF0  C0D0  F087         	movff	Round@temp+3,___altoft@c+3
 22354  008BF4  ECB3  F042         	call	___altoft	;wreg free
 22355  008BF8  C084  F0CA         	movff	?___altoft,?_Round
 22356  008BFC  C085  F0CB         	movff	?___altoft+1,?_Round+1
 22357  008C00  C086  F0CC         	movff	?___altoft+2,?_Round+2
 22358  008C04  0012               	return	
 22359  008C06  0012               	return		;funcret
 22360  008C08                     __end_of_Round:
 22361                           	opt stack 0
 22362                           tblptru	equ	0xFF8
 22363                           tblptrh	equ	0xFF7
 22364                           tblptrl	equ	0xFF6
 22365                           tablat	equ	0xFF5
 22366                           prodh	equ	0xFF4
 22367                           prodl	equ	0xFF3
 22368                           intcon	equ	0xFF2
 22369                           intcon2	equ	0xFF1
 22370                           indf0	equ	0xFEF
 22371                           postinc0	equ	0xFEE
 22372                           fsr0h	equ	0xFEA
 22373                           fsr0l	equ	0xFE9
 22374                           wreg	equ	0xFE8
 22375                           indf1	equ	0xFE7
 22376                           postdec1	equ	0xFE5
 22377                           fsr1h	equ	0xFE2
 22378                           fsr1l	equ	0xFE1
 22379                           indf2	equ	0xFDF
 22380                           postinc2	equ	0xFDE
 22381                           postdec2	equ	0xFDD
 22382                           fsr2h	equ	0xFDA
 22383                           fsr2l	equ	0xFD9
 22384                           status	equ	0xFD8
 22385                           
 22386 ;; *************** function ___altoft *****************
 22387 ;; Defined at:
 22388 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
 22389 ;; Parameters:    Size  Location     Type
 22390 ;;  c               4   36[BANK0 ] long 
 22391 ;; Auto vars:     Size  Location     Type
 22392 ;;  sign            1   45[BANK0 ] unsigned char 
 22393 ;;  exp             1   44[BANK0 ] unsigned char 
 22394 ;; Return value:  Size  Location     Type
 22395 ;;                  3   36[BANK0 ] float 
 22396 ;; Registers used:
 22397 ;;		wreg, status,2, status,0, cstack
 22398 ;; Tracked objects:
 22399 ;;		On entry : 0/0
 22400 ;;		On exit  : 0/0
 22401 ;;		Unchanged: 0/0
 22402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22403 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22404 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22405 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22406 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22407 ;;Total ram usage:       10 bytes
 22408 ;; Hardware stack levels used:    1
 22409 ;; Hardware stack levels required when called:    7
 22410 ;; This function calls:
 22411 ;;		___ftpack
 22412 ;; This function is called by:
 22413 ;;		_Round
 22414 ;; This function uses a non-reentrant model
 22415 ;;
 22416                           
 22417                           	psect	text43
 22418  008566                     __ptext43:
 22419                           	opt stack 0
 22420  008566                     ___altoft:
 22421                           	opt stack 20
 22422                           
 22423                           ;incstack = 0
 22424  008566  0E00               	movlw	0
 22425  008568  0100               	movlb	0	; () banked
 22426  00856A  6F8D               	movwf	___altoft@sign& (0+255),b
 22427  00856C  0E8E               	movlw	142
 22428  00856E  0100               	movlb	0	; () banked
 22429  008570  6F8C               	movwf	___altoft@exp& (0+255),b
 22430                           
 22431                           ; BSR set to: 0
 22432  008572  0100               	movlb	0	; () banked
 22433  008574  AF87               	btfss	(___altoft@c+3)& (0+255),7,b
 22434  008576  D016               	goto	l13770
 22435                           
 22436                           ; BSR set to: 0
 22437  008578  0100               	movlb	0	; () banked
 22438  00857A  1F87               	comf	(___altoft@c+3)& (0+255),f,b
 22439  00857C  1F86               	comf	(___altoft@c+2)& (0+255),f,b
 22440  00857E  1F85               	comf	(___altoft@c+1)& (0+255),f,b
 22441  008580  6D84               	negf	___altoft@c& (0+255),b
 22442  008582  0E00               	movlw	0
 22443  008584  2385               	addwfc	(___altoft@c+1)& (0+255),f,b
 22444  008586  2386               	addwfc	(___altoft@c+2)& (0+255),f,b
 22445  008588  2387               	addwfc	(___altoft@c+3)& (0+255),f,b
 22446                           
 22447                           ; BSR set to: 0
 22448  00858A  0E01               	movlw	1
 22449  00858C  0100               	movlb	0	; () banked
 22450  00858E  6F8D               	movwf	___altoft@sign& (0+255),b
 22451                           
 22452                           ; BSR set to: 0
 22453  008590  D009               	goto	l13770
 22454  008592                     l13768:
 22455                           
 22456                           ; BSR set to: 0
 22457  008592  0100               	movlb	0	; () banked
 22458  008594  90D8               	bcf	status,0,c
 22459  008596  3387               	rrcf	(___altoft@c+3)& (0+255),f,b
 22460  008598  3386               	rrcf	(___altoft@c+2)& (0+255),f,b
 22461  00859A  3385               	rrcf	(___altoft@c+1)& (0+255),f,b
 22462  00859C  3384               	rrcf	___altoft@c& (0+255),f,b
 22463  00859E  0100               	movlb	0	; () banked
 22464  0085A0  2B8C               	incf	___altoft@exp& (0+255),f,b
 22465  0085A2  D000               	goto	l13770
 22466  0085A4                     l13770:
 22467                           
 22468                           ; BSR set to: 0
 22469  0085A4  0E00               	movlw	0
 22470  0085A6  0100               	movlb	0	; () banked
 22471  0085A8  1584               	andwf	___altoft@c& (0+255),w,b
 22472  0085AA  0100               	movlb	0	; () banked
 22473  0085AC  6F88               	movwf	??___altoft& (0+255),b
 22474  0085AE  0E00               	movlw	0
 22475  0085B0  0100               	movlb	0	; () banked
 22476  0085B2  1585               	andwf	(___altoft@c+1)& (0+255),w,b
 22477  0085B4  0100               	movlb	0	; () banked
 22478  0085B6  6F89               	movwf	(??___altoft+1)& (0+255),b
 22479  0085B8  0E00               	movlw	0
 22480  0085BA  0100               	movlb	0	; () banked
 22481  0085BC  1586               	andwf	(___altoft@c+2)& (0+255),w,b
 22482  0085BE  0100               	movlb	0	; () banked
 22483  0085C0  6F8A               	movwf	(??___altoft+2)& (0+255),b
 22484  0085C2  0EFF               	movlw	255
 22485  0085C4  0100               	movlb	0	; () banked
 22486  0085C6  1587               	andwf	(___altoft@c+3)& (0+255),w,b
 22487  0085C8  0100               	movlb	0	; () banked
 22488  0085CA  6F8B               	movwf	(??___altoft+3)& (0+255),b
 22489  0085CC  0100               	movlb	0	; () banked
 22490  0085CE  5188               	movf	??___altoft& (0+255),w,b
 22491  0085D0  0100               	movlb	0	; () banked
 22492  0085D2  1189               	iorwf	(??___altoft+1)& (0+255),w,b
 22493  0085D4  0100               	movlb	0	; () banked
 22494  0085D6  118A               	iorwf	(??___altoft+2)& (0+255),w,b
 22495  0085D8  0100               	movlb	0	; () banked
 22496  0085DA  118B               	iorwf	(??___altoft+3)& (0+255),w,b
 22497  0085DC  A4D8               	btfss	status,2,c
 22498  0085DE  D7D9               	goto	l13768
 22499                           
 22500                           ; BSR set to: 0
 22501                           
 22502                           ; BSR set to: 0
 22503  0085E0  C084  F07C         	movff	___altoft@c,___ftpack@arg
 22504  0085E4  C085  F07D         	movff	___altoft@c+1,___ftpack@arg+1
 22505  0085E8  C086  F07E         	movff	___altoft@c+2,___ftpack@arg+2
 22506  0085EC  C08C  F07F         	movff	___altoft@exp,___ftpack@exp
 22507  0085F0  C08D  F080         	movff	___altoft@sign,___ftpack@sign
 22508  0085F4  EC2B  F03B         	call	___ftpack	;wreg free
 22509  0085F8  C07C  F084         	movff	?___ftpack,?___altoft
 22510  0085FC  C07D  F085         	movff	?___ftpack+1,?___altoft+1
 22511  008600  C07E  F086         	movff	?___ftpack+2,?___altoft+2
 22512  008604  0012               	return	
 22513  008606  0012               	return		;funcret
 22514  008608                     __end_of___altoft:
 22515                           	opt stack 0
 22516                           tblptru	equ	0xFF8
 22517                           tblptrh	equ	0xFF7
 22518                           tblptrl	equ	0xFF6
 22519                           tablat	equ	0xFF5
 22520                           prodh	equ	0xFF4
 22521                           prodl	equ	0xFF3
 22522                           intcon	equ	0xFF2
 22523                           intcon2	equ	0xFF1
 22524                           indf0	equ	0xFEF
 22525                           postinc0	equ	0xFEE
 22526                           fsr0h	equ	0xFEA
 22527                           fsr0l	equ	0xFE9
 22528                           wreg	equ	0xFE8
 22529                           indf1	equ	0xFE7
 22530                           postdec1	equ	0xFE5
 22531                           fsr1h	equ	0xFE2
 22532                           fsr1l	equ	0xFE1
 22533                           indf2	equ	0xFDF
 22534                           postinc2	equ	0xFDE
 22535                           postdec2	equ	0xFDD
 22536                           fsr2h	equ	0xFDA
 22537                           fsr2l	equ	0xFD9
 22538                           status	equ	0xFD8
 22539                           
 22540 ;; *************** function _OpenUSART *****************
 22541 ;; Defined at:
 22542 ;;		line 115 in file "UART.c"
 22543 ;; Parameters:    Size  Location     Type
 22544 ;;  config          1    wreg     unsigned char 
 22545 ;;  spbrg           2   28[BANK0 ] unsigned int 
 22546 ;; Auto vars:     Size  Location     Type
 22547 ;;  config          1   30[BANK0 ] unsigned char 
 22548 ;; Return value:  Size  Location     Type
 22549 ;;		None               void
 22550 ;; Registers used:
 22551 ;;		wreg, status,2
 22552 ;; Tracked objects:
 22553 ;;		On entry : 0/0
 22554 ;;		On exit  : 0/0
 22555 ;;		Unchanged: 0/0
 22556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22557 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22560 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22561 ;;Total ram usage:        3 bytes
 22562 ;; Hardware stack levels used:    1
 22563 ;; Hardware stack levels required when called:    6
 22564 ;; This function calls:
 22565 ;;		Nothing
 22566 ;; This function is called by:
 22567 ;;		_InitUART
 22568 ;; This function uses a non-reentrant model
 22569 ;;
 22570                           
 22571                           	psect	text44
 22572  00895A                     __ptext44:
 22573                           	opt stack 0
 22574  00895A                     _OpenUSART:
 22575                           	opt stack 22
 22576                           
 22577                           ;incstack = 0
 22578                           ;OpenUSART@config stored from wreg
 22579  00895A  0100               	movlb	0	; () banked
 22580  00895C  6F7E               	movwf	OpenUSART@config& (0+255),b
 22581                           
 22582                           ; BSR set to: 0
 22583                           ;UART.c: 117: TXSTA = 0;
 22584  00895E  0E00               	movlw	0
 22585  008960  6EAC               	movwf	4012,c	;volatile
 22586                           
 22587                           ;UART.c: 118: RCSTA = 0;
 22588  008962  0E00               	movlw	0
 22589  008964  6EAB               	movwf	4011,c	;volatile
 22590                           
 22591                           ; BSR set to: 0
 22592                           ;UART.c: 120: if(config&0x01)
 22593  008966  0100               	movlb	0	; () banked
 22594  008968  A17E               	btfss	OpenUSART@config& (0+255),0,b
 22595  00896A  D002               	goto	l13878
 22596                           
 22597                           ; BSR set to: 0
 22598                           ;UART.c: 121: {
 22599                           ;UART.c: 122: TXSTAbits.SYNC = 1;
 22600  00896C  88AC               	bsf	4012,4,c	;volatile
 22601  00896E  D000               	goto	l13878
 22602  008970                     l13878:
 22603                           
 22604                           ; BSR set to: 0
 22605                           ;UART.c: 123: }
 22606                           ;UART.c: 125: if(config&0x02)
 22607  008970  0100               	movlb	0	; () banked
 22608  008972  A37E               	btfss	OpenUSART@config& (0+255),1,b
 22609  008974  D003               	goto	l13882
 22610                           
 22611                           ; BSR set to: 0
 22612                           ;UART.c: 126: {
 22613                           ;UART.c: 127: TXSTAbits.TX9 = 1;
 22614  008976  8CAC               	bsf	4012,6,c	;volatile
 22615                           
 22616                           ;UART.c: 128: RCSTAbits.RX9 = 1;
 22617  008978  8CAB               	bsf	4011,6,c	;volatile
 22618  00897A  D000               	goto	l13882
 22619  00897C                     l13882:
 22620                           
 22621                           ; BSR set to: 0
 22622                           ;UART.c: 129: }
 22623                           ;UART.c: 131: if(config&0x04)
 22624  00897C  0100               	movlb	0	; () banked
 22625  00897E  A57E               	btfss	OpenUSART@config& (0+255),2,b
 22626  008980  D002               	goto	l13886
 22627                           
 22628                           ; BSR set to: 0
 22629                           ;UART.c: 132: {
 22630                           ;UART.c: 133: TXSTAbits.CSRC = 1;
 22631  008982  8EAC               	bsf	4012,7,c	;volatile
 22632  008984  D000               	goto	l13886
 22633  008986                     l13886:
 22634                           
 22635                           ; BSR set to: 0
 22636                           ;UART.c: 134: }
 22637                           ;UART.c: 136: if(config&0x08)
 22638  008986  0100               	movlb	0	; () banked
 22639  008988  A77E               	btfss	OpenUSART@config& (0+255),3,b
 22640  00898A  D002               	goto	l640
 22641                           
 22642                           ; BSR set to: 0
 22643                           ;UART.c: 137: {
 22644                           ;UART.c: 138: RCSTAbits.CREN = 1;
 22645  00898C  88AB               	bsf	4011,4,c	;volatile
 22646                           
 22647                           ;UART.c: 139: }
 22648  00898E  D002               	goto	l13890
 22649  008990                     l640:
 22650                           
 22651                           ; BSR set to: 0
 22652                           ;UART.c: 140: else
 22653                           ;UART.c: 141: {
 22654                           ;UART.c: 142: RCSTAbits.SREN = 1;
 22655  008990  8AAB               	bsf	4011,5,c	;volatile
 22656  008992  D000               	goto	l13890
 22657  008994                     l13890:
 22658                           
 22659                           ; BSR set to: 0
 22660                           ;UART.c: 143: }
 22661                           ;UART.c: 145: if(config&0x10)
 22662  008994  0100               	movlb	0	; () banked
 22663  008996  A97E               	btfss	OpenUSART@config& (0+255),4,b
 22664  008998  D002               	goto	l13894
 22665                           
 22666                           ; BSR set to: 0
 22667                           ;UART.c: 146: {
 22668                           ;UART.c: 147: TXSTAbits.BRGH = 1;
 22669  00899A  84AC               	bsf	4012,2,c	;volatile
 22670  00899C  D000               	goto	l13894
 22671  00899E                     l13894:
 22672                           
 22673                           ; BSR set to: 0
 22674                           ;UART.c: 148: }
 22675                           ;UART.c: 150: if(config&0x20)
 22676  00899E  0100               	movlb	0	; () banked
 22677  0089A0  AB7E               	btfss	OpenUSART@config& (0+255),5,b
 22678  0089A2  D002               	goto	l13898
 22679                           
 22680                           ; BSR set to: 0
 22681                           ;UART.c: 151: {
 22682                           ;UART.c: 152: RCSTAbits.ADEN = 1;
 22683  0089A4  86AB               	bsf	4011,3,c	;volatile
 22684  0089A6  D000               	goto	l13898
 22685  0089A8                     l13898:
 22686                           
 22687                           ; BSR set to: 0
 22688                           ;UART.c: 153: }
 22689                           ;UART.c: 155: if(config&0x40)
 22690  0089A8  0100               	movlb	0	; () banked
 22691  0089AA  AD7E               	btfss	OpenUSART@config& (0+255),6,b
 22692  0089AC  D003               	goto	l644
 22693                           
 22694                           ; BSR set to: 0
 22695                           ;UART.c: 156: {
 22696                           ;UART.c: 157: PIR1bits.RCIF = 0;
 22697  0089AE  9A9E               	bcf	3998,5,c	;volatile
 22698                           
 22699                           ;UART.c: 158: PIE1bits.RCIE = 1;
 22700  0089B0  8A9D               	bsf	3997,5,c	;volatile
 22701                           
 22702                           ;UART.c: 160: }
 22703  0089B2  D002               	goto	l13902
 22704  0089B4                     l644:
 22705                           
 22706                           ; BSR set to: 0
 22707                           ;UART.c: 161: else
 22708                           ;UART.c: 162: {
 22709                           ;UART.c: 163: PIE1bits.RCIE = 0;
 22710  0089B4  9A9D               	bcf	3997,5,c	;volatile
 22711  0089B6  D000               	goto	l13902
 22712  0089B8                     l13902:
 22713                           
 22714                           ; BSR set to: 0
 22715                           ;UART.c: 164: }
 22716                           ;UART.c: 166: if(config&0x80)
 22717  0089B8  0100               	movlb	0	; () banked
 22718  0089BA  AF7E               	btfss	OpenUSART@config& (0+255),7,b
 22719  0089BC  D003               	goto	l646
 22720                           
 22721                           ; BSR set to: 0
 22722                           ;UART.c: 167: {
 22723                           ;UART.c: 168: PIR1bits.TXIF = 0;
 22724  0089BE  989E               	bcf	3998,4,c	;volatile
 22725                           
 22726                           ;UART.c: 169: PIE1bits.TXIE = 1;
 22727  0089C0  889D               	bsf	3997,4,c	;volatile
 22728                           
 22729                           ;UART.c: 170: }
 22730  0089C2  D001               	goto	l647
 22731  0089C4                     l646:
 22732                           
 22733                           ; BSR set to: 0
 22734                           ;UART.c: 171: else
 22735                           ;UART.c: 172: {
 22736                           ;UART.c: 173: PIE1bits.TXIE = 0;
 22737  0089C4  989D               	bcf	3997,4,c	;volatile
 22738  0089C6                     l647:
 22739                           
 22740                           ; BSR set to: 0
 22741                           ;UART.c: 174: }
 22742                           ;UART.c: 176: SPBRG = spbrg;
 22743  0089C6  C07C  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 22744                           
 22745                           ; BSR set to: 0
 22746                           ;UART.c: 177: SPBRGH = spbrg >> 8;
 22747  0089CA  0100               	movlb	0	; () banked
 22748  0089CC  517D               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
 22749  0089CE  6EB0               	movwf	4016,c	;volatile
 22750                           
 22751                           ; BSR set to: 0
 22752                           ;UART.c: 179: TXSTAbits.TXEN = 1;
 22753  0089D0  8AAC               	bsf	4012,5,c	;volatile
 22754                           
 22755                           ; BSR set to: 0
 22756                           ;UART.c: 180: RCSTAbits.SPEN = 1;
 22757  0089D2  8EAB               	bsf	4011,7,c	;volatile
 22758                           
 22759                           ; BSR set to: 0
 22760  0089D4  0012               	return		;funcret
 22761  0089D6                     __end_of_OpenUSART:
 22762                           	opt stack 0
 22763                           tblptru	equ	0xFF8
 22764                           tblptrh	equ	0xFF7
 22765                           tblptrl	equ	0xFF6
 22766                           tablat	equ	0xFF5
 22767                           prodh	equ	0xFF4
 22768                           prodl	equ	0xFF3
 22769                           intcon	equ	0xFF2
 22770                           intcon2	equ	0xFF1
 22771                           indf0	equ	0xFEF
 22772                           postinc0	equ	0xFEE
 22773                           fsr0h	equ	0xFEA
 22774                           fsr0l	equ	0xFE9
 22775                           wreg	equ	0xFE8
 22776                           indf1	equ	0xFE7
 22777                           postdec1	equ	0xFE5
 22778                           fsr1h	equ	0xFE2
 22779                           fsr1l	equ	0xFE1
 22780                           indf2	equ	0xFDF
 22781                           postinc2	equ	0xFDE
 22782                           postdec2	equ	0xFDD
 22783                           fsr2h	equ	0xFDA
 22784                           fsr2l	equ	0xFD9
 22785                           status	equ	0xFD8
 22786                           
 22787 ;; *************** function _Local_CloseUSART *****************
 22788 ;; Defined at:
 22789 ;;		line 64 in file "UART.c"
 22790 ;; Parameters:    Size  Location     Type
 22791 ;;		None
 22792 ;; Auto vars:     Size  Location     Type
 22793 ;;		None
 22794 ;; Return value:  Size  Location     Type
 22795 ;;		None               void
 22796 ;; Registers used:
 22797 ;;		None
 22798 ;; Tracked objects:
 22799 ;;		On entry : 0/0
 22800 ;;		On exit  : 0/0
 22801 ;;		Unchanged: 0/0
 22802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22807 ;;Total ram usage:        0 bytes
 22808 ;; Hardware stack levels used:    1
 22809 ;; Hardware stack levels required when called:    6
 22810 ;; This function calls:
 22811 ;;		Nothing
 22812 ;; This function is called by:
 22813 ;;		_InitUART
 22814 ;; This function uses a non-reentrant model
 22815 ;;
 22816                           
 22817                           	psect	text45
 22818  0094F4                     __ptext45:
 22819                           	opt stack 0
 22820  0094F4                     _Local_CloseUSART:
 22821                           	opt stack 22
 22822                           
 22823                           ;UART.c: 66: PIE1bits.RCIE = 0;
 22824                           
 22825                           ; BSR set to: 0
 22826                           ;incstack = 0
 22827  0094F4  9A9D               	bcf	3997,5,c	;volatile
 22828                           
 22829                           ;UART.c: 67: PIE1bits.TXIE = 0;
 22830  0094F6  989D               	bcf	3997,4,c	;volatile
 22831                           
 22832                           ;UART.c: 68: RCSTAbits.SPEN = 0;
 22833  0094F8  9EAB               	bcf	4011,7,c	;volatile
 22834                           
 22835                           ;UART.c: 69: RCSTAbits.CREN = 0;
 22836  0094FA  98AB               	bcf	4011,4,c	;volatile
 22837                           
 22838                           ;UART.c: 70: RCSTAbits.FERR = 0;
 22839  0094FC  94AB               	bcf	4011,2,c	;volatile
 22840                           
 22841                           ;UART.c: 71: TXSTAbits.TXEN = 0;
 22842  0094FE  9AAC               	bcf	4012,5,c	;volatile
 22843  009500  0012               	return		;funcret
 22844  009502                     __end_of_Local_CloseUSART:
 22845                           	opt stack 0
 22846                           tblptru	equ	0xFF8
 22847                           tblptrh	equ	0xFF7
 22848                           tblptrl	equ	0xFF6
 22849                           tablat	equ	0xFF5
 22850                           prodh	equ	0xFF4
 22851                           prodl	equ	0xFF3
 22852                           intcon	equ	0xFF2
 22853                           intcon2	equ	0xFF1
 22854                           indf0	equ	0xFEF
 22855                           postinc0	equ	0xFEE
 22856                           fsr0h	equ	0xFEA
 22857                           fsr0l	equ	0xFE9
 22858                           wreg	equ	0xFE8
 22859                           indf1	equ	0xFE7
 22860                           postdec1	equ	0xFE5
 22861                           fsr1h	equ	0xFE2
 22862                           fsr1l	equ	0xFE1
 22863                           indf2	equ	0xFDF
 22864                           postinc2	equ	0xFDE
 22865                           postdec2	equ	0xFDD
 22866                           fsr2h	equ	0xFDA
 22867                           fsr2l	equ	0xFD9
 22868                           status	equ	0xFD8
 22869                           
 22870 ;; *************** function _ClearUSART *****************
 22871 ;; Defined at:
 22872 ;;		line 216 in file "UART.c"
 22873 ;; Parameters:    Size  Location     Type
 22874 ;;		None
 22875 ;; Auto vars:     Size  Location     Type
 22876 ;;		None
 22877 ;; Return value:  Size  Location     Type
 22878 ;;		None               void
 22879 ;; Registers used:
 22880 ;;		wreg, status,2, cstack
 22881 ;; Tracked objects:
 22882 ;;		On entry : 0/0
 22883 ;;		On exit  : 0/0
 22884 ;;		Unchanged: 0/0
 22885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22890 ;;Total ram usage:        0 bytes
 22891 ;; Hardware stack levels used:    1
 22892 ;; Hardware stack levels required when called:    7
 22893 ;; This function calls:
 22894 ;;		_ReadUSART
 22895 ;; This function is called by:
 22896 ;;		_main
 22897 ;;		_InitUART
 22898 ;;		_UseBluetooth
 22899 ;; This function uses a non-reentrant model
 22900 ;;
 22901                           
 22902                           	psect	text46
 22903  009502                     __ptext46:
 22904                           	opt stack 0
 22905  009502                     _ClearUSART:
 22906                           	opt stack 22
 22907                           
 22908                           ;UART.c: 218: ReadUSART();
 22909                           
 22910                           ;incstack = 0
 22911  009502  EC00  F04A         	call	_ReadUSART	;wreg free
 22912                           
 22913                           ;UART.c: 219: ReadUSART();
 22914  009506  EC00  F04A         	call	_ReadUSART	;wreg free
 22915                           
 22916                           ;UART.c: 220: ReadUSART();
 22917  00950A  EC00  F04A         	call	_ReadUSART	;wreg free
 22918  00950E  0012               	return		;funcret
 22919  009510                     __end_of_ClearUSART:
 22920                           	opt stack 0
 22921                           tblptru	equ	0xFF8
 22922                           tblptrh	equ	0xFF7
 22923                           tblptrl	equ	0xFF6
 22924                           tablat	equ	0xFF5
 22925                           prodh	equ	0xFF4
 22926                           prodl	equ	0xFF3
 22927                           intcon	equ	0xFF2
 22928                           intcon2	equ	0xFF1
 22929                           indf0	equ	0xFEF
 22930                           postinc0	equ	0xFEE
 22931                           fsr0h	equ	0xFEA
 22932                           fsr0l	equ	0xFE9
 22933                           wreg	equ	0xFE8
 22934                           indf1	equ	0xFE7
 22935                           postdec1	equ	0xFE5
 22936                           fsr1h	equ	0xFE2
 22937                           fsr1l	equ	0xFE1
 22938                           indf2	equ	0xFDF
 22939                           postinc2	equ	0xFDE
 22940                           postdec2	equ	0xFDD
 22941                           fsr2h	equ	0xFDA
 22942                           fsr2l	equ	0xFD9
 22943                           status	equ	0xFD8
 22944                           
 22945 ;; *************** function _ReadUSART *****************
 22946 ;; Defined at:
 22947 ;;		line 227 in file "UART.c"
 22948 ;; Parameters:    Size  Location     Type
 22949 ;;		None
 22950 ;; Auto vars:     Size  Location     Type
 22951 ;;  data            1   28[BANK0 ] unsigned char 
 22952 ;; Return value:  Size  Location     Type
 22953 ;;                  1    wreg      unsigned char 
 22954 ;; Registers used:
 22955 ;;		wreg, status,2
 22956 ;; Tracked objects:
 22957 ;;		On entry : 0/0
 22958 ;;		On exit  : 0/0
 22959 ;;		Unchanged: 0/0
 22960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22962 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22964 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22965 ;;Total ram usage:        1 bytes
 22966 ;; Hardware stack levels used:    1
 22967 ;; Hardware stack levels required when called:    6
 22968 ;; This function calls:
 22969 ;;		Nothing
 22970 ;; This function is called by:
 22971 ;;		_ClearUSART
 22972 ;; This function uses a non-reentrant model
 22973 ;;
 22974                           
 22975                           	psect	text47
 22976  009400                     __ptext47:
 22977                           	opt stack 0
 22978  009400                     _ReadUSART:
 22979                           	opt stack 22
 22980                           
 22981                           ;UART.c: 229: unsigned char data;
 22982                           ;UART.c: 231: if(RCSTAbits.OERR)
 22983                           
 22984                           ;incstack = 0
 22985  009400  A2AB               	btfss	4011,1,c	;volatile
 22986  009402  D004               	goto	l667
 22987                           
 22988                           ;UART.c: 232: {
 22989                           ;UART.c: 234: RCSTAbits.CREN = 0;
 22990  009404  98AB               	bcf	4011,4,c	;volatile
 22991                           
 22992                           ;UART.c: 235: RCSTAbits.CREN = 1;
 22993  009406  88AB               	bsf	4011,4,c	;volatile
 22994                           
 22995                           ;UART.c: 236: return 0;
 22996  009408  0E00               	movlw	0
 22997  00940A  0012               	return	
 22998  00940C                     l667:
 22999                           
 23000                           ;UART.c: 237: }
 23001                           ;UART.c: 239: data = RCREG;
 23002  00940C  CFAE F07C          	movff	4014,ReadUSART@data	;volatile
 23003                           
 23004                           ;UART.c: 240: return (data);
 23005  009410  0100               	movlb	0	; () banked
 23006  009412  517C               	movf	ReadUSART@data& (0+255),w,b
 23007  009414  0012               	return	
 23008                           
 23009                           ; BSR set to: 0
 23010  009416  0012               	return		;funcret
 23011  009418                     __end_of_ReadUSART:
 23012                           	opt stack 0
 23013                           tblptru	equ	0xFF8
 23014                           tblptrh	equ	0xFF7
 23015                           tblptrl	equ	0xFF6
 23016                           tablat	equ	0xFF5
 23017                           prodh	equ	0xFF4
 23018                           prodl	equ	0xFF3
 23019                           intcon	equ	0xFF2
 23020                           intcon2	equ	0xFF1
 23021                           indf0	equ	0xFEF
 23022                           postinc0	equ	0xFEE
 23023                           fsr0h	equ	0xFEA
 23024                           fsr0l	equ	0xFE9
 23025                           wreg	equ	0xFE8
 23026                           indf1	equ	0xFE7
 23027                           postdec1	equ	0xFE5
 23028                           fsr1h	equ	0xFE2
 23029                           fsr1l	equ	0xFE1
 23030                           indf2	equ	0xFDF
 23031                           postinc2	equ	0xFDE
 23032                           postdec2	equ	0xFDD
 23033                           fsr2h	equ	0xFDA
 23034                           fsr2l	equ	0xFD9
 23035                           status	equ	0xFD8
 23036                           
 23037 ;; *************** function _InitTimers *****************
 23038 ;; Defined at:
 23039 ;;		line 51 in file "Timer.c"
 23040 ;; Parameters:    Size  Location     Type
 23041 ;;		None
 23042 ;; Auto vars:     Size  Location     Type
 23043 ;;		None
 23044 ;; Return value:  Size  Location     Type
 23045 ;;		None               void
 23046 ;; Registers used:
 23047 ;;		wreg, status,2, cstack
 23048 ;; Tracked objects:
 23049 ;;		On entry : 0/0
 23050 ;;		On exit  : 0/0
 23051 ;;		Unchanged: 0/0
 23052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23057 ;;Total ram usage:        0 bytes
 23058 ;; Hardware stack levels used:    1
 23059 ;; Hardware stack levels required when called:    7
 23060 ;; This function calls:
 23061 ;;		_InitTimer1
 23062 ;;		_InitTimer2
 23063 ;;		_InitTimer3
 23064 ;; This function is called by:
 23065 ;;		_Init_System
 23066 ;; This function uses a non-reentrant model
 23067 ;;
 23068                           
 23069                           	psect	text48
 23070  00948A                     __ptext48:
 23071                           	opt stack 0
 23072  00948A                     _InitTimers:
 23073                           	opt stack 22
 23074                           
 23075                           ;Timer.c: 53: InitTimer1();
 23076                           
 23077                           ;incstack = 0
 23078  00948A  EC8F  F04A         	call	_InitTimer1	;wreg free
 23079                           
 23080                           ;Timer.c: 54: (PIE1bits.TMR1IE = TRUE);
 23081  00948E  809D               	bsf	3997,0,c	;volatile
 23082                           
 23083                           ;Timer.c: 55: InitTimer2();
 23084  009490  EC88  F04A         	call	_InitTimer2	;wreg free
 23085                           
 23086                           ;Timer.c: 56: (PIE1bits.TMR2IE = TRUE);
 23087  009494  829D               	bsf	3997,1,c	;volatile
 23088                           
 23089                           ;Timer.c: 57: InitTimer3();
 23090  009496  ECBE  F04A         	call	_InitTimer3	;wreg free
 23091                           
 23092                           ;Timer.c: 58: (PIE2bits.TMR3IE = TRUE);
 23093  00949A  82A0               	bsf	4000,1,c	;volatile
 23094  00949C  0012               	return		;funcret
 23095  00949E                     __end_of_InitTimers:
 23096                           	opt stack 0
 23097                           tblptru	equ	0xFF8
 23098                           tblptrh	equ	0xFF7
 23099                           tblptrl	equ	0xFF6
 23100                           tablat	equ	0xFF5
 23101                           prodh	equ	0xFF4
 23102                           prodl	equ	0xFF3
 23103                           intcon	equ	0xFF2
 23104                           intcon2	equ	0xFF1
 23105                           indf0	equ	0xFEF
 23106                           postinc0	equ	0xFEE
 23107                           fsr0h	equ	0xFEA
 23108                           fsr0l	equ	0xFE9
 23109                           wreg	equ	0xFE8
 23110                           indf1	equ	0xFE7
 23111                           postdec1	equ	0xFE5
 23112                           fsr1h	equ	0xFE2
 23113                           fsr1l	equ	0xFE1
 23114                           indf2	equ	0xFDF
 23115                           postinc2	equ	0xFDE
 23116                           postdec2	equ	0xFDD
 23117                           fsr2h	equ	0xFDA
 23118                           fsr2l	equ	0xFD9
 23119                           status	equ	0xFD8
 23120                           
 23121 ;; *************** function _InitTimer3 *****************
 23122 ;; Defined at:
 23123 ;;		line 163 in file "Timer.c"
 23124 ;; Parameters:    Size  Location     Type
 23125 ;;		None
 23126 ;; Auto vars:     Size  Location     Type
 23127 ;;		None
 23128 ;; Return value:  Size  Location     Type
 23129 ;;		None               void
 23130 ;; Registers used:
 23131 ;;		wreg, status,2
 23132 ;; Tracked objects:
 23133 ;;		On entry : 0/0
 23134 ;;		On exit  : 0/0
 23135 ;;		Unchanged: 0/0
 23136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23141 ;;Total ram usage:        0 bytes
 23142 ;; Hardware stack levels used:    1
 23143 ;; Hardware stack levels required when called:    6
 23144 ;; This function calls:
 23145 ;;		Nothing
 23146 ;; This function is called by:
 23147 ;;		_InitTimers
 23148 ;; This function uses a non-reentrant model
 23149 ;;
 23150                           
 23151                           	psect	text49
 23152  00957C                     __ptext49:
 23153                           	opt stack 0
 23154  00957C                     _InitTimer3:
 23155                           	opt stack 22
 23156                           
 23157                           ;Timer.c: 165: T3CONbits.RD16 = TRUE;
 23158                           
 23159                           ;incstack = 0
 23160  00957C  8EB1               	bsf	4017,7,c	;volatile
 23161                           
 23162                           ;Timer.c: 166: T3CONbits.T3CKPS = 0x3;
 23163  00957E  0E30               	movlw	48
 23164  009580  12B1               	iorwf	4017,f,c	;volatile
 23165                           
 23166                           ;Timer.c: 167: T3CONbits.TMR3CS = FALSE;
 23167  009582  92B1               	bcf	4017,1,c	;volatile
 23168  009584  0012               	return		;funcret
 23169  009586                     __end_of_InitTimer3:
 23170                           	opt stack 0
 23171                           tblptru	equ	0xFF8
 23172                           tblptrh	equ	0xFF7
 23173                           tblptrl	equ	0xFF6
 23174                           tablat	equ	0xFF5
 23175                           prodh	equ	0xFF4
 23176                           prodl	equ	0xFF3
 23177                           intcon	equ	0xFF2
 23178                           intcon2	equ	0xFF1
 23179                           indf0	equ	0xFEF
 23180                           postinc0	equ	0xFEE
 23181                           fsr0h	equ	0xFEA
 23182                           fsr0l	equ	0xFE9
 23183                           wreg	equ	0xFE8
 23184                           indf1	equ	0xFE7
 23185                           postdec1	equ	0xFE5
 23186                           fsr1h	equ	0xFE2
 23187                           fsr1l	equ	0xFE1
 23188                           indf2	equ	0xFDF
 23189                           postinc2	equ	0xFDE
 23190                           postdec2	equ	0xFDD
 23191                           fsr2h	equ	0xFDA
 23192                           fsr2l	equ	0xFD9
 23193                           status	equ	0xFD8
 23194                           
 23195 ;; *************** function _InitTimer2 *****************
 23196 ;; Defined at:
 23197 ;;		line 138 in file "Timer.c"
 23198 ;; Parameters:    Size  Location     Type
 23199 ;;		None
 23200 ;; Auto vars:     Size  Location     Type
 23201 ;;		None
 23202 ;; Return value:  Size  Location     Type
 23203 ;;		None               void
 23204 ;; Registers used:
 23205 ;;		wreg, status,2
 23206 ;; Tracked objects:
 23207 ;;		On entry : 0/0
 23208 ;;		On exit  : 0/0
 23209 ;;		Unchanged: 0/0
 23210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23215 ;;Total ram usage:        0 bytes
 23216 ;; Hardware stack levels used:    1
 23217 ;; Hardware stack levels required when called:    6
 23218 ;; This function calls:
 23219 ;;		Nothing
 23220 ;; This function is called by:
 23221 ;;		_InitTimers
 23222 ;; This function uses a non-reentrant model
 23223 ;;
 23224                           
 23225                           	psect	text50
 23226  009510                     __ptext50:
 23227                           	opt stack 0
 23228  009510                     _InitTimer2:
 23229                           	opt stack 22
 23230                           
 23231                           ;Timer.c: 140: T2CONbits.T2OUTPS = 0xE;
 23232                           
 23233                           ;incstack = 0
 23234  009510  50CA               	movf	4042,w,c	;volatile
 23235  009512  0B87               	andlw	-121
 23236  009514  0970               	iorlw	112
 23237  009516  6ECA               	movwf	4042,c	;volatile
 23238                           
 23239                           ;Timer.c: 141: T2CONbits.T2CKPS = 0x3;
 23240  009518  0E03               	movlw	3
 23241  00951A  12CA               	iorwf	4042,f,c	;volatile
 23242  00951C  0012               	return		;funcret
 23243  00951E                     __end_of_InitTimer2:
 23244                           	opt stack 0
 23245                           tblptru	equ	0xFF8
 23246                           tblptrh	equ	0xFF7
 23247                           tblptrl	equ	0xFF6
 23248                           tablat	equ	0xFF5
 23249                           prodh	equ	0xFF4
 23250                           prodl	equ	0xFF3
 23251                           intcon	equ	0xFF2
 23252                           intcon2	equ	0xFF1
 23253                           indf0	equ	0xFEF
 23254                           postinc0	equ	0xFEE
 23255                           fsr0h	equ	0xFEA
 23256                           fsr0l	equ	0xFE9
 23257                           wreg	equ	0xFE8
 23258                           indf1	equ	0xFE7
 23259                           postdec1	equ	0xFE5
 23260                           fsr1h	equ	0xFE2
 23261                           fsr1l	equ	0xFE1
 23262                           indf2	equ	0xFDF
 23263                           postinc2	equ	0xFDE
 23264                           postdec2	equ	0xFDD
 23265                           fsr2h	equ	0xFDA
 23266                           fsr2l	equ	0xFD9
 23267                           status	equ	0xFD8
 23268                           
 23269 ;; *************** function _InitTimer1 *****************
 23270 ;; Defined at:
 23271 ;;		line 109 in file "Timer.c"
 23272 ;; Parameters:    Size  Location     Type
 23273 ;;		None
 23274 ;; Auto vars:     Size  Location     Type
 23275 ;;		None
 23276 ;; Return value:  Size  Location     Type
 23277 ;;		None               void
 23278 ;; Registers used:
 23279 ;;		wreg, status,2
 23280 ;; Tracked objects:
 23281 ;;		On entry : 0/0
 23282 ;;		On exit  : 0/0
 23283 ;;		Unchanged: 0/0
 23284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23289 ;;Total ram usage:        0 bytes
 23290 ;; Hardware stack levels used:    1
 23291 ;; Hardware stack levels required when called:    6
 23292 ;; This function calls:
 23293 ;;		Nothing
 23294 ;; This function is called by:
 23295 ;;		_InitTimers
 23296 ;; This function uses a non-reentrant model
 23297 ;;
 23298                           
 23299                           	psect	text51
 23300  00951E                     __ptext51:
 23301                           	opt stack 0
 23302  00951E                     _InitTimer1:
 23303                           	opt stack 22
 23304                           
 23305                           ;Timer.c: 111: T1CONbits.RD16 = TRUE;
 23306                           
 23307                           ;incstack = 0
 23308  00951E  8ECD               	bsf	4045,7,c	;volatile
 23309                           
 23310                           ;Timer.c: 112: T1CONbits.T1RUN = FALSE;
 23311  009520  9CCD               	bcf	4045,6,c	;volatile
 23312                           
 23313                           ;Timer.c: 113: T1CONbits.T1CKPS = 0x3;
 23314  009522  0E30               	movlw	48
 23315  009524  12CD               	iorwf	4045,f,c	;volatile
 23316                           
 23317                           ;Timer.c: 114: T1CONbits.T1OSCEN = FALSE;
 23318  009526  96CD               	bcf	4045,3,c	;volatile
 23319                           
 23320                           ;Timer.c: 115: T1CONbits.TMR1CS = FALSE;
 23321  009528  92CD               	bcf	4045,1,c	;volatile
 23322  00952A  0012               	return		;funcret
 23323  00952C                     __end_of_InitTimer1:
 23324                           	opt stack 0
 23325                           tblptru	equ	0xFF8
 23326                           tblptrh	equ	0xFF7
 23327                           tblptrl	equ	0xFF6
 23328                           tablat	equ	0xFF5
 23329                           prodh	equ	0xFF4
 23330                           prodl	equ	0xFF3
 23331                           intcon	equ	0xFF2
 23332                           intcon2	equ	0xFF1
 23333                           indf0	equ	0xFEF
 23334                           postinc0	equ	0xFEE
 23335                           fsr0h	equ	0xFEA
 23336                           fsr0l	equ	0xFE9
 23337                           wreg	equ	0xFE8
 23338                           indf1	equ	0xFE7
 23339                           postdec1	equ	0xFE5
 23340                           fsr1h	equ	0xFE2
 23341                           fsr1l	equ	0xFE1
 23342                           indf2	equ	0xFDF
 23343                           postinc2	equ	0xFDE
 23344                           postdec2	equ	0xFDD
 23345                           fsr2h	equ	0xFDA
 23346                           fsr2l	equ	0xFD9
 23347                           status	equ	0xFD8
 23348                           
 23349 ;; *************** function _InitIR *****************
 23350 ;; Defined at:
 23351 ;;		line 80 in file "IR.c"
 23352 ;; Parameters:    Size  Location     Type
 23353 ;;		None
 23354 ;; Auto vars:     Size  Location     Type
 23355 ;;		None
 23356 ;; Return value:  Size  Location     Type
 23357 ;;		None               void
 23358 ;; Registers used:
 23359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23360 ;; Tracked objects:
 23361 ;;		On entry : 0/0
 23362 ;;		On exit  : 0/0
 23363 ;;		Unchanged: 0/0
 23364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23369 ;;Total ram usage:        0 bytes
 23370 ;; Hardware stack levels used:    1
 23371 ;; Hardware stack levels required when called:    7
 23372 ;; This function calls:
 23373 ;;		_InitTimer0
 23374 ;;		_ReadIRpin
 23375 ;;		_ResetTimer0
 23376 ;;		_cleanBuffer16bit
 23377 ;; This function is called by:
 23378 ;;		_Init_System
 23379 ;; This function uses a non-reentrant model
 23380 ;;
 23381                           
 23382                           	psect	text52
 23383  008FF0                     __ptext52:
 23384                           	opt stack 0
 23385  008FF0                     _InitIR:
 23386                           	opt stack 22
 23387                           
 23388                           ;IR.c: 83: (IOCBbits.IOCB4 = 1);
 23389                           
 23390                           ;incstack = 0
 23391  008FF0  887D               	bsf	3965,4,c	;volatile
 23392                           
 23393                           ;IR.c: 85: IRpinOLD = ReadIRpin();
 23394  008FF2  EC96  F04A         	call	_ReadIRpin	;wreg free
 23395  008FF6  6E2F               	movwf	_IRpinOLD,c
 23396                           
 23397                           ;IR.c: 87: InitTimer0();
 23398  008FF8  EC6B  F04A         	call	_InitTimer0	;wreg free
 23399                           
 23400                           ;IR.c: 89: cleanBuffer16bit(IRRawCode, 100);
 23401  008FFC  0E00               	movlw	low _IRRawCode
 23402  008FFE  0100               	movlb	0	; () banked
 23403  009000  6F7C               	movwf	cleanBuffer16bit@data& (0+255),b
 23404  009002  0E07               	movlw	high _IRRawCode
 23405  009004  0100               	movlb	0	; () banked
 23406  009006  6F7D               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
 23407  009008  0E00               	movlw	0
 23408  00900A  0100               	movlb	0	; () banked
 23409  00900C  6F7F               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
 23410  00900E  0E64               	movlw	100
 23411  009010  6F7E               	movwf	cleanBuffer16bit@count& (0+255),b
 23412  009012  EC9B  F046         	call	_cleanBuffer16bit	;wreg free
 23413                           
 23414                           ;IR.c: 90: IR_NEC = 0;
 23415  009016  0E00               	movlw	0
 23416  009018  0100               	movlb	0	; () banked
 23417  00901A  6FDD               	movwf	_IR_NEC& (0+255),b
 23418  00901C  0E00               	movlw	0
 23419  00901E  6FDE               	movwf	(_IR_NEC+1)& (0+255),b
 23420  009020  0E00               	movlw	0
 23421  009022  6FDF               	movwf	(_IR_NEC+2)& (0+255),b
 23422  009024  0E00               	movlw	0
 23423  009026  6FE0               	movwf	(_IR_NEC+3)& (0+255),b
 23424                           
 23425                           ; BSR set to: 0
 23426                           ;IR.c: 91: (T0CONbits.TMR0ON = 0);
 23427  009028  9ED5               	bcf	4053,7,c	;volatile
 23428                           
 23429                           ; BSR set to: 0
 23430                           ;IR.c: 93: ResetTimer0();
 23431  00902A  ECC3  F04A         	call	_ResetTimer0	;wreg free
 23432                           
 23433                           ;IR.c: 95: (INTCONbits.TMR0IE = 0);
 23434  00902E  9AF2               	bcf	intcon,5,c	;volatile
 23435                           
 23436                           ;IR.c: 96: INTCONbits.TMR0IF = 0;
 23437  009030  94F2               	bcf	intcon,2,c	;volatile
 23438                           
 23439                           ;IR.c: 98: INTCONbits.RBIF = 0;
 23440  009032  90F2               	bcf	intcon,0,c	;volatile
 23441                           
 23442                           ;IR.c: 99: INTCONbits.RBIE = 1;
 23443  009034  86F2               	bsf	intcon,3,c	;volatile
 23444  009036  0012               	return		;funcret
 23445  009038                     __end_of_InitIR:
 23446                           	opt stack 0
 23447                           tblptru	equ	0xFF8
 23448                           tblptrh	equ	0xFF7
 23449                           tblptrl	equ	0xFF6
 23450                           tablat	equ	0xFF5
 23451                           prodh	equ	0xFF4
 23452                           prodl	equ	0xFF3
 23453                           intcon	equ	0xFF2
 23454                           intcon2	equ	0xFF1
 23455                           indf0	equ	0xFEF
 23456                           postinc0	equ	0xFEE
 23457                           fsr0h	equ	0xFEA
 23458                           fsr0l	equ	0xFE9
 23459                           wreg	equ	0xFE8
 23460                           indf1	equ	0xFE7
 23461                           postdec1	equ	0xFE5
 23462                           fsr1h	equ	0xFE2
 23463                           fsr1l	equ	0xFE1
 23464                           indf2	equ	0xFDF
 23465                           postinc2	equ	0xFDE
 23466                           postdec2	equ	0xFDD
 23467                           fsr2h	equ	0xFDA
 23468                           fsr2l	equ	0xFD9
 23469                           status	equ	0xFD8
 23470                           
 23471 ;; *************** function _cleanBuffer16bit *****************
 23472 ;; Defined at:
 23473 ;;		line 141 in file "MISC.c"
 23474 ;; Parameters:    Size  Location     Type
 23475 ;;  data            2   28[BANK0 ] PTR unsigned int 
 23476 ;;		 -> IRRawCode(200), 
 23477 ;;  count           2   30[BANK0 ] int 
 23478 ;; Auto vars:     Size  Location     Type
 23479 ;;  i               1   35[BANK0 ] unsigned char 
 23480 ;; Return value:  Size  Location     Type
 23481 ;;		None               void
 23482 ;; Registers used:
 23483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23484 ;; Tracked objects:
 23485 ;;		On entry : 0/0
 23486 ;;		On exit  : 0/0
 23487 ;;		Unchanged: 0/0
 23488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23489 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23491 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23492 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23493 ;;Total ram usage:        8 bytes
 23494 ;; Hardware stack levels used:    1
 23495 ;; Hardware stack levels required when called:    6
 23496 ;; This function calls:
 23497 ;;		Nothing
 23498 ;; This function is called by:
 23499 ;;		_InitIR
 23500 ;; This function uses a non-reentrant model
 23501 ;;
 23502                           
 23503                           	psect	text53
 23504  008D36                     __ptext53:
 23505                           	opt stack 0
 23506  008D36                     _cleanBuffer16bit:
 23507                           	opt stack 22
 23508                           
 23509                           ;MISC.c: 143: unsigned char i=0;
 23510                           
 23511                           ;incstack = 0
 23512  008D36  0E00               	movlw	0
 23513  008D38  0100               	movlb	0	; () banked
 23514  008D3A  6F83               	movwf	cleanBuffer16bit@i& (0+255),b
 23515                           
 23516                           ;MISC.c: 144: for(i=0; i<count;i++)
 23517  008D3C  0E00               	movlw	0
 23518  008D3E  0100               	movlb	0	; () banked
 23519  008D40  6F83               	movwf	cleanBuffer16bit@i& (0+255),b
 23520  008D42  D012               	goto	l13836
 23521  008D44                     l13832:
 23522                           
 23523                           ; BSR set to: 0
 23524                           ;MISC.c: 145: {
 23525                           ;MISC.c: 146: data[i]= 0;
 23526  008D44  0100               	movlb	0	; () banked
 23527  008D46  5183               	movf	cleanBuffer16bit@i& (0+255),w,b
 23528  008D48  0D02               	mullw	2
 23529  008D4A  50F3               	movf	prodl,w,c
 23530  008D4C  0100               	movlb	0	; () banked
 23531  008D4E  257C               	addwf	cleanBuffer16bit@data& (0+255),w,b
 23532  008D50  6ED9               	movwf	fsr2l,c
 23533  008D52  50F4               	movf	prodh,w,c
 23534  008D54  0100               	movlb	0	; () banked
 23535  008D56  217D               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
 23536  008D58  6EDA               	movwf	fsr2h,c
 23537  008D5A  0E00               	movlw	0
 23538  008D5C  6EDE               	movwf	postinc2,c
 23539  008D5E  0E00               	movlw	0
 23540  008D60  6EDD               	movwf	postdec2,c
 23541                           
 23542                           ; BSR set to: 0
 23543  008D62  0100               	movlb	0	; () banked
 23544  008D64  2B83               	incf	cleanBuffer16bit@i& (0+255),f,b
 23545  008D66  D000               	goto	l13836
 23546  008D68                     l13836:
 23547                           
 23548                           ; BSR set to: 0
 23549  008D68  0100               	movlb	0	; () banked
 23550  008D6A  5183               	movf	cleanBuffer16bit@i& (0+255),w,b
 23551  008D6C  0100               	movlb	0	; () banked
 23552  008D6E  6F80               	movwf	??_cleanBuffer16bit& (0+255),b
 23553  008D70  6B81               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
 23554  008D72  0100               	movlb	0	; () banked
 23555  008D74  517E               	movf	cleanBuffer16bit@count& (0+255),w,b
 23556  008D76  0100               	movlb	0	; () banked
 23557  008D78  5D80               	subwf	??_cleanBuffer16bit& (0+255),w,b
 23558  008D7A  0100               	movlb	0	; () banked
 23559  008D7C  5181               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
 23560  008D7E  0A80               	xorlw	128
 23561  008D80  0100               	movlb	0	; () banked
 23562  008D82  6F82               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
 23563  008D84  0100               	movlb	0	; () banked
 23564  008D86  517F               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
 23565  008D88  0A80               	xorlw	128
 23566  008D8A  0100               	movlb	0	; () banked
 23567  008D8C  5982               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
 23568  008D8E  A0D8               	btfss	status,0,c
 23569  008D90  D7D9               	goto	l13832
 23570                           
 23571                           ; BSR set to: 0
 23572                           
 23573                           ; BSR set to: 0
 23574  008D92  0012               	return		;funcret
 23575  008D94                     __end_of_cleanBuffer16bit:
 23576                           	opt stack 0
 23577                           tblptru	equ	0xFF8
 23578                           tblptrh	equ	0xFF7
 23579                           tblptrl	equ	0xFF6
 23580                           tablat	equ	0xFF5
 23581                           prodh	equ	0xFF4
 23582                           prodl	equ	0xFF3
 23583                           intcon	equ	0xFF2
 23584                           intcon2	equ	0xFF1
 23585                           indf0	equ	0xFEF
 23586                           postinc0	equ	0xFEE
 23587                           fsr0h	equ	0xFEA
 23588                           fsr0l	equ	0xFE9
 23589                           wreg	equ	0xFE8
 23590                           indf1	equ	0xFE7
 23591                           postdec1	equ	0xFE5
 23592                           fsr1h	equ	0xFE2
 23593                           fsr1l	equ	0xFE1
 23594                           indf2	equ	0xFDF
 23595                           postinc2	equ	0xFDE
 23596                           postdec2	equ	0xFDD
 23597                           fsr2h	equ	0xFDA
 23598                           fsr2l	equ	0xFD9
 23599                           status	equ	0xFD8
 23600                           
 23601 ;; *************** function _ResetTimer0 *****************
 23602 ;; Defined at:
 23603 ;;		line 79 in file "Timer.c"
 23604 ;; Parameters:    Size  Location     Type
 23605 ;;		None
 23606 ;; Auto vars:     Size  Location     Type
 23607 ;;		None
 23608 ;; Return value:  Size  Location     Type
 23609 ;;		None               void
 23610 ;; Registers used:
 23611 ;;		wreg, status,2
 23612 ;; Tracked objects:
 23613 ;;		On entry : 0/0
 23614 ;;		On exit  : 0/0
 23615 ;;		Unchanged: 0/0
 23616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23621 ;;Total ram usage:        0 bytes
 23622 ;; Hardware stack levels used:    1
 23623 ;; Hardware stack levels required when called:    6
 23624 ;; This function calls:
 23625 ;;		Nothing
 23626 ;; This function is called by:
 23627 ;;		_InitIR
 23628 ;; This function uses a non-reentrant model
 23629 ;;
 23630                           
 23631                           	psect	text54
 23632  009586                     __ptext54:
 23633                           	opt stack 0
 23634  009586                     _ResetTimer0:
 23635                           	opt stack 22
 23636                           
 23637                           ;Timer.c: 85: TMR0H = 0;
 23638                           
 23639                           ; BSR set to: 0
 23640                           ;incstack = 0
 23641  009586  0E00               	movlw	0
 23642  009588  6ED7               	movwf	4055,c	;volatile
 23643                           
 23644                           ;Timer.c: 86: TMR0L = 2;
 23645  00958A  0E02               	movlw	2
 23646  00958C  6ED6               	movwf	4054,c	;volatile
 23647  00958E  0012               	return		;funcret
 23648  009590                     __end_of_ResetTimer0:
 23649                           	opt stack 0
 23650                           tblptru	equ	0xFF8
 23651                           tblptrh	equ	0xFF7
 23652                           tblptrl	equ	0xFF6
 23653                           tablat	equ	0xFF5
 23654                           prodh	equ	0xFF4
 23655                           prodl	equ	0xFF3
 23656                           intcon	equ	0xFF2
 23657                           intcon2	equ	0xFF1
 23658                           indf0	equ	0xFEF
 23659                           postinc0	equ	0xFEE
 23660                           fsr0h	equ	0xFEA
 23661                           fsr0l	equ	0xFE9
 23662                           wreg	equ	0xFE8
 23663                           indf1	equ	0xFE7
 23664                           postdec1	equ	0xFE5
 23665                           fsr1h	equ	0xFE2
 23666                           fsr1l	equ	0xFE1
 23667                           indf2	equ	0xFDF
 23668                           postinc2	equ	0xFDE
 23669                           postdec2	equ	0xFDD
 23670                           fsr2h	equ	0xFDA
 23671                           fsr2l	equ	0xFD9
 23672                           status	equ	0xFD8
 23673                           
 23674 ;; *************** function _ReadIRpin *****************
 23675 ;; Defined at:
 23676 ;;		line 107 in file "IR.c"
 23677 ;; Parameters:    Size  Location     Type
 23678 ;;		None
 23679 ;; Auto vars:     Size  Location     Type
 23680 ;;		None
 23681 ;; Return value:  Size  Location     Type
 23682 ;;                  1    wreg      unsigned char 
 23683 ;; Registers used:
 23684 ;;		wreg
 23685 ;; Tracked objects:
 23686 ;;		On entry : 0/0
 23687 ;;		On exit  : 0/0
 23688 ;;		Unchanged: 0/0
 23689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23694 ;;Total ram usage:        0 bytes
 23695 ;; Hardware stack levels used:    1
 23696 ;; Hardware stack levels required when called:    6
 23697 ;; This function calls:
 23698 ;;		Nothing
 23699 ;; This function is called by:
 23700 ;;		_main
 23701 ;;		_InitIR
 23702 ;;		_UseIRCode
 23703 ;;		_SendNEC_wait
 23704 ;;		_SendRF_wait
 23705 ;; This function uses a non-reentrant model
 23706 ;;
 23707                           
 23708                           	psect	text55
 23709  00952C                     __ptext55:
 23710                           	opt stack 0
 23711  00952C                     _ReadIRpin:
 23712                           	opt stack 21
 23713                           
 23714                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 23715                           
 23716                           ;incstack = 0
 23717  00952C  A881               	btfss	3969,4,c	;volatile
 23718  00952E  D002               	goto	l13192
 23719                           
 23720                           ;IR.c: 111: {
 23721                           ;IR.c: 112: return (1);
 23722  009530  0E01               	movlw	1
 23723                           
 23724                           ;IR.c: 113: }
 23725  009532  0012               	return	
 23726  009534                     l13192:
 23727                           
 23728                           ;IR.c: 114: else
 23729                           ;IR.c: 115: {
 23730                           ;IR.c: 116: return 0;
 23731  009534  0E00               	movlw	0
 23732  009536  0012               	return	
 23733  009538  0012               	return		;funcret
 23734  00953A                     __end_of_ReadIRpin:
 23735                           	opt stack 0
 23736                           tblptru	equ	0xFF8
 23737                           tblptrh	equ	0xFF7
 23738                           tblptrl	equ	0xFF6
 23739                           tablat	equ	0xFF5
 23740                           prodh	equ	0xFF4
 23741                           prodl	equ	0xFF3
 23742                           intcon	equ	0xFF2
 23743                           intcon2	equ	0xFF1
 23744                           indf0	equ	0xFEF
 23745                           postinc0	equ	0xFEE
 23746                           fsr0h	equ	0xFEA
 23747                           fsr0l	equ	0xFE9
 23748                           wreg	equ	0xFE8
 23749                           indf1	equ	0xFE7
 23750                           postdec1	equ	0xFE5
 23751                           fsr1h	equ	0xFE2
 23752                           fsr1l	equ	0xFE1
 23753                           indf2	equ	0xFDF
 23754                           postinc2	equ	0xFDE
 23755                           postdec2	equ	0xFDD
 23756                           fsr2h	equ	0xFDA
 23757                           fsr2l	equ	0xFD9
 23758                           status	equ	0xFD8
 23759                           
 23760 ;; *************** function _InitTimer0 *****************
 23761 ;; Defined at:
 23762 ;;		line 66 in file "Timer.c"
 23763 ;; Parameters:    Size  Location     Type
 23764 ;;		None
 23765 ;; Auto vars:     Size  Location     Type
 23766 ;;		None
 23767 ;; Return value:  Size  Location     Type
 23768 ;;		None               void
 23769 ;; Registers used:
 23770 ;;		wreg, status,2
 23771 ;; Tracked objects:
 23772 ;;		On entry : 0/0
 23773 ;;		On exit  : 0/0
 23774 ;;		Unchanged: 0/0
 23775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23780 ;;Total ram usage:        0 bytes
 23781 ;; Hardware stack levels used:    1
 23782 ;; Hardware stack levels required when called:    6
 23783 ;; This function calls:
 23784 ;;		Nothing
 23785 ;; This function is called by:
 23786 ;;		_InitIR
 23787 ;; This function uses a non-reentrant model
 23788 ;;
 23789                           
 23790                           	psect	text56
 23791  0094D6                     __ptext56:
 23792                           	opt stack 0
 23793  0094D6                     _InitTimer0:
 23794                           	opt stack 22
 23795                           
 23796                           ;Timer.c: 68: T0CONbits.T08BIT = FALSE;
 23797                           
 23798                           ;incstack = 0
 23799  0094D6  9CD5               	bcf	4053,6,c	;volatile
 23800                           
 23801                           ;Timer.c: 69: T0CONbits.T0CS = FALSE;
 23802  0094D8  9AD5               	bcf	4053,5,c	;volatile
 23803                           
 23804                           ;Timer.c: 70: T0CONbits.PSA = FALSE;
 23805  0094DA  96D5               	bcf	4053,3,c	;volatile
 23806                           
 23807                           ;Timer.c: 71: T0CONbits.T0PS = 0x4;
 23808  0094DC  50D5               	movf	4053,w,c	;volatile
 23809  0094DE  0BF8               	andlw	-8
 23810  0094E0  0904               	iorlw	4
 23811  0094E2  6ED5               	movwf	4053,c	;volatile
 23812  0094E4  0012               	return		;funcret
 23813  0094E6                     __end_of_InitTimer0:
 23814                           	opt stack 0
 23815                           tblptru	equ	0xFF8
 23816                           tblptrh	equ	0xFF7
 23817                           tblptrl	equ	0xFF6
 23818                           tablat	equ	0xFF5
 23819                           prodh	equ	0xFF4
 23820                           prodl	equ	0xFF3
 23821                           intcon	equ	0xFF2
 23822                           intcon2	equ	0xFF1
 23823                           indf0	equ	0xFEF
 23824                           postinc0	equ	0xFEE
 23825                           fsr0h	equ	0xFEA
 23826                           fsr0l	equ	0xFE9
 23827                           wreg	equ	0xFE8
 23828                           indf1	equ	0xFE7
 23829                           postdec1	equ	0xFE5
 23830                           fsr1h	equ	0xFE2
 23831                           fsr1l	equ	0xFE1
 23832                           indf2	equ	0xFDF
 23833                           postinc2	equ	0xFDE
 23834                           postdec2	equ	0xFDD
 23835                           fsr2h	equ	0xFDA
 23836                           fsr2l	equ	0xFD9
 23837                           status	equ	0xFD8
 23838                           
 23839 ;; *************** function _InitBluetooth *****************
 23840 ;; Defined at:
 23841 ;;		line 68 in file "Bluetooth.c"
 23842 ;; Parameters:    Size  Location     Type
 23843 ;;		None
 23844 ;; Auto vars:     Size  Location     Type
 23845 ;;		None
 23846 ;; Return value:  Size  Location     Type
 23847 ;;		None               void
 23848 ;; Registers used:
 23849 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23850 ;; Tracked objects:
 23851 ;;		On entry : 0/0
 23852 ;;		On exit  : 0/0
 23853 ;;		Unchanged: 0/0
 23854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23859 ;;Total ram usage:        0 bytes
 23860 ;; Hardware stack levels used:    1
 23861 ;; Hardware stack levels required when called:   12
 23862 ;; This function calls:
 23863 ;;		_BluetoothConfigured
 23864 ;;		_BluetoothInitialSetup
 23865 ;;		_ResetBlue
 23866 ;;		_cleanBuffer
 23867 ;; This function is called by:
 23868 ;;		_Init_System
 23869 ;; This function uses a non-reentrant model
 23870 ;;
 23871                           
 23872                           	psect	text57
 23873  008EA0                     __ptext57:
 23874                           	opt stack 0
 23875  008EA0                     _InitBluetooth:
 23876                           	opt stack 17
 23877                           
 23878                           ;Bluetooth.c: 70: cleanBuffer(ReceivedString,255);
 23879                           
 23880                           ;incstack = 0
 23881  008EA0  0E00               	movlw	low _ReceivedString
 23882  008EA2  0100               	movlb	0	; () banked
 23883  008EA4  6F7C               	movwf	cleanBuffer@data& (0+255),b
 23884  008EA6  0E06               	movlw	high _ReceivedString
 23885  008EA8  0100               	movlb	0	; () banked
 23886  008EAA  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 23887  008EAC  0E00               	movlw	0
 23888  008EAE  0100               	movlb	0	; () banked
 23889  008EB0  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 23890  008EB2  697E               	setf	cleanBuffer@count& (0+255),b
 23891  008EB4  ECCA  F046         	call	_cleanBuffer	;wreg free
 23892                           
 23893                           ;Bluetooth.c: 71: ReceivedStringPos = 0;
 23894  008EB8  0E00               	movlw	0
 23895  008EBA  0100               	movlb	0	; () banked
 23896  008EBC  6FDC               	movwf	_ReceivedStringPos& (0+255),b
 23897                           
 23898                           ; BSR set to: 0
 23899                           ;Bluetooth.c: 72: cleanBuffer(CommandString,255);
 23900  008EBE  0E00               	movlw	low _CommandString
 23901  008EC0  0100               	movlb	0	; () banked
 23902  008EC2  6F7C               	movwf	cleanBuffer@data& (0+255),b
 23903  008EC4  0E05               	movlw	high _CommandString
 23904  008EC6  0100               	movlb	0	; () banked
 23905  008EC8  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 23906  008ECA  0E00               	movlw	0
 23907  008ECC  0100               	movlb	0	; () banked
 23908  008ECE  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 23909  008ED0  697E               	setf	cleanBuffer@count& (0+255),b
 23910  008ED2  ECCA  F046         	call	_cleanBuffer	;wreg free
 23911                           
 23912                           ;Bluetooth.c: 73: CommandStringPos = 0;
 23913  008ED6  0E00               	movlw	0
 23914  008ED8  6E27               	movwf	_CommandStringPos,c
 23915                           
 23916                           ;Bluetooth.c: 75: LATA &= ~0x10;
 23917  008EDA  9889               	bcf	3977,4,c	;volatile
 23918                           
 23919                           ;Bluetooth.c: 76: LATA |= 0x08;
 23920  008EDC  8689               	bsf	3977,3,c	;volatile
 23921                           
 23922                           ;Bluetooth.c: 77: LATA &= ~0x10;
 23923  008EDE  9889               	bcf	3977,4,c	;volatile
 23924                           
 23925                           ;Bluetooth.c: 78: if(!BluetoothConfigured())
 23926  008EE0  ECF2  F049         	call	_BluetoothConfigured	;wreg free
 23927  008EE4  0900               	iorlw	0
 23928  008EE6  A4D8               	btfss	status,2,c
 23929  008EE8  0012               	return	
 23930                           
 23931                           ;Bluetooth.c: 79: {
 23932                           ;Bluetooth.c: 80: BluetoothInitialSetup();
 23933  008EEA  EC74  F026         	call	_BluetoothInitialSetup	;wreg free
 23934                           
 23935                           ;Bluetooth.c: 81: ResetBlue();
 23936  008EEE  EC37  F049         	call	_ResetBlue	;wreg free
 23937  008EF2  0012               	return	
 23938  008EF4  0012               	return		;funcret
 23939  008EF6                     __end_of_InitBluetooth:
 23940                           	opt stack 0
 23941                           tblptru	equ	0xFF8
 23942                           tblptrh	equ	0xFF7
 23943                           tblptrl	equ	0xFF6
 23944                           tablat	equ	0xFF5
 23945                           prodh	equ	0xFF4
 23946                           prodl	equ	0xFF3
 23947                           intcon	equ	0xFF2
 23948                           intcon2	equ	0xFF1
 23949                           indf0	equ	0xFEF
 23950                           postinc0	equ	0xFEE
 23951                           fsr0h	equ	0xFEA
 23952                           fsr0l	equ	0xFE9
 23953                           wreg	equ	0xFE8
 23954                           indf1	equ	0xFE7
 23955                           postdec1	equ	0xFE5
 23956                           fsr1h	equ	0xFE2
 23957                           fsr1l	equ	0xFE1
 23958                           indf2	equ	0xFDF
 23959                           postinc2	equ	0xFDE
 23960                           postdec2	equ	0xFDD
 23961                           fsr2h	equ	0xFDA
 23962                           fsr2l	equ	0xFD9
 23963                           status	equ	0xFD8
 23964                           
 23965 ;; *************** function _BluetoothInitialSetup *****************
 23966 ;; Defined at:
 23967 ;;		line 151 in file "Bluetooth.c"
 23968 ;; Parameters:    Size  Location     Type
 23969 ;;		None
 23970 ;; Auto vars:     Size  Location     Type
 23971 ;;  buf            50   46[BANK1 ] unsigned char [50]
 23972 ;;  RFchannel      10   36[BANK1 ] unsigned char [10]
 23973 ;;  ok              1   96[BANK1 ] unsigned char 
 23974 ;; Return value:  Size  Location     Type
 23975 ;;                  1    wreg      unsigned char 
 23976 ;; Registers used:
 23977 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23978 ;; Tracked objects:
 23979 ;;		On entry : 0/0
 23980 ;;		On exit  : 0/0
 23981 ;;		Unchanged: 0/0
 23982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23984 ;;      Locals:         0       0      61       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23986 ;;      Totals:         0       0      61       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23987 ;;Total ram usage:       61 bytes
 23988 ;; Hardware stack levels used:    1
 23989 ;; Hardware stack levels required when called:   10
 23990 ;; This function calls:
 23991 ;;		_EnterCommandMode
 23992 ;;		_StringContains
 23993 ;;		_UARTstring
 23994 ;;		_cleanBuffer
 23995 ;;		_delayUS
 23996 ;;		_sprintf
 23997 ;; This function is called by:
 23998 ;;		_InitBluetooth
 23999 ;; This function uses a non-reentrant model
 24000 ;;
 24001                           
 24002                           	psect	text58
 24003  004CE8                     __ptext58:
 24004                           	opt stack 0
 24005  004CE8                     _BluetoothInitialSetup:
 24006                           	opt stack 18
 24007                           
 24008                           ;Bluetooth.c: 153: unsigned char buf[50];
 24009                           ;Bluetooth.c: 154: unsigned char ok = 1;
 24010                           
 24011                           ;incstack = 0
 24012  004CE8  0E01               	movlw	1
 24013  004CEA  0101               	movlb	1	; () banked
 24014  004CEC  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24015                           
 24016                           ; BSR set to: 1
 24017                           ;Bluetooth.c: 155: unsigned char RFchannel[10];
 24018                           ;Bluetooth.c: 157: cleanBuffer(buf,50);
 24019  004CEE  0E2E               	movlw	low BluetoothInitialSetup@buf
 24020  004CF0  0100               	movlb	0	; () banked
 24021  004CF2  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24022  004CF4  0E01               	movlw	high BluetoothInitialSetup@buf
 24023  004CF6  0100               	movlb	0	; () banked
 24024  004CF8  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24025  004CFA  0E00               	movlw	0
 24026  004CFC  0100               	movlb	0	; () banked
 24027  004CFE  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 24028  004D00  0E32               	movlw	50
 24029  004D02  6F7E               	movwf	cleanBuffer@count& (0+255),b
 24030  004D04  ECCA  F046         	call	_cleanBuffer	;wreg free
 24031                           
 24032                           ;Bluetooth.c: 158: cleanBuffer(RFchannel,10);
 24033  004D08  0E24               	movlw	low BluetoothInitialSetup@RFchannel
 24034  004D0A  0100               	movlb	0	; () banked
 24035  004D0C  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24036  004D0E  0E01               	movlw	high BluetoothInitialSetup@RFchannel
 24037  004D10  0100               	movlb	0	; () banked
 24038  004D12  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24039  004D14  0E00               	movlw	0
 24040  004D16  0100               	movlb	0	; () banked
 24041  004D18  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 24042  004D1A  0E0A               	movlw	10
 24043  004D1C  6F7E               	movwf	cleanBuffer@count& (0+255),b
 24044  004D1E  ECCA  F046         	call	_cleanBuffer	;wreg free
 24045                           
 24046                           ;Bluetooth.c: 160: if(!EnterCommandMode())
 24047  004D22  EC28  F03F         	call	_EnterCommandMode	;wreg free
 24048  004D26  0900               	iorlw	0
 24049  004D28  B4D8               	btfsc	status,2,c
 24050  004D2A  0012               	return	
 24051  004D2C  D001               	goto	l14098
 24052                           
 24053                           ;Bluetooth.c: 161: {
 24054                           ;Bluetooth.c: 162: return 0;
 24055                           ;	Return value of _BluetoothInitialSetup is never used
 24056  004D2E  0012               	return	
 24057  004D30                     l14098:
 24058                           
 24059                           ;Bluetooth.c: 163: }
 24060                           ;Bluetooth.c: 164: sprintf(buf,"SN,Home Automation %ld\r",SN);
 24061  004D30  0E2E               	movlw	low BluetoothInitialSetup@buf
 24062  004D32  0100               	movlb	0	; () banked
 24063  004D34  6FCA               	movwf	sprintf@sp& (0+255),b
 24064  004D36  0E01               	movlw	high BluetoothInitialSetup@buf
 24065  004D38  0100               	movlb	0	; () banked
 24066  004D3A  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 24067  004D3C  0E1D               	movlw	low STR_4
 24068  004D3E  0100               	movlb	0	; () banked
 24069  004D40  6FCC               	movwf	sprintf@f& (0+255),b
 24070  004D42  0EFC               	movlw	high STR_4
 24071  004D44  0100               	movlb	0	; () banked
 24072  004D46  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 24073  004D48  C03C  F0CE         	movff	_SN,?_sprintf+4
 24074  004D4C  C03D  F0CF         	movff	_SN+1,?_sprintf+5
 24075  004D50  C03E  F0D0         	movff	_SN+2,?_sprintf+6
 24076  004D54  C03F  F0D1         	movff	_SN+3,?_sprintf+7
 24077  004D58  ECF0  F010         	call	_sprintf	;wreg free
 24078                           
 24079                           ;Bluetooth.c: 165: UARTstring(buf);
 24080  004D5C  0E2E               	movlw	low BluetoothInitialSetup@buf
 24081  004D5E  0100               	movlb	0	; () banked
 24082  004D60  6F7D               	movwf	UARTstring@data& (0+255),b
 24083  004D62  0E01               	movlw	high BluetoothInitialSetup@buf
 24084  004D64  0100               	movlb	0	; () banked
 24085  004D66  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24086  004D68  ECF7  F046         	call	_UARTstring	;wreg free
 24087                           
 24088                           ;Bluetooth.c: 166: delayUS(50000);
 24089  004D6C  0E50               	movlw	80
 24090  004D6E  0100               	movlb	0	; () banked
 24091  004D70  6F7C               	movwf	delayUS@US& (0+255),b
 24092  004D72  0EC3               	movlw	195
 24093  004D74  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24094  004D76  0E00               	movlw	0
 24095  004D78  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24096  004D7A  0E00               	movlw	0
 24097  004D7C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24098  004D7E  EC7B  F047         	call	_delayUS	;wreg free
 24099                           
 24100                           ;Bluetooth.c: 167: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24101  004D82  0E00               	movlw	low _CommandString
 24102  004D84  0100               	movlb	0	; () banked
 24103  004D86  6F7C               	movwf	StringContains@This& (0+255),b
 24104  004D88  0E05               	movlw	high _CommandString
 24105  004D8A  0100               	movlb	0	; () banked
 24106  004D8C  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24107  004D8E  0EFA               	movlw	low STR_5
 24108  004D90  0100               	movlb	0	; () banked
 24109  004D92  6F7E               	movwf	StringContains@That& (0+255),b
 24110  004D94  0EFF               	movlw	high STR_5
 24111  004D96  0100               	movlb	0	; () banked
 24112  004D98  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24113  004D9A  EC60  F041         	call	_StringContains	;wreg free
 24114  004D9E  0900               	iorlw	0
 24115  004DA0  A4D8               	btfss	status,2,c
 24116  004DA2  D004               	goto	l14108
 24117                           
 24118                           ;Bluetooth.c: 168: {
 24119                           ;Bluetooth.c: 169: ok = 0;
 24120  004DA4  0E00               	movlw	0
 24121  004DA6  0101               	movlb	1	; () banked
 24122  004DA8  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24123  004DAA  D000               	goto	l14108
 24124  004DAC                     l14108:
 24125                           
 24126                           ;Bluetooth.c: 170: }
 24127                           ;Bluetooth.c: 171: cleanBuffer(CommandString,CommandStringPos);
 24128  004DAC  0E00               	movlw	low _CommandString
 24129  004DAE  0100               	movlb	0	; () banked
 24130  004DB0  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24131  004DB2  0E05               	movlw	high _CommandString
 24132  004DB4  0100               	movlb	0	; () banked
 24133  004DB6  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24134  004DB8  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 24135  004DBC  0100               	movlb	0	; () banked
 24136  004DBE  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 24137  004DC0  ECCA  F046         	call	_cleanBuffer	;wreg free
 24138                           
 24139                           ;Bluetooth.c: 172: CommandStringPos = 0;
 24140  004DC4  0E00               	movlw	0
 24141  004DC6  6E27               	movwf	_CommandStringPos,c
 24142                           
 24143                           ;Bluetooth.c: 174: if(ok)
 24144  004DC8  0101               	movlb	1	; () banked
 24145  004DCA  5160               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24146  004DCC  0101               	movlb	1	; () banked
 24147  004DCE  B4D8               	btfsc	status,2,c
 24148  004DD0  D028               	goto	l1825
 24149                           
 24150                           ; BSR set to: 1
 24151                           ;Bluetooth.c: 175: {
 24152                           ;Bluetooth.c: 176: UARTstring((unsigned char *)"SU, 115K\r");
 24153  004DD2  0E6E               	movlw	low STR_6
 24154  004DD4  0100               	movlb	0	; () banked
 24155  004DD6  6F7D               	movwf	UARTstring@data& (0+255),b
 24156  004DD8  0EFF               	movlw	high STR_6
 24157  004DDA  0100               	movlb	0	; () banked
 24158  004DDC  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24159  004DDE  ECF7  F046         	call	_UARTstring	;wreg free
 24160                           
 24161                           ;Bluetooth.c: 177: delayUS(50000);
 24162  004DE2  0E50               	movlw	80
 24163  004DE4  0100               	movlb	0	; () banked
 24164  004DE6  6F7C               	movwf	delayUS@US& (0+255),b
 24165  004DE8  0EC3               	movlw	195
 24166  004DEA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24167  004DEC  0E00               	movlw	0
 24168  004DEE  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24169  004DF0  0E00               	movlw	0
 24170  004DF2  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24171  004DF4  EC7B  F047         	call	_delayUS	;wreg free
 24172                           
 24173                           ;Bluetooth.c: 178: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24174  004DF8  0E00               	movlw	low _CommandString
 24175  004DFA  0100               	movlb	0	; () banked
 24176  004DFC  6F7C               	movwf	StringContains@This& (0+255),b
 24177  004DFE  0E05               	movlw	high _CommandString
 24178  004E00  0100               	movlb	0	; () banked
 24179  004E02  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24180  004E04  0EFA               	movlw	low STR_5
 24181  004E06  0100               	movlb	0	; () banked
 24182  004E08  6F7E               	movwf	StringContains@That& (0+255),b
 24183  004E0A  0EFF               	movlw	high STR_5
 24184  004E0C  0100               	movlb	0	; () banked
 24185  004E0E  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24186  004E10  EC60  F041         	call	_StringContains	;wreg free
 24187  004E14  0900               	iorlw	0
 24188  004E16  A4D8               	btfss	status,2,c
 24189  004E18  D004               	goto	l1825
 24190                           
 24191                           ;Bluetooth.c: 179: {
 24192                           ;Bluetooth.c: 180: ok = 0;
 24193  004E1A  0E00               	movlw	0
 24194  004E1C  0101               	movlb	1	; () banked
 24195  004E1E  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24196  004E20  D000               	goto	l1825
 24197  004E22                     l1825:
 24198                           
 24199                           ;Bluetooth.c: 181: }
 24200                           ;Bluetooth.c: 182: }
 24201                           ;Bluetooth.c: 184: if(ok)
 24202  004E22  0101               	movlb	1	; () banked
 24203  004E24  5160               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24204  004E26  0101               	movlb	1	; () banked
 24205  004E28  B4D8               	btfsc	status,2,c
 24206  004E2A  D028               	goto	l14130
 24207                           
 24208                           ; BSR set to: 1
 24209                           ;Bluetooth.c: 185: {
 24210                           ;Bluetooth.c: 186: UARTstring((unsigned char *)"SS, Home Automation\r");
 24211  004E2C  0EA7               	movlw	low STR_8
 24212  004E2E  0100               	movlb	0	; () banked
 24213  004E30  6F7D               	movwf	UARTstring@data& (0+255),b
 24214  004E32  0EFC               	movlw	high STR_8
 24215  004E34  0100               	movlb	0	; () banked
 24216  004E36  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24217  004E38  ECF7  F046         	call	_UARTstring	;wreg free
 24218                           
 24219                           ;Bluetooth.c: 187: delayUS(50000);
 24220  004E3C  0E50               	movlw	80
 24221  004E3E  0100               	movlb	0	; () banked
 24222  004E40  6F7C               	movwf	delayUS@US& (0+255),b
 24223  004E42  0EC3               	movlw	195
 24224  004E44  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24225  004E46  0E00               	movlw	0
 24226  004E48  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24227  004E4A  0E00               	movlw	0
 24228  004E4C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24229  004E4E  EC7B  F047         	call	_delayUS	;wreg free
 24230                           
 24231                           ;Bluetooth.c: 188: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24232  004E52  0E00               	movlw	low _CommandString
 24233  004E54  0100               	movlb	0	; () banked
 24234  004E56  6F7C               	movwf	StringContains@This& (0+255),b
 24235  004E58  0E05               	movlw	high _CommandString
 24236  004E5A  0100               	movlb	0	; () banked
 24237  004E5C  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24238  004E5E  0EFA               	movlw	low STR_5
 24239  004E60  0100               	movlb	0	; () banked
 24240  004E62  6F7E               	movwf	StringContains@That& (0+255),b
 24241  004E64  0EFF               	movlw	high STR_5
 24242  004E66  0100               	movlb	0	; () banked
 24243  004E68  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24244  004E6A  EC60  F041         	call	_StringContains	;wreg free
 24245  004E6E  0900               	iorlw	0
 24246  004E70  A4D8               	btfss	status,2,c
 24247  004E72  D004               	goto	l14130
 24248                           
 24249                           ;Bluetooth.c: 189: {
 24250                           ;Bluetooth.c: 190: ok = 0;
 24251  004E74  0E00               	movlw	0
 24252  004E76  0101               	movlb	1	; () banked
 24253  004E78  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24254                           
 24255                           ; BSR set to: 1
 24256  004E7A  D000               	goto	l14130
 24257  004E7C                     l14130:
 24258                           
 24259                           ;Bluetooth.c: 191: }
 24260                           ;Bluetooth.c: 192: }
 24261                           ;Bluetooth.c: 193: cleanBuffer(CommandString,CommandStringPos);
 24262  004E7C  0E00               	movlw	low _CommandString
 24263  004E7E  0100               	movlb	0	; () banked
 24264  004E80  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24265  004E82  0E05               	movlw	high _CommandString
 24266  004E84  0100               	movlb	0	; () banked
 24267  004E86  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24268  004E88  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 24269  004E8C  0100               	movlb	0	; () banked
 24270  004E8E  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 24271  004E90  ECCA  F046         	call	_cleanBuffer	;wreg free
 24272                           
 24273                           ;Bluetooth.c: 194: CommandStringPos = 0;
 24274  004E94  0E00               	movlw	0
 24275  004E96  6E27               	movwf	_CommandStringPos,c
 24276                           
 24277                           ;Bluetooth.c: 196: if(ok)
 24278  004E98  0101               	movlb	1	; () banked
 24279  004E9A  5160               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24280  004E9C  0101               	movlb	1	; () banked
 24281  004E9E  B4D8               	btfsc	status,2,c
 24282  004EA0  D028               	goto	l14144
 24283                           
 24284                           ; BSR set to: 1
 24285                           ;Bluetooth.c: 197: {
 24286                           ;Bluetooth.c: 198: UARTstring((unsigned char *)"SY,0010\r");
 24287  004EA2  0E82               	movlw	low STR_10
 24288  004EA4  0100               	movlb	0	; () banked
 24289  004EA6  6F7D               	movwf	UARTstring@data& (0+255),b
 24290  004EA8  0EFF               	movlw	high STR_10
 24291  004EAA  0100               	movlb	0	; () banked
 24292  004EAC  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24293  004EAE  ECF7  F046         	call	_UARTstring	;wreg free
 24294                           
 24295                           ;Bluetooth.c: 199: delayUS(50000);
 24296  004EB2  0E50               	movlw	80
 24297  004EB4  0100               	movlb	0	; () banked
 24298  004EB6  6F7C               	movwf	delayUS@US& (0+255),b
 24299  004EB8  0EC3               	movlw	195
 24300  004EBA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24301  004EBC  0E00               	movlw	0
 24302  004EBE  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24303  004EC0  0E00               	movlw	0
 24304  004EC2  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24305  004EC4  EC7B  F047         	call	_delayUS	;wreg free
 24306                           
 24307                           ;Bluetooth.c: 200: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24308  004EC8  0E00               	movlw	low _CommandString
 24309  004ECA  0100               	movlb	0	; () banked
 24310  004ECC  6F7C               	movwf	StringContains@This& (0+255),b
 24311  004ECE  0E05               	movlw	high _CommandString
 24312  004ED0  0100               	movlb	0	; () banked
 24313  004ED2  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24314  004ED4  0EFA               	movlw	low STR_5
 24315  004ED6  0100               	movlb	0	; () banked
 24316  004ED8  6F7E               	movwf	StringContains@That& (0+255),b
 24317  004EDA  0EFF               	movlw	high STR_5
 24318  004EDC  0100               	movlb	0	; () banked
 24319  004EDE  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24320  004EE0  EC60  F041         	call	_StringContains	;wreg free
 24321  004EE4  0900               	iorlw	0
 24322  004EE6  A4D8               	btfss	status,2,c
 24323  004EE8  D004               	goto	l14144
 24324                           
 24325                           ;Bluetooth.c: 201: {
 24326                           ;Bluetooth.c: 202: ok = 0;
 24327  004EEA  0E00               	movlw	0
 24328  004EEC  0101               	movlb	1	; () banked
 24329  004EEE  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24330                           
 24331                           ; BSR set to: 1
 24332  004EF0  D000               	goto	l14144
 24333  004EF2                     l14144:
 24334                           
 24335                           ;Bluetooth.c: 203: }
 24336                           ;Bluetooth.c: 204: }
 24337                           ;Bluetooth.c: 205: cleanBuffer(CommandString,CommandStringPos);
 24338  004EF2  0E00               	movlw	low _CommandString
 24339  004EF4  0100               	movlb	0	; () banked
 24340  004EF6  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24341  004EF8  0E05               	movlw	high _CommandString
 24342  004EFA  0100               	movlb	0	; () banked
 24343  004EFC  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24344  004EFE  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 24345  004F02  0100               	movlb	0	; () banked
 24346  004F04  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 24347  004F06  ECCA  F046         	call	_cleanBuffer	;wreg free
 24348                           
 24349                           ;Bluetooth.c: 206: CommandStringPos = 0;
 24350  004F0A  0E00               	movlw	0
 24351  004F0C  6E27               	movwf	_CommandStringPos,c
 24352                           
 24353                           ;Bluetooth.c: 208: if(ok)
 24354  004F0E  0101               	movlb	1	; () banked
 24355  004F10  5160               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24356  004F12  0101               	movlb	1	; () banked
 24357  004F14  B4D8               	btfsc	status,2,c
 24358  004F16  D028               	goto	l14158
 24359                           
 24360                           ; BSR set to: 1
 24361                           ;Bluetooth.c: 209: {
 24362                           ;Bluetooth.c: 210: UARTstring((unsigned char *)"S~,0\r");
 24363  004F18  0EBA               	movlw	low STR_12
 24364  004F1A  0100               	movlb	0	; () banked
 24365  004F1C  6F7D               	movwf	UARTstring@data& (0+255),b
 24366  004F1E  0EFF               	movlw	high STR_12
 24367  004F20  0100               	movlb	0	; () banked
 24368  004F22  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24369  004F24  ECF7  F046         	call	_UARTstring	;wreg free
 24370                           
 24371                           ;Bluetooth.c: 211: delayUS(50000);
 24372  004F28  0E50               	movlw	80
 24373  004F2A  0100               	movlb	0	; () banked
 24374  004F2C  6F7C               	movwf	delayUS@US& (0+255),b
 24375  004F2E  0EC3               	movlw	195
 24376  004F30  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24377  004F32  0E00               	movlw	0
 24378  004F34  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24379  004F36  0E00               	movlw	0
 24380  004F38  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24381  004F3A  EC7B  F047         	call	_delayUS	;wreg free
 24382                           
 24383                           ;Bluetooth.c: 212: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24384  004F3E  0E00               	movlw	low _CommandString
 24385  004F40  0100               	movlb	0	; () banked
 24386  004F42  6F7C               	movwf	StringContains@This& (0+255),b
 24387  004F44  0E05               	movlw	high _CommandString
 24388  004F46  0100               	movlb	0	; () banked
 24389  004F48  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24390  004F4A  0EFA               	movlw	low STR_5
 24391  004F4C  0100               	movlb	0	; () banked
 24392  004F4E  6F7E               	movwf	StringContains@That& (0+255),b
 24393  004F50  0EFF               	movlw	high STR_5
 24394  004F52  0100               	movlb	0	; () banked
 24395  004F54  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24396  004F56  EC60  F041         	call	_StringContains	;wreg free
 24397  004F5A  0900               	iorlw	0
 24398  004F5C  A4D8               	btfss	status,2,c
 24399  004F5E  D004               	goto	l14158
 24400                           
 24401                           ;Bluetooth.c: 213: {
 24402                           ;Bluetooth.c: 214: ok = 0;
 24403  004F60  0E00               	movlw	0
 24404  004F62  0101               	movlb	1	; () banked
 24405  004F64  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24406                           
 24407                           ; BSR set to: 1
 24408  004F66  D000               	goto	l14158
 24409  004F68                     l14158:
 24410                           
 24411                           ;Bluetooth.c: 215: }
 24412                           ;Bluetooth.c: 216: }
 24413                           ;Bluetooth.c: 217: cleanBuffer(CommandString,CommandStringPos);
 24414  004F68  0E00               	movlw	low _CommandString
 24415  004F6A  0100               	movlb	0	; () banked
 24416  004F6C  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24417  004F6E  0E05               	movlw	high _CommandString
 24418  004F70  0100               	movlb	0	; () banked
 24419  004F72  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24420  004F74  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 24421  004F78  0100               	movlb	0	; () banked
 24422  004F7A  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 24423  004F7C  ECCA  F046         	call	_cleanBuffer	;wreg free
 24424                           
 24425                           ;Bluetooth.c: 218: CommandStringPos = 0;
 24426  004F80  0E00               	movlw	0
 24427  004F82  6E27               	movwf	_CommandStringPos,c
 24428                           
 24429                           ;Bluetooth.c: 220: if(ok)
 24430  004F84  0101               	movlb	1	; () banked
 24431  004F86  5160               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24432  004F88  0101               	movlb	1	; () banked
 24433  004F8A  B4D8               	btfsc	status,2,c
 24434  004F8C  D028               	goto	l14172
 24435                           
 24436                           ; BSR set to: 1
 24437                           ;Bluetooth.c: 221: {
 24438                           ;Bluetooth.c: 222: UARTstring((unsigned char *)"S~,0\r");
 24439  004F8E  0EBA               	movlw	low STR_12
 24440  004F90  0100               	movlb	0	; () banked
 24441  004F92  6F7D               	movwf	UARTstring@data& (0+255),b
 24442  004F94  0EFF               	movlw	high STR_12
 24443  004F96  0100               	movlb	0	; () banked
 24444  004F98  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24445  004F9A  ECF7  F046         	call	_UARTstring	;wreg free
 24446                           
 24447                           ;Bluetooth.c: 223: delayUS(50000);
 24448  004F9E  0E50               	movlw	80
 24449  004FA0  0100               	movlb	0	; () banked
 24450  004FA2  6F7C               	movwf	delayUS@US& (0+255),b
 24451  004FA4  0EC3               	movlw	195
 24452  004FA6  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24453  004FA8  0E00               	movlw	0
 24454  004FAA  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24455  004FAC  0E00               	movlw	0
 24456  004FAE  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24457  004FB0  EC7B  F047         	call	_delayUS	;wreg free
 24458                           
 24459                           ;Bluetooth.c: 224: if(!StringContains(CommandString,(unsigned char *)"AOK"))
 24460  004FB4  0E00               	movlw	low _CommandString
 24461  004FB6  0100               	movlb	0	; () banked
 24462  004FB8  6F7C               	movwf	StringContains@This& (0+255),b
 24463  004FBA  0E05               	movlw	high _CommandString
 24464  004FBC  0100               	movlb	0	; () banked
 24465  004FBE  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24466  004FC0  0EFA               	movlw	low STR_5
 24467  004FC2  0100               	movlb	0	; () banked
 24468  004FC4  6F7E               	movwf	StringContains@That& (0+255),b
 24469  004FC6  0EFF               	movlw	high STR_5
 24470  004FC8  0100               	movlb	0	; () banked
 24471  004FCA  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24472  004FCC  EC60  F041         	call	_StringContains	;wreg free
 24473  004FD0  0900               	iorlw	0
 24474  004FD2  A4D8               	btfss	status,2,c
 24475  004FD4  D004               	goto	l14172
 24476                           
 24477                           ;Bluetooth.c: 225: {
 24478                           ;Bluetooth.c: 226: ok = 0;
 24479  004FD6  0E00               	movlw	0
 24480  004FD8  0101               	movlb	1	; () banked
 24481  004FDA  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24482                           
 24483                           ; BSR set to: 1
 24484  004FDC  D000               	goto	l14172
 24485  004FDE                     l14172:
 24486                           
 24487                           ;Bluetooth.c: 227: }
 24488                           ;Bluetooth.c: 228: }
 24489                           ;Bluetooth.c: 229: cleanBuffer(CommandString,CommandStringPos);
 24490  004FDE  0E00               	movlw	low _CommandString
 24491  004FE0  0100               	movlb	0	; () banked
 24492  004FE2  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24493  004FE4  0E05               	movlw	high _CommandString
 24494  004FE6  0100               	movlb	0	; () banked
 24495  004FE8  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24496  004FEA  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 24497  004FEE  0100               	movlb	0	; () banked
 24498  004FF0  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 24499  004FF2  ECCA  F046         	call	_cleanBuffer	;wreg free
 24500                           
 24501                           ;Bluetooth.c: 230: CommandStringPos = 0;
 24502  004FF6  0E00               	movlw	0
 24503  004FF8  6E27               	movwf	_CommandStringPos,c
 24504                           
 24505                           ;Bluetooth.c: 232: if(ok)
 24506  004FFA  0101               	movlb	1	; () banked
 24507  004FFC  5160               	movf	BluetoothInitialSetup@ok& (0+255),w,b
 24508  004FFE  0101               	movlb	1	; () banked
 24509  005000  B4D8               	btfsc	status,2,c
 24510  005002  D03E               	goto	l14188
 24511                           
 24512                           ; BSR set to: 1
 24513                           ;Bluetooth.c: 233: {
 24514                           ;Bluetooth.c: 234: UARTstring((unsigned char *)"D,0\r");
 24515  005004  0ED7               	movlw	low STR_16
 24516  005006  0100               	movlb	0	; () banked
 24517  005008  6F7D               	movwf	UARTstring@data& (0+255),b
 24518  00500A  0EFF               	movlw	high STR_16
 24519  00500C  0100               	movlb	0	; () banked
 24520  00500E  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24521  005010  ECF7  F046         	call	_UARTstring	;wreg free
 24522                           
 24523                           ;Bluetooth.c: 235: delayUS(50000);
 24524  005014  0E50               	movlw	80
 24525  005016  0100               	movlb	0	; () banked
 24526  005018  6F7C               	movwf	delayUS@US& (0+255),b
 24527  00501A  0EC3               	movlw	195
 24528  00501C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24529  00501E  0E00               	movlw	0
 24530  005020  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24531  005022  0E00               	movlw	0
 24532  005024  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24533  005026  EC7B  F047         	call	_delayUS	;wreg free
 24534                           
 24535                           ;Bluetooth.c: 236: sprintf(buf,"BTName=Home Automation %ld\r",SN);
 24536  00502A  0E2E               	movlw	low BluetoothInitialSetup@buf
 24537  00502C  0100               	movlb	0	; () banked
 24538  00502E  6FCA               	movwf	sprintf@sp& (0+255),b
 24539  005030  0E01               	movlw	high BluetoothInitialSetup@buf
 24540  005032  0100               	movlb	0	; () banked
 24541  005034  6FCB               	movwf	(sprintf@sp+1)& (0+255),b
 24542  005036  0E7A               	movlw	low STR_17
 24543  005038  0100               	movlb	0	; () banked
 24544  00503A  6FCC               	movwf	sprintf@f& (0+255),b
 24545  00503C  0EFB               	movlw	high STR_17
 24546  00503E  0100               	movlb	0	; () banked
 24547  005040  6FCD               	movwf	(sprintf@f+1)& (0+255),b
 24548  005042  C03C  F0CE         	movff	_SN,?_sprintf+4
 24549  005046  C03D  F0CF         	movff	_SN+1,?_sprintf+5
 24550  00504A  C03E  F0D0         	movff	_SN+2,?_sprintf+6
 24551  00504E  C03F  F0D1         	movff	_SN+3,?_sprintf+7
 24552  005052  ECF0  F010         	call	_sprintf	;wreg free
 24553                           
 24554                           ;Bluetooth.c: 237: if(!StringContains(CommandString, buf))
 24555  005056  0E00               	movlw	low _CommandString
 24556  005058  0100               	movlb	0	; () banked
 24557  00505A  6F7C               	movwf	StringContains@This& (0+255),b
 24558  00505C  0E05               	movlw	high _CommandString
 24559  00505E  0100               	movlb	0	; () banked
 24560  005060  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24561  005062  0E2E               	movlw	low BluetoothInitialSetup@buf
 24562  005064  0100               	movlb	0	; () banked
 24563  005066  6F7E               	movwf	StringContains@That& (0+255),b
 24564  005068  0E01               	movlw	high BluetoothInitialSetup@buf
 24565  00506A  0100               	movlb	0	; () banked
 24566  00506C  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24567  00506E  EC60  F041         	call	_StringContains	;wreg free
 24568  005072  0900               	iorlw	0
 24569  005074  A4D8               	btfss	status,2,c
 24570  005076  D004               	goto	l14188
 24571                           
 24572                           ;Bluetooth.c: 238: {
 24573                           ;Bluetooth.c: 239: ok = 0;
 24574  005078  0E00               	movlw	0
 24575  00507A  0101               	movlb	1	; () banked
 24576  00507C  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24577                           
 24578                           ; BSR set to: 1
 24579  00507E  D000               	goto	l14188
 24580  005080                     l14188:
 24581                           
 24582                           ;Bluetooth.c: 240: }
 24583                           ;Bluetooth.c: 241: }
 24584                           ;Bluetooth.c: 242: cleanBuffer(CommandString,CommandStringPos);
 24585  005080  0E00               	movlw	low _CommandString
 24586  005082  0100               	movlb	0	; () banked
 24587  005084  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24588  005086  0E05               	movlw	high _CommandString
 24589  005088  0100               	movlb	0	; () banked
 24590  00508A  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24591  00508C  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 24592  005090  0100               	movlb	0	; () banked
 24593  005092  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 24594  005094  ECCA  F046         	call	_cleanBuffer	;wreg free
 24595                           
 24596                           ;Bluetooth.c: 243: CommandStringPos = 0;
 24597  005098  0E00               	movlw	0
 24598  00509A  6E27               	movwf	_CommandStringPos,c
 24599                           
 24600                           ;Bluetooth.c: 245: UARTstring((unsigned char *)"---\r");
 24601  00509C  0ED2               	movlw	low STR_18
 24602  00509E  0100               	movlb	0	; () banked
 24603  0050A0  6F7D               	movwf	UARTstring@data& (0+255),b
 24604  0050A2  0EFF               	movlw	high STR_18
 24605  0050A4  0100               	movlb	0	; () banked
 24606  0050A6  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 24607  0050A8  ECF7  F046         	call	_UARTstring	;wreg free
 24608                           
 24609                           ;Bluetooth.c: 246: delayUS(50000);
 24610  0050AC  0E50               	movlw	80
 24611  0050AE  0100               	movlb	0	; () banked
 24612  0050B0  6F7C               	movwf	delayUS@US& (0+255),b
 24613  0050B2  0EC3               	movlw	195
 24614  0050B4  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24615  0050B6  0E00               	movlw	0
 24616  0050B8  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24617  0050BA  0E00               	movlw	0
 24618  0050BC  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24619  0050BE  EC7B  F047         	call	_delayUS	;wreg free
 24620                           
 24621                           ;Bluetooth.c: 247: if(!StringContains(CommandString,(unsigned char *)"END"))
 24622  0050C2  0E00               	movlw	low _CommandString
 24623  0050C4  0100               	movlb	0	; () banked
 24624  0050C6  6F7C               	movwf	StringContains@This& (0+255),b
 24625  0050C8  0E05               	movlw	high _CommandString
 24626  0050CA  0100               	movlb	0	; () banked
 24627  0050CC  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 24628  0050CE  0EF6               	movlw	low STR_19
 24629  0050D0  0100               	movlb	0	; () banked
 24630  0050D2  6F7E               	movwf	StringContains@That& (0+255),b
 24631  0050D4  0EFF               	movlw	high STR_19
 24632  0050D6  0100               	movlb	0	; () banked
 24633  0050D8  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 24634  0050DA  EC60  F041         	call	_StringContains	;wreg free
 24635  0050DE  0900               	iorlw	0
 24636  0050E0  A4D8               	btfss	status,2,c
 24637  0050E2  D004               	goto	l14200
 24638                           
 24639                           ;Bluetooth.c: 248: {
 24640                           ;Bluetooth.c: 249: ok = 0;
 24641  0050E4  0E00               	movlw	0
 24642  0050E6  0101               	movlb	1	; () banked
 24643  0050E8  6F60               	movwf	BluetoothInitialSetup@ok& (0+255),b
 24644  0050EA  D000               	goto	l14200
 24645  0050EC                     l14200:
 24646                           
 24647                           ;Bluetooth.c: 250: }
 24648                           ;Bluetooth.c: 251: cleanBuffer(CommandString,CommandStringPos);
 24649  0050EC  0E00               	movlw	low _CommandString
 24650  0050EE  0100               	movlb	0	; () banked
 24651  0050F0  6F7C               	movwf	cleanBuffer@data& (0+255),b
 24652  0050F2  0E05               	movlw	high _CommandString
 24653  0050F4  0100               	movlb	0	; () banked
 24654  0050F6  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 24655  0050F8  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 24656  0050FC  0100               	movlb	0	; () banked
 24657  0050FE  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 24658  005100  ECCA  F046         	call	_cleanBuffer	;wreg free
 24659                           
 24660                           ;Bluetooth.c: 252: CommandStringPos = 0;
 24661  005104  0E00               	movlw	0
 24662  005106  6E27               	movwf	_CommandStringPos,c
 24663                           
 24664                           ;Bluetooth.c: 255: {
 24665                           ;Bluetooth.c: 256: return 1;
 24666                           ;	Return value of _BluetoothInitialSetup is never used
 24667  005108  0012               	return	
 24668                           
 24669                           ;Bluetooth.c: 257: }
 24670                           ;Bluetooth.c: 258: return 0;
 24671                           ;	Return value of _BluetoothInitialSetup is never used
 24672  00510A  0012               	return		;funcret
 24673  00510C                     __end_of_BluetoothInitialSetup:
 24674                           	opt stack 0
 24675                           tblptru	equ	0xFF8
 24676                           tblptrh	equ	0xFF7
 24677                           tblptrl	equ	0xFF6
 24678                           tablat	equ	0xFF5
 24679                           prodh	equ	0xFF4
 24680                           prodl	equ	0xFF3
 24681                           intcon	equ	0xFF2
 24682                           intcon2	equ	0xFF1
 24683                           indf0	equ	0xFEF
 24684                           postinc0	equ	0xFEE
 24685                           fsr0h	equ	0xFEA
 24686                           fsr0l	equ	0xFE9
 24687                           wreg	equ	0xFE8
 24688                           indf1	equ	0xFE7
 24689                           postdec1	equ	0xFE5
 24690                           fsr1h	equ	0xFE2
 24691                           fsr1l	equ	0xFE1
 24692                           indf2	equ	0xFDF
 24693                           postinc2	equ	0xFDE
 24694                           postdec2	equ	0xFDD
 24695                           fsr2h	equ	0xFDA
 24696                           fsr2l	equ	0xFD9
 24697                           status	equ	0xFD8
 24698                           
 24699 ;; *************** function _sprintf *****************
 24700 ;; Defined at:
 24701 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 24702 ;; Parameters:    Size  Location     Type
 24703 ;;  sp              2  106[BANK0 ] PTR unsigned char 
 24704 ;;		 -> UseBluetooth@buf(100), BluetoothInitialSetup@buf(50), 
 24705 ;;  f               2  108[BANK0 ] PTR const unsigned char 
 24706 ;;		 -> STR_106(19), STR_104(15), STR_89(27), STR_88(16), 
 24707 ;;		 -> STR_87(29), STR_86(21), STR_84(20), STR_76(44), 
 24708 ;;		 -> STR_75(54), STR_74(54), STR_73(63), STR_51(44), 
 24709 ;;		 -> STR_50(46), STR_48(44), STR_47(21), STR_33(17), 
 24710 ;;		 -> STR_32(17), STR_31(20), STR_29(23), STR_28(21), 
 24711 ;;		 -> STR_27(21), STR_17(28), STR_4(24), 
 24712 ;; Auto vars:     Size  Location     Type
 24713 ;;  idx             1    9[BANK1 ] unsigned char 
 24714 ;;  val             4   24[BANK1 ] unsigned long 
 24715 ;;  tmpval          4   18[BANK1 ] struct .
 24716 ;;  fval            3   28[BANK1 ] struct .
 24717 ;;  flag            2   33[BANK1 ] unsigned short 
 24718 ;;  width           2   31[BANK1 ] int 
 24719 ;;  exp             2   22[BANK1 ] int 
 24720 ;;  prec            2   16[BANK1 ] int 
 24721 ;;  ap              2   14[BANK1 ] PTR void [1]
 24722 ;;		 -> ?_sprintf(2), 
 24723 ;;  len             2   12[BANK1 ] unsigned int 
 24724 ;;  cp              2   10[BANK1 ] PTR const unsigned char 
 24725 ;;		 -> STR_151(7), sprintf@c(1), Frequency(4), PCBVersion(5), 
 24726 ;;		 -> FirmVersion(9), GetNumber@temp(4), 
 24727 ;;  c               1   35[BANK1 ] char 
 24728 ;;  d               1    0        unsigned char 
 24729 ;; Return value:  Size  Location     Type
 24730 ;;                  2  106[BANK0 ] int 
 24731 ;; Registers used:
 24732 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24733 ;; Tracked objects:
 24734 ;;		On entry : 0/0
 24735 ;;		On exit  : 0/0
 24736 ;;		Unchanged: 0/0
 24737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24738 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24739 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24740 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24741 ;;      Totals:         0      14      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24742 ;;Total ram usage:       50 bytes
 24743 ;; Hardware stack levels used:    1
 24744 ;; Hardware stack levels required when called:    9
 24745 ;; This function calls:
 24746 ;;		___awdiv
 24747 ;;		___ftadd
 24748 ;;		___ftge
 24749 ;;		___ftmul
 24750 ;;		___ftneg
 24751 ;;		___ftsub
 24752 ;;		___fttol
 24753 ;;		___lldiv
 24754 ;;		___llmod
 24755 ;;		___lltoft
 24756 ;;		___wmul
 24757 ;;		__div_to_l_
 24758 ;;		__tdiv_to_l_
 24759 ;;		_fround
 24760 ;;		_isdigit
 24761 ;;		_scale
 24762 ;; This function is called by:
 24763 ;;		_BluetoothInitialSetup
 24764 ;;		_UseBluetooth
 24765 ;; This function uses a non-reentrant model
 24766 ;;
 24767                           
 24768                           	psect	text59
 24769  0021E0                     __ptext59:
 24770                           	opt stack 0
 24771  0021E0                     _sprintf:
 24772                           	opt stack 20
 24773                           
 24774                           ;doprnt.c: 494: va_list ap;
 24775                           ;doprnt.c: 499: signed char c;
 24776                           ;doprnt.c: 501: int width;
 24777                           ;doprnt.c: 504: int prec;
 24778                           ;doprnt.c: 508: unsigned short flag;
 24779                           ;doprnt.c: 515: char d;
 24780                           ;doprnt.c: 516: double fval;
 24781                           ;doprnt.c: 517: int exp;
 24782                           ;doprnt.c: 523: union {
 24783                           ;doprnt.c: 524: unsigned long vd;
 24784                           ;doprnt.c: 525: double integ;
 24785                           ;doprnt.c: 526: } tmpval;
 24786                           ;doprnt.c: 528: unsigned long val;
 24787                           ;doprnt.c: 529: unsigned len;
 24788                           ;doprnt.c: 530: const char * cp;
 24789                           ;doprnt.c: 533: *ap = __va_start();
 24790                           
 24791                           ;incstack = 0
 24792  0021E0  0ECE               	movlw	low (?_sprintf+4)
 24793  0021E2  0101               	movlb	1	; () banked
 24794  0021E4  6F0E               	movwf	sprintf@ap& (0+255),b
 24795  0021E6  0E00               	movlw	high (?_sprintf+4)
 24796  0021E8  0101               	movlb	1	; () banked
 24797  0021EA  6F0F               	movwf	(sprintf@ap+1)& (0+255),b
 24798                           
 24799                           ;doprnt.c: 536: while(c = *f++) {
 24800  0021EC  EF78  F018         	goto	l13710
 24801  0021F0                     l13338:
 24802                           
 24803                           ; BSR set to: 1
 24804                           ;doprnt.c: 538: if(c != '%')
 24805  0021F0  0E25               	movlw	37
 24806  0021F2  0101               	movlb	1	; () banked
 24807  0021F4  1923               	xorwf	sprintf@c& (0+255),w,b
 24808  0021F6  B4D8               	btfsc	status,2,c
 24809  0021F8  D00B               	goto	l13344
 24810                           
 24811                           ; BSR set to: 1
 24812                           ;doprnt.c: 540: {
 24813                           ;doprnt.c: 541: ((*sp++ = (c)));
 24814  0021FA  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 24815  0021FE  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 24816  002202  C123  FFDF         	movff	sprintf@c,indf2
 24817                           
 24818                           ; BSR set to: 1
 24819  002206  0100               	movlb	0	; () banked
 24820  002208  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 24821  00220A  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 24822                           
 24823                           ;doprnt.c: 542: continue;
 24824  00220C  EF78  F018         	goto	l13710
 24825  002210                     l13344:
 24826                           
 24827                           ;doprnt.c: 543: }
 24828                           ;doprnt.c: 546: width = 0;
 24829  002210  0E00               	movlw	0
 24830  002212  0101               	movlb	1	; () banked
 24831  002214  6F20               	movwf	(sprintf@width+1)& (0+255),b
 24832  002216  0E00               	movlw	0
 24833  002218  6F1F               	movwf	sprintf@width& (0+255),b
 24834                           
 24835                           ;doprnt.c: 548: flag = 0;
 24836  00221A  0E00               	movlw	0
 24837  00221C  0101               	movlb	1	; () banked
 24838  00221E  6F22               	movwf	(sprintf@flag+1)& (0+255),b
 24839  002220  0E00               	movlw	0
 24840  002222  6F21               	movwf	sprintf@flag& (0+255),b
 24841                           
 24842                           ; BSR set to: 1
 24843                           ;doprnt.c: 551: switch(*f) {
 24844                           
 24845                           ;doprnt.c: 550: for(;;) {
 24846  002224  D007               	goto	l13350
 24847  002226                     l13346:
 24848                           
 24849                           ;doprnt.c: 580: flag |= 0x04;
 24850  002226  0101               	movlb	1	; () banked
 24851  002228  8521               	bsf	sprintf@flag& (0+255),2,b
 24852                           
 24853                           ;doprnt.c: 581: f++;
 24854  00222A  0100               	movlb	0	; () banked
 24855  00222C  4BCC               	infsnz	sprintf@f& (0+255),f,b
 24856  00222E  2BCD               	incf	(sprintf@f+1)& (0+255),f,b
 24857                           
 24858                           ;doprnt.c: 582: continue;
 24859  002230  D001               	goto	l13350
 24860                           
 24861                           ; BSR set to: 0
 24862                           ;doprnt.c: 584: }
 24863  002232  D00C               	goto	l13352
 24864  002234                     l13350:
 24865  002234  C0CC  FFF6         	movff	sprintf@f,tblptrl
 24866  002238  C0CD  FFF7         	movff	sprintf@f+1,tblptrh
 24867  00223C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24868  00223C  6AF8               	clrf	tblptru,c
 24869  00223E                     	endif
 24870  00223E                     	if	0	;tblptru may be non-zero
 24871  00223E                     	endif
 24872  00223E  0008               	tblrd		*
 24873  002240  50F5               	movf	tablat,w,c
 24874                           
 24875                           ; Switch size 1, requested type "space"
 24876                           ; Number of cases is 1, Range of values is 48 to 48
 24877                           ; switch strategies available:
 24878                           ; Name         Instructions Cycles
 24879                           ; simple_byte            4     3 (average)
 24880                           ;	Chosen strategy is simple_byte
 24881  002242  0A30               	xorlw	48	; case 48
 24882  002244  B4D8               	btfsc	status,2,c
 24883  002246  D7EF               	goto	l13346
 24884                           
 24885                           ;doprnt.c: 585: break;
 24886  002248  D001               	goto	l13352
 24887                           
 24888                           ;doprnt.c: 586: }
 24889  00224A  D7F4               	goto	l13350
 24890  00224C                     l13352:
 24891                           
 24892                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 24893  00224C  C0CC  FFF6         	movff	sprintf@f,tblptrl
 24894  002250  C0CD  FFF7         	movff	sprintf@f+1,tblptrh
 24895  002254                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24896  002254  6AF8               	clrf	tblptru,c
 24897  002256                     	endif
 24898  002256                     	if	0	;tblptru may be non-zero
 24899  002256                     	endif
 24900  002256  0008               	tblrd		*
 24901  002258  50F5               	movf	tablat,w,c
 24902  00225A  EC68  F049         	call	_isdigit
 24903  00225E  A0D8               	btfss	status,0,c
 24904  002260  D10D               	goto	l13414
 24905                           
 24906                           ;doprnt.c: 598: width = 0;
 24907  002262  0E00               	movlw	0
 24908  002264  0101               	movlb	1	; () banked
 24909  002266  6F20               	movwf	(sprintf@width+1)& (0+255),b
 24910  002268  0E00               	movlw	0
 24911  00226A  6F1F               	movwf	sprintf@width& (0+255),b
 24912  00226C  D000               	goto	l13356
 24913  00226E                     l13356:
 24914                           
 24915                           ;doprnt.c: 600: width *= 10;
 24916  00226E  C11F  F08A         	movff	sprintf@width,___wmul@multiplier
 24917  002272  C120  F08B         	movff	sprintf@width+1,___wmul@multiplier+1
 24918  002276  0E00               	movlw	0
 24919  002278  0100               	movlb	0	; () banked
 24920  00227A  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24921  00227C  0E0A               	movlw	10
 24922  00227E  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 24923  002280  EC00  F049         	call	___wmul	;wreg free
 24924  002284  C08A  F11F         	movff	?___wmul,sprintf@width
 24925  002288  C08B  F120         	movff	?___wmul+1,sprintf@width+1
 24926                           
 24927                           ;doprnt.c: 601: width += *f++ - '0';
 24928  00228C  0ED0               	movlw	208
 24929  00228E  0101               	movlb	1	; () banked
 24930  002290  6F00               	movwf	??_sprintf& (0+255),b
 24931  002292  0EFF               	movlw	255
 24932  002294  0101               	movlb	1	; () banked
 24933  002296  6F01               	movwf	(??_sprintf+1)& (0+255),b
 24934  002298  C0CC  FFF6         	movff	sprintf@f,tblptrl
 24935  00229C  C0CD  FFF7         	movff	sprintf@f+1,tblptrh
 24936  0022A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24937  0022A0  6AF8               	clrf	tblptru,c
 24938  0022A2                     	endif
 24939  0022A2                     	if	0	;tblptru may be non-zero
 24940  0022A2                     	endif
 24941  0022A2  0008               	tblrd		*
 24942  0022A4  50F5               	movf	tablat,w,c
 24943  0022A6  0101               	movlb	1	; () banked
 24944  0022A8  6F02               	movwf	(??_sprintf+2)& (0+255),b
 24945  0022AA  6B03               	clrf	(??_sprintf+3)& (0+255),b
 24946  0022AC  0101               	movlb	1	; () banked
 24947  0022AE  5100               	movf	??_sprintf& (0+255),w,b
 24948  0022B0  0101               	movlb	1	; () banked
 24949  0022B2  2702               	addwf	(??_sprintf+2)& (0+255),f,b
 24950  0022B4  0101               	movlb	1	; () banked
 24951  0022B6  5101               	movf	(??_sprintf+1)& (0+255),w,b
 24952  0022B8  0101               	movlb	1	; () banked
 24953  0022BA  2303               	addwfc	(??_sprintf+3)& (0+255),f,b
 24954  0022BC  0101               	movlb	1	; () banked
 24955  0022BE  5102               	movf	(??_sprintf+2)& (0+255),w,b
 24956  0022C0  0101               	movlb	1	; () banked
 24957  0022C2  271F               	addwf	sprintf@width& (0+255),f,b
 24958  0022C4  0101               	movlb	1	; () banked
 24959  0022C6  5103               	movf	(??_sprintf+3)& (0+255),w,b
 24960  0022C8  0101               	movlb	1	; () banked
 24961  0022CA  2320               	addwfc	(sprintf@width+1)& (0+255),f,b
 24962                           
 24963                           ; BSR set to: 1
 24964  0022CC  0100               	movlb	0	; () banked
 24965  0022CE  4BCC               	infsnz	sprintf@f& (0+255),f,b
 24966  0022D0  2BCD               	incf	(sprintf@f+1)& (0+255),f,b
 24967                           
 24968                           ; BSR set to: 0
 24969                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 24970  0022D2  C0CC  FFF6         	movff	sprintf@f,tblptrl
 24971  0022D6  C0CD  FFF7         	movff	sprintf@f+1,tblptrh
 24972  0022DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24973  0022DA  6AF8               	clrf	tblptru,c
 24974  0022DC                     	endif
 24975  0022DC                     	if	0	;tblptru may be non-zero
 24976  0022DC                     	endif
 24977  0022DC  0008               	tblrd		*
 24978  0022DE  50F5               	movf	tablat,w,c
 24979  0022E0  EC68  F049         	call	_isdigit
 24980  0022E4  A0D8               	btfss	status,0,c
 24981  0022E6  D0CA               	goto	l13414
 24982  0022E8  D7C2               	goto	l13356
 24983                           
 24984                           ;doprnt.c: 635: switch(c = *f++) {
 24985                           
 24986                           ;doprnt.c: 608: }
 24987                           ;doprnt.c: 633: loop:
 24988  0022EA  D0C8               	goto	l13414
 24989                           
 24990                           ;doprnt.c: 638: goto alldone;
 24991                           
 24992                           ;doprnt.c: 637: case 0:
 24993  0022EC  EF8A  F018         	goto	l13712
 24994  0022F0                     l13364:
 24995                           
 24996                           ;doprnt.c: 643: flag |= 0x10;
 24997  0022F0  0101               	movlb	1	; () banked
 24998  0022F2  8921               	bsf	sprintf@flag& (0+255),4,b
 24999                           
 25000                           ;doprnt.c: 644: goto loop;
 25001  0022F4  D0C3               	goto	l13414
 25002  0022F6                     l13366:
 25003                           
 25004                           ; BSR set to: 1
 25005                           ;doprnt.c: 663: flag |= 0x400;
 25006  0022F6  0101               	movlb	1	; () banked
 25007  0022F8  8522               	bsf	(sprintf@flag+1)& (0+255),2,b
 25008                           
 25009                           ; BSR set to: 1
 25010                           ;doprnt.c: 698: case 'i':
 25011                           ;doprnt.c: 699: break;
 25012                           
 25013                           ; BSR set to: 1
 25014                           
 25015                           ;doprnt.c: 697: case 'd':
 25016                           
 25017                           ;doprnt.c: 664: break;
 25018  0022FA  D0EA               	goto	l13416
 25019                           
 25020                           ; BSR set to: 1
 25021                           
 25022                           ;doprnt.c: 712: case 'X':
 25023  0022FC  D000               	goto	l13368
 25024  0022FE                     l13368:
 25025                           
 25026                           ; BSR set to: 1
 25027                           ;doprnt.c: 718: case 'x':
 25028                           ;doprnt.c: 721: flag |= 0x80;
 25029  0022FE  0101               	movlb	1	; () banked
 25030  002300  8F21               	bsf	sprintf@flag& (0+255),7,b
 25031                           
 25032                           ;doprnt.c: 723: break;
 25033  002302  D0E6               	goto	l13416
 25034  002304                     l13370:
 25035                           
 25036                           ; BSR set to: 1
 25037                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 25038  002304  C10E  FFD9         	movff	sprintf@ap,fsr2l
 25039  002308  C10F  FFDA         	movff	sprintf@ap+1,fsr2h
 25040  00230C  CFDE F10A          	movff	postinc2,sprintf@cp
 25041  002310  CFDD F10B          	movff	postdec2,sprintf@cp+1
 25042                           
 25043                           ; BSR set to: 1
 25044  002314  0E02               	movlw	2
 25045  002316  0101               	movlb	1	; () banked
 25046  002318  270E               	addwf	sprintf@ap& (0+255),f,b
 25047  00231A  0E00               	movlw	0
 25048  00231C  230F               	addwfc	(sprintf@ap+1)& (0+255),f,b
 25049                           
 25050                           ; BSR set to: 1
 25051                           ;doprnt.c: 740: if(!cp)
 25052  00231E  0101               	movlb	1	; () banked
 25053  002320  510A               	movf	sprintf@cp& (0+255),w,b
 25054  002322  0101               	movlb	1	; () banked
 25055  002324  110B               	iorwf	(sprintf@cp+1)& (0+255),w,b
 25056  002326  A4D8               	btfss	status,2,c
 25057  002328  D007               	goto	l13378
 25058                           
 25059                           ; BSR set to: 1
 25060                           ;doprnt.c: 741: cp = "(null)";
 25061  00232A  0EA5               	movlw	low STR_151
 25062  00232C  0101               	movlb	1	; () banked
 25063  00232E  6F0A               	movwf	sprintf@cp& (0+255),b
 25064  002330  0EFF               	movlw	high STR_151
 25065  002332  0101               	movlb	1	; () banked
 25066  002334  6F0B               	movwf	(sprintf@cp+1)& (0+255),b
 25067  002336  D000               	goto	l13378
 25068  002338                     l13378:
 25069                           
 25070                           ; BSR set to: 1
 25071                           ;doprnt.c: 745: len = 0;
 25072  002338  0E00               	movlw	0
 25073  00233A  0101               	movlb	1	; () banked
 25074  00233C  6F0D               	movwf	(sprintf@len+1)& (0+255),b
 25075  00233E  0E00               	movlw	0
 25076  002340  6F0C               	movwf	sprintf@len& (0+255),b
 25077                           
 25078                           ;doprnt.c: 746: while(cp[len])
 25079  002342  D004               	goto	l13382
 25080  002344                     l13380:
 25081                           
 25082                           ;doprnt.c: 747: len++;
 25083  002344  0101               	movlb	1	; () banked
 25084  002346  4B0C               	infsnz	sprintf@len& (0+255),f,b
 25085  002348  2B0D               	incf	(sprintf@len+1)& (0+255),f,b
 25086  00234A  D000               	goto	l13382
 25087  00234C                     l13382:
 25088                           
 25089                           ; BSR set to: 1
 25090  00234C  0101               	movlb	1	; () banked
 25091  00234E  510C               	movf	sprintf@len& (0+255),w,b
 25092  002350  0101               	movlb	1	; () banked
 25093  002352  250A               	addwf	sprintf@cp& (0+255),w,b
 25094  002354  0101               	movlb	1	; () banked
 25095  002356  6F00               	movwf	??_sprintf& (0+255),b
 25096  002358  0101               	movlb	1	; () banked
 25097  00235A  510D               	movf	(sprintf@len+1)& (0+255),w,b
 25098  00235C  0101               	movlb	1	; () banked
 25099  00235E  210B               	addwfc	(sprintf@cp+1)& (0+255),w,b
 25100  002360  0101               	movlb	1	; () banked
 25101  002362  6F01               	movwf	(??_sprintf+1)& (0+255),b
 25102  002364  C100  FFF6         	movff	??_sprintf,tblptrl
 25103  002368  C101  FFF7         	movff	??_sprintf+1,tblptrh
 25104  00236C  0E00               	movlw	low (__mediumconst shr (0+16))
 25105  00236E  6EF8               	movwf	tblptru,c
 25106  002370  0E0F               	movlw	(high __ramtop+-1)
 25107  002372  64F7               	cpfsgt	tblptrh,c
 25108  002374  D003               	bra	u16237
 25109  002376  0008               	tblrd		*
 25110  002378  50F5               	movf	tablat,w,c
 25111  00237A  D005               	bra	u16230
 25112  00237C                     u16237:
 25113  00237C  CFF6 FFE9          	movff	tblptrl,fsr0l
 25114  002380  CFF7 FFEA          	movff	tblptrh,fsr0h
 25115  002384  50EF               	movf	indf0,w,c
 25116  002386                     u16230:
 25117  002386  0900               	iorlw	0
 25118  002388  B4D8               	btfsc	status,2,c
 25119  00238A  D002               	goto	l13384
 25120  00238C  D7DB               	goto	l13380
 25121  00238E  D000               	goto	l13384
 25122  002390                     l13384:
 25123                           
 25124                           ;doprnt.c: 757: if(width > len)
 25125  002390  0101               	movlb	1	; () banked
 25126  002392  511F               	movf	sprintf@width& (0+255),w,b
 25127  002394  0101               	movlb	1	; () banked
 25128  002396  5D0C               	subwf	sprintf@len& (0+255),w,b
 25129  002398  0101               	movlb	1	; () banked
 25130  00239A  5120               	movf	(sprintf@width+1)& (0+255),w,b
 25131  00239C  0101               	movlb	1	; () banked
 25132  00239E  590D               	subwfb	(sprintf@len+1)& (0+255),w,b
 25133  0023A0  B0D8               	btfsc	status,0,c
 25134  0023A2  D009               	goto	l13388
 25135                           
 25136                           ; BSR set to: 1
 25137                           ;doprnt.c: 758: width -= len;
 25138  0023A4  0101               	movlb	1	; () banked
 25139  0023A6  510C               	movf	sprintf@len& (0+255),w,b
 25140  0023A8  0101               	movlb	1	; () banked
 25141  0023AA  5F1F               	subwf	sprintf@width& (0+255),f,b
 25142  0023AC  0101               	movlb	1	; () banked
 25143  0023AE  510D               	movf	(sprintf@len+1)& (0+255),w,b
 25144  0023B0  0101               	movlb	1	; () banked
 25145  0023B2  5B20               	subwfb	(sprintf@width+1)& (0+255),f,b
 25146  0023B4  D010               	goto	l13394
 25147  0023B6                     l13388:
 25148                           
 25149                           ; BSR set to: 1
 25150                           ;doprnt.c: 759: else
 25151                           ;doprnt.c: 760: width = 0;
 25152  0023B6  0E00               	movlw	0
 25153  0023B8  0101               	movlb	1	; () banked
 25154  0023BA  6F20               	movwf	(sprintf@width+1)& (0+255),b
 25155  0023BC  0E00               	movlw	0
 25156  0023BE  6F1F               	movwf	sprintf@width& (0+255),b
 25157                           
 25158                           ; BSR set to: 1
 25159                           ;doprnt.c: 764: while(width--)
 25160  0023C0  D00A               	goto	l13394
 25161  0023C2                     l13390:
 25162                           
 25163                           ; BSR set to: 1
 25164                           ;doprnt.c: 765: ((*sp++ = (' ')));
 25165  0023C2  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 25166  0023C6  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 25167  0023CA  0E20               	movlw	32
 25168  0023CC  6EDF               	movwf	indf2,c
 25169                           
 25170                           ; BSR set to: 1
 25171  0023CE  0100               	movlb	0	; () banked
 25172  0023D0  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 25173  0023D2  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 25174  0023D4  D000               	goto	l13394
 25175  0023D6                     l13394:
 25176  0023D6  0101               	movlb	1	; () banked
 25177  0023D8  071F               	decf	sprintf@width& (0+255),f,b
 25178  0023DA  A0D8               	btfss	status,0,c
 25179  0023DC  0720               	decf	(sprintf@width+1)& (0+255),f,b
 25180  0023DE  0101               	movlb	1	; () banked
 25181  0023E0  291F               	incf	sprintf@width& (0+255),w,b
 25182  0023E2  E1EF               	bnz	l13390
 25183  0023E4  0101               	movlb	1	; () banked
 25184  0023E6  2920               	incf	(sprintf@width+1)& (0+255),w,b
 25185  0023E8  B4D8               	btfsc	status,2,c
 25186  0023EA  D01F               	goto	l13402
 25187  0023EC  D7EA               	goto	l13390
 25188                           
 25189                           ; BSR set to: 1
 25190                           ;doprnt.c: 767: while(len--)
 25191  0023EE  D01D               	goto	l13402
 25192  0023F0                     l13396:
 25193                           
 25194                           ; BSR set to: 1
 25195                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 25196  0023F0  C10A  FFF6         	movff	sprintf@cp,tblptrl
 25197  0023F4  C10B  FFF7         	movff	sprintf@cp+1,tblptrh
 25198  0023F8  0E00               	movlw	low (__mediumconst shr (0+16))
 25199  0023FA  6EF8               	movwf	tblptru,c
 25200  0023FC  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 25201  002400  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 25202  002404  0E0F               	movlw	(high __ramtop+-1)
 25203  002406  64F7               	cpfsgt	tblptrh,c
 25204  002408  D003               	bra	u16277
 25205  00240A  0008               	tblrd		*
 25206  00240C  50F5               	movf	tablat,w,c
 25207  00240E  D005               	bra	u16270
 25208  002410                     u16277:
 25209  002410  CFF6 FFE9          	movff	tblptrl,fsr0l
 25210  002414  CFF7 FFEA          	movff	tblptrh,fsr0h
 25211  002418  50EF               	movf	indf0,w,c
 25212  00241A                     u16270:
 25213  00241A  6EDF               	movwf	indf2,c
 25214  00241C  0101               	movlb	1	; () banked
 25215  00241E  4B0A               	infsnz	sprintf@cp& (0+255),f,b
 25216  002420  2B0B               	incf	(sprintf@cp+1)& (0+255),f,b
 25217                           
 25218                           ; BSR set to: 1
 25219  002422  0100               	movlb	0	; () banked
 25220  002424  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 25221  002426  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 25222  002428  D000               	goto	l13402
 25223  00242A                     l13402:
 25224  00242A  0101               	movlb	1	; () banked
 25225  00242C  070C               	decf	sprintf@len& (0+255),f,b
 25226  00242E  A0D8               	btfss	status,0,c
 25227  002430  070D               	decf	(sprintf@len+1)& (0+255),f,b
 25228  002432  0101               	movlb	1	; () banked
 25229  002434  290C               	incf	sprintf@len& (0+255),w,b
 25230  002436  E1DC               	bnz	l13396
 25231  002438  0101               	movlb	1	; () banked
 25232  00243A  290D               	incf	(sprintf@len+1)& (0+255),w,b
 25233  00243C  B4D8               	btfsc	status,2,c
 25234  00243E  EF78  F018         	goto	l13710
 25235  002442  D7D6               	goto	l13396
 25236                           
 25237                           ; BSR set to: 1
 25238                           ;doprnt.c: 774: continue;
 25239  002444  EF78  F018         	goto	l13710
 25240  002448                     l13404:
 25241                           
 25242                           ; BSR set to: 1
 25243                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 25244  002448  C10E  FFD9         	movff	sprintf@ap,fsr2l
 25245  00244C  C10F  FFDA         	movff	sprintf@ap+1,fsr2h
 25246  002450  50DF               	movf	indf2,w,c
 25247  002452  0101               	movlb	1	; () banked
 25248  002454  6F23               	movwf	sprintf@c& (0+255),b
 25249                           
 25250                           ; BSR set to: 1
 25251  002456  0E02               	movlw	2
 25252  002458  0101               	movlb	1	; () banked
 25253  00245A  270E               	addwf	sprintf@ap& (0+255),f,b
 25254  00245C  0E00               	movlw	0
 25255  00245E  230F               	addwfc	(sprintf@ap+1)& (0+255),f,b
 25256  002460  D000               	goto	l13408
 25257  002462                     l13408:
 25258                           
 25259                           ; BSR set to: 1
 25260                           ;doprnt.c: 805: cp = (char *)&c;
 25261  002462  0E23               	movlw	low sprintf@c
 25262  002464  0101               	movlb	1	; () banked
 25263  002466  6F0A               	movwf	sprintf@cp& (0+255),b
 25264  002468  0E01               	movlw	high sprintf@c
 25265  00246A  0101               	movlb	1	; () banked
 25266  00246C  6F0B               	movwf	(sprintf@cp+1)& (0+255),b
 25267                           
 25268                           ; BSR set to: 1
 25269                           ;doprnt.c: 806: len = 1;
 25270  00246E  0E00               	movlw	0
 25271  002470  0101               	movlb	1	; () banked
 25272  002472  6F0D               	movwf	(sprintf@len+1)& (0+255),b
 25273  002474  0E01               	movlw	1
 25274  002476  6F0C               	movwf	sprintf@len& (0+255),b
 25275                           
 25276                           ;doprnt.c: 807: goto dostring;
 25277  002478  D78B               	goto	l13384
 25278                           
 25279                           ; BSR set to: 1
 25280                           ;doprnt.c: 822: }
 25281  00247A  D02A               	goto	l13416
 25282  00247C                     l13414:
 25283  00247C  C0CC  FFF6         	movff	sprintf@f,tblptrl
 25284  002480  C0CD  FFF7         	movff	sprintf@f+1,tblptrh
 25285  002484  0100               	movlb	0	; () banked
 25286  002486  4BCC               	infsnz	sprintf@f& (0+255),f,b
 25287  002488  2BCD               	incf	(sprintf@f+1)& (0+255),f,b
 25288  00248A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 25289  00248A  6AF8               	clrf	tblptru,c
 25290  00248C                     	endif
 25291  00248C                     	if	0	;tblptru may be non-zero
 25292  00248C                     	endif
 25293  00248C  0008               	tblrd		*
 25294  00248E  CFF5 F123          	movff	tablat,sprintf@c
 25295  002492  0101               	movlb	1	; () banked
 25296  002494  5123               	movf	sprintf@c& (0+255),w,b
 25297                           
 25298                           ; Switch size 1, requested type "space"
 25299                           ; Number of cases is 9, Range of values is 0 to 120
 25300                           ; switch strategies available:
 25301                           ; Name         Instructions Cycles
 25302                           ; simple_byte           28    15 (average)
 25303                           ;	Chosen strategy is simple_byte
 25304  002496  0A00               	xorlw	0	; case 0
 25305  002498  B4D8               	btfsc	status,2,c
 25306  00249A  EF8A  F018         	goto	l13712
 25307  00249E  0A58               	xorlw	88	; case 88
 25308  0024A0  B4D8               	btfsc	status,2,c
 25309  0024A2  D72D               	goto	l13368
 25310  0024A4  0A3B               	xorlw	59	; case 99
 25311  0024A6  B4D8               	btfsc	status,2,c
 25312  0024A8  D7CF               	goto	l13404
 25313  0024AA  0A07               	xorlw	7	; case 100
 25314  0024AC  B4D8               	btfsc	status,2,c
 25315  0024AE  D010               	goto	l13416
 25316  0024B0  0A02               	xorlw	2	; case 102
 25317  0024B2  B4D8               	btfsc	status,2,c
 25318  0024B4  D720               	goto	l13366
 25319  0024B6  0A0F               	xorlw	15	; case 105
 25320  0024B8  B4D8               	btfsc	status,2,c
 25321  0024BA  D00A               	goto	l13416
 25322  0024BC  0A05               	xorlw	5	; case 108
 25323  0024BE  B4D8               	btfsc	status,2,c
 25324  0024C0  D717               	goto	l13364
 25325  0024C2  0A1F               	xorlw	31	; case 115
 25326  0024C4  B4D8               	btfsc	status,2,c
 25327  0024C6  D71E               	goto	l13370
 25328  0024C8  0A0B               	xorlw	11	; case 120
 25329  0024CA  B4D8               	btfsc	status,2,c
 25330  0024CC  D718               	goto	l13368
 25331  0024CE  D7C9               	goto	l13408
 25332  0024D0                     l13416:
 25333                           
 25334                           ; BSR set to: 1
 25335                           ;doprnt.c: 825: if(flag & (0x700)) {
 25336  0024D0  0E07               	movlw	7
 25337  0024D2  0101               	movlb	1	; () banked
 25338  0024D4  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
 25339  0024D6  B4D8               	btfsc	status,2,c
 25340  0024D8  D3ED               	goto	l2241
 25341                           
 25342                           ; BSR set to: 1
 25343                           ;doprnt.c: 829: prec = 6;
 25344  0024DA  0E00               	movlw	0
 25345  0024DC  0101               	movlb	1	; () banked
 25346  0024DE  6F11               	movwf	(sprintf@prec+1)& (0+255),b
 25347  0024E0  0E06               	movlw	6
 25348  0024E2  6F10               	movwf	sprintf@prec& (0+255),b
 25349                           
 25350                           ; BSR set to: 1
 25351                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 25352  0024E4  C10E  FFD9         	movff	sprintf@ap,fsr2l
 25353  0024E8  C10F  FFDA         	movff	sprintf@ap+1,fsr2h
 25354  0024EC  CFDE F11C          	movff	postinc2,sprintf@fval
 25355  0024F0  CFDE F11D          	movff	postinc2,sprintf@fval+1
 25356  0024F4  CFDD F11E          	movff	postdec2,sprintf@fval+2
 25357                           
 25358                           ; BSR set to: 1
 25359  0024F8  0E03               	movlw	3
 25360  0024FA  0101               	movlb	1	; () banked
 25361  0024FC  270E               	addwf	sprintf@ap& (0+255),f,b
 25362  0024FE  0E00               	movlw	0
 25363  002500  230F               	addwfc	(sprintf@ap+1)& (0+255),f,b
 25364                           
 25365                           ; BSR set to: 1
 25366                           ;doprnt.c: 831: if(fval < 0.0) {
 25367  002502  0101               	movlb	1	; () banked
 25368  002504  AF1E               	btfss	(sprintf@fval+2)& (0+255),7,b
 25369  002506  D012               	goto	l13430
 25370                           
 25371                           ; BSR set to: 1
 25372                           ;doprnt.c: 832: fval = -fval;
 25373  002508  C11C  F07C         	movff	sprintf@fval,___ftneg@f1
 25374  00250C  C11D  F07D         	movff	sprintf@fval+1,___ftneg@f1+1
 25375  002510  C11E  F07E         	movff	sprintf@fval+2,___ftneg@f1+2
 25376  002514  EC50  F049         	call	___ftneg	;wreg free
 25377  002518  C07C  F11C         	movff	?___ftneg,sprintf@fval
 25378  00251C  C07D  F11D         	movff	?___ftneg+1,sprintf@fval+1
 25379  002520  C07E  F11E         	movff	?___ftneg+2,sprintf@fval+2
 25380                           
 25381                           ;doprnt.c: 833: flag |= 0x03;
 25382  002524  0E03               	movlw	3
 25383  002526  0101               	movlb	1	; () banked
 25384  002528  1321               	iorwf	sprintf@flag& (0+255),f,b
 25385  00252A  D000               	goto	l13430
 25386  00252C                     l13430:
 25387                           
 25388                           ; BSR set to: 1
 25389                           ;doprnt.c: 834: }
 25390                           ;doprnt.c: 835: exp = 0;
 25391  00252C  0E00               	movlw	0
 25392  00252E  0101               	movlb	1	; () banked
 25393  002530  6F17               	movwf	(sprintf@exp+1)& (0+255),b
 25394  002532  0E00               	movlw	0
 25395  002534  6F16               	movwf	sprintf@exp& (0+255),b
 25396                           
 25397                           ; BSR set to: 1
 25398                           ;doprnt.c: 836: if( fval!=0) {
 25399  002536  0101               	movlb	1	; () banked
 25400  002538  511C               	movf	sprintf@fval& (0+255),w,b
 25401  00253A  0101               	movlb	1	; () banked
 25402  00253C  111D               	iorwf	(sprintf@fval+1)& (0+255),w,b
 25403  00253E  0101               	movlb	1	; () banked
 25404  002540  111E               	iorwf	(sprintf@fval+2)& (0+255),w,b
 25405  002542  B4D8               	btfsc	status,2,c
 25406  002544  D09D               	goto	l13458
 25407                           
 25408                           ; BSR set to: 1
 25409                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 25410  002546  0E82               	movlw	130
 25411  002548  0101               	movlb	1	; () banked
 25412  00254A  6F00               	movwf	??_sprintf& (0+255),b
 25413  00254C  0EFF               	movlw	255
 25414  00254E  0101               	movlb	1	; () banked
 25415  002550  6F01               	movwf	(??_sprintf+1)& (0+255),b
 25416  002552  C11C  F102         	movff	sprintf@fval,??_sprintf+2
 25417  002556  C11D  F103         	movff	sprintf@fval+1,??_sprintf+3
 25418  00255A  C11E  F104         	movff	sprintf@fval+2,??_sprintf+4
 25419  00255E  C11F  F105         	movff	sprintf@fval+3,??_sprintf+5
 25420  002562  0E10               	movlw	16
 25421  002564  D006               	goto	u16320
 25422  002566                     u16325:
 25423  002566  0101               	movlb	1	; () banked
 25424  002568  90D8               	bcf	status,0,c
 25425  00256A  3305               	rrcf	(??_sprintf+5)& (0+255),f,b
 25426  00256C  3304               	rrcf	(??_sprintf+4)& (0+255),f,b
 25427  00256E  3303               	rrcf	(??_sprintf+3)& (0+255),f,b
 25428  002570  3302               	rrcf	(??_sprintf+2)& (0+255),f,b
 25429  002572                     u16320:
 25430  002572  2EE8               	decfsz	wreg,f,c
 25431  002574  D7F8               	goto	u16325
 25432  002576  0101               	movlb	1	; () banked
 25433  002578  5102               	movf	(??_sprintf+2)& (0+255),w,b
 25434  00257A  0101               	movlb	1	; () banked
 25435  00257C  2500               	addwf	??_sprintf& (0+255),w,b
 25436  00257E  0101               	movlb	1	; () banked
 25437  002580  6F16               	movwf	sprintf@exp& (0+255),b
 25438  002582  0E00               	movlw	0
 25439  002584  0101               	movlb	1	; () banked
 25440  002586  2101               	addwfc	(??_sprintf+1)& (0+255),w,b
 25441  002588  0101               	movlb	1	; () banked
 25442  00258A  6F17               	movwf	(sprintf@exp+1)& (0+255),b
 25443                           
 25444                           ; BSR set to: 1
 25445                           ;doprnt.c: 838: exp--;
 25446  00258C  0101               	movlb	1	; () banked
 25447  00258E  0716               	decf	sprintf@exp& (0+255),f,b
 25448  002590  A0D8               	btfss	status,0,c
 25449  002592  0717               	decf	(sprintf@exp+1)& (0+255),f,b
 25450                           
 25451                           ; BSR set to: 1
 25452                           ;doprnt.c: 839: exp *= 3;
 25453  002594  C116  F08A         	movff	sprintf@exp,___wmul@multiplier
 25454  002598  C117  F08B         	movff	sprintf@exp+1,___wmul@multiplier+1
 25455  00259C  0E00               	movlw	0
 25456  00259E  0100               	movlb	0	; () banked
 25457  0025A0  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25458  0025A2  0E03               	movlw	3
 25459  0025A4  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 25460  0025A6  EC00  F049         	call	___wmul	;wreg free
 25461  0025AA  C08A  F116         	movff	?___wmul,sprintf@exp
 25462  0025AE  C08B  F117         	movff	?___wmul+1,sprintf@exp+1
 25463                           
 25464                           ;doprnt.c: 840: exp /= 10;
 25465  0025B2  C116  F082         	movff	sprintf@exp,___awdiv@dividend
 25466  0025B6  C117  F083         	movff	sprintf@exp+1,___awdiv@dividend+1
 25467  0025BA  0E00               	movlw	0
 25468  0025BC  0100               	movlb	0	; () banked
 25469  0025BE  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 25470  0025C0  0E0A               	movlw	10
 25471  0025C2  6F84               	movwf	___awdiv@divisor& (0+255),b
 25472  0025C4  EC59  F03E         	call	___awdiv	;wreg free
 25473  0025C8  C082  F116         	movff	?___awdiv,sprintf@exp
 25474  0025CC  C083  F117         	movff	?___awdiv+1,sprintf@exp+1
 25475                           
 25476                           ;doprnt.c: 841: if(exp < 0)
 25477  0025D0  0101               	movlb	1	; () banked
 25478  0025D2  AF17               	btfss	(sprintf@exp+1)& (0+255),7,b
 25479  0025D4  D005               	goto	l13446
 25480                           
 25481                           ; BSR set to: 1
 25482                           ;doprnt.c: 842: exp--;
 25483  0025D6  0101               	movlb	1	; () banked
 25484  0025D8  0716               	decf	sprintf@exp& (0+255),f,b
 25485  0025DA  A0D8               	btfss	status,0,c
 25486  0025DC  0717               	decf	(sprintf@exp+1)& (0+255),f,b
 25487  0025DE  D000               	goto	l13446
 25488  0025E0                     l13446:
 25489                           
 25490                           ; BSR set to: 1
 25491                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 25492  0025E0  0101               	movlb	1	; () banked
 25493  0025E2  5116               	movf	sprintf@exp& (0+255),w,b
 25494  0025E4  0800               	sublw	0
 25495  0025E6  ECAF  F021         	call	_scale
 25496  0025EA  C0A5  F112         	movff	?_scale,sprintf@tmpval
 25497  0025EE  C0A6  F113         	movff	?_scale+1,sprintf@tmpval+1
 25498  0025F2  C0A7  F114         	movff	?_scale+2,sprintf@tmpval+2
 25499                           
 25500                           ;doprnt.c: 847: tmpval.integ *= fval;
 25501  0025F6  C112  F096         	movff	sprintf@tmpval,___ftmul@f1
 25502  0025FA  C113  F097         	movff	sprintf@tmpval+1,___ftmul@f1+1
 25503  0025FE  C114  F098         	movff	sprintf@tmpval+2,___ftmul@f1+2
 25504  002602  C11C  F099         	movff	sprintf@fval,___ftmul@f2
 25505  002606  C11D  F09A         	movff	sprintf@fval+1,___ftmul@f2+1
 25506  00260A  C11E  F09B         	movff	sprintf@fval+2,___ftmul@f2+2
 25507  00260E  EC55  F037         	call	___ftmul	;wreg free
 25508  002612  C096  F112         	movff	?___ftmul,sprintf@tmpval
 25509  002616  C097  F113         	movff	?___ftmul+1,sprintf@tmpval+1
 25510  00261A  C098  F114         	movff	?___ftmul+2,sprintf@tmpval+2
 25511                           
 25512                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 25513  00261E  C112  F07C         	movff	sprintf@tmpval,___ftge@ff1
 25514  002622  C113  F07D         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25515  002626  C114  F07E         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25516  00262A  0E00               	movlw	0
 25517  00262C  0100               	movlb	0	; () banked
 25518  00262E  6F7F               	movwf	___ftge@ff2& (0+255),b
 25519  002630  0E80               	movlw	128
 25520  002632  0100               	movlb	0	; () banked
 25521  002634  6F80               	movwf	(___ftge@ff2+1)& (0+255),b
 25522  002636  0E3F               	movlw	63
 25523  002638  0100               	movlb	0	; () banked
 25524  00263A  6F81               	movwf	(___ftge@ff2+2)& (0+255),b
 25525  00263C  ECC1  F03E         	call	___ftge	;wreg free
 25526  002640  0100               	movlb	0	; () banked
 25527  002642  B0D8               	btfsc	status,0,c
 25528  002644  D005               	goto	l13454
 25529                           
 25530                           ; BSR set to: 0
 25531                           ;doprnt.c: 849: exp--;
 25532  002646  0101               	movlb	1	; () banked
 25533  002648  0716               	decf	sprintf@exp& (0+255),f,b
 25534  00264A  A0D8               	btfss	status,0,c
 25535  00264C  0717               	decf	(sprintf@exp+1)& (0+255),f,b
 25536  00264E  D018               	goto	l13458
 25537  002650                     l13454:
 25538                           
 25539                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 25540  002650  C112  F07C         	movff	sprintf@tmpval,___ftge@ff1
 25541  002654  C113  F07D         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25542  002658  C114  F07E         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25543  00265C  0E00               	movlw	0
 25544  00265E  0100               	movlb	0	; () banked
 25545  002660  6F7F               	movwf	___ftge@ff2& (0+255),b
 25546  002662  0E20               	movlw	32
 25547  002664  0100               	movlb	0	; () banked
 25548  002666  6F80               	movwf	(___ftge@ff2+1)& (0+255),b
 25549  002668  0E41               	movlw	65
 25550  00266A  0100               	movlb	0	; () banked
 25551  00266C  6F81               	movwf	(___ftge@ff2+2)& (0+255),b
 25552  00266E  ECC1  F03E         	call	___ftge	;wreg free
 25553  002672  0100               	movlb	0	; () banked
 25554  002674  A0D8               	btfss	status,0,c
 25555  002676  D004               	goto	l13458
 25556                           
 25557                           ; BSR set to: 0
 25558                           ;doprnt.c: 851: exp++;
 25559  002678  0101               	movlb	1	; () banked
 25560  00267A  4B16               	infsnz	sprintf@exp& (0+255),f,b
 25561  00267C  2B17               	incf	(sprintf@exp+1)& (0+255),f,b
 25562                           
 25563                           ; BSR set to: 1
 25564                           
 25565                           ; BSR set to: 1
 25566  00267E  D000               	goto	l13458
 25567  002680                     l13458:
 25568                           
 25569                           ;doprnt.c: 852: }
 25570                           ;doprnt.c: 1112: if(prec <= 12)
 25571  002680  0101               	movlb	1	; () banked
 25572  002682  BF11               	btfsc	(sprintf@prec+1)& (0+255),7,b
 25573  002684  D008               	goto	l13460
 25574  002686  0101               	movlb	1	; () banked
 25575  002688  5111               	movf	(sprintf@prec+1)& (0+255),w,b
 25576  00268A  E11E               	bnz	l13462
 25577  00268C  0E0D               	movlw	13
 25578  00268E  0101               	movlb	1	; () banked
 25579  002690  5D10               	subwf	sprintf@prec& (0+255),w,b
 25580  002692  B0D8               	btfsc	status,0,c
 25581  002694  D019               	goto	l13462
 25582  002696                     l13460:
 25583                           
 25584                           ; BSR set to: 1
 25585                           ;doprnt.c: 1113: fval += fround(prec);
 25586  002696  C11C  F0AF         	movff	sprintf@fval,___ftadd@f1
 25587  00269A  C11D  F0B0         	movff	sprintf@fval+1,___ftadd@f1+1
 25588  00269E  C11E  F0B1         	movff	sprintf@fval+2,___ftadd@f1+2
 25589  0026A2  0101               	movlb	1	; () banked
 25590  0026A4  5110               	movf	sprintf@prec& (0+255),w,b
 25591  0026A6  EC51  F02C         	call	_fround
 25592  0026AA  C0A5  F0B2         	movff	?_fround,___ftadd@f2
 25593  0026AE  C0A6  F0B3         	movff	?_fround+1,___ftadd@f2+1
 25594  0026B2  C0A7  F0B4         	movff	?_fround+2,___ftadd@f2+2
 25595  0026B6  ECBD  F02D         	call	___ftadd	;wreg free
 25596  0026BA  C0AF  F11C         	movff	?___ftadd,sprintf@fval
 25597  0026BE  C0B0  F11D         	movff	?___ftadd+1,sprintf@fval+1
 25598  0026C2  C0B1  F11E         	movff	?___ftadd+2,sprintf@fval+2
 25599  0026C6  D000               	goto	l13462
 25600  0026C8                     l13462:
 25601                           
 25602                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 25603  0026C8  0101               	movlb	1	; () banked
 25604  0026CA  BF17               	btfsc	(sprintf@exp+1)& (0+255),7,b
 25605  0026CC  D008               	goto	l13464
 25606  0026CE  0101               	movlb	1	; () banked
 25607  0026D0  5117               	movf	(sprintf@exp+1)& (0+255),w,b
 25608  0026D2  E12C               	bnz	l13470
 25609  0026D4  0E0A               	movlw	10
 25610  0026D6  0101               	movlb	1	; () banked
 25611  0026D8  5D16               	subwf	sprintf@exp& (0+255),w,b
 25612  0026DA  B0D8               	btfsc	status,0,c
 25613  0026DC  D027               	goto	l13470
 25614  0026DE                     l13464:
 25615                           
 25616                           ; BSR set to: 1
 25617  0026DE  0101               	movlb	1	; () banked
 25618  0026E0  511C               	movf	sprintf@fval& (0+255),w,b
 25619  0026E2  0101               	movlb	1	; () banked
 25620  0026E4  111D               	iorwf	(sprintf@fval+1)& (0+255),w,b
 25621  0026E6  0101               	movlb	1	; () banked
 25622  0026E8  111E               	iorwf	(sprintf@fval+2)& (0+255),w,b
 25623  0026EA  B4D8               	btfsc	status,2,c
 25624  0026EC  D07F               	goto	l13484
 25625                           
 25626                           ; BSR set to: 1
 25627  0026EE  C11C  F0BB         	movff	sprintf@fval,___fttol@f1
 25628  0026F2  C11D  F0BC         	movff	sprintf@fval+1,___fttol@f1+1
 25629  0026F6  C11E  F0BD         	movff	sprintf@fval+2,___fttol@f1+2
 25630  0026FA  ECB4  F038         	call	___fttol	;wreg free
 25631  0026FE  0100               	movlb	0	; () banked
 25632  002700  51BB               	movf	?___fttol& (0+255),w,b
 25633  002702  0100               	movlb	0	; () banked
 25634  002704  11BC               	iorwf	(?___fttol+1)& (0+255),w,b
 25635  002706  0100               	movlb	0	; () banked
 25636  002708  11BD               	iorwf	(?___fttol+2)& (0+255),w,b
 25637  00270A  0100               	movlb	0	; () banked
 25638  00270C  11BE               	iorwf	(?___fttol+3)& (0+255),w,b
 25639  00270E  A4D8               	btfss	status,2,c
 25640  002710  D06D               	goto	l13484
 25641                           
 25642                           ; BSR set to: 0
 25643  002712  0101               	movlb	1	; () banked
 25644  002714  BF17               	btfsc	(sprintf@exp+1)& (0+255),7,b
 25645  002716  D06A               	goto	l13484
 25646  002718  0101               	movlb	1	; () banked
 25647  00271A  5117               	movf	(sprintf@exp+1)& (0+255),w,b
 25648  00271C  E107               	bnz	l13470
 25649  00271E  0E02               	movlw	2
 25650  002720  0101               	movlb	1	; () banked
 25651  002722  5D16               	subwf	sprintf@exp& (0+255),w,b
 25652  002724  B0D8               	btfsc	status,0,c
 25653  002726  D002               	goto	l13470
 25654  002728  D061               	goto	l13484
 25655  00272A  D000               	goto	l13470
 25656  00272C                     l13470:
 25657                           
 25658                           ; BSR set to: 1
 25659                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 25660  00272C  C112  F07C         	movff	sprintf@tmpval,___ftge@ff1
 25661  002730  C113  F07D         	movff	sprintf@tmpval+1,___ftge@ff1+1
 25662  002734  C114  F07E         	movff	sprintf@tmpval+2,___ftge@ff1+2
 25663  002738  0E70               	movlw	112
 25664  00273A  0100               	movlb	0	; () banked
 25665  00273C  6F7F               	movwf	___ftge@ff2& (0+255),b
 25666  00273E  0E89               	movlw	137
 25667  002740  0100               	movlb	0	; () banked
 25668  002742  6F80               	movwf	(___ftge@ff2+1)& (0+255),b
 25669  002744  0E40               	movlw	64
 25670  002746  0100               	movlb	0	; () banked
 25671  002748  6F81               	movwf	(___ftge@ff2+2)& (0+255),b
 25672  00274A  ECC1  F03E         	call	___ftge	;wreg free
 25673  00274E  0100               	movlb	0	; () banked
 25674  002750  B0D8               	btfsc	status,0,c
 25675  002752  D003               	goto	l13474
 25676                           
 25677                           ; BSR set to: 0
 25678                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 25679  002754  0101               	movlb	1	; () banked
 25680  002756  0EF7               	movlw	247
 25681  002758  D002               	goto	L17
 25682  00275A                     l13474:
 25683                           
 25684                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 25685  00275A  0101               	movlb	1	; () banked
 25686  00275C  0EF8               	movlw	248
 25687  00275E                     L17:
 25688  00275E  2716               	addwf	sprintf@exp& (0+255),f,b
 25689  002760  0EFF               	movlw	255
 25690  002762  2317               	addwfc	(sprintf@exp+1)& (0+255),f,b
 25691  002764  D000               	goto	l13476
 25692  002766                     l13476:
 25693                           
 25694                           ; BSR set to: 1
 25695                           ;doprnt.c: 1124: }
 25696                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 25697  002766  0101               	movlb	1	; () banked
 25698  002768  5116               	movf	sprintf@exp& (0+255),w,b
 25699  00276A  ECAF  F021         	call	_scale
 25700  00276E  C0A5  F112         	movff	?_scale,sprintf@tmpval
 25701  002772  C0A6  F113         	movff	?_scale+1,sprintf@tmpval+1
 25702  002776  C0A7  F114         	movff	?_scale+2,sprintf@tmpval+2
 25703                           
 25704                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 25705  00277A  D017               	goto	l13480
 25706  00277C  C11C  F07C         	movff	sprintf@fval,__div_to_l_@f1
 25707  002780  C11D  F07D         	movff	sprintf@fval+1,__div_to_l_@f1+1
 25708  002784  C11E  F07E         	movff	sprintf@fval+2,__div_to_l_@f1+2
 25709  002788  C112  F07F         	movff	sprintf@tmpval,__div_to_l_@f2
 25710  00278C  C113  F080         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
 25711  002790  C114  F081         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
 25712  002794  EC0C  F035         	call	__div_to_l_	;wreg free
 25713  002798  C07C  F118         	movff	?__div_to_l_,sprintf@val
 25714  00279C  C07D  F119         	movff	?__div_to_l_+1,sprintf@val+1
 25715  0027A0  C07E  F11A         	movff	?__div_to_l_+2,sprintf@val+2
 25716  0027A4  C07F  F11B         	movff	?__div_to_l_+3,sprintf@val+3
 25717  0027A8  D017               	goto	l13482
 25718  0027AA                     l13480:
 25719  0027AA  C11C  F07C         	movff	sprintf@fval,__tdiv_to_l_@f1
 25720  0027AE  C11D  F07D         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 25721  0027B2  C11E  F07E         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 25722  0027B6  C112  F07F         	movff	sprintf@tmpval,__tdiv_to_l_@f2
 25723  0027BA  C113  F080         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
 25724  0027BE  C114  F081         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
 25725  0027C2  EC39  F034         	call	__tdiv_to_l_	;wreg free
 25726  0027C6  C07C  F118         	movff	?__tdiv_to_l_,sprintf@val
 25727  0027CA  C07D  F119         	movff	?__tdiv_to_l_+1,sprintf@val+1
 25728  0027CE  C07E  F11A         	movff	?__tdiv_to_l_+2,sprintf@val+2
 25729  0027D2  C07F  F11B         	movff	?__tdiv_to_l_+3,sprintf@val+3
 25730  0027D6  D000               	goto	l13482
 25731  0027D8                     l13482:
 25732                           
 25733                           ;doprnt.c: 1129: fval = 0.0;
 25734  0027D8  0E00               	movlw	0
 25735  0027DA  0101               	movlb	1	; () banked
 25736  0027DC  6F1C               	movwf	sprintf@fval& (0+255),b
 25737  0027DE  0E00               	movlw	0
 25738  0027E0  0101               	movlb	1	; () banked
 25739  0027E2  6F1D               	movwf	(sprintf@fval+1)& (0+255),b
 25740  0027E4  0E00               	movlw	0
 25741  0027E6  0101               	movlb	1	; () banked
 25742  0027E8  6F1E               	movwf	(sprintf@fval+2)& (0+255),b
 25743                           
 25744                           ;doprnt.c: 1130: } else {
 25745  0027EA  D034               	goto	l13488
 25746  0027EC                     l13484:
 25747                           
 25748                           ;doprnt.c: 1131: val = (unsigned long)fval;
 25749  0027EC  C11C  F0BB         	movff	sprintf@fval,___fttol@f1
 25750  0027F0  C11D  F0BC         	movff	sprintf@fval+1,___fttol@f1+1
 25751  0027F4  C11E  F0BD         	movff	sprintf@fval+2,___fttol@f1+2
 25752  0027F8  ECB4  F038         	call	___fttol	;wreg free
 25753  0027FC  C0BB  F118         	movff	?___fttol,sprintf@val
 25754  002800  C0BC  F119         	movff	?___fttol+1,sprintf@val+1
 25755  002804  C0BD  F11A         	movff	?___fttol+2,sprintf@val+2
 25756  002808  C0BE  F11B         	movff	?___fttol+3,sprintf@val+3
 25757                           
 25758                           ;doprnt.c: 1132: fval -= (double)val;
 25759  00280C  C11C  F0BB         	movff	sprintf@fval,___ftsub@f1
 25760  002810  C11D  F0BC         	movff	sprintf@fval+1,___ftsub@f1+1
 25761  002814  C11E  F0BD         	movff	sprintf@fval+2,___ftsub@f1+2
 25762  002818  C118  F084         	movff	sprintf@val,___lltoft@c
 25763  00281C  C119  F085         	movff	sprintf@val+1,___lltoft@c+1
 25764  002820  C11A  F086         	movff	sprintf@val+2,___lltoft@c+2
 25765  002824  C11B  F087         	movff	sprintf@val+3,___lltoft@c+3
 25766  002828  EC6D  F044         	call	___lltoft	;wreg free
 25767  00282C  C084  F0BE         	movff	?___lltoft,___ftsub@f2
 25768  002830  C085  F0BF         	movff	?___lltoft+1,___ftsub@f2+1
 25769  002834  C086  F0C0         	movff	?___lltoft+2,___ftsub@f2+2
 25770  002838  ECD0  F047         	call	___ftsub	;wreg free
 25771  00283C  C0BB  F11C         	movff	?___ftsub,sprintf@fval
 25772  002840  C0BC  F11D         	movff	?___ftsub+1,sprintf@fval+1
 25773  002844  C0BD  F11E         	movff	?___ftsub+2,sprintf@fval+2
 25774                           
 25775                           ;doprnt.c: 1133: exp = 0;
 25776  002848  0E00               	movlw	0
 25777  00284A  0101               	movlb	1	; () banked
 25778  00284C  6F17               	movwf	(sprintf@exp+1)& (0+255),b
 25779  00284E  0E00               	movlw	0
 25780  002850  6F16               	movwf	sprintf@exp& (0+255),b
 25781  002852  D000               	goto	l13488
 25782  002854                     l13488:
 25783                           
 25784                           ; BSR set to: 1
 25785                           ;doprnt.c: 1134: }
 25786                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 25787  002854  0E01               	movlw	1
 25788  002856  0101               	movlb	1	; () banked
 25789  002858  6F23               	movwf	sprintf@c& (0+255),b
 25790  00285A                     l13490:
 25791                           
 25792                           ; BSR set to: 1
 25793  00285A  0E0A               	movlw	10
 25794  00285C  0101               	movlb	1	; () banked
 25795  00285E  1923               	xorwf	sprintf@c& (0+255),w,b
 25796  002860  B4D8               	btfsc	status,2,c
 25797  002862  D025               	goto	l13502
 25798  002864  D001               	goto	l13494
 25799                           
 25800                           ; BSR set to: 1
 25801  002866  D023               	goto	l13502
 25802  002868                     l13494:
 25803                           
 25804                           ; BSR set to: 1
 25805                           ;doprnt.c: 1137: if(val < dpowers[c])
 25806  002868  0101               	movlb	1	; () banked
 25807  00286A  5123               	movf	sprintf@c& (0+255),w,b
 25808  00286C  0D04               	mullw	4
 25809  00286E  0E19               	movlw	low _dpowers
 25810  002870  24F3               	addwf	prodl,w,c
 25811  002872  6EF6               	movwf	tblptrl,c
 25812  002874  0EF1               	movlw	high _dpowers
 25813  002876  20F4               	addwfc	prodh,w,c
 25814  002878  6EF7               	movwf	tblptrh,c
 25815  00287A                     	if	1	;There are 3 active tblptr bytes
 25816  00287A  6AF8               	clrf	tblptru,c
 25817  00287C  0E00               	movlw	low (__mediumconst shr (0+16))
 25818  00287E  22F8               	addwfc	tblptru,f,c
 25819  002880                     	endif
 25820  002880  0009               	tblrd		*+
 25821  002882  50F5               	movf	tablat,w,c
 25822  002884  0101               	movlb	1	; () banked
 25823  002886  5D18               	subwf	sprintf@val& (0+255),w,b
 25824  002888  0009               	tblrd		*+
 25825  00288A  50F5               	movf	tablat,w,c
 25826  00288C  0101               	movlb	1	; () banked
 25827  00288E  5919               	subwfb	(sprintf@val+1)& (0+255),w,b
 25828  002890  0009               	tblrd		*+
 25829  002892  50F5               	movf	tablat,w,c
 25830  002894  0101               	movlb	1	; () banked
 25831  002896  591A               	subwfb	(sprintf@val+2)& (0+255),w,b
 25832  002898  0009               	tblrd		*+
 25833  00289A  50F5               	movf	tablat,w,c
 25834  00289C  0101               	movlb	1	; () banked
 25835  00289E  591B               	subwfb	(sprintf@val+3)& (0+255),w,b
 25836  0028A0  A0D8               	btfss	status,0,c
 25837  0028A2  D005               	goto	l13502
 25838  0028A4  D001               	goto	l13498
 25839                           
 25840                           ; BSR set to: 1
 25841                           ;doprnt.c: 1138: break;
 25842  0028A6  D003               	goto	l13502
 25843  0028A8                     l13498:
 25844                           
 25845                           ; BSR set to: 1
 25846  0028A8  0101               	movlb	1	; () banked
 25847  0028AA  2B23               	incf	sprintf@c& (0+255),f,b
 25848  0028AC  D7D6               	goto	l13490
 25849  0028AE                     l13502:
 25850                           
 25851                           ; BSR set to: 1
 25852                           ;doprnt.c: 1142: width -= prec + c + exp;
 25853  0028AE  C123  F100         	movff	sprintf@c,??_sprintf
 25854  0028B2  0101               	movlb	1	; () banked
 25855  0028B4  6B01               	clrf	(??_sprintf+1)& (0+255),b
 25856  0028B6  BF00               	btfsc	??_sprintf& (0+255),7,b
 25857  0028B8  0701               	decf	(??_sprintf+1)& (0+255),f,b
 25858  0028BA  0101               	movlb	1	; () banked
 25859  0028BC  5110               	movf	sprintf@prec& (0+255),w,b
 25860  0028BE  0101               	movlb	1	; () banked
 25861  0028C0  2700               	addwf	??_sprintf& (0+255),f,b
 25862  0028C2  0101               	movlb	1	; () banked
 25863  0028C4  5111               	movf	(sprintf@prec+1)& (0+255),w,b
 25864  0028C6  0101               	movlb	1	; () banked
 25865  0028C8  2301               	addwfc	(??_sprintf+1)& (0+255),f,b
 25866  0028CA  0101               	movlb	1	; () banked
 25867  0028CC  5116               	movf	sprintf@exp& (0+255),w,b
 25868  0028CE  0101               	movlb	1	; () banked
 25869  0028D0  2700               	addwf	??_sprintf& (0+255),f,b
 25870  0028D2  0101               	movlb	1	; () banked
 25871  0028D4  5117               	movf	(sprintf@exp+1)& (0+255),w,b
 25872  0028D6  0101               	movlb	1	; () banked
 25873  0028D8  2301               	addwfc	(??_sprintf+1)& (0+255),f,b
 25874  0028DA  0101               	movlb	1	; () banked
 25875  0028DC  5100               	movf	??_sprintf& (0+255),w,b
 25876  0028DE  0101               	movlb	1	; () banked
 25877  0028E0  5F1F               	subwf	sprintf@width& (0+255),f,b
 25878  0028E2  0101               	movlb	1	; () banked
 25879  0028E4  5101               	movf	(??_sprintf+1)& (0+255),w,b
 25880  0028E6  0101               	movlb	1	; () banked
 25881  0028E8  5B20               	subwfb	(sprintf@width+1)& (0+255),f,b
 25882                           
 25883                           ;doprnt.c: 1143: if(
 25884                           ;doprnt.c: 1147: prec)
 25885  0028EA  0101               	movlb	1	; () banked
 25886  0028EC  5110               	movf	sprintf@prec& (0+255),w,b
 25887  0028EE  0101               	movlb	1	; () banked
 25888  0028F0  1111               	iorwf	(sprintf@prec+1)& (0+255),w,b
 25889  0028F2  B4D8               	btfsc	status,2,c
 25890  0028F4  D005               	goto	l13506
 25891                           
 25892                           ; BSR set to: 1
 25893                           ;doprnt.c: 1148: width--;
 25894  0028F6  0101               	movlb	1	; () banked
 25895  0028F8  071F               	decf	sprintf@width& (0+255),f,b
 25896  0028FA  A0D8               	btfss	status,0,c
 25897  0028FC  0720               	decf	(sprintf@width+1)& (0+255),f,b
 25898  0028FE  D000               	goto	l13506
 25899  002900                     l13506:
 25900                           
 25901                           ; BSR set to: 1
 25902                           ;doprnt.c: 1149: if(flag & 0x03)
 25903  002900  0E03               	movlw	3
 25904  002902  0101               	movlb	1	; () banked
 25905  002904  1521               	andwf	sprintf@flag& (0+255),w,b
 25906  002906  0101               	movlb	1	; () banked
 25907  002908  6F00               	movwf	??_sprintf& (0+255),b
 25908  00290A  0E00               	movlw	0
 25909  00290C  0101               	movlb	1	; () banked
 25910  00290E  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
 25911  002910  0101               	movlb	1	; () banked
 25912  002912  6F01               	movwf	(??_sprintf+1)& (0+255),b
 25913  002914  0101               	movlb	1	; () banked
 25914  002916  5100               	movf	??_sprintf& (0+255),w,b
 25915  002918  0101               	movlb	1	; () banked
 25916  00291A  1101               	iorwf	(??_sprintf+1)& (0+255),w,b
 25917  00291C  B4D8               	btfsc	status,2,c
 25918  00291E  D005               	goto	l13510
 25919                           
 25920                           ; BSR set to: 1
 25921                           ;doprnt.c: 1150: width--;
 25922  002920  0101               	movlb	1	; () banked
 25923  002922  071F               	decf	sprintf@width& (0+255),f,b
 25924  002924  A0D8               	btfss	status,0,c
 25925  002926  0720               	decf	(sprintf@width+1)& (0+255),f,b
 25926  002928  D000               	goto	l13510
 25927  00292A                     l13510:
 25928                           
 25929                           ; BSR set to: 1
 25930                           ;doprnt.c: 1153: if(flag & 0x04) {
 25931  00292A  0101               	movlb	1	; () banked
 25932  00292C  A521               	btfss	sprintf@flag& (0+255),2,b
 25933  00292E  D043               	goto	l13532
 25934                           
 25935                           ; BSR set to: 1
 25936                           ;doprnt.c: 1157: if(flag & 0x03)
 25937  002930  0E03               	movlw	3
 25938  002932  0101               	movlb	1	; () banked
 25939  002934  1521               	andwf	sprintf@flag& (0+255),w,b
 25940  002936  0101               	movlb	1	; () banked
 25941  002938  6F00               	movwf	??_sprintf& (0+255),b
 25942  00293A  0E00               	movlw	0
 25943  00293C  0101               	movlb	1	; () banked
 25944  00293E  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
 25945  002940  0101               	movlb	1	; () banked
 25946  002942  6F01               	movwf	(??_sprintf+1)& (0+255),b
 25947  002944  0101               	movlb	1	; () banked
 25948  002946  5100               	movf	??_sprintf& (0+255),w,b
 25949  002948  0101               	movlb	1	; () banked
 25950  00294A  1101               	iorwf	(??_sprintf+1)& (0+255),w,b
 25951  00294C  B4D8               	btfsc	status,2,c
 25952  00294E  D018               	goto	l13524
 25953                           
 25954                           ; BSR set to: 1
 25955                           ;doprnt.c: 1159: ((*sp++ = ('-')));
 25956  002950  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 25957  002954  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 25958  002958  0E2D               	movlw	45
 25959  00295A  6EDF               	movwf	indf2,c
 25960                           
 25961                           ; BSR set to: 1
 25962  00295C  0100               	movlb	0	; () banked
 25963  00295E  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 25964  002960  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 25965                           
 25966                           ; BSR set to: 0
 25967                           ;doprnt.c: 1168: while(width > 0) {
 25968  002962  D00E               	goto	l13524
 25969  002964                     l13518:
 25970                           
 25971                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 25972  002964  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 25973  002968  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 25974  00296C  0E30               	movlw	48
 25975  00296E  6EDF               	movwf	indf2,c
 25976  002970  0100               	movlb	0	; () banked
 25977  002972  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 25978  002974  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 25979                           
 25980                           ; BSR set to: 0
 25981                           ;doprnt.c: 1170: width--;
 25982  002976  0101               	movlb	1	; () banked
 25983  002978  071F               	decf	sprintf@width& (0+255),f,b
 25984  00297A  A0D8               	btfss	status,0,c
 25985  00297C  0720               	decf	(sprintf@width+1)& (0+255),f,b
 25986  00297E  D000               	goto	l13524
 25987  002980                     l13524:
 25988  002980  0101               	movlb	1	; () banked
 25989  002982  BF20               	btfsc	(sprintf@width+1)& (0+255),7,b
 25990  002984  D08A               	goto	l13548
 25991  002986  0101               	movlb	1	; () banked
 25992  002988  5120               	movf	(sprintf@width+1)& (0+255),w,b
 25993  00298A  E1EC               	bnz	l13518
 25994  00298C  0101               	movlb	1	; () banked
 25995  00298E  051F               	decf	sprintf@width& (0+255),w,b
 25996  002990  A0D8               	btfss	status,0,c
 25997  002992  D083               	goto	l13548
 25998  002994  D7E7               	goto	l13518
 25999                           
 26000                           ; BSR set to: 1
 26001                           ;doprnt.c: 1171: }
 26002                           ;doprnt.c: 1173: } else
 26003  002996  D081               	goto	l13548
 26004                           
 26005                           ; BSR set to: 1
 26006                           ;doprnt.c: 1175: {
 26007                           ;doprnt.c: 1180: while(width > 0) {
 26008  002998  D00E               	goto	l13532
 26009  00299A                     l13526:
 26010                           
 26011                           ; BSR set to: 1
 26012                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 26013  00299A  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26014  00299E  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26015  0029A2  0E20               	movlw	32
 26016  0029A4  6EDF               	movwf	indf2,c
 26017                           
 26018                           ; BSR set to: 1
 26019  0029A6  0100               	movlb	0	; () banked
 26020  0029A8  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26021  0029AA  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26022                           
 26023                           ; BSR set to: 0
 26024                           ;doprnt.c: 1182: width--;
 26025  0029AC  0101               	movlb	1	; () banked
 26026  0029AE  071F               	decf	sprintf@width& (0+255),f,b
 26027  0029B0  A0D8               	btfss	status,0,c
 26028  0029B2  0720               	decf	(sprintf@width+1)& (0+255),f,b
 26029  0029B4  D000               	goto	l13532
 26030  0029B6                     l13532:
 26031                           
 26032                           ; BSR set to: 1
 26033  0029B6  0101               	movlb	1	; () banked
 26034  0029B8  BF20               	btfsc	(sprintf@width+1)& (0+255),7,b
 26035  0029BA  D007               	goto	l13534
 26036  0029BC  0101               	movlb	1	; () banked
 26037  0029BE  5120               	movf	(sprintf@width+1)& (0+255),w,b
 26038  0029C0  E1EC               	bnz	l13526
 26039  0029C2  0101               	movlb	1	; () banked
 26040  0029C4  051F               	decf	sprintf@width& (0+255),w,b
 26041  0029C6  B0D8               	btfsc	status,0,c
 26042  0029C8  D7E8               	goto	l13526
 26043  0029CA                     l13534:
 26044                           
 26045                           ; BSR set to: 1
 26046                           ;doprnt.c: 1183: }
 26047                           ;doprnt.c: 1188: if(flag & 0x03)
 26048  0029CA  0E03               	movlw	3
 26049  0029CC  0101               	movlb	1	; () banked
 26050  0029CE  1521               	andwf	sprintf@flag& (0+255),w,b
 26051  0029D0  0101               	movlb	1	; () banked
 26052  0029D2  6F00               	movwf	??_sprintf& (0+255),b
 26053  0029D4  0E00               	movlw	0
 26054  0029D6  0101               	movlb	1	; () banked
 26055  0029D8  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
 26056  0029DA  0101               	movlb	1	; () banked
 26057  0029DC  6F01               	movwf	(??_sprintf+1)& (0+255),b
 26058  0029DE  0101               	movlb	1	; () banked
 26059  0029E0  5100               	movf	??_sprintf& (0+255),w,b
 26060  0029E2  0101               	movlb	1	; () banked
 26061  0029E4  1101               	iorwf	(??_sprintf+1)& (0+255),w,b
 26062  0029E6  B4D8               	btfsc	status,2,c
 26063  0029E8  D058               	goto	l13548
 26064                           
 26065                           ; BSR set to: 1
 26066                           ;doprnt.c: 1190: ((*sp++ = ('-')));
 26067  0029EA  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26068  0029EE  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26069  0029F2  0E2D               	movlw	45
 26070  0029F4  D050               	goto	L18
 26071  0029F6                     l13538:
 26072                           
 26073                           ; BSR set to: 1
 26074  0029F6  0100               	movlb	0	; () banked
 26075  0029F8  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26076  0029FA  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26077                           
 26078                           ; BSR set to: 0
 26079                           ;doprnt.c: 1195: }
 26080                           ;doprnt.c: 1196: while(c--) {
 26081                           
 26082                           ; BSR set to: 0
 26083  0029FC  D04E               	goto	l13548
 26084  0029FE                     l13540:
 26085                           
 26086                           ;doprnt.c: 1200: {
 26087                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 26088  0029FE  C118  F07C         	movff	sprintf@val,___lldiv@dividend
 26089  002A02  C119  F07D         	movff	sprintf@val+1,___lldiv@dividend+1
 26090  002A06  C11A  F07E         	movff	sprintf@val+2,___lldiv@dividend+2
 26091  002A0A  C11B  F07F         	movff	sprintf@val+3,___lldiv@dividend+3
 26092  002A0E  0101               	movlb	1	; () banked
 26093  002A10  5123               	movf	sprintf@c& (0+255),w,b
 26094  002A12  0D04               	mullw	4
 26095  002A14  0E19               	movlw	low _dpowers
 26096  002A16  24F3               	addwf	prodl,w,c
 26097  002A18  6EF6               	movwf	tblptrl,c
 26098  002A1A  0EF1               	movlw	high _dpowers
 26099  002A1C  20F4               	addwfc	prodh,w,c
 26100  002A1E  6EF7               	movwf	tblptrh,c
 26101  002A20                     	if	1	;There are 3 active tblptr bytes
 26102  002A20  6AF8               	clrf	tblptru,c
 26103  002A22  0E00               	movlw	low (__mediumconst shr (0+16))
 26104  002A24  22F8               	addwfc	tblptru,f,c
 26105  002A26                     	endif
 26106  002A26  0009               	tblrd		*+
 26107  002A28  CFF5 F080          	movff	tablat,___lldiv@divisor
 26108  002A2C  0009               	tblrd		*+
 26109  002A2E  CFF5 F081          	movff	tablat,___lldiv@divisor+1
 26110  002A32  0009               	tblrd		*+
 26111  002A34  CFF5 F082          	movff	tablat,___lldiv@divisor+2
 26112  002A38  000A               	tblrd		*-
 26113  002A3A  CFF5 F083          	movff	tablat,___lldiv@divisor+3
 26114  002A3E  EC8C  F03F         	call	___lldiv	;wreg free
 26115  002A42  C07C  F112         	movff	?___lldiv,sprintf@tmpval
 26116  002A46  C07D  F113         	movff	?___lldiv+1,sprintf@tmpval+1
 26117  002A4A  C07E  F114         	movff	?___lldiv+2,sprintf@tmpval+2
 26118  002A4E  C07F  F115         	movff	?___lldiv+3,sprintf@tmpval+3
 26119                           
 26120                           ;doprnt.c: 1202: tmpval.vd %= 10;
 26121  002A52  C112  F089         	movff	sprintf@tmpval,___llmod@dividend
 26122  002A56  C113  F08A         	movff	sprintf@tmpval+1,___llmod@dividend+1
 26123  002A5A  C114  F08B         	movff	sprintf@tmpval+2,___llmod@dividend+2
 26124  002A5E  C115  F08C         	movff	sprintf@tmpval+3,___llmod@dividend+3
 26125  002A62  0E0A               	movlw	10
 26126  002A64  0100               	movlb	0	; () banked
 26127  002A66  6F8D               	movwf	___llmod@divisor& (0+255),b
 26128  002A68  0E00               	movlw	0
 26129  002A6A  6F8E               	movwf	(___llmod@divisor+1)& (0+255),b
 26130  002A6C  0E00               	movlw	0
 26131  002A6E  6F8F               	movwf	(___llmod@divisor+2)& (0+255),b
 26132  002A70  0E00               	movlw	0
 26133  002A72  6F90               	movwf	(___llmod@divisor+3)& (0+255),b
 26134  002A74  EC10  F042         	call	___llmod	;wreg free
 26135  002A78  C089  F112         	movff	?___llmod,sprintf@tmpval
 26136  002A7C  C08A  F113         	movff	?___llmod+1,sprintf@tmpval+1
 26137  002A80  C08B  F114         	movff	?___llmod+2,sprintf@tmpval+2
 26138  002A84  C08C  F115         	movff	?___llmod+3,sprintf@tmpval+3
 26139                           
 26140                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 26141  002A88  0101               	movlb	1	; () banked
 26142  002A8A  5112               	movf	sprintf@tmpval& (0+255),w,b
 26143  002A8C  0F30               	addlw	48
 26144  002A8E  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26145  002A92  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26146  002A96                     L18:
 26147  002A96  6EDF               	movwf	indf2,c
 26148  002A98  D7AE               	goto	l13538
 26149  002A9A                     l13548:
 26150  002A9A  0101               	movlb	1	; () banked
 26151  002A9C  0723               	decf	sprintf@c& (0+255),f,b
 26152  002A9E  0101               	movlb	1	; () banked
 26153  002AA0  2923               	incf	sprintf@c& (0+255),w,b
 26154  002AA2  B4D8               	btfsc	status,2,c
 26155  002AA4  D010               	goto	l13556
 26156  002AA6  D7AB               	goto	l13540
 26157                           
 26158                           ; BSR set to: 1
 26159                           ;doprnt.c: 1204: }
 26160                           ;doprnt.c: 1206: }
 26161                           ;doprnt.c: 1207: while(exp > 0) {
 26162  002AA8  D00E               	goto	l13556
 26163  002AAA                     l13550:
 26164                           
 26165                           ; BSR set to: 1
 26166                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 26167  002AAA  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26168  002AAE  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26169  002AB2  0E30               	movlw	48
 26170  002AB4  6EDF               	movwf	indf2,c
 26171                           
 26172                           ; BSR set to: 1
 26173  002AB6  0100               	movlb	0	; () banked
 26174  002AB8  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26175  002ABA  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26176                           
 26177                           ; BSR set to: 0
 26178                           ;doprnt.c: 1209: exp--;
 26179  002ABC  0101               	movlb	1	; () banked
 26180  002ABE  0716               	decf	sprintf@exp& (0+255),f,b
 26181  002AC0  A0D8               	btfss	status,0,c
 26182  002AC2  0717               	decf	(sprintf@exp+1)& (0+255),f,b
 26183  002AC4  D000               	goto	l13556
 26184  002AC6                     l13556:
 26185                           
 26186                           ; BSR set to: 1
 26187  002AC6  0101               	movlb	1	; () banked
 26188  002AC8  BF17               	btfsc	(sprintf@exp+1)& (0+255),7,b
 26189  002ACA  D007               	goto	l13558
 26190  002ACC  0101               	movlb	1	; () banked
 26191  002ACE  5117               	movf	(sprintf@exp+1)& (0+255),w,b
 26192  002AD0  E1EC               	bnz	l13550
 26193  002AD2  0101               	movlb	1	; () banked
 26194  002AD4  0516               	decf	sprintf@exp& (0+255),w,b
 26195  002AD6  B0D8               	btfsc	status,0,c
 26196  002AD8  D7E8               	goto	l13550
 26197  002ADA                     l13558:
 26198                           
 26199                           ; BSR set to: 1
 26200                           ;doprnt.c: 1210: }
 26201                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 26202  002ADA  0101               	movlb	1	; () banked
 26203  002ADC  BF11               	btfsc	(sprintf@prec+1)& (0+255),7,b
 26204  002ADE  D00C               	goto	l2280
 26205  002AE0  0101               	movlb	1	; () banked
 26206  002AE2  5111               	movf	(sprintf@prec+1)& (0+255),w,b
 26207  002AE4  E105               	bnz	u16540
 26208  002AE6  0E09               	movlw	9
 26209  002AE8  0101               	movlb	1	; () banked
 26210  002AEA  5D10               	subwf	sprintf@prec& (0+255),w,b
 26211  002AEC  A0D8               	btfss	status,0,c
 26212  002AEE  D004               	goto	l2280
 26213  002AF0                     u16540:
 26214                           
 26215                           ; BSR set to: 1
 26216                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 26217  002AF0  0E08               	movlw	8
 26218  002AF2  0101               	movlb	1	; () banked
 26219  002AF4  6F23               	movwf	sprintf@c& (0+255),b
 26220  002AF6  D003               	goto	l13562
 26221  002AF8                     l2280:
 26222                           
 26223                           ; BSR set to: 1
 26224                           ;doprnt.c: 1213: else
 26225                           ;doprnt.c: 1214: c = prec;
 26226  002AF8  C110  F123         	movff	sprintf@prec,sprintf@c
 26227  002AFC  D000               	goto	l13562
 26228  002AFE                     l13562:
 26229                           
 26230                           ; BSR set to: 1
 26231                           ;doprnt.c: 1215: prec -= c;
 26232  002AFE  0101               	movlb	1	; () banked
 26233  002B00  5123               	movf	sprintf@c& (0+255),w,b
 26234  002B02  0101               	movlb	1	; () banked
 26235  002B04  5F10               	subwf	sprintf@prec& (0+255),f,b
 26236  002B06  0E00               	movlw	0
 26237  002B08  0101               	movlb	1	; () banked
 26238  002B0A  BF23               	btfsc	sprintf@c& (0+255),7,b
 26239  002B0C  0EFF               	movlw	255
 26240  002B0E  0101               	movlb	1	; () banked
 26241  002B10  5B11               	subwfb	(sprintf@prec+1)& (0+255),f,b
 26242                           
 26243                           ; BSR set to: 1
 26244                           ;doprnt.c: 1219: if(c)
 26245  002B12  0101               	movlb	1	; () banked
 26246  002B14  5123               	movf	sprintf@c& (0+255),w,b
 26247  002B16  0101               	movlb	1	; () banked
 26248  002B18  B4D8               	btfsc	status,2,c
 26249  002B1A  D00A               	goto	l13570
 26250                           
 26251                           ; BSR set to: 1
 26252                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 26253  002B1C  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26254  002B20  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26255  002B24  0E2E               	movlw	46
 26256  002B26  6EDF               	movwf	indf2,c
 26257                           
 26258                           ; BSR set to: 1
 26259  002B28  0100               	movlb	0	; () banked
 26260  002B2A  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26261  002B2C  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26262  002B2E  D000               	goto	l13570
 26263  002B30                     l13570:
 26264                           
 26265                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 26266  002B30  0101               	movlb	1	; () banked
 26267  002B32  5123               	movf	sprintf@c& (0+255),w,b
 26268  002B34  ECAF  F021         	call	_scale
 26269  002B38  C0A5  F106         	movff	?_scale,_sprintf$3810
 26270  002B3C  C0A6  F107         	movff	?_scale+1,_sprintf$3810+1
 26271  002B40  C0A7  F108         	movff	?_scale+2,_sprintf$3810+2
 26272                           
 26273                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 26274  002B44  C11C  F099         	movff	sprintf@fval,___ftmul@f2
 26275  002B48  C11D  F09A         	movff	sprintf@fval+1,___ftmul@f2+1
 26276  002B4C  C11E  F09B         	movff	sprintf@fval+2,___ftmul@f2+2
 26277  002B50  C106  F096         	movff	_sprintf$3810,___ftmul@f1
 26278  002B54  C107  F097         	movff	_sprintf$3810+1,___ftmul@f1+1
 26279  002B58  C108  F098         	movff	_sprintf$3810+2,___ftmul@f1+2
 26280  002B5C  EC55  F037         	call	___ftmul	;wreg free
 26281  002B60  C096  F0BB         	movff	?___ftmul,___fttol@f1
 26282  002B64  C097  F0BC         	movff	?___ftmul+1,___fttol@f1+1
 26283  002B68  C098  F0BD         	movff	?___ftmul+2,___fttol@f1+2
 26284  002B6C  ECB4  F038         	call	___fttol	;wreg free
 26285  002B70  C0BB  F118         	movff	?___fttol,sprintf@val
 26286  002B74  C0BC  F119         	movff	?___fttol+1,sprintf@val+1
 26287  002B78  C0BD  F11A         	movff	?___fttol+2,sprintf@val+2
 26288  002B7C  C0BE  F11B         	movff	?___fttol+3,sprintf@val+3
 26289                           
 26290                           ;doprnt.c: 1228: while(c--) {
 26291  002B80  D07B               	goto	l13584
 26292  002B82                     l13574:
 26293                           
 26294                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 26295  002B82  C118  F07C         	movff	sprintf@val,___lldiv@dividend
 26296  002B86  C119  F07D         	movff	sprintf@val+1,___lldiv@dividend+1
 26297  002B8A  C11A  F07E         	movff	sprintf@val+2,___lldiv@dividend+2
 26298  002B8E  C11B  F07F         	movff	sprintf@val+3,___lldiv@dividend+3
 26299  002B92  0101               	movlb	1	; () banked
 26300  002B94  5123               	movf	sprintf@c& (0+255),w,b
 26301  002B96  0D04               	mullw	4
 26302  002B98  0E19               	movlw	low _dpowers
 26303  002B9A  24F3               	addwf	prodl,w,c
 26304  002B9C  6EF6               	movwf	tblptrl,c
 26305  002B9E  0EF1               	movlw	high _dpowers
 26306  002BA0  20F4               	addwfc	prodh,w,c
 26307  002BA2  6EF7               	movwf	tblptrh,c
 26308  002BA4                     	if	1	;There are 3 active tblptr bytes
 26309  002BA4  6AF8               	clrf	tblptru,c
 26310  002BA6  0E00               	movlw	low (__mediumconst shr (0+16))
 26311  002BA8  22F8               	addwfc	tblptru,f,c
 26312  002BAA                     	endif
 26313  002BAA  0009               	tblrd		*+
 26314  002BAC  CFF5 F080          	movff	tablat,___lldiv@divisor
 26315  002BB0  0009               	tblrd		*+
 26316  002BB2  CFF5 F081          	movff	tablat,___lldiv@divisor+1
 26317  002BB6  0009               	tblrd		*+
 26318  002BB8  CFF5 F082          	movff	tablat,___lldiv@divisor+2
 26319  002BBC  000A               	tblrd		*-
 26320  002BBE  CFF5 F083          	movff	tablat,___lldiv@divisor+3
 26321  002BC2  EC8C  F03F         	call	___lldiv	;wreg free
 26322  002BC6  C07C  F112         	movff	?___lldiv,sprintf@tmpval
 26323  002BCA  C07D  F113         	movff	?___lldiv+1,sprintf@tmpval+1
 26324  002BCE  C07E  F114         	movff	?___lldiv+2,sprintf@tmpval+2
 26325  002BD2  C07F  F115         	movff	?___lldiv+3,sprintf@tmpval+3
 26326                           
 26327                           ;doprnt.c: 1230: tmpval.vd %= 10;
 26328  002BD6  C112  F089         	movff	sprintf@tmpval,___llmod@dividend
 26329  002BDA  C113  F08A         	movff	sprintf@tmpval+1,___llmod@dividend+1
 26330  002BDE  C114  F08B         	movff	sprintf@tmpval+2,___llmod@dividend+2
 26331  002BE2  C115  F08C         	movff	sprintf@tmpval+3,___llmod@dividend+3
 26332  002BE6  0E0A               	movlw	10
 26333  002BE8  0100               	movlb	0	; () banked
 26334  002BEA  6F8D               	movwf	___llmod@divisor& (0+255),b
 26335  002BEC  0E00               	movlw	0
 26336  002BEE  6F8E               	movwf	(___llmod@divisor+1)& (0+255),b
 26337  002BF0  0E00               	movlw	0
 26338  002BF2  6F8F               	movwf	(___llmod@divisor+2)& (0+255),b
 26339  002BF4  0E00               	movlw	0
 26340  002BF6  6F90               	movwf	(___llmod@divisor+3)& (0+255),b
 26341  002BF8  EC10  F042         	call	___llmod	;wreg free
 26342  002BFC  C089  F112         	movff	?___llmod,sprintf@tmpval
 26343  002C00  C08A  F113         	movff	?___llmod+1,sprintf@tmpval+1
 26344  002C04  C08B  F114         	movff	?___llmod+2,sprintf@tmpval+2
 26345  002C08  C08C  F115         	movff	?___llmod+3,sprintf@tmpval+3
 26346                           
 26347                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 26348  002C0C  0101               	movlb	1	; () banked
 26349  002C0E  5112               	movf	sprintf@tmpval& (0+255),w,b
 26350  002C10  0F30               	addlw	48
 26351  002C12  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26352  002C16  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26353  002C1A  6EDF               	movwf	indf2,c
 26354                           
 26355                           ; BSR set to: 1
 26356  002C1C  0100               	movlb	0	; () banked
 26357  002C1E  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26358  002C20  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26359                           
 26360                           ; BSR set to: 0
 26361                           ;doprnt.c: 1232: val %= dpowers[c];
 26362  002C22  C118  F089         	movff	sprintf@val,___llmod@dividend
 26363  002C26  C119  F08A         	movff	sprintf@val+1,___llmod@dividend+1
 26364  002C2A  C11A  F08B         	movff	sprintf@val+2,___llmod@dividend+2
 26365  002C2E  C11B  F08C         	movff	sprintf@val+3,___llmod@dividend+3
 26366  002C32  0101               	movlb	1	; () banked
 26367  002C34  5123               	movf	sprintf@c& (0+255),w,b
 26368  002C36  0D04               	mullw	4
 26369  002C38  0E19               	movlw	low _dpowers
 26370  002C3A  24F3               	addwf	prodl,w,c
 26371  002C3C  6EF6               	movwf	tblptrl,c
 26372  002C3E  0EF1               	movlw	high _dpowers
 26373  002C40  20F4               	addwfc	prodh,w,c
 26374  002C42  6EF7               	movwf	tblptrh,c
 26375  002C44                     	if	1	;There are 3 active tblptr bytes
 26376  002C44  6AF8               	clrf	tblptru,c
 26377  002C46  0E00               	movlw	low (__mediumconst shr (0+16))
 26378  002C48  22F8               	addwfc	tblptru,f,c
 26379  002C4A                     	endif
 26380  002C4A  0009               	tblrd		*+
 26381  002C4C  CFF5 F08D          	movff	tablat,___llmod@divisor
 26382  002C50  0009               	tblrd		*+
 26383  002C52  CFF5 F08E          	movff	tablat,___llmod@divisor+1
 26384  002C56  0009               	tblrd		*+
 26385  002C58  CFF5 F08F          	movff	tablat,___llmod@divisor+2
 26386  002C5C  000A               	tblrd		*-
 26387  002C5E  CFF5 F090          	movff	tablat,___llmod@divisor+3
 26388  002C62  EC10  F042         	call	___llmod	;wreg free
 26389  002C66  C089  F118         	movff	?___llmod,sprintf@val
 26390  002C6A  C08A  F119         	movff	?___llmod+1,sprintf@val+1
 26391  002C6E  C08B  F11A         	movff	?___llmod+2,sprintf@val+2
 26392  002C72  C08C  F11B         	movff	?___llmod+3,sprintf@val+3
 26393  002C76  D000               	goto	l13584
 26394  002C78                     l13584:
 26395  002C78  0101               	movlb	1	; () banked
 26396  002C7A  0723               	decf	sprintf@c& (0+255),f,b
 26397  002C7C  0101               	movlb	1	; () banked
 26398  002C7E  2923               	incf	sprintf@c& (0+255),w,b
 26399  002C80  B4D8               	btfsc	status,2,c
 26400  002C82  D010               	goto	l13592
 26401  002C84  D77E               	goto	l13574
 26402                           
 26403                           ; BSR set to: 1
 26404                           ;doprnt.c: 1233: }
 26405                           ;doprnt.c: 1235: while(prec) {
 26406  002C86  D00E               	goto	l13592
 26407  002C88                     l13586:
 26408                           
 26409                           ; BSR set to: 1
 26410                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 26411  002C88  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26412  002C8C  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26413  002C90  0E30               	movlw	48
 26414  002C92  6EDF               	movwf	indf2,c
 26415                           
 26416                           ; BSR set to: 1
 26417  002C94  0100               	movlb	0	; () banked
 26418  002C96  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26419  002C98  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26420                           
 26421                           ; BSR set to: 0
 26422                           ;doprnt.c: 1237: prec--;
 26423  002C9A  0101               	movlb	1	; () banked
 26424  002C9C  0710               	decf	sprintf@prec& (0+255),f,b
 26425  002C9E  A0D8               	btfss	status,0,c
 26426  002CA0  0711               	decf	(sprintf@prec+1)& (0+255),f,b
 26427  002CA2  D000               	goto	l13592
 26428  002CA4                     l13592:
 26429                           
 26430                           ; BSR set to: 1
 26431  002CA4  0101               	movlb	1	; () banked
 26432  002CA6  5110               	movf	sprintf@prec& (0+255),w,b
 26433  002CA8  0101               	movlb	1	; () banked
 26434  002CAA  1111               	iorwf	(sprintf@prec+1)& (0+255),w,b
 26435  002CAC  B4D8               	btfsc	status,2,c
 26436  002CAE  D220               	goto	l13710
 26437  002CB0  D7EB               	goto	l13586
 26438                           
 26439                           ; BSR set to: 1
 26440                           ;doprnt.c: 1238: }
 26441                           ;doprnt.c: 1245: continue;
 26442  002CB2  D21E               	goto	l13710
 26443  002CB4                     l2241:
 26444                           
 26445                           ; BSR set to: 1
 26446                           ;doprnt.c: 1246: }
 26447                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 26448  002CB4  0101               	movlb	1	; () banked
 26449  002CB6  BF21               	btfsc	sprintf@flag& (0+255),7,b
 26450  002CB8  D035               	goto	l2289
 26451                           
 26452                           ; BSR set to: 1
 26453                           ;doprnt.c: 1253: {
 26454                           ;doprnt.c: 1255: if(flag & 0x10)
 26455  002CBA  0101               	movlb	1	; () banked
 26456  002CBC  A921               	btfss	sprintf@flag& (0+255),4,b
 26457  002CBE  D00E               	goto	l13600
 26458                           
 26459                           ; BSR set to: 1
 26460                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 26461  002CC0  C10E  FFD9         	movff	sprintf@ap,fsr2l
 26462  002CC4  C10F  FFDA         	movff	sprintf@ap+1,fsr2h
 26463  002CC8  CFDE F118          	movff	postinc2,sprintf@val
 26464  002CCC  CFDE F119          	movff	postinc2,sprintf@val+1
 26465  002CD0  CFDE F11A          	movff	postinc2,sprintf@val+2
 26466  002CD4  CFDE F11B          	movff	postinc2,sprintf@val+3
 26467                           
 26468                           ; BSR set to: 1
 26469  002CD8  0E04               	movlw	4
 26470  002CDA  D00F               	goto	L19
 26471  002CDC                     l13600:
 26472                           
 26473                           ; BSR set to: 1
 26474                           ;doprnt.c: 1257: else
 26475                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 26476  002CDC  C10E  FFD9         	movff	sprintf@ap,fsr2l
 26477  002CE0  C10F  FFDA         	movff	sprintf@ap+1,fsr2h
 26478  002CE4  CFDE F118          	movff	postinc2,sprintf@val
 26479  002CE8  CFDD F119          	movff	postdec2,sprintf@val+1
 26480  002CEC  0101               	movlb	1	; () banked
 26481  002CEE  0E00               	movlw	0
 26482  002CF0  BF19               	btfsc	(sprintf@val+1)& (0+255),7,b
 26483  002CF2  0EFF               	movlw	-1
 26484  002CF4  6F1A               	movwf	(sprintf@val+2)& (0+255),b
 26485  002CF6  6F1B               	movwf	(sprintf@val+3)& (0+255),b
 26486                           
 26487                           ; BSR set to: 1
 26488  002CF8  0E02               	movlw	2
 26489  002CFA                     L19:
 26490  002CFA  0101               	movlb	1	; () banked
 26491  002CFC  270E               	addwf	sprintf@ap& (0+255),f,b
 26492  002CFE  0E00               	movlw	0
 26493  002D00  230F               	addwfc	(sprintf@ap+1)& (0+255),f,b
 26494  002D02  D000               	goto	l13604
 26495  002D04                     l13604:
 26496                           
 26497                           ; BSR set to: 1
 26498                           ;doprnt.c: 1261: if((long)val < 0) {
 26499  002D04  0101               	movlb	1	; () banked
 26500  002D06  AF1B               	btfss	(sprintf@val+3)& (0+255),7,b
 26501  002D08  D08F               	goto	l13648
 26502                           
 26503                           ; BSR set to: 1
 26504                           ;doprnt.c: 1262: flag |= 0x03;
 26505  002D0A  0E03               	movlw	3
 26506  002D0C  0101               	movlb	1	; () banked
 26507  002D0E  1321               	iorwf	sprintf@flag& (0+255),f,b
 26508                           
 26509                           ; BSR set to: 1
 26510                           ;doprnt.c: 1263: val = -val;
 26511  002D10  0101               	movlb	1	; () banked
 26512  002D12  1F1B               	comf	(sprintf@val+3)& (0+255),f,b
 26513  002D14  1F1A               	comf	(sprintf@val+2)& (0+255),f,b
 26514  002D16  1F19               	comf	(sprintf@val+1)& (0+255),f,b
 26515  002D18  6D18               	negf	sprintf@val& (0+255),b
 26516  002D1A  0E00               	movlw	0
 26517  002D1C  2319               	addwfc	(sprintf@val+1)& (0+255),f,b
 26518  002D1E  231A               	addwfc	(sprintf@val+2)& (0+255),f,b
 26519  002D20  231B               	addwfc	(sprintf@val+3)& (0+255),f,b
 26520                           
 26521                           ; BSR set to: 1
 26522                           ;doprnt.c: 1264: }
 26523                           ;doprnt.c: 1266: }
 26524  002D22  D082               	goto	l13648
 26525  002D24                     l2289:
 26526                           
 26527                           ; BSR set to: 1
 26528                           ;doprnt.c: 1268: else
 26529                           ;doprnt.c: 1273: {
 26530                           ;doprnt.c: 1281: if(flag & 0x10)
 26531  002D24  0101               	movlb	1	; () banked
 26532  002D26  A921               	btfss	sprintf@flag& (0+255),4,b
 26533  002D28  D00E               	goto	l13614
 26534                           
 26535                           ; BSR set to: 1
 26536                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 26537  002D2A  C10E  FFD9         	movff	sprintf@ap,fsr2l
 26538  002D2E  C10F  FFDA         	movff	sprintf@ap+1,fsr2h
 26539  002D32  CFDE F118          	movff	postinc2,sprintf@val
 26540  002D36  CFDE F119          	movff	postinc2,sprintf@val+1
 26541  002D3A  CFDE F11A          	movff	postinc2,sprintf@val+2
 26542  002D3E  CFDE F11B          	movff	postinc2,sprintf@val+3
 26543                           
 26544                           ; BSR set to: 1
 26545  002D42  0E04               	movlw	4
 26546  002D44  D010               	goto	L20
 26547  002D46                     l13614:
 26548                           
 26549                           ; BSR set to: 1
 26550                           ;doprnt.c: 1283: else
 26551                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 26552  002D46  C10E  FFD9         	movff	sprintf@ap,fsr2l
 26553  002D4A  C10F  FFDA         	movff	sprintf@ap+1,fsr2h
 26554  002D4E  CFDE F100          	movff	postinc2,??_sprintf
 26555  002D52  CFDD F101          	movff	postdec2,??_sprintf+1
 26556  002D56  C100  F118         	movff	??_sprintf,sprintf@val
 26557  002D5A  C101  F119         	movff	??_sprintf+1,sprintf@val+1
 26558  002D5E  0101               	movlb	1	; () banked
 26559  002D60  6B1A               	clrf	(sprintf@val+2)& (0+255),b
 26560  002D62  6B1B               	clrf	(sprintf@val+3)& (0+255),b
 26561                           
 26562                           ; BSR set to: 1
 26563  002D64  0E02               	movlw	2
 26564  002D66                     L20:
 26565  002D66  0101               	movlb	1	; () banked
 26566  002D68  270E               	addwf	sprintf@ap& (0+255),f,b
 26567  002D6A  0E00               	movlw	0
 26568  002D6C  230F               	addwfc	(sprintf@ap+1)& (0+255),f,b
 26569                           
 26570                           ; BSR set to: 1
 26571                           ;doprnt.c: 1287: }
 26572                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 26573                           
 26574                           ; BSR set to: 1
 26575  002D6E  D05C               	goto	l13648
 26576  002D70                     l13618:
 26577                           
 26578                           ; BSR set to: 1
 26579                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 26580  002D70  0E01               	movlw	1
 26581  002D72  0101               	movlb	1	; () banked
 26582  002D74  6F23               	movwf	sprintf@c& (0+255),b
 26583  002D76                     l13620:
 26584                           
 26585                           ; BSR set to: 1
 26586  002D76  0E0A               	movlw	10
 26587  002D78  0101               	movlb	1	; () banked
 26588  002D7A  1923               	xorwf	sprintf@c& (0+255),w,b
 26589  002D7C  B4D8               	btfsc	status,2,c
 26590  002D7E  D05E               	goto	l13650
 26591  002D80  D001               	goto	l13624
 26592                           
 26593                           ; BSR set to: 1
 26594  002D82  D05C               	goto	l13650
 26595  002D84                     l13624:
 26596                           
 26597                           ; BSR set to: 1
 26598                           ;doprnt.c: 1306: if(val < dpowers[c])
 26599  002D84  0101               	movlb	1	; () banked
 26600  002D86  5123               	movf	sprintf@c& (0+255),w,b
 26601  002D88  0D04               	mullw	4
 26602  002D8A  0E19               	movlw	low _dpowers
 26603  002D8C  24F3               	addwf	prodl,w,c
 26604  002D8E  6EF6               	movwf	tblptrl,c
 26605  002D90  0EF1               	movlw	high _dpowers
 26606  002D92  20F4               	addwfc	prodh,w,c
 26607  002D94  6EF7               	movwf	tblptrh,c
 26608  002D96                     	if	1	;There are 3 active tblptr bytes
 26609  002D96  6AF8               	clrf	tblptru,c
 26610  002D98  0E00               	movlw	low (__mediumconst shr (0+16))
 26611  002D9A  22F8               	addwfc	tblptru,f,c
 26612  002D9C                     	endif
 26613  002D9C  0009               	tblrd		*+
 26614  002D9E  50F5               	movf	tablat,w,c
 26615  002DA0  0101               	movlb	1	; () banked
 26616  002DA2  5D18               	subwf	sprintf@val& (0+255),w,b
 26617  002DA4  0009               	tblrd		*+
 26618  002DA6  50F5               	movf	tablat,w,c
 26619  002DA8  0101               	movlb	1	; () banked
 26620  002DAA  5919               	subwfb	(sprintf@val+1)& (0+255),w,b
 26621  002DAC  0009               	tblrd		*+
 26622  002DAE  50F5               	movf	tablat,w,c
 26623  002DB0  0101               	movlb	1	; () banked
 26624  002DB2  591A               	subwfb	(sprintf@val+2)& (0+255),w,b
 26625  002DB4  0009               	tblrd		*+
 26626  002DB6  50F5               	movf	tablat,w,c
 26627  002DB8  0101               	movlb	1	; () banked
 26628  002DBA  591B               	subwfb	(sprintf@val+3)& (0+255),w,b
 26629  002DBC  A0D8               	btfss	status,0,c
 26630  002DBE  D03E               	goto	l13650
 26631  002DC0  D001               	goto	l13628
 26632                           
 26633                           ; BSR set to: 1
 26634                           ;doprnt.c: 1307: break;
 26635  002DC2  D03C               	goto	l13650
 26636  002DC4                     l13628:
 26637                           
 26638                           ; BSR set to: 1
 26639  002DC4  0101               	movlb	1	; () banked
 26640  002DC6  2B23               	incf	sprintf@c& (0+255),f,b
 26641  002DC8  D7D6               	goto	l13620
 26642                           
 26643                           ; BSR set to: 1
 26644                           ;doprnt.c: 1309: break;
 26645                           
 26646                           ; BSR set to: 1
 26647  002DCA  D038               	goto	l13650
 26648  002DCC                     l13632:
 26649                           
 26650                           ; BSR set to: 1
 26651                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 26652  002DCC  0E01               	movlw	1
 26653  002DCE  0101               	movlb	1	; () banked
 26654  002DD0  6F23               	movwf	sprintf@c& (0+255),b
 26655  002DD2                     l13634:
 26656                           
 26657                           ; BSR set to: 1
 26658  002DD2  0E08               	movlw	8
 26659  002DD4  0101               	movlb	1	; () banked
 26660  002DD6  1923               	xorwf	sprintf@c& (0+255),w,b
 26661  002DD8  B4D8               	btfsc	status,2,c
 26662  002DDA  D030               	goto	l13650
 26663  002DDC  D001               	goto	l13638
 26664                           
 26665                           ; BSR set to: 1
 26666  002DDE  D02E               	goto	l13650
 26667  002DE0                     l13638:
 26668                           
 26669                           ; BSR set to: 1
 26670                           ;doprnt.c: 1317: if(val < hexpowers[c])
 26671  002DE0  0101               	movlb	1	; () banked
 26672  002DE2  5123               	movf	sprintf@c& (0+255),w,b
 26673  002DE4  0D04               	mullw	4
 26674  002DE6  0E8F               	movlw	low _hexpowers
 26675  002DE8  24F3               	addwf	prodl,w,c
 26676  002DEA  6EF6               	movwf	tblptrl,c
 26677  002DEC  0EF1               	movlw	high _hexpowers
 26678  002DEE  20F4               	addwfc	prodh,w,c
 26679  002DF0  6EF7               	movwf	tblptrh,c
 26680  002DF2                     	if	1	;There are 3 active tblptr bytes
 26681  002DF2  6AF8               	clrf	tblptru,c
 26682  002DF4  0E00               	movlw	low (__mediumconst shr (0+16))
 26683  002DF6  22F8               	addwfc	tblptru,f,c
 26684  002DF8                     	endif
 26685  002DF8  0009               	tblrd		*+
 26686  002DFA  50F5               	movf	tablat,w,c
 26687  002DFC  0101               	movlb	1	; () banked
 26688  002DFE  5D18               	subwf	sprintf@val& (0+255),w,b
 26689  002E00  0009               	tblrd		*+
 26690  002E02  50F5               	movf	tablat,w,c
 26691  002E04  0101               	movlb	1	; () banked
 26692  002E06  5919               	subwfb	(sprintf@val+1)& (0+255),w,b
 26693  002E08  0009               	tblrd		*+
 26694  002E0A  50F5               	movf	tablat,w,c
 26695  002E0C  0101               	movlb	1	; () banked
 26696  002E0E  591A               	subwfb	(sprintf@val+2)& (0+255),w,b
 26697  002E10  0009               	tblrd		*+
 26698  002E12  50F5               	movf	tablat,w,c
 26699  002E14  0101               	movlb	1	; () banked
 26700  002E16  591B               	subwfb	(sprintf@val+3)& (0+255),w,b
 26701  002E18  A0D8               	btfss	status,0,c
 26702  002E1A  D010               	goto	l13650
 26703  002E1C  D001               	goto	l13642
 26704                           
 26705                           ; BSR set to: 1
 26706                           ;doprnt.c: 1318: break;
 26707  002E1E  D00E               	goto	l13650
 26708  002E20                     l13642:
 26709                           
 26710                           ; BSR set to: 1
 26711  002E20  0101               	movlb	1	; () banked
 26712  002E22  2B23               	incf	sprintf@c& (0+255),f,b
 26713  002E24  D7D6               	goto	l13634
 26714                           
 26715                           ; BSR set to: 1
 26716                           ;doprnt.c: 1336: }
 26717                           
 26718                           ; BSR set to: 1
 26719                           ;doprnt.c: 1320: break;
 26720                           
 26721                           ; BSR set to: 1
 26722  002E26  D00A               	goto	l13650
 26723  002E28                     l13648:
 26724                           
 26725                           ; BSR set to: 1
 26726  002E28  0101               	movlb	1	; () banked
 26727  002E2A  5121               	movf	sprintf@flag& (0+255),w,b
 26728  002E2C  0B80               	andlw	128
 26729                           
 26730                           ; Switch size 1, requested type "space"
 26731                           ; Number of cases is 2, Range of values is 0 to 128
 26732                           ; switch strategies available:
 26733                           ; Name         Instructions Cycles
 26734                           ; simple_byte            7     4 (average)
 26735                           ;	Chosen strategy is simple_byte
 26736  002E2E  0A00               	xorlw	0	; case 0
 26737  002E30  B4D8               	btfsc	status,2,c
 26738  002E32  D79E               	goto	l13618
 26739  002E34  0A80               	xorlw	128	; case 128
 26740  002E36  B4D8               	btfsc	status,2,c
 26741  002E38  D7C9               	goto	l13632
 26742  002E3A  D000               	goto	l13650
 26743  002E3C                     l13650:
 26744                           
 26745                           ; BSR set to: 1
 26746                           ;doprnt.c: 1345: if(width && flag & 0x03)
 26747  002E3C  0101               	movlb	1	; () banked
 26748  002E3E  511F               	movf	sprintf@width& (0+255),w,b
 26749  002E40  0101               	movlb	1	; () banked
 26750  002E42  1120               	iorwf	(sprintf@width+1)& (0+255),w,b
 26751  002E44  B4D8               	btfsc	status,2,c
 26752  002E46  D015               	goto	l13656
 26753                           
 26754                           ; BSR set to: 1
 26755  002E48  0E03               	movlw	3
 26756  002E4A  0101               	movlb	1	; () banked
 26757  002E4C  1521               	andwf	sprintf@flag& (0+255),w,b
 26758  002E4E  0101               	movlb	1	; () banked
 26759  002E50  6F00               	movwf	??_sprintf& (0+255),b
 26760  002E52  0E00               	movlw	0
 26761  002E54  0101               	movlb	1	; () banked
 26762  002E56  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
 26763  002E58  0101               	movlb	1	; () banked
 26764  002E5A  6F01               	movwf	(??_sprintf+1)& (0+255),b
 26765  002E5C  0101               	movlb	1	; () banked
 26766  002E5E  5100               	movf	??_sprintf& (0+255),w,b
 26767  002E60  0101               	movlb	1	; () banked
 26768  002E62  1101               	iorwf	(??_sprintf+1)& (0+255),w,b
 26769  002E64  B4D8               	btfsc	status,2,c
 26770  002E66  D005               	goto	l13656
 26771                           
 26772                           ; BSR set to: 1
 26773                           ;doprnt.c: 1346: width--;
 26774  002E68  0101               	movlb	1	; () banked
 26775  002E6A  071F               	decf	sprintf@width& (0+255),f,b
 26776  002E6C  A0D8               	btfss	status,0,c
 26777  002E6E  0720               	decf	(sprintf@width+1)& (0+255),f,b
 26778  002E70  D000               	goto	l13656
 26779  002E72                     l13656:
 26780                           
 26781                           ; BSR set to: 1
 26782                           ;doprnt.c: 1381: if(width > c)
 26783  002E72  0E80               	movlw	128
 26784  002E74  0101               	movlb	1	; () banked
 26785  002E76  BF23               	btfsc	sprintf@c& (0+255),7,b
 26786  002E78  0E7F               	movlw	127
 26787  002E7A  0101               	movlb	1	; () banked
 26788  002E7C  6F00               	movwf	??_sprintf& (0+255),b
 26789  002E7E  0101               	movlb	1	; () banked
 26790  002E80  511F               	movf	sprintf@width& (0+255),w,b
 26791  002E82  0101               	movlb	1	; () banked
 26792  002E84  5D23               	subwf	sprintf@c& (0+255),w,b
 26793  002E86  0101               	movlb	1	; () banked
 26794  002E88  5120               	movf	(sprintf@width+1)& (0+255),w,b
 26795  002E8A  0A80               	xorlw	128
 26796  002E8C  0101               	movlb	1	; () banked
 26797  002E8E  5900               	subwfb	??_sprintf& (0+255),w,b
 26798  002E90  B0D8               	btfsc	status,0,c
 26799  002E92  D00B               	goto	l13660
 26800                           
 26801                           ; BSR set to: 1
 26802                           ;doprnt.c: 1382: width -= c;
 26803  002E94  0101               	movlb	1	; () banked
 26804  002E96  5123               	movf	sprintf@c& (0+255),w,b
 26805  002E98  0101               	movlb	1	; () banked
 26806  002E9A  5F1F               	subwf	sprintf@width& (0+255),f,b
 26807  002E9C  0E00               	movlw	0
 26808  002E9E  0101               	movlb	1	; () banked
 26809  002EA0  BF23               	btfsc	sprintf@c& (0+255),7,b
 26810  002EA2  0EFF               	movlw	255
 26811  002EA4  0101               	movlb	1	; () banked
 26812  002EA6  5B20               	subwfb	(sprintf@width+1)& (0+255),f,b
 26813  002EA8  D006               	goto	l13662
 26814  002EAA                     l13660:
 26815                           
 26816                           ; BSR set to: 1
 26817                           ;doprnt.c: 1383: else
 26818                           ;doprnt.c: 1384: width = 0;
 26819  002EAA  0E00               	movlw	0
 26820  002EAC  0101               	movlb	1	; () banked
 26821  002EAE  6F20               	movwf	(sprintf@width+1)& (0+255),b
 26822  002EB0  0E00               	movlw	0
 26823  002EB2  6F1F               	movwf	sprintf@width& (0+255),b
 26824  002EB4  D000               	goto	l13662
 26825  002EB6                     l13662:
 26826                           
 26827                           ; BSR set to: 1
 26828                           ;doprnt.c: 1387: if(flag & 0x04) {
 26829  002EB6  0101               	movlb	1	; () banked
 26830  002EB8  A521               	btfss	sprintf@flag& (0+255),2,b
 26831  002EBA  D035               	goto	l13678
 26832                           
 26833                           ; BSR set to: 1
 26834                           ;doprnt.c: 1392: if(flag & 0x03)
 26835  002EBC  0E03               	movlw	3
 26836  002EBE  0101               	movlb	1	; () banked
 26837  002EC0  1521               	andwf	sprintf@flag& (0+255),w,b
 26838  002EC2  0101               	movlb	1	; () banked
 26839  002EC4  6F00               	movwf	??_sprintf& (0+255),b
 26840  002EC6  0E00               	movlw	0
 26841  002EC8  0101               	movlb	1	; () banked
 26842  002ECA  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
 26843  002ECC  0101               	movlb	1	; () banked
 26844  002ECE  6F01               	movwf	(??_sprintf+1)& (0+255),b
 26845  002ED0  0101               	movlb	1	; () banked
 26846  002ED2  5100               	movf	??_sprintf& (0+255),w,b
 26847  002ED4  0101               	movlb	1	; () banked
 26848  002ED6  1101               	iorwf	(??_sprintf+1)& (0+255),w,b
 26849  002ED8  B4D8               	btfsc	status,2,c
 26850  002EDA  D00A               	goto	l13670
 26851                           
 26852                           ; BSR set to: 1
 26853                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 26854  002EDC  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26855  002EE0  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26856  002EE4  0E2D               	movlw	45
 26857  002EE6  6EDF               	movwf	indf2,c
 26858                           
 26859                           ; BSR set to: 1
 26860  002EE8  0100               	movlb	0	; () banked
 26861  002EEA  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26862  002EEC  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26863  002EEE  D000               	goto	l13670
 26864  002EF0                     l13670:
 26865                           
 26866                           ;doprnt.c: 1415: if(width)
 26867  002EF0  0101               	movlb	1	; () banked
 26868  002EF2  511F               	movf	sprintf@width& (0+255),w,b
 26869  002EF4  0101               	movlb	1	; () banked
 26870  002EF6  1120               	iorwf	(sprintf@width+1)& (0+255),w,b
 26871  002EF8  B4D8               	btfsc	status,2,c
 26872  002EFA  D04A               	goto	l13692
 26873  002EFC                     l13672:
 26874                           
 26875                           ; BSR set to: 1
 26876                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 26877  002EFC  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26878  002F00  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26879  002F04  0E30               	movlw	48
 26880  002F06  6EDF               	movwf	indf2,c
 26881                           
 26882                           ; BSR set to: 1
 26883  002F08  0100               	movlb	0	; () banked
 26884  002F0A  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26885  002F0C  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26886                           
 26887                           ; BSR set to: 0
 26888                           ;doprnt.c: 1418: while(--width);
 26889  002F0E  0101               	movlb	1	; () banked
 26890  002F10  071F               	decf	sprintf@width& (0+255),f,b
 26891  002F12  A0D8               	btfss	status,0,c
 26892  002F14  0720               	decf	(sprintf@width+1)& (0+255),f,b
 26893  002F16  0101               	movlb	1	; () banked
 26894  002F18  511F               	movf	sprintf@width& (0+255),w,b
 26895  002F1A  0101               	movlb	1	; () banked
 26896  002F1C  1120               	iorwf	(sprintf@width+1)& (0+255),w,b
 26897  002F1E  B4D8               	btfsc	status,2,c
 26898  002F20  D037               	goto	l13692
 26899  002F22  D7EC               	goto	l13672
 26900                           
 26901                           ; BSR set to: 1
 26902                           ;doprnt.c: 1420: } else
 26903                           
 26904                           ; BSR set to: 1
 26905  002F24  D035               	goto	l13692
 26906  002F26                     l13678:
 26907                           
 26908                           ; BSR set to: 1
 26909                           ;doprnt.c: 1422: {
 26910                           ;doprnt.c: 1424: if(width
 26911                           ;doprnt.c: 1428: )
 26912  002F26  0101               	movlb	1	; () banked
 26913  002F28  511F               	movf	sprintf@width& (0+255),w,b
 26914  002F2A  0101               	movlb	1	; () banked
 26915  002F2C  1120               	iorwf	(sprintf@width+1)& (0+255),w,b
 26916  002F2E  B4D8               	btfsc	status,2,c
 26917  002F30  D015               	goto	l13686
 26918  002F32                     l13680:
 26919                           
 26920                           ; BSR set to: 1
 26921                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 26922  002F32  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26923  002F36  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26924  002F3A  0E20               	movlw	32
 26925  002F3C  6EDF               	movwf	indf2,c
 26926                           
 26927                           ; BSR set to: 1
 26928  002F3E  0100               	movlb	0	; () banked
 26929  002F40  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26930  002F42  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26931                           
 26932                           ; BSR set to: 0
 26933                           ;doprnt.c: 1431: while(--width);
 26934  002F44  0101               	movlb	1	; () banked
 26935  002F46  071F               	decf	sprintf@width& (0+255),f,b
 26936  002F48  A0D8               	btfss	status,0,c
 26937  002F4A  0720               	decf	(sprintf@width+1)& (0+255),f,b
 26938  002F4C  0101               	movlb	1	; () banked
 26939  002F4E  511F               	movf	sprintf@width& (0+255),w,b
 26940  002F50  0101               	movlb	1	; () banked
 26941  002F52  1120               	iorwf	(sprintf@width+1)& (0+255),w,b
 26942  002F54  B4D8               	btfsc	status,2,c
 26943  002F56  D002               	goto	l13686
 26944  002F58  D7EC               	goto	l13680
 26945                           
 26946                           ; BSR set to: 1
 26947  002F5A  D000               	goto	l13686
 26948  002F5C                     l13686:
 26949                           
 26950                           ; BSR set to: 1
 26951                           ;doprnt.c: 1438: if(flag & 0x03)
 26952  002F5C  0E03               	movlw	3
 26953  002F5E  0101               	movlb	1	; () banked
 26954  002F60  1521               	andwf	sprintf@flag& (0+255),w,b
 26955  002F62  0101               	movlb	1	; () banked
 26956  002F64  6F00               	movwf	??_sprintf& (0+255),b
 26957  002F66  0E00               	movlw	0
 26958  002F68  0101               	movlb	1	; () banked
 26959  002F6A  1522               	andwf	(sprintf@flag+1)& (0+255),w,b
 26960  002F6C  0101               	movlb	1	; () banked
 26961  002F6E  6F01               	movwf	(??_sprintf+1)& (0+255),b
 26962  002F70  0101               	movlb	1	; () banked
 26963  002F72  5100               	movf	??_sprintf& (0+255),w,b
 26964  002F74  0101               	movlb	1	; () banked
 26965  002F76  1101               	iorwf	(??_sprintf+1)& (0+255),w,b
 26966  002F78  B4D8               	btfsc	status,2,c
 26967  002F7A  D00A               	goto	l13692
 26968                           
 26969                           ; BSR set to: 1
 26970                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 26971  002F7C  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 26972  002F80  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 26973  002F84  0E2D               	movlw	45
 26974  002F86  6EDF               	movwf	indf2,c
 26975                           
 26976                           ; BSR set to: 1
 26977  002F88  0100               	movlb	0	; () banked
 26978  002F8A  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 26979  002F8C  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 26980                           
 26981                           ; BSR set to: 0
 26982  002F8E  D000               	goto	l13692
 26983  002F90                     l13692:
 26984                           
 26985                           ;doprnt.c: 1469: }
 26986                           ;doprnt.c: 1472: prec = c;
 26987  002F90  0101               	movlb	1	; () banked
 26988  002F92  5123               	movf	sprintf@c& (0+255),w,b
 26989  002F94  0101               	movlb	1	; () banked
 26990  002F96  6F10               	movwf	sprintf@prec& (0+255),b
 26991  002F98  6B11               	clrf	(sprintf@prec+1)& (0+255),b
 26992  002F9A  BF10               	btfsc	sprintf@prec& (0+255),7,b
 26993  002F9C  0711               	decf	(sprintf@prec+1)& (0+255),f,b
 26994                           
 26995                           ;doprnt.c: 1474: while(prec--) {
 26996  002F9E  D09B               	goto	l13708
 26997                           
 26998                           ; BSR set to: 1
 26999                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
 27000  002FA0  D086               	goto	l13702
 27001  002FA2                     l13694:
 27002                           
 27003                           ; BSR set to: 1
 27004                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 27005  002FA2  C110  F100         	movff	sprintf@prec,??_sprintf
 27006  002FA6  C111  F101         	movff	sprintf@prec+1,??_sprintf+1
 27007  002FAA  0101               	movlb	1	; () banked
 27008  002FAC  90D8               	bcf	status,0,c
 27009  002FAE  3700               	rlcf	??_sprintf& (0+255),f,b
 27010  002FB0  3701               	rlcf	(??_sprintf+1)& (0+255),f,b
 27011  002FB2  0101               	movlb	1	; () banked
 27012  002FB4  90D8               	bcf	status,0,c
 27013  002FB6  3700               	rlcf	??_sprintf& (0+255),f,b
 27014  002FB8  3701               	rlcf	(??_sprintf+1)& (0+255),f,b
 27015  002FBA  0E19               	movlw	low _dpowers
 27016  002FBC  0101               	movlb	1	; () banked
 27017  002FBE  2500               	addwf	??_sprintf& (0+255),w,b
 27018  002FC0  6EF6               	movwf	tblptrl,c
 27019  002FC2  0EF1               	movlw	high _dpowers
 27020  002FC4  2101               	addwfc	(??_sprintf+1)& (0+255),w,b
 27021  002FC6  6EF7               	movwf	tblptrh,c
 27022  002FC8                     	if	1	;There are 3 active tblptr bytes
 27023  002FC8  6AF8               	clrf	tblptru,c
 27024  002FCA  0E00               	movlw	low (__mediumconst shr (0+16))
 27025  002FCC  22F8               	addwfc	tblptru,f,c
 27026  002FCE                     	endif
 27027  002FCE  0009               	tblrd		*+
 27028  002FD0  CFF5 F080          	movff	tablat,___lldiv@divisor
 27029  002FD4  0009               	tblrd		*+
 27030  002FD6  CFF5 F081          	movff	tablat,___lldiv@divisor+1
 27031  002FDA  0009               	tblrd		*+
 27032  002FDC  CFF5 F082          	movff	tablat,___lldiv@divisor+2
 27033  002FE0  000A               	tblrd		*-
 27034  002FE2  CFF5 F083          	movff	tablat,___lldiv@divisor+3
 27035  002FE6  C118  F07C         	movff	sprintf@val,___lldiv@dividend
 27036  002FEA  C119  F07D         	movff	sprintf@val+1,___lldiv@dividend+1
 27037  002FEE  C11A  F07E         	movff	sprintf@val+2,___lldiv@dividend+2
 27038  002FF2  C11B  F07F         	movff	sprintf@val+3,___lldiv@dividend+3
 27039  002FF6  EC8C  F03F         	call	___lldiv	;wreg free
 27040  002FFA  C07C  F089         	movff	?___lldiv,___llmod@dividend
 27041  002FFE  C07D  F08A         	movff	?___lldiv+1,___llmod@dividend+1
 27042  003002  C07E  F08B         	movff	?___lldiv+2,___llmod@dividend+2
 27043  003006  C07F  F08C         	movff	?___lldiv+3,___llmod@dividend+3
 27044  00300A  0E0A               	movlw	10
 27045  00300C  0100               	movlb	0	; () banked
 27046  00300E  6F8D               	movwf	___llmod@divisor& (0+255),b
 27047  003010  0E00               	movlw	0
 27048  003012  6F8E               	movwf	(___llmod@divisor+1)& (0+255),b
 27049  003014  0E00               	movlw	0
 27050  003016  6F8F               	movwf	(___llmod@divisor+2)& (0+255),b
 27051  003018  0E00               	movlw	0
 27052  00301A  6F90               	movwf	(___llmod@divisor+3)& (0+255),b
 27053  00301C  EC10  F042         	call	___llmod	;wreg free
 27054  003020  0100               	movlb	0	; () banked
 27055  003022  5189               	movf	?___llmod& (0+255),w,b
 27056  003024  0F30               	addlw	48
 27057  003026  0101               	movlb	1	; () banked
 27058  003028  6F23               	movwf	sprintf@c& (0+255),b
 27059                           
 27060                           ;doprnt.c: 1491: break;
 27061  00302A  D04B               	goto	l13704
 27062  00302C                     l13696:
 27063                           
 27064                           ; BSR set to: 1
 27065                           ;doprnt.c: 1499: {
 27066                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 27067  00302C  C118  F07C         	movff	sprintf@val,___lldiv@dividend
 27068  003030  C119  F07D         	movff	sprintf@val+1,___lldiv@dividend+1
 27069  003034  C11A  F07E         	movff	sprintf@val+2,___lldiv@dividend+2
 27070  003038  C11B  F07F         	movff	sprintf@val+3,___lldiv@dividend+3
 27071  00303C  C110  F100         	movff	sprintf@prec,??_sprintf
 27072  003040  C111  F101         	movff	sprintf@prec+1,??_sprintf+1
 27073  003044  0101               	movlb	1	; () banked
 27074  003046  90D8               	bcf	status,0,c
 27075  003048  3700               	rlcf	??_sprintf& (0+255),f,b
 27076  00304A  3701               	rlcf	(??_sprintf+1)& (0+255),f,b
 27077  00304C  0101               	movlb	1	; () banked
 27078  00304E  90D8               	bcf	status,0,c
 27079  003050  3700               	rlcf	??_sprintf& (0+255),f,b
 27080  003052  3701               	rlcf	(??_sprintf+1)& (0+255),f,b
 27081  003054  0E8F               	movlw	low _hexpowers
 27082  003056  0101               	movlb	1	; () banked
 27083  003058  2500               	addwf	??_sprintf& (0+255),w,b
 27084  00305A  6EF6               	movwf	tblptrl,c
 27085  00305C  0EF1               	movlw	high _hexpowers
 27086  00305E  2101               	addwfc	(??_sprintf+1)& (0+255),w,b
 27087  003060  6EF7               	movwf	tblptrh,c
 27088  003062                     	if	1	;There are 3 active tblptr bytes
 27089  003062  6AF8               	clrf	tblptru,c
 27090  003064  0E00               	movlw	low (__mediumconst shr (0+16))
 27091  003066  22F8               	addwfc	tblptru,f,c
 27092  003068                     	endif
 27093  003068  0009               	tblrd		*+
 27094  00306A  CFF5 F080          	movff	tablat,___lldiv@divisor
 27095  00306E  0009               	tblrd		*+
 27096  003070  CFF5 F081          	movff	tablat,___lldiv@divisor+1
 27097  003074  0009               	tblrd		*+
 27098  003076  CFF5 F082          	movff	tablat,___lldiv@divisor+2
 27099  00307A  000A               	tblrd		*-
 27100  00307C  CFF5 F083          	movff	tablat,___lldiv@divisor+3
 27101  003080  EC8C  F03F         	call	___lldiv	;wreg free
 27102  003084  0100               	movlb	0	; () banked
 27103  003086  517C               	movf	?___lldiv& (0+255),w,b
 27104  003088  0B0F               	andlw	15
 27105  00308A  0101               	movlb	1	; () banked
 27106  00308C  6F09               	movwf	sprintf@idx& (0+255),b
 27107                           
 27108                           ; BSR set to: 1
 27109                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 27110  00308E  0101               	movlb	1	; () banked
 27111  003090  5109               	movf	sprintf@idx& (0+255),w,b
 27112  003092  0D01               	mullw	1
 27113  003094  0E1E               	movlw	low STR_152
 27114  003096  24F3               	addwf	prodl,w,c
 27115  003098  6EF6               	movwf	tblptrl,c
 27116  00309A  0EFE               	movlw	high STR_152
 27117  00309C  20F4               	addwfc	prodh,w,c
 27118  00309E  6EF7               	movwf	tblptrh,c
 27119  0030A0                     	if	1	;There are 3 active tblptr bytes
 27120  0030A0  6AF8               	clrf	tblptru,c
 27121  0030A2  0E00               	movlw	low (__mediumconst shr (0+16))
 27122  0030A4  22F8               	addwfc	tblptru,f,c
 27123  0030A6                     	endif
 27124  0030A6  0008               	tblrd		*
 27125  0030A8  CFF5 F123          	movff	tablat,sprintf@c
 27126                           
 27127                           ; BSR set to: 1
 27128                           ;doprnt.c: 1523: }
 27129                           
 27130                           ;doprnt.c: 1508: }
 27131                           ;doprnt.c: 1510: break;
 27132  0030AC  D00A               	goto	l13704
 27133  0030AE                     l13702:
 27134                           
 27135                           ; BSR set to: 1
 27136  0030AE  0101               	movlb	1	; () banked
 27137  0030B0  5121               	movf	sprintf@flag& (0+255),w,b
 27138  0030B2  0B80               	andlw	128
 27139                           
 27140                           ; Switch size 1, requested type "space"
 27141                           ; Number of cases is 2, Range of values is 0 to 128
 27142                           ; switch strategies available:
 27143                           ; Name         Instructions Cycles
 27144                           ; simple_byte            7     4 (average)
 27145                           ;	Chosen strategy is simple_byte
 27146  0030B4  0A00               	xorlw	0	; case 0
 27147  0030B6  B4D8               	btfsc	status,2,c
 27148  0030B8  D774               	goto	l13694
 27149  0030BA  0A80               	xorlw	128	; case 128
 27150  0030BC  B4D8               	btfsc	status,2,c
 27151  0030BE  D7B6               	goto	l13696
 27152  0030C0  D000               	goto	l13704
 27153  0030C2                     l13704:
 27154                           
 27155                           ; BSR set to: 1
 27156                           ;doprnt.c: 1524: ((*sp++ = (c)));
 27157  0030C2  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 27158  0030C6  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 27159  0030CA  C123  FFDF         	movff	sprintf@c,indf2
 27160                           
 27161                           ; BSR set to: 1
 27162  0030CE  0100               	movlb	0	; () banked
 27163  0030D0  4BCA               	infsnz	sprintf@sp& (0+255),f,b
 27164  0030D2  2BCB               	incf	(sprintf@sp+1)& (0+255),f,b
 27165  0030D4  D000               	goto	l13708
 27166  0030D6                     l13708:
 27167  0030D6  0101               	movlb	1	; () banked
 27168  0030D8  0710               	decf	sprintf@prec& (0+255),f,b
 27169  0030DA  A0D8               	btfss	status,0,c
 27170  0030DC  0711               	decf	(sprintf@prec+1)& (0+255),f,b
 27171  0030DE  0101               	movlb	1	; () banked
 27172  0030E0  2910               	incf	sprintf@prec& (0+255),w,b
 27173  0030E2  E1E5               	bnz	l13702
 27174  0030E4  0101               	movlb	1	; () banked
 27175  0030E6  2911               	incf	(sprintf@prec+1)& (0+255),w,b
 27176  0030E8  B4D8               	btfsc	status,2,c
 27177  0030EA  D002               	goto	l13710
 27178  0030EC  D7E0               	goto	l13702
 27179                           
 27180                           ; BSR set to: 1
 27181  0030EE  D000               	goto	l13710
 27182  0030F0                     l13710:
 27183  0030F0  C0CC  FFF6         	movff	sprintf@f,tblptrl
 27184  0030F4  C0CD  FFF7         	movff	sprintf@f+1,tblptrh
 27185  0030F8  0100               	movlb	0	; () banked
 27186  0030FA  4BCC               	infsnz	sprintf@f& (0+255),f,b
 27187  0030FC  2BCD               	incf	(sprintf@f+1)& (0+255),f,b
 27188  0030FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 27189  0030FE  6AF8               	clrf	tblptru,c
 27190  003100                     	endif
 27191  003100                     	if	0	;tblptru may be non-zero
 27192  003100                     	endif
 27193  003100  0008               	tblrd		*
 27194  003102  CFF5 F123          	movff	tablat,sprintf@c
 27195  003106  0101               	movlb	1	; () banked
 27196  003108  5123               	movf	sprintf@c& (0+255),w,b
 27197  00310A  B4D8               	btfsc	status,2,c
 27198  00310C  D003               	goto	l13712
 27199  00310E  EFF8  F010         	goto	l13338
 27200                           
 27201                           ; BSR set to: 1
 27202  003112  D000               	goto	l13712
 27203  003114                     l13712:
 27204                           
 27205                           ;doprnt.c: 1538: *sp = 0;
 27206  003114  C0CA  FFD9         	movff	sprintf@sp,fsr2l
 27207  003118  C0CB  FFDA         	movff	sprintf@sp+1,fsr2h
 27208  00311C  0E00               	movlw	0
 27209  00311E  6EDF               	movwf	indf2,c
 27210  003120  0012               	return	
 27211                           
 27212                           ;doprnt.c: 1540: return 0;
 27213                           ;	Return value of _sprintf is never used
 27214  003122  0012               	return		;funcret
 27215  003124                     __end_of_sprintf:
 27216                           	opt stack 0
 27217                           tblptru	equ	0xFF8
 27218                           tblptrh	equ	0xFF7
 27219                           tblptrl	equ	0xFF6
 27220                           tablat	equ	0xFF5
 27221                           prodh	equ	0xFF4
 27222                           prodl	equ	0xFF3
 27223                           intcon	equ	0xFF2
 27224                           intcon2	equ	0xFF1
 27225                           indf0	equ	0xFEF
 27226                           postinc0	equ	0xFEE
 27227                           fsr0h	equ	0xFEA
 27228                           fsr0l	equ	0xFE9
 27229                           wreg	equ	0xFE8
 27230                           indf1	equ	0xFE7
 27231                           postdec1	equ	0xFE5
 27232                           fsr1h	equ	0xFE2
 27233                           fsr1l	equ	0xFE1
 27234                           indf2	equ	0xFDF
 27235                           postinc2	equ	0xFDE
 27236                           postdec2	equ	0xFDD
 27237                           fsr2h	equ	0xFDA
 27238                           fsr2l	equ	0xFD9
 27239                           status	equ	0xFD8
 27240                           
 27241 ;; *************** function _scale *****************
 27242 ;; Defined at:
 27243 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 27244 ;; Parameters:    Size  Location     Type
 27245 ;;  scl             1    wreg     char 
 27246 ;; Auto vars:     Size  Location     Type
 27247 ;;  scl             1   75[BANK0 ] char 
 27248 ;; Return value:  Size  Location     Type
 27249 ;;                  3   69[BANK0 ] char 
 27250 ;; Registers used:
 27251 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27252 ;; Tracked objects:
 27253 ;;		On entry : 0/0
 27254 ;;		On exit  : 0/0
 27255 ;;		Unchanged: 0/0
 27256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27257 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27258 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27260 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27261 ;;Total ram usage:        7 bytes
 27262 ;; Hardware stack levels used:    1
 27263 ;; Hardware stack levels required when called:    8
 27264 ;; This function calls:
 27265 ;;		___awdiv
 27266 ;;		___awmod
 27267 ;;		___ftmul
 27268 ;;		___wmul
 27269 ;; This function is called by:
 27270 ;;		_sprintf
 27271 ;; This function uses a non-reentrant model
 27272 ;;
 27273                           
 27274                           	psect	text60
 27275  00435E                     __ptext60:
 27276                           	opt stack 0
 27277  00435E                     _scale:
 27278                           	opt stack 20
 27279                           
 27280                           ;incstack = 0
 27281                           ;scale@scl stored from wreg
 27282  00435E  0100               	movlb	0	; () banked
 27283  004360  6FAB               	movwf	scale@scl& (0+255),b
 27284                           
 27285                           ; BSR set to: 0
 27286                           ;doprnt.c: 428: if(scl < 0) {
 27287  004362  0100               	movlb	0	; () banked
 27288  004364  AFAB               	btfss	scale@scl& (0+255),7,b
 27289  004366  D13F               	goto	l12914
 27290                           
 27291                           ; BSR set to: 0
 27292                           ;doprnt.c: 429: scl = -scl;
 27293  004368  0100               	movlb	0	; () banked
 27294  00436A  6DAB               	negf	scale@scl& (0+255),b
 27295                           
 27296                           ;doprnt.c: 430: if(scl>=110)
 27297  00436C  0100               	movlb	0	; () banked
 27298  00436E  51AB               	movf	scale@scl& (0+255),w,b
 27299  004370  0A80               	xorlw	128
 27300  004372  0F12               	addlw	-238
 27301  004374  A0D8               	btfss	status,0,c
 27302  004376  D0B6               	goto	l12904
 27303                           
 27304                           ; BSR set to: 0
 27305                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 27306  004378  0E00               	movlw	0
 27307  00437A  0100               	movlb	0	; () banked
 27308  00437C  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27309  00437E  0E03               	movlw	3
 27310  004380  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27311  004382  0E00               	movlw	0
 27312  004384  0100               	movlb	0	; () banked
 27313  004386  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 27314  004388  0E0A               	movlw	10
 27315  00438A  6F84               	movwf	___awdiv@divisor& (0+255),b
 27316  00438C  0E00               	movlw	0
 27317  00438E  0100               	movlb	0	; () banked
 27318  004390  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 27319  004392  0E64               	movlw	100
 27320  004394  6F7E               	movwf	___awmod@divisor& (0+255),b
 27321  004396  0100               	movlb	0	; () banked
 27322  004398  51AB               	movf	scale@scl& (0+255),w,b
 27323  00439A  0100               	movlb	0	; () banked
 27324  00439C  6F7C               	movwf	___awmod@dividend& (0+255),b
 27325  00439E  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 27326  0043A0  BF7C               	btfsc	___awmod@dividend& (0+255),7,b
 27327  0043A2  077D               	decf	(___awmod@dividend+1)& (0+255),f,b
 27328  0043A4  EC06  F041         	call	___awmod	;wreg free
 27329  0043A8  C07C  F082         	movff	?___awmod,___awdiv@dividend
 27330  0043AC  C07D  F083         	movff	?___awmod+1,___awdiv@dividend+1
 27331  0043B0  EC59  F03E         	call	___awdiv	;wreg free
 27332  0043B4  0E09               	movlw	9
 27333  0043B6  0100               	movlb	0	; () banked
 27334  0043B8  2582               	addwf	?___awdiv& (0+255),w,b
 27335  0043BA  0100               	movlb	0	; () banked
 27336  0043BC  6F8A               	movwf	___wmul@multiplier& (0+255),b
 27337  0043BE  0E00               	movlw	0
 27338  0043C0  0100               	movlb	0	; () banked
 27339  0043C2  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 27340  0043C4  0100               	movlb	0	; () banked
 27341  0043C6  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 27342  0043C8  EC00  F049         	call	___wmul	;wreg free
 27343  0043CC  0E41               	movlw	low __npowers_
 27344  0043CE  0100               	movlb	0	; () banked
 27345  0043D0  258A               	addwf	?___wmul& (0+255),w,b
 27346  0043D2  6EF6               	movwf	tblptrl,c
 27347  0043D4  0EF1               	movlw	high __npowers_
 27348  0043D6  0100               	movlb	0	; () banked
 27349  0043D8  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27350  0043DA  6EF7               	movwf	tblptrh,c
 27351  0043DC                     	if	1	;There are 3 active tblptr bytes
 27352  0043DC  6AF8               	clrf	tblptru,c
 27353  0043DE  0E00               	movlw	low (__mediumconst shr (0+16))
 27354  0043E0  22F8               	addwfc	tblptru,f,c
 27355  0043E2                     	endif
 27356  0043E2  0009               	tblrd		*+
 27357  0043E4  CFF5 F099          	movff	tablat,___ftmul@f2
 27358  0043E8  0009               	tblrd		*+
 27359  0043EA  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 27360  0043EE  000A               	tblrd		*-
 27361  0043F0  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 27362  0043F4  0E00               	movlw	0
 27363  0043F6  0100               	movlb	0	; () banked
 27364  0043F8  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 27365  0043FA  0E64               	movlw	100
 27366  0043FC  6F84               	movwf	___awdiv@divisor& (0+255),b
 27367  0043FE  0100               	movlb	0	; () banked
 27368  004400  51AB               	movf	scale@scl& (0+255),w,b
 27369  004402  0100               	movlb	0	; () banked
 27370  004404  6F82               	movwf	___awdiv@dividend& (0+255),b
 27371  004406  6B83               	clrf	(___awdiv@dividend+1)& (0+255),b
 27372  004408  BF82               	btfsc	___awdiv@dividend& (0+255),7,b
 27373  00440A  0783               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27374  00440C  EC59  F03E         	call	___awdiv	;wreg free
 27375  004410  0E12               	movlw	18
 27376  004412  0100               	movlb	0	; () banked
 27377  004414  2582               	addwf	?___awdiv& (0+255),w,b
 27378  004416  0100               	movlb	0	; () banked
 27379  004418  6F8A               	movwf	___wmul@multiplier& (0+255),b
 27380  00441A  0E00               	movlw	0
 27381  00441C  0100               	movlb	0	; () banked
 27382  00441E  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 27383  004420  0100               	movlb	0	; () banked
 27384  004422  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 27385  004424  0E00               	movlw	0
 27386  004426  0100               	movlb	0	; () banked
 27387  004428  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27388  00442A  0E03               	movlw	3
 27389  00442C  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27390  00442E  EC00  F049         	call	___wmul	;wreg free
 27391  004432  0E41               	movlw	low __npowers_
 27392  004434  0100               	movlb	0	; () banked
 27393  004436  258A               	addwf	?___wmul& (0+255),w,b
 27394  004438  6EF6               	movwf	tblptrl,c
 27395  00443A  0EF1               	movlw	high __npowers_
 27396  00443C  0100               	movlb	0	; () banked
 27397  00443E  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27398  004440  6EF7               	movwf	tblptrh,c
 27399  004442                     	if	1	;There are 3 active tblptr bytes
 27400  004442  6AF8               	clrf	tblptru,c
 27401  004444  0E00               	movlw	low (__mediumconst shr (0+16))
 27402  004446  22F8               	addwfc	tblptru,f,c
 27403  004448                     	endif
 27404  004448  0009               	tblrd		*+
 27405  00444A  CFF5 F096          	movff	tablat,___ftmul@f1
 27406  00444E  0009               	tblrd		*+
 27407  004450  CFF5 F097          	movff	tablat,___ftmul@f1+1
 27408  004454  000A               	tblrd		*-
 27409  004456  CFF5 F098          	movff	tablat,___ftmul@f1+2
 27410  00445A  EC55  F037         	call	___ftmul	;wreg free
 27411  00445E  C096  F0A8         	movff	?___ftmul,_scale$3809
 27412  004462  C097  F0A9         	movff	?___ftmul+1,_scale$3809+1
 27413  004466  C098  F0AA         	movff	?___ftmul+2,_scale$3809+2
 27414                           
 27415                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 27416  00446A  C0A8  F096         	movff	_scale$3809,___ftmul@f1
 27417  00446E  C0A9  F097         	movff	_scale$3809+1,___ftmul@f1+1
 27418  004472  C0AA  F098         	movff	_scale$3809+2,___ftmul@f1+2
 27419  004476  0E00               	movlw	0
 27420  004478  0100               	movlb	0	; () banked
 27421  00447A  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27422  00447C  0E03               	movlw	3
 27423  00447E  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27424  004480  0E00               	movlw	0
 27425  004482  0100               	movlb	0	; () banked
 27426  004484  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 27427  004486  0E0A               	movlw	10
 27428  004488  6F7E               	movwf	___awmod@divisor& (0+255),b
 27429  00448A  0100               	movlb	0	; () banked
 27430  00448C  51AB               	movf	scale@scl& (0+255),w,b
 27431  00448E  0100               	movlb	0	; () banked
 27432  004490  6F7C               	movwf	___awmod@dividend& (0+255),b
 27433  004492  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 27434  004494  BF7C               	btfsc	___awmod@dividend& (0+255),7,b
 27435  004496  077D               	decf	(___awmod@dividend+1)& (0+255),f,b
 27436  004498  EC06  F041         	call	___awmod	;wreg free
 27437  00449C  C07C  F08A         	movff	?___awmod,___wmul@multiplier
 27438  0044A0  C07D  F08B         	movff	?___awmod+1,___wmul@multiplier+1
 27439  0044A4  EC00  F049         	call	___wmul	;wreg free
 27440  0044A8  0E41               	movlw	low __npowers_
 27441  0044AA  0100               	movlb	0	; () banked
 27442  0044AC  258A               	addwf	?___wmul& (0+255),w,b
 27443  0044AE  6EF6               	movwf	tblptrl,c
 27444  0044B0  0EF1               	movlw	high __npowers_
 27445  0044B2  0100               	movlb	0	; () banked
 27446  0044B4  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27447  0044B6  6EF7               	movwf	tblptrh,c
 27448  0044B8                     	if	1	;There are 3 active tblptr bytes
 27449  0044B8  6AF8               	clrf	tblptru,c
 27450  0044BA  0E00               	movlw	low (__mediumconst shr (0+16))
 27451  0044BC  22F8               	addwfc	tblptru,f,c
 27452  0044BE                     	endif
 27453  0044BE  0009               	tblrd		*+
 27454  0044C0  CFF5 F099          	movff	tablat,___ftmul@f2
 27455  0044C4  0009               	tblrd		*+
 27456  0044C6  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 27457  0044CA  000A               	tblrd		*-
 27458  0044CC  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 27459  0044D0  EC55  F037         	call	___ftmul	;wreg free
 27460  0044D4  C096  F0A5         	movff	?___ftmul,?_scale
 27461  0044D8  C097  F0A6         	movff	?___ftmul+1,?_scale+1
 27462  0044DC  C098  F0A7         	movff	?___ftmul+2,?_scale+2
 27463  0044E0  0012               	return	
 27464  0044E2  D06B               	goto	l12910
 27465  0044E4                     l12904:
 27466                           
 27467                           ;doprnt.c: 432: else if(scl > 10)
 27468  0044E4  0100               	movlb	0	; () banked
 27469  0044E6  51AB               	movf	scale@scl& (0+255),w,b
 27470  0044E8  0A80               	xorlw	128
 27471  0044EA  0F75               	addlw	-139
 27472  0044EC  A0D8               	btfss	status,0,c
 27473  0044EE  D065               	goto	l12910
 27474                           
 27475                           ; BSR set to: 0
 27476                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 27477  0044F0  0E00               	movlw	0
 27478  0044F2  0100               	movlb	0	; () banked
 27479  0044F4  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 27480  0044F6  0E0A               	movlw	10
 27481  0044F8  6F84               	movwf	___awdiv@divisor& (0+255),b
 27482  0044FA  0100               	movlb	0	; () banked
 27483  0044FC  51AB               	movf	scale@scl& (0+255),w,b
 27484  0044FE  0100               	movlb	0	; () banked
 27485  004500  6F82               	movwf	___awdiv@dividend& (0+255),b
 27486  004502  6B83               	clrf	(___awdiv@dividend+1)& (0+255),b
 27487  004504  BF82               	btfsc	___awdiv@dividend& (0+255),7,b
 27488  004506  0783               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27489  004508  EC59  F03E         	call	___awdiv	;wreg free
 27490  00450C  0E09               	movlw	9
 27491  00450E  0100               	movlb	0	; () banked
 27492  004510  2582               	addwf	?___awdiv& (0+255),w,b
 27493  004512  0100               	movlb	0	; () banked
 27494  004514  6F8A               	movwf	___wmul@multiplier& (0+255),b
 27495  004516  0E00               	movlw	0
 27496  004518  0100               	movlb	0	; () banked
 27497  00451A  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 27498  00451C  0100               	movlb	0	; () banked
 27499  00451E  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 27500  004520  0E00               	movlw	0
 27501  004522  0100               	movlb	0	; () banked
 27502  004524  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27503  004526  0E03               	movlw	3
 27504  004528  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27505  00452A  EC00  F049         	call	___wmul	;wreg free
 27506  00452E  0E41               	movlw	low __npowers_
 27507  004530  0100               	movlb	0	; () banked
 27508  004532  258A               	addwf	?___wmul& (0+255),w,b
 27509  004534  6EF6               	movwf	tblptrl,c
 27510  004536  0EF1               	movlw	high __npowers_
 27511  004538  0100               	movlb	0	; () banked
 27512  00453A  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27513  00453C  6EF7               	movwf	tblptrh,c
 27514  00453E                     	if	1	;There are 3 active tblptr bytes
 27515  00453E  6AF8               	clrf	tblptru,c
 27516  004540  0E00               	movlw	low (__mediumconst shr (0+16))
 27517  004542  22F8               	addwfc	tblptru,f,c
 27518  004544                     	endif
 27519  004544  0009               	tblrd		*+
 27520  004546  CFF5 F096          	movff	tablat,___ftmul@f1
 27521  00454A  0009               	tblrd		*+
 27522  00454C  CFF5 F097          	movff	tablat,___ftmul@f1+1
 27523  004550  000A               	tblrd		*-
 27524  004552  CFF5 F098          	movff	tablat,___ftmul@f1+2
 27525  004556  0E00               	movlw	0
 27526  004558  0100               	movlb	0	; () banked
 27527  00455A  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27528  00455C  0E03               	movlw	3
 27529  00455E  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27530  004560  0E00               	movlw	0
 27531  004562  0100               	movlb	0	; () banked
 27532  004564  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 27533  004566  0E0A               	movlw	10
 27534  004568  6F7E               	movwf	___awmod@divisor& (0+255),b
 27535  00456A  0100               	movlb	0	; () banked
 27536  00456C  51AB               	movf	scale@scl& (0+255),w,b
 27537  00456E  0100               	movlb	0	; () banked
 27538  004570  6F7C               	movwf	___awmod@dividend& (0+255),b
 27539  004572  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 27540  004574  BF7C               	btfsc	___awmod@dividend& (0+255),7,b
 27541  004576  077D               	decf	(___awmod@dividend+1)& (0+255),f,b
 27542  004578  EC06  F041         	call	___awmod	;wreg free
 27543  00457C  C07C  F08A         	movff	?___awmod,___wmul@multiplier
 27544  004580  C07D  F08B         	movff	?___awmod+1,___wmul@multiplier+1
 27545  004584  EC00  F049         	call	___wmul	;wreg free
 27546  004588  0E41               	movlw	low __npowers_
 27547  00458A  0100               	movlb	0	; () banked
 27548  00458C  258A               	addwf	?___wmul& (0+255),w,b
 27549  00458E  6EF6               	movwf	tblptrl,c
 27550  004590  0EF1               	movlw	high __npowers_
 27551  004592  0100               	movlb	0	; () banked
 27552  004594  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27553  004596  6EF7               	movwf	tblptrh,c
 27554  004598                     	if	1	;There are 3 active tblptr bytes
 27555  004598  6AF8               	clrf	tblptru,c
 27556  00459A  0E00               	movlw	low (__mediumconst shr (0+16))
 27557  00459C  22F8               	addwfc	tblptru,f,c
 27558  00459E                     	endif
 27559  00459E  0009               	tblrd		*+
 27560  0045A0  CFF5 F099          	movff	tablat,___ftmul@f2
 27561  0045A4  0009               	tblrd		*+
 27562  0045A6  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 27563  0045AA  000A               	tblrd		*-
 27564  0045AC  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 27565  0045B0  EC55  F037         	call	___ftmul	;wreg free
 27566  0045B4  D78F               	goto	L21
 27567  0045B6  0012               	return	
 27568  0045B8  D000               	goto	l12910
 27569  0045BA                     l12910:
 27570                           
 27571                           ;doprnt.c: 434: return _npowers_[scl];
 27572  0045BA  0100               	movlb	0	; () banked
 27573  0045BC  51AB               	movf	scale@scl& (0+255),w,b
 27574  0045BE  0D03               	mullw	3
 27575  0045C0  0E41               	movlw	low __npowers_
 27576  0045C2  24F3               	addwf	prodl,w,c
 27577  0045C4  6EF6               	movwf	tblptrl,c
 27578  0045C6  0EF1               	movlw	high __npowers_
 27579  0045C8  20F4               	addwfc	prodh,w,c
 27580  0045CA  6EF7               	movwf	tblptrh,c
 27581  0045CC                     	if	1	;There are 3 active tblptr bytes
 27582  0045CC  6AF8               	clrf	tblptru,c
 27583  0045CE  0E00               	movlw	low (__mediumconst shr (0+16))
 27584  0045D0  22F8               	addwfc	tblptru,f,c
 27585  0045D2                     	endif
 27586  0045D2  0009               	tblrd		*+
 27587  0045D4  CFF5 F0A5          	movff	tablat,?_scale
 27588  0045D8  0009               	tblrd		*+
 27589  0045DA  CFF5 F0A6          	movff	tablat,?_scale+1
 27590  0045DE  000A               	tblrd		*-
 27591  0045E0  CFF5 F0A7          	movff	tablat,?_scale+2
 27592                           
 27593                           ; BSR set to: 0
 27594  0045E4  0012               	return	
 27595  0045E6                     l12914:
 27596                           
 27597                           ; BSR set to: 0
 27598                           ;doprnt.c: 435: }
 27599                           ;doprnt.c: 436: if(scl>=110)
 27600  0045E6  0100               	movlb	0	; () banked
 27601  0045E8  51AB               	movf	scale@scl& (0+255),w,b
 27602  0045EA  0A80               	xorlw	128
 27603  0045EC  0F12               	addlw	-238
 27604  0045EE  A0D8               	btfss	status,0,c
 27605  0045F0  D0B6               	goto	l12922
 27606                           
 27607                           ; BSR set to: 0
 27608                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 27609  0045F2  0E00               	movlw	0
 27610  0045F4  0100               	movlb	0	; () banked
 27611  0045F6  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27612  0045F8  0E03               	movlw	3
 27613  0045FA  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27614  0045FC  0E00               	movlw	0
 27615  0045FE  0100               	movlb	0	; () banked
 27616  004600  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 27617  004602  0E0A               	movlw	10
 27618  004604  6F84               	movwf	___awdiv@divisor& (0+255),b
 27619  004606  0E00               	movlw	0
 27620  004608  0100               	movlb	0	; () banked
 27621  00460A  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 27622  00460C  0E64               	movlw	100
 27623  00460E  6F7E               	movwf	___awmod@divisor& (0+255),b
 27624  004610  0100               	movlb	0	; () banked
 27625  004612  51AB               	movf	scale@scl& (0+255),w,b
 27626  004614  0100               	movlb	0	; () banked
 27627  004616  6F7C               	movwf	___awmod@dividend& (0+255),b
 27628  004618  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 27629  00461A  BF7C               	btfsc	___awmod@dividend& (0+255),7,b
 27630  00461C  077D               	decf	(___awmod@dividend+1)& (0+255),f,b
 27631  00461E  EC06  F041         	call	___awmod	;wreg free
 27632  004622  C07C  F082         	movff	?___awmod,___awdiv@dividend
 27633  004626  C07D  F083         	movff	?___awmod+1,___awdiv@dividend+1
 27634  00462A  EC59  F03E         	call	___awdiv	;wreg free
 27635  00462E  0E09               	movlw	9
 27636  004630  0100               	movlb	0	; () banked
 27637  004632  2582               	addwf	?___awdiv& (0+255),w,b
 27638  004634  0100               	movlb	0	; () banked
 27639  004636  6F8A               	movwf	___wmul@multiplier& (0+255),b
 27640  004638  0E00               	movlw	0
 27641  00463A  0100               	movlb	0	; () banked
 27642  00463C  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 27643  00463E  0100               	movlb	0	; () banked
 27644  004640  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 27645  004642  EC00  F049         	call	___wmul	;wreg free
 27646  004646  0E68               	movlw	low __powers_
 27647  004648  0100               	movlb	0	; () banked
 27648  00464A  258A               	addwf	?___wmul& (0+255),w,b
 27649  00464C  6EF6               	movwf	tblptrl,c
 27650  00464E  0EF1               	movlw	high __powers_
 27651  004650  0100               	movlb	0	; () banked
 27652  004652  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27653  004654  6EF7               	movwf	tblptrh,c
 27654  004656                     	if	1	;There are 3 active tblptr bytes
 27655  004656  6AF8               	clrf	tblptru,c
 27656  004658  0E00               	movlw	low (__mediumconst shr (0+16))
 27657  00465A  22F8               	addwfc	tblptru,f,c
 27658  00465C                     	endif
 27659  00465C  0009               	tblrd		*+
 27660  00465E  CFF5 F099          	movff	tablat,___ftmul@f2
 27661  004662  0009               	tblrd		*+
 27662  004664  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 27663  004668  000A               	tblrd		*-
 27664  00466A  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 27665  00466E  0E00               	movlw	0
 27666  004670  0100               	movlb	0	; () banked
 27667  004672  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 27668  004674  0E64               	movlw	100
 27669  004676  6F84               	movwf	___awdiv@divisor& (0+255),b
 27670  004678  0100               	movlb	0	; () banked
 27671  00467A  51AB               	movf	scale@scl& (0+255),w,b
 27672  00467C  0100               	movlb	0	; () banked
 27673  00467E  6F82               	movwf	___awdiv@dividend& (0+255),b
 27674  004680  6B83               	clrf	(___awdiv@dividend+1)& (0+255),b
 27675  004682  BF82               	btfsc	___awdiv@dividend& (0+255),7,b
 27676  004684  0783               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27677  004686  EC59  F03E         	call	___awdiv	;wreg free
 27678  00468A  0E12               	movlw	18
 27679  00468C  0100               	movlb	0	; () banked
 27680  00468E  2582               	addwf	?___awdiv& (0+255),w,b
 27681  004690  0100               	movlb	0	; () banked
 27682  004692  6F8A               	movwf	___wmul@multiplier& (0+255),b
 27683  004694  0E00               	movlw	0
 27684  004696  0100               	movlb	0	; () banked
 27685  004698  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 27686  00469A  0100               	movlb	0	; () banked
 27687  00469C  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 27688  00469E  0E00               	movlw	0
 27689  0046A0  0100               	movlb	0	; () banked
 27690  0046A2  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27691  0046A4  0E03               	movlw	3
 27692  0046A6  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27693  0046A8  EC00  F049         	call	___wmul	;wreg free
 27694  0046AC  0E68               	movlw	low __powers_
 27695  0046AE  0100               	movlb	0	; () banked
 27696  0046B0  258A               	addwf	?___wmul& (0+255),w,b
 27697  0046B2  6EF6               	movwf	tblptrl,c
 27698  0046B4  0EF1               	movlw	high __powers_
 27699  0046B6  0100               	movlb	0	; () banked
 27700  0046B8  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27701  0046BA  6EF7               	movwf	tblptrh,c
 27702  0046BC                     	if	1	;There are 3 active tblptr bytes
 27703  0046BC  6AF8               	clrf	tblptru,c
 27704  0046BE  0E00               	movlw	low (__mediumconst shr (0+16))
 27705  0046C0  22F8               	addwfc	tblptru,f,c
 27706  0046C2                     	endif
 27707  0046C2  0009               	tblrd		*+
 27708  0046C4  CFF5 F096          	movff	tablat,___ftmul@f1
 27709  0046C8  0009               	tblrd		*+
 27710  0046CA  CFF5 F097          	movff	tablat,___ftmul@f1+1
 27711  0046CE  000A               	tblrd		*-
 27712  0046D0  CFF5 F098          	movff	tablat,___ftmul@f1+2
 27713  0046D4  EC55  F037         	call	___ftmul	;wreg free
 27714  0046D8  C096  F0A8         	movff	?___ftmul,_scale$3809
 27715  0046DC  C097  F0A9         	movff	?___ftmul+1,_scale$3809+1
 27716  0046E0  C098  F0AA         	movff	?___ftmul+2,_scale$3809+2
 27717                           
 27718                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 27719  0046E4  C0A8  F096         	movff	_scale$3809,___ftmul@f1
 27720  0046E8  C0A9  F097         	movff	_scale$3809+1,___ftmul@f1+1
 27721  0046EC  C0AA  F098         	movff	_scale$3809+2,___ftmul@f1+2
 27722  0046F0  0E00               	movlw	0
 27723  0046F2  0100               	movlb	0	; () banked
 27724  0046F4  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27725  0046F6  0E03               	movlw	3
 27726  0046F8  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27727  0046FA  0E00               	movlw	0
 27728  0046FC  0100               	movlb	0	; () banked
 27729  0046FE  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 27730  004700  0E0A               	movlw	10
 27731  004702  6F7E               	movwf	___awmod@divisor& (0+255),b
 27732  004704  0100               	movlb	0	; () banked
 27733  004706  51AB               	movf	scale@scl& (0+255),w,b
 27734  004708  0100               	movlb	0	; () banked
 27735  00470A  6F7C               	movwf	___awmod@dividend& (0+255),b
 27736  00470C  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 27737  00470E  BF7C               	btfsc	___awmod@dividend& (0+255),7,b
 27738  004710  077D               	decf	(___awmod@dividend+1)& (0+255),f,b
 27739  004712  EC06  F041         	call	___awmod	;wreg free
 27740  004716  C07C  F08A         	movff	?___awmod,___wmul@multiplier
 27741  00471A  C07D  F08B         	movff	?___awmod+1,___wmul@multiplier+1
 27742  00471E  EC00  F049         	call	___wmul	;wreg free
 27743  004722  0E68               	movlw	low __powers_
 27744  004724  0100               	movlb	0	; () banked
 27745  004726  258A               	addwf	?___wmul& (0+255),w,b
 27746  004728  6EF6               	movwf	tblptrl,c
 27747  00472A  0EF1               	movlw	high __powers_
 27748  00472C  0100               	movlb	0	; () banked
 27749  00472E  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27750  004730  6EF7               	movwf	tblptrh,c
 27751  004732                     	if	1	;There are 3 active tblptr bytes
 27752  004732  6AF8               	clrf	tblptru,c
 27753  004734  0E00               	movlw	low (__mediumconst shr (0+16))
 27754  004736  22F8               	addwfc	tblptru,f,c
 27755  004738                     	endif
 27756  004738  0009               	tblrd		*+
 27757  00473A  CFF5 F099          	movff	tablat,___ftmul@f2
 27758  00473E  0009               	tblrd		*+
 27759  004740  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 27760  004744  000A               	tblrd		*-
 27761  004746  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 27762  00474A  EC55  F037         	call	___ftmul	;wreg free
 27763  00474E  C096  F0A5         	movff	?___ftmul,?_scale
 27764  004752  C097  F0A6         	movff	?___ftmul+1,?_scale+1
 27765  004756  C098  F0A7         	movff	?___ftmul+2,?_scale+2
 27766  00475A  0012               	return	
 27767  00475C  D06B               	goto	l12928
 27768  00475E                     l12922:
 27769                           
 27770                           ;doprnt.c: 438: else if(scl > 10)
 27771  00475E  0100               	movlb	0	; () banked
 27772  004760  51AB               	movf	scale@scl& (0+255),w,b
 27773  004762  0A80               	xorlw	128
 27774  004764  0F75               	addlw	-139
 27775  004766  A0D8               	btfss	status,0,c
 27776  004768  D065               	goto	l12928
 27777                           
 27778                           ; BSR set to: 0
 27779                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 27780  00476A  0E00               	movlw	0
 27781  00476C  0100               	movlb	0	; () banked
 27782  00476E  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 27783  004770  0E0A               	movlw	10
 27784  004772  6F84               	movwf	___awdiv@divisor& (0+255),b
 27785  004774  0100               	movlb	0	; () banked
 27786  004776  51AB               	movf	scale@scl& (0+255),w,b
 27787  004778  0100               	movlb	0	; () banked
 27788  00477A  6F82               	movwf	___awdiv@dividend& (0+255),b
 27789  00477C  6B83               	clrf	(___awdiv@dividend+1)& (0+255),b
 27790  00477E  BF82               	btfsc	___awdiv@dividend& (0+255),7,b
 27791  004780  0783               	decf	(___awdiv@dividend+1)& (0+255),f,b
 27792  004782  EC59  F03E         	call	___awdiv	;wreg free
 27793  004786  0E09               	movlw	9
 27794  004788  0100               	movlb	0	; () banked
 27795  00478A  2582               	addwf	?___awdiv& (0+255),w,b
 27796  00478C  0100               	movlb	0	; () banked
 27797  00478E  6F8A               	movwf	___wmul@multiplier& (0+255),b
 27798  004790  0E00               	movlw	0
 27799  004792  0100               	movlb	0	; () banked
 27800  004794  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 27801  004796  0100               	movlb	0	; () banked
 27802  004798  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 27803  00479A  0E00               	movlw	0
 27804  00479C  0100               	movlb	0	; () banked
 27805  00479E  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27806  0047A0  0E03               	movlw	3
 27807  0047A2  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27808  0047A4  EC00  F049         	call	___wmul	;wreg free
 27809  0047A8  0E68               	movlw	low __powers_
 27810  0047AA  0100               	movlb	0	; () banked
 27811  0047AC  258A               	addwf	?___wmul& (0+255),w,b
 27812  0047AE  6EF6               	movwf	tblptrl,c
 27813  0047B0  0EF1               	movlw	high __powers_
 27814  0047B2  0100               	movlb	0	; () banked
 27815  0047B4  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27816  0047B6  6EF7               	movwf	tblptrh,c
 27817  0047B8                     	if	1	;There are 3 active tblptr bytes
 27818  0047B8  6AF8               	clrf	tblptru,c
 27819  0047BA  0E00               	movlw	low (__mediumconst shr (0+16))
 27820  0047BC  22F8               	addwfc	tblptru,f,c
 27821  0047BE                     	endif
 27822  0047BE  0009               	tblrd		*+
 27823  0047C0  CFF5 F096          	movff	tablat,___ftmul@f1
 27824  0047C4  0009               	tblrd		*+
 27825  0047C6  CFF5 F097          	movff	tablat,___ftmul@f1+1
 27826  0047CA  000A               	tblrd		*-
 27827  0047CC  CFF5 F098          	movff	tablat,___ftmul@f1+2
 27828  0047D0  0E00               	movlw	0
 27829  0047D2  0100               	movlb	0	; () banked
 27830  0047D4  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 27831  0047D6  0E03               	movlw	3
 27832  0047D8  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 27833  0047DA  0E00               	movlw	0
 27834  0047DC  0100               	movlb	0	; () banked
 27835  0047DE  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 27836  0047E0  0E0A               	movlw	10
 27837  0047E2  6F7E               	movwf	___awmod@divisor& (0+255),b
 27838  0047E4  0100               	movlb	0	; () banked
 27839  0047E6  51AB               	movf	scale@scl& (0+255),w,b
 27840  0047E8  0100               	movlb	0	; () banked
 27841  0047EA  6F7C               	movwf	___awmod@dividend& (0+255),b
 27842  0047EC  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 27843  0047EE  BF7C               	btfsc	___awmod@dividend& (0+255),7,b
 27844  0047F0  077D               	decf	(___awmod@dividend+1)& (0+255),f,b
 27845  0047F2  EC06  F041         	call	___awmod	;wreg free
 27846  0047F6  C07C  F08A         	movff	?___awmod,___wmul@multiplier
 27847  0047FA  C07D  F08B         	movff	?___awmod+1,___wmul@multiplier+1
 27848  0047FE  EC00  F049         	call	___wmul	;wreg free
 27849  004802  0E68               	movlw	low __powers_
 27850  004804  0100               	movlb	0	; () banked
 27851  004806  258A               	addwf	?___wmul& (0+255),w,b
 27852  004808  6EF6               	movwf	tblptrl,c
 27853  00480A  0EF1               	movlw	high __powers_
 27854  00480C  0100               	movlb	0	; () banked
 27855  00480E  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 27856  004810  6EF7               	movwf	tblptrh,c
 27857  004812                     	if	1	;There are 3 active tblptr bytes
 27858  004812  6AF8               	clrf	tblptru,c
 27859  004814  0E00               	movlw	low (__mediumconst shr (0+16))
 27860  004816  22F8               	addwfc	tblptru,f,c
 27861  004818                     	endif
 27862  004818  0009               	tblrd		*+
 27863  00481A  CFF5 F099          	movff	tablat,___ftmul@f2
 27864  00481E  0009               	tblrd		*+
 27865  004820  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 27866  004824  000A               	tblrd		*-
 27867  004826  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 27868  00482A  EC55  F037         	call	___ftmul	;wreg free
 27869  00482E  D78F               	goto	L22
 27870  004830  0012               	return	
 27871  004832  D000               	goto	l12928
 27872  004834                     l12928:
 27873                           
 27874                           ;doprnt.c: 440: return _powers_[scl];
 27875  004834  0100               	movlb	0	; () banked
 27876  004836  51AB               	movf	scale@scl& (0+255),w,b
 27877  004838  0D03               	mullw	3
 27878  00483A  0E68               	movlw	low __powers_
 27879  00483C  24F3               	addwf	prodl,w,c
 27880  00483E  6EF6               	movwf	tblptrl,c
 27881  004840  0EF1               	movlw	high __powers_
 27882  004842  20F4               	addwfc	prodh,w,c
 27883  004844  6EF7               	movwf	tblptrh,c
 27884  004846                     	if	1	;There are 3 active tblptr bytes
 27885  004846  6AF8               	clrf	tblptru,c
 27886  004848  0E00               	movlw	low (__mediumconst shr (0+16))
 27887  00484A  22F8               	addwfc	tblptru,f,c
 27888  00484C                     	endif
 27889  00484C  0009               	tblrd		*+
 27890  00484E  CFF5 F0A5          	movff	tablat,?_scale
 27891  004852  0009               	tblrd		*+
 27892  004854  CFF5 F0A6          	movff	tablat,?_scale+1
 27893  004858  000A               	tblrd		*-
 27894  00485A  CFF5 F0A7          	movff	tablat,?_scale+2
 27895  00485E  0012               	return	
 27896                           
 27897                           ; BSR set to: 0
 27898  004860  0012               	return		;funcret
 27899  004862                     __end_of_scale:
 27900                           	opt stack 0
 27901                           tblptru	equ	0xFF8
 27902                           tblptrh	equ	0xFF7
 27903                           tblptrl	equ	0xFF6
 27904                           tablat	equ	0xFF5
 27905                           prodh	equ	0xFF4
 27906                           prodl	equ	0xFF3
 27907                           intcon	equ	0xFF2
 27908                           intcon2	equ	0xFF1
 27909                           indf0	equ	0xFEF
 27910                           postinc0	equ	0xFEE
 27911                           fsr0h	equ	0xFEA
 27912                           fsr0l	equ	0xFE9
 27913                           wreg	equ	0xFE8
 27914                           indf1	equ	0xFE7
 27915                           postdec1	equ	0xFE5
 27916                           fsr1h	equ	0xFE2
 27917                           fsr1l	equ	0xFE1
 27918                           indf2	equ	0xFDF
 27919                           postinc2	equ	0xFDE
 27920                           postdec2	equ	0xFDD
 27921                           fsr2h	equ	0xFDA
 27922                           fsr2l	equ	0xFD9
 27923                           status	equ	0xFD8
 27924                           
 27925 ;; *************** function _isdigit *****************
 27926 ;; Defined at:
 27927 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 27928 ;; Parameters:    Size  Location     Type
 27929 ;;  c               1    wreg     unsigned char 
 27930 ;; Auto vars:     Size  Location     Type
 27931 ;;  c               1   30[BANK0 ] unsigned char 
 27932 ;; Return value:  Size  Location     Type
 27933 ;;		None               void
 27934 ;; Registers used:
 27935 ;;		wreg, status,2, status,0
 27936 ;; Tracked objects:
 27937 ;;		On entry : 0/0
 27938 ;;		On exit  : 0/0
 27939 ;;		Unchanged: 0/0
 27940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27942 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27943 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27944 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27945 ;;Total ram usage:        3 bytes
 27946 ;; Hardware stack levels used:    1
 27947 ;; Hardware stack levels required when called:    6
 27948 ;; This function calls:
 27949 ;;		Nothing
 27950 ;; This function is called by:
 27951 ;;		_sprintf
 27952 ;; This function uses a non-reentrant model
 27953 ;;
 27954                           
 27955                           	psect	text61
 27956  0092D0                     __ptext61:
 27957                           	opt stack 0
 27958  0092D0                     _isdigit:
 27959                           	opt stack 22
 27960                           
 27961                           ;incstack = 0
 27962                           ;isdigit@c stored from wreg
 27963  0092D0  0100               	movlb	0	; () banked
 27964  0092D2  6F7E               	movwf	isdigit@c& (0+255),b
 27965                           
 27966                           ; BSR set to: 0
 27967  0092D4  0E00               	movlw	0
 27968  0092D6  0100               	movlb	0	; () banked
 27969  0092D8  6F7D               	movwf	_isdigit$3485& (0+255),b
 27970                           
 27971                           ; BSR set to: 0
 27972  0092DA  0E3A               	movlw	58
 27973  0092DC  0100               	movlb	0	; () banked
 27974  0092DE  617E               	cpfslt	isdigit@c& (0+255),b
 27975  0092E0  D008               	goto	l12940
 27976                           
 27977                           ; BSR set to: 0
 27978  0092E2  0E2F               	movlw	47
 27979  0092E4  0100               	movlb	0	; () banked
 27980  0092E6  657E               	cpfsgt	isdigit@c& (0+255),b
 27981  0092E8  D004               	goto	l12940
 27982                           
 27983                           ; BSR set to: 0
 27984  0092EA  0E01               	movlw	1
 27985  0092EC  0100               	movlb	0	; () banked
 27986  0092EE  6F7D               	movwf	_isdigit$3485& (0+255),b
 27987  0092F0  D000               	goto	l12940
 27988  0092F2                     l12940:
 27989                           
 27990                           ; BSR set to: 0
 27991  0092F2  C07D  F07C         	movff	_isdigit$3485,??_isdigit
 27992  0092F6  0100               	movlb	0	; () banked
 27993  0092F8  317C               	rrcf	??_isdigit& (0+255),w,b
 27994  0092FA  0012               	return	
 27995                           
 27996                           ; BSR set to: 0
 27997                           
 27998                           ; BSR set to: 0
 27999  0092FC  0012               	return		;funcret
 28000  0092FE                     __end_of_isdigit:
 28001                           	opt stack 0
 28002                           tblptru	equ	0xFF8
 28003                           tblptrh	equ	0xFF7
 28004                           tblptrl	equ	0xFF6
 28005                           tablat	equ	0xFF5
 28006                           prodh	equ	0xFF4
 28007                           prodl	equ	0xFF3
 28008                           intcon	equ	0xFF2
 28009                           intcon2	equ	0xFF1
 28010                           indf0	equ	0xFEF
 28011                           postinc0	equ	0xFEE
 28012                           fsr0h	equ	0xFEA
 28013                           fsr0l	equ	0xFE9
 28014                           wreg	equ	0xFE8
 28015                           indf1	equ	0xFE7
 28016                           postdec1	equ	0xFE5
 28017                           fsr1h	equ	0xFE2
 28018                           fsr1l	equ	0xFE1
 28019                           indf2	equ	0xFDF
 28020                           postinc2	equ	0xFDE
 28021                           postdec2	equ	0xFDD
 28022                           fsr2h	equ	0xFDA
 28023                           fsr2l	equ	0xFD9
 28024                           status	equ	0xFD8
 28025                           
 28026 ;; *************** function _fround *****************
 28027 ;; Defined at:
 28028 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 28029 ;; Parameters:    Size  Location     Type
 28030 ;;  prec            1    wreg     unsigned char 
 28031 ;; Auto vars:     Size  Location     Type
 28032 ;;  prec            1   78[BANK0 ] unsigned char 
 28033 ;; Return value:  Size  Location     Type
 28034 ;;                  3   69[BANK0 ] unsigned char 
 28035 ;; Registers used:
 28036 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28037 ;; Tracked objects:
 28038 ;;		On entry : 0/0
 28039 ;;		On exit  : 0/0
 28040 ;;		Unchanged: 0/0
 28041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28042 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28043 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28045 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28046 ;;Total ram usage:       10 bytes
 28047 ;; Hardware stack levels used:    1
 28048 ;; Hardware stack levels required when called:    8
 28049 ;; This function calls:
 28050 ;;		___awdiv
 28051 ;;		___awmod
 28052 ;;		___ftmul
 28053 ;;		___wmul
 28054 ;; This function is called by:
 28055 ;;		_sprintf
 28056 ;; This function uses a non-reentrant model
 28057 ;;
 28058                           
 28059                           	psect	text62
 28060  0058A2                     __ptext62:
 28061                           	opt stack 0
 28062  0058A2                     _fround:
 28063                           	opt stack 20
 28064                           
 28065                           ; BSR set to: 0
 28066                           ;incstack = 0
 28067                           ;fround@prec stored from wreg
 28068  0058A2  0100               	movlb	0	; () banked
 28069  0058A4  6FAE               	movwf	fround@prec& (0+255),b
 28070                           
 28071                           ; BSR set to: 0
 28072                           ;doprnt.c: 413: if(prec>=110)
 28073  0058A6  0E6D               	movlw	109
 28074  0058A8  0100               	movlb	0	; () banked
 28075  0058AA  65AE               	cpfsgt	fround@prec& (0+255),b
 28076  0058AC  D0C4               	goto	l12882
 28077                           
 28078                           ; BSR set to: 0
 28079                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 28080  0058AE  0E00               	movlw	0
 28081  0058B0  0100               	movlb	0	; () banked
 28082  0058B2  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28083  0058B4  0E03               	movlw	3
 28084  0058B6  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 28085  0058B8  0E00               	movlw	0
 28086  0058BA  0100               	movlb	0	; () banked
 28087  0058BC  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 28088  0058BE  0E0A               	movlw	10
 28089  0058C0  6F84               	movwf	___awdiv@divisor& (0+255),b
 28090  0058C2  0E00               	movlw	0
 28091  0058C4  0100               	movlb	0	; () banked
 28092  0058C6  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 28093  0058C8  0E64               	movlw	100
 28094  0058CA  6F7E               	movwf	___awmod@divisor& (0+255),b
 28095  0058CC  C0AE  F07C         	movff	fround@prec,___awmod@dividend
 28096  0058D0  0100               	movlb	0	; () banked
 28097  0058D2  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 28098  0058D4  EC06  F041         	call	___awmod	;wreg free
 28099  0058D8  C07C  F082         	movff	?___awmod,___awdiv@dividend
 28100  0058DC  C07D  F083         	movff	?___awmod+1,___awdiv@dividend+1
 28101  0058E0  EC59  F03E         	call	___awdiv	;wreg free
 28102  0058E4  0E09               	movlw	9
 28103  0058E6  0100               	movlb	0	; () banked
 28104  0058E8  2582               	addwf	?___awdiv& (0+255),w,b
 28105  0058EA  0100               	movlb	0	; () banked
 28106  0058EC  6F8A               	movwf	___wmul@multiplier& (0+255),b
 28107  0058EE  0E00               	movlw	0
 28108  0058F0  0100               	movlb	0	; () banked
 28109  0058F2  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 28110  0058F4  0100               	movlb	0	; () banked
 28111  0058F6  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 28112  0058F8  EC00  F049         	call	___wmul	;wreg free
 28113  0058FC  0E41               	movlw	low __npowers_
 28114  0058FE  0100               	movlb	0	; () banked
 28115  005900  258A               	addwf	?___wmul& (0+255),w,b
 28116  005902  6EF6               	movwf	tblptrl,c
 28117  005904  0EF1               	movlw	high __npowers_
 28118  005906  0100               	movlb	0	; () banked
 28119  005908  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 28120  00590A  6EF7               	movwf	tblptrh,c
 28121  00590C                     	if	1	;There are 3 active tblptr bytes
 28122  00590C  6AF8               	clrf	tblptru,c
 28123  00590E  0E00               	movlw	low (__mediumconst shr (0+16))
 28124  005910  22F8               	addwfc	tblptru,f,c
 28125  005912                     	endif
 28126  005912  0009               	tblrd		*+
 28127  005914  CFF5 F099          	movff	tablat,___ftmul@f2
 28128  005918  0009               	tblrd		*+
 28129  00591A  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 28130  00591E  000A               	tblrd		*-
 28131  005920  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 28132  005924  0E00               	movlw	0
 28133  005926  0100               	movlb	0	; () banked
 28134  005928  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 28135  00592A  0E64               	movlw	100
 28136  00592C  6F84               	movwf	___awdiv@divisor& (0+255),b
 28137  00592E  C0AE  F082         	movff	fround@prec,___awdiv@dividend
 28138  005932  0100               	movlb	0	; () banked
 28139  005934  6B83               	clrf	(___awdiv@dividend+1)& (0+255),b
 28140  005936  EC59  F03E         	call	___awdiv	;wreg free
 28141  00593A  0E12               	movlw	18
 28142  00593C  0100               	movlb	0	; () banked
 28143  00593E  2582               	addwf	?___awdiv& (0+255),w,b
 28144  005940  0100               	movlb	0	; () banked
 28145  005942  6F8A               	movwf	___wmul@multiplier& (0+255),b
 28146  005944  0E00               	movlw	0
 28147  005946  0100               	movlb	0	; () banked
 28148  005948  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 28149  00594A  0100               	movlb	0	; () banked
 28150  00594C  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 28151  00594E  0E00               	movlw	0
 28152  005950  0100               	movlb	0	; () banked
 28153  005952  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28154  005954  0E03               	movlw	3
 28155  005956  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 28156  005958  EC00  F049         	call	___wmul	;wreg free
 28157  00595C  0E41               	movlw	low __npowers_
 28158  00595E  0100               	movlb	0	; () banked
 28159  005960  258A               	addwf	?___wmul& (0+255),w,b
 28160  005962  6EF6               	movwf	tblptrl,c
 28161  005964  0EF1               	movlw	high __npowers_
 28162  005966  0100               	movlb	0	; () banked
 28163  005968  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 28164  00596A  6EF7               	movwf	tblptrh,c
 28165  00596C                     	if	1	;There are 3 active tblptr bytes
 28166  00596C  6AF8               	clrf	tblptru,c
 28167  00596E  0E00               	movlw	low (__mediumconst shr (0+16))
 28168  005970  22F8               	addwfc	tblptru,f,c
 28169  005972                     	endif
 28170  005972  0009               	tblrd		*+
 28171  005974  CFF5 F096          	movff	tablat,___ftmul@f1
 28172  005978  0009               	tblrd		*+
 28173  00597A  CFF5 F097          	movff	tablat,___ftmul@f1+1
 28174  00597E  000A               	tblrd		*-
 28175  005980  CFF5 F098          	movff	tablat,___ftmul@f1+2
 28176  005984  EC55  F037         	call	___ftmul	;wreg free
 28177  005988  C096  F0AB         	movff	?___ftmul,_fround$3807
 28178  00598C  C097  F0AC         	movff	?___ftmul+1,_fround$3807+1
 28179  005990  C098  F0AD         	movff	?___ftmul+2,_fround$3807+2
 28180                           
 28181                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 28182  005994  0E00               	movlw	0
 28183  005996  0100               	movlb	0	; () banked
 28184  005998  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28185  00599A  0E03               	movlw	3
 28186  00599C  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 28187  00599E  0E00               	movlw	0
 28188  0059A0  0100               	movlb	0	; () banked
 28189  0059A2  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 28190  0059A4  0E0A               	movlw	10
 28191  0059A6  6F7E               	movwf	___awmod@divisor& (0+255),b
 28192  0059A8  C0AE  F07C         	movff	fround@prec,___awmod@dividend
 28193  0059AC  0100               	movlb	0	; () banked
 28194  0059AE  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 28195  0059B0  EC06  F041         	call	___awmod	;wreg free
 28196  0059B4  C07C  F08A         	movff	?___awmod,___wmul@multiplier
 28197  0059B8  C07D  F08B         	movff	?___awmod+1,___wmul@multiplier+1
 28198  0059BC  EC00  F049         	call	___wmul	;wreg free
 28199  0059C0  0E41               	movlw	low __npowers_
 28200  0059C2  0100               	movlb	0	; () banked
 28201  0059C4  258A               	addwf	?___wmul& (0+255),w,b
 28202  0059C6  6EF6               	movwf	tblptrl,c
 28203  0059C8  0EF1               	movlw	high __npowers_
 28204  0059CA  0100               	movlb	0	; () banked
 28205  0059CC  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 28206  0059CE  6EF7               	movwf	tblptrh,c
 28207  0059D0                     	if	1	;There are 3 active tblptr bytes
 28208  0059D0  6AF8               	clrf	tblptru,c
 28209  0059D2  0E00               	movlw	low (__mediumconst shr (0+16))
 28210  0059D4  22F8               	addwfc	tblptru,f,c
 28211  0059D6                     	endif
 28212  0059D6  0009               	tblrd		*+
 28213  0059D8  CFF5 F099          	movff	tablat,___ftmul@f2
 28214  0059DC  0009               	tblrd		*+
 28215  0059DE  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 28216  0059E2  000A               	tblrd		*-
 28217  0059E4  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 28218  0059E8  C0AB  F096         	movff	_fround$3807,___ftmul@f1
 28219  0059EC  C0AC  F097         	movff	_fround$3807+1,___ftmul@f1+1
 28220  0059F0  C0AD  F098         	movff	_fround$3807+2,___ftmul@f1+2
 28221  0059F4  EC55  F037         	call	___ftmul	;wreg free
 28222  0059F8  C096  F0A8         	movff	?___ftmul,_fround$3808
 28223  0059FC  C097  F0A9         	movff	?___ftmul+1,_fround$3808+1
 28224  005A00  C098  F0AA         	movff	?___ftmul+2,_fround$3808+2
 28225                           
 28226                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 28227  005A04  C0A8  F096         	movff	_fround$3808,___ftmul@f1
 28228  005A08  C0A9  F097         	movff	_fround$3808+1,___ftmul@f1+1
 28229  005A0C  C0AA  F098         	movff	_fround$3808+2,___ftmul@f1+2
 28230  005A10  0E00               	movlw	0
 28231  005A12  0100               	movlb	0	; () banked
 28232  005A14  6F99               	movwf	___ftmul@f2& (0+255),b
 28233  005A16  0E00               	movlw	0
 28234  005A18  0100               	movlb	0	; () banked
 28235  005A1A  6F9A               	movwf	(___ftmul@f2+1)& (0+255),b
 28236  005A1C  0E3F               	movlw	63
 28237  005A1E  0100               	movlb	0	; () banked
 28238  005A20  6F9B               	movwf	(___ftmul@f2+2)& (0+255),b
 28239  005A22  EC55  F037         	call	___ftmul	;wreg free
 28240  005A26  C096  F0A5         	movff	?___ftmul,?_fround
 28241  005A2A  C097  F0A6         	movff	?___ftmul+1,?_fround+1
 28242  005A2E  C098  F0A7         	movff	?___ftmul+2,?_fround+2
 28243  005A32  0012               	return	
 28244  005A34  D07A               	goto	l12890
 28245  005A36                     l12882:
 28246                           
 28247                           ;doprnt.c: 415: else if(prec > 10)
 28248  005A36  0E0A               	movlw	10
 28249  005A38  0100               	movlb	0	; () banked
 28250  005A3A  65AE               	cpfsgt	fround@prec& (0+255),b
 28251  005A3C  D076               	goto	l12890
 28252                           
 28253                           ; BSR set to: 0
 28254                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 28255  005A3E  0E00               	movlw	0
 28256  005A40  0100               	movlb	0	; () banked
 28257  005A42  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28258  005A44  0E03               	movlw	3
 28259  005A46  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 28260  005A48  0E00               	movlw	0
 28261  005A4A  0100               	movlb	0	; () banked
 28262  005A4C  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 28263  005A4E  0E0A               	movlw	10
 28264  005A50  6F7E               	movwf	___awmod@divisor& (0+255),b
 28265  005A52  C0AE  F07C         	movff	fround@prec,___awmod@dividend
 28266  005A56  0100               	movlb	0	; () banked
 28267  005A58  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 28268  005A5A  EC06  F041         	call	___awmod	;wreg free
 28269  005A5E  C07C  F08A         	movff	?___awmod,___wmul@multiplier
 28270  005A62  C07D  F08B         	movff	?___awmod+1,___wmul@multiplier+1
 28271  005A66  EC00  F049         	call	___wmul	;wreg free
 28272  005A6A  0E41               	movlw	low __npowers_
 28273  005A6C  0100               	movlb	0	; () banked
 28274  005A6E  258A               	addwf	?___wmul& (0+255),w,b
 28275  005A70  6EF6               	movwf	tblptrl,c
 28276  005A72  0EF1               	movlw	high __npowers_
 28277  005A74  0100               	movlb	0	; () banked
 28278  005A76  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 28279  005A78  6EF7               	movwf	tblptrh,c
 28280  005A7A                     	if	1	;There are 3 active tblptr bytes
 28281  005A7A  6AF8               	clrf	tblptru,c
 28282  005A7C  0E00               	movlw	low (__mediumconst shr (0+16))
 28283  005A7E  22F8               	addwfc	tblptru,f,c
 28284  005A80                     	endif
 28285  005A80  0009               	tblrd		*+
 28286  005A82  CFF5 F099          	movff	tablat,___ftmul@f2
 28287  005A86  0009               	tblrd		*+
 28288  005A88  CFF5 F09A          	movff	tablat,___ftmul@f2+1
 28289  005A8C  000A               	tblrd		*-
 28290  005A8E  CFF5 F09B          	movff	tablat,___ftmul@f2+2
 28291  005A92  0E00               	movlw	0
 28292  005A94  0100               	movlb	0	; () banked
 28293  005A96  6F85               	movwf	(___awdiv@divisor+1)& (0+255),b
 28294  005A98  0E0A               	movlw	10
 28295  005A9A  6F84               	movwf	___awdiv@divisor& (0+255),b
 28296  005A9C  C0AE  F082         	movff	fround@prec,___awdiv@dividend
 28297  005AA0  0100               	movlb	0	; () banked
 28298  005AA2  6B83               	clrf	(___awdiv@dividend+1)& (0+255),b
 28299  005AA4  EC59  F03E         	call	___awdiv	;wreg free
 28300  005AA8  0E09               	movlw	9
 28301  005AAA  0100               	movlb	0	; () banked
 28302  005AAC  2582               	addwf	?___awdiv& (0+255),w,b
 28303  005AAE  0100               	movlb	0	; () banked
 28304  005AB0  6F8A               	movwf	___wmul@multiplier& (0+255),b
 28305  005AB2  0E00               	movlw	0
 28306  005AB4  0100               	movlb	0	; () banked
 28307  005AB6  2183               	addwfc	(?___awdiv+1)& (0+255),w,b
 28308  005AB8  0100               	movlb	0	; () banked
 28309  005ABA  6F8B               	movwf	(___wmul@multiplier+1)& (0+255),b
 28310  005ABC  0E00               	movlw	0
 28311  005ABE  0100               	movlb	0	; () banked
 28312  005AC0  6F8D               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28313  005AC2  0E03               	movlw	3
 28314  005AC4  6F8C               	movwf	___wmul@multiplicand& (0+255),b
 28315  005AC6  EC00  F049         	call	___wmul	;wreg free
 28316  005ACA  0E41               	movlw	low __npowers_
 28317  005ACC  0100               	movlb	0	; () banked
 28318  005ACE  258A               	addwf	?___wmul& (0+255),w,b
 28319  005AD0  6EF6               	movwf	tblptrl,c
 28320  005AD2  0EF1               	movlw	high __npowers_
 28321  005AD4  0100               	movlb	0	; () banked
 28322  005AD6  218B               	addwfc	(?___wmul+1)& (0+255),w,b
 28323  005AD8  6EF7               	movwf	tblptrh,c
 28324  005ADA                     	if	1	;There are 3 active tblptr bytes
 28325  005ADA  6AF8               	clrf	tblptru,c
 28326  005ADC  0E00               	movlw	low (__mediumconst shr (0+16))
 28327  005ADE  22F8               	addwfc	tblptru,f,c
 28328  005AE0                     	endif
 28329  005AE0  0009               	tblrd		*+
 28330  005AE2  CFF5 F096          	movff	tablat,___ftmul@f1
 28331  005AE6  0009               	tblrd		*+
 28332  005AE8  CFF5 F097          	movff	tablat,___ftmul@f1+1
 28333  005AEC  000A               	tblrd		*-
 28334  005AEE  CFF5 F098          	movff	tablat,___ftmul@f1+2
 28335  005AF2  EC55  F037         	call	___ftmul	;wreg free
 28336  005AF6  C096  F0AB         	movff	?___ftmul,_fround$3807
 28337  005AFA  C097  F0AC         	movff	?___ftmul+1,_fround$3807+1
 28338  005AFE  C098  F0AD         	movff	?___ftmul+2,_fround$3807+2
 28339                           
 28340                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 28341  005B02  C0AB  F096         	movff	_fround$3807,___ftmul@f1
 28342  005B06  C0AC  F097         	movff	_fround$3807+1,___ftmul@f1+1
 28343  005B0A  C0AD  F098         	movff	_fround$3807+2,___ftmul@f1+2
 28344  005B0E  0E00               	movlw	0
 28345  005B10  0100               	movlb	0	; () banked
 28346  005B12  6F99               	movwf	___ftmul@f2& (0+255),b
 28347  005B14  0E00               	movlw	0
 28348  005B16  0100               	movlb	0	; () banked
 28349  005B18  6F9A               	movwf	(___ftmul@f2+1)& (0+255),b
 28350  005B1A  0E3F               	movlw	63
 28351  005B1C  0100               	movlb	0	; () banked
 28352  005B1E  6F9B               	movwf	(___ftmul@f2+2)& (0+255),b
 28353  005B20  EC55  F037         	call	___ftmul	;wreg free
 28354  005B24  D780               	goto	L23
 28355  005B26  0012               	return	
 28356  005B28  D000               	goto	l12890
 28357  005B2A                     l12890:
 28358                           
 28359                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 28360  005B2A  0100               	movlb	0	; () banked
 28361  005B2C  51AE               	movf	fround@prec& (0+255),w,b
 28362  005B2E  0D03               	mullw	3
 28363  005B30  0E41               	movlw	low __npowers_
 28364  005B32  24F3               	addwf	prodl,w,c
 28365  005B34  6EF6               	movwf	tblptrl,c
 28366  005B36  0EF1               	movlw	high __npowers_
 28367  005B38  20F4               	addwfc	prodh,w,c
 28368  005B3A  6EF7               	movwf	tblptrh,c
 28369  005B3C                     	if	1	;There are 3 active tblptr bytes
 28370  005B3C  6AF8               	clrf	tblptru,c
 28371  005B3E  0E00               	movlw	low (__mediumconst shr (0+16))
 28372  005B40  22F8               	addwfc	tblptru,f,c
 28373  005B42                     	endif
 28374  005B42  0009               	tblrd		*+
 28375  005B44  CFF5 F096          	movff	tablat,___ftmul@f1
 28376  005B48  0009               	tblrd		*+
 28377  005B4A  CFF5 F097          	movff	tablat,___ftmul@f1+1
 28378  005B4E  000A               	tblrd		*-
 28379  005B50  CFF5 F098          	movff	tablat,___ftmul@f1+2
 28380  005B54  0E00               	movlw	0
 28381  005B56  0100               	movlb	0	; () banked
 28382  005B58  6F99               	movwf	___ftmul@f2& (0+255),b
 28383  005B5A  0E00               	movlw	0
 28384  005B5C  0100               	movlb	0	; () banked
 28385  005B5E  6F9A               	movwf	(___ftmul@f2+1)& (0+255),b
 28386  005B60  0E3F               	movlw	63
 28387  005B62  0100               	movlb	0	; () banked
 28388  005B64  6F9B               	movwf	(___ftmul@f2+2)& (0+255),b
 28389  005B66  EC55  F037         	call	___ftmul	;wreg free
 28390  005B6A  C096  F0A5         	movff	?___ftmul,?_fround
 28391  005B6E  C097  F0A6         	movff	?___ftmul+1,?_fround+1
 28392  005B72  C098  F0A7         	movff	?___ftmul+2,?_fround+2
 28393  005B76  0012               	return	
 28394  005B78  0012               	return		;funcret
 28395  005B7A                     __end_of_fround:
 28396                           	opt stack 0
 28397                           tblptru	equ	0xFF8
 28398                           tblptrh	equ	0xFF7
 28399                           tblptrl	equ	0xFF6
 28400                           tablat	equ	0xFF5
 28401                           prodh	equ	0xFF4
 28402                           prodl	equ	0xFF3
 28403                           intcon	equ	0xFF2
 28404                           intcon2	equ	0xFF1
 28405                           indf0	equ	0xFEF
 28406                           postinc0	equ	0xFEE
 28407                           fsr0h	equ	0xFEA
 28408                           fsr0l	equ	0xFE9
 28409                           wreg	equ	0xFE8
 28410                           indf1	equ	0xFE7
 28411                           postdec1	equ	0xFE5
 28412                           fsr1h	equ	0xFE2
 28413                           fsr1l	equ	0xFE1
 28414                           indf2	equ	0xFDF
 28415                           postinc2	equ	0xFDE
 28416                           postdec2	equ	0xFDD
 28417                           fsr2h	equ	0xFDA
 28418                           fsr2l	equ	0xFD9
 28419                           status	equ	0xFD8
 28420                           
 28421 ;; *************** function ___wmul *****************
 28422 ;; Defined at:
 28423 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 28424 ;; Parameters:    Size  Location     Type
 28425 ;;  multiplier      2   42[BANK0 ] unsigned int 
 28426 ;;  multiplicand    2   44[BANK0 ] unsigned int 
 28427 ;; Auto vars:     Size  Location     Type
 28428 ;;  product         2   46[BANK0 ] unsigned int 
 28429 ;; Return value:  Size  Location     Type
 28430 ;;                  2   42[BANK0 ] unsigned int 
 28431 ;; Registers used:
 28432 ;;		wreg, status,2, status,0, prodl, prodh
 28433 ;; Tracked objects:
 28434 ;;		On entry : 0/0
 28435 ;;		On exit  : 0/0
 28436 ;;		Unchanged: 0/0
 28437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28438 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28439 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28441 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28442 ;;Total ram usage:        6 bytes
 28443 ;; Hardware stack levels used:    1
 28444 ;; Hardware stack levels required when called:    6
 28445 ;; This function calls:
 28446 ;;		Nothing
 28447 ;; This function is called by:
 28448 ;;		_fround
 28449 ;;		_scale
 28450 ;;		_sprintf
 28451 ;; This function uses a non-reentrant model
 28452 ;;
 28453                           
 28454                           	psect	text63
 28455  009200                     __ptext63:
 28456                           	opt stack 0
 28457  009200                     ___wmul:
 28458                           	opt stack 21
 28459                           
 28460                           ;incstack = 0
 28461  009200  0100               	movlb	0	; () banked
 28462  009202  518A               	movf	___wmul@multiplier& (0+255),w,b
 28463  009204  0100               	movlb	0	; () banked
 28464  009206  038C               	mulwf	___wmul@multiplicand& (0+255),b
 28465  009208  CFF3 F08E          	movff	prodl,___wmul@product
 28466  00920C  CFF4 F08F          	movff	prodh,___wmul@product+1
 28467  009210  0100               	movlb	0	; () banked
 28468  009212  518A               	movf	___wmul@multiplier& (0+255),w,b
 28469  009214  0100               	movlb	0	; () banked
 28470  009216  038D               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 28471  009218  50F3               	movf	prodl,w,c
 28472  00921A  0100               	movlb	0	; () banked
 28473  00921C  278F               	addwf	(___wmul@product+1)& (0+255),f,b
 28474  00921E  0100               	movlb	0	; () banked
 28475  009220  518B               	movf	(___wmul@multiplier+1)& (0+255),w,b
 28476  009222  0100               	movlb	0	; () banked
 28477  009224  038C               	mulwf	___wmul@multiplicand& (0+255),b
 28478  009226  50F3               	movf	prodl,w,c
 28479  009228  0100               	movlb	0	; () banked
 28480  00922A  278F               	addwf	(___wmul@product+1)& (0+255),f,b
 28481                           
 28482                           ; BSR set to: 0
 28483  00922C  C08E  F08A         	movff	___wmul@product,?___wmul
 28484  009230  C08F  F08B         	movff	___wmul@product+1,?___wmul+1
 28485  009234  0012               	return	
 28486                           
 28487                           ; BSR set to: 0
 28488                           
 28489                           ; BSR set to: 0
 28490  009236  0012               	return		;funcret
 28491  009238                     __end_of___wmul:
 28492                           	opt stack 0
 28493                           tblptru	equ	0xFF8
 28494                           tblptrh	equ	0xFF7
 28495                           tblptrl	equ	0xFF6
 28496                           tablat	equ	0xFF5
 28497                           prodh	equ	0xFF4
 28498                           prodl	equ	0xFF3
 28499                           intcon	equ	0xFF2
 28500                           intcon2	equ	0xFF1
 28501                           indf0	equ	0xFEF
 28502                           postinc0	equ	0xFEE
 28503                           fsr0h	equ	0xFEA
 28504                           fsr0l	equ	0xFE9
 28505                           wreg	equ	0xFE8
 28506                           indf1	equ	0xFE7
 28507                           postdec1	equ	0xFE5
 28508                           fsr1h	equ	0xFE2
 28509                           fsr1l	equ	0xFE1
 28510                           indf2	equ	0xFDF
 28511                           postinc2	equ	0xFDE
 28512                           postdec2	equ	0xFDD
 28513                           fsr2h	equ	0xFDA
 28514                           fsr2l	equ	0xFD9
 28515                           status	equ	0xFD8
 28516                           
 28517 ;; *************** function ___ftmul *****************
 28518 ;; Defined at:
 28519 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 28520 ;; Parameters:    Size  Location     Type
 28521 ;;  f1              3   54[BANK0 ] float 
 28522 ;;  f2              3   57[BANK0 ] float 
 28523 ;; Auto vars:     Size  Location     Type
 28524 ;;  f3_as_produc    3   64[BANK0 ] unsigned um
 28525 ;;  sign            1   68[BANK0 ] unsigned char 
 28526 ;;  cntr            1   67[BANK0 ] unsigned char 
 28527 ;;  exp             1   63[BANK0 ] unsigned char 
 28528 ;; Return value:  Size  Location     Type
 28529 ;;                  3   54[BANK0 ] float 
 28530 ;; Registers used:
 28531 ;;		wreg, status,2, status,0, cstack
 28532 ;; Tracked objects:
 28533 ;;		On entry : 0/0
 28534 ;;		On exit  : 0/0
 28535 ;;		Unchanged: 0/0
 28536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28537 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28538 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28539 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28540 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28541 ;;Total ram usage:       15 bytes
 28542 ;; Hardware stack levels used:    1
 28543 ;; Hardware stack levels required when called:    7
 28544 ;; This function calls:
 28545 ;;		___ftpack
 28546 ;; This function is called by:
 28547 ;;		_ReadVoltage
 28548 ;;		_fround
 28549 ;;		_scale
 28550 ;;		_sprintf
 28551 ;; This function uses a non-reentrant model
 28552 ;;
 28553                           
 28554                           	psect	text64
 28555  006EAA                     __ptext64:
 28556                           	opt stack 0
 28557  006EAA                     ___ftmul:
 28558                           	opt stack 20
 28559                           
 28560                           ; BSR set to: 0
 28561                           ;incstack = 0
 28562  006EAA  C098  F09C         	movff	___ftmul@f1+2,??___ftmul
 28563  006EAE  0100               	movlb	0	; () banked
 28564  006EB0  6B9D               	clrf	(??___ftmul+1)& (0+255),b
 28565  006EB2  6B9E               	clrf	(??___ftmul+2)& (0+255),b
 28566  006EB4  0100               	movlb	0	; () banked
 28567  006EB6  3597               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 28568  006EB8  0100               	movlb	0	; () banked
 28569  006EBA  379C               	rlcf	??___ftmul& (0+255),f,b
 28570  006EBC  E301               	bnc	u14871
 28571  006EBE  819D               	bsf	(??___ftmul+1)& (0+255),0,b
 28572  006EC0                     u14871:
 28573  006EC0  0100               	movlb	0	; () banked
 28574  006EC2  519C               	movf	??___ftmul& (0+255),w,b
 28575  006EC4  0100               	movlb	0	; () banked
 28576  006EC6  6F9F               	movwf	___ftmul@exp& (0+255),b
 28577  006EC8  0100               	movlb	0	; () banked
 28578  006ECA  519F               	movf	___ftmul@exp& (0+255),w,b
 28579  006ECC  A4D8               	btfss	status,2,c
 28580  006ECE  D00A               	goto	l12602
 28581                           
 28582                           ; BSR set to: 0
 28583  006ED0  0E00               	movlw	0
 28584  006ED2  0100               	movlb	0	; () banked
 28585  006ED4  6F96               	movwf	?___ftmul& (0+255),b
 28586  006ED6  0E00               	movlw	0
 28587  006ED8  0100               	movlb	0	; () banked
 28588  006EDA  6F97               	movwf	(?___ftmul+1)& (0+255),b
 28589  006EDC  0E00               	movlw	0
 28590  006EDE  0100               	movlb	0	; () banked
 28591  006EE0  6F98               	movwf	(?___ftmul+2)& (0+255),b
 28592                           
 28593                           ; BSR set to: 0
 28594  006EE2  0012               	return	
 28595  006EE4                     l12602:
 28596                           
 28597                           ; BSR set to: 0
 28598  006EE4  C09B  F09C         	movff	___ftmul@f2+2,??___ftmul
 28599  006EE8  0100               	movlb	0	; () banked
 28600  006EEA  6B9D               	clrf	(??___ftmul+1)& (0+255),b
 28601  006EEC  6B9E               	clrf	(??___ftmul+2)& (0+255),b
 28602  006EEE  0100               	movlb	0	; () banked
 28603  006EF0  359A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 28604  006EF2  0100               	movlb	0	; () banked
 28605  006EF4  379C               	rlcf	??___ftmul& (0+255),f,b
 28606  006EF6  E301               	bnc	u14891
 28607  006EF8  819D               	bsf	(??___ftmul+1)& (0+255),0,b
 28608  006EFA                     u14891:
 28609  006EFA  0100               	movlb	0	; () banked
 28610  006EFC  519C               	movf	??___ftmul& (0+255),w,b
 28611  006EFE  0100               	movlb	0	; () banked
 28612  006F00  6FA4               	movwf	___ftmul@sign& (0+255),b
 28613  006F02  0100               	movlb	0	; () banked
 28614  006F04  51A4               	movf	___ftmul@sign& (0+255),w,b
 28615  006F06  A4D8               	btfss	status,2,c
 28616  006F08  D00A               	goto	l12608
 28617                           
 28618                           ; BSR set to: 0
 28619  006F0A  0E00               	movlw	0
 28620  006F0C  0100               	movlb	0	; () banked
 28621  006F0E  6F96               	movwf	?___ftmul& (0+255),b
 28622  006F10  0E00               	movlw	0
 28623  006F12  0100               	movlb	0	; () banked
 28624  006F14  6F97               	movwf	(?___ftmul+1)& (0+255),b
 28625  006F16  0E00               	movlw	0
 28626  006F18  0100               	movlb	0	; () banked
 28627  006F1A  6F98               	movwf	(?___ftmul+2)& (0+255),b
 28628                           
 28629                           ; BSR set to: 0
 28630  006F1C  0012               	return	
 28631  006F1E                     l12608:
 28632                           
 28633                           ; BSR set to: 0
 28634  006F1E  0100               	movlb	0	; () banked
 28635  006F20  51A4               	movf	___ftmul@sign& (0+255),w,b
 28636  006F22  0F7B               	addlw	123
 28637  006F24  0100               	movlb	0	; () banked
 28638  006F26  279F               	addwf	___ftmul@exp& (0+255),f,b
 28639                           
 28640                           ; BSR set to: 0
 28641  006F28  C098  F0A4         	movff	___ftmul@f1+2,___ftmul@sign
 28642  006F2C  0100               	movlb	0	; () banked
 28643  006F2E  519B               	movf	(___ftmul@f2+2)& (0+255),w,b
 28644  006F30  0100               	movlb	0	; () banked
 28645  006F32  1BA4               	xorwf	___ftmul@sign& (0+255),f,b
 28646  006F34  0E80               	movlw	128
 28647  006F36  0100               	movlb	0	; () banked
 28648  006F38  17A4               	andwf	___ftmul@sign& (0+255),f,b
 28649                           
 28650                           ; BSR set to: 0
 28651  006F3A  0100               	movlb	0	; () banked
 28652  006F3C  8F97               	bsf	(___ftmul@f1+1)& (0+255),7,b
 28653                           
 28654                           ; BSR set to: 0
 28655  006F3E  0100               	movlb	0	; () banked
 28656  006F40  8F9A               	bsf	(___ftmul@f2+1)& (0+255),7,b
 28657                           
 28658                           ; BSR set to: 0
 28659  006F42  0EFF               	movlw	255
 28660  006F44  0100               	movlb	0	; () banked
 28661  006F46  1799               	andwf	___ftmul@f2& (0+255),f,b
 28662  006F48  0EFF               	movlw	255
 28663  006F4A  0100               	movlb	0	; () banked
 28664  006F4C  179A               	andwf	(___ftmul@f2+1)& (0+255),f,b
 28665  006F4E  0E00               	movlw	0
 28666  006F50  0100               	movlb	0	; () banked
 28667  006F52  179B               	andwf	(___ftmul@f2+2)& (0+255),f,b
 28668                           
 28669                           ; BSR set to: 0
 28670  006F54  0E00               	movlw	0
 28671  006F56  0100               	movlb	0	; () banked
 28672  006F58  6FA0               	movwf	___ftmul@f3_as_product& (0+255),b
 28673  006F5A  0E00               	movlw	0
 28674  006F5C  0100               	movlb	0	; () banked
 28675  006F5E  6FA1               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 28676  006F60  0E00               	movlw	0
 28677  006F62  0100               	movlb	0	; () banked
 28678  006F64  6FA2               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 28679                           
 28680                           ; BSR set to: 0
 28681  006F66  0E07               	movlw	7
 28682  006F68  0100               	movlb	0	; () banked
 28683  006F6A  6FA3               	movwf	___ftmul@cntr& (0+255),b
 28684  006F6C  D000               	goto	l12622
 28685  006F6E                     l12622:
 28686                           
 28687                           ; BSR set to: 0
 28688  006F6E  0100               	movlb	0	; () banked
 28689  006F70  A196               	btfss	___ftmul@f1& (0+255),0,b
 28690  006F72  D00D               	goto	l12626
 28691                           
 28692                           ; BSR set to: 0
 28693  006F74  0100               	movlb	0	; () banked
 28694  006F76  5199               	movf	___ftmul@f2& (0+255),w,b
 28695  006F78  0100               	movlb	0	; () banked
 28696  006F7A  27A0               	addwf	___ftmul@f3_as_product& (0+255),f,b
 28697  006F7C  0100               	movlb	0	; () banked
 28698  006F7E  519A               	movf	(___ftmul@f2+1)& (0+255),w,b
 28699  006F80  0100               	movlb	0	; () banked
 28700  006F82  23A1               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 28701  006F84  0100               	movlb	0	; () banked
 28702  006F86  519B               	movf	(___ftmul@f2+2)& (0+255),w,b
 28703  006F88  0100               	movlb	0	; () banked
 28704  006F8A  23A2               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 28705  006F8C  D000               	goto	l12626
 28706  006F8E                     l12626:
 28707                           
 28708                           ; BSR set to: 0
 28709  006F8E  0100               	movlb	0	; () banked
 28710  006F90  90D8               	bcf	status,0,c
 28711  006F92  3398               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 28712  006F94  3397               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 28713  006F96  3396               	rrcf	___ftmul@f1& (0+255),f,b
 28714  006F98  0100               	movlb	0	; () banked
 28715  006F9A  90D8               	bcf	status,0,c
 28716  006F9C  3799               	rlcf	___ftmul@f2& (0+255),f,b
 28717  006F9E  379A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 28718  006FA0  379B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 28719                           
 28720                           ; BSR set to: 0
 28721  006FA2  0100               	movlb	0	; () banked
 28722  006FA4  2FA3               	decfsz	___ftmul@cntr& (0+255),f,b
 28723  006FA6  D7E3               	goto	l12622
 28724  006FA8  D000               	goto	l12630
 28725  006FAA                     l12630:
 28726                           
 28727                           ; BSR set to: 0
 28728  006FAA  0E09               	movlw	9
 28729  006FAC  0100               	movlb	0	; () banked
 28730  006FAE  6FA3               	movwf	___ftmul@cntr& (0+255),b
 28731  006FB0  D000               	goto	l12632
 28732  006FB2                     l12632:
 28733                           
 28734                           ; BSR set to: 0
 28735  006FB2  0100               	movlb	0	; () banked
 28736  006FB4  A196               	btfss	___ftmul@f1& (0+255),0,b
 28737  006FB6  D00D               	goto	l12636
 28738                           
 28739                           ; BSR set to: 0
 28740  006FB8  0100               	movlb	0	; () banked
 28741  006FBA  5199               	movf	___ftmul@f2& (0+255),w,b
 28742  006FBC  0100               	movlb	0	; () banked
 28743  006FBE  27A0               	addwf	___ftmul@f3_as_product& (0+255),f,b
 28744  006FC0  0100               	movlb	0	; () banked
 28745  006FC2  519A               	movf	(___ftmul@f2+1)& (0+255),w,b
 28746  006FC4  0100               	movlb	0	; () banked
 28747  006FC6  23A1               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 28748  006FC8  0100               	movlb	0	; () banked
 28749  006FCA  519B               	movf	(___ftmul@f2+2)& (0+255),w,b
 28750  006FCC  0100               	movlb	0	; () banked
 28751  006FCE  23A2               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 28752  006FD0  D000               	goto	l12636
 28753  006FD2                     l12636:
 28754                           
 28755                           ; BSR set to: 0
 28756  006FD2  0100               	movlb	0	; () banked
 28757  006FD4  90D8               	bcf	status,0,c
 28758  006FD6  3398               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 28759  006FD8  3397               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 28760  006FDA  3396               	rrcf	___ftmul@f1& (0+255),f,b
 28761  006FDC  0100               	movlb	0	; () banked
 28762  006FDE  90D8               	bcf	status,0,c
 28763  006FE0  33A2               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 28764  006FE2  33A1               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 28765  006FE4  33A0               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 28766                           
 28767                           ; BSR set to: 0
 28768  006FE6  0100               	movlb	0	; () banked
 28769  006FE8  2FA3               	decfsz	___ftmul@cntr& (0+255),f,b
 28770  006FEA  D7E3               	goto	l12632
 28771  006FEC  D000               	goto	l12640
 28772  006FEE                     l12640:
 28773                           
 28774                           ; BSR set to: 0
 28775  006FEE  C0A0  F07C         	movff	___ftmul@f3_as_product,___ftpack@arg
 28776  006FF2  C0A1  F07D         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 28777  006FF6  C0A2  F07E         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 28778  006FFA  C09F  F07F         	movff	___ftmul@exp,___ftpack@exp
 28779  006FFE  C0A4  F080         	movff	___ftmul@sign,___ftpack@sign
 28780  007002  EC2B  F03B         	call	___ftpack	;wreg free
 28781  007006  C07C  F096         	movff	?___ftpack,?___ftmul
 28782  00700A  C07D  F097         	movff	?___ftpack+1,?___ftmul+1
 28783  00700E  C07E  F098         	movff	?___ftpack+2,?___ftmul+2
 28784  007012  0012               	return	
 28785  007014  0012               	return		;funcret
 28786  007016                     __end_of___ftmul:
 28787                           	opt stack 0
 28788                           tblptru	equ	0xFF8
 28789                           tblptrh	equ	0xFF7
 28790                           tblptrl	equ	0xFF6
 28791                           tablat	equ	0xFF5
 28792                           prodh	equ	0xFF4
 28793                           prodl	equ	0xFF3
 28794                           intcon	equ	0xFF2
 28795                           intcon2	equ	0xFF1
 28796                           indf0	equ	0xFEF
 28797                           postinc0	equ	0xFEE
 28798                           fsr0h	equ	0xFEA
 28799                           fsr0l	equ	0xFE9
 28800                           wreg	equ	0xFE8
 28801                           indf1	equ	0xFE7
 28802                           postdec1	equ	0xFE5
 28803                           fsr1h	equ	0xFE2
 28804                           fsr1l	equ	0xFE1
 28805                           indf2	equ	0xFDF
 28806                           postinc2	equ	0xFDE
 28807                           postdec2	equ	0xFDD
 28808                           fsr2h	equ	0xFDA
 28809                           fsr2l	equ	0xFD9
 28810                           status	equ	0xFD8
 28811                           
 28812 ;; *************** function ___awmod *****************
 28813 ;; Defined at:
 28814 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 28815 ;; Parameters:    Size  Location     Type
 28816 ;;  dividend        2   28[BANK0 ] int 
 28817 ;;  divisor         2   30[BANK0 ] int 
 28818 ;; Auto vars:     Size  Location     Type
 28819 ;;  sign            1   33[BANK0 ] unsigned char 
 28820 ;;  counter         1   32[BANK0 ] unsigned char 
 28821 ;; Return value:  Size  Location     Type
 28822 ;;                  2   28[BANK0 ] int 
 28823 ;; Registers used:
 28824 ;;		wreg, status,2, status,0
 28825 ;; Tracked objects:
 28826 ;;		On entry : 0/0
 28827 ;;		On exit  : 0/0
 28828 ;;		Unchanged: 0/0
 28829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28830 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28831 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28833 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28834 ;;Total ram usage:        6 bytes
 28835 ;; Hardware stack levels used:    1
 28836 ;; Hardware stack levels required when called:    6
 28837 ;; This function calls:
 28838 ;;		Nothing
 28839 ;; This function is called by:
 28840 ;;		_fround
 28841 ;;		_scale
 28842 ;; This function uses a non-reentrant model
 28843 ;;
 28844                           
 28845                           	psect	text65
 28846  00820C                     __ptext65:
 28847                           	opt stack 0
 28848  00820C                     ___awmod:
 28849                           	opt stack 21
 28850                           
 28851                           ;incstack = 0
 28852  00820C  0E00               	movlw	0
 28853  00820E  0100               	movlb	0	; () banked
 28854  008210  6F81               	movwf	___awmod@sign& (0+255),b
 28855                           
 28856                           ; BSR set to: 0
 28857  008212  0100               	movlb	0	; () banked
 28858  008214  AF7D               	btfss	(___awmod@dividend+1)& (0+255),7,b
 28859  008216  D009               	goto	l12696
 28860                           
 28861                           ; BSR set to: 0
 28862  008218  0100               	movlb	0	; () banked
 28863  00821A  6D7C               	negf	___awmod@dividend& (0+255),b
 28864  00821C  1F7D               	comf	(___awmod@dividend+1)& (0+255),f,b
 28865  00821E  B0D8               	btfsc	status,0,c
 28866  008220  2B7D               	incf	(___awmod@dividend+1)& (0+255),f,b
 28867                           
 28868                           ; BSR set to: 0
 28869  008222  0E01               	movlw	1
 28870  008224  0100               	movlb	0	; () banked
 28871  008226  6F81               	movwf	___awmod@sign& (0+255),b
 28872  008228  D000               	goto	l12696
 28873  00822A                     l12696:
 28874                           
 28875                           ; BSR set to: 0
 28876  00822A  0100               	movlb	0	; () banked
 28877  00822C  AF7F               	btfss	(___awmod@divisor+1)& (0+255),7,b
 28878  00822E  D006               	goto	l12700
 28879                           
 28880                           ; BSR set to: 0
 28881  008230  0100               	movlb	0	; () banked
 28882  008232  6D7E               	negf	___awmod@divisor& (0+255),b
 28883  008234  1F7F               	comf	(___awmod@divisor+1)& (0+255),f,b
 28884  008236  B0D8               	btfsc	status,0,c
 28885  008238  2B7F               	incf	(___awmod@divisor+1)& (0+255),f,b
 28886  00823A  D000               	goto	l12700
 28887  00823C                     l12700:
 28888                           
 28889                           ; BSR set to: 0
 28890  00823C  0100               	movlb	0	; () banked
 28891  00823E  517E               	movf	___awmod@divisor& (0+255),w,b
 28892  008240  0100               	movlb	0	; () banked
 28893  008242  117F               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 28894  008244  B4D8               	btfsc	status,2,c
 28895  008246  D02B               	goto	l12716
 28896                           
 28897                           ; BSR set to: 0
 28898  008248  0E01               	movlw	1
 28899  00824A  0100               	movlb	0	; () banked
 28900  00824C  6F80               	movwf	___awmod@counter& (0+255),b
 28901  00824E  D007               	goto	l12706
 28902  008250                     l12704:
 28903                           
 28904                           ; BSR set to: 0
 28905  008250  0100               	movlb	0	; () banked
 28906  008252  90D8               	bcf	status,0,c
 28907  008254  377E               	rlcf	___awmod@divisor& (0+255),f,b
 28908  008256  377F               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 28909  008258  0100               	movlb	0	; () banked
 28910  00825A  2B80               	incf	___awmod@counter& (0+255),f,b
 28911  00825C  D000               	goto	l12706
 28912  00825E                     l12706:
 28913                           
 28914                           ; BSR set to: 0
 28915  00825E  0100               	movlb	0	; () banked
 28916  008260  BF7F               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 28917  008262  D002               	goto	l12708
 28918  008264  D7F5               	goto	l12704
 28919                           
 28920                           ; BSR set to: 0
 28921  008266  D000               	goto	l12708
 28922  008268                     l12708:
 28923                           
 28924                           ; BSR set to: 0
 28925  008268  0100               	movlb	0	; () banked
 28926  00826A  517E               	movf	___awmod@divisor& (0+255),w,b
 28927  00826C  0100               	movlb	0	; () banked
 28928  00826E  5D7C               	subwf	___awmod@dividend& (0+255),w,b
 28929  008270  0100               	movlb	0	; () banked
 28930  008272  517F               	movf	(___awmod@divisor+1)& (0+255),w,b
 28931  008274  0100               	movlb	0	; () banked
 28932  008276  597D               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 28933  008278  A0D8               	btfss	status,0,c
 28934  00827A  D009               	goto	l12712
 28935                           
 28936                           ; BSR set to: 0
 28937  00827C  0100               	movlb	0	; () banked
 28938  00827E  517E               	movf	___awmod@divisor& (0+255),w,b
 28939  008280  0100               	movlb	0	; () banked
 28940  008282  5F7C               	subwf	___awmod@dividend& (0+255),f,b
 28941  008284  0100               	movlb	0	; () banked
 28942  008286  517F               	movf	(___awmod@divisor+1)& (0+255),w,b
 28943  008288  0100               	movlb	0	; () banked
 28944  00828A  5B7D               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 28945  00828C  D000               	goto	l12712
 28946  00828E                     l12712:
 28947                           
 28948                           ; BSR set to: 0
 28949  00828E  0100               	movlb	0	; () banked
 28950  008290  90D8               	bcf	status,0,c
 28951  008292  337F               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 28952  008294  337E               	rrcf	___awmod@divisor& (0+255),f,b
 28953                           
 28954                           ; BSR set to: 0
 28955  008296  0100               	movlb	0	; () banked
 28956  008298  2F80               	decfsz	___awmod@counter& (0+255),f,b
 28957  00829A  D7E6               	goto	l12708
 28958                           
 28959                           ; BSR set to: 0
 28960  00829C  D000               	goto	l12716
 28961  00829E                     l12716:
 28962                           
 28963                           ; BSR set to: 0
 28964  00829E  0100               	movlb	0	; () banked
 28965  0082A0  5181               	movf	___awmod@sign& (0+255),w,b
 28966  0082A2  0100               	movlb	0	; () banked
 28967  0082A4  B4D8               	btfsc	status,2,c
 28968  0082A6  D006               	goto	l12720
 28969                           
 28970                           ; BSR set to: 0
 28971  0082A8  0100               	movlb	0	; () banked
 28972  0082AA  6D7C               	negf	___awmod@dividend& (0+255),b
 28973  0082AC  1F7D               	comf	(___awmod@dividend+1)& (0+255),f,b
 28974  0082AE  B0D8               	btfsc	status,0,c
 28975  0082B0  2B7D               	incf	(___awmod@dividend+1)& (0+255),f,b
 28976  0082B2  D000               	goto	l12720
 28977  0082B4                     l12720:
 28978                           
 28979                           ; BSR set to: 0
 28980  0082B4  C07C  F07C         	movff	___awmod@dividend,?___awmod
 28981  0082B8  C07D  F07D         	movff	___awmod@dividend+1,?___awmod+1
 28982  0082BC  0012               	return	
 28983                           
 28984                           ; BSR set to: 0
 28985                           
 28986                           ; BSR set to: 0
 28987  0082BE  0012               	return		;funcret
 28988  0082C0                     __end_of___awmod:
 28989                           	opt stack 0
 28990                           tblptru	equ	0xFF8
 28991                           tblptrh	equ	0xFF7
 28992                           tblptrl	equ	0xFF6
 28993                           tablat	equ	0xFF5
 28994                           prodh	equ	0xFF4
 28995                           prodl	equ	0xFF3
 28996                           intcon	equ	0xFF2
 28997                           intcon2	equ	0xFF1
 28998                           indf0	equ	0xFEF
 28999                           postinc0	equ	0xFEE
 29000                           fsr0h	equ	0xFEA
 29001                           fsr0l	equ	0xFE9
 29002                           wreg	equ	0xFE8
 29003                           indf1	equ	0xFE7
 29004                           postdec1	equ	0xFE5
 29005                           fsr1h	equ	0xFE2
 29006                           fsr1l	equ	0xFE1
 29007                           indf2	equ	0xFDF
 29008                           postinc2	equ	0xFDE
 29009                           postdec2	equ	0xFDD
 29010                           fsr2h	equ	0xFDA
 29011                           fsr2l	equ	0xFD9
 29012                           status	equ	0xFD8
 29013                           
 29014 ;; *************** function ___awdiv *****************
 29015 ;; Defined at:
 29016 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 29017 ;; Parameters:    Size  Location     Type
 29018 ;;  dividend        2   34[BANK0 ] int 
 29019 ;;  divisor         2   36[BANK0 ] int 
 29020 ;; Auto vars:     Size  Location     Type
 29021 ;;  quotient        2   40[BANK0 ] int 
 29022 ;;  sign            1   39[BANK0 ] unsigned char 
 29023 ;;  counter         1   38[BANK0 ] unsigned char 
 29024 ;; Return value:  Size  Location     Type
 29025 ;;                  2   34[BANK0 ] int 
 29026 ;; Registers used:
 29027 ;;		wreg, status,2, status,0
 29028 ;; Tracked objects:
 29029 ;;		On entry : 0/0
 29030 ;;		On exit  : 0/0
 29031 ;;		Unchanged: 0/0
 29032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29033 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29034 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29036 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29037 ;;Total ram usage:        8 bytes
 29038 ;; Hardware stack levels used:    1
 29039 ;; Hardware stack levels required when called:    6
 29040 ;; This function calls:
 29041 ;;		Nothing
 29042 ;; This function is called by:
 29043 ;;		_fround
 29044 ;;		_scale
 29045 ;;		_sprintf
 29046 ;; This function uses a non-reentrant model
 29047 ;;
 29048                           
 29049                           	psect	text66
 29050  007CB2                     __ptext66:
 29051                           	opt stack 0
 29052  007CB2                     ___awdiv:
 29053                           	opt stack 21
 29054                           
 29055                           ; BSR set to: 0
 29056                           ;incstack = 0
 29057  007CB2  0E00               	movlw	0
 29058  007CB4  0100               	movlb	0	; () banked
 29059  007CB6  6F87               	movwf	___awdiv@sign& (0+255),b
 29060                           
 29061                           ; BSR set to: 0
 29062  007CB8  0100               	movlb	0	; () banked
 29063  007CBA  AF85               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 29064  007CBC  D009               	goto	l12652
 29065                           
 29066                           ; BSR set to: 0
 29067  007CBE  0100               	movlb	0	; () banked
 29068  007CC0  6D84               	negf	___awdiv@divisor& (0+255),b
 29069  007CC2  1F85               	comf	(___awdiv@divisor+1)& (0+255),f,b
 29070  007CC4  B0D8               	btfsc	status,0,c
 29071  007CC6  2B85               	incf	(___awdiv@divisor+1)& (0+255),f,b
 29072                           
 29073                           ; BSR set to: 0
 29074  007CC8  0E01               	movlw	1
 29075  007CCA  0100               	movlb	0	; () banked
 29076  007CCC  6F87               	movwf	___awdiv@sign& (0+255),b
 29077  007CCE  D000               	goto	l12652
 29078  007CD0                     l12652:
 29079                           
 29080                           ; BSR set to: 0
 29081  007CD0  0100               	movlb	0	; () banked
 29082  007CD2  AF83               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 29083  007CD4  D009               	goto	l12658
 29084                           
 29085                           ; BSR set to: 0
 29086  007CD6  0100               	movlb	0	; () banked
 29087  007CD8  6D82               	negf	___awdiv@dividend& (0+255),b
 29088  007CDA  1F83               	comf	(___awdiv@dividend+1)& (0+255),f,b
 29089  007CDC  B0D8               	btfsc	status,0,c
 29090  007CDE  2B83               	incf	(___awdiv@dividend+1)& (0+255),f,b
 29091                           
 29092                           ; BSR set to: 0
 29093  007CE0  0E01               	movlw	1
 29094  007CE2  0100               	movlb	0	; () banked
 29095  007CE4  1B87               	xorwf	___awdiv@sign& (0+255),f,b
 29096  007CE6  D000               	goto	l12658
 29097  007CE8                     l12658:
 29098                           
 29099                           ; BSR set to: 0
 29100  007CE8  0E00               	movlw	0
 29101  007CEA  0100               	movlb	0	; () banked
 29102  007CEC  6F89               	movwf	(___awdiv@quotient+1)& (0+255),b
 29103  007CEE  0E00               	movlw	0
 29104  007CF0  6F88               	movwf	___awdiv@quotient& (0+255),b
 29105                           
 29106                           ; BSR set to: 0
 29107  007CF2  0100               	movlb	0	; () banked
 29108  007CF4  5184               	movf	___awdiv@divisor& (0+255),w,b
 29109  007CF6  0100               	movlb	0	; () banked
 29110  007CF8  1185               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 29111  007CFA  B4D8               	btfsc	status,2,c
 29112  007CFC  D031               	goto	l12680
 29113                           
 29114                           ; BSR set to: 0
 29115  007CFE  0E01               	movlw	1
 29116  007D00  0100               	movlb	0	; () banked
 29117  007D02  6F86               	movwf	___awdiv@counter& (0+255),b
 29118  007D04  D007               	goto	l12666
 29119  007D06                     l12664:
 29120                           
 29121                           ; BSR set to: 0
 29122  007D06  0100               	movlb	0	; () banked
 29123  007D08  90D8               	bcf	status,0,c
 29124  007D0A  3784               	rlcf	___awdiv@divisor& (0+255),f,b
 29125  007D0C  3785               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 29126  007D0E  0100               	movlb	0	; () banked
 29127  007D10  2B86               	incf	___awdiv@counter& (0+255),f,b
 29128  007D12  D000               	goto	l12666
 29129  007D14                     l12666:
 29130                           
 29131                           ; BSR set to: 0
 29132  007D14  0100               	movlb	0	; () banked
 29133  007D16  BF85               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 29134  007D18  D002               	goto	l12668
 29135  007D1A  D7F5               	goto	l12664
 29136                           
 29137                           ; BSR set to: 0
 29138  007D1C  D000               	goto	l12668
 29139  007D1E                     l12668:
 29140                           
 29141                           ; BSR set to: 0
 29142  007D1E  0100               	movlb	0	; () banked
 29143  007D20  90D8               	bcf	status,0,c
 29144  007D22  3788               	rlcf	___awdiv@quotient& (0+255),f,b
 29145  007D24  3789               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 29146                           
 29147                           ; BSR set to: 0
 29148  007D26  0100               	movlb	0	; () banked
 29149  007D28  5184               	movf	___awdiv@divisor& (0+255),w,b
 29150  007D2A  0100               	movlb	0	; () banked
 29151  007D2C  5D82               	subwf	___awdiv@dividend& (0+255),w,b
 29152  007D2E  0100               	movlb	0	; () banked
 29153  007D30  5185               	movf	(___awdiv@divisor+1)& (0+255),w,b
 29154  007D32  0100               	movlb	0	; () banked
 29155  007D34  5983               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 29156  007D36  A0D8               	btfss	status,0,c
 29157  007D38  D00B               	goto	l12676
 29158                           
 29159                           ; BSR set to: 0
 29160  007D3A  0100               	movlb	0	; () banked
 29161  007D3C  5184               	movf	___awdiv@divisor& (0+255),w,b
 29162  007D3E  0100               	movlb	0	; () banked
 29163  007D40  5F82               	subwf	___awdiv@dividend& (0+255),f,b
 29164  007D42  0100               	movlb	0	; () banked
 29165  007D44  5185               	movf	(___awdiv@divisor+1)& (0+255),w,b
 29166  007D46  0100               	movlb	0	; () banked
 29167  007D48  5B83               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 29168                           
 29169                           ; BSR set to: 0
 29170  007D4A  0100               	movlb	0	; () banked
 29171  007D4C  8188               	bsf	___awdiv@quotient& (0+255),0,b
 29172  007D4E  D000               	goto	l12676
 29173  007D50                     l12676:
 29174                           
 29175                           ; BSR set to: 0
 29176  007D50  0100               	movlb	0	; () banked
 29177  007D52  90D8               	bcf	status,0,c
 29178  007D54  3385               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 29179  007D56  3384               	rrcf	___awdiv@divisor& (0+255),f,b
 29180                           
 29181                           ; BSR set to: 0
 29182  007D58  0100               	movlb	0	; () banked
 29183  007D5A  2F86               	decfsz	___awdiv@counter& (0+255),f,b
 29184  007D5C  D7E0               	goto	l12668
 29185                           
 29186                           ; BSR set to: 0
 29187  007D5E  D000               	goto	l12680
 29188  007D60                     l12680:
 29189                           
 29190                           ; BSR set to: 0
 29191  007D60  0100               	movlb	0	; () banked
 29192  007D62  5187               	movf	___awdiv@sign& (0+255),w,b
 29193  007D64  0100               	movlb	0	; () banked
 29194  007D66  B4D8               	btfsc	status,2,c
 29195  007D68  D006               	goto	l12684
 29196                           
 29197                           ; BSR set to: 0
 29198  007D6A  0100               	movlb	0	; () banked
 29199  007D6C  6D88               	negf	___awdiv@quotient& (0+255),b
 29200  007D6E  1F89               	comf	(___awdiv@quotient+1)& (0+255),f,b
 29201  007D70  B0D8               	btfsc	status,0,c
 29202  007D72  2B89               	incf	(___awdiv@quotient+1)& (0+255),f,b
 29203  007D74  D000               	goto	l12684
 29204  007D76                     l12684:
 29205                           
 29206                           ; BSR set to: 0
 29207  007D76  C088  F082         	movff	___awdiv@quotient,?___awdiv
 29208  007D7A  C089  F083         	movff	___awdiv@quotient+1,?___awdiv+1
 29209  007D7E  0012               	return	
 29210                           
 29211                           ; BSR set to: 0
 29212                           
 29213                           ; BSR set to: 0
 29214  007D80  0012               	return		;funcret
 29215  007D82                     __end_of___awdiv:
 29216                           	opt stack 0
 29217                           tblptru	equ	0xFF8
 29218                           tblptrh	equ	0xFF7
 29219                           tblptrl	equ	0xFF6
 29220                           tablat	equ	0xFF5
 29221                           prodh	equ	0xFF4
 29222                           prodl	equ	0xFF3
 29223                           intcon	equ	0xFF2
 29224                           intcon2	equ	0xFF1
 29225                           indf0	equ	0xFEF
 29226                           postinc0	equ	0xFEE
 29227                           fsr0h	equ	0xFEA
 29228                           fsr0l	equ	0xFE9
 29229                           wreg	equ	0xFE8
 29230                           indf1	equ	0xFE7
 29231                           postdec1	equ	0xFE5
 29232                           fsr1h	equ	0xFE2
 29233                           fsr1l	equ	0xFE1
 29234                           indf2	equ	0xFDF
 29235                           postinc2	equ	0xFDE
 29236                           postdec2	equ	0xFDD
 29237                           fsr2h	equ	0xFDA
 29238                           fsr2l	equ	0xFD9
 29239                           status	equ	0xFD8
 29240                           
 29241 ;; *************** function __tdiv_to_l_ *****************
 29242 ;; Defined at:
 29243 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 29244 ;; Parameters:    Size  Location     Type
 29245 ;;  f1              3   28[BANK0 ] float 
 29246 ;;  f2              3   31[BANK0 ] float 
 29247 ;; Auto vars:     Size  Location     Type
 29248 ;;  quot            4   37[BANK0 ] unsigned long 
 29249 ;;  exp1            1   42[BANK0 ] unsigned char 
 29250 ;;  cntr            1   41[BANK0 ] unsigned char 
 29251 ;; Return value:  Size  Location     Type
 29252 ;;                  4   28[BANK0 ] unsigned long 
 29253 ;; Registers used:
 29254 ;;		wreg, status,2, status,0
 29255 ;; Tracked objects:
 29256 ;;		On entry : 0/0
 29257 ;;		On exit  : 0/0
 29258 ;;		Unchanged: 0/0
 29259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29260 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29261 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29262 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29263 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29264 ;;Total ram usage:       15 bytes
 29265 ;; Hardware stack levels used:    1
 29266 ;; Hardware stack levels required when called:    6
 29267 ;; This function calls:
 29268 ;;		Nothing
 29269 ;; This function is called by:
 29270 ;;		_sprintf
 29271 ;; This function uses a non-reentrant model
 29272 ;;
 29273                           
 29274                           	psect	text67
 29275  006872                     __ptext67:
 29276                           	opt stack 0
 29277  006872                     __tdiv_to_l_:
 29278                           	opt stack 22
 29279                           
 29280                           ; BSR set to: 0
 29281                           ;incstack = 0
 29282  006872  C07E  F082         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 29283  006876  0100               	movlb	0	; () banked
 29284  006878  6B83               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 29285  00687A  6B84               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 29286  00687C  0100               	movlb	0	; () banked
 29287  00687E  357D               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 29288  006880  0100               	movlb	0	; () banked
 29289  006882  3782               	rlcf	??__tdiv_to_l_& (0+255),f,b
 29290  006884  E301               	bnc	u15461
 29291  006886  8183               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 29292  006888                     u15461:
 29293  006888  0100               	movlb	0	; () banked
 29294  00688A  5182               	movf	??__tdiv_to_l_& (0+255),w,b
 29295  00688C  0100               	movlb	0	; () banked
 29296  00688E  6F8A               	movwf	__tdiv_to_l_@exp1& (0+255),b
 29297  006890  0100               	movlb	0	; () banked
 29298  006892  518A               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29299  006894  A4D8               	btfss	status,2,c
 29300  006896  D00A               	goto	l12950
 29301                           
 29302                           ; BSR set to: 0
 29303  006898  0E00               	movlw	0
 29304  00689A  0100               	movlb	0	; () banked
 29305  00689C  6F7C               	movwf	?__tdiv_to_l_& (0+255),b
 29306  00689E  0E00               	movlw	0
 29307  0068A0  6F7D               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29308  0068A2  0E00               	movlw	0
 29309  0068A4  6F7E               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29310  0068A6  0E00               	movlw	0
 29311  0068A8  6F7F               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29312                           
 29313                           ; BSR set to: 0
 29314  0068AA  0012               	return	
 29315  0068AC                     l12950:
 29316                           
 29317                           ; BSR set to: 0
 29318  0068AC  C081  F082         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 29319  0068B0  0100               	movlb	0	; () banked
 29320  0068B2  6B83               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 29321  0068B4  6B84               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 29322  0068B6  0100               	movlb	0	; () banked
 29323  0068B8  3580               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29324  0068BA  0100               	movlb	0	; () banked
 29325  0068BC  3782               	rlcf	??__tdiv_to_l_& (0+255),f,b
 29326  0068BE  E301               	bnc	u15481
 29327  0068C0  8183               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 29328  0068C2                     u15481:
 29329  0068C2  0100               	movlb	0	; () banked
 29330  0068C4  5182               	movf	??__tdiv_to_l_& (0+255),w,b
 29331  0068C6  0100               	movlb	0	; () banked
 29332  0068C8  6F89               	movwf	__tdiv_to_l_@cntr& (0+255),b
 29333  0068CA  0100               	movlb	0	; () banked
 29334  0068CC  5189               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 29335  0068CE  A4D8               	btfss	status,2,c
 29336  0068D0  D00A               	goto	l12956
 29337                           
 29338                           ; BSR set to: 0
 29339  0068D2  0E00               	movlw	0
 29340  0068D4  0100               	movlb	0	; () banked
 29341  0068D6  6F7C               	movwf	?__tdiv_to_l_& (0+255),b
 29342  0068D8  0E00               	movlw	0
 29343  0068DA  6F7D               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29344  0068DC  0E00               	movlw	0
 29345  0068DE  6F7E               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29346  0068E0  0E00               	movlw	0
 29347  0068E2  6F7F               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29348                           
 29349                           ; BSR set to: 0
 29350  0068E4  0012               	return	
 29351  0068E6                     l12956:
 29352                           
 29353                           ; BSR set to: 0
 29354  0068E6  0100               	movlb	0	; () banked
 29355  0068E8  8F7D               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 29356                           
 29357                           ; BSR set to: 0
 29358  0068EA  0EFF               	movlw	255
 29359  0068EC  0100               	movlb	0	; () banked
 29360  0068EE  177C               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 29361  0068F0  0EFF               	movlw	255
 29362  0068F2  0100               	movlb	0	; () banked
 29363  0068F4  177D               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29364  0068F6  0E00               	movlw	0
 29365  0068F8  0100               	movlb	0	; () banked
 29366  0068FA  177E               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29367  0068FC  0100               	movlb	0	; () banked
 29368  0068FE  8F80               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 29369                           
 29370                           ; BSR set to: 0
 29371  006900  0EFF               	movlw	255
 29372  006902  0100               	movlb	0	; () banked
 29373  006904  177F               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 29374  006906  0EFF               	movlw	255
 29375  006908  0100               	movlb	0	; () banked
 29376  00690A  1780               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 29377  00690C  0E00               	movlw	0
 29378  00690E  0100               	movlb	0	; () banked
 29379  006910  1781               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 29380                           
 29381                           ; BSR set to: 0
 29382  006912  0E00               	movlw	0
 29383  006914  0100               	movlb	0	; () banked
 29384  006916  6F85               	movwf	__tdiv_to_l_@quot& (0+255),b
 29385  006918  0E00               	movlw	0
 29386  00691A  6F86               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 29387  00691C  0E00               	movlw	0
 29388  00691E  6F87               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 29389  006920  0E00               	movlw	0
 29390  006922  6F88               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 29391                           
 29392                           ; BSR set to: 0
 29393  006924  0E7F               	movlw	127
 29394  006926  0100               	movlb	0	; () banked
 29395  006928  5F8A               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 29396                           
 29397                           ; BSR set to: 0
 29398  00692A  0100               	movlb	0	; () banked
 29399  00692C  5189               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 29400  00692E  0F98               	addlw	152
 29401  006930  0100               	movlb	0	; () banked
 29402  006932  5F8A               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 29403                           
 29404                           ; BSR set to: 0
 29405  006934  0E18               	movlw	24
 29406  006936  0100               	movlb	0	; () banked
 29407  006938  6F89               	movwf	__tdiv_to_l_@cntr& (0+255),b
 29408  00693A                     l2737:
 29409                           
 29410                           ; BSR set to: 0
 29411  00693A  0100               	movlb	0	; () banked
 29412  00693C  90D8               	bcf	status,0,c
 29413  00693E  3785               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29414  006940  3786               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29415  006942  3787               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29416  006944  3788               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29417                           
 29418                           ; BSR set to: 0
 29419  006946  0100               	movlb	0	; () banked
 29420  006948  517F               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29421  00694A  0100               	movlb	0	; () banked
 29422  00694C  5D7C               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 29423  00694E  0100               	movlb	0	; () banked
 29424  006950  5180               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29425  006952  0100               	movlb	0	; () banked
 29426  006954  597D               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 29427  006956  0100               	movlb	0	; () banked
 29428  006958  5181               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29429  00695A  0100               	movlb	0	; () banked
 29430  00695C  597E               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 29431  00695E  A0D8               	btfss	status,0,c
 29432  006960  D00E               	goto	l2738
 29433                           
 29434                           ; BSR set to: 0
 29435  006962  0100               	movlb	0	; () banked
 29436  006964  517F               	movf	__tdiv_to_l_@f2& (0+255),w,b
 29437  006966  0100               	movlb	0	; () banked
 29438  006968  5F7C               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 29439  00696A  0100               	movlb	0	; () banked
 29440  00696C  5180               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 29441  00696E  0100               	movlb	0	; () banked
 29442  006970  5B7D               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29443  006972  0100               	movlb	0	; () banked
 29444  006974  5181               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 29445  006976  0100               	movlb	0	; () banked
 29446  006978  5B7E               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29447                           
 29448                           ; BSR set to: 0
 29449  00697A  0100               	movlb	0	; () banked
 29450  00697C  8185               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 29451  00697E                     l2738:
 29452                           
 29453                           ; BSR set to: 0
 29454  00697E  0100               	movlb	0	; () banked
 29455  006980  90D8               	bcf	status,0,c
 29456  006982  377C               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 29457  006984  377D               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 29458  006986  377E               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 29459                           
 29460                           ; BSR set to: 0
 29461  006988  0100               	movlb	0	; () banked
 29462  00698A  2F89               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 29463  00698C  D7D6               	goto	l2737
 29464  00698E  D000               	goto	l12978
 29465  006990                     l12978:
 29466                           
 29467                           ; BSR set to: 0
 29468  006990  0100               	movlb	0	; () banked
 29469  006992  AF8A               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 29470  006994  D01B               	goto	l12990
 29471                           
 29472                           ; BSR set to: 0
 29473  006996  0100               	movlb	0	; () banked
 29474  006998  518A               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29475  00699A  0A80               	xorlw	128
 29476  00699C  0F97               	addlw	151
 29477  00699E  B0D8               	btfsc	status,0,c
 29478  0069A0  D00B               	goto	l12986
 29479                           
 29480                           ; BSR set to: 0
 29481  0069A2  0E00               	movlw	0
 29482  0069A4  0100               	movlb	0	; () banked
 29483  0069A6  6F7C               	movwf	?__tdiv_to_l_& (0+255),b
 29484  0069A8  0E00               	movlw	0
 29485  0069AA  6F7D               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29486  0069AC  0E00               	movlw	0
 29487  0069AE  6F7E               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29488  0069B0  0E00               	movlw	0
 29489  0069B2  6F7F               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29490                           
 29491                           ; BSR set to: 0
 29492  0069B4  0012               	return	
 29493                           
 29494                           ; BSR set to: 0
 29495  0069B6  D000               	goto	l12986
 29496  0069B8                     l12986:
 29497                           
 29498                           ; BSR set to: 0
 29499  0069B8  0100               	movlb	0	; () banked
 29500  0069BA  90D8               	bcf	status,0,c
 29501  0069BC  3388               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29502  0069BE  3387               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29503  0069C0  3386               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29504  0069C2  3385               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 29505                           
 29506                           ; BSR set to: 0
 29507  0069C4  0100               	movlb	0	; () banked
 29508  0069C6  3F8A               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 29509  0069C8  D7F7               	goto	l12986
 29510                           
 29511                           ; BSR set to: 0
 29512  0069CA  D01D               	goto	l2744
 29513  0069CC                     l12990:
 29514                           
 29515                           ; BSR set to: 0
 29516  0069CC  0E17               	movlw	23
 29517  0069CE  0100               	movlb	0	; () banked
 29518  0069D0  658A               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 29519  0069D2  D014               	goto	l12998
 29520                           
 29521                           ; BSR set to: 0
 29522  0069D4  0E00               	movlw	0
 29523  0069D6  0100               	movlb	0	; () banked
 29524  0069D8  6F7C               	movwf	?__tdiv_to_l_& (0+255),b
 29525  0069DA  0E00               	movlw	0
 29526  0069DC  6F7D               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 29527  0069DE  0E00               	movlw	0
 29528  0069E0  6F7E               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 29529  0069E2  0E00               	movlw	0
 29530  0069E4  6F7F               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 29531                           
 29532                           ; BSR set to: 0
 29533  0069E6  0012               	return	
 29534                           
 29535                           ; BSR set to: 0
 29536  0069E8  D009               	goto	l12998
 29537  0069EA                     l12996:
 29538                           
 29539                           ; BSR set to: 0
 29540  0069EA  0100               	movlb	0	; () banked
 29541  0069EC  90D8               	bcf	status,0,c
 29542  0069EE  3785               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 29543  0069F0  3786               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 29544  0069F2  3787               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 29545  0069F4  3788               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 29546  0069F6  0100               	movlb	0	; () banked
 29547  0069F8  078A               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 29548  0069FA  D000               	goto	l12998
 29549  0069FC                     l12998:
 29550                           
 29551                           ; BSR set to: 0
 29552  0069FC  0100               	movlb	0	; () banked
 29553  0069FE  518A               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 29554  006A00  0100               	movlb	0	; () banked
 29555  006A02  A4D8               	btfss	status,2,c
 29556  006A04  D7F2               	goto	l12996
 29557  006A06                     l2744:
 29558                           
 29559                           ; BSR set to: 0
 29560  006A06  C085  F07C         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 29561  006A0A  C086  F07D         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 29562  006A0E  C087  F07E         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 29563  006A12  C088  F07F         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 29564                           
 29565                           ; BSR set to: 0
 29566  006A16  0012               	return		;funcret
 29567  006A18                     __end_of__tdiv_to_l_:
 29568                           	opt stack 0
 29569                           tblptru	equ	0xFF8
 29570                           tblptrh	equ	0xFF7
 29571                           tblptrl	equ	0xFF6
 29572                           tablat	equ	0xFF5
 29573                           prodh	equ	0xFF4
 29574                           prodl	equ	0xFF3
 29575                           intcon	equ	0xFF2
 29576                           intcon2	equ	0xFF1
 29577                           indf0	equ	0xFEF
 29578                           postinc0	equ	0xFEE
 29579                           fsr0h	equ	0xFEA
 29580                           fsr0l	equ	0xFE9
 29581                           wreg	equ	0xFE8
 29582                           indf1	equ	0xFE7
 29583                           postdec1	equ	0xFE5
 29584                           fsr1h	equ	0xFE2
 29585                           fsr1l	equ	0xFE1
 29586                           indf2	equ	0xFDF
 29587                           postinc2	equ	0xFDE
 29588                           postdec2	equ	0xFDD
 29589                           fsr2h	equ	0xFDA
 29590                           fsr2l	equ	0xFD9
 29591                           status	equ	0xFD8
 29592                           
 29593 ;; *************** function __div_to_l_ *****************
 29594 ;; Defined at:
 29595 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 29596 ;; Parameters:    Size  Location     Type
 29597 ;;  f1              3   28[BANK0 ] unsigned long 
 29598 ;;  f2              3   31[BANK0 ] unsigned long 
 29599 ;; Auto vars:     Size  Location     Type
 29600 ;;  quot            4   34[BANK0 ] unsigned long 
 29601 ;;  exp1            1   39[BANK0 ] unsigned char 
 29602 ;;  cntr            1   38[BANK0 ] unsigned char 
 29603 ;; Return value:  Size  Location     Type
 29604 ;;                  4   28[BANK0 ] unsigned long 
 29605 ;; Registers used:
 29606 ;;		wreg, status,2, status,0
 29607 ;; Tracked objects:
 29608 ;;		On entry : 0/0
 29609 ;;		On exit  : 0/0
 29610 ;;		Unchanged: 0/0
 29611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29612 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29613 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29615 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29616 ;;Total ram usage:       12 bytes
 29617 ;; Hardware stack levels used:    1
 29618 ;; Hardware stack levels required when called:    6
 29619 ;; This function calls:
 29620 ;;		Nothing
 29621 ;; This function is called by:
 29622 ;;		_sprintf
 29623 ;; This function uses a non-reentrant model
 29624 ;;
 29625                           
 29626                           	psect	text68
 29627  006A18                     __ptext68:
 29628                           	opt stack 0
 29629  006A18                     __div_to_l_:
 29630                           	opt stack 22
 29631                           
 29632                           ; BSR set to: 0
 29633                           ;incstack = 0
 29634  006A18  0100               	movlb	0	; () banked
 29635  006A1A  357E               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 29636  006A1C  357F               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 29637  006A1E  0100               	movlb	0	; () banked
 29638  006A20  6F87               	movwf	__div_to_l_@exp1& (0+255),b
 29639  006A22  0100               	movlb	0	; () banked
 29640  006A24  5187               	movf	__div_to_l_@exp1& (0+255),w,b
 29641  006A26  A4D8               	btfss	status,2,c
 29642  006A28  D00A               	goto	l13006
 29643                           
 29644                           ; BSR set to: 0
 29645  006A2A  0E00               	movlw	0
 29646  006A2C  0100               	movlb	0	; () banked
 29647  006A2E  6F7C               	movwf	?__div_to_l_& (0+255),b
 29648  006A30  0E00               	movlw	0
 29649  006A32  6F7D               	movwf	(?__div_to_l_+1)& (0+255),b
 29650  006A34  0E00               	movlw	0
 29651  006A36  6F7E               	movwf	(?__div_to_l_+2)& (0+255),b
 29652  006A38  0E00               	movlw	0
 29653  006A3A  6F7F               	movwf	(?__div_to_l_+3)& (0+255),b
 29654                           
 29655                           ; BSR set to: 0
 29656  006A3C  0012               	return	
 29657  006A3E                     l13006:
 29658                           
 29659                           ; BSR set to: 0
 29660  006A3E  0100               	movlb	0	; () banked
 29661  006A40  3581               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 29662  006A42  3582               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 29663  006A44  0100               	movlb	0	; () banked
 29664  006A46  6F86               	movwf	__div_to_l_@cntr& (0+255),b
 29665  006A48  0100               	movlb	0	; () banked
 29666  006A4A  5186               	movf	__div_to_l_@cntr& (0+255),w,b
 29667  006A4C  A4D8               	btfss	status,2,c
 29668  006A4E  D00A               	goto	l13012
 29669                           
 29670                           ; BSR set to: 0
 29671  006A50  0E00               	movlw	0
 29672  006A52  0100               	movlb	0	; () banked
 29673  006A54  6F7C               	movwf	?__div_to_l_& (0+255),b
 29674  006A56  0E00               	movlw	0
 29675  006A58  6F7D               	movwf	(?__div_to_l_+1)& (0+255),b
 29676  006A5A  0E00               	movlw	0
 29677  006A5C  6F7E               	movwf	(?__div_to_l_+2)& (0+255),b
 29678  006A5E  0E00               	movlw	0
 29679  006A60  6F7F               	movwf	(?__div_to_l_+3)& (0+255),b
 29680                           
 29681                           ; BSR set to: 0
 29682  006A62  0012               	return	
 29683  006A64                     l13012:
 29684                           
 29685                           ; BSR set to: 0
 29686  006A64  0100               	movlb	0	; () banked
 29687  006A66  8F7E               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 29688                           
 29689                           ; BSR set to: 0
 29690  006A68  0EFF               	movlw	255
 29691  006A6A  0100               	movlb	0	; () banked
 29692  006A6C  177C               	andwf	__div_to_l_@f1& (0+255),f,b
 29693  006A6E  0EFF               	movlw	255
 29694  006A70  177D               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 29695  006A72  0EFF               	movlw	255
 29696  006A74  177E               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 29697  006A76  0E00               	movlw	0
 29698  006A78  177F               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 29699                           
 29700                           ; BSR set to: 0
 29701  006A7A  0100               	movlb	0	; () banked
 29702  006A7C  8F81               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 29703  006A7E  0EFF               	movlw	255
 29704  006A80  0100               	movlb	0	; () banked
 29705  006A82  177F               	andwf	__div_to_l_@f2& (0+255),f,b
 29706  006A84  0EFF               	movlw	255
 29707  006A86  1780               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 29708  006A88  0EFF               	movlw	255
 29709  006A8A  1781               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 29710  006A8C  0E00               	movlw	0
 29711  006A8E  1782               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 29712                           
 29713                           ; BSR set to: 0
 29714  006A90  0E00               	movlw	0
 29715  006A92  0100               	movlb	0	; () banked
 29716  006A94  6F82               	movwf	__div_to_l_@quot& (0+255),b
 29717  006A96  0E00               	movlw	0
 29718  006A98  6F83               	movwf	(__div_to_l_@quot+1)& (0+255),b
 29719  006A9A  0E00               	movlw	0
 29720  006A9C  6F84               	movwf	(__div_to_l_@quot+2)& (0+255),b
 29721  006A9E  0E00               	movlw	0
 29722  006AA0  6F85               	movwf	(__div_to_l_@quot+3)& (0+255),b
 29723                           
 29724                           ; BSR set to: 0
 29725  006AA2  0E7F               	movlw	127
 29726  006AA4  0100               	movlb	0	; () banked
 29727  006AA6  5F87               	subwf	__div_to_l_@exp1& (0+255),f,b
 29728                           
 29729                           ; BSR set to: 0
 29730  006AA8  0100               	movlb	0	; () banked
 29731  006AAA  5186               	movf	__div_to_l_@cntr& (0+255),w,b
 29732  006AAC  0FA0               	addlw	160
 29733  006AAE  0100               	movlb	0	; () banked
 29734  006AB0  5F87               	subwf	__div_to_l_@exp1& (0+255),f,b
 29735                           
 29736                           ; BSR set to: 0
 29737  006AB2  0E20               	movlw	32
 29738  006AB4  0100               	movlb	0	; () banked
 29739  006AB6  6F86               	movwf	__div_to_l_@cntr& (0+255),b
 29740  006AB8  D000               	goto	l13026
 29741  006ABA                     l13026:
 29742                           
 29743                           ; BSR set to: 0
 29744  006ABA  0100               	movlb	0	; () banked
 29745  006ABC  90D8               	bcf	status,0,c
 29746  006ABE  3782               	rlcf	__div_to_l_@quot& (0+255),f,b
 29747  006AC0  3783               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29748  006AC2  3784               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29749  006AC4  3785               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29750                           
 29751                           ; BSR set to: 0
 29752  006AC6  0100               	movlb	0	; () banked
 29753  006AC8  517F               	movf	__div_to_l_@f2& (0+255),w,b
 29754  006ACA  0100               	movlb	0	; () banked
 29755  006ACC  5D7C               	subwf	__div_to_l_@f1& (0+255),w,b
 29756  006ACE  0100               	movlb	0	; () banked
 29757  006AD0  5180               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29758  006AD2  0100               	movlb	0	; () banked
 29759  006AD4  597D               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 29760  006AD6  0100               	movlb	0	; () banked
 29761  006AD8  5181               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29762  006ADA  0100               	movlb	0	; () banked
 29763  006ADC  597E               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 29764  006ADE  0100               	movlb	0	; () banked
 29765  006AE0  5182               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29766  006AE2  0100               	movlb	0	; () banked
 29767  006AE4  597F               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 29768  006AE6  A0D8               	btfss	status,0,c
 29769  006AE8  D013               	goto	l13034
 29770                           
 29771                           ; BSR set to: 0
 29772  006AEA  0100               	movlb	0	; () banked
 29773  006AEC  517F               	movf	__div_to_l_@f2& (0+255),w,b
 29774  006AEE  0100               	movlb	0	; () banked
 29775  006AF0  5F7C               	subwf	__div_to_l_@f1& (0+255),f,b
 29776  006AF2  0100               	movlb	0	; () banked
 29777  006AF4  5180               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 29778  006AF6  0100               	movlb	0	; () banked
 29779  006AF8  5B7D               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 29780  006AFA  0100               	movlb	0	; () banked
 29781  006AFC  5181               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 29782  006AFE  0100               	movlb	0	; () banked
 29783  006B00  5B7E               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 29784  006B02  0100               	movlb	0	; () banked
 29785  006B04  5182               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 29786  006B06  0100               	movlb	0	; () banked
 29787  006B08  5B7F               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 29788                           
 29789                           ; BSR set to: 0
 29790  006B0A  0100               	movlb	0	; () banked
 29791  006B0C  8182               	bsf	__div_to_l_@quot& (0+255),0,b
 29792  006B0E  D000               	goto	l13034
 29793  006B10                     l13034:
 29794                           
 29795                           ; BSR set to: 0
 29796  006B10  0100               	movlb	0	; () banked
 29797  006B12  90D8               	bcf	status,0,c
 29798  006B14  377C               	rlcf	__div_to_l_@f1& (0+255),f,b
 29799  006B16  377D               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 29800  006B18  377E               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 29801  006B1A  377F               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 29802                           
 29803                           ; BSR set to: 0
 29804  006B1C  0100               	movlb	0	; () banked
 29805  006B1E  2F86               	decfsz	__div_to_l_@cntr& (0+255),f,b
 29806  006B20  D7CC               	goto	l13026
 29807  006B22  D000               	goto	l13038
 29808  006B24                     l13038:
 29809                           
 29810                           ; BSR set to: 0
 29811  006B24  0100               	movlb	0	; () banked
 29812  006B26  AF87               	btfss	__div_to_l_@exp1& (0+255),7,b
 29813  006B28  D01B               	goto	l13050
 29814                           
 29815                           ; BSR set to: 0
 29816  006B2A  0100               	movlb	0	; () banked
 29817  006B2C  5187               	movf	__div_to_l_@exp1& (0+255),w,b
 29818  006B2E  0A80               	xorlw	128
 29819  006B30  0F9F               	addlw	159
 29820  006B32  B0D8               	btfsc	status,0,c
 29821  006B34  D00B               	goto	l13046
 29822                           
 29823                           ; BSR set to: 0
 29824  006B36  0E00               	movlw	0
 29825  006B38  0100               	movlb	0	; () banked
 29826  006B3A  6F7C               	movwf	?__div_to_l_& (0+255),b
 29827  006B3C  0E00               	movlw	0
 29828  006B3E  6F7D               	movwf	(?__div_to_l_+1)& (0+255),b
 29829  006B40  0E00               	movlw	0
 29830  006B42  6F7E               	movwf	(?__div_to_l_+2)& (0+255),b
 29831  006B44  0E00               	movlw	0
 29832  006B46  6F7F               	movwf	(?__div_to_l_+3)& (0+255),b
 29833                           
 29834                           ; BSR set to: 0
 29835  006B48  0012               	return	
 29836                           
 29837                           ; BSR set to: 0
 29838  006B4A  D000               	goto	l13046
 29839  006B4C                     l13046:
 29840                           
 29841                           ; BSR set to: 0
 29842  006B4C  0100               	movlb	0	; () banked
 29843  006B4E  90D8               	bcf	status,0,c
 29844  006B50  3385               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 29845  006B52  3384               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 29846  006B54  3383               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 29847  006B56  3382               	rrcf	__div_to_l_@quot& (0+255),f,b
 29848                           
 29849                           ; BSR set to: 0
 29850  006B58  0100               	movlb	0	; () banked
 29851  006B5A  3F87               	incfsz	__div_to_l_@exp1& (0+255),f,b
 29852  006B5C  D7F7               	goto	l13046
 29853                           
 29854                           ; BSR set to: 0
 29855  006B5E  D01D               	goto	l2623
 29856  006B60                     l13050:
 29857                           
 29858                           ; BSR set to: 0
 29859  006B60  0E1F               	movlw	31
 29860  006B62  0100               	movlb	0	; () banked
 29861  006B64  6587               	cpfsgt	__div_to_l_@exp1& (0+255),b
 29862  006B66  D014               	goto	l13058
 29863                           
 29864                           ; BSR set to: 0
 29865  006B68  0E00               	movlw	0
 29866  006B6A  0100               	movlb	0	; () banked
 29867  006B6C  6F7C               	movwf	?__div_to_l_& (0+255),b
 29868  006B6E  0E00               	movlw	0
 29869  006B70  6F7D               	movwf	(?__div_to_l_+1)& (0+255),b
 29870  006B72  0E00               	movlw	0
 29871  006B74  6F7E               	movwf	(?__div_to_l_+2)& (0+255),b
 29872  006B76  0E00               	movlw	0
 29873  006B78  6F7F               	movwf	(?__div_to_l_+3)& (0+255),b
 29874                           
 29875                           ; BSR set to: 0
 29876  006B7A  0012               	return	
 29877                           
 29878                           ; BSR set to: 0
 29879  006B7C  D009               	goto	l13058
 29880  006B7E                     l13056:
 29881                           
 29882                           ; BSR set to: 0
 29883  006B7E  0100               	movlb	0	; () banked
 29884  006B80  90D8               	bcf	status,0,c
 29885  006B82  3782               	rlcf	__div_to_l_@quot& (0+255),f,b
 29886  006B84  3783               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 29887  006B86  3784               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 29888  006B88  3785               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 29889  006B8A  0100               	movlb	0	; () banked
 29890  006B8C  0787               	decf	__div_to_l_@exp1& (0+255),f,b
 29891  006B8E  D000               	goto	l13058
 29892  006B90                     l13058:
 29893                           
 29894                           ; BSR set to: 0
 29895  006B90  0100               	movlb	0	; () banked
 29896  006B92  5187               	movf	__div_to_l_@exp1& (0+255),w,b
 29897  006B94  0100               	movlb	0	; () banked
 29898  006B96  A4D8               	btfss	status,2,c
 29899  006B98  D7F2               	goto	l13056
 29900  006B9A                     l2623:
 29901                           
 29902                           ; BSR set to: 0
 29903  006B9A  C082  F07C         	movff	__div_to_l_@quot,?__div_to_l_
 29904  006B9E  C083  F07D         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 29905  006BA2  C084  F07E         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 29906  006BA6  C085  F07F         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 29907                           
 29908                           ; BSR set to: 0
 29909  006BAA  0012               	return		;funcret
 29910  006BAC                     __end_of__div_to_l_:
 29911                           	opt stack 0
 29912                           tblptru	equ	0xFF8
 29913                           tblptrh	equ	0xFF7
 29914                           tblptrl	equ	0xFF6
 29915                           tablat	equ	0xFF5
 29916                           prodh	equ	0xFF4
 29917                           prodl	equ	0xFF3
 29918                           intcon	equ	0xFF2
 29919                           intcon2	equ	0xFF1
 29920                           indf0	equ	0xFEF
 29921                           postinc0	equ	0xFEE
 29922                           fsr0h	equ	0xFEA
 29923                           fsr0l	equ	0xFE9
 29924                           wreg	equ	0xFE8
 29925                           indf1	equ	0xFE7
 29926                           postdec1	equ	0xFE5
 29927                           fsr1h	equ	0xFE2
 29928                           fsr1l	equ	0xFE1
 29929                           indf2	equ	0xFDF
 29930                           postinc2	equ	0xFDE
 29931                           postdec2	equ	0xFDD
 29932                           fsr2h	equ	0xFDA
 29933                           fsr2l	equ	0xFD9
 29934                           status	equ	0xFD8
 29935                           
 29936 ;; *************** function ___lltoft *****************
 29937 ;; Defined at:
 29938 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
 29939 ;; Parameters:    Size  Location     Type
 29940 ;;  c               4   36[BANK0 ] unsigned long 
 29941 ;; Auto vars:     Size  Location     Type
 29942 ;;  exp             1   44[BANK0 ] unsigned char 
 29943 ;; Return value:  Size  Location     Type
 29944 ;;                  3   36[BANK0 ] float 
 29945 ;; Registers used:
 29946 ;;		wreg, status,2, status,0, cstack
 29947 ;; Tracked objects:
 29948 ;;		On entry : 0/0
 29949 ;;		On exit  : 0/0
 29950 ;;		Unchanged: 0/0
 29951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29952 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29954 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29955 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29956 ;;Total ram usage:        9 bytes
 29957 ;; Hardware stack levels used:    1
 29958 ;; Hardware stack levels required when called:    7
 29959 ;; This function calls:
 29960 ;;		___ftpack
 29961 ;; This function is called by:
 29962 ;;		_InitUART
 29963 ;;		_sprintf
 29964 ;; This function uses a non-reentrant model
 29965 ;;
 29966                           
 29967                           	psect	text69
 29968  0088DA                     __ptext69:
 29969                           	opt stack 0
 29970  0088DA                     ___lltoft:
 29971                           	opt stack 21
 29972                           
 29973                           ; BSR set to: 0
 29974                           ;incstack = 0
 29975  0088DA  0E8E               	movlw	142
 29976  0088DC  0100               	movlb	0	; () banked
 29977  0088DE  6F8C               	movwf	___lltoft@exp& (0+255),b
 29978  0088E0  D009               	goto	l13178
 29979  0088E2                     l13176:
 29980                           
 29981                           ; BSR set to: 0
 29982  0088E2  0100               	movlb	0	; () banked
 29983  0088E4  90D8               	bcf	status,0,c
 29984  0088E6  3387               	rrcf	(___lltoft@c+3)& (0+255),f,b
 29985  0088E8  3386               	rrcf	(___lltoft@c+2)& (0+255),f,b
 29986  0088EA  3385               	rrcf	(___lltoft@c+1)& (0+255),f,b
 29987  0088EC  3384               	rrcf	___lltoft@c& (0+255),f,b
 29988  0088EE  0100               	movlb	0	; () banked
 29989  0088F0  2B8C               	incf	___lltoft@exp& (0+255),f,b
 29990  0088F2  D000               	goto	l13178
 29991  0088F4                     l13178:
 29992                           
 29993                           ; BSR set to: 0
 29994  0088F4  0E00               	movlw	0
 29995  0088F6  0100               	movlb	0	; () banked
 29996  0088F8  1584               	andwf	___lltoft@c& (0+255),w,b
 29997  0088FA  0100               	movlb	0	; () banked
 29998  0088FC  6F88               	movwf	??___lltoft& (0+255),b
 29999  0088FE  0E00               	movlw	0
 30000  008900  0100               	movlb	0	; () banked
 30001  008902  1585               	andwf	(___lltoft@c+1)& (0+255),w,b
 30002  008904  0100               	movlb	0	; () banked
 30003  008906  6F89               	movwf	(??___lltoft+1)& (0+255),b
 30004  008908  0E00               	movlw	0
 30005  00890A  0100               	movlb	0	; () banked
 30006  00890C  1586               	andwf	(___lltoft@c+2)& (0+255),w,b
 30007  00890E  0100               	movlb	0	; () banked
 30008  008910  6F8A               	movwf	(??___lltoft+2)& (0+255),b
 30009  008912  0EFF               	movlw	255
 30010  008914  0100               	movlb	0	; () banked
 30011  008916  1587               	andwf	(___lltoft@c+3)& (0+255),w,b
 30012  008918  0100               	movlb	0	; () banked
 30013  00891A  6F8B               	movwf	(??___lltoft+3)& (0+255),b
 30014  00891C  0100               	movlb	0	; () banked
 30015  00891E  5188               	movf	??___lltoft& (0+255),w,b
 30016  008920  0100               	movlb	0	; () banked
 30017  008922  1189               	iorwf	(??___lltoft+1)& (0+255),w,b
 30018  008924  0100               	movlb	0	; () banked
 30019  008926  118A               	iorwf	(??___lltoft+2)& (0+255),w,b
 30020  008928  0100               	movlb	0	; () banked
 30021  00892A  118B               	iorwf	(??___lltoft+3)& (0+255),w,b
 30022  00892C  A4D8               	btfss	status,2,c
 30023  00892E  D7D9               	goto	l13176
 30024                           
 30025                           ; BSR set to: 0
 30026                           
 30027                           ; BSR set to: 0
 30028  008930  C084  F07C         	movff	___lltoft@c,___ftpack@arg
 30029  008934  C085  F07D         	movff	___lltoft@c+1,___ftpack@arg+1
 30030  008938  C086  F07E         	movff	___lltoft@c+2,___ftpack@arg+2
 30031  00893C  C08C  F07F         	movff	___lltoft@exp,___ftpack@exp
 30032  008940  0E00               	movlw	0
 30033  008942  0100               	movlb	0	; () banked
 30034  008944  6F80               	movwf	___ftpack@sign& (0+255),b
 30035  008946  EC2B  F03B         	call	___ftpack	;wreg free
 30036  00894A  C07C  F084         	movff	?___ftpack,?___lltoft
 30037  00894E  C07D  F085         	movff	?___ftpack+1,?___lltoft+1
 30038  008952  C07E  F086         	movff	?___ftpack+2,?___lltoft+2
 30039  008956  0012               	return	
 30040  008958  0012               	return		;funcret
 30041  00895A                     __end_of___lltoft:
 30042                           	opt stack 0
 30043                           tblptru	equ	0xFF8
 30044                           tblptrh	equ	0xFF7
 30045                           tblptrl	equ	0xFF6
 30046                           tablat	equ	0xFF5
 30047                           prodh	equ	0xFF4
 30048                           prodl	equ	0xFF3
 30049                           intcon	equ	0xFF2
 30050                           intcon2	equ	0xFF1
 30051                           indf0	equ	0xFEF
 30052                           postinc0	equ	0xFEE
 30053                           fsr0h	equ	0xFEA
 30054                           fsr0l	equ	0xFE9
 30055                           wreg	equ	0xFE8
 30056                           indf1	equ	0xFE7
 30057                           postdec1	equ	0xFE5
 30058                           fsr1h	equ	0xFE2
 30059                           fsr1l	equ	0xFE1
 30060                           indf2	equ	0xFDF
 30061                           postinc2	equ	0xFDE
 30062                           postdec2	equ	0xFDD
 30063                           fsr2h	equ	0xFDA
 30064                           fsr2l	equ	0xFD9
 30065                           status	equ	0xFD8
 30066                           
 30067 ;; *************** function ___llmod *****************
 30068 ;; Defined at:
 30069 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 30070 ;; Parameters:    Size  Location     Type
 30071 ;;  dividend        4   41[BANK0 ] unsigned long 
 30072 ;;  divisor         4   45[BANK0 ] unsigned long 
 30073 ;; Auto vars:     Size  Location     Type
 30074 ;;  counter         1   49[BANK0 ] unsigned char 
 30075 ;; Return value:  Size  Location     Type
 30076 ;;                  4   41[BANK0 ] unsigned long 
 30077 ;; Registers used:
 30078 ;;		wreg, status,2, status,0
 30079 ;; Tracked objects:
 30080 ;;		On entry : 0/0
 30081 ;;		On exit  : 0/0
 30082 ;;		Unchanged: 0/0
 30083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30084 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30085 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30087 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30088 ;;Total ram usage:        9 bytes
 30089 ;; Hardware stack levels used:    1
 30090 ;; Hardware stack levels required when called:    6
 30091 ;; This function calls:
 30092 ;;		Nothing
 30093 ;; This function is called by:
 30094 ;;		_sprintf
 30095 ;; This function uses a non-reentrant model
 30096 ;;
 30097                           
 30098                           	psect	text70
 30099  008420                     __ptext70:
 30100                           	opt stack 0
 30101  008420                     ___llmod:
 30102                           	opt stack 22
 30103                           
 30104                           ;incstack = 0
 30105  008420  0100               	movlb	0	; () banked
 30106  008422  518D               	movf	___llmod@divisor& (0+255),w,b
 30107  008424  0100               	movlb	0	; () banked
 30108  008426  118E               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 30109  008428  0100               	movlb	0	; () banked
 30110  00842A  118F               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 30111  00842C  0100               	movlb	0	; () banked
 30112  00842E  1190               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 30113  008430  B4D8               	btfsc	status,2,c
 30114  008432  D03F               	goto	l2834
 30115                           
 30116                           ; BSR set to: 0
 30117  008434  0E01               	movlw	1
 30118  008436  0100               	movlb	0	; () banked
 30119  008438  6F91               	movwf	___llmod@counter& (0+255),b
 30120  00843A  D009               	goto	l13164
 30121  00843C                     l13162:
 30122                           
 30123                           ; BSR set to: 0
 30124  00843C  0100               	movlb	0	; () banked
 30125  00843E  90D8               	bcf	status,0,c
 30126  008440  378D               	rlcf	___llmod@divisor& (0+255),f,b
 30127  008442  378E               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 30128  008444  378F               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 30129  008446  3790               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 30130  008448  0100               	movlb	0	; () banked
 30131  00844A  2B91               	incf	___llmod@counter& (0+255),f,b
 30132  00844C  D000               	goto	l13164
 30133  00844E                     l13164:
 30134                           
 30135                           ; BSR set to: 0
 30136  00844E  0100               	movlb	0	; () banked
 30137  008450  BF90               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 30138  008452  D002               	goto	l13166
 30139  008454  D7F3               	goto	l13162
 30140                           
 30141                           ; BSR set to: 0
 30142  008456  D000               	goto	l13166
 30143  008458                     l13166:
 30144                           
 30145                           ; BSR set to: 0
 30146  008458  0100               	movlb	0	; () banked
 30147  00845A  518D               	movf	___llmod@divisor& (0+255),w,b
 30148  00845C  0100               	movlb	0	; () banked
 30149  00845E  5D89               	subwf	___llmod@dividend& (0+255),w,b
 30150  008460  0100               	movlb	0	; () banked
 30151  008462  518E               	movf	(___llmod@divisor+1)& (0+255),w,b
 30152  008464  0100               	movlb	0	; () banked
 30153  008466  598A               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 30154  008468  0100               	movlb	0	; () banked
 30155  00846A  518F               	movf	(___llmod@divisor+2)& (0+255),w,b
 30156  00846C  0100               	movlb	0	; () banked
 30157  00846E  598B               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 30158  008470  0100               	movlb	0	; () banked
 30159  008472  5190               	movf	(___llmod@divisor+3)& (0+255),w,b
 30160  008474  0100               	movlb	0	; () banked
 30161  008476  598C               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 30162  008478  A0D8               	btfss	status,0,c
 30163  00847A  D011               	goto	l13170
 30164                           
 30165                           ; BSR set to: 0
 30166  00847C  0100               	movlb	0	; () banked
 30167  00847E  518D               	movf	___llmod@divisor& (0+255),w,b
 30168  008480  0100               	movlb	0	; () banked
 30169  008482  5F89               	subwf	___llmod@dividend& (0+255),f,b
 30170  008484  0100               	movlb	0	; () banked
 30171  008486  518E               	movf	(___llmod@divisor+1)& (0+255),w,b
 30172  008488  0100               	movlb	0	; () banked
 30173  00848A  5B8A               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 30174  00848C  0100               	movlb	0	; () banked
 30175  00848E  518F               	movf	(___llmod@divisor+2)& (0+255),w,b
 30176  008490  0100               	movlb	0	; () banked
 30177  008492  5B8B               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 30178  008494  0100               	movlb	0	; () banked
 30179  008496  5190               	movf	(___llmod@divisor+3)& (0+255),w,b
 30180  008498  0100               	movlb	0	; () banked
 30181  00849A  5B8C               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 30182  00849C  D000               	goto	l13170
 30183  00849E                     l13170:
 30184                           
 30185                           ; BSR set to: 0
 30186  00849E  0100               	movlb	0	; () banked
 30187  0084A0  90D8               	bcf	status,0,c
 30188  0084A2  3390               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 30189  0084A4  338F               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 30190  0084A6  338E               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 30191  0084A8  338D               	rrcf	___llmod@divisor& (0+255),f,b
 30192                           
 30193                           ; BSR set to: 0
 30194  0084AA  0100               	movlb	0	; () banked
 30195  0084AC  2F91               	decfsz	___llmod@counter& (0+255),f,b
 30196  0084AE  D7D4               	goto	l13166
 30197  0084B0  D000               	goto	l2834
 30198  0084B2                     l2834:
 30199                           
 30200                           ; BSR set to: 0
 30201  0084B2  C089  F089         	movff	___llmod@dividend,?___llmod
 30202  0084B6  C08A  F08A         	movff	___llmod@dividend+1,?___llmod+1
 30203  0084BA  C08B  F08B         	movff	___llmod@dividend+2,?___llmod+2
 30204  0084BE  C08C  F08C         	movff	___llmod@dividend+3,?___llmod+3
 30205                           
 30206                           ; BSR set to: 0
 30207  0084C2  0012               	return		;funcret
 30208  0084C4                     __end_of___llmod:
 30209                           	opt stack 0
 30210                           tblptru	equ	0xFF8
 30211                           tblptrh	equ	0xFF7
 30212                           tblptrl	equ	0xFF6
 30213                           tablat	equ	0xFF5
 30214                           prodh	equ	0xFF4
 30215                           prodl	equ	0xFF3
 30216                           intcon	equ	0xFF2
 30217                           intcon2	equ	0xFF1
 30218                           indf0	equ	0xFEF
 30219                           postinc0	equ	0xFEE
 30220                           fsr0h	equ	0xFEA
 30221                           fsr0l	equ	0xFE9
 30222                           wreg	equ	0xFE8
 30223                           indf1	equ	0xFE7
 30224                           postdec1	equ	0xFE5
 30225                           fsr1h	equ	0xFE2
 30226                           fsr1l	equ	0xFE1
 30227                           indf2	equ	0xFDF
 30228                           postinc2	equ	0xFDE
 30229                           postdec2	equ	0xFDD
 30230                           fsr2h	equ	0xFDA
 30231                           fsr2l	equ	0xFD9
 30232                           status	equ	0xFD8
 30233                           
 30234 ;; *************** function ___lldiv *****************
 30235 ;; Defined at:
 30236 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 30237 ;; Parameters:    Size  Location     Type
 30238 ;;  dividend        4   28[BANK0 ] unsigned long 
 30239 ;;  divisor         4   32[BANK0 ] unsigned long 
 30240 ;; Auto vars:     Size  Location     Type
 30241 ;;  quotient        4   36[BANK0 ] unsigned long 
 30242 ;;  counter         1   40[BANK0 ] unsigned char 
 30243 ;; Return value:  Size  Location     Type
 30244 ;;                  4   28[BANK0 ] unsigned long 
 30245 ;; Registers used:
 30246 ;;		wreg, status,2, status,0
 30247 ;; Tracked objects:
 30248 ;;		On entry : 0/0
 30249 ;;		On exit  : 0/0
 30250 ;;		Unchanged: 0/0
 30251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30252 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30253 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30255 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30256 ;;Total ram usage:       13 bytes
 30257 ;; Hardware stack levels used:    1
 30258 ;; Hardware stack levels required when called:    6
 30259 ;; This function calls:
 30260 ;;		Nothing
 30261 ;; This function is called by:
 30262 ;;		_InitUART
 30263 ;;		_sprintf
 30264 ;; This function uses a non-reentrant model
 30265 ;;
 30266                           
 30267                           	psect	text71
 30268  007F18                     __ptext71:
 30269                           	opt stack 0
 30270  007F18                     ___lldiv:
 30271                           	opt stack 22
 30272                           
 30273                           ; BSR set to: 0
 30274                           ;incstack = 0
 30275  007F18  0E00               	movlw	0
 30276  007F1A  0100               	movlb	0	; () banked
 30277  007F1C  6F84               	movwf	___lldiv@quotient& (0+255),b
 30278  007F1E  0E00               	movlw	0
 30279  007F20  6F85               	movwf	(___lldiv@quotient+1)& (0+255),b
 30280  007F22  0E00               	movlw	0
 30281  007F24  6F86               	movwf	(___lldiv@quotient+2)& (0+255),b
 30282  007F26  0E00               	movlw	0
 30283  007F28  6F87               	movwf	(___lldiv@quotient+3)& (0+255),b
 30284                           
 30285                           ; BSR set to: 0
 30286  007F2A  0100               	movlb	0	; () banked
 30287  007F2C  5180               	movf	___lldiv@divisor& (0+255),w,b
 30288  007F2E  0100               	movlb	0	; () banked
 30289  007F30  1181               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 30290  007F32  0100               	movlb	0	; () banked
 30291  007F34  1182               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 30292  007F36  0100               	movlb	0	; () banked
 30293  007F38  1183               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 30294  007F3A  B4D8               	btfsc	status,2,c
 30295  007F3C  D047               	goto	l2824
 30296                           
 30297                           ; BSR set to: 0
 30298  007F3E  0E01               	movlw	1
 30299  007F40  0100               	movlb	0	; () banked
 30300  007F42  6F88               	movwf	___lldiv@counter& (0+255),b
 30301  007F44  D009               	goto	l13144
 30302  007F46                     l13142:
 30303                           
 30304                           ; BSR set to: 0
 30305  007F46  0100               	movlb	0	; () banked
 30306  007F48  90D8               	bcf	status,0,c
 30307  007F4A  3780               	rlcf	___lldiv@divisor& (0+255),f,b
 30308  007F4C  3781               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 30309  007F4E  3782               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 30310  007F50  3783               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 30311  007F52  0100               	movlb	0	; () banked
 30312  007F54  2B88               	incf	___lldiv@counter& (0+255),f,b
 30313  007F56  D000               	goto	l13144
 30314  007F58                     l13144:
 30315                           
 30316                           ; BSR set to: 0
 30317  007F58  0100               	movlb	0	; () banked
 30318  007F5A  BF83               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 30319  007F5C  D002               	goto	l13146
 30320  007F5E  D7F3               	goto	l13142
 30321                           
 30322                           ; BSR set to: 0
 30323  007F60  D000               	goto	l13146
 30324  007F62                     l13146:
 30325                           
 30326                           ; BSR set to: 0
 30327  007F62  0100               	movlb	0	; () banked
 30328  007F64  90D8               	bcf	status,0,c
 30329  007F66  3784               	rlcf	___lldiv@quotient& (0+255),f,b
 30330  007F68  3785               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 30331  007F6A  3786               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 30332  007F6C  3787               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 30333                           
 30334                           ; BSR set to: 0
 30335  007F6E  0100               	movlb	0	; () banked
 30336  007F70  5180               	movf	___lldiv@divisor& (0+255),w,b
 30337  007F72  0100               	movlb	0	; () banked
 30338  007F74  5D7C               	subwf	___lldiv@dividend& (0+255),w,b
 30339  007F76  0100               	movlb	0	; () banked
 30340  007F78  5181               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30341  007F7A  0100               	movlb	0	; () banked
 30342  007F7C  597D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 30343  007F7E  0100               	movlb	0	; () banked
 30344  007F80  5182               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30345  007F82  0100               	movlb	0	; () banked
 30346  007F84  597E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 30347  007F86  0100               	movlb	0	; () banked
 30348  007F88  5183               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30349  007F8A  0100               	movlb	0	; () banked
 30350  007F8C  597F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 30351  007F8E  A0D8               	btfss	status,0,c
 30352  007F90  D013               	goto	l13154
 30353                           
 30354                           ; BSR set to: 0
 30355  007F92  0100               	movlb	0	; () banked
 30356  007F94  5180               	movf	___lldiv@divisor& (0+255),w,b
 30357  007F96  0100               	movlb	0	; () banked
 30358  007F98  5F7C               	subwf	___lldiv@dividend& (0+255),f,b
 30359  007F9A  0100               	movlb	0	; () banked
 30360  007F9C  5181               	movf	(___lldiv@divisor+1)& (0+255),w,b
 30361  007F9E  0100               	movlb	0	; () banked
 30362  007FA0  5B7D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 30363  007FA2  0100               	movlb	0	; () banked
 30364  007FA4  5182               	movf	(___lldiv@divisor+2)& (0+255),w,b
 30365  007FA6  0100               	movlb	0	; () banked
 30366  007FA8  5B7E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 30367  007FAA  0100               	movlb	0	; () banked
 30368  007FAC  5183               	movf	(___lldiv@divisor+3)& (0+255),w,b
 30369  007FAE  0100               	movlb	0	; () banked
 30370  007FB0  5B7F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 30371                           
 30372                           ; BSR set to: 0
 30373  007FB2  0100               	movlb	0	; () banked
 30374  007FB4  8184               	bsf	___lldiv@quotient& (0+255),0,b
 30375  007FB6  D000               	goto	l13154
 30376  007FB8                     l13154:
 30377                           
 30378                           ; BSR set to: 0
 30379  007FB8  0100               	movlb	0	; () banked
 30380  007FBA  90D8               	bcf	status,0,c
 30381  007FBC  3383               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 30382  007FBE  3382               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 30383  007FC0  3381               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 30384  007FC2  3380               	rrcf	___lldiv@divisor& (0+255),f,b
 30385                           
 30386                           ; BSR set to: 0
 30387  007FC4  0100               	movlb	0	; () banked
 30388  007FC6  2F88               	decfsz	___lldiv@counter& (0+255),f,b
 30389  007FC8  D7CC               	goto	l13146
 30390  007FCA  D000               	goto	l2824
 30391  007FCC                     l2824:
 30392                           
 30393                           ; BSR set to: 0
 30394  007FCC  C084  F07C         	movff	___lldiv@quotient,?___lldiv
 30395  007FD0  C085  F07D         	movff	___lldiv@quotient+1,?___lldiv+1
 30396  007FD4  C086  F07E         	movff	___lldiv@quotient+2,?___lldiv+2
 30397  007FD8  C087  F07F         	movff	___lldiv@quotient+3,?___lldiv+3
 30398                           
 30399                           ; BSR set to: 0
 30400  007FDC  0012               	return		;funcret
 30401  007FDE                     __end_of___lldiv:
 30402                           	opt stack 0
 30403                           tblptru	equ	0xFF8
 30404                           tblptrh	equ	0xFF7
 30405                           tblptrl	equ	0xFF6
 30406                           tablat	equ	0xFF5
 30407                           prodh	equ	0xFF4
 30408                           prodl	equ	0xFF3
 30409                           intcon	equ	0xFF2
 30410                           intcon2	equ	0xFF1
 30411                           indf0	equ	0xFEF
 30412                           postinc0	equ	0xFEE
 30413                           fsr0h	equ	0xFEA
 30414                           fsr0l	equ	0xFE9
 30415                           wreg	equ	0xFE8
 30416                           indf1	equ	0xFE7
 30417                           postdec1	equ	0xFE5
 30418                           fsr1h	equ	0xFE2
 30419                           fsr1l	equ	0xFE1
 30420                           indf2	equ	0xFDF
 30421                           postinc2	equ	0xFDE
 30422                           postdec2	equ	0xFDD
 30423                           fsr2h	equ	0xFDA
 30424                           fsr2l	equ	0xFD9
 30425                           status	equ	0xFD8
 30426                           
 30427 ;; *************** function ___fttol *****************
 30428 ;; Defined at:
 30429 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 30430 ;; Parameters:    Size  Location     Type
 30431 ;;  f1              3   91[BANK0 ] float 
 30432 ;; Auto vars:     Size  Location     Type
 30433 ;;  lval            4  101[BANK0 ] unsigned long 
 30434 ;;  exp1            1  105[BANK0 ] unsigned char 
 30435 ;;  sign1           1  100[BANK0 ] unsigned char 
 30436 ;; Return value:  Size  Location     Type
 30437 ;;                  4   91[BANK0 ] long 
 30438 ;; Registers used:
 30439 ;;		wreg, status,2, status,0
 30440 ;; Tracked objects:
 30441 ;;		On entry : 0/0
 30442 ;;		On exit  : 0/0
 30443 ;;		Unchanged: 0/0
 30444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30445 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30446 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30447 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30448 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30449 ;;Total ram usage:       15 bytes
 30450 ;; Hardware stack levels used:    1
 30451 ;; Hardware stack levels required when called:    6
 30452 ;; This function calls:
 30453 ;;		Nothing
 30454 ;; This function is called by:
 30455 ;;		_Round
 30456 ;;		_InitUART
 30457 ;;		_sprintf
 30458 ;; This function uses a non-reentrant model
 30459 ;;
 30460                           
 30461                           	psect	text72
 30462  007168                     __ptext72:
 30463                           	opt stack 0
 30464  007168                     ___fttol:
 30465                           	opt stack 22
 30466                           
 30467                           ; BSR set to: 0
 30468                           ;incstack = 0
 30469  007168  C0BD  F0BF         	movff	___fttol@f1+2,??___fttol
 30470  00716C  0100               	movlb	0	; () banked
 30471  00716E  6BC0               	clrf	(??___fttol+1)& (0+255),b
 30472  007170  6BC1               	clrf	(??___fttol+2)& (0+255),b
 30473  007172  0100               	movlb	0	; () banked
 30474  007174  35BC               	rlcf	(___fttol@f1+1)& (0+255),w,b
 30475  007176  0100               	movlb	0	; () banked
 30476  007178  37BF               	rlcf	??___fttol& (0+255),f,b
 30477  00717A  E301               	bnc	u15671
 30478  00717C  81C0               	bsf	(??___fttol+1)& (0+255),0,b
 30479  00717E                     u15671:
 30480  00717E  0100               	movlb	0	; () banked
 30481  007180  51BF               	movf	??___fttol& (0+255),w,b
 30482  007182  0100               	movlb	0	; () banked
 30483  007184  6FC9               	movwf	___fttol@exp1& (0+255),b
 30484  007186  0100               	movlb	0	; () banked
 30485  007188  51C9               	movf	___fttol@exp1& (0+255),w,b
 30486  00718A  A4D8               	btfss	status,2,c
 30487  00718C  D00A               	goto	l13096
 30488                           
 30489                           ; BSR set to: 0
 30490  00718E  0E00               	movlw	0
 30491  007190  0100               	movlb	0	; () banked
 30492  007192  6FBB               	movwf	?___fttol& (0+255),b
 30493  007194  0E00               	movlw	0
 30494  007196  6FBC               	movwf	(?___fttol+1)& (0+255),b
 30495  007198  0E00               	movlw	0
 30496  00719A  6FBD               	movwf	(?___fttol+2)& (0+255),b
 30497  00719C  0E00               	movlw	0
 30498  00719E  6FBE               	movwf	(?___fttol+3)& (0+255),b
 30499                           
 30500                           ; BSR set to: 0
 30501  0071A0  0012               	return	
 30502  0071A2                     l13096:
 30503                           
 30504                           ; BSR set to: 0
 30505  0071A2  0E17               	movlw	23
 30506  0071A4  0100               	movlb	0	; () banked
 30507  0071A6  6FBF               	movwf	??___fttol& (0+255),b
 30508  0071A8  C0BB  F0C0         	movff	___fttol@f1,??___fttol+1
 30509  0071AC  C0BC  F0C1         	movff	___fttol@f1+1,??___fttol+2
 30510  0071B0  C0BD  F0C2         	movff	___fttol@f1+2,??___fttol+3
 30511  0071B4  0100               	movlb	0	; () banked
 30512  0071B6  29BF               	incf	??___fttol& (0+255),w,b
 30513  0071B8  0100               	movlb	0	; () banked
 30514  0071BA  6FC3               	movwf	(??___fttol+4)& (0+255),b
 30515  0071BC  D005               	goto	u15690
 30516  0071BE                     u15695:
 30517  0071BE  0100               	movlb	0	; () banked
 30518  0071C0  90D8               	bcf	status,0,c
 30519  0071C2  33C2               	rrcf	(??___fttol+3)& (0+255),f,b
 30520  0071C4  33C1               	rrcf	(??___fttol+2)& (0+255),f,b
 30521  0071C6  33C0               	rrcf	(??___fttol+1)& (0+255),f,b
 30522  0071C8                     u15690:
 30523  0071C8  0100               	movlb	0	; () banked
 30524  0071CA  2FC3               	decfsz	(??___fttol+4)& (0+255),f,b
 30525  0071CC  D7F8               	goto	u15695
 30526  0071CE  0100               	movlb	0	; () banked
 30527  0071D0  51C0               	movf	(??___fttol+1)& (0+255),w,b
 30528  0071D2  0100               	movlb	0	; () banked
 30529  0071D4  6FC4               	movwf	___fttol@sign1& (0+255),b
 30530                           
 30531                           ; BSR set to: 0
 30532  0071D6  0100               	movlb	0	; () banked
 30533  0071D8  8FBC               	bsf	(___fttol@f1+1)& (0+255),7,b
 30534                           
 30535                           ; BSR set to: 0
 30536  0071DA  0EFF               	movlw	255
 30537  0071DC  0100               	movlb	0	; () banked
 30538  0071DE  17BB               	andwf	___fttol@f1& (0+255),f,b
 30539  0071E0  0EFF               	movlw	255
 30540  0071E2  0100               	movlb	0	; () banked
 30541  0071E4  17BC               	andwf	(___fttol@f1+1)& (0+255),f,b
 30542  0071E6  0E00               	movlw	0
 30543  0071E8  0100               	movlb	0	; () banked
 30544  0071EA  17BD               	andwf	(___fttol@f1+2)& (0+255),f,b
 30545                           
 30546                           ; BSR set to: 0
 30547  0071EC  0100               	movlb	0	; () banked
 30548  0071EE  51BB               	movf	___fttol@f1& (0+255),w,b
 30549  0071F0  0100               	movlb	0	; () banked
 30550  0071F2  6FC5               	movwf	___fttol@lval& (0+255),b
 30551  0071F4  0100               	movlb	0	; () banked
 30552  0071F6  51BC               	movf	(___fttol@f1+1)& (0+255),w,b
 30553  0071F8  0100               	movlb	0	; () banked
 30554  0071FA  6FC6               	movwf	(___fttol@lval+1)& (0+255),b
 30555  0071FC  0100               	movlb	0	; () banked
 30556  0071FE  51BD               	movf	(___fttol@f1+2)& (0+255),w,b
 30557  007200  0100               	movlb	0	; () banked
 30558  007202  6FC7               	movwf	(___fttol@lval+2)& (0+255),b
 30559  007204  0100               	movlb	0	; () banked
 30560  007206  6BC8               	clrf	(___fttol@lval+3)& (0+255),b
 30561                           
 30562                           ; BSR set to: 0
 30563  007208  0E8E               	movlw	142
 30564  00720A  0100               	movlb	0	; () banked
 30565  00720C  5FC9               	subwf	___fttol@exp1& (0+255),f,b
 30566                           
 30567                           ; BSR set to: 0
 30568  00720E  0100               	movlb	0	; () banked
 30569  007210  AFC9               	btfss	___fttol@exp1& (0+255),7,b
 30570  007212  D01B               	goto	l13118
 30571                           
 30572                           ; BSR set to: 0
 30573  007214  0100               	movlb	0	; () banked
 30574  007216  51C9               	movf	___fttol@exp1& (0+255),w,b
 30575  007218  0A80               	xorlw	128
 30576  00721A  0F8F               	addlw	143
 30577  00721C  B0D8               	btfsc	status,0,c
 30578  00721E  D00B               	goto	l13114
 30579                           
 30580                           ; BSR set to: 0
 30581  007220  0E00               	movlw	0
 30582  007222  0100               	movlb	0	; () banked
 30583  007224  6FBB               	movwf	?___fttol& (0+255),b
 30584  007226  0E00               	movlw	0
 30585  007228  6FBC               	movwf	(?___fttol+1)& (0+255),b
 30586  00722A  0E00               	movlw	0
 30587  00722C  6FBD               	movwf	(?___fttol+2)& (0+255),b
 30588  00722E  0E00               	movlw	0
 30589  007230  6FBE               	movwf	(?___fttol+3)& (0+255),b
 30590                           
 30591                           ; BSR set to: 0
 30592  007232  0012               	return	
 30593                           
 30594                           ; BSR set to: 0
 30595  007234  D000               	goto	l13114
 30596  007236                     l13114:
 30597                           
 30598                           ; BSR set to: 0
 30599  007236  0100               	movlb	0	; () banked
 30600  007238  90D8               	bcf	status,0,c
 30601  00723A  33C8               	rrcf	(___fttol@lval+3)& (0+255),f,b
 30602  00723C  33C7               	rrcf	(___fttol@lval+2)& (0+255),f,b
 30603  00723E  33C6               	rrcf	(___fttol@lval+1)& (0+255),f,b
 30604  007240  33C5               	rrcf	___fttol@lval& (0+255),f,b
 30605                           
 30606                           ; BSR set to: 0
 30607  007242  0100               	movlb	0	; () banked
 30608  007244  3FC9               	incfsz	___fttol@exp1& (0+255),f,b
 30609  007246  D7F7               	goto	l13114
 30610                           
 30611                           ; BSR set to: 0
 30612  007248  D01F               	goto	l13128
 30613  00724A                     l13118:
 30614                           
 30615                           ; BSR set to: 0
 30616  00724A  0E17               	movlw	23
 30617  00724C  0100               	movlb	0	; () banked
 30618  00724E  65C9               	cpfsgt	___fttol@exp1& (0+255),b
 30619  007250  D014               	goto	l13126
 30620                           
 30621                           ; BSR set to: 0
 30622  007252  0E00               	movlw	0
 30623  007254  0100               	movlb	0	; () banked
 30624  007256  6FBB               	movwf	?___fttol& (0+255),b
 30625  007258  0E00               	movlw	0
 30626  00725A  6FBC               	movwf	(?___fttol+1)& (0+255),b
 30627  00725C  0E00               	movlw	0
 30628  00725E  6FBD               	movwf	(?___fttol+2)& (0+255),b
 30629  007260  0E00               	movlw	0
 30630  007262  6FBE               	movwf	(?___fttol+3)& (0+255),b
 30631                           
 30632                           ; BSR set to: 0
 30633  007264  0012               	return	
 30634                           
 30635                           ; BSR set to: 0
 30636  007266  D009               	goto	l13126
 30637  007268                     l13124:
 30638                           
 30639                           ; BSR set to: 0
 30640  007268  0100               	movlb	0	; () banked
 30641  00726A  90D8               	bcf	status,0,c
 30642  00726C  37C5               	rlcf	___fttol@lval& (0+255),f,b
 30643  00726E  37C6               	rlcf	(___fttol@lval+1)& (0+255),f,b
 30644  007270  37C7               	rlcf	(___fttol@lval+2)& (0+255),f,b
 30645  007272  37C8               	rlcf	(___fttol@lval+3)& (0+255),f,b
 30646  007274  0100               	movlb	0	; () banked
 30647  007276  07C9               	decf	___fttol@exp1& (0+255),f,b
 30648  007278  D000               	goto	l13126
 30649  00727A                     l13126:
 30650                           
 30651                           ; BSR set to: 0
 30652  00727A  0100               	movlb	0	; () banked
 30653  00727C  51C9               	movf	___fttol@exp1& (0+255),w,b
 30654  00727E  0100               	movlb	0	; () banked
 30655  007280  B4D8               	btfsc	status,2,c
 30656  007282  D002               	goto	l13128
 30657  007284  D7F1               	goto	l13124
 30658                           
 30659                           ; BSR set to: 0
 30660  007286  D000               	goto	l13128
 30661  007288                     l13128:
 30662                           
 30663                           ; BSR set to: 0
 30664  007288  0100               	movlb	0	; () banked
 30665  00728A  51C4               	movf	___fttol@sign1& (0+255),w,b
 30666  00728C  0100               	movlb	0	; () banked
 30667  00728E  B4D8               	btfsc	status,2,c
 30668  007290  D00A               	goto	l13132
 30669                           
 30670                           ; BSR set to: 0
 30671  007292  0100               	movlb	0	; () banked
 30672  007294  1FC8               	comf	(___fttol@lval+3)& (0+255),f,b
 30673  007296  1FC7               	comf	(___fttol@lval+2)& (0+255),f,b
 30674  007298  1FC6               	comf	(___fttol@lval+1)& (0+255),f,b
 30675  00729A  6DC5               	negf	___fttol@lval& (0+255),b
 30676  00729C  0E00               	movlw	0
 30677  00729E  23C6               	addwfc	(___fttol@lval+1)& (0+255),f,b
 30678  0072A0  23C7               	addwfc	(___fttol@lval+2)& (0+255),f,b
 30679  0072A2  23C8               	addwfc	(___fttol@lval+3)& (0+255),f,b
 30680  0072A4  D000               	goto	l13132
 30681  0072A6                     l13132:
 30682                           
 30683                           ; BSR set to: 0
 30684  0072A6  C0C5  F0BB         	movff	___fttol@lval,?___fttol
 30685  0072AA  C0C6  F0BC         	movff	___fttol@lval+1,?___fttol+1
 30686  0072AE  C0C7  F0BD         	movff	___fttol@lval+2,?___fttol+2
 30687  0072B2  C0C8  F0BE         	movff	___fttol@lval+3,?___fttol+3
 30688  0072B6  0012               	return	
 30689                           
 30690                           ; BSR set to: 0
 30691                           
 30692                           ; BSR set to: 0
 30693  0072B8  0012               	return		;funcret
 30694  0072BA                     __end_of___fttol:
 30695                           	opt stack 0
 30696                           tblptru	equ	0xFF8
 30697                           tblptrh	equ	0xFF7
 30698                           tblptrl	equ	0xFF6
 30699                           tablat	equ	0xFF5
 30700                           prodh	equ	0xFF4
 30701                           prodl	equ	0xFF3
 30702                           intcon	equ	0xFF2
 30703                           intcon2	equ	0xFF1
 30704                           indf0	equ	0xFEF
 30705                           postinc0	equ	0xFEE
 30706                           fsr0h	equ	0xFEA
 30707                           fsr0l	equ	0xFE9
 30708                           wreg	equ	0xFE8
 30709                           indf1	equ	0xFE7
 30710                           postdec1	equ	0xFE5
 30711                           fsr1h	equ	0xFE2
 30712                           fsr1l	equ	0xFE1
 30713                           indf2	equ	0xFDF
 30714                           postinc2	equ	0xFDE
 30715                           postdec2	equ	0xFDD
 30716                           fsr2h	equ	0xFDA
 30717                           fsr2l	equ	0xFD9
 30718                           status	equ	0xFD8
 30719                           
 30720 ;; *************** function ___ftsub *****************
 30721 ;; Defined at:
 30722 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
 30723 ;; Parameters:    Size  Location     Type
 30724 ;;  f1              3   91[BANK0 ] float 
 30725 ;;  f2              3   94[BANK0 ] float 
 30726 ;; Auto vars:     Size  Location     Type
 30727 ;;		None
 30728 ;; Return value:  Size  Location     Type
 30729 ;;                  3   91[BANK0 ] float 
 30730 ;; Registers used:
 30731 ;;		wreg, status,2, status,0, cstack
 30732 ;; Tracked objects:
 30733 ;;		On entry : 0/0
 30734 ;;		On exit  : 0/0
 30735 ;;		Unchanged: 0/0
 30736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30737 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30740 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30741 ;;Total ram usage:        6 bytes
 30742 ;; Hardware stack levels used:    1
 30743 ;; Hardware stack levels required when called:    8
 30744 ;; This function calls:
 30745 ;;		___ftadd
 30746 ;; This function is called by:
 30747 ;;		_main
 30748 ;;		_sprintf
 30749 ;; This function uses a non-reentrant model
 30750 ;;
 30751                           
 30752                           	psect	text73
 30753  008FA0                     __ptext73:
 30754                           	opt stack 0
 30755  008FA0                     ___ftsub:
 30756                           	opt stack 22
 30757                           
 30758                           ; BSR set to: 0
 30759                           ;incstack = 0
 30760  008FA0  0100               	movlb	0	; () banked
 30761  008FA2  51BE               	movf	___ftsub@f2& (0+255),w,b
 30762  008FA4  0100               	movlb	0	; () banked
 30763  008FA6  11BF               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 30764  008FA8  0100               	movlb	0	; () banked
 30765  008FAA  11C0               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 30766  008FAC  B4D8               	btfsc	status,2,c
 30767  008FAE  D00A               	goto	l13064
 30768                           
 30769                           ; BSR set to: 0
 30770  008FB0  0E00               	movlw	0
 30771  008FB2  0100               	movlb	0	; () banked
 30772  008FB4  1BBE               	xorwf	___ftsub@f2& (0+255),f,b
 30773  008FB6  0E00               	movlw	0
 30774  008FB8  0100               	movlb	0	; () banked
 30775  008FBA  1BBF               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 30776  008FBC  0E80               	movlw	128
 30777  008FBE  0100               	movlb	0	; () banked
 30778  008FC0  1BC0               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 30779  008FC2  D000               	goto	l13064
 30780  008FC4                     l13064:
 30781                           
 30782                           ; BSR set to: 0
 30783  008FC4  C0BB  F0AF         	movff	___ftsub@f1,___ftadd@f1
 30784  008FC8  C0BC  F0B0         	movff	___ftsub@f1+1,___ftadd@f1+1
 30785  008FCC  C0BD  F0B1         	movff	___ftsub@f1+2,___ftadd@f1+2
 30786  008FD0  C0BE  F0B2         	movff	___ftsub@f2,___ftadd@f2
 30787  008FD4  C0BF  F0B3         	movff	___ftsub@f2+1,___ftadd@f2+1
 30788  008FD8  C0C0  F0B4         	movff	___ftsub@f2+2,___ftadd@f2+2
 30789  008FDC  ECBD  F02D         	call	___ftadd	;wreg free
 30790  008FE0  C0AF  F0BB         	movff	?___ftadd,?___ftsub
 30791  008FE4  C0B0  F0BC         	movff	?___ftadd+1,?___ftsub+1
 30792  008FE8  C0B1  F0BD         	movff	?___ftadd+2,?___ftsub+2
 30793  008FEC  0012               	return	
 30794  008FEE  0012               	return		;funcret
 30795  008FF0                     __end_of___ftsub:
 30796                           	opt stack 0
 30797                           tblptru	equ	0xFF8
 30798                           tblptrh	equ	0xFF7
 30799                           tblptrl	equ	0xFF6
 30800                           tablat	equ	0xFF5
 30801                           prodh	equ	0xFF4
 30802                           prodl	equ	0xFF3
 30803                           intcon	equ	0xFF2
 30804                           intcon2	equ	0xFF1
 30805                           indf0	equ	0xFEF
 30806                           postinc0	equ	0xFEE
 30807                           fsr0h	equ	0xFEA
 30808                           fsr0l	equ	0xFE9
 30809                           wreg	equ	0xFE8
 30810                           indf1	equ	0xFE7
 30811                           postdec1	equ	0xFE5
 30812                           fsr1h	equ	0xFE2
 30813                           fsr1l	equ	0xFE1
 30814                           indf2	equ	0xFDF
 30815                           postinc2	equ	0xFDE
 30816                           postdec2	equ	0xFDD
 30817                           fsr2h	equ	0xFDA
 30818                           fsr2l	equ	0xFD9
 30819                           status	equ	0xFD8
 30820                           
 30821 ;; *************** function ___ftadd *****************
 30822 ;; Defined at:
 30823 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
 30824 ;; Parameters:    Size  Location     Type
 30825 ;;  f1              3   79[BANK0 ] float 
 30826 ;;  f2              3   82[BANK0 ] float 
 30827 ;; Auto vars:     Size  Location     Type
 30828 ;;  exp1            1   90[BANK0 ] unsigned char 
 30829 ;;  exp2            1   89[BANK0 ] unsigned char 
 30830 ;;  sign            1   88[BANK0 ] unsigned char 
 30831 ;; Return value:  Size  Location     Type
 30832 ;;                  3   79[BANK0 ] float 
 30833 ;; Registers used:
 30834 ;;		wreg, status,2, status,0, cstack
 30835 ;; Tracked objects:
 30836 ;;		On entry : 0/0
 30837 ;;		On exit  : 0/0
 30838 ;;		Unchanged: 0/0
 30839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30840 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30841 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30842 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30843 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30844 ;;Total ram usage:       12 bytes
 30845 ;; Hardware stack levels used:    1
 30846 ;; Hardware stack levels required when called:    7
 30847 ;; This function calls:
 30848 ;;		___ftpack
 30849 ;; This function is called by:
 30850 ;;		_main
 30851 ;;		_Round
 30852 ;;		_sprintf
 30853 ;;		___ftsub
 30854 ;; This function uses a non-reentrant model
 30855 ;;
 30856                           
 30857                           	psect	text74
 30858  005B7A                     __ptext74:
 30859                           	opt stack 0
 30860  005B7A                     ___ftadd:
 30861                           	opt stack 22
 30862                           
 30863                           ;incstack = 0
 30864  005B7A  C0B1  F0B5         	movff	___ftadd@f1+2,??___ftadd
 30865  005B7E  0100               	movlb	0	; () banked
 30866  005B80  6BB6               	clrf	(??___ftadd+1)& (0+255),b
 30867  005B82  6BB7               	clrf	(??___ftadd+2)& (0+255),b
 30868  005B84  0100               	movlb	0	; () banked
 30869  005B86  35B0               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 30870  005B88  0100               	movlb	0	; () banked
 30871  005B8A  37B5               	rlcf	??___ftadd& (0+255),f,b
 30872  005B8C  E301               	bnc	u14661
 30873  005B8E  81B6               	bsf	(??___ftadd+1)& (0+255),0,b
 30874  005B90                     u14661:
 30875  005B90  0100               	movlb	0	; () banked
 30876  005B92  51B5               	movf	??___ftadd& (0+255),w,b
 30877  005B94  0100               	movlb	0	; () banked
 30878  005B96  6FBA               	movwf	___ftadd@exp1& (0+255),b
 30879  005B98  C0B4  F0B5         	movff	___ftadd@f2+2,??___ftadd
 30880  005B9C  0100               	movlb	0	; () banked
 30881  005B9E  6BB6               	clrf	(??___ftadd+1)& (0+255),b
 30882  005BA0  6BB7               	clrf	(??___ftadd+2)& (0+255),b
 30883  005BA2  0100               	movlb	0	; () banked
 30884  005BA4  35B3               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 30885  005BA6  0100               	movlb	0	; () banked
 30886  005BA8  37B5               	rlcf	??___ftadd& (0+255),f,b
 30887  005BAA  E301               	bnc	u14671
 30888  005BAC  81B6               	bsf	(??___ftadd+1)& (0+255),0,b
 30889  005BAE                     u14671:
 30890  005BAE  0100               	movlb	0	; () banked
 30891  005BB0  51B5               	movf	??___ftadd& (0+255),w,b
 30892  005BB2  0100               	movlb	0	; () banked
 30893  005BB4  6FB9               	movwf	___ftadd@exp2& (0+255),b
 30894                           
 30895                           ; BSR set to: 0
 30896  005BB6  0100               	movlb	0	; () banked
 30897  005BB8  51BA               	movf	___ftadd@exp1& (0+255),w,b
 30898  005BBA  0100               	movlb	0	; () banked
 30899  005BBC  B4D8               	btfsc	status,2,c
 30900  005BBE  D011               	goto	l2695
 30901                           
 30902                           ; BSR set to: 0
 30903  005BC0  0100               	movlb	0	; () banked
 30904  005BC2  51B9               	movf	___ftadd@exp2& (0+255),w,b
 30905  005BC4  0100               	movlb	0	; () banked
 30906  005BC6  5DBA               	subwf	___ftadd@exp1& (0+255),w,b
 30907  005BC8  B0D8               	btfsc	status,0,c
 30908  005BCA  D012               	goto	l12534
 30909                           
 30910                           ; BSR set to: 0
 30911  005BCC  0100               	movlb	0	; () banked
 30912  005BCE  51BA               	movf	___ftadd@exp1& (0+255),w,b
 30913  005BD0  0800               	sublw	0
 30914  005BD2  0100               	movlb	0	; () banked
 30915  005BD4  25B9               	addwf	___ftadd@exp2& (0+255),w,b
 30916  005BD6  0100               	movlb	0	; () banked
 30917  005BD8  6FB5               	movwf	??___ftadd& (0+255),b
 30918  005BDA  0E18               	movlw	24
 30919  005BDC  0100               	movlb	0	; () banked
 30920  005BDE  65B5               	cpfsgt	??___ftadd& (0+255),b
 30921  005BE0  D007               	goto	l12534
 30922  005BE2                     l2695:
 30923                           
 30924                           ; BSR set to: 0
 30925  005BE2  C0B2  F0AF         	movff	___ftadd@f2,?___ftadd
 30926  005BE6  C0B3  F0B0         	movff	___ftadd@f2+1,?___ftadd+1
 30927  005BEA  C0B4  F0B1         	movff	___ftadd@f2+2,?___ftadd+2
 30928  005BEE  0012               	return	
 30929  005BF0                     l12534:
 30930                           
 30931                           ; BSR set to: 0
 30932  005BF0  0100               	movlb	0	; () banked
 30933  005BF2  51B9               	movf	___ftadd@exp2& (0+255),w,b
 30934  005BF4  0100               	movlb	0	; () banked
 30935  005BF6  B4D8               	btfsc	status,2,c
 30936  005BF8  D011               	goto	l2699
 30937                           
 30938                           ; BSR set to: 0
 30939  005BFA  0100               	movlb	0	; () banked
 30940  005BFC  51BA               	movf	___ftadd@exp1& (0+255),w,b
 30941  005BFE  0100               	movlb	0	; () banked
 30942  005C00  5DB9               	subwf	___ftadd@exp2& (0+255),w,b
 30943  005C02  B0D8               	btfsc	status,0,c
 30944  005C04  D012               	goto	l12540
 30945                           
 30946                           ; BSR set to: 0
 30947  005C06  0100               	movlb	0	; () banked
 30948  005C08  51B9               	movf	___ftadd@exp2& (0+255),w,b
 30949  005C0A  0800               	sublw	0
 30950  005C0C  0100               	movlb	0	; () banked
 30951  005C0E  25BA               	addwf	___ftadd@exp1& (0+255),w,b
 30952  005C10  0100               	movlb	0	; () banked
 30953  005C12  6FB5               	movwf	??___ftadd& (0+255),b
 30954  005C14  0E18               	movlw	24
 30955  005C16  0100               	movlb	0	; () banked
 30956  005C18  65B5               	cpfsgt	??___ftadd& (0+255),b
 30957  005C1A  D007               	goto	l12540
 30958  005C1C                     l2699:
 30959                           
 30960                           ; BSR set to: 0
 30961  005C1C  C0AF  F0AF         	movff	___ftadd@f1,?___ftadd
 30962  005C20  C0B0  F0B0         	movff	___ftadd@f1+1,?___ftadd+1
 30963  005C24  C0B1  F0B1         	movff	___ftadd@f1+2,?___ftadd+2
 30964  005C28  0012               	return	
 30965  005C2A                     l12540:
 30966                           
 30967                           ; BSR set to: 0
 30968  005C2A  0E06               	movlw	6
 30969  005C2C  0100               	movlb	0	; () banked
 30970  005C2E  6FB8               	movwf	___ftadd@sign& (0+255),b
 30971                           
 30972                           ; BSR set to: 0
 30973  005C30  0100               	movlb	0	; () banked
 30974  005C32  AFB1               	btfss	(___ftadd@f1+2)& (0+255),7,b
 30975  005C34  D003               	goto	l12546
 30976                           
 30977                           ; BSR set to: 0
 30978  005C36  0100               	movlb	0	; () banked
 30979  005C38  8FB8               	bsf	___ftadd@sign& (0+255),7,b
 30980  005C3A  D000               	goto	l12546
 30981  005C3C                     l12546:
 30982                           
 30983                           ; BSR set to: 0
 30984  005C3C  0100               	movlb	0	; () banked
 30985  005C3E  AFB4               	btfss	(___ftadd@f2+2)& (0+255),7,b
 30986  005C40  D002               	goto	l2701
 30987                           
 30988                           ; BSR set to: 0
 30989  005C42  0100               	movlb	0	; () banked
 30990  005C44  8DB8               	bsf	___ftadd@sign& (0+255),6,b
 30991  005C46                     l2701:
 30992                           
 30993                           ; BSR set to: 0
 30994  005C46  0100               	movlb	0	; () banked
 30995  005C48  8FB0               	bsf	(___ftadd@f1+1)& (0+255),7,b
 30996                           
 30997                           ; BSR set to: 0
 30998  005C4A  0EFF               	movlw	255
 30999  005C4C  0100               	movlb	0	; () banked
 31000  005C4E  17AF               	andwf	___ftadd@f1& (0+255),f,b
 31001  005C50  0EFF               	movlw	255
 31002  005C52  0100               	movlb	0	; () banked
 31003  005C54  17B0               	andwf	(___ftadd@f1+1)& (0+255),f,b
 31004  005C56  0E00               	movlw	0
 31005  005C58  0100               	movlb	0	; () banked
 31006  005C5A  17B1               	andwf	(___ftadd@f1+2)& (0+255),f,b
 31007  005C5C  0100               	movlb	0	; () banked
 31008  005C5E  8FB3               	bsf	(___ftadd@f2+1)& (0+255),7,b
 31009                           
 31010                           ; BSR set to: 0
 31011  005C60  0EFF               	movlw	255
 31012  005C62  0100               	movlb	0	; () banked
 31013  005C64  17B2               	andwf	___ftadd@f2& (0+255),f,b
 31014  005C66  0EFF               	movlw	255
 31015  005C68  0100               	movlb	0	; () banked
 31016  005C6A  17B3               	andwf	(___ftadd@f2+1)& (0+255),f,b
 31017  005C6C  0E00               	movlw	0
 31018  005C6E  0100               	movlb	0	; () banked
 31019  005C70  17B4               	andwf	(___ftadd@f2+2)& (0+255),f,b
 31020                           
 31021                           ; BSR set to: 0
 31022  005C72  0100               	movlb	0	; () banked
 31023  005C74  51B9               	movf	___ftadd@exp2& (0+255),w,b
 31024  005C76  0100               	movlb	0	; () banked
 31025  005C78  5DBA               	subwf	___ftadd@exp1& (0+255),w,b
 31026  005C7A  B0D8               	btfsc	status,0,c
 31027  005C7C  D028               	goto	l12566
 31028  005C7E                     l12556:
 31029                           
 31030                           ; BSR set to: 0
 31031  005C7E  0100               	movlb	0	; () banked
 31032  005C80  90D8               	bcf	status,0,c
 31033  005C82  37B2               	rlcf	___ftadd@f2& (0+255),f,b
 31034  005C84  37B3               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 31035  005C86  37B4               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 31036  005C88  0100               	movlb	0	; () banked
 31037  005C8A  07B9               	decf	___ftadd@exp2& (0+255),f,b
 31038                           
 31039                           ; BSR set to: 0
 31040  005C8C  0100               	movlb	0	; () banked
 31041  005C8E  51BA               	movf	___ftadd@exp1& (0+255),w,b
 31042  005C90  0100               	movlb	0	; () banked
 31043  005C92  19B9               	xorwf	___ftadd@exp2& (0+255),w,b
 31044  005C94  B4D8               	btfsc	status,2,c
 31045  005C96  D013               	goto	l12564
 31046                           
 31047                           ; BSR set to: 0
 31048  005C98  0100               	movlb	0	; () banked
 31049  005C9A  07B8               	decf	___ftadd@sign& (0+255),f,b
 31050  005C9C  C0B8  F0B5         	movff	___ftadd@sign,??___ftadd
 31051  005CA0  0E07               	movlw	7
 31052  005CA2  0100               	movlb	0	; () banked
 31053  005CA4  17B5               	andwf	??___ftadd& (0+255),f,b
 31054  005CA6  B4D8               	btfsc	status,2,c
 31055  005CA8  D00A               	goto	l12564
 31056  005CAA  D7E9               	goto	l12556
 31057                           
 31058                           ; BSR set to: 0
 31059                           
 31060                           ; BSR set to: 0
 31061  005CAC  D008               	goto	l12564
 31062  005CAE                     l12562:
 31063                           
 31064                           ; BSR set to: 0
 31065  005CAE  0100               	movlb	0	; () banked
 31066  005CB0  90D8               	bcf	status,0,c
 31067  005CB2  33B1               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 31068  005CB4  33B0               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 31069  005CB6  33AF               	rrcf	___ftadd@f1& (0+255),f,b
 31070  005CB8  0100               	movlb	0	; () banked
 31071  005CBA  2BBA               	incf	___ftadd@exp1& (0+255),f,b
 31072  005CBC  D000               	goto	l12564
 31073  005CBE                     l12564:
 31074                           
 31075                           ; BSR set to: 0
 31076  005CBE  0100               	movlb	0	; () banked
 31077  005CC0  51B9               	movf	___ftadd@exp2& (0+255),w,b
 31078  005CC2  0100               	movlb	0	; () banked
 31079  005CC4  19BA               	xorwf	___ftadd@exp1& (0+255),w,b
 31080  005CC6  B4D8               	btfsc	status,2,c
 31081  005CC8  D030               	goto	l2710
 31082  005CCA  D7F1               	goto	l12562
 31083                           
 31084                           ; BSR set to: 0
 31085  005CCC  D02E               	goto	l2710
 31086  005CCE                     l12566:
 31087                           
 31088                           ; BSR set to: 0
 31089  005CCE  0100               	movlb	0	; () banked
 31090  005CD0  51BA               	movf	___ftadd@exp1& (0+255),w,b
 31091  005CD2  0100               	movlb	0	; () banked
 31092  005CD4  5DB9               	subwf	___ftadd@exp2& (0+255),w,b
 31093  005CD6  B0D8               	btfsc	status,0,c
 31094  005CD8  D028               	goto	l2710
 31095  005CDA                     l12568:
 31096                           
 31097                           ; BSR set to: 0
 31098  005CDA  0100               	movlb	0	; () banked
 31099  005CDC  90D8               	bcf	status,0,c
 31100  005CDE  37AF               	rlcf	___ftadd@f1& (0+255),f,b
 31101  005CE0  37B0               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 31102  005CE2  37B1               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 31103  005CE4  0100               	movlb	0	; () banked
 31104  005CE6  07BA               	decf	___ftadd@exp1& (0+255),f,b
 31105                           
 31106                           ; BSR set to: 0
 31107  005CE8  0100               	movlb	0	; () banked
 31108  005CEA  51BA               	movf	___ftadd@exp1& (0+255),w,b
 31109  005CEC  0100               	movlb	0	; () banked
 31110  005CEE  19B9               	xorwf	___ftadd@exp2& (0+255),w,b
 31111  005CF0  B4D8               	btfsc	status,2,c
 31112  005CF2  D013               	goto	l12576
 31113                           
 31114                           ; BSR set to: 0
 31115  005CF4  0100               	movlb	0	; () banked
 31116  005CF6  07B8               	decf	___ftadd@sign& (0+255),f,b
 31117  005CF8  C0B8  F0B5         	movff	___ftadd@sign,??___ftadd
 31118  005CFC  0E07               	movlw	7
 31119  005CFE  0100               	movlb	0	; () banked
 31120  005D00  17B5               	andwf	??___ftadd& (0+255),f,b
 31121  005D02  B4D8               	btfsc	status,2,c
 31122  005D04  D00A               	goto	l12576
 31123  005D06  D7E9               	goto	l12568
 31124                           
 31125                           ; BSR set to: 0
 31126                           
 31127                           ; BSR set to: 0
 31128  005D08  D008               	goto	l12576
 31129  005D0A                     l12574:
 31130                           
 31131                           ; BSR set to: 0
 31132  005D0A  0100               	movlb	0	; () banked
 31133  005D0C  90D8               	bcf	status,0,c
 31134  005D0E  33B4               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 31135  005D10  33B3               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 31136  005D12  33B2               	rrcf	___ftadd@f2& (0+255),f,b
 31137  005D14  0100               	movlb	0	; () banked
 31138  005D16  2BB9               	incf	___ftadd@exp2& (0+255),f,b
 31139  005D18  D000               	goto	l12576
 31140  005D1A                     l12576:
 31141                           
 31142                           ; BSR set to: 0
 31143  005D1A  0100               	movlb	0	; () banked
 31144  005D1C  51B9               	movf	___ftadd@exp2& (0+255),w,b
 31145  005D1E  0100               	movlb	0	; () banked
 31146  005D20  19BA               	xorwf	___ftadd@exp1& (0+255),w,b
 31147  005D22  B4D8               	btfsc	status,2,c
 31148  005D24  D002               	goto	l2710
 31149  005D26  D7F1               	goto	l12574
 31150                           
 31151                           ; BSR set to: 0
 31152  005D28  D000               	goto	l2710
 31153  005D2A                     l2710:
 31154                           
 31155                           ; BSR set to: 0
 31156  005D2A  0100               	movlb	0	; () banked
 31157  005D2C  AFB8               	btfss	___ftadd@sign& (0+255),7,b
 31158  005D2E  D012               	goto	l2719
 31159                           
 31160                           ; BSR set to: 0
 31161  005D30  0EFF               	movlw	255
 31162  005D32  0100               	movlb	0	; () banked
 31163  005D34  1BAF               	xorwf	___ftadd@f1& (0+255),f,b
 31164  005D36  0EFF               	movlw	255
 31165  005D38  0100               	movlb	0	; () banked
 31166  005D3A  1BB0               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 31167  005D3C  0EFF               	movlw	255
 31168  005D3E  0100               	movlb	0	; () banked
 31169  005D40  1BB1               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 31170  005D42  0E01               	movlw	1
 31171  005D44  0100               	movlb	0	; () banked
 31172  005D46  27AF               	addwf	___ftadd@f1& (0+255),f,b
 31173  005D48  0E00               	movlw	0
 31174  005D4A  0100               	movlb	0	; () banked
 31175  005D4C  23B0               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 31176  005D4E  0E00               	movlw	0
 31177  005D50  0100               	movlb	0	; () banked
 31178  005D52  23B1               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 31179  005D54                     l2719:
 31180                           
 31181                           ; BSR set to: 0
 31182  005D54  0100               	movlb	0	; () banked
 31183  005D56  ADB8               	btfss	___ftadd@sign& (0+255),6,b
 31184  005D58  D013               	goto	l12582
 31185                           
 31186                           ; BSR set to: 0
 31187  005D5A  0EFF               	movlw	255
 31188  005D5C  0100               	movlb	0	; () banked
 31189  005D5E  1BB2               	xorwf	___ftadd@f2& (0+255),f,b
 31190  005D60  0EFF               	movlw	255
 31191  005D62  0100               	movlb	0	; () banked
 31192  005D64  1BB3               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 31193  005D66  0EFF               	movlw	255
 31194  005D68  0100               	movlb	0	; () banked
 31195  005D6A  1BB4               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 31196  005D6C  0E01               	movlw	1
 31197  005D6E  0100               	movlb	0	; () banked
 31198  005D70  27B2               	addwf	___ftadd@f2& (0+255),f,b
 31199  005D72  0E00               	movlw	0
 31200  005D74  0100               	movlb	0	; () banked
 31201  005D76  23B3               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 31202  005D78  0E00               	movlw	0
 31203  005D7A  0100               	movlb	0	; () banked
 31204  005D7C  23B4               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 31205  005D7E  D000               	goto	l12582
 31206  005D80                     l12582:
 31207                           
 31208                           ; BSR set to: 0
 31209  005D80  0E00               	movlw	0
 31210  005D82  0100               	movlb	0	; () banked
 31211  005D84  6FB8               	movwf	___ftadd@sign& (0+255),b
 31212                           
 31213                           ; BSR set to: 0
 31214  005D86  0100               	movlb	0	; () banked
 31215  005D88  51AF               	movf	___ftadd@f1& (0+255),w,b
 31216  005D8A  0100               	movlb	0	; () banked
 31217  005D8C  27B2               	addwf	___ftadd@f2& (0+255),f,b
 31218  005D8E  0100               	movlb	0	; () banked
 31219  005D90  51B0               	movf	(___ftadd@f1+1)& (0+255),w,b
 31220  005D92  0100               	movlb	0	; () banked
 31221  005D94  23B3               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 31222  005D96  0100               	movlb	0	; () banked
 31223  005D98  51B1               	movf	(___ftadd@f1+2)& (0+255),w,b
 31224  005D9A  0100               	movlb	0	; () banked
 31225  005D9C  23B4               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 31226                           
 31227                           ; BSR set to: 0
 31228  005D9E  0100               	movlb	0	; () banked
 31229  005DA0  AFB4               	btfss	(___ftadd@f2+2)& (0+255),7,b
 31230  005DA2  D016               	goto	l12592
 31231                           
 31232                           ; BSR set to: 0
 31233  005DA4  0EFF               	movlw	255
 31234  005DA6  0100               	movlb	0	; () banked
 31235  005DA8  1BB2               	xorwf	___ftadd@f2& (0+255),f,b
 31236  005DAA  0EFF               	movlw	255
 31237  005DAC  0100               	movlb	0	; () banked
 31238  005DAE  1BB3               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 31239  005DB0  0EFF               	movlw	255
 31240  005DB2  0100               	movlb	0	; () banked
 31241  005DB4  1BB4               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 31242  005DB6  0E01               	movlw	1
 31243  005DB8  0100               	movlb	0	; () banked
 31244  005DBA  27B2               	addwf	___ftadd@f2& (0+255),f,b
 31245  005DBC  0E00               	movlw	0
 31246  005DBE  0100               	movlb	0	; () banked
 31247  005DC0  23B3               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 31248  005DC2  0E00               	movlw	0
 31249  005DC4  0100               	movlb	0	; () banked
 31250  005DC6  23B4               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 31251                           
 31252                           ; BSR set to: 0
 31253  005DC8  0E01               	movlw	1
 31254  005DCA  0100               	movlb	0	; () banked
 31255  005DCC  6FB8               	movwf	___ftadd@sign& (0+255),b
 31256  005DCE  D000               	goto	l12592
 31257  005DD0                     l12592:
 31258                           
 31259                           ; BSR set to: 0
 31260  005DD0  C0B2  F07C         	movff	___ftadd@f2,___ftpack@arg
 31261  005DD4  C0B3  F07D         	movff	___ftadd@f2+1,___ftpack@arg+1
 31262  005DD8  C0B4  F07E         	movff	___ftadd@f2+2,___ftpack@arg+2
 31263  005DDC  C0BA  F07F         	movff	___ftadd@exp1,___ftpack@exp
 31264  005DE0  C0B8  F080         	movff	___ftadd@sign,___ftpack@sign
 31265  005DE4  EC2B  F03B         	call	___ftpack	;wreg free
 31266  005DE8  C07C  F0AF         	movff	?___ftpack,?___ftadd
 31267  005DEC  C07D  F0B0         	movff	?___ftpack+1,?___ftadd+1
 31268  005DF0  C07E  F0B1         	movff	?___ftpack+2,?___ftadd+2
 31269  005DF4  0012               	return	
 31270  005DF6  0012               	return		;funcret
 31271  005DF8                     __end_of___ftadd:
 31272                           	opt stack 0
 31273                           tblptru	equ	0xFF8
 31274                           tblptrh	equ	0xFF7
 31275                           tblptrl	equ	0xFF6
 31276                           tablat	equ	0xFF5
 31277                           prodh	equ	0xFF4
 31278                           prodl	equ	0xFF3
 31279                           intcon	equ	0xFF2
 31280                           intcon2	equ	0xFF1
 31281                           indf0	equ	0xFEF
 31282                           postinc0	equ	0xFEE
 31283                           fsr0h	equ	0xFEA
 31284                           fsr0l	equ	0xFE9
 31285                           wreg	equ	0xFE8
 31286                           indf1	equ	0xFE7
 31287                           postdec1	equ	0xFE5
 31288                           fsr1h	equ	0xFE2
 31289                           fsr1l	equ	0xFE1
 31290                           indf2	equ	0xFDF
 31291                           postinc2	equ	0xFDE
 31292                           postdec2	equ	0xFDD
 31293                           fsr2h	equ	0xFDA
 31294                           fsr2l	equ	0xFD9
 31295                           status	equ	0xFD8
 31296                           
 31297 ;; *************** function ___ftpack *****************
 31298 ;; Defined at:
 31299 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 31300 ;; Parameters:    Size  Location     Type
 31301 ;;  arg             3   28[BANK0 ] unsigned um
 31302 ;;  exp             1   31[BANK0 ] unsigned char 
 31303 ;;  sign            1   32[BANK0 ] unsigned char 
 31304 ;; Auto vars:     Size  Location     Type
 31305 ;;		None
 31306 ;; Return value:  Size  Location     Type
 31307 ;;                  3   28[BANK0 ] float 
 31308 ;; Registers used:
 31309 ;;		wreg, status,2, status,0
 31310 ;; Tracked objects:
 31311 ;;		On entry : 0/0
 31312 ;;		On exit  : 0/0
 31313 ;;		Unchanged: 0/0
 31314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31315 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31317 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31318 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31319 ;;Total ram usage:        8 bytes
 31320 ;; Hardware stack levels used:    1
 31321 ;; Hardware stack levels required when called:    6
 31322 ;; This function calls:
 31323 ;;		Nothing
 31324 ;; This function is called by:
 31325 ;;		___altoft
 31326 ;;		___ftadd
 31327 ;;		___ftdiv
 31328 ;;		___ftmul
 31329 ;;		___lltoft
 31330 ;;		___lwtoft
 31331 ;; This function uses a non-reentrant model
 31332 ;;
 31333                           
 31334                           	psect	text75
 31335  007656                     __ptext75:
 31336                           	opt stack 0
 31337  007656                     ___ftpack:
 31338                           	opt stack 22
 31339                           
 31340                           ;incstack = 0
 31341  007656  0100               	movlb	0	; () banked
 31342  007658  517F               	movf	___ftpack@exp& (0+255),w,b
 31343  00765A  0100               	movlb	0	; () banked
 31344  00765C  B4D8               	btfsc	status,2,c
 31345  00765E  D008               	goto	l12440
 31346                           
 31347                           ; BSR set to: 0
 31348  007660  0100               	movlb	0	; () banked
 31349  007662  517C               	movf	___ftpack@arg& (0+255),w,b
 31350  007664  0100               	movlb	0	; () banked
 31351  007666  117D               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 31352  007668  0100               	movlb	0	; () banked
 31353  00766A  117E               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 31354  00766C  A4D8               	btfss	status,2,c
 31355  00766E  D013               	goto	l12446
 31356  007670                     l12440:
 31357                           
 31358                           ; BSR set to: 0
 31359  007670  0E00               	movlw	0
 31360  007672  0100               	movlb	0	; () banked
 31361  007674  6F7C               	movwf	?___ftpack& (0+255),b
 31362  007676  0E00               	movlw	0
 31363  007678  0100               	movlb	0	; () banked
 31364  00767A  6F7D               	movwf	(?___ftpack+1)& (0+255),b
 31365  00767C  0E00               	movlw	0
 31366  00767E  0100               	movlb	0	; () banked
 31367  007680  6F7E               	movwf	(?___ftpack+2)& (0+255),b
 31368                           
 31369                           ; BSR set to: 0
 31370  007682  0012               	return	
 31371                           
 31372                           ; BSR set to: 0
 31373  007684  D008               	goto	l12446
 31374  007686                     l12444:
 31375                           
 31376                           ; BSR set to: 0
 31377  007686  0100               	movlb	0	; () banked
 31378  007688  2B7F               	incf	___ftpack@exp& (0+255),f,b
 31379  00768A  0100               	movlb	0	; () banked
 31380  00768C  90D8               	bcf	status,0,c
 31381  00768E  337E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 31382  007690  337D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 31383  007692  337C               	rrcf	___ftpack@arg& (0+255),f,b
 31384  007694  D000               	goto	l12446
 31385  007696                     l12446:
 31386                           
 31387                           ; BSR set to: 0
 31388  007696  0E00               	movlw	0
 31389  007698  0100               	movlb	0	; () banked
 31390  00769A  157C               	andwf	___ftpack@arg& (0+255),w,b
 31391  00769C  0100               	movlb	0	; () banked
 31392  00769E  6F81               	movwf	??___ftpack& (0+255),b
 31393  0076A0  0E00               	movlw	0
 31394  0076A2  0100               	movlb	0	; () banked
 31395  0076A4  157D               	andwf	(___ftpack@arg+1)& (0+255),w,b
 31396  0076A6  0100               	movlb	0	; () banked
 31397  0076A8  6F82               	movwf	(??___ftpack+1)& (0+255),b
 31398  0076AA  0EFE               	movlw	254
 31399  0076AC  0100               	movlb	0	; () banked
 31400  0076AE  157E               	andwf	(___ftpack@arg+2)& (0+255),w,b
 31401  0076B0  0100               	movlb	0	; () banked
 31402  0076B2  6F83               	movwf	(??___ftpack+2)& (0+255),b
 31403  0076B4  0100               	movlb	0	; () banked
 31404  0076B6  5181               	movf	??___ftpack& (0+255),w,b
 31405  0076B8  0100               	movlb	0	; () banked
 31406  0076BA  1182               	iorwf	(??___ftpack+1)& (0+255),w,b
 31407  0076BC  0100               	movlb	0	; () banked
 31408  0076BE  1183               	iorwf	(??___ftpack+2)& (0+255),w,b
 31409  0076C0  B4D8               	btfsc	status,2,c
 31410  0076C2  D013               	goto	l12452
 31411  0076C4  D7E0               	goto	l12444
 31412                           
 31413                           ; BSR set to: 0
 31414  0076C6  D011               	goto	l12452
 31415  0076C8                     l12448:
 31416                           
 31417                           ; BSR set to: 0
 31418  0076C8  0100               	movlb	0	; () banked
 31419  0076CA  2B7F               	incf	___ftpack@exp& (0+255),f,b
 31420                           
 31421                           ; BSR set to: 0
 31422  0076CC  0E01               	movlw	1
 31423  0076CE  0100               	movlb	0	; () banked
 31424  0076D0  277C               	addwf	___ftpack@arg& (0+255),f,b
 31425  0076D2  0E00               	movlw	0
 31426  0076D4  0100               	movlb	0	; () banked
 31427  0076D6  237D               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 31428  0076D8  0E00               	movlw	0
 31429  0076DA  0100               	movlb	0	; () banked
 31430  0076DC  237E               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 31431  0076DE  0100               	movlb	0	; () banked
 31432  0076E0  90D8               	bcf	status,0,c
 31433  0076E2  337E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 31434  0076E4  337D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 31435  0076E6  337C               	rrcf	___ftpack@arg& (0+255),f,b
 31436  0076E8  D000               	goto	l12452
 31437  0076EA                     l12452:
 31438                           
 31439                           ; BSR set to: 0
 31440  0076EA  0E00               	movlw	0
 31441  0076EC  0100               	movlb	0	; () banked
 31442  0076EE  157C               	andwf	___ftpack@arg& (0+255),w,b
 31443  0076F0  0100               	movlb	0	; () banked
 31444  0076F2  6F81               	movwf	??___ftpack& (0+255),b
 31445  0076F4  0E00               	movlw	0
 31446  0076F6  0100               	movlb	0	; () banked
 31447  0076F8  157D               	andwf	(___ftpack@arg+1)& (0+255),w,b
 31448  0076FA  0100               	movlb	0	; () banked
 31449  0076FC  6F82               	movwf	(??___ftpack+1)& (0+255),b
 31450  0076FE  0EFF               	movlw	255
 31451  007700  0100               	movlb	0	; () banked
 31452  007702  157E               	andwf	(___ftpack@arg+2)& (0+255),w,b
 31453  007704  0100               	movlb	0	; () banked
 31454  007706  6F83               	movwf	(??___ftpack+2)& (0+255),b
 31455  007708  0100               	movlb	0	; () banked
 31456  00770A  5181               	movf	??___ftpack& (0+255),w,b
 31457  00770C  0100               	movlb	0	; () banked
 31458  00770E  1182               	iorwf	(??___ftpack+1)& (0+255),w,b
 31459  007710  0100               	movlb	0	; () banked
 31460  007712  1183               	iorwf	(??___ftpack+2)& (0+255),w,b
 31461  007714  B4D8               	btfsc	status,2,c
 31462  007716  D00A               	goto	l12456
 31463  007718  D7D7               	goto	l12448
 31464                           
 31465                           ; BSR set to: 0
 31466  00771A  D008               	goto	l12456
 31467  00771C                     l12454:
 31468                           
 31469                           ; BSR set to: 0
 31470  00771C  0100               	movlb	0	; () banked
 31471  00771E  077F               	decf	___ftpack@exp& (0+255),f,b
 31472  007720  0100               	movlb	0	; () banked
 31473  007722  90D8               	bcf	status,0,c
 31474  007724  377C               	rlcf	___ftpack@arg& (0+255),f,b
 31475  007726  377D               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 31476  007728  377E               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 31477  00772A  D000               	goto	l12456
 31478  00772C                     l12456:
 31479                           
 31480                           ; BSR set to: 0
 31481  00772C  0100               	movlb	0	; () banked
 31482  00772E  BF7D               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 31483  007730  D005               	goto	l2666
 31484                           
 31485                           ; BSR set to: 0
 31486  007732  0E02               	movlw	2
 31487  007734  0100               	movlb	0	; () banked
 31488  007736  617F               	cpfslt	___ftpack@exp& (0+255),b
 31489  007738  D7F1               	goto	l12454
 31490  00773A  D000               	goto	l2666
 31491  00773C                     l2666:
 31492                           
 31493                           ; BSR set to: 0
 31494  00773C  0100               	movlb	0	; () banked
 31495  00773E  B17F               	btfsc	___ftpack@exp& (0+255),0,b
 31496  007740  D003               	goto	l12462
 31497                           
 31498                           ; BSR set to: 0
 31499  007742  0100               	movlb	0	; () banked
 31500  007744  9F7D               	bcf	(___ftpack@arg+1)& (0+255),7,b
 31501  007746  D000               	goto	l12462
 31502  007748                     l12462:
 31503                           
 31504                           ; BSR set to: 0
 31505  007748  0100               	movlb	0	; () banked
 31506  00774A  90D8               	bcf	status,0,c
 31507  00774C  337F               	rrcf	___ftpack@exp& (0+255),f,b
 31508  00774E  0100               	movlb	0	; () banked
 31509  007750  517F               	movf	___ftpack@exp& (0+255),w,b
 31510  007752  0100               	movlb	0	; () banked
 31511  007754  137E               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 31512                           
 31513                           ; BSR set to: 0
 31514  007756  0100               	movlb	0	; () banked
 31515  007758  5180               	movf	___ftpack@sign& (0+255),w,b
 31516  00775A  0100               	movlb	0	; () banked
 31517  00775C  B4D8               	btfsc	status,2,c
 31518  00775E  D003               	goto	l12468
 31519                           
 31520                           ; BSR set to: 0
 31521  007760  0100               	movlb	0	; () banked
 31522  007762  8F7E               	bsf	(___ftpack@arg+2)& (0+255),7,b
 31523  007764  D000               	goto	l12468
 31524  007766                     l12468:
 31525                           
 31526                           ; BSR set to: 0
 31527  007766  C07C  F07C         	movff	___ftpack@arg,?___ftpack
 31528  00776A  C07D  F07D         	movff	___ftpack@arg+1,?___ftpack+1
 31529  00776E  C07E  F07E         	movff	___ftpack@arg+2,?___ftpack+2
 31530  007772  0012               	return	
 31531                           
 31532                           ; BSR set to: 0
 31533                           
 31534                           ; BSR set to: 0
 31535  007774  0012               	return		;funcret
 31536  007776                     __end_of___ftpack:
 31537                           	opt stack 0
 31538                           tblptru	equ	0xFF8
 31539                           tblptrh	equ	0xFF7
 31540                           tblptrl	equ	0xFF6
 31541                           tablat	equ	0xFF5
 31542                           prodh	equ	0xFF4
 31543                           prodl	equ	0xFF3
 31544                           intcon	equ	0xFF2
 31545                           intcon2	equ	0xFF1
 31546                           indf0	equ	0xFEF
 31547                           postinc0	equ	0xFEE
 31548                           fsr0h	equ	0xFEA
 31549                           fsr0l	equ	0xFE9
 31550                           wreg	equ	0xFE8
 31551                           indf1	equ	0xFE7
 31552                           postdec1	equ	0xFE5
 31553                           fsr1h	equ	0xFE2
 31554                           fsr1l	equ	0xFE1
 31555                           indf2	equ	0xFDF
 31556                           postinc2	equ	0xFDE
 31557                           postdec2	equ	0xFDD
 31558                           fsr2h	equ	0xFDA
 31559                           fsr2l	equ	0xFD9
 31560                           status	equ	0xFD8
 31561                           
 31562 ;; *************** function ___ftneg *****************
 31563 ;; Defined at:
 31564 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
 31565 ;; Parameters:    Size  Location     Type
 31566 ;;  f1              3   28[BANK0 ] float 
 31567 ;; Auto vars:     Size  Location     Type
 31568 ;;		None
 31569 ;; Return value:  Size  Location     Type
 31570 ;;                  3   28[BANK0 ] float 
 31571 ;; Registers used:
 31572 ;;		wreg, status,2, status,0
 31573 ;; Tracked objects:
 31574 ;;		On entry : 0/0
 31575 ;;		On exit  : 0/0
 31576 ;;		Unchanged: 0/0
 31577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31578 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31581 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31582 ;;Total ram usage:        3 bytes
 31583 ;; Hardware stack levels used:    1
 31584 ;; Hardware stack levels required when called:    6
 31585 ;; This function calls:
 31586 ;;		Nothing
 31587 ;; This function is called by:
 31588 ;;		_sprintf
 31589 ;; This function uses a non-reentrant model
 31590 ;;
 31591                           
 31592                           	psect	text76
 31593  0092A0                     __ptext76:
 31594                           	opt stack 0
 31595  0092A0                     ___ftneg:
 31596                           	opt stack 22
 31597                           
 31598                           ; BSR set to: 0
 31599                           ;incstack = 0
 31600  0092A0  0100               	movlb	0	; () banked
 31601  0092A2  517C               	movf	___ftneg@f1& (0+255),w,b
 31602  0092A4  0100               	movlb	0	; () banked
 31603  0092A6  117D               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 31604  0092A8  0100               	movlb	0	; () banked
 31605  0092AA  117E               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 31606  0092AC  B4D8               	btfsc	status,2,c
 31607  0092AE  D009               	goto	l2769
 31608                           
 31609                           ; BSR set to: 0
 31610  0092B0  0E00               	movlw	0
 31611  0092B2  0100               	movlb	0	; () banked
 31612  0092B4  1B7C               	xorwf	___ftneg@f1& (0+255),f,b
 31613  0092B6  0E00               	movlw	0
 31614  0092B8  0100               	movlb	0	; () banked
 31615  0092BA  1B7D               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 31616  0092BC  0E80               	movlw	128
 31617  0092BE  0100               	movlb	0	; () banked
 31618  0092C0  1B7E               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 31619  0092C2                     l2769:
 31620                           
 31621                           ; BSR set to: 0
 31622  0092C2  C07C  F07C         	movff	___ftneg@f1,?___ftneg
 31623  0092C6  C07D  F07D         	movff	___ftneg@f1+1,?___ftneg+1
 31624  0092CA  C07E  F07E         	movff	___ftneg@f1+2,?___ftneg+2
 31625                           
 31626                           ; BSR set to: 0
 31627  0092CE  0012               	return		;funcret
 31628  0092D0                     __end_of___ftneg:
 31629                           	opt stack 0
 31630                           tblptru	equ	0xFF8
 31631                           tblptrh	equ	0xFF7
 31632                           tblptrl	equ	0xFF6
 31633                           tablat	equ	0xFF5
 31634                           prodh	equ	0xFF4
 31635                           prodl	equ	0xFF3
 31636                           intcon	equ	0xFF2
 31637                           intcon2	equ	0xFF1
 31638                           indf0	equ	0xFEF
 31639                           postinc0	equ	0xFEE
 31640                           fsr0h	equ	0xFEA
 31641                           fsr0l	equ	0xFE9
 31642                           wreg	equ	0xFE8
 31643                           indf1	equ	0xFE7
 31644                           postdec1	equ	0xFE5
 31645                           fsr1h	equ	0xFE2
 31646                           fsr1l	equ	0xFE1
 31647                           indf2	equ	0xFDF
 31648                           postinc2	equ	0xFDE
 31649                           postdec2	equ	0xFDD
 31650                           fsr2h	equ	0xFDA
 31651                           fsr2l	equ	0xFD9
 31652                           status	equ	0xFD8
 31653                           
 31654 ;; *************** function ___ftge *****************
 31655 ;; Defined at:
 31656 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
 31657 ;; Parameters:    Size  Location     Type
 31658 ;;  ff1             3   28[BANK0 ] float 
 31659 ;;  ff2             3   31[BANK0 ] float 
 31660 ;; Auto vars:     Size  Location     Type
 31661 ;;		None
 31662 ;; Return value:  Size  Location     Type
 31663 ;;		None               void
 31664 ;; Registers used:
 31665 ;;		wreg, status,2, status,0
 31666 ;; Tracked objects:
 31667 ;;		On entry : 0/0
 31668 ;;		On exit  : 0/0
 31669 ;;		Unchanged: 0/0
 31670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31671 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31673 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31674 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31675 ;;Total ram usage:        9 bytes
 31676 ;; Hardware stack levels used:    1
 31677 ;; Hardware stack levels required when called:    6
 31678 ;; This function calls:
 31679 ;;		Nothing
 31680 ;; This function is called by:
 31681 ;;		_main
 31682 ;;		_sprintf
 31683 ;; This function uses a non-reentrant model
 31684 ;;
 31685                           
 31686                           	psect	text77
 31687  007D82                     __ptext77:
 31688                           	opt stack 0
 31689  007D82                     ___ftge:
 31690                           	opt stack 24
 31691                           
 31692                           ; BSR set to: 0
 31693                           ;incstack = 0
 31694  007D82  0100               	movlb	0	; () banked
 31695  007D84  AF7E               	btfss	(___ftge@ff1+2)& (0+255),7,b
 31696  007D86  D01E               	goto	l13072
 31697                           
 31698                           ; BSR set to: 0
 31699  007D88  C07C  F082         	movff	___ftge@ff1,??___ftge
 31700  007D8C  C07D  F083         	movff	___ftge@ff1+1,??___ftge+1
 31701  007D90  C07E  F084         	movff	___ftge@ff1+2,??___ftge+2
 31702  007D94  0100               	movlb	0	; () banked
 31703  007D96  1F82               	comf	??___ftge& (0+255),f,b
 31704  007D98  1F83               	comf	(??___ftge+1)& (0+255),f,b
 31705  007D9A  1F84               	comf	(??___ftge+2)& (0+255),f,b
 31706  007D9C  2B82               	incf	??___ftge& (0+255),f,b
 31707  007D9E  0E00               	movlw	0
 31708  007DA0  2383               	addwfc	(??___ftge+1)& (0+255),f,b
 31709  007DA2  2384               	addwfc	(??___ftge+2)& (0+255),f,b
 31710  007DA4  0E00               	movlw	0
 31711  007DA6  0100               	movlb	0	; () banked
 31712  007DA8  2582               	addwf	??___ftge& (0+255),w,b
 31713  007DAA  0100               	movlb	0	; () banked
 31714  007DAC  6F7C               	movwf	___ftge@ff1& (0+255),b
 31715  007DAE  0E00               	movlw	0
 31716  007DB0  0100               	movlb	0	; () banked
 31717  007DB2  2183               	addwfc	(??___ftge+1)& (0+255),w,b
 31718  007DB4  0100               	movlb	0	; () banked
 31719  007DB6  6F7D               	movwf	(___ftge@ff1+1)& (0+255),b
 31720  007DB8  0E80               	movlw	128
 31721  007DBA  0100               	movlb	0	; () banked
 31722  007DBC  2184               	addwfc	(??___ftge+2)& (0+255),w,b
 31723  007DBE  0100               	movlb	0	; () banked
 31724  007DC0  6F7E               	movwf	(___ftge@ff1+2)& (0+255),b
 31725  007DC2  D000               	goto	l13072
 31726  007DC4                     l13072:
 31727                           
 31728                           ; BSR set to: 0
 31729  007DC4  0100               	movlb	0	; () banked
 31730  007DC6  AF81               	btfss	(___ftge@ff2+2)& (0+255),7,b
 31731  007DC8  D01E               	goto	l13076
 31732                           
 31733                           ; BSR set to: 0
 31734  007DCA  C07F  F082         	movff	___ftge@ff2,??___ftge
 31735  007DCE  C080  F083         	movff	___ftge@ff2+1,??___ftge+1
 31736  007DD2  C081  F084         	movff	___ftge@ff2+2,??___ftge+2
 31737  007DD6  0100               	movlb	0	; () banked
 31738  007DD8  1F82               	comf	??___ftge& (0+255),f,b
 31739  007DDA  1F83               	comf	(??___ftge+1)& (0+255),f,b
 31740  007DDC  1F84               	comf	(??___ftge+2)& (0+255),f,b
 31741  007DDE  2B82               	incf	??___ftge& (0+255),f,b
 31742  007DE0  0E00               	movlw	0
 31743  007DE2  2383               	addwfc	(??___ftge+1)& (0+255),f,b
 31744  007DE4  2384               	addwfc	(??___ftge+2)& (0+255),f,b
 31745  007DE6  0E00               	movlw	0
 31746  007DE8  0100               	movlb	0	; () banked
 31747  007DEA  2582               	addwf	??___ftge& (0+255),w,b
 31748  007DEC  0100               	movlb	0	; () banked
 31749  007DEE  6F7F               	movwf	___ftge@ff2& (0+255),b
 31750  007DF0  0E00               	movlw	0
 31751  007DF2  0100               	movlb	0	; () banked
 31752  007DF4  2183               	addwfc	(??___ftge+1)& (0+255),w,b
 31753  007DF6  0100               	movlb	0	; () banked
 31754  007DF8  6F80               	movwf	(___ftge@ff2+1)& (0+255),b
 31755  007DFA  0E80               	movlw	128
 31756  007DFC  0100               	movlb	0	; () banked
 31757  007DFE  2184               	addwfc	(??___ftge+2)& (0+255),w,b
 31758  007E00  0100               	movlb	0	; () banked
 31759  007E02  6F81               	movwf	(___ftge@ff2+2)& (0+255),b
 31760  007E04  D000               	goto	l13076
 31761  007E06                     l13076:
 31762                           
 31763                           ; BSR set to: 0
 31764  007E06  0E00               	movlw	0
 31765  007E08  0100               	movlb	0	; () banked
 31766  007E0A  1B7C               	xorwf	___ftge@ff1& (0+255),f,b
 31767  007E0C  0E00               	movlw	0
 31768  007E0E  0100               	movlb	0	; () banked
 31769  007E10  1B7D               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 31770  007E12  0E80               	movlw	128
 31771  007E14  0100               	movlb	0	; () banked
 31772  007E16  1B7E               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 31773                           
 31774                           ; BSR set to: 0
 31775  007E18  0E00               	movlw	0
 31776  007E1A  0100               	movlb	0	; () banked
 31777  007E1C  1B7F               	xorwf	___ftge@ff2& (0+255),f,b
 31778  007E1E  0E00               	movlw	0
 31779  007E20  0100               	movlb	0	; () banked
 31780  007E22  1B80               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 31781  007E24  0E80               	movlw	128
 31782  007E26  0100               	movlb	0	; () banked
 31783  007E28  1B81               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 31784  007E2A  0100               	movlb	0	; () banked
 31785  007E2C  517F               	movf	___ftge@ff2& (0+255),w,b
 31786  007E2E  0100               	movlb	0	; () banked
 31787  007E30  5D7C               	subwf	___ftge@ff1& (0+255),w,b
 31788  007E32  0100               	movlb	0	; () banked
 31789  007E34  5180               	movf	(___ftge@ff2+1)& (0+255),w,b
 31790  007E36  0100               	movlb	0	; () banked
 31791  007E38  597D               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 31792  007E3A  0100               	movlb	0	; () banked
 31793  007E3C  5181               	movf	(___ftge@ff2+2)& (0+255),w,b
 31794  007E3E  0100               	movlb	0	; () banked
 31795  007E40  597E               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 31796  007E42  B0D8               	btfsc	status,0,c
 31797  007E44  D002               	goto	l13082
 31798                           
 31799                           ; BSR set to: 0
 31800  007E46  90D8               	bcf	status,0,c
 31801  007E48  0012               	return	
 31802  007E4A                     l13082:
 31803                           
 31804                           ; BSR set to: 0
 31805  007E4A  80D8               	bsf	status,0,c
 31806                           
 31807                           ; BSR set to: 0
 31808  007E4C  0012               	return	
 31809                           
 31810                           ; BSR set to: 0
 31811                           
 31812                           ; BSR set to: 0
 31813  007E4E  0012               	return		;funcret
 31814  007E50                     __end_of___ftge:
 31815                           	opt stack 0
 31816                           tblptru	equ	0xFF8
 31817                           tblptrh	equ	0xFF7
 31818                           tblptrl	equ	0xFF6
 31819                           tablat	equ	0xFF5
 31820                           prodh	equ	0xFF4
 31821                           prodl	equ	0xFF3
 31822                           intcon	equ	0xFF2
 31823                           intcon2	equ	0xFF1
 31824                           indf0	equ	0xFEF
 31825                           postinc0	equ	0xFEE
 31826                           fsr0h	equ	0xFEA
 31827                           fsr0l	equ	0xFE9
 31828                           wreg	equ	0xFE8
 31829                           indf1	equ	0xFE7
 31830                           postdec1	equ	0xFE5
 31831                           fsr1h	equ	0xFE2
 31832                           fsr1l	equ	0xFE1
 31833                           indf2	equ	0xFDF
 31834                           postinc2	equ	0xFDE
 31835                           postdec2	equ	0xFDD
 31836                           fsr2h	equ	0xFDA
 31837                           fsr2l	equ	0xFD9
 31838                           status	equ	0xFD8
 31839                           
 31840 ;; *************** function _EnterCommandMode *****************
 31841 ;; Defined at:
 31842 ;;		line 118 in file "Bluetooth.c"
 31843 ;; Parameters:    Size  Location     Type
 31844 ;;		None
 31845 ;; Auto vars:     Size  Location     Type
 31846 ;;  count           1   37[BANK0 ] unsigned char 
 31847 ;; Return value:  Size  Location     Type
 31848 ;;                  1    wreg      unsigned char 
 31849 ;; Registers used:
 31850 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31851 ;; Tracked objects:
 31852 ;;		On entry : 0/0
 31853 ;;		On exit  : 0/0
 31854 ;;		Unchanged: 0/0
 31855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31859 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31860 ;;Total ram usage:        1 bytes
 31861 ;; Hardware stack levels used:    1
 31862 ;; Hardware stack levels required when called:    8
 31863 ;; This function calls:
 31864 ;;		_BlueConnected
 31865 ;;		_ResetBlue
 31866 ;;		_StringContains
 31867 ;;		_UARTstring
 31868 ;;		_cleanBuffer
 31869 ;;		_delayUS
 31870 ;; This function is called by:
 31871 ;;		_BluetoothInitialSetup
 31872 ;; This function uses a non-reentrant model
 31873 ;;
 31874                           
 31875                           	psect	text78
 31876  007E50                     __ptext78:
 31877                           	opt stack 0
 31878  007E50                     _EnterCommandMode:
 31879                           	opt stack 19
 31880                           
 31881                           ;Bluetooth.c: 120: unsigned char count = 0;
 31882                           
 31883                           ; BSR set to: 0
 31884                           ;incstack = 0
 31885  007E50  0E00               	movlw	0
 31886  007E52  0100               	movlb	0	; () banked
 31887  007E54  6F85               	movwf	EnterCommandMode@count& (0+255),b
 31888                           
 31889                           ;Bluetooth.c: 121: while(BlueConnected())
 31890  007E56  D00B               	goto	l13310
 31891  007E58                     l13300:
 31892                           
 31893                           ;Bluetooth.c: 122: {
 31894                           ;Bluetooth.c: 123: ResetBlue();
 31895  007E58  EC37  F049         	call	_ResetBlue	;wreg free
 31896                           
 31897                           ;Bluetooth.c: 124: count++;
 31898  007E5C  0100               	movlb	0	; () banked
 31899  007E5E  2B85               	incf	EnterCommandMode@count& (0+255),f,b
 31900                           
 31901                           ; BSR set to: 0
 31902                           ;Bluetooth.c: 125: if(count > 4)
 31903  007E60  0E04               	movlw	4
 31904  007E62  0100               	movlb	0	; () banked
 31905  007E64  6585               	cpfsgt	EnterCommandMode@count& (0+255),b
 31906  007E66  D003               	goto	l13310
 31907                           
 31908                           ; BSR set to: 0
 31909                           ;Bluetooth.c: 126: {
 31910                           ;Bluetooth.c: 128: return 0;
 31911  007E68  0E00               	movlw	0
 31912                           
 31913                           ; BSR set to: 0
 31914  007E6A  0012               	return	
 31915                           
 31916                           ; BSR set to: 0
 31917  007E6C  D000               	goto	l13310
 31918  007E6E                     l13310:
 31919                           
 31920                           ; BSR set to: 0
 31921  007E6E  EC9D  F04A         	call	_BlueConnected	;wreg free
 31922  007E72  0900               	iorlw	0
 31923  007E74  A4D8               	btfss	status,2,c
 31924  007E76  D7F0               	goto	l13300
 31925                           
 31926                           ;Bluetooth.c: 129: }
 31927                           ;Bluetooth.c: 130: }
 31928                           ;Bluetooth.c: 132: delayUS(50000);
 31929  007E78  0E50               	movlw	80
 31930  007E7A  0100               	movlb	0	; () banked
 31931  007E7C  6F7C               	movwf	delayUS@US& (0+255),b
 31932  007E7E  0EC3               	movlw	195
 31933  007E80  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 31934  007E82  0E00               	movlw	0
 31935  007E84  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 31936  007E86  0E00               	movlw	0
 31937  007E88  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 31938  007E8A  EC7B  F047         	call	_delayUS	;wreg free
 31939                           
 31940                           ;Bluetooth.c: 133: UARTstring((unsigned char *)"$$$");
 31941  007E8E  0EE6               	movlw	low STR_2
 31942  007E90  0100               	movlb	0	; () banked
 31943  007E92  6F7D               	movwf	UARTstring@data& (0+255),b
 31944  007E94  0EFF               	movlw	high STR_2
 31945  007E96  0100               	movlb	0	; () banked
 31946  007E98  6F7E               	movwf	(UARTstring@data+1)& (0+255),b
 31947  007E9A  ECF7  F046         	call	_UARTstring	;wreg free
 31948                           
 31949                           ;Bluetooth.c: 134: delayUS(50000);
 31950  007E9E  0E50               	movlw	80
 31951  007EA0  0100               	movlb	0	; () banked
 31952  007EA2  6F7C               	movwf	delayUS@US& (0+255),b
 31953  007EA4  0EC3               	movlw	195
 31954  007EA6  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 31955  007EA8  0E00               	movlw	0
 31956  007EAA  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 31957  007EAC  0E00               	movlw	0
 31958  007EAE  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 31959  007EB0  EC7B  F047         	call	_delayUS	;wreg free
 31960                           
 31961                           ;Bluetooth.c: 135: if(StringContains(CommandString,(unsigned char *)"CMD"))
 31962  007EB4  0E00               	movlw	low _CommandString
 31963  007EB6  0100               	movlb	0	; () banked
 31964  007EB8  6F7C               	movwf	StringContains@This& (0+255),b
 31965  007EBA  0E05               	movlw	high _CommandString
 31966  007EBC  0100               	movlb	0	; () banked
 31967  007EBE  6F7D               	movwf	(StringContains@This+1)& (0+255),b
 31968  007EC0  0EF2               	movlw	low STR_3
 31969  007EC2  0100               	movlb	0	; () banked
 31970  007EC4  6F7E               	movwf	StringContains@That& (0+255),b
 31971  007EC6  0EFF               	movlw	high STR_3
 31972  007EC8  0100               	movlb	0	; () banked
 31973  007ECA  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 31974  007ECC  EC60  F041         	call	_StringContains	;wreg free
 31975  007ED0  0900               	iorlw	0
 31976  007ED2  B4D8               	btfsc	status,2,c
 31977  007ED4  D010               	goto	l13328
 31978                           
 31979                           ;Bluetooth.c: 136: {
 31980                           ;Bluetooth.c: 137: cleanBuffer(CommandString,CommandStringPos);
 31981  007ED6  0E00               	movlw	low _CommandString
 31982  007ED8  0100               	movlb	0	; () banked
 31983  007EDA  6F7C               	movwf	cleanBuffer@data& (0+255),b
 31984  007EDC  0E05               	movlw	high _CommandString
 31985  007EDE  0100               	movlb	0	; () banked
 31986  007EE0  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 31987  007EE2  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 31988  007EE6  0100               	movlb	0	; () banked
 31989  007EE8  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 31990  007EEA  ECCA  F046         	call	_cleanBuffer	;wreg free
 31991                           
 31992                           ;Bluetooth.c: 138: CommandStringPos = 0;
 31993  007EEE  0E00               	movlw	0
 31994  007EF0  6E27               	movwf	_CommandStringPos,c
 31995                           
 31996                           ;Bluetooth.c: 139: return 1;
 31997  007EF2  0E01               	movlw	1
 31998  007EF4  0012               	return	
 31999  007EF6                     l13328:
 32000                           
 32001                           ;Bluetooth.c: 140: }
 32002                           ;Bluetooth.c: 141: cleanBuffer(CommandString,CommandStringPos);
 32003  007EF6  0E00               	movlw	low _CommandString
 32004  007EF8  0100               	movlb	0	; () banked
 32005  007EFA  6F7C               	movwf	cleanBuffer@data& (0+255),b
 32006  007EFC  0E05               	movlw	high _CommandString
 32007  007EFE  0100               	movlb	0	; () banked
 32008  007F00  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 32009  007F02  C027  F07E         	movff	_CommandStringPos,cleanBuffer@count
 32010  007F06  0100               	movlb	0	; () banked
 32011  007F08  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 32012  007F0A  ECCA  F046         	call	_cleanBuffer	;wreg free
 32013                           
 32014                           ;Bluetooth.c: 142: CommandStringPos = 0;
 32015  007F0E  0E00               	movlw	0
 32016  007F10  6E27               	movwf	_CommandStringPos,c
 32017                           
 32018                           ;Bluetooth.c: 143: return 0;
 32019  007F12  0E00               	movlw	0
 32020  007F14  0012               	return	
 32021  007F16  0012               	return		;funcret
 32022  007F18                     __end_of_EnterCommandMode:
 32023                           	opt stack 0
 32024                           tblptru	equ	0xFF8
 32025                           tblptrh	equ	0xFF7
 32026                           tblptrl	equ	0xFF6
 32027                           tablat	equ	0xFF5
 32028                           prodh	equ	0xFF4
 32029                           prodl	equ	0xFF3
 32030                           intcon	equ	0xFF2
 32031                           intcon2	equ	0xFF1
 32032                           indf0	equ	0xFEF
 32033                           postinc0	equ	0xFEE
 32034                           fsr0h	equ	0xFEA
 32035                           fsr0l	equ	0xFE9
 32036                           wreg	equ	0xFE8
 32037                           indf1	equ	0xFE7
 32038                           postdec1	equ	0xFE5
 32039                           fsr1h	equ	0xFE2
 32040                           fsr1l	equ	0xFE1
 32041                           indf2	equ	0xFDF
 32042                           postinc2	equ	0xFDE
 32043                           postdec2	equ	0xFDD
 32044                           fsr2h	equ	0xFDA
 32045                           fsr2l	equ	0xFD9
 32046                           status	equ	0xFD8
 32047                           
 32048 ;; *************** function _cleanBuffer *****************
 32049 ;; Defined at:
 32050 ;;		line 127 in file "MISC.c"
 32051 ;; Parameters:    Size  Location     Type
 32052 ;;  data            2   28[BANK0 ] PTR unsigned char 
 32053 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(100), BluetoothInitialSetup@RFchannel(10), BluetoothInitialSetup
      +@buf(50), 
 32054 ;;		 -> CommandString(255), StringAddEqual@temp(255), ReceivedString(255), main@BluetoothString(255), 
 32055 ;;  count           2   30[BANK0 ] int 
 32056 ;; Auto vars:     Size  Location     Type
 32057 ;;  i               1   35[BANK0 ] unsigned char 
 32058 ;; Return value:  Size  Location     Type
 32059 ;;		None               void
 32060 ;; Registers used:
 32061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32062 ;; Tracked objects:
 32063 ;;		On entry : 0/0
 32064 ;;		On exit  : 0/0
 32065 ;;		Unchanged: 0/0
 32066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32067 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32068 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32069 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32070 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32071 ;;Total ram usage:        8 bytes
 32072 ;; Hardware stack levels used:    1
 32073 ;; Hardware stack levels required when called:    6
 32074 ;; This function calls:
 32075 ;;		Nothing
 32076 ;; This function is called by:
 32077 ;;		_main
 32078 ;;		_Init_System
 32079 ;;		_BufferCopy
 32080 ;;		_StringAddEqual
 32081 ;;		_InitBluetooth
 32082 ;;		_EnterCommandMode
 32083 ;;		_BluetoothInitialSetup
 32084 ;;		_UseBluetooth
 32085 ;; This function uses a non-reentrant model
 32086 ;;
 32087                           
 32088                           	psect	text79
 32089  008D94                     __ptext79:
 32090                           	opt stack 0
 32091  008D94                     _cleanBuffer:
 32092                           	opt stack 24
 32093                           
 32094                           ;MISC.c: 129: unsigned char i=0;
 32095                           
 32096                           ;incstack = 0
 32097  008D94  0E00               	movlw	0
 32098  008D96  0100               	movlb	0	; () banked
 32099  008D98  6F83               	movwf	cleanBuffer@i& (0+255),b
 32100                           
 32101                           ;MISC.c: 130: for(i=0; i<count;i++)
 32102  008D9A  0E00               	movlw	0
 32103  008D9C  0100               	movlb	0	; () banked
 32104  008D9E  6F83               	movwf	cleanBuffer@i& (0+255),b
 32105  008DA0  D010               	goto	l12748
 32106  008DA2                     l12744:
 32107                           
 32108                           ; BSR set to: 0
 32109                           ;MISC.c: 131: {
 32110                           ;MISC.c: 132: data[i]= 0;
 32111  008DA2  0100               	movlb	0	; () banked
 32112  008DA4  5183               	movf	cleanBuffer@i& (0+255),w,b
 32113  008DA6  0D01               	mullw	1
 32114  008DA8  50F3               	movf	prodl,w,c
 32115  008DAA  0100               	movlb	0	; () banked
 32116  008DAC  257C               	addwf	cleanBuffer@data& (0+255),w,b
 32117  008DAE  6ED9               	movwf	fsr2l,c
 32118  008DB0  50F4               	movf	prodh,w,c
 32119  008DB2  0100               	movlb	0	; () banked
 32120  008DB4  217D               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 32121  008DB6  6EDA               	movwf	fsr2h,c
 32122  008DB8  0E00               	movlw	0
 32123  008DBA  6EDF               	movwf	indf2,c
 32124                           
 32125                           ; BSR set to: 0
 32126  008DBC  0100               	movlb	0	; () banked
 32127  008DBE  2B83               	incf	cleanBuffer@i& (0+255),f,b
 32128  008DC0  D000               	goto	l12748
 32129  008DC2                     l12748:
 32130                           
 32131                           ; BSR set to: 0
 32132  008DC2  0100               	movlb	0	; () banked
 32133  008DC4  5183               	movf	cleanBuffer@i& (0+255),w,b
 32134  008DC6  0100               	movlb	0	; () banked
 32135  008DC8  6F80               	movwf	??_cleanBuffer& (0+255),b
 32136  008DCA  6B81               	clrf	(??_cleanBuffer+1)& (0+255),b
 32137  008DCC  0100               	movlb	0	; () banked
 32138  008DCE  517E               	movf	cleanBuffer@count& (0+255),w,b
 32139  008DD0  0100               	movlb	0	; () banked
 32140  008DD2  5D80               	subwf	??_cleanBuffer& (0+255),w,b
 32141  008DD4  0100               	movlb	0	; () banked
 32142  008DD6  5181               	movf	(??_cleanBuffer+1)& (0+255),w,b
 32143  008DD8  0A80               	xorlw	128
 32144  008DDA  0100               	movlb	0	; () banked
 32145  008DDC  6F82               	movwf	(??_cleanBuffer+2)& (0+255),b
 32146  008DDE  0100               	movlb	0	; () banked
 32147  008DE0  517F               	movf	(cleanBuffer@count+1)& (0+255),w,b
 32148  008DE2  0A80               	xorlw	128
 32149  008DE4  0100               	movlb	0	; () banked
 32150  008DE6  5982               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 32151  008DE8  A0D8               	btfss	status,0,c
 32152  008DEA  D7DB               	goto	l12744
 32153                           
 32154                           ; BSR set to: 0
 32155                           
 32156                           ; BSR set to: 0
 32157  008DEC  0012               	return		;funcret
 32158  008DEE                     __end_of_cleanBuffer:
 32159                           	opt stack 0
 32160                           tblptru	equ	0xFF8
 32161                           tblptrh	equ	0xFF7
 32162                           tblptrl	equ	0xFF6
 32163                           tablat	equ	0xFF5
 32164                           prodh	equ	0xFF4
 32165                           prodl	equ	0xFF3
 32166                           intcon	equ	0xFF2
 32167                           intcon2	equ	0xFF1
 32168                           indf0	equ	0xFEF
 32169                           postinc0	equ	0xFEE
 32170                           fsr0h	equ	0xFEA
 32171                           fsr0l	equ	0xFE9
 32172                           wreg	equ	0xFE8
 32173                           indf1	equ	0xFE7
 32174                           postdec1	equ	0xFE5
 32175                           fsr1h	equ	0xFE2
 32176                           fsr1l	equ	0xFE1
 32177                           indf2	equ	0xFDF
 32178                           postinc2	equ	0xFDE
 32179                           postdec2	equ	0xFDD
 32180                           fsr2h	equ	0xFDA
 32181                           fsr2l	equ	0xFD9
 32182                           status	equ	0xFD8
 32183                           
 32184 ;; *************** function _UARTstring *****************
 32185 ;; Defined at:
 32186 ;;		line 202 in file "UART.c"
 32187 ;; Parameters:    Size  Location     Type
 32188 ;;  data            2   29[BANK0 ] PTR unsigned char 
 32189 ;;		 -> STR_149(28), STR_92(13), STR_79(32), STR_68(14), 
 32190 ;;		 -> SYNTAX_ERR(14), UseBluetooth@buf(100), STR_18(5), STR_16(5), 
 32191 ;;		 -> STR_14(6), STR_12(6), STR_10(9), STR_8(21), 
 32192 ;;		 -> STR_6(10), BluetoothInitialSetup@buf(50), STR_2(4), ReceivedString(255), 
 32193 ;;		 -> CRLN(3), 
 32194 ;; Auto vars:     Size  Location     Type
 32195 ;;		None
 32196 ;; Return value:  Size  Location     Type
 32197 ;;		None               void
 32198 ;; Registers used:
 32199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32200 ;; Tracked objects:
 32201 ;;		On entry : 0/0
 32202 ;;		On exit  : 0/0
 32203 ;;		Unchanged: 0/0
 32204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32205 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32208 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32209 ;;Total ram usage:        2 bytes
 32210 ;; Hardware stack levels used:    1
 32211 ;; Hardware stack levels required when called:    7
 32212 ;; This function calls:
 32213 ;;		_UARTchar
 32214 ;; This function is called by:
 32215 ;;		_main
 32216 ;;		_UARTstringCRLN
 32217 ;;		_UARTcommandMenu
 32218 ;;		_EnterCommandMode
 32219 ;;		_BluetoothInitialSetup
 32220 ;;		_UseBluetooth
 32221 ;;		_WaitForIRsignal
 32222 ;; This function uses a non-reentrant model
 32223 ;;
 32224                           
 32225                           	psect	text80
 32226  008DEE                     __ptext80:
 32227                           	opt stack 0
 32228  008DEE                     _UARTstring:
 32229                           	opt stack 20
 32230                           
 32231                           ;UART.c: 204: while(*data != 0)
 32232                           
 32233                           ; BSR set to: 0
 32234                           ;incstack = 0
 32235  008DEE  D017               	goto	l12740
 32236  008DF0                     l12736:
 32237                           
 32238                           ;UART.c: 205: {
 32239                           ;UART.c: 206: UARTchar(*data);
 32240  008DF0  C07D  FFF6         	movff	UARTstring@data,tblptrl
 32241  008DF4  C07E  FFF7         	movff	UARTstring@data+1,tblptrh
 32242  008DF8  0E00               	movlw	low (__mediumconst shr (0+16))
 32243  008DFA  6EF8               	movwf	tblptru,c
 32244  008DFC  0E0F               	movlw	(high __ramtop+-1)
 32245  008DFE  64F7               	cpfsgt	tblptrh,c
 32246  008E00  D003               	bra	u15067
 32247  008E02  0008               	tblrd		*
 32248  008E04  50F5               	movf	tablat,w,c
 32249  008E06  D005               	bra	u15060
 32250  008E08                     u15067:
 32251  008E08  CFF6 FFE9          	movff	tblptrl,fsr0l
 32252  008E0C  CFF7 FFEA          	movff	tblptrh,fsr0h
 32253  008E10  50EF               	movf	indf0,w,c
 32254  008E12                     u15060:
 32255  008E12  ECE3  F049         	call	_UARTchar
 32256                           
 32257                           ;UART.c: 207: *data++;
 32258  008E16  0100               	movlb	0	; () banked
 32259  008E18  4B7D               	infsnz	UARTstring@data& (0+255),f,b
 32260  008E1A  2B7E               	incf	(UARTstring@data+1)& (0+255),f,b
 32261  008E1C  D000               	goto	l12740
 32262  008E1E                     l12740:
 32263  008E1E  C07D  FFF6         	movff	UARTstring@data,tblptrl
 32264  008E22  C07E  FFF7         	movff	UARTstring@data+1,tblptrh
 32265  008E26  0E00               	movlw	low (__mediumconst shr (0+16))
 32266  008E28  6EF8               	movwf	tblptru,c
 32267  008E2A  0E0F               	movlw	(high __ramtop+-1)
 32268  008E2C  64F7               	cpfsgt	tblptrh,c
 32269  008E2E  D003               	bra	u15077
 32270  008E30  0008               	tblrd		*
 32271  008E32  50F5               	movf	tablat,w,c
 32272  008E34  D005               	bra	u15070
 32273  008E36                     u15077:
 32274  008E36  CFF6 FFE9          	movff	tblptrl,fsr0l
 32275  008E3A  CFF7 FFEA          	movff	tblptrh,fsr0h
 32276  008E3E  50EF               	movf	indf0,w,c
 32277  008E40                     u15070:
 32278  008E40  0900               	iorlw	0
 32279  008E42  A4D8               	btfss	status,2,c
 32280  008E44  D7D5               	goto	l12736
 32281  008E46  0012               	return		;funcret
 32282  008E48                     __end_of_UARTstring:
 32283                           	opt stack 0
 32284                           tblptru	equ	0xFF8
 32285                           tblptrh	equ	0xFF7
 32286                           tblptrl	equ	0xFF6
 32287                           tablat	equ	0xFF5
 32288                           prodh	equ	0xFF4
 32289                           prodl	equ	0xFF3
 32290                           intcon	equ	0xFF2
 32291                           intcon2	equ	0xFF1
 32292                           indf0	equ	0xFEF
 32293                           postinc0	equ	0xFEE
 32294                           fsr0h	equ	0xFEA
 32295                           fsr0l	equ	0xFE9
 32296                           wreg	equ	0xFE8
 32297                           indf1	equ	0xFE7
 32298                           postdec1	equ	0xFE5
 32299                           fsr1h	equ	0xFE2
 32300                           fsr1l	equ	0xFE1
 32301                           indf2	equ	0xFDF
 32302                           postinc2	equ	0xFDE
 32303                           postdec2	equ	0xFDD
 32304                           fsr2h	equ	0xFDA
 32305                           fsr2l	equ	0xFD9
 32306                           status	equ	0xFD8
 32307                           
 32308 ;; *************** function _UARTchar *****************
 32309 ;; Defined at:
 32310 ;;		line 188 in file "UART.c"
 32311 ;; Parameters:    Size  Location     Type
 32312 ;;  data            1    wreg     unsigned char 
 32313 ;; Auto vars:     Size  Location     Type
 32314 ;;  data            1   28[BANK0 ] unsigned char 
 32315 ;; Return value:  Size  Location     Type
 32316 ;;		None               void
 32317 ;; Registers used:
 32318 ;;		wreg, status,2
 32319 ;; Tracked objects:
 32320 ;;		On entry : 0/0
 32321 ;;		On exit  : 0/0
 32322 ;;		Unchanged: 0/0
 32323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32325 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32327 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32328 ;;Total ram usage:        1 bytes
 32329 ;; Hardware stack levels used:    1
 32330 ;; Hardware stack levels required when called:    6
 32331 ;; This function calls:
 32332 ;;		Nothing
 32333 ;; This function is called by:
 32334 ;;		_main
 32335 ;;		_UARTstring
 32336 ;;		_UARTstringCRLN
 32337 ;;		_UARTcommandMenu
 32338 ;;		_UseBluetooth
 32339 ;;		_WaitForIRsignal
 32340 ;; This function uses a non-reentrant model
 32341 ;;
 32342                           
 32343                           	psect	text81
 32344  0093C6                     __ptext81:
 32345                           	opt stack 0
 32346  0093C6                     _UARTchar:
 32347                           	opt stack 20
 32348                           
 32349                           ;incstack = 0
 32350                           ;UARTchar@data stored from wreg
 32351  0093C6  0100               	movlb	0	; () banked
 32352  0093C8  6F7C               	movwf	UARTchar@data& (0+255),b
 32353                           
 32354                           ; BSR set to: 0
 32355                           ;UART.c: 190: if(data != 0)
 32356  0093CA  0100               	movlb	0	; () banked
 32357  0093CC  517C               	movf	UARTchar@data& (0+255),w,b
 32358  0093CE  0100               	movlb	0	; () banked
 32359  0093D0  B4D8               	btfsc	status,2,c
 32360  0093D2  0012               	return	
 32361                           
 32362                           ; BSR set to: 0
 32363                           ;UART.c: 191: {
 32364                           ;UART.c: 192: TXREG = data;
 32365  0093D4  C07C  FFAD         	movff	UARTchar@data,4013	;volatile
 32366                           
 32367                           ;UART.c: 193: while(!TXSTAbits.TRMT);
 32368  0093D8  D000               	goto	l652
 32369  0093DA                     l652:
 32370                           
 32371                           ; BSR set to: 0
 32372  0093DA  B2AC               	btfsc	4012,1,c	;volatile
 32373  0093DC  0012               	return	
 32374  0093DE  D7FD               	goto	l652
 32375                           
 32376                           ; BSR set to: 0
 32377  0093E0  0012               	return	
 32378                           
 32379                           ; BSR set to: 0
 32380                           
 32381                           ; BSR set to: 0
 32382  0093E2  0012               	return		;funcret
 32383  0093E4                     __end_of_UARTchar:
 32384                           	opt stack 0
 32385                           tblptru	equ	0xFF8
 32386                           tblptrh	equ	0xFF7
 32387                           tblptrl	equ	0xFF6
 32388                           tablat	equ	0xFF5
 32389                           prodh	equ	0xFF4
 32390                           prodl	equ	0xFF3
 32391                           intcon	equ	0xFF2
 32392                           intcon2	equ	0xFF1
 32393                           indf0	equ	0xFEF
 32394                           postinc0	equ	0xFEE
 32395                           fsr0h	equ	0xFEA
 32396                           fsr0l	equ	0xFE9
 32397                           wreg	equ	0xFE8
 32398                           indf1	equ	0xFE7
 32399                           postdec1	equ	0xFE5
 32400                           fsr1h	equ	0xFE2
 32401                           fsr1l	equ	0xFE1
 32402                           indf2	equ	0xFDF
 32403                           postinc2	equ	0xFDE
 32404                           postdec2	equ	0xFDD
 32405                           fsr2h	equ	0xFDA
 32406                           fsr2l	equ	0xFD9
 32407                           status	equ	0xFD8
 32408                           
 32409 ;; *************** function _StringContains *****************
 32410 ;; Defined at:
 32411 ;;		line 252 in file "MISC.c"
 32412 ;; Parameters:    Size  Location     Type
 32413 ;;  This            2   28[BANK0 ] PTR unsigned char 
 32414 ;;		 -> CommandString(255), main@BluetoothString(255), 
 32415 ;;  That            2   30[BANK0 ] PTR const unsigned char 
 32416 ;;		 -> STR_35(2), STR_19(4), STR_15(4), STR_13(4), 
 32417 ;;		 -> STR_11(4), STR_9(4), STR_7(4), STR_5(4), 
 32418 ;;		 -> BluetoothInitialSetup@buf(50), STR_3(4), 
 32419 ;; Auto vars:     Size  Location     Type
 32420 ;;  begin           1   33[BANK0 ] unsigned char 
 32421 ;; Return value:  Size  Location     Type
 32422 ;;                  1    wreg      unsigned char 
 32423 ;; Registers used:
 32424 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 32425 ;; Tracked objects:
 32426 ;;		On entry : 0/0
 32427 ;;		On exit  : 0/0
 32428 ;;		Unchanged: 0/0
 32429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32430 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32431 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32432 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32433 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32434 ;;Total ram usage:        6 bytes
 32435 ;; Hardware stack levels used:    1
 32436 ;; Hardware stack levels required when called:    6
 32437 ;; This function calls:
 32438 ;;		Nothing
 32439 ;; This function is called by:
 32440 ;;		_EnterCommandMode
 32441 ;;		_BluetoothInitialSetup
 32442 ;;		_UseBluetooth
 32443 ;; This function uses a non-reentrant model
 32444 ;;
 32445                           
 32446                           	psect	text82
 32447  0082C0                     __ptext82:
 32448                           	opt stack 0
 32449  0082C0                     _StringContains:
 32450                           	opt stack 23
 32451                           
 32452                           ;MISC.c: 254: unsigned char begin = 0;
 32453                           
 32454                           ; BSR set to: 0
 32455                           ;incstack = 0
 32456  0082C0  0E00               	movlw	0
 32457  0082C2  0100               	movlb	0	; () banked
 32458  0082C4  6F81               	movwf	StringContains@begin& (0+255),b
 32459                           
 32460                           ;MISC.c: 256: while(*This != 0)
 32461  0082C6  D04B               	goto	l12778
 32462  0082C8                     l12752:
 32463                           
 32464                           ; BSR set to: 0
 32465                           ;MISC.c: 257: {
 32466                           ;MISC.c: 258: if(*This == *That)
 32467  0082C8  C07C  FFD9         	movff	StringContains@This,fsr2l
 32468  0082CC  C07D  FFDA         	movff	StringContains@This+1,fsr2h
 32469  0082D0  50DF               	movf	indf2,w,c
 32470  0082D2  0100               	movlb	0	; () banked
 32471  0082D4  6F80               	movwf	??_StringContains& (0+255),b
 32472  0082D6  C07E  FFF6         	movff	StringContains@That,tblptrl
 32473  0082DA  C07F  FFF7         	movff	StringContains@That+1,tblptrh
 32474  0082DE  0E00               	movlw	low (__mediumconst shr (0+16))
 32475  0082E0  6EF8               	movwf	tblptru,c
 32476  0082E2  0E0F               	movlw	(high __ramtop+-1)
 32477  0082E4  64F7               	cpfsgt	tblptrh,c
 32478  0082E6  D003               	bra	u15107
 32479  0082E8  0008               	tblrd		*
 32480  0082EA  50F5               	movf	tablat,w,c
 32481  0082EC  D005               	bra	u15100
 32482  0082EE                     u15107:
 32483  0082EE  CFF6 FFE9          	movff	tblptrl,fsr0l
 32484  0082F2  CFF7 FFEA          	movff	tblptrh,fsr0h
 32485  0082F6  50EF               	movf	indf0,w,c
 32486  0082F8                     u15100:
 32487  0082F8  0100               	movlb	0	; () banked
 32488  0082FA  1980               	xorwf	??_StringContains& (0+255),w,b
 32489  0082FC  A4D8               	btfss	status,2,c
 32490  0082FE  D026               	goto	l12770
 32491                           
 32492                           ; BSR set to: 0
 32493                           ;MISC.c: 259: {
 32494                           ;MISC.c: 260: begin = 1;
 32495  008300  0E01               	movlw	1
 32496  008302  0100               	movlb	0	; () banked
 32497  008304  6F81               	movwf	StringContains@begin& (0+255),b
 32498                           
 32499                           ; BSR set to: 0
 32500                           ;MISC.c: 261: That++;
 32501  008306  0100               	movlb	0	; () banked
 32502  008308  4B7E               	infsnz	StringContains@That& (0+255),f,b
 32503  00830A  2B7F               	incf	(StringContains@That+1)& (0+255),f,b
 32504                           
 32505                           ; BSR set to: 0
 32506                           ;MISC.c: 262: if(*That == 0)
 32507  00830C  C07E  FFF6         	movff	StringContains@That,tblptrl
 32508  008310  C07F  FFF7         	movff	StringContains@That+1,tblptrh
 32509  008314  0E00               	movlw	low (__mediumconst shr (0+16))
 32510  008316  6EF8               	movwf	tblptru,c
 32511  008318  0E0F               	movlw	(high __ramtop+-1)
 32512  00831A  64F7               	cpfsgt	tblptrh,c
 32513  00831C  D003               	bra	u15127
 32514  00831E  0008               	tblrd		*
 32515  008320  50F5               	movf	tablat,w,c
 32516  008322  D005               	bra	u15120
 32517  008324                     u15127:
 32518  008324  CFF6 FFE9          	movff	tblptrl,fsr0l
 32519  008328  CFF7 FFEA          	movff	tblptrh,fsr0h
 32520  00832C  50EF               	movf	indf0,w,c
 32521  00832E                     u15120:
 32522  00832E  0900               	iorlw	0
 32523  008330  A4D8               	btfss	status,2,c
 32524  008332  D002               	goto	l12764
 32525                           
 32526                           ;MISC.c: 263: {
 32527                           ;MISC.c: 264: return 1;
 32528  008334  0E01               	movlw	1
 32529  008336  0012               	return	
 32530  008338                     l12764:
 32531                           
 32532                           ;MISC.c: 265: }
 32533                           ;MISC.c: 266: if(*This == 0)
 32534  008338  C07C  FFD9         	movff	StringContains@This,fsr2l
 32535  00833C  C07D  FFDA         	movff	StringContains@This+1,fsr2h
 32536  008340  50DF               	movf	indf2,w,c
 32537  008342  A4D8               	btfss	status,2,c
 32538  008344  D008               	goto	l12776
 32539                           
 32540                           ;MISC.c: 267: {
 32541                           ;MISC.c: 268: return 0;
 32542  008346  0E00               	movlw	0
 32543  008348  0012               	return	
 32544                           
 32545                           ;MISC.c: 269: }
 32546                           ;MISC.c: 270: }
 32547  00834A  D005               	goto	l12776
 32548  00834C                     l12770:
 32549                           
 32550                           ;MISC.c: 271: else
 32551                           ;MISC.c: 272: {
 32552                           ;MISC.c: 273: if(begin == 1)
 32553  00834C  0100               	movlb	0	; () banked
 32554  00834E  0581               	decf	StringContains@begin& (0+255),w,b
 32555  008350  D7F8               	goto	L24
 32556                           
 32557                           ; BSR set to: 0
 32558                           
 32559                           ; BSR set to: 0
 32560                           ;MISC.c: 274: {
 32561                           ;MISC.c: 275: return 0;
 32562  008352  0012               	return	
 32563                           
 32564                           ; BSR set to: 0
 32565  008354  D000               	goto	l12776
 32566  008356                     l12776:
 32567                           
 32568                           ;MISC.c: 276: }
 32569                           ;MISC.c: 277: }
 32570                           ;MISC.c: 278: This++;
 32571  008356  0100               	movlb	0	; () banked
 32572  008358  4B7C               	infsnz	StringContains@This& (0+255),f,b
 32573  00835A  2B7D               	incf	(StringContains@This+1)& (0+255),f,b
 32574  00835C  D000               	goto	l12778
 32575  00835E                     l12778:
 32576                           
 32577                           ; BSR set to: 0
 32578  00835E  C07C  FFD9         	movff	StringContains@This,fsr2l
 32579  008362  C07D  FFDA         	movff	StringContains@This+1,fsr2h
 32580  008366  50DF               	movf	indf2,w,c
 32581  008368  A4D8               	btfss	status,2,c
 32582  00836A  D7AE               	goto	l12752
 32583                           
 32584                           ; BSR set to: 0
 32585                           ;MISC.c: 279: }
 32586                           ;MISC.c: 280: return 0;
 32587                           
 32588                           ; BSR set to: 0
 32589  00836C  0E00               	movlw	0
 32590  00836E  0012               	return	
 32591                           
 32592                           ; BSR set to: 0
 32593  008370  0012               	return		;funcret
 32594  008372                     __end_of_StringContains:
 32595                           	opt stack 0
 32596                           tblptru	equ	0xFF8
 32597                           tblptrh	equ	0xFF7
 32598                           tblptrl	equ	0xFF6
 32599                           tablat	equ	0xFF5
 32600                           prodh	equ	0xFF4
 32601                           prodl	equ	0xFF3
 32602                           intcon	equ	0xFF2
 32603                           intcon2	equ	0xFF1
 32604                           indf0	equ	0xFEF
 32605                           postinc0	equ	0xFEE
 32606                           fsr0h	equ	0xFEA
 32607                           fsr0l	equ	0xFE9
 32608                           wreg	equ	0xFE8
 32609                           indf1	equ	0xFE7
 32610                           postdec1	equ	0xFE5
 32611                           fsr1h	equ	0xFE2
 32612                           fsr1l	equ	0xFE1
 32613                           indf2	equ	0xFDF
 32614                           postinc2	equ	0xFDE
 32615                           postdec2	equ	0xFDD
 32616                           fsr2h	equ	0xFDA
 32617                           fsr2l	equ	0xFD9
 32618                           status	equ	0xFD8
 32619                           
 32620 ;; *************** function _ResetBlue *****************
 32621 ;; Defined at:
 32622 ;;		line 105 in file "Bluetooth.c"
 32623 ;; Parameters:    Size  Location     Type
 32624 ;;		None
 32625 ;; Auto vars:     Size  Location     Type
 32626 ;;		None
 32627 ;; Return value:  Size  Location     Type
 32628 ;;		None               void
 32629 ;; Registers used:
 32630 ;;		wreg, status,2, status,0, cstack
 32631 ;; Tracked objects:
 32632 ;;		On entry : 0/0
 32633 ;;		On exit  : 0/0
 32634 ;;		Unchanged: 0/0
 32635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32640 ;;Total ram usage:        0 bytes
 32641 ;; Hardware stack levels used:    1
 32642 ;; Hardware stack levels required when called:    7
 32643 ;; This function calls:
 32644 ;;		_delayUS
 32645 ;; This function is called by:
 32646 ;;		_InitBluetooth
 32647 ;;		_EnterCommandMode
 32648 ;; This function uses a non-reentrant model
 32649 ;;
 32650                           
 32651                           	psect	text83
 32652  00926E                     __ptext83:
 32653                           	opt stack 0
 32654  00926E                     _ResetBlue:
 32655                           	opt stack 21
 32656                           
 32657                           ;Bluetooth.c: 107: LATA &= ~0x04;
 32658                           
 32659                           ;incstack = 0
 32660  00926E  9489               	bcf	3977,2,c	;volatile
 32661                           
 32662                           ;Bluetooth.c: 108: delayUS(50000);
 32663  009270  0E50               	movlw	80
 32664  009272  0100               	movlb	0	; () banked
 32665  009274  6F7C               	movwf	delayUS@US& (0+255),b
 32666  009276  0EC3               	movlw	195
 32667  009278  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 32668  00927A  0E00               	movlw	0
 32669  00927C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 32670  00927E  0E00               	movlw	0
 32671  009280  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 32672  009282  EC7B  F047         	call	_delayUS	;wreg free
 32673                           
 32674                           ;Bluetooth.c: 109: LATA |= 0x04;
 32675  009286  8489               	bsf	3977,2,c	;volatile
 32676                           
 32677                           ;Bluetooth.c: 110: delayUS(50000);
 32678  009288  0E50               	movlw	80
 32679  00928A  0100               	movlb	0	; () banked
 32680  00928C  6F7C               	movwf	delayUS@US& (0+255),b
 32681  00928E  0EC3               	movlw	195
 32682  009290  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 32683  009292  0E00               	movlw	0
 32684  009294  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 32685  009296  0E00               	movlw	0
 32686  009298  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 32687  00929A  EC7B  F047         	call	_delayUS	;wreg free
 32688  00929E  0012               	return		;funcret
 32689  0092A0                     __end_of_ResetBlue:
 32690                           	opt stack 0
 32691                           tblptru	equ	0xFF8
 32692                           tblptrh	equ	0xFF7
 32693                           tblptrl	equ	0xFF6
 32694                           tablat	equ	0xFF5
 32695                           prodh	equ	0xFF4
 32696                           prodl	equ	0xFF3
 32697                           intcon	equ	0xFF2
 32698                           intcon2	equ	0xFF1
 32699                           indf0	equ	0xFEF
 32700                           postinc0	equ	0xFEE
 32701                           fsr0h	equ	0xFEA
 32702                           fsr0l	equ	0xFE9
 32703                           wreg	equ	0xFE8
 32704                           indf1	equ	0xFE7
 32705                           postdec1	equ	0xFE5
 32706                           fsr1h	equ	0xFE2
 32707                           fsr1l	equ	0xFE1
 32708                           indf2	equ	0xFDF
 32709                           postinc2	equ	0xFDE
 32710                           postdec2	equ	0xFDD
 32711                           fsr2h	equ	0xFDA
 32712                           fsr2l	equ	0xFD9
 32713                           status	equ	0xFD8
 32714                           
 32715 ;; *************** function _delayUS *****************
 32716 ;; Defined at:
 32717 ;;		line 51 in file "MISC.c"
 32718 ;; Parameters:    Size  Location     Type
 32719 ;;  US              4   28[BANK0 ] long 
 32720 ;; Auto vars:     Size  Location     Type
 32721 ;;  i               4   33[BANK0 ] long 
 32722 ;; Return value:  Size  Location     Type
 32723 ;;		None               void
 32724 ;; Registers used:
 32725 ;;		wreg, status,2, status,0
 32726 ;; Tracked objects:
 32727 ;;		On entry : 0/0
 32728 ;;		On exit  : 0/0
 32729 ;;		Unchanged: 0/0
 32730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32732 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32733 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32734 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32735 ;;Total ram usage:        9 bytes
 32736 ;; Hardware stack levels used:    1
 32737 ;; Hardware stack levels required when called:    6
 32738 ;; This function calls:
 32739 ;;		Nothing
 32740 ;; This function is called by:
 32741 ;;		_main
 32742 ;;		_ReadVoltage
 32743 ;;		_InternalADC_Read
 32744 ;;		_UseIRCode
 32745 ;;		_SendNEC_wait
 32746 ;;		_ReadCodeButtons
 32747 ;;		_ResetBlue
 32748 ;;		_EnterCommandMode
 32749 ;;		_BluetoothInitialSetup
 32750 ;;		_UseBluetooth
 32751 ;;		_WaitForIRsignal
 32752 ;;		_CalibrateDelay
 32753 ;; This function uses a non-reentrant model
 32754 ;;
 32755                           
 32756                           	psect	text84
 32757  008EF6                     __ptext84:
 32758                           	opt stack 0
 32759  008EF6                     _delayUS:
 32760                           	opt stack 24
 32761                           
 32762                           ;MISC.c: 53: long i;
 32763                           ;MISC.c: 54: for(i=0; i<US; i += 2)
 32764                           
 32765                           ;incstack = 0
 32766  008EF6  0E00               	movlw	0
 32767  008EF8  0100               	movlb	0	; () banked
 32768  008EFA  6F81               	movwf	delayUS@i& (0+255),b
 32769  008EFC  0E00               	movlw	0
 32770  008EFE  6F82               	movwf	(delayUS@i+1)& (0+255),b
 32771  008F00  0E00               	movlw	0
 32772  008F02  6F83               	movwf	(delayUS@i+2)& (0+255),b
 32773  008F04  0E00               	movlw	0
 32774  008F06  6F84               	movwf	(delayUS@i+3)& (0+255),b
 32775  008F08  D008               	goto	l304
 32776  008F0A                     l305:
 32777                           
 32778                           ; BSR set to: 0
 32779                           ;MISC.c: 55: {
 32780                           ;MISC.c: 56: __nop();
 32781  008F0A  F000               	nop	
 32782  008F0C  0E02               	movlw	2
 32783  008F0E  0100               	movlb	0	; () banked
 32784  008F10  2781               	addwf	delayUS@i& (0+255),f,b
 32785  008F12  0E00               	movlw	0
 32786  008F14  2382               	addwfc	(delayUS@i+1)& (0+255),f,b
 32787  008F16  2383               	addwfc	(delayUS@i+2)& (0+255),f,b
 32788  008F18  2384               	addwfc	(delayUS@i+3)& (0+255),f,b
 32789  008F1A                     l304:
 32790                           
 32791                           ; BSR set to: 0
 32792  008F1A  0100               	movlb	0	; () banked
 32793  008F1C  517C               	movf	delayUS@US& (0+255),w,b
 32794  008F1E  0100               	movlb	0	; () banked
 32795  008F20  5D81               	subwf	delayUS@i& (0+255),w,b
 32796  008F22  0100               	movlb	0	; () banked
 32797  008F24  517D               	movf	(delayUS@US+1)& (0+255),w,b
 32798  008F26  0100               	movlb	0	; () banked
 32799  008F28  5982               	subwfb	(delayUS@i+1)& (0+255),w,b
 32800  008F2A  0100               	movlb	0	; () banked
 32801  008F2C  517E               	movf	(delayUS@US+2)& (0+255),w,b
 32802  008F2E  0100               	movlb	0	; () banked
 32803  008F30  5983               	subwfb	(delayUS@i+2)& (0+255),w,b
 32804  008F32  0100               	movlb	0	; () banked
 32805  008F34  5184               	movf	(delayUS@i+3)& (0+255),w,b
 32806  008F36  0A80               	xorlw	128
 32807  008F38  0100               	movlb	0	; () banked
 32808  008F3A  6F80               	movwf	??_delayUS& (0+255),b
 32809  008F3C  0100               	movlb	0	; () banked
 32810  008F3E  517F               	movf	(delayUS@US+3)& (0+255),w,b
 32811  008F40  0A80               	xorlw	128
 32812  008F42  0100               	movlb	0	; () banked
 32813  008F44  5980               	subwfb	??_delayUS& (0+255),w,b
 32814  008F46  A0D8               	btfss	status,0,c
 32815  008F48  D7E0               	goto	l305
 32816                           
 32817                           ; BSR set to: 0
 32818                           
 32819                           ; BSR set to: 0
 32820  008F4A  0012               	return		;funcret
 32821  008F4C                     __end_of_delayUS:
 32822                           	opt stack 0
 32823                           tblptru	equ	0xFF8
 32824                           tblptrh	equ	0xFF7
 32825                           tblptrl	equ	0xFF6
 32826                           tablat	equ	0xFF5
 32827                           prodh	equ	0xFF4
 32828                           prodl	equ	0xFF3
 32829                           intcon	equ	0xFF2
 32830                           intcon2	equ	0xFF1
 32831                           indf0	equ	0xFEF
 32832                           postinc0	equ	0xFEE
 32833                           fsr0h	equ	0xFEA
 32834                           fsr0l	equ	0xFE9
 32835                           wreg	equ	0xFE8
 32836                           indf1	equ	0xFE7
 32837                           postdec1	equ	0xFE5
 32838                           fsr1h	equ	0xFE2
 32839                           fsr1l	equ	0xFE1
 32840                           indf2	equ	0xFDF
 32841                           postinc2	equ	0xFDE
 32842                           postdec2	equ	0xFDD
 32843                           fsr2h	equ	0xFDA
 32844                           fsr2l	equ	0xFD9
 32845                           status	equ	0xFD8
 32846                           
 32847 ;; *************** function _BlueConnected *****************
 32848 ;; Defined at:
 32849 ;;		line 90 in file "Bluetooth.c"
 32850 ;; Parameters:    Size  Location     Type
 32851 ;;		None
 32852 ;; Auto vars:     Size  Location     Type
 32853 ;;		None
 32854 ;; Return value:  Size  Location     Type
 32855 ;;                  1    wreg      unsigned char 
 32856 ;; Registers used:
 32857 ;;		wreg
 32858 ;; Tracked objects:
 32859 ;;		On entry : 0/0
 32860 ;;		On exit  : 0/0
 32861 ;;		Unchanged: 0/0
 32862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32867 ;;Total ram usage:        0 bytes
 32868 ;; Hardware stack levels used:    1
 32869 ;; Hardware stack levels required when called:    6
 32870 ;; This function calls:
 32871 ;;		Nothing
 32872 ;; This function is called by:
 32873 ;;		_main
 32874 ;;		_EnterCommandMode
 32875 ;; This function uses a non-reentrant model
 32876 ;;
 32877                           
 32878                           	psect	text85
 32879  00953A                     __ptext85:
 32880                           	opt stack 0
 32881  00953A                     _BlueConnected:
 32882                           	opt stack 20
 32883                           
 32884                           ;Bluetooth.c: 93: if((PORTA & 0x02) == 0x02)
 32885                           
 32886                           ; BSR set to: 0
 32887                           ;incstack = 0
 32888  00953A  A280               	btfss	3968,1,c	;volatile
 32889  00953C  D002               	goto	l12730
 32890                           
 32891                           ;Bluetooth.c: 94: {
 32892                           ;Bluetooth.c: 95: return 1;
 32893  00953E  0E01               	movlw	1
 32894  009540  0012               	return	
 32895  009542                     l12730:
 32896                           
 32897                           ;Bluetooth.c: 96: }
 32898                           ;Bluetooth.c: 97: return 0;
 32899  009542  0E00               	movlw	0
 32900  009544  0012               	return	
 32901  009546  0012               	return		;funcret
 32902  009548                     __end_of_BlueConnected:
 32903                           	opt stack 0
 32904                           tblptru	equ	0xFF8
 32905                           tblptrh	equ	0xFF7
 32906                           tblptrl	equ	0xFF6
 32907                           tablat	equ	0xFF5
 32908                           prodh	equ	0xFF4
 32909                           prodl	equ	0xFF3
 32910                           intcon	equ	0xFF2
 32911                           intcon2	equ	0xFF1
 32912                           indf0	equ	0xFEF
 32913                           postinc0	equ	0xFEE
 32914                           fsr0h	equ	0xFEA
 32915                           fsr0l	equ	0xFE9
 32916                           wreg	equ	0xFE8
 32917                           indf1	equ	0xFE7
 32918                           postdec1	equ	0xFE5
 32919                           fsr1h	equ	0xFE2
 32920                           fsr1l	equ	0xFE1
 32921                           indf2	equ	0xFDF
 32922                           postinc2	equ	0xFDE
 32923                           postdec2	equ	0xFDD
 32924                           fsr2h	equ	0xFDA
 32925                           fsr2l	equ	0xFD9
 32926                           status	equ	0xFD8
 32927                           
 32928 ;; *************** function _BluetoothConfigured *****************
 32929 ;; Defined at:
 32930 ;;		line 266 in file "Bluetooth.c"
 32931 ;; Parameters:    Size  Location     Type
 32932 ;;		None
 32933 ;; Auto vars:     Size  Location     Type
 32934 ;;		None
 32935 ;; Return value:  Size  Location     Type
 32936 ;;                  1    wreg      unsigned char 
 32937 ;; Registers used:
 32938 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32939 ;; Tracked objects:
 32940 ;;		On entry : 0/0
 32941 ;;		On exit  : 0/0
 32942 ;;		Unchanged: 0/0
 32943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32948 ;;Total ram usage:        0 bytes
 32949 ;; Hardware stack levels used:    1
 32950 ;; Hardware stack levels required when called:   11
 32951 ;; This function calls:
 32952 ;;		_SyncGlobalToEEPROM
 32953 ;; This function is called by:
 32954 ;;		_InitBluetooth
 32955 ;; This function uses a non-reentrant model
 32956 ;;
 32957                           
 32958                           	psect	text86
 32959  0093E4                     __ptext86:
 32960                           	opt stack 0
 32961  0093E4                     _BluetoothConfigured:
 32962                           	opt stack 17
 32963                           
 32964                           ;Bluetooth.c: 268: if(Global.BlueToothFlag != 1)
 32965                           
 32966                           ;incstack = 0
 32967  0093E4  0104               	movlb	4	; () banked
 32968  0093E6  0500               	decf	_Global& (0+255),w,b
 32969  0093E8  B4D8               	btfsc	status,2,c
 32970  0093EA  D007               	goto	l14084
 32971                           
 32972                           ; BSR set to: 4
 32973                           ;Bluetooth.c: 269: {
 32974                           ;Bluetooth.c: 270: Global.BlueToothFlag = 1;
 32975  0093EC  0E01               	movlw	1
 32976  0093EE  0104               	movlb	4	; () banked
 32977  0093F0  6F00               	movwf	_Global& (0+255),b
 32978                           
 32979                           ; BSR set to: 4
 32980                           ;Bluetooth.c: 271: SyncGlobalToEEPROM();
 32981  0093F2  EC1C  F048         	call	_SyncGlobalToEEPROM	;wreg free
 32982                           
 32983                           ;Bluetooth.c: 272: return 0;
 32984  0093F6  0E00               	movlw	0
 32985  0093F8  0012               	return	
 32986  0093FA                     l14084:
 32987                           
 32988                           ;Bluetooth.c: 273: }
 32989                           ;Bluetooth.c: 274: return 1;
 32990  0093FA  0E01               	movlw	1
 32991  0093FC  0012               	return	
 32992  0093FE  0012               	return		;funcret
 32993  009400                     __end_of_BluetoothConfigured:
 32994                           	opt stack 0
 32995                           tblptru	equ	0xFF8
 32996                           tblptrh	equ	0xFF7
 32997                           tblptrl	equ	0xFF6
 32998                           tablat	equ	0xFF5
 32999                           prodh	equ	0xFF4
 33000                           prodl	equ	0xFF3
 33001                           intcon	equ	0xFF2
 33002                           intcon2	equ	0xFF1
 33003                           indf0	equ	0xFEF
 33004                           postinc0	equ	0xFEE
 33005                           fsr0h	equ	0xFEA
 33006                           fsr0l	equ	0xFE9
 33007                           wreg	equ	0xFE8
 33008                           indf1	equ	0xFE7
 33009                           postdec1	equ	0xFE5
 33010                           fsr1h	equ	0xFE2
 33011                           fsr1l	equ	0xFE1
 33012                           indf2	equ	0xFDF
 33013                           postinc2	equ	0xFDE
 33014                           postdec2	equ	0xFDD
 33015                           fsr2h	equ	0xFDA
 33016                           fsr2l	equ	0xFD9
 33017                           status	equ	0xFD8
 33018                           
 33019 ;; *************** function _SyncGlobalToEEPROM *****************
 33020 ;; Defined at:
 33021 ;;		line 239 in file "EEPROM.c"
 33022 ;; Parameters:    Size  Location     Type
 33023 ;;		None
 33024 ;; Auto vars:     Size  Location     Type
 33025 ;;		None
 33026 ;; Return value:  Size  Location     Type
 33027 ;;                  1    wreg      unsigned char 
 33028 ;; Registers used:
 33029 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33030 ;; Tracked objects:
 33031 ;;		On entry : 0/0
 33032 ;;		On exit  : 0/0
 33033 ;;		Unchanged: 0/0
 33034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33039 ;;Total ram usage:        0 bytes
 33040 ;; Hardware stack levels used:    1
 33041 ;; Hardware stack levels required when called:   10
 33042 ;; This function calls:
 33043 ;;		_SetEEPROM
 33044 ;; This function is called by:
 33045 ;;		_Init_System
 33046 ;;		_SetEEPROMdefault
 33047 ;;		_UseIRCode
 33048 ;;		_BluetoothConfigured
 33049 ;;		_UseBluetooth
 33050 ;; This function uses a non-reentrant model
 33051 ;;
 33052                           
 33053                           	psect	text87
 33054  009038                     __ptext87:
 33055                           	opt stack 0
 33056  009038                     _SyncGlobalToEEPROM:
 33057                           	opt stack 19
 33058                           
 33059                           ;EEPROM.c: 242: if(!SetEEPROM(Global,0xFFFFFFFF))
 33060                           
 33061                           ;incstack = 0
 33062  009038  EE24  F000         	lfsr	2,_Global
 33063  00903C  EE01  F000         	lfsr	0,SetEEPROM@Temp
 33064  009040  0E87               	movlw	135
 33065  009042                     u15831:
 33066  009042  CFDB FFEB          	movff	plusw2,plusw0
 33067  009046  06E8               	decf	wreg,f,c
 33068  009048  E2FC               	bc	u15831
 33069  00904A  0EFF               	movlw	255
 33070  00904C  0101               	movlb	1	; () banked
 33071  00904E  6F88               	movwf	SetEEPROM@burn& (0+255),b
 33072  009050  0EFF               	movlw	255
 33073  009052  6F89               	movwf	(SetEEPROM@burn+1)& (0+255),b
 33074  009054  0EFF               	movlw	255
 33075  009056  6F8A               	movwf	(SetEEPROM@burn+2)& (0+255),b
 33076  009058  0EFF               	movlw	255
 33077  00905A  6F8B               	movwf	(SetEEPROM@burn+3)& (0+255),b
 33078  00905C  EC5C  F032         	call	_SetEEPROM	;wreg free
 33079  009060  0101               	movlb	1	; () banked
 33080  009062  5100               	movf	?_SetEEPROM& (0+255),w,b
 33081  009064  0101               	movlb	1	; () banked
 33082  009066  1101               	iorwf	(?_SetEEPROM+1)& (0+255),w,b
 33083  009068  0101               	movlb	1	; () banked
 33084  00906A  1102               	iorwf	(?_SetEEPROM+2)& (0+255),w,b
 33085  00906C  0101               	movlb	1	; () banked
 33086  00906E  1103               	iorwf	(?_SetEEPROM+3)& (0+255),w,b
 33087  009070  A4D8               	btfss	status,2,c
 33088  009072  D002               	goto	l13202
 33089                           
 33090                           ; BSR set to: 1
 33091                           ;EEPROM.c: 243: {
 33092                           ;EEPROM.c: 244: return 1;
 33093  009074  0E01               	movlw	1
 33094                           
 33095                           ; BSR set to: 1
 33096  009076  0012               	return	
 33097  009078                     l13202:
 33098                           
 33099                           ; BSR set to: 1
 33100                           ;EEPROM.c: 245: }
 33101                           ;EEPROM.c: 246: return 0;
 33102  009078  0E00               	movlw	0
 33103  00907A  0012               	return	
 33104                           
 33105                           ; BSR set to: 1
 33106                           
 33107                           ; BSR set to: 1
 33108  00907C  0012               	return		;funcret
 33109  00907E                     __end_of_SyncGlobalToEEPROM:
 33110                           	opt stack 0
 33111                           tblptru	equ	0xFF8
 33112                           tblptrh	equ	0xFF7
 33113                           tblptrl	equ	0xFF6
 33114                           tablat	equ	0xFF5
 33115                           prodh	equ	0xFF4
 33116                           prodl	equ	0xFF3
 33117                           intcon	equ	0xFF2
 33118                           intcon2	equ	0xFF1
 33119                           indf0	equ	0xFEF
 33120                           postinc0	equ	0xFEE
 33121                           plusw0	equ	0xFEB
 33122                           fsr0h	equ	0xFEA
 33123                           fsr0l	equ	0xFE9
 33124                           wreg	equ	0xFE8
 33125                           indf1	equ	0xFE7
 33126                           postdec1	equ	0xFE5
 33127                           fsr1h	equ	0xFE2
 33128                           fsr1l	equ	0xFE1
 33129                           indf2	equ	0xFDF
 33130                           postinc2	equ	0xFDE
 33131                           postdec2	equ	0xFDD
 33132                           plusw2	equ	0xFDB
 33133                           fsr2h	equ	0xFDA
 33134                           fsr2l	equ	0xFD9
 33135                           status	equ	0xFD8
 33136                           
 33137 ;; *************** function _SetEEPROM *****************
 33138 ;; Defined at:
 33139 ;;		line 167 in file "EEPROM.c"
 33140 ;; Parameters:    Size  Location     Type
 33141 ;;  Temp          136    0[BANK1 ] struct EEdata
 33142 ;;  burn            4  136[BANK1 ] unsigned long 
 33143 ;; Auto vars:     Size  Location     Type
 33144 ;;  fail            4   84[BANK0 ] unsigned long 
 33145 ;;  j               1   92[BANK0 ] unsigned char 
 33146 ;;  i               1   91[BANK0 ] unsigned char 
 33147 ;;  k               1   90[BANK0 ] unsigned char 
 33148 ;;  Arrayspot       1   89[BANK0 ] unsigned char 
 33149 ;;  temp            1   88[BANK0 ] unsigned char 
 33150 ;; Return value:  Size  Location     Type
 33151 ;;                  4    0[BANK1 ] unsigned long 
 33152 ;; Registers used:
 33153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33154 ;; Tracked objects:
 33155 ;;		On entry : 0/0
 33156 ;;		On exit  : 0/0
 33157 ;;		Unchanged: 0/0
 33158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33159 ;;      Params:         0       0     140       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33160 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33161 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33162 ;;      Totals:         0      11     140       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33163 ;;Total ram usage:      151 bytes
 33164 ;; Hardware stack levels used:    1
 33165 ;; Hardware stack levels required when called:    9
 33166 ;; This function calls:
 33167 ;;		_SetMemoryChar
 33168 ;;		_SetMemoryLong
 33169 ;; This function is called by:
 33170 ;;		_SyncGlobalToEEPROM
 33171 ;; This function uses a non-reentrant model
 33172 ;;
 33173                           
 33174                           	psect	text88
 33175  0064B8                     __ptext88:
 33176                           	opt stack 0
 33177  0064B8                     _SetEEPROM:
 33178                           	opt stack 19
 33179                           
 33180                           ;EEPROM.c: 169: unsigned long fail = 0;
 33181                           
 33182                           ; BSR set to: 1
 33183                           ;incstack = 0
 33184  0064B8  0E00               	movlw	0
 33185  0064BA  0100               	movlb	0	; () banked
 33186  0064BC  6FB4               	movwf	SetEEPROM@fail& (0+255),b
 33187  0064BE  0E00               	movlw	0
 33188  0064C0  6FB5               	movwf	(SetEEPROM@fail+1)& (0+255),b
 33189  0064C2  0E00               	movlw	0
 33190  0064C4  6FB6               	movwf	(SetEEPROM@fail+2)& (0+255),b
 33191  0064C6  0E00               	movlw	0
 33192  0064C8  6FB7               	movwf	(SetEEPROM@fail+3)& (0+255),b
 33193                           
 33194                           ;EEPROM.c: 170: unsigned char i,j,k,temp;
 33195                           ;EEPROM.c: 171: unsigned char Arrayspot=5;
 33196  0064CA  0E05               	movlw	5
 33197  0064CC  0100               	movlb	0	; () banked
 33198  0064CE  6FB9               	movwf	SetEEPROM@Arrayspot& (0+255),b
 33199                           
 33200                           ; BSR set to: 0
 33201                           ;EEPROM.c: 173: if(burn & 0x00000001)
 33202  0064D0  0101               	movlb	1	; () banked
 33203  0064D2  A188               	btfss	SetEEPROM@burn& (0+255),0,b
 33204  0064D4  D00D               	goto	l12794
 33205                           
 33206                           ; BSR set to: 1
 33207                           ;EEPROM.c: 174: {
 33208                           ;EEPROM.c: 175: if(!SetMemoryChar(Temp.BlueToothFlag,0))
 33209  0064D6  0E00               	movlw	0
 33210  0064D8  0100               	movlb	0	; () banked
 33211  0064DA  6F86               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33212  0064DC  0101               	movlb	1	; () banked
 33213  0064DE  5100               	movf	SetEEPROM@Temp& (0+255),w,b
 33214  0064E0  ECE3  F048         	call	_SetMemoryChar
 33215  0064E4  0900               	iorlw	0
 33216  0064E6  A4D8               	btfss	status,2,c
 33217  0064E8  D003               	goto	l12794
 33218                           
 33219                           ;EEPROM.c: 176: {
 33220                           ;EEPROM.c: 178: fail |= 0x00000001;
 33221  0064EA  0100               	movlb	0	; () banked
 33222  0064EC  81B4               	bsf	SetEEPROM@fail& (0+255),0,b
 33223                           
 33224                           ; BSR set to: 0
 33225  0064EE  D000               	goto	l12794
 33226  0064F0                     l12794:
 33227                           
 33228                           ;EEPROM.c: 179: }
 33229                           ;EEPROM.c: 180: }
 33230                           ;EEPROM.c: 181: if(burn & 0x00000002)
 33231  0064F0  0101               	movlb	1	; () banked
 33232  0064F2  A388               	btfss	SetEEPROM@burn& (0+255),1,b
 33233  0064F4  D013               	goto	l12800
 33234                           
 33235                           ; BSR set to: 1
 33236                           ;EEPROM.c: 182: {
 33237                           ;EEPROM.c: 183: if(!SetMemoryLong(Temp.SWNECcode,1))
 33238  0064F6  C101  F0A1         	movff	SetEEPROM@Temp+1,SetMemoryLong@Data
 33239  0064FA  C102  F0A2         	movff	SetEEPROM@Temp+2,SetMemoryLong@Data+1
 33240  0064FE  C103  F0A3         	movff	SetEEPROM@Temp+3,SetMemoryLong@Data+2
 33241  006502  C104  F0A4         	movff	SetEEPROM@Temp+4,SetMemoryLong@Data+3
 33242  006506  0E01               	movlw	1
 33243  006508  0100               	movlb	0	; () banked
 33244  00650A  6FA5               	movwf	SetMemoryLong@AddressFirst& (0+255),b
 33245  00650C  EC64  F03D         	call	_SetMemoryLong	;wreg free
 33246  006510  0900               	iorlw	0
 33247  006512  A4D8               	btfss	status,2,c
 33248  006514  D003               	goto	l12800
 33249                           
 33250                           ;EEPROM.c: 184: {
 33251                           ;EEPROM.c: 186: fail |= 0x00000002;
 33252  006516  0100               	movlb	0	; () banked
 33253  006518  83B4               	bsf	SetEEPROM@fail& (0+255),1,b
 33254                           
 33255                           ; BSR set to: 0
 33256  00651A  D000               	goto	l12800
 33257  00651C                     l12800:
 33258                           
 33259                           ;EEPROM.c: 187: }
 33260                           ;EEPROM.c: 188: }
 33261                           ;EEPROM.c: 189: if(burn & 0x00000004)
 33262  00651C  0101               	movlb	1	; () banked
 33263  00651E  A588               	btfss	SetEEPROM@burn& (0+255),2,b
 33264  006520  D047               	goto	l959
 33265                           
 33266                           ; BSR set to: 1
 33267                           ;EEPROM.c: 190: {
 33268                           ;EEPROM.c: 191: for(i=0; i< 20; i++)
 33269  006522  0E00               	movlw	0
 33270  006524  0100               	movlb	0	; () banked
 33271  006526  6FBB               	movwf	SetEEPROM@i& (0+255),b
 33272  006528                     l12804:
 33273                           
 33274                           ; BSR set to: 0
 33275  006528  0E13               	movlw	19
 33276  00652A  0100               	movlb	0	; () banked
 33277  00652C  65BB               	cpfsgt	SetEEPROM@i& (0+255),b
 33278  00652E  D001               	goto	l12808
 33279                           
 33280                           ; BSR set to: 0
 33281  006530  D03F               	goto	l959
 33282  006532                     l12808:
 33283                           
 33284                           ; BSR set to: 0
 33285                           ;EEPROM.c: 192: {
 33286                           ;EEPROM.c: 193: for(j=0; j < 2; j++)
 33287  006532  0E00               	movlw	0
 33288  006534  0100               	movlb	0	; () banked
 33289  006536  6FBC               	movwf	SetEEPROM@j& (0+255),b
 33290  006538                     l12810:
 33291                           
 33292                           ; BSR set to: 0
 33293  006538  0E01               	movlw	1
 33294  00653A  0100               	movlb	0	; () banked
 33295  00653C  65BC               	cpfsgt	SetEEPROM@j& (0+255),b
 33296  00653E  D001               	goto	l12814
 33297                           
 33298                           ; BSR set to: 0
 33299  006540  D034               	goto	l12822
 33300  006542                     l12814:
 33301                           
 33302                           ; BSR set to: 0
 33303                           ;EEPROM.c: 194: {
 33304                           ;EEPROM.c: 195: temp = Temp.RemoteButtonNEC[i][j];
 33305  006542  0100               	movlb	0	; () banked
 33306  006544  51BB               	movf	SetEEPROM@i& (0+255),w,b
 33307  006546  0D02               	mullw	2
 33308  006548  0E00               	movlw	low SetEEPROM@Temp
 33309  00654A  0100               	movlb	0	; () banked
 33310  00654C  6FB2               	movwf	??_SetEEPROM& (0+255),b
 33311  00654E  0E01               	movlw	high SetEEPROM@Temp
 33312  006550  0100               	movlb	0	; () banked
 33313  006552  6FB3               	movwf	(??_SetEEPROM+1)& (0+255),b
 33314  006554  50F3               	movf	prodl,w,c
 33315  006556  0100               	movlb	0	; () banked
 33316  006558  27B2               	addwf	??_SetEEPROM& (0+255),f,b
 33317  00655A  50F4               	movf	prodh,w,c
 33318  00655C  0100               	movlb	0	; () banked
 33319  00655E  23B3               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33320  006560  0100               	movlb	0	; () banked
 33321  006562  51BC               	movf	SetEEPROM@j& (0+255),w,b
 33322  006564  0D01               	mullw	1
 33323  006566  50F3               	movf	prodl,w,c
 33324  006568  0100               	movlb	0	; () banked
 33325  00656A  27B2               	addwf	??_SetEEPROM& (0+255),f,b
 33326  00656C  50F4               	movf	prodh,w,c
 33327  00656E  0100               	movlb	0	; () banked
 33328  006570  23B3               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33329  006572  0E05               	movlw	5
 33330  006574  0100               	movlb	0	; () banked
 33331  006576  25B2               	addwf	??_SetEEPROM& (0+255),w,b
 33332  006578  6ED9               	movwf	fsr2l,c
 33333  00657A  0E00               	movlw	0
 33334  00657C  0100               	movlb	0	; () banked
 33335  00657E  21B3               	addwfc	(??_SetEEPROM+1)& (0+255),w,b
 33336  006580  6EDA               	movwf	fsr2h,c
 33337  006582  50DF               	movf	indf2,w,c
 33338  006584  0100               	movlb	0	; () banked
 33339  006586  6FB8               	movwf	SetEEPROM@temp& (0+255),b
 33340                           
 33341                           ; BSR set to: 0
 33342                           ;EEPROM.c: 196: if(!SetMemoryChar(temp,Arrayspot++))
 33343  006588  0100               	movlb	0	; () banked
 33344  00658A  2BB9               	incf	SetEEPROM@Arrayspot& (0+255),f,b
 33345  00658C  05B9               	decf	SetEEPROM@Arrayspot& (0+255),w,b
 33346  00658E  0100               	movlb	0	; () banked
 33347  006590  6F86               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33348  006592  0100               	movlb	0	; () banked
 33349  006594  51B8               	movf	SetEEPROM@temp& (0+255),w,b
 33350  006596  ECE3  F048         	call	_SetMemoryChar
 33351  00659A  0900               	iorlw	0
 33352  00659C  A4D8               	btfss	status,2,c
 33353  00659E  D002               	goto	l964
 33354                           
 33355                           ;EEPROM.c: 197: {
 33356                           ;EEPROM.c: 199: fail |= 0x00000004;
 33357  0065A0  0100               	movlb	0	; () banked
 33358  0065A2  85B4               	bsf	SetEEPROM@fail& (0+255),2,b
 33359  0065A4                     l964:
 33360  0065A4  0100               	movlb	0	; () banked
 33361  0065A6  2BBC               	incf	SetEEPROM@j& (0+255),f,b
 33362  0065A8  D7C7               	goto	l12810
 33363  0065AA                     l12822:
 33364                           
 33365                           ; BSR set to: 0
 33366  0065AA  0100               	movlb	0	; () banked
 33367  0065AC  2BBB               	incf	SetEEPROM@i& (0+255),f,b
 33368  0065AE  D7BC               	goto	l12804
 33369  0065B0                     l959:
 33370                           
 33371                           ;EEPROM.c: 200: }
 33372                           ;EEPROM.c: 201: }
 33373                           ;EEPROM.c: 202: }
 33374                           ;EEPROM.c: 203: }
 33375                           ;EEPROM.c: 204: if(burn & 0x00000008)
 33376  0065B0  0101               	movlb	1	; () banked
 33377  0065B2  A788               	btfss	SetEEPROM@burn& (0+255),3,b
 33378  0065B4  D00D               	goto	l12830
 33379                           
 33380                           ; BSR set to: 1
 33381                           ;EEPROM.c: 205: {
 33382                           ;EEPROM.c: 206: if(!SetMemoryChar(Temp.EEPROMinitFlag,(2*20 + 5)))
 33383  0065B6  0E2D               	movlw	45
 33384  0065B8  0100               	movlb	0	; () banked
 33385  0065BA  6F86               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33386  0065BC  0101               	movlb	1	; () banked
 33387  0065BE  512D               	movf	(SetEEPROM@Temp+45)& (0+255),w,b
 33388  0065C0  ECE3  F048         	call	_SetMemoryChar
 33389  0065C4  0900               	iorlw	0
 33390  0065C6  A4D8               	btfss	status,2,c
 33391  0065C8  D003               	goto	l12830
 33392                           
 33393                           ;EEPROM.c: 207: {
 33394                           ;EEPROM.c: 209: fail |= 0x00000008;
 33395  0065CA  0100               	movlb	0	; () banked
 33396  0065CC  87B4               	bsf	SetEEPROM@fail& (0+255),3,b
 33397                           
 33398                           ; BSR set to: 0
 33399  0065CE  D000               	goto	l12830
 33400  0065D0                     l12830:
 33401                           
 33402                           ;EEPROM.c: 210: }
 33403                           ;EEPROM.c: 211: }
 33404                           ;EEPROM.c: 212: if(burn & 0x00000010)
 33405  0065D0  0101               	movlb	1	; () banked
 33406  0065D2  A988               	btfss	SetEEPROM@burn& (0+255),4,b
 33407  0065D4  D05E               	goto	l967
 33408                           
 33409                           ; BSR set to: 1
 33410                           ;EEPROM.c: 213: {
 33411                           ;EEPROM.c: 214: Arrayspot=(2*20 + 7);
 33412  0065D6  0E2F               	movlw	47
 33413  0065D8  0100               	movlb	0	; () banked
 33414  0065DA  6FB9               	movwf	SetEEPROM@Arrayspot& (0+255),b
 33415                           
 33416                           ;EEPROM.c: 215: for(i=0; i< 15; i++)
 33417  0065DC  0E00               	movlw	0
 33418  0065DE  0100               	movlb	0	; () banked
 33419  0065E0  6FBB               	movwf	SetEEPROM@i& (0+255),b
 33420  0065E2                     l12834:
 33421                           
 33422                           ; BSR set to: 0
 33423  0065E2  0E0E               	movlw	14
 33424  0065E4  0100               	movlb	0	; () banked
 33425  0065E6  65BB               	cpfsgt	SetEEPROM@i& (0+255),b
 33426  0065E8  D001               	goto	l12838
 33427                           
 33428                           ; BSR set to: 0
 33429  0065EA  D053               	goto	l967
 33430  0065EC                     l12838:
 33431                           
 33432                           ; BSR set to: 0
 33433                           ;EEPROM.c: 216: {
 33434                           ;EEPROM.c: 217: for(j=0; j < 3; j++)
 33435  0065EC  0E00               	movlw	0
 33436  0065EE  0100               	movlb	0	; () banked
 33437  0065F0  6FBC               	movwf	SetEEPROM@j& (0+255),b
 33438  0065F2                     l12840:
 33439                           
 33440                           ; BSR set to: 0
 33441  0065F2  0E02               	movlw	2
 33442  0065F4  0100               	movlb	0	; () banked
 33443  0065F6  65BC               	cpfsgt	SetEEPROM@j& (0+255),b
 33444  0065F8  D001               	goto	l12844
 33445                           
 33446                           ; BSR set to: 0
 33447  0065FA  D048               	goto	l12862
 33448  0065FC                     l12844:
 33449                           
 33450                           ; BSR set to: 0
 33451                           ;EEPROM.c: 218: {
 33452                           ;EEPROM.c: 219: for(k=0; k < 2; k++)
 33453  0065FC  0E00               	movlw	0
 33454  0065FE  0100               	movlb	0	; () banked
 33455  006600  6FBA               	movwf	SetEEPROM@k& (0+255),b
 33456  006602                     l12846:
 33457                           
 33458                           ; BSR set to: 0
 33459  006602  0E01               	movlw	1
 33460  006604  0100               	movlb	0	; () banked
 33461  006606  65BA               	cpfsgt	SetEEPROM@k& (0+255),b
 33462  006608  D001               	goto	l12850
 33463                           
 33464                           ; BSR set to: 0
 33465  00660A  D03D               	goto	l12858
 33466  00660C                     l12850:
 33467                           
 33468                           ; BSR set to: 0
 33469                           ;EEPROM.c: 220: {
 33470                           ;EEPROM.c: 221: temp = Temp.RemoteButtonRF[i][j][k];
 33471  00660C  0100               	movlb	0	; () banked
 33472  00660E  51BB               	movf	SetEEPROM@i& (0+255),w,b
 33473  006610  0D06               	mullw	6
 33474  006612  0E00               	movlw	low SetEEPROM@Temp
 33475  006614  0100               	movlb	0	; () banked
 33476  006616  6FB2               	movwf	??_SetEEPROM& (0+255),b
 33477  006618  0E01               	movlw	high SetEEPROM@Temp
 33478  00661A  0100               	movlb	0	; () banked
 33479  00661C  6FB3               	movwf	(??_SetEEPROM+1)& (0+255),b
 33480  00661E  50F3               	movf	prodl,w,c
 33481  006620  0100               	movlb	0	; () banked
 33482  006622  27B2               	addwf	??_SetEEPROM& (0+255),f,b
 33483  006624  50F4               	movf	prodh,w,c
 33484  006626  0100               	movlb	0	; () banked
 33485  006628  23B3               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33486  00662A  0100               	movlb	0	; () banked
 33487  00662C  51BC               	movf	SetEEPROM@j& (0+255),w,b
 33488  00662E  0D02               	mullw	2
 33489  006630  50F3               	movf	prodl,w,c
 33490  006632  0100               	movlb	0	; () banked
 33491  006634  27B2               	addwf	??_SetEEPROM& (0+255),f,b
 33492  006636  50F4               	movf	prodh,w,c
 33493  006638  0100               	movlb	0	; () banked
 33494  00663A  23B3               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33495  00663C  0100               	movlb	0	; () banked
 33496  00663E  51BA               	movf	SetEEPROM@k& (0+255),w,b
 33497  006640  0D01               	mullw	1
 33498  006642  50F3               	movf	prodl,w,c
 33499  006644  0100               	movlb	0	; () banked
 33500  006646  27B2               	addwf	??_SetEEPROM& (0+255),f,b
 33501  006648  50F4               	movf	prodh,w,c
 33502  00664A  0100               	movlb	0	; () banked
 33503  00664C  23B3               	addwfc	(??_SetEEPROM+1)& (0+255),f,b
 33504  00664E  0E2E               	movlw	46
 33505  006650  0100               	movlb	0	; () banked
 33506  006652  25B2               	addwf	??_SetEEPROM& (0+255),w,b
 33507  006654  6ED9               	movwf	fsr2l,c
 33508  006656  0E00               	movlw	0
 33509  006658  0100               	movlb	0	; () banked
 33510  00665A  21B3               	addwfc	(??_SetEEPROM+1)& (0+255),w,b
 33511  00665C  6EDA               	movwf	fsr2h,c
 33512  00665E  50DF               	movf	indf2,w,c
 33513  006660  0100               	movlb	0	; () banked
 33514  006662  6FB8               	movwf	SetEEPROM@temp& (0+255),b
 33515                           
 33516                           ; BSR set to: 0
 33517                           ;EEPROM.c: 222: if(!SetMemoryChar(temp,Arrayspot++))
 33518  006664  0100               	movlb	0	; () banked
 33519  006666  2BB9               	incf	SetEEPROM@Arrayspot& (0+255),f,b
 33520  006668  05B9               	decf	SetEEPROM@Arrayspot& (0+255),w,b
 33521  00666A  0100               	movlb	0	; () banked
 33522  00666C  6F86               	movwf	SetMemoryChar@AddressFirst& (0+255),b
 33523  00666E  0100               	movlb	0	; () banked
 33524  006670  51B8               	movf	SetEEPROM@temp& (0+255),w,b
 33525  006672  ECE3  F048         	call	_SetMemoryChar
 33526  006676  0900               	iorlw	0
 33527  006678  A4D8               	btfss	status,2,c
 33528  00667A  D002               	goto	l974
 33529                           
 33530                           ;EEPROM.c: 223: {
 33531                           ;EEPROM.c: 225: fail |= 0x00000010;
 33532  00667C  0100               	movlb	0	; () banked
 33533  00667E  89B4               	bsf	SetEEPROM@fail& (0+255),4,b
 33534  006680                     l974:
 33535  006680  0100               	movlb	0	; () banked
 33536  006682  2BBA               	incf	SetEEPROM@k& (0+255),f,b
 33537  006684  D7BE               	goto	l12846
 33538  006686                     l12858:
 33539                           
 33540                           ; BSR set to: 0
 33541  006686  0100               	movlb	0	; () banked
 33542  006688  2BBC               	incf	SetEEPROM@j& (0+255),f,b
 33543  00668A  D7B3               	goto	l12840
 33544  00668C                     l12862:
 33545                           
 33546                           ; BSR set to: 0
 33547  00668C  0100               	movlb	0	; () banked
 33548  00668E  2BBB               	incf	SetEEPROM@i& (0+255),f,b
 33549  006690  D7A8               	goto	l12834
 33550  006692                     l967:
 33551                           
 33552                           ;EEPROM.c: 226: }
 33553                           ;EEPROM.c: 227: }
 33554                           ;EEPROM.c: 228: }
 33555                           ;EEPROM.c: 229: }
 33556                           ;EEPROM.c: 230: }
 33557                           ;EEPROM.c: 231: return fail;
 33558  006692  C0B4  F100         	movff	SetEEPROM@fail,?_SetEEPROM
 33559  006696  C0B5  F101         	movff	SetEEPROM@fail+1,?_SetEEPROM+1
 33560  00669A  C0B6  F102         	movff	SetEEPROM@fail+2,?_SetEEPROM+2
 33561  00669E  C0B7  F103         	movff	SetEEPROM@fail+3,?_SetEEPROM+3
 33562  0066A2  0012               	return		;funcret
 33563  0066A4                     __end_of_SetEEPROM:
 33564                           	opt stack 0
 33565                           tblptru	equ	0xFF8
 33566                           tblptrh	equ	0xFF7
 33567                           tblptrl	equ	0xFF6
 33568                           tablat	equ	0xFF5
 33569                           prodh	equ	0xFF4
 33570                           prodl	equ	0xFF3
 33571                           intcon	equ	0xFF2
 33572                           intcon2	equ	0xFF1
 33573                           indf0	equ	0xFEF
 33574                           postinc0	equ	0xFEE
 33575                           plusw0	equ	0xFEB
 33576                           fsr0h	equ	0xFEA
 33577                           fsr0l	equ	0xFE9
 33578                           wreg	equ	0xFE8
 33579                           indf1	equ	0xFE7
 33580                           postdec1	equ	0xFE5
 33581                           fsr1h	equ	0xFE2
 33582                           fsr1l	equ	0xFE1
 33583                           indf2	equ	0xFDF
 33584                           postinc2	equ	0xFDE
 33585                           postdec2	equ	0xFDD
 33586                           plusw2	equ	0xFDB
 33587                           fsr2h	equ	0xFDA
 33588                           fsr2l	equ	0xFD9
 33589                           status	equ	0xFD8
 33590                           
 33591 ;; *************** function _SetMemoryLong *****************
 33592 ;; Defined at:
 33593 ;;		line 360 in file "EEPROM.c"
 33594 ;; Parameters:    Size  Location     Type
 33595 ;;  Data            4   65[BANK0 ] unsigned long 
 33596 ;;  AddressFirst    1   69[BANK0 ] unsigned char 
 33597 ;; Auto vars:     Size  Location     Type
 33598 ;;  Test            4   74[BANK0 ] unsigned long 
 33599 ;;  L               1   81[BANK0 ] unsigned char 
 33600 ;;  ML              1   80[BANK0 ] unsigned char 
 33601 ;;  MH              1   79[BANK0 ] unsigned char 
 33602 ;;  H               1   78[BANK0 ] unsigned char 
 33603 ;; Return value:  Size  Location     Type
 33604 ;;                  1    wreg      unsigned char 
 33605 ;; Registers used:
 33606 ;;		wreg, status,2, status,0, cstack
 33607 ;; Tracked objects:
 33608 ;;		On entry : 0/0
 33609 ;;		On exit  : 0/0
 33610 ;;		Unchanged: 0/0
 33611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33612 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33613 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33614 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33615 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33616 ;;Total ram usage:       17 bytes
 33617 ;; Hardware stack levels used:    1
 33618 ;; Hardware stack levels required when called:    8
 33619 ;; This function calls:
 33620 ;;		_GetMemoryLong
 33621 ;;		_WriteEEPROM_1Byte
 33622 ;; This function is called by:
 33623 ;;		_SetEEPROM
 33624 ;; This function uses a non-reentrant model
 33625 ;;
 33626                           
 33627                           	psect	text89
 33628  007AC8                     __ptext89:
 33629                           	opt stack 0
 33630  007AC8                     _SetMemoryLong:
 33631                           	opt stack 19
 33632                           
 33633                           ;EEPROM.c: 362: unsigned char H;
 33634                           ;EEPROM.c: 363: unsigned char MH;
 33635                           ;EEPROM.c: 364: unsigned char ML;
 33636                           ;EEPROM.c: 365: unsigned char L;
 33637                           ;EEPROM.c: 366: unsigned long Test;
 33638                           ;EEPROM.c: 368: H = (unsigned char) ((Data & 0XFF000000) >> 24);
 33639                           
 33640                           ;incstack = 0
 33641  007AC8  0E00               	movlw	0
 33642  007ACA  0100               	movlb	0	; () banked
 33643  007ACC  15A1               	andwf	SetMemoryLong@Data& (0+255),w,b
 33644  007ACE  0100               	movlb	0	; () banked
 33645  007AD0  6FA6               	movwf	??_SetMemoryLong& (0+255),b
 33646  007AD2  0E00               	movlw	0
 33647  007AD4  0100               	movlb	0	; () banked
 33648  007AD6  15A2               	andwf	(SetMemoryLong@Data+1)& (0+255),w,b
 33649  007AD8  0100               	movlb	0	; () banked
 33650  007ADA  6FA7               	movwf	(??_SetMemoryLong+1)& (0+255),b
 33651  007ADC  0E00               	movlw	0
 33652  007ADE  0100               	movlb	0	; () banked
 33653  007AE0  15A3               	andwf	(SetMemoryLong@Data+2)& (0+255),w,b
 33654  007AE2  0100               	movlb	0	; () banked
 33655  007AE4  6FA8               	movwf	(??_SetMemoryLong+2)& (0+255),b
 33656  007AE6  0EFF               	movlw	255
 33657  007AE8  0100               	movlb	0	; () banked
 33658  007AEA  15A4               	andwf	(SetMemoryLong@Data+3)& (0+255),w,b
 33659  007AEC  0100               	movlb	0	; () banked
 33660  007AEE  6FA9               	movwf	(??_SetMemoryLong+3)& (0+255),b
 33661  007AF0  0E19               	movlw	25
 33662  007AF2  D006               	goto	u14640
 33663  007AF4                     u14645:
 33664  007AF4  0100               	movlb	0	; () banked
 33665  007AF6  90D8               	bcf	status,0,c
 33666  007AF8  33A9               	rrcf	(??_SetMemoryLong+3)& (0+255),f,b
 33667  007AFA  33A8               	rrcf	(??_SetMemoryLong+2)& (0+255),f,b
 33668  007AFC  33A7               	rrcf	(??_SetMemoryLong+1)& (0+255),f,b
 33669  007AFE  33A6               	rrcf	??_SetMemoryLong& (0+255),f,b
 33670  007B00                     u14640:
 33671  007B00  2EE8               	decfsz	wreg,f,c
 33672  007B02  D7F8               	goto	u14645
 33673  007B04  0100               	movlb	0	; () banked
 33674  007B06  51A6               	movf	??_SetMemoryLong& (0+255),w,b
 33675  007B08  0100               	movlb	0	; () banked
 33676  007B0A  6FAE               	movwf	SetMemoryLong@H& (0+255),b
 33677                           
 33678                           ; BSR set to: 0
 33679                           ;EEPROM.c: 369: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
 33680  007B0C  C0A3  F0AF         	movff	SetMemoryLong@Data+2,SetMemoryLong@MH
 33681                           
 33682                           ; BSR set to: 0
 33683                           ;EEPROM.c: 370: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
 33684  007B10  C0A2  F0B0         	movff	SetMemoryLong@Data+1,SetMemoryLong@ML
 33685                           
 33686                           ; BSR set to: 0
 33687                           ;EEPROM.c: 371: L = (unsigned char) (Data & 0X000000FF);
 33688  007B14  C0A1  F0B1         	movff	SetMemoryLong@Data,SetMemoryLong@L
 33689                           
 33690                           ; BSR set to: 0
 33691                           ;EEPROM.c: 374: WriteEEPROM_1Byte(AddressFirst, H);
 33692  007B18  C0A5  F07C         	movff	SetMemoryLong@AddressFirst,WriteEEPROM_1Byte@address
 33693  007B1C  0100               	movlb	0	; () banked
 33694  007B1E  6B7D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33695  007B20  C0AE  F07E         	movff	SetMemoryLong@H,WriteEEPROM_1Byte@data
 33696  007B24  EC37  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33697                           
 33698                           ;EEPROM.c: 375: WriteEEPROM_1Byte((AddressFirst + 1), MH);
 33699  007B28  0E01               	movlw	1
 33700  007B2A  0100               	movlb	0	; () banked
 33701  007B2C  25A5               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33702  007B2E  0100               	movlb	0	; () banked
 33703  007B30  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33704  007B32  0100               	movlb	0	; () banked
 33705  007B34  6B7D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33706  007B36  0E00               	movlw	0
 33707  007B38  237D               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33708  007B3A  C0AF  F07E         	movff	SetMemoryLong@MH,WriteEEPROM_1Byte@data
 33709  007B3E  EC37  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33710                           
 33711                           ;EEPROM.c: 376: WriteEEPROM_1Byte((AddressFirst + 2), ML);
 33712  007B42  0E02               	movlw	2
 33713  007B44  0100               	movlb	0	; () banked
 33714  007B46  25A5               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33715  007B48  0100               	movlb	0	; () banked
 33716  007B4A  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33717  007B4C  0100               	movlb	0	; () banked
 33718  007B4E  6B7D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33719  007B50  0E00               	movlw	0
 33720  007B52  237D               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33721  007B54  C0B0  F07E         	movff	SetMemoryLong@ML,WriteEEPROM_1Byte@data
 33722  007B58  EC37  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33723                           
 33724                           ;EEPROM.c: 377: WriteEEPROM_1Byte((AddressFirst + 3), L);
 33725  007B5C  0E03               	movlw	3
 33726  007B5E  0100               	movlb	0	; () banked
 33727  007B60  25A5               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
 33728  007B62  0100               	movlb	0	; () banked
 33729  007B64  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 33730  007B66  0100               	movlb	0	; () banked
 33731  007B68  6B7D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 33732  007B6A  0E00               	movlw	0
 33733  007B6C  237D               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
 33734  007B6E  C0B1  F07E         	movff	SetMemoryLong@L,WriteEEPROM_1Byte@data
 33735  007B72  EC37  F046         	call	_WriteEEPROM_1Byte	;wreg free
 33736                           
 33737                           ;EEPROM.c: 380: Test = GetMemoryLong(AddressFirst);
 33738  007B76  0100               	movlb	0	; () banked
 33739  007B78  51A5               	movf	SetMemoryLong@AddressFirst& (0+255),w,b
 33740  007B7A  EC9D  F036         	call	_GetMemoryLong
 33741  007B7E  C080  F0AA         	movff	?_GetMemoryLong,SetMemoryLong@Test
 33742  007B82  C081  F0AB         	movff	?_GetMemoryLong+1,SetMemoryLong@Test+1
 33743  007B86  C082  F0AC         	movff	?_GetMemoryLong+2,SetMemoryLong@Test+2
 33744  007B8A  C083  F0AD         	movff	?_GetMemoryLong+3,SetMemoryLong@Test+3
 33745                           
 33746                           ;EEPROM.c: 382: if(Test == Data)
 33747  007B8E  0100               	movlb	0	; () banked
 33748  007B90  51A1               	movf	SetMemoryLong@Data& (0+255),w,b
 33749  007B92  0100               	movlb	0	; () banked
 33750  007B94  19AA               	xorwf	SetMemoryLong@Test& (0+255),w,b
 33751  007B96  E112               	bnz	l12516
 33752  007B98  0100               	movlb	0	; () banked
 33753  007B9A  51A2               	movf	(SetMemoryLong@Data+1)& (0+255),w,b
 33754  007B9C  0100               	movlb	0	; () banked
 33755  007B9E  19AB               	xorwf	(SetMemoryLong@Test+1)& (0+255),w,b
 33756  007BA0  E10D               	bnz	l12516
 33757  007BA2  0100               	movlb	0	; () banked
 33758  007BA4  51A3               	movf	(SetMemoryLong@Data+2)& (0+255),w,b
 33759  007BA6  0100               	movlb	0	; () banked
 33760  007BA8  19AC               	xorwf	(SetMemoryLong@Test+2)& (0+255),w,b
 33761  007BAA  E108               	bnz	l12516
 33762  007BAC  0100               	movlb	0	; () banked
 33763  007BAE  51A4               	movf	(SetMemoryLong@Data+3)& (0+255),w,b
 33764  007BB0  0100               	movlb	0	; () banked
 33765  007BB2  19AD               	xorwf	(SetMemoryLong@Test+3)& (0+255),w,b
 33766  007BB4  A4D8               	btfss	status,2,c
 33767  007BB6  D002               	goto	l12516
 33768                           
 33769                           ; BSR set to: 0
 33770                           ;EEPROM.c: 383: {
 33771                           ;EEPROM.c: 384: return 1;
 33772  007BB8  0E01               	movlw	1
 33773                           
 33774                           ; BSR set to: 0
 33775  007BBA  0012               	return	
 33776  007BBC                     l12516:
 33777                           
 33778                           ; BSR set to: 0
 33779                           ;EEPROM.c: 385: }
 33780                           ;EEPROM.c: 386: return 0;
 33781  007BBC  0E00               	movlw	0
 33782  007BBE  0012               	return	
 33783                           
 33784                           ; BSR set to: 0
 33785                           
 33786                           ; BSR set to: 0
 33787  007BC0  0012               	return		;funcret
 33788  007BC2                     __end_of_SetMemoryLong:
 33789                           	opt stack 0
 33790                           tblptru	equ	0xFF8
 33791                           tblptrh	equ	0xFF7
 33792                           tblptrl	equ	0xFF6
 33793                           tablat	equ	0xFF5
 33794                           prodh	equ	0xFF4
 33795                           prodl	equ	0xFF3
 33796                           intcon	equ	0xFF2
 33797                           intcon2	equ	0xFF1
 33798                           indf0	equ	0xFEF
 33799                           postinc0	equ	0xFEE
 33800                           plusw0	equ	0xFEB
 33801                           fsr0h	equ	0xFEA
 33802                           fsr0l	equ	0xFE9
 33803                           wreg	equ	0xFE8
 33804                           indf1	equ	0xFE7
 33805                           postdec1	equ	0xFE5
 33806                           fsr1h	equ	0xFE2
 33807                           fsr1l	equ	0xFE1
 33808                           indf2	equ	0xFDF
 33809                           postinc2	equ	0xFDE
 33810                           postdec2	equ	0xFDD
 33811                           plusw2	equ	0xFDB
 33812                           fsr2h	equ	0xFDA
 33813                           fsr2l	equ	0xFD9
 33814                           status	equ	0xFD8
 33815                           
 33816 ;; *************** function _GetMemoryLong *****************
 33817 ;; Defined at:
 33818 ;;		line 337 in file "EEPROM.c"
 33819 ;; Parameters:    Size  Location     Type
 33820 ;;  AddressFirst    1    wreg     unsigned char 
 33821 ;; Auto vars:     Size  Location     Type
 33822 ;;  AddressFirst    1   64[BANK0 ] unsigned char 
 33823 ;;  temp            4   56[BANK0 ] unsigned long 
 33824 ;;  L               1   63[BANK0 ] unsigned char 
 33825 ;;  ML              1   62[BANK0 ] unsigned char 
 33826 ;;  MH              1   61[BANK0 ] unsigned char 
 33827 ;;  H               1   60[BANK0 ] unsigned char 
 33828 ;; Return value:  Size  Location     Type
 33829 ;;                  4   32[BANK0 ] unsigned long 
 33830 ;; Registers used:
 33831 ;;		wreg, status,2, status,0, cstack
 33832 ;; Tracked objects:
 33833 ;;		On entry : 0/0
 33834 ;;		On exit  : 0/0
 33835 ;;		Unchanged: 0/0
 33836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33837 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33838 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33839 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33840 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33841 ;;Total ram usage:       33 bytes
 33842 ;; Hardware stack levels used:    1
 33843 ;; Hardware stack levels required when called:    7
 33844 ;; This function calls:
 33845 ;;		_ReadEEPROM_1Byte
 33846 ;; This function is called by:
 33847 ;;		_GetEEPROM
 33848 ;;		_SetMemoryLong
 33849 ;; This function uses a non-reentrant model
 33850 ;;
 33851                           
 33852                           	psect	text90
 33853  006D3A                     __ptext90:
 33854                           	opt stack 0
 33855  006D3A                     _GetMemoryLong:
 33856                           	opt stack 19
 33857                           
 33858                           ; BSR set to: 0
 33859                           ;incstack = 0
 33860                           ;GetMemoryLong@AddressFirst stored from wreg
 33861  006D3A  0100               	movlb	0	; () banked
 33862  006D3C  6FA0               	movwf	GetMemoryLong@AddressFirst& (0+255),b
 33863                           
 33864                           ; BSR set to: 0
 33865                           ;EEPROM.c: 339: unsigned char H;
 33866                           ;EEPROM.c: 340: unsigned char MH;
 33867                           ;EEPROM.c: 341: unsigned char ML;
 33868                           ;EEPROM.c: 342: unsigned char L;
 33869                           ;EEPROM.c: 343: unsigned long temp =0;
 33870  006D3E  0E00               	movlw	0
 33871  006D40  0100               	movlb	0	; () banked
 33872  006D42  6F98               	movwf	GetMemoryLong@temp& (0+255),b
 33873  006D44  0E00               	movlw	0
 33874  006D46  6F99               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 33875  006D48  0E00               	movlw	0
 33876  006D4A  6F9A               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 33877  006D4C  0E00               	movlw	0
 33878  006D4E  6F9B               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 33879                           
 33880                           ; BSR set to: 0
 33881                           ;EEPROM.c: 345: H = ReadEEPROM_1Byte(AddressFirst);
 33882  006D50  C0A0  F07C         	movff	GetMemoryLong@AddressFirst,ReadEEPROM_1Byte@address
 33883  006D54  0100               	movlb	0	; () banked
 33884  006D56  6B7D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33885  006D58  EC04  F046         	call	_ReadEEPROM_1Byte	;wreg free
 33886  006D5C  0100               	movlb	0	; () banked
 33887  006D5E  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33888  006D60  0100               	movlb	0	; () banked
 33889  006D62  6F9C               	movwf	GetMemoryLong@H& (0+255),b
 33890                           
 33891                           ; BSR set to: 0
 33892                           ;EEPROM.c: 346: MH = ReadEEPROM_1Byte(AddressFirst + 1);
 33893  006D64  0E01               	movlw	1
 33894  006D66  0100               	movlb	0	; () banked
 33895  006D68  25A0               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33896  006D6A  0100               	movlb	0	; () banked
 33897  006D6C  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33898  006D6E  0100               	movlb	0	; () banked
 33899  006D70  6B7D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33900  006D72  0E00               	movlw	0
 33901  006D74  237D               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33902  006D76  EC04  F046         	call	_ReadEEPROM_1Byte	;wreg free
 33903  006D7A  0100               	movlb	0	; () banked
 33904  006D7C  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33905  006D7E  0100               	movlb	0	; () banked
 33906  006D80  6F9D               	movwf	GetMemoryLong@MH& (0+255),b
 33907                           
 33908                           ; BSR set to: 0
 33909                           ;EEPROM.c: 347: ML = ReadEEPROM_1Byte(AddressFirst + 2);
 33910  006D82  0E02               	movlw	2
 33911  006D84  0100               	movlb	0	; () banked
 33912  006D86  25A0               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33913  006D88  0100               	movlb	0	; () banked
 33914  006D8A  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33915  006D8C  0100               	movlb	0	; () banked
 33916  006D8E  6B7D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33917  006D90  0E00               	movlw	0
 33918  006D92  237D               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33919  006D94  EC04  F046         	call	_ReadEEPROM_1Byte	;wreg free
 33920  006D98  0100               	movlb	0	; () banked
 33921  006D9A  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33922  006D9C  0100               	movlb	0	; () banked
 33923  006D9E  6F9E               	movwf	GetMemoryLong@ML& (0+255),b
 33924                           
 33925                           ; BSR set to: 0
 33926                           ;EEPROM.c: 348: L = ReadEEPROM_1Byte(AddressFirst + 3);
 33927  006DA0  0E03               	movlw	3
 33928  006DA2  0100               	movlb	0	; () banked
 33929  006DA4  25A0               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
 33930  006DA6  0100               	movlb	0	; () banked
 33931  006DA8  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 33932  006DAA  0100               	movlb	0	; () banked
 33933  006DAC  6B7D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 33934  006DAE  0E00               	movlw	0
 33935  006DB0  237D               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
 33936  006DB2  EC04  F046         	call	_ReadEEPROM_1Byte	;wreg free
 33937  006DB6  0100               	movlb	0	; () banked
 33938  006DB8  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 33939  006DBA  0100               	movlb	0	; () banked
 33940  006DBC  6F9F               	movwf	GetMemoryLong@L& (0+255),b
 33941                           
 33942                           ; BSR set to: 0
 33943                           ;EEPROM.c: 350: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
 33944                           ;EEPROM.c: 351: + ((unsigned long)ML << 8) + (unsigned long)L);
 33945  006DBE  C09E  F084         	movff	GetMemoryLong@ML,??_GetMemoryLong
 33946  006DC2  0100               	movlb	0	; () banked
 33947  006DC4  6B85               	clrf	(??_GetMemoryLong+1)& (0+255),b
 33948  006DC6  6B86               	clrf	(??_GetMemoryLong+2)& (0+255),b
 33949  006DC8  6B87               	clrf	(??_GetMemoryLong+3)& (0+255),b
 33950  006DCA  C086  F087         	movff	??_GetMemoryLong+2,??_GetMemoryLong+3
 33951  006DCE  C085  F086         	movff	??_GetMemoryLong+1,??_GetMemoryLong+2
 33952  006DD2  C084  F085         	movff	??_GetMemoryLong,??_GetMemoryLong+1
 33953  006DD6  0100               	movlb	0	; () banked
 33954  006DD8  6B84               	clrf	??_GetMemoryLong& (0+255),b
 33955  006DDA  C09D  F088         	movff	GetMemoryLong@MH,??_GetMemoryLong+4
 33956  006DDE  0100               	movlb	0	; () banked
 33957  006DE0  6B89               	clrf	(??_GetMemoryLong+5)& (0+255),b
 33958  006DE2  6B8A               	clrf	(??_GetMemoryLong+6)& (0+255),b
 33959  006DE4  6B8B               	clrf	(??_GetMemoryLong+7)& (0+255),b
 33960  006DE6  C089  F08B         	movff	??_GetMemoryLong+5,??_GetMemoryLong+7
 33961  006DEA  C088  F08A         	movff	??_GetMemoryLong+4,??_GetMemoryLong+6
 33962  006DEE  0100               	movlb	0	; () banked
 33963  006DF0  6B89               	clrf	(??_GetMemoryLong+5)& (0+255),b
 33964  006DF2  6B88               	clrf	(??_GetMemoryLong+4)& (0+255),b
 33965  006DF4  C09C  F08C         	movff	GetMemoryLong@H,??_GetMemoryLong+8
 33966  006DF8  0100               	movlb	0	; () banked
 33967  006DFA  6B8D               	clrf	(??_GetMemoryLong+9)& (0+255),b
 33968  006DFC  6B8E               	clrf	(??_GetMemoryLong+10)& (0+255),b
 33969  006DFE  6B8F               	clrf	(??_GetMemoryLong+11)& (0+255),b
 33970  006E00  C08C  F08F         	movff	??_GetMemoryLong+8,??_GetMemoryLong+11
 33971  006E04  0100               	movlb	0	; () banked
 33972  006E06  6B8E               	clrf	(??_GetMemoryLong+10)& (0+255),b
 33973  006E08  6B8D               	clrf	(??_GetMemoryLong+9)& (0+255),b
 33974  006E0A  6B8C               	clrf	(??_GetMemoryLong+8)& (0+255),b
 33975  006E0C  0100               	movlb	0	; () banked
 33976  006E0E  5188               	movf	(??_GetMemoryLong+4)& (0+255),w,b
 33977  006E10  0100               	movlb	0	; () banked
 33978  006E12  258C               	addwf	(??_GetMemoryLong+8)& (0+255),w,b
 33979  006E14  0100               	movlb	0	; () banked
 33980  006E16  6F90               	movwf	(??_GetMemoryLong+12)& (0+255),b
 33981  006E18  0100               	movlb	0	; () banked
 33982  006E1A  5189               	movf	(??_GetMemoryLong+5)& (0+255),w,b
 33983  006E1C  0100               	movlb	0	; () banked
 33984  006E1E  218D               	addwfc	(??_GetMemoryLong+9)& (0+255),w,b
 33985  006E20  0100               	movlb	0	; () banked
 33986  006E22  6F91               	movwf	(??_GetMemoryLong+13)& (0+255),b
 33987  006E24  0100               	movlb	0	; () banked
 33988  006E26  518A               	movf	(??_GetMemoryLong+6)& (0+255),w,b
 33989  006E28  0100               	movlb	0	; () banked
 33990  006E2A  218E               	addwfc	(??_GetMemoryLong+10)& (0+255),w,b
 33991  006E2C  0100               	movlb	0	; () banked
 33992  006E2E  6F92               	movwf	(??_GetMemoryLong+14)& (0+255),b
 33993  006E30  0100               	movlb	0	; () banked
 33994  006E32  518B               	movf	(??_GetMemoryLong+7)& (0+255),w,b
 33995  006E34  0100               	movlb	0	; () banked
 33996  006E36  218F               	addwfc	(??_GetMemoryLong+11)& (0+255),w,b
 33997  006E38  0100               	movlb	0	; () banked
 33998  006E3A  6F93               	movwf	(??_GetMemoryLong+15)& (0+255),b
 33999  006E3C  0100               	movlb	0	; () banked
 34000  006E3E  5184               	movf	??_GetMemoryLong& (0+255),w,b
 34001  006E40  0100               	movlb	0	; () banked
 34002  006E42  2590               	addwf	(??_GetMemoryLong+12)& (0+255),w,b
 34003  006E44  0100               	movlb	0	; () banked
 34004  006E46  6F94               	movwf	(??_GetMemoryLong+16)& (0+255),b
 34005  006E48  0100               	movlb	0	; () banked
 34006  006E4A  5185               	movf	(??_GetMemoryLong+1)& (0+255),w,b
 34007  006E4C  0100               	movlb	0	; () banked
 34008  006E4E  2191               	addwfc	(??_GetMemoryLong+13)& (0+255),w,b
 34009  006E50  0100               	movlb	0	; () banked
 34010  006E52  6F95               	movwf	(??_GetMemoryLong+17)& (0+255),b
 34011  006E54  0100               	movlb	0	; () banked
 34012  006E56  5186               	movf	(??_GetMemoryLong+2)& (0+255),w,b
 34013  006E58  0100               	movlb	0	; () banked
 34014  006E5A  2192               	addwfc	(??_GetMemoryLong+14)& (0+255),w,b
 34015  006E5C  0100               	movlb	0	; () banked
 34016  006E5E  6F96               	movwf	(??_GetMemoryLong+18)& (0+255),b
 34017  006E60  0100               	movlb	0	; () banked
 34018  006E62  5187               	movf	(??_GetMemoryLong+3)& (0+255),w,b
 34019  006E64  0100               	movlb	0	; () banked
 34020  006E66  2193               	addwfc	(??_GetMemoryLong+15)& (0+255),w,b
 34021  006E68  0100               	movlb	0	; () banked
 34022  006E6A  6F97               	movwf	(??_GetMemoryLong+19)& (0+255),b
 34023  006E6C  0100               	movlb	0	; () banked
 34024  006E6E  519F               	movf	GetMemoryLong@L& (0+255),w,b
 34025  006E70  0100               	movlb	0	; () banked
 34026  006E72  2594               	addwf	(??_GetMemoryLong+16)& (0+255),w,b
 34027  006E74  0100               	movlb	0	; () banked
 34028  006E76  6F98               	movwf	GetMemoryLong@temp& (0+255),b
 34029  006E78  0E00               	movlw	0
 34030  006E7A  0100               	movlb	0	; () banked
 34031  006E7C  2195               	addwfc	(??_GetMemoryLong+17)& (0+255),w,b
 34032  006E7E  0100               	movlb	0	; () banked
 34033  006E80  6F99               	movwf	(GetMemoryLong@temp+1)& (0+255),b
 34034  006E82  0E00               	movlw	0
 34035  006E84  0100               	movlb	0	; () banked
 34036  006E86  2196               	addwfc	(??_GetMemoryLong+18)& (0+255),w,b
 34037  006E88  0100               	movlb	0	; () banked
 34038  006E8A  6F9A               	movwf	(GetMemoryLong@temp+2)& (0+255),b
 34039  006E8C  0E00               	movlw	0
 34040  006E8E  0100               	movlb	0	; () banked
 34041  006E90  2197               	addwfc	(??_GetMemoryLong+19)& (0+255),w,b
 34042  006E92  0100               	movlb	0	; () banked
 34043  006E94  6F9B               	movwf	(GetMemoryLong@temp+3)& (0+255),b
 34044                           
 34045                           ; BSR set to: 0
 34046                           ;EEPROM.c: 352: return temp;
 34047  006E96  C098  F080         	movff	GetMemoryLong@temp,?_GetMemoryLong
 34048  006E9A  C099  F081         	movff	GetMemoryLong@temp+1,?_GetMemoryLong+1
 34049  006E9E  C09A  F082         	movff	GetMemoryLong@temp+2,?_GetMemoryLong+2
 34050  006EA2  C09B  F083         	movff	GetMemoryLong@temp+3,?_GetMemoryLong+3
 34051  006EA6  0012               	return	
 34052                           
 34053                           ; BSR set to: 0
 34054                           
 34055                           ; BSR set to: 0
 34056  006EA8  0012               	return		;funcret
 34057  006EAA                     __end_of_GetMemoryLong:
 34058                           	opt stack 0
 34059                           tblptru	equ	0xFF8
 34060                           tblptrh	equ	0xFF7
 34061                           tblptrl	equ	0xFF6
 34062                           tablat	equ	0xFF5
 34063                           prodh	equ	0xFF4
 34064                           prodl	equ	0xFF3
 34065                           intcon	equ	0xFF2
 34066                           intcon2	equ	0xFF1
 34067                           indf0	equ	0xFEF
 34068                           postinc0	equ	0xFEE
 34069                           plusw0	equ	0xFEB
 34070                           fsr0h	equ	0xFEA
 34071                           fsr0l	equ	0xFE9
 34072                           wreg	equ	0xFE8
 34073                           indf1	equ	0xFE7
 34074                           postdec1	equ	0xFE5
 34075                           fsr1h	equ	0xFE2
 34076                           fsr1l	equ	0xFE1
 34077                           indf2	equ	0xFDF
 34078                           postinc2	equ	0xFDE
 34079                           postdec2	equ	0xFDD
 34080                           plusw2	equ	0xFDB
 34081                           fsr2h	equ	0xFDA
 34082                           fsr2l	equ	0xFD9
 34083                           status	equ	0xFD8
 34084                           
 34085 ;; *************** function _SetMemoryChar *****************
 34086 ;; Defined at:
 34087 ;;		line 454 in file "EEPROM.c"
 34088 ;; Parameters:    Size  Location     Type
 34089 ;;  Data            1    wreg     unsigned char 
 34090 ;;  AddressFirst    1   38[BANK0 ] unsigned char 
 34091 ;; Auto vars:     Size  Location     Type
 34092 ;;  Data            1   40[BANK0 ] unsigned char 
 34093 ;;  Test            1   39[BANK0 ] unsigned char 
 34094 ;; Return value:  Size  Location     Type
 34095 ;;                  1    wreg      unsigned char 
 34096 ;; Registers used:
 34097 ;;		wreg, status,2, status,0, cstack
 34098 ;; Tracked objects:
 34099 ;;		On entry : 0/0
 34100 ;;		On exit  : 0/0
 34101 ;;		Unchanged: 0/0
 34102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34103 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34104 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34106 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34107 ;;Total ram usage:        3 bytes
 34108 ;; Hardware stack levels used:    1
 34109 ;; Hardware stack levels required when called:    8
 34110 ;; This function calls:
 34111 ;;		_GetMemoryChar
 34112 ;;		_WriteEEPROM_1Byte
 34113 ;; This function is called by:
 34114 ;;		_SetEEPROM
 34115 ;; This function uses a non-reentrant model
 34116 ;;
 34117                           
 34118                           	psect	text91
 34119  0091C6                     __ptext91:
 34120                           	opt stack 0
 34121  0091C6                     _SetMemoryChar:
 34122                           	opt stack 19
 34123                           
 34124                           ; BSR set to: 0
 34125                           ;incstack = 0
 34126                           ;SetMemoryChar@Data stored from wreg
 34127  0091C6  0100               	movlb	0	; () banked
 34128  0091C8  6F88               	movwf	SetMemoryChar@Data& (0+255),b
 34129                           
 34130                           ; BSR set to: 0
 34131                           ;EEPROM.c: 456: unsigned char Test;
 34132                           ;EEPROM.c: 458: WriteEEPROM_1Byte(AddressFirst, Data);
 34133  0091CA  C086  F07C         	movff	SetMemoryChar@AddressFirst,WriteEEPROM_1Byte@address
 34134  0091CE  0100               	movlb	0	; () banked
 34135  0091D0  6B7D               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 34136  0091D2  C088  F07E         	movff	SetMemoryChar@Data,WriteEEPROM_1Byte@data
 34137  0091D6  EC37  F046         	call	_WriteEEPROM_1Byte	;wreg free
 34138                           
 34139                           ;EEPROM.c: 461: Test = GetMemoryChar(AddressFirst);
 34140  0091DA  0100               	movlb	0	; () banked
 34141  0091DC  5186               	movf	SetMemoryChar@AddressFirst& (0+255),w,b
 34142  0091DE  ECAB  F049         	call	_GetMemoryChar
 34143  0091E2  0100               	movlb	0	; () banked
 34144  0091E4  5180               	movf	?_GetMemoryChar& (0+255),w,b
 34145  0091E6  0100               	movlb	0	; () banked
 34146  0091E8  6F87               	movwf	SetMemoryChar@Test& (0+255),b
 34147                           
 34148                           ; BSR set to: 0
 34149                           ;EEPROM.c: 463: if(Test == Data)
 34150  0091EA  0100               	movlb	0	; () banked
 34151  0091EC  5188               	movf	SetMemoryChar@Data& (0+255),w,b
 34152  0091EE  0100               	movlb	0	; () banked
 34153  0091F0  1987               	xorwf	SetMemoryChar@Test& (0+255),w,b
 34154  0091F2  A4D8               	btfss	status,2,c
 34155  0091F4  D002               	goto	l12488
 34156                           
 34157                           ; BSR set to: 0
 34158                           ;EEPROM.c: 464: {
 34159                           ;EEPROM.c: 465: return 1;
 34160  0091F6  0E01               	movlw	1
 34161                           
 34162                           ; BSR set to: 0
 34163  0091F8  0012               	return	
 34164  0091FA                     l12488:
 34165                           
 34166                           ; BSR set to: 0
 34167                           ;EEPROM.c: 466: }
 34168                           ;EEPROM.c: 467: return 0;
 34169  0091FA  0E00               	movlw	0
 34170  0091FC  0012               	return	
 34171                           
 34172                           ; BSR set to: 0
 34173                           
 34174                           ; BSR set to: 0
 34175  0091FE  0012               	return		;funcret
 34176  009200                     __end_of_SetMemoryChar:
 34177                           	opt stack 0
 34178                           tblptru	equ	0xFF8
 34179                           tblptrh	equ	0xFF7
 34180                           tblptrl	equ	0xFF6
 34181                           tablat	equ	0xFF5
 34182                           prodh	equ	0xFF4
 34183                           prodl	equ	0xFF3
 34184                           intcon	equ	0xFF2
 34185                           intcon2	equ	0xFF1
 34186                           indf0	equ	0xFEF
 34187                           postinc0	equ	0xFEE
 34188                           plusw0	equ	0xFEB
 34189                           fsr0h	equ	0xFEA
 34190                           fsr0l	equ	0xFE9
 34191                           wreg	equ	0xFE8
 34192                           indf1	equ	0xFE7
 34193                           postdec1	equ	0xFE5
 34194                           fsr1h	equ	0xFE2
 34195                           fsr1l	equ	0xFE1
 34196                           indf2	equ	0xFDF
 34197                           postinc2	equ	0xFDE
 34198                           postdec2	equ	0xFDD
 34199                           plusw2	equ	0xFDB
 34200                           fsr2h	equ	0xFDA
 34201                           fsr2l	equ	0xFD9
 34202                           status	equ	0xFD8
 34203                           
 34204 ;; *************** function _WriteEEPROM_1Byte *****************
 34205 ;; Defined at:
 34206 ;;		line 102 in file "EEPROM.c"
 34207 ;; Parameters:    Size  Location     Type
 34208 ;;  address         2   28[BANK0 ] unsigned int 
 34209 ;;  data            1   30[BANK0 ] unsigned char 
 34210 ;; Auto vars:     Size  Location     Type
 34211 ;;  PEIEstatus      1   32[BANK0 ] unsigned char 
 34212 ;;  GIEstatus       1   31[BANK0 ] unsigned char 
 34213 ;; Return value:  Size  Location     Type
 34214 ;;		None               void
 34215 ;; Registers used:
 34216 ;;		wreg, status,2, status,0, cstack
 34217 ;; Tracked objects:
 34218 ;;		On entry : 0/0
 34219 ;;		On exit  : 0/0
 34220 ;;		Unchanged: 0/0
 34221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34222 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34223 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34225 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34226 ;;Total ram usage:        5 bytes
 34227 ;; Hardware stack levels used:    1
 34228 ;; Hardware stack levels required when called:    7
 34229 ;; This function calls:
 34230 ;;		_EEPROM_UNLOCK
 34231 ;; This function is called by:
 34232 ;;		_SetMemoryLong
 34233 ;;		_SetMemoryChar
 34234 ;;		_SetMemoryInt
 34235 ;; This function uses a non-reentrant model
 34236 ;;
 34237                           
 34238                           	psect	text92
 34239  008C6E                     __ptext92:
 34240                           	opt stack 0
 34241  008C6E                     _WriteEEPROM_1Byte:
 34242                           	opt stack 19
 34243                           
 34244                           ;EEPROM.c: 104: unsigned char GIEstatus = INTCONbits.GIE;
 34245                           
 34246                           ; BSR set to: 0
 34247                           ;incstack = 0
 34248  008C6E  0E00               	movlw	0
 34249  008C70  BEF2               	btfsc	intcon,7,c	;volatile
 34250  008C72  0E01               	movlw	1
 34251  008C74  0100               	movlb	0	; () banked
 34252  008C76  6F7F               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 34253                           
 34254                           ;EEPROM.c: 105: unsigned char PEIEstatus = INTCONbits.PEIE;
 34255  008C78  0E00               	movlw	0
 34256  008C7A  BCF2               	btfsc	intcon,6,c	;volatile
 34257  008C7C  0E01               	movlw	1
 34258  008C7E  0100               	movlb	0	; () banked
 34259  008C80  6F80               	movwf	WriteEEPROM_1Byte@PEIEstatus& (0+255),b
 34260                           
 34261                           ; BSR set to: 0
 34262                           ;EEPROM.c: 106: INTCONbits.GIE = 0;
 34263  008C82  9EF2               	bcf	intcon,7,c	;volatile
 34264                           
 34265                           ; BSR set to: 0
 34266                           ;EEPROM.c: 107: INTCONbits.PEIE = 0;
 34267  008C84  9CF2               	bcf	intcon,6,c	;volatile
 34268                           
 34269                           ; BSR set to: 0
 34270                           ;EEPROM.c: 108: EEADRH = (unsigned char)((address & 0x300) >> 8);
 34271  008C86  0100               	movlb	0	; () banked
 34272  008C88  517D               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
 34273  008C8A  0B03               	andlw	3
 34274  008C8C  6EAA               	movwf	4010,c	;volatile
 34275                           
 34276                           ; BSR set to: 0
 34277                           ;EEPROM.c: 109: EEADR = (unsigned char)(address & 0xFF);
 34278  008C8E  C07C  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 34279                           
 34280                           ; BSR set to: 0
 34281                           ;EEPROM.c: 110: EEDATA = data;
 34282  008C92  C07E  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 34283                           
 34284                           ; BSR set to: 0
 34285                           ;EEPROM.c: 111: EECON1bits.EEPGD = 0;
 34286  008C96  9EA6               	bcf	4006,7,c	;volatile
 34287                           
 34288                           ; BSR set to: 0
 34289                           ;EEPROM.c: 112: EECON1bits.CFGS = 0;
 34290  008C98  9CA6               	bcf	4006,6,c	;volatile
 34291                           
 34292                           ; BSR set to: 0
 34293                           ;EEPROM.c: 113: EECON1bits.WREN =1;
 34294  008C9A  84A6               	bsf	4006,2,c	;volatile
 34295                           
 34296                           ; BSR set to: 0
 34297                           ;EEPROM.c: 114: INTCONbits.GIE =0;
 34298  008C9C  9EF2               	bcf	intcon,7,c	;volatile
 34299                           
 34300                           ; BSR set to: 0
 34301                           ;EEPROM.c: 115: EEPROM_UNLOCK();
 34302  008C9E  EC24  F04A         	call	_EEPROM_UNLOCK	;wreg free
 34303                           
 34304                           ;EEPROM.c: 116: EECON1bits.WR =1;
 34305  008CA2  82A6               	bsf	4006,1,c	;volatile
 34306                           
 34307                           ;EEPROM.c: 117: while(EECON1bits.WR);
 34308  008CA4  D000               	goto	l934
 34309  008CA6                     l934:
 34310  008CA6  B2A6               	btfsc	4006,1,c	;volatile
 34311  008CA8  D7FE               	goto	l934
 34312                           
 34313                           ;EEPROM.c: 118: EECON1bits.WREN =0;
 34314  008CAA  94A6               	bcf	4006,2,c	;volatile
 34315                           
 34316                           ;EEPROM.c: 119: if(GIEstatus)
 34317  008CAC  0100               	movlb	0	; () banked
 34318  008CAE  517F               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 34319  008CB0  0100               	movlb	0	; () banked
 34320  008CB2  B4D8               	btfsc	status,2,c
 34321  008CB4  D002               	goto	l12410
 34322                           
 34323                           ; BSR set to: 0
 34324                           ;EEPROM.c: 120: {
 34325                           ;EEPROM.c: 121: INTCONbits.GIE =1;
 34326  008CB6  8EF2               	bsf	intcon,7,c	;volatile
 34327  008CB8  D000               	goto	l12410
 34328  008CBA                     l12410:
 34329                           
 34330                           ; BSR set to: 0
 34331                           ;EEPROM.c: 122: }
 34332                           ;EEPROM.c: 123: if(PEIEstatus)
 34333  008CBA  0100               	movlb	0	; () banked
 34334  008CBC  5180               	movf	WriteEEPROM_1Byte@PEIEstatus& (0+255),w,b
 34335  008CBE  0100               	movlb	0	; () banked
 34336  008CC0  B4D8               	btfsc	status,2,c
 34337  008CC2  0012               	return	
 34338                           
 34339                           ; BSR set to: 0
 34340                           ;EEPROM.c: 124: {
 34341                           ;EEPROM.c: 125: PEIEstatus = INTCONbits.PEIE;
 34342  008CC4  0E00               	movlw	0
 34343  008CC6  BCF2               	btfsc	intcon,6,c	;volatile
 34344  008CC8  0E01               	movlw	1
 34345  008CCA  0100               	movlb	0	; () banked
 34346  008CCC  6F80               	movwf	WriteEEPROM_1Byte@PEIEstatus& (0+255),b
 34347  008CCE  0012               	return	
 34348                           
 34349                           ; BSR set to: 0
 34350                           
 34351                           ; BSR set to: 0
 34352  008CD0  0012               	return		;funcret
 34353  008CD2                     __end_of_WriteEEPROM_1Byte:
 34354                           	opt stack 0
 34355                           tblptru	equ	0xFF8
 34356                           tblptrh	equ	0xFF7
 34357                           tblptrl	equ	0xFF6
 34358                           tablat	equ	0xFF5
 34359                           prodh	equ	0xFF4
 34360                           prodl	equ	0xFF3
 34361                           intcon	equ	0xFF2
 34362                           intcon2	equ	0xFF1
 34363                           indf0	equ	0xFEF
 34364                           postinc0	equ	0xFEE
 34365                           plusw0	equ	0xFEB
 34366                           fsr0h	equ	0xFEA
 34367                           fsr0l	equ	0xFE9
 34368                           wreg	equ	0xFE8
 34369                           indf1	equ	0xFE7
 34370                           postdec1	equ	0xFE5
 34371                           fsr1h	equ	0xFE2
 34372                           fsr1l	equ	0xFE1
 34373                           indf2	equ	0xFDF
 34374                           postinc2	equ	0xFDE
 34375                           postdec2	equ	0xFDD
 34376                           plusw2	equ	0xFDB
 34377                           fsr2h	equ	0xFDA
 34378                           fsr2l	equ	0xFD9
 34379                           status	equ	0xFD8
 34380                           
 34381 ;; *************** function _EEPROM_UNLOCK *****************
 34382 ;; Defined at:
 34383 ;;		line 87 in file "EEPROM.c"
 34384 ;; Parameters:    Size  Location     Type
 34385 ;;		None
 34386 ;; Auto vars:     Size  Location     Type
 34387 ;;		None
 34388 ;; Return value:  Size  Location     Type
 34389 ;;		None               void
 34390 ;; Registers used:
 34391 ;;		wreg, status,2
 34392 ;; Tracked objects:
 34393 ;;		On entry : 0/0
 34394 ;;		On exit  : 0/0
 34395 ;;		Unchanged: 0/0
 34396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34401 ;;Total ram usage:        0 bytes
 34402 ;; Hardware stack levels used:    1
 34403 ;; Hardware stack levels required when called:    6
 34404 ;; This function calls:
 34405 ;;		Nothing
 34406 ;; This function is called by:
 34407 ;;		_WriteEEPROM_1Byte
 34408 ;; This function uses a non-reentrant model
 34409 ;;
 34410                           
 34411                           	psect	text93
 34412  009448                     __ptext93:
 34413                           	opt stack 0
 34414  009448                     _EEPROM_UNLOCK:
 34415                           	opt stack 19
 34416                           
 34417                           ;EEPROM.c: 89: EECON2 = 0x55;
 34418                           
 34419                           ; BSR set to: 0
 34420                           ;incstack = 0
 34421  009448  0E55               	movlw	85
 34422  00944A  6EA7               	movwf	4007,c	;volatile
 34423                           
 34424                           ;EEPROM.c: 90: EECON2 = 0xAA;
 34425  00944C  0EAA               	movlw	170
 34426  00944E  6EA7               	movwf	4007,c	;volatile
 34427                           
 34428                           ;EEPROM.c: 91: EECON1bits.WR =1;
 34429  009450  82A6               	bsf	4006,1,c	;volatile
 34430                           
 34431                           ;EEPROM.c: 92: while(EECON1bits.WR);
 34432  009452  D000               	goto	l928
 34433  009454                     l928:
 34434  009454  B2A6               	btfsc	4006,1,c	;volatile
 34435  009456  D7FE               	goto	l928
 34436                           
 34437                           ;EEPROM.c: 93: __nop();
 34438  009458  F000               	nop	
 34439                           
 34440                           ;EEPROM.c: 94: __nop();
 34441  00945A  F000               	nop	
 34442  00945C  0012               	return		;funcret
 34443  00945E                     __end_of_EEPROM_UNLOCK:
 34444                           	opt stack 0
 34445                           tblptru	equ	0xFF8
 34446                           tblptrh	equ	0xFF7
 34447                           tblptrl	equ	0xFF6
 34448                           tablat	equ	0xFF5
 34449                           prodh	equ	0xFF4
 34450                           prodl	equ	0xFF3
 34451                           intcon	equ	0xFF2
 34452                           intcon2	equ	0xFF1
 34453                           indf0	equ	0xFEF
 34454                           postinc0	equ	0xFEE
 34455                           plusw0	equ	0xFEB
 34456                           fsr0h	equ	0xFEA
 34457                           fsr0l	equ	0xFE9
 34458                           wreg	equ	0xFE8
 34459                           indf1	equ	0xFE7
 34460                           postdec1	equ	0xFE5
 34461                           fsr1h	equ	0xFE2
 34462                           fsr1l	equ	0xFE1
 34463                           indf2	equ	0xFDF
 34464                           postinc2	equ	0xFDE
 34465                           postdec2	equ	0xFDD
 34466                           plusw2	equ	0xFDB
 34467                           fsr2h	equ	0xFDA
 34468                           fsr2l	equ	0xFD9
 34469                           status	equ	0xFD8
 34470                           
 34471 ;; *************** function _GetMemoryChar *****************
 34472 ;; Defined at:
 34473 ;;		line 440 in file "EEPROM.c"
 34474 ;; Parameters:    Size  Location     Type
 34475 ;;  AddressFirst    1    wreg     unsigned char 
 34476 ;; Auto vars:     Size  Location     Type
 34477 ;;  AddressFirst    1   36[BANK0 ] unsigned char 
 34478 ;;  H               1   37[BANK0 ] unsigned char 
 34479 ;; Return value:  Size  Location     Type
 34480 ;;                  4   32[BANK0 ] unsigned long 
 34481 ;; Registers used:
 34482 ;;		wreg, status,2, status,0, cstack
 34483 ;; Tracked objects:
 34484 ;;		On entry : 0/0
 34485 ;;		On exit  : 0/0
 34486 ;;		Unchanged: 0/0
 34487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34488 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34489 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34491 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34492 ;;Total ram usage:        6 bytes
 34493 ;; Hardware stack levels used:    1
 34494 ;; Hardware stack levels required when called:    7
 34495 ;; This function calls:
 34496 ;;		_ReadEEPROM_1Byte
 34497 ;; This function is called by:
 34498 ;;		_GetEEPROM
 34499 ;;		_SetMemoryChar
 34500 ;; This function uses a non-reentrant model
 34501 ;;
 34502                           
 34503                           	psect	text94
 34504  009356                     __ptext94:
 34505                           	opt stack 0
 34506  009356                     _GetMemoryChar:
 34507                           	opt stack 19
 34508                           
 34509                           ;incstack = 0
 34510                           ;GetMemoryChar@AddressFirst stored from wreg
 34511  009356  0100               	movlb	0	; () banked
 34512  009358  6F84               	movwf	GetMemoryChar@AddressFirst& (0+255),b
 34513                           
 34514                           ; BSR set to: 0
 34515                           ;EEPROM.c: 442: unsigned char H;
 34516                           ;EEPROM.c: 444: H = ReadEEPROM_1Byte(AddressFirst);
 34517  00935A  C084  F07C         	movff	GetMemoryChar@AddressFirst,ReadEEPROM_1Byte@address
 34518  00935E  0100               	movlb	0	; () banked
 34519  009360  6B7D               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 34520  009362  EC04  F046         	call	_ReadEEPROM_1Byte	;wreg free
 34521  009366  0100               	movlb	0	; () banked
 34522  009368  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 34523  00936A  0100               	movlb	0	; () banked
 34524  00936C  6F85               	movwf	GetMemoryChar@H& (0+255),b
 34525                           
 34526                           ; BSR set to: 0
 34527                           ;EEPROM.c: 446: return H;
 34528  00936E  0100               	movlb	0	; () banked
 34529  009370  5185               	movf	GetMemoryChar@H& (0+255),w,b
 34530  009372  0100               	movlb	0	; () banked
 34531  009374  6F80               	movwf	?_GetMemoryChar& (0+255),b
 34532  009376  6B81               	clrf	(?_GetMemoryChar+1)& (0+255),b
 34533  009378  6B82               	clrf	(?_GetMemoryChar+2)& (0+255),b
 34534  00937A  6B83               	clrf	(?_GetMemoryChar+3)& (0+255),b
 34535  00937C  0012               	return	
 34536                           
 34537                           ; BSR set to: 0
 34538                           
 34539                           ; BSR set to: 0
 34540  00937E  0012               	return		;funcret
 34541  009380                     __end_of_GetMemoryChar:
 34542                           	opt stack 0
 34543                           tblptru	equ	0xFF8
 34544                           tblptrh	equ	0xFF7
 34545                           tblptrl	equ	0xFF6
 34546                           tablat	equ	0xFF5
 34547                           prodh	equ	0xFF4
 34548                           prodl	equ	0xFF3
 34549                           intcon	equ	0xFF2
 34550                           intcon2	equ	0xFF1
 34551                           indf0	equ	0xFEF
 34552                           postinc0	equ	0xFEE
 34553                           plusw0	equ	0xFEB
 34554                           fsr0h	equ	0xFEA
 34555                           fsr0l	equ	0xFE9
 34556                           wreg	equ	0xFE8
 34557                           indf1	equ	0xFE7
 34558                           postdec1	equ	0xFE5
 34559                           fsr1h	equ	0xFE2
 34560                           fsr1l	equ	0xFE1
 34561                           indf2	equ	0xFDF
 34562                           postinc2	equ	0xFDE
 34563                           postdec2	equ	0xFDD
 34564                           plusw2	equ	0xFDB
 34565                           fsr2h	equ	0xFDA
 34566                           fsr2l	equ	0xFD9
 34567                           status	equ	0xFD8
 34568                           
 34569 ;; *************** function _ReadEEPROM_1Byte *****************
 34570 ;; Defined at:
 34571 ;;		line 55 in file "EEPROM.c"
 34572 ;; Parameters:    Size  Location     Type
 34573 ;;  address         2   28[BANK0 ] unsigned int 
 34574 ;; Auto vars:     Size  Location     Type
 34575 ;;  PEIEstatus      1   31[BANK0 ] unsigned char 
 34576 ;;  GIEstatus       1   30[BANK0 ] unsigned char 
 34577 ;; Return value:  Size  Location     Type
 34578 ;;                  2   28[BANK0 ] unsigned int 
 34579 ;; Registers used:
 34580 ;;		wreg, status,2, status,0
 34581 ;; Tracked objects:
 34582 ;;		On entry : 0/0
 34583 ;;		On exit  : 0/0
 34584 ;;		Unchanged: 0/0
 34585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34587 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34589 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34590 ;;Total ram usage:        4 bytes
 34591 ;; Hardware stack levels used:    1
 34592 ;; Hardware stack levels required when called:    6
 34593 ;; This function calls:
 34594 ;;		Nothing
 34595 ;; This function is called by:
 34596 ;;		_GetMemoryLong
 34597 ;;		_GetMemoryChar
 34598 ;;		_GetMemoryInt
 34599 ;; This function uses a non-reentrant model
 34600 ;;
 34601                           
 34602                           	psect	text95
 34603  008C08                     __ptext95:
 34604                           	opt stack 0
 34605  008C08                     _ReadEEPROM_1Byte:
 34606                           	opt stack 19
 34607                           
 34608                           ;EEPROM.c: 57: unsigned char GIEstatus = INTCONbits.GIE;
 34609                           
 34610                           ; BSR set to: 0
 34611                           ;incstack = 0
 34612  008C08  0E00               	movlw	0
 34613  008C0A  BEF2               	btfsc	intcon,7,c	;volatile
 34614  008C0C  0E01               	movlw	1
 34615  008C0E  0100               	movlb	0	; () banked
 34616  008C10  6F7E               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 34617                           
 34618                           ;EEPROM.c: 58: unsigned char PEIEstatus = INTCONbits.PEIE;
 34619  008C12  0E00               	movlw	0
 34620  008C14  BCF2               	btfsc	intcon,6,c	;volatile
 34621  008C16  0E01               	movlw	1
 34622  008C18  0100               	movlb	0	; () banked
 34623  008C1A  6F7F               	movwf	ReadEEPROM_1Byte@PEIEstatus& (0+255),b
 34624                           
 34625                           ; BSR set to: 0
 34626                           ;EEPROM.c: 59: INTCONbits.GIE = 0;
 34627  008C1C  9EF2               	bcf	intcon,7,c	;volatile
 34628                           
 34629                           ; BSR set to: 0
 34630                           ;EEPROM.c: 60: INTCONbits.PEIE = 0;
 34631  008C1E  9CF2               	bcf	intcon,6,c	;volatile
 34632                           
 34633                           ; BSR set to: 0
 34634                           ;EEPROM.c: 61: EECON1bits.EEPGD = 0;
 34635  008C20  9EA6               	bcf	4006,7,c	;volatile
 34636                           
 34637                           ; BSR set to: 0
 34638                           ;EEPROM.c: 62: EECON1bits.CFGS = 0;
 34639  008C22  9CA6               	bcf	4006,6,c	;volatile
 34640                           
 34641                           ; BSR set to: 0
 34642                           ;EEPROM.c: 63: EEADRH = (unsigned char)((address & 0x300) >> 8);
 34643  008C24  0100               	movlb	0	; () banked
 34644  008C26  517D               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
 34645  008C28  0B03               	andlw	3
 34646  008C2A  6EAA               	movwf	4010,c	;volatile
 34647                           
 34648                           ; BSR set to: 0
 34649                           ;EEPROM.c: 64: EEADR = (unsigned char)(address & 0xFF);
 34650  008C2C  C07C  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 34651                           
 34652                           ; BSR set to: 0
 34653                           ;EEPROM.c: 65: INTCONbits.GIE =0;
 34654  008C30  9EF2               	bcf	intcon,7,c	;volatile
 34655                           
 34656                           ; BSR set to: 0
 34657                           ;EEPROM.c: 66: EECON1bits.RD = 1;
 34658  008C32  80A6               	bsf	4006,0,c	;volatile
 34659                           
 34660                           ;EEPROM.c: 67: while(EECON1bits.RD);
 34661  008C34  D000               	goto	l920
 34662  008C36                     l920:
 34663  008C36  B0A6               	btfsc	4006,0,c	;volatile
 34664  008C38  D7FE               	goto	l920
 34665                           
 34666                           ;EEPROM.c: 68: __nop();
 34667  008C3A  F000               	nop	
 34668                           
 34669                           ;EEPROM.c: 69: __nop();
 34670  008C3C  F000               	nop	
 34671                           
 34672                           ;EEPROM.c: 70: if(GIEstatus)
 34673  008C3E  0100               	movlb	0	; () banked
 34674  008C40  517E               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 34675  008C42  0100               	movlb	0	; () banked
 34676  008C44  B4D8               	btfsc	status,2,c
 34677  008C46  D002               	goto	l12370
 34678                           
 34679                           ; BSR set to: 0
 34680                           ;EEPROM.c: 71: {
 34681                           ;EEPROM.c: 72: INTCONbits.GIE =1;
 34682  008C48  8EF2               	bsf	intcon,7,c	;volatile
 34683  008C4A  D000               	goto	l12370
 34684  008C4C                     l12370:
 34685                           
 34686                           ; BSR set to: 0
 34687                           ;EEPROM.c: 73: }
 34688                           ;EEPROM.c: 74: if(PEIEstatus)
 34689  008C4C  0100               	movlb	0	; () banked
 34690  008C4E  517F               	movf	ReadEEPROM_1Byte@PEIEstatus& (0+255),w,b
 34691  008C50  0100               	movlb	0	; () banked
 34692  008C52  B4D8               	btfsc	status,2,c
 34693  008C54  D006               	goto	l12374
 34694                           
 34695                           ; BSR set to: 0
 34696                           ;EEPROM.c: 75: {
 34697                           ;EEPROM.c: 76: PEIEstatus = INTCONbits.PEIE;
 34698  008C56  0E00               	movlw	0
 34699  008C58  BCF2               	btfsc	intcon,6,c	;volatile
 34700  008C5A  0E01               	movlw	1
 34701  008C5C  0100               	movlb	0	; () banked
 34702  008C5E  6F7F               	movwf	ReadEEPROM_1Byte@PEIEstatus& (0+255),b
 34703  008C60  D000               	goto	l12374
 34704  008C62                     l12374:
 34705                           
 34706                           ; BSR set to: 0
 34707                           ;EEPROM.c: 77: }
 34708                           ;EEPROM.c: 78: return (EEDATA);
 34709  008C62  CFA8 F07C          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 34710  008C66  0100               	movlb	0	; () banked
 34711  008C68  6B7D               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 34712  008C6A  0012               	return	
 34713                           
 34714                           ; BSR set to: 0
 34715                           
 34716                           ; BSR set to: 0
 34717  008C6C  0012               	return		;funcret
 34718  008C6E                     __end_of_ReadEEPROM_1Byte:
 34719                           	opt stack 0
 34720                           tblptru	equ	0xFF8
 34721                           tblptrh	equ	0xFF7
 34722                           tblptrl	equ	0xFF6
 34723                           tablat	equ	0xFF5
 34724                           prodh	equ	0xFF4
 34725                           prodl	equ	0xFF3
 34726                           intcon	equ	0xFF2
 34727                           intcon2	equ	0xFF1
 34728                           indf0	equ	0xFEF
 34729                           postinc0	equ	0xFEE
 34730                           plusw0	equ	0xFEB
 34731                           fsr0h	equ	0xFEA
 34732                           fsr0l	equ	0xFE9
 34733                           wreg	equ	0xFE8
 34734                           indf1	equ	0xFE7
 34735                           postdec1	equ	0xFE5
 34736                           fsr1h	equ	0xFE2
 34737                           fsr1l	equ	0xFE1
 34738                           indf2	equ	0xFDF
 34739                           postinc2	equ	0xFDE
 34740                           postdec2	equ	0xFDD
 34741                           plusw2	equ	0xFDB
 34742                           fsr2h	equ	0xFDA
 34743                           fsr2l	equ	0xFD9
 34744                           status	equ	0xFD8
 34745                           
 34746 ;; *************** function _InitADC *****************
 34747 ;; Defined at:
 34748 ;;		line 135 in file "ADC.c"
 34749 ;; Parameters:    Size  Location     Type
 34750 ;;		None
 34751 ;; Auto vars:     Size  Location     Type
 34752 ;;		None
 34753 ;; Return value:  Size  Location     Type
 34754 ;;		None               void
 34755 ;; Registers used:
 34756 ;;		wreg, status,2, cstack
 34757 ;; Tracked objects:
 34758 ;;		On entry : 0/0
 34759 ;;		On exit  : 0/0
 34760 ;;		Unchanged: 0/0
 34761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34766 ;;Total ram usage:        0 bytes
 34767 ;; Hardware stack levels used:    1
 34768 ;; Hardware stack levels required when called:    7
 34769 ;; This function calls:
 34770 ;;		_ResetADC
 34771 ;; This function is called by:
 34772 ;;		_Init_System
 34773 ;; This function uses a non-reentrant model
 34774 ;;
 34775                           
 34776                           	psect	text96
 34777  00945E                     __ptext96:
 34778                           	opt stack 0
 34779  00945E                     _InitADC:
 34780                           	opt stack 22
 34781                           
 34782                           ;ADC.c: 137: ResetADC();
 34783                           
 34784                           ; BSR set to: 0
 34785                           ;incstack = 0
 34786  00945E  ECA4  F04A         	call	_ResetADC	;wreg free
 34787                           
 34788                           ;ADC.c: 138: ADCON2bits.ADFM = 1;
 34789  009462  8EC0               	bsf	4032,7,c	;volatile
 34790                           
 34791                           ;ADC.c: 139: ADCON2bits.ACQT = 0x7;
 34792  009464  86C0               	bsf	4032,3,c	;volatile
 34793  009466  88C0               	bsf	4032,4,c	;volatile
 34794  009468  8AC0               	bsf	4032,5,c	;volatile
 34795                           
 34796                           ;ADC.c: 140: ADCON2bits.ADCS = 0x4;
 34797  00946A  50C0               	movf	4032,w,c	;volatile
 34798  00946C  0BF8               	andlw	-8
 34799  00946E  0904               	iorlw	4
 34800  009470  6EC0               	movwf	4032,c	;volatile
 34801  009472  0012               	return		;funcret
 34802  009474                     __end_of_InitADC:
 34803                           	opt stack 0
 34804                           tblptru	equ	0xFF8
 34805                           tblptrh	equ	0xFF7
 34806                           tblptrl	equ	0xFF6
 34807                           tablat	equ	0xFF5
 34808                           prodh	equ	0xFF4
 34809                           prodl	equ	0xFF3
 34810                           intcon	equ	0xFF2
 34811                           intcon2	equ	0xFF1
 34812                           indf0	equ	0xFEF
 34813                           postinc0	equ	0xFEE
 34814                           plusw0	equ	0xFEB
 34815                           fsr0h	equ	0xFEA
 34816                           fsr0l	equ	0xFE9
 34817                           wreg	equ	0xFE8
 34818                           indf1	equ	0xFE7
 34819                           postdec1	equ	0xFE5
 34820                           fsr1h	equ	0xFE2
 34821                           fsr1l	equ	0xFE1
 34822                           indf2	equ	0xFDF
 34823                           postinc2	equ	0xFDE
 34824                           postdec2	equ	0xFDD
 34825                           plusw2	equ	0xFDB
 34826                           fsr2h	equ	0xFDA
 34827                           fsr2l	equ	0xFD9
 34828                           status	equ	0xFD8
 34829                           
 34830 ;; *************** function _ResetADC *****************
 34831 ;; Defined at:
 34832 ;;		line 123 in file "ADC.c"
 34833 ;; Parameters:    Size  Location     Type
 34834 ;;		None
 34835 ;; Auto vars:     Size  Location     Type
 34836 ;;		None
 34837 ;; Return value:  Size  Location     Type
 34838 ;;		None               void
 34839 ;; Registers used:
 34840 ;;		wreg, status,2
 34841 ;; Tracked objects:
 34842 ;;		On entry : 0/0
 34843 ;;		On exit  : 0/0
 34844 ;;		Unchanged: 0/0
 34845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34850 ;;Total ram usage:        0 bytes
 34851 ;; Hardware stack levels used:    1
 34852 ;; Hardware stack levels required when called:    6
 34853 ;; This function calls:
 34854 ;;		Nothing
 34855 ;; This function is called by:
 34856 ;;		_InitADC
 34857 ;; This function uses a non-reentrant model
 34858 ;;
 34859                           
 34860                           	psect	text97
 34861  009548                     __ptext97:
 34862                           	opt stack 0
 34863  009548                     _ResetADC:
 34864                           	opt stack 22
 34865                           
 34866                           ;ADC.c: 125: ADCON0 =0;
 34867                           
 34868                           ;incstack = 0
 34869  009548  0E00               	movlw	0
 34870  00954A  6EC2               	movwf	4034,c	;volatile
 34871                           
 34872                           ;ADC.c: 126: ADCON1 =0;
 34873  00954C  0E00               	movlw	0
 34874  00954E  6EC1               	movwf	4033,c	;volatile
 34875                           
 34876                           ;ADC.c: 127: ADCON2 =0;
 34877  009550  0E00               	movlw	0
 34878  009552  6EC0               	movwf	4032,c	;volatile
 34879  009554  0012               	return		;funcret
 34880  009556                     __end_of_ResetADC:
 34881                           	opt stack 0
 34882                           tblptru	equ	0xFF8
 34883                           tblptrh	equ	0xFF7
 34884                           tblptrl	equ	0xFF6
 34885                           tablat	equ	0xFF5
 34886                           prodh	equ	0xFF4
 34887                           prodl	equ	0xFF3
 34888                           intcon	equ	0xFF2
 34889                           intcon2	equ	0xFF1
 34890                           indf0	equ	0xFEF
 34891                           postinc0	equ	0xFEE
 34892                           plusw0	equ	0xFEB
 34893                           fsr0h	equ	0xFEA
 34894                           fsr0l	equ	0xFE9
 34895                           wreg	equ	0xFE8
 34896                           indf1	equ	0xFE7
 34897                           postdec1	equ	0xFE5
 34898                           fsr1h	equ	0xFE2
 34899                           fsr1l	equ	0xFE1
 34900                           indf2	equ	0xFDF
 34901                           postinc2	equ	0xFDE
 34902                           postdec2	equ	0xFDD
 34903                           plusw2	equ	0xFDB
 34904                           fsr2h	equ	0xFDA
 34905                           fsr2l	equ	0xFD9
 34906                           status	equ	0xFD8
 34907                           
 34908 ;; *************** function _EEPROMinitialized *****************
 34909 ;; Defined at:
 34910 ;;		line 288 in file "EEPROM.c"
 34911 ;; Parameters:    Size  Location     Type
 34912 ;;		None
 34913 ;; Auto vars:     Size  Location     Type
 34914 ;;		None
 34915 ;; Return value:  Size  Location     Type
 34916 ;;                  1    wreg      unsigned char 
 34917 ;; Registers used:
 34918 ;;		wreg, status,2, status,0
 34919 ;; Tracked objects:
 34920 ;;		On entry : 0/0
 34921 ;;		On exit  : 0/0
 34922 ;;		Unchanged: 0/0
 34923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34928 ;;Total ram usage:        0 bytes
 34929 ;; Hardware stack levels used:    1
 34930 ;; Hardware stack levels required when called:    6
 34931 ;; This function calls:
 34932 ;;		Nothing
 34933 ;; This function is called by:
 34934 ;;		_Init_System
 34935 ;; This function uses a non-reentrant model
 34936 ;;
 34937                           
 34938                           	psect	text98
 34939  00949E                     __ptext98:
 34940                           	opt stack 0
 34941  00949E                     _EEPROMinitialized:
 34942                           	opt stack 23
 34943                           
 34944                           ;EEPROM.c: 290: if(Global.EEPROMinitFlag == 59)
 34945                           
 34946                           ;incstack = 0
 34947  00949E  0E3B               	movlw	59
 34948  0094A0  0104               	movlb	4	; () banked
 34949  0094A2  192D               	xorwf	(_Global+45)& (0+255),w,b
 34950  0094A4  A4D8               	btfss	status,2,c
 34951  0094A6  D002               	goto	l14370
 34952                           
 34953                           ; BSR set to: 4
 34954                           ;EEPROM.c: 291: {
 34955                           ;EEPROM.c: 292: return 1;
 34956  0094A8  0E01               	movlw	1
 34957                           
 34958                           ; BSR set to: 4
 34959  0094AA  0012               	return	
 34960  0094AC                     l14370:
 34961                           
 34962                           ; BSR set to: 4
 34963                           ;EEPROM.c: 293: }
 34964                           ;EEPROM.c: 294: return 0;
 34965  0094AC  0E00               	movlw	0
 34966  0094AE  0012               	return	
 34967                           
 34968                           ; BSR set to: 4
 34969                           
 34970                           ; BSR set to: 4
 34971  0094B0  0012               	return		;funcret
 34972  0094B2                     __end_of_EEPROMinitialized:
 34973                           	opt stack 0
 34974                           tblptru	equ	0xFF8
 34975                           tblptrh	equ	0xFF7
 34976                           tblptrl	equ	0xFF6
 34977                           tablat	equ	0xFF5
 34978                           prodh	equ	0xFF4
 34979                           prodl	equ	0xFF3
 34980                           intcon	equ	0xFF2
 34981                           intcon2	equ	0xFF1
 34982                           indf0	equ	0xFEF
 34983                           postinc0	equ	0xFEE
 34984                           plusw0	equ	0xFEB
 34985                           fsr0h	equ	0xFEA
 34986                           fsr0l	equ	0xFE9
 34987                           wreg	equ	0xFE8
 34988                           indf1	equ	0xFE7
 34989                           postdec1	equ	0xFE5
 34990                           fsr1h	equ	0xFE2
 34991                           fsr1l	equ	0xFE1
 34992                           indf2	equ	0xFDF
 34993                           postinc2	equ	0xFDE
 34994                           postdec2	equ	0xFDD
 34995                           plusw2	equ	0xFDB
 34996                           fsr2h	equ	0xFDA
 34997                           fsr2l	equ	0xFD9
 34998                           status	equ	0xFD8
 34999                           
 35000 ;; *************** function _InitApp *****************
 35001 ;; Defined at:
 35002 ;;		line 62 in file "user.c"
 35003 ;; Parameters:    Size  Location     Type
 35004 ;;		None
 35005 ;; Auto vars:     Size  Location     Type
 35006 ;;		None
 35007 ;; Return value:  Size  Location     Type
 35008 ;;		None               void
 35009 ;; Registers used:
 35010 ;;		wreg, status,2, status,0
 35011 ;; Tracked objects:
 35012 ;;		On entry : 0/0
 35013 ;;		On exit  : 0/0
 35014 ;;		Unchanged: 0/0
 35015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35020 ;;Total ram usage:        0 bytes
 35021 ;; Hardware stack levels used:    1
 35022 ;; Hardware stack levels required when called:    6
 35023 ;; This function calls:
 35024 ;;		Nothing
 35025 ;; This function is called by:
 35026 ;;		_main
 35027 ;; This function uses a non-reentrant model
 35028 ;;
 35029                           
 35030                           	psect	text99
 35031  00907E                     __ptext99:
 35032                           	opt stack 0
 35033  00907E                     _InitApp:
 35034                           	opt stack 24
 35035                           
 35036                           ;user.c: 64: LATA = 0;
 35037                           
 35038                           ; BSR set to: 4
 35039                           ;incstack = 0
 35040  00907E  0E00               	movlw	0
 35041  009080  6E89               	movwf	3977,c	;volatile
 35042                           
 35043                           ;user.c: 65: LATB = 0;
 35044  009082  0E00               	movlw	0
 35045  009084  6E8A               	movwf	3978,c	;volatile
 35046                           
 35047                           ;user.c: 66: LATC = 0;
 35048  009086  0E00               	movlw	0
 35049  009088  6E8B               	movwf	3979,c	;volatile
 35050                           
 35051                           ;user.c: 67: LATA |= 0x04;
 35052  00908A  8489               	bsf	3977,2,c	;volatile
 35053                           
 35054                           ;user.c: 69: TRISAbits.TRISA0 = 1;
 35055  00908C  8092               	bsf	3986,0,c	;volatile
 35056                           
 35057                           ;user.c: 70: TRISAbits.TRISA1 = 1;
 35058  00908E  8292               	bsf	3986,1,c	;volatile
 35059                           
 35060                           ;user.c: 71: TRISAbits.TRISA2 = 0;
 35061  009090  9492               	bcf	3986,2,c	;volatile
 35062                           
 35063                           ;user.c: 72: TRISAbits.TRISA3 = 0;
 35064  009092  9692               	bcf	3986,3,c	;volatile
 35065                           
 35066                           ;user.c: 73: TRISAbits.TRISA4 = 0;
 35067  009094  9892               	bcf	3986,4,c	;volatile
 35068                           
 35069                           ;user.c: 74: TRISAbits.TRISA5 = 0;
 35070  009096  9A92               	bcf	3986,5,c	;volatile
 35071                           
 35072                           ;user.c: 75: TRISCbits.TRISC0 = 1;
 35073  009098  8094               	bsf	3988,0,c	;volatile
 35074                           
 35075                           ;user.c: 76: TRISCbits.TRISC1 = 0;
 35076  00909A  9294               	bcf	3988,1,c	;volatile
 35077                           
 35078                           ;user.c: 77: TRISCbits.TRISC2 = 0;
 35079  00909C  9494               	bcf	3988,2,c	;volatile
 35080                           
 35081                           ;user.c: 78: TRISCbits.TRISC3 = 0;
 35082  00909E  9694               	bcf	3988,3,c	;volatile
 35083                           
 35084                           ;user.c: 79: TRISCbits.TRISC4 = 0;
 35085  0090A0  9894               	bcf	3988,4,c	;volatile
 35086                           
 35087                           ;user.c: 80: TRISCbits.TRISC5 = 0;
 35088  0090A2  9A94               	bcf	3988,5,c	;volatile
 35089                           
 35090                           ;user.c: 81: TRISCbits.TRISC6 = 0;
 35091  0090A4  9C94               	bcf	3988,6,c	;volatile
 35092                           
 35093                           ;user.c: 82: TRISCbits.TRISC7 = 1;
 35094  0090A6  8E94               	bsf	3988,7,c	;volatile
 35095                           
 35096                           ;user.c: 83: TRISBbits.TRISB0 = 1;
 35097  0090A8  8093               	bsf	3987,0,c	;volatile
 35098                           
 35099                           ;user.c: 84: TRISBbits.TRISB1 = 1;
 35100  0090AA  8293               	bsf	3987,1,c	;volatile
 35101                           
 35102                           ;user.c: 85: TRISBbits.TRISB2 = 1;
 35103  0090AC  8493               	bsf	3987,2,c	;volatile
 35104                           
 35105                           ;user.c: 86: TRISBbits.TRISB3 = 1;
 35106  0090AE  8693               	bsf	3987,3,c	;volatile
 35107                           
 35108                           ;user.c: 87: TRISBbits.TRISB4 = 1;
 35109  0090B0  8893               	bsf	3987,4,c	;volatile
 35110                           
 35111                           ;user.c: 88: TRISBbits.TRISB5 = 1;
 35112  0090B2  8A93               	bsf	3987,5,c	;volatile
 35113                           
 35114                           ;user.c: 91: ANSEL = 0x01;
 35115  0090B4  0E01               	movlw	1
 35116  0090B6  6E7E               	movwf	3966,c	;volatile
 35117                           
 35118                           ;user.c: 92: ANSELH = 0x00;
 35119  0090B8  0E00               	movlw	0
 35120  0090BA  6E7F               	movwf	3967,c	;volatile
 35121                           
 35122                           ;user.c: 95: INTCON2bits.RBPU = 0;
 35123  0090BC  9EF1               	bcf	intcon2,7,c	;volatile
 35124                           
 35125                           ;user.c: 97: WPUB = 0x0F;
 35126  0090BE  0E0F               	movlw	15
 35127  0090C0  6E7C               	movwf	3964,c	;volatile
 35128  0090C2  0012               	return		;funcret
 35129  0090C4                     __end_of_InitApp:
 35130                           	opt stack 0
 35131                           tblptru	equ	0xFF8
 35132                           tblptrh	equ	0xFF7
 35133                           tblptrl	equ	0xFF6
 35134                           tablat	equ	0xFF5
 35135                           prodh	equ	0xFF4
 35136                           prodl	equ	0xFF3
 35137                           intcon	equ	0xFF2
 35138                           intcon2	equ	0xFF1
 35139                           indf0	equ	0xFEF
 35140                           postinc0	equ	0xFEE
 35141                           plusw0	equ	0xFEB
 35142                           fsr0h	equ	0xFEA
 35143                           fsr0l	equ	0xFE9
 35144                           wreg	equ	0xFE8
 35145                           indf1	equ	0xFE7
 35146                           postdec1	equ	0xFE5
 35147                           fsr1h	equ	0xFE2
 35148                           fsr1l	equ	0xFE1
 35149                           indf2	equ	0xFDF
 35150                           postinc2	equ	0xFDE
 35151                           postdec2	equ	0xFDD
 35152                           plusw2	equ	0xFDB
 35153                           fsr2h	equ	0xFDA
 35154                           fsr2l	equ	0xFD9
 35155                           status	equ	0xFD8
 35156                           
 35157 ;; *************** function _ConfigureOscillator *****************
 35158 ;; Defined at:
 35159 ;;		line 43 in file "system.c"
 35160 ;; Parameters:    Size  Location     Type
 35161 ;;		None
 35162 ;; Auto vars:     Size  Location     Type
 35163 ;;		None
 35164 ;; Return value:  Size  Location     Type
 35165 ;;		None               void
 35166 ;; Registers used:
 35167 ;;		None
 35168 ;; Tracked objects:
 35169 ;;		On entry : 0/0
 35170 ;;		On exit  : 0/0
 35171 ;;		Unchanged: 0/0
 35172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35177 ;;Total ram usage:        0 bytes
 35178 ;; Hardware stack levels used:    1
 35179 ;; Hardware stack levels required when called:    6
 35180 ;; This function calls:
 35181 ;;		Nothing
 35182 ;; This function is called by:
 35183 ;;		_main
 35184 ;; This function uses a non-reentrant model
 35185 ;;
 35186                           
 35187                           	psect	text100
 35188  0095C2                     __ptext100:
 35189                           	opt stack 0
 35190  0095C2                     _ConfigureOscillator:
 35191                           	opt stack 24
 35192                           
 35193                           ;incstack = 0
 35194  0095C2  0012               	return		;funcret
 35195  0095C4                     __end_of_ConfigureOscillator:
 35196                           	opt stack 0
 35197                           tblptru	equ	0xFF8
 35198                           tblptrh	equ	0xFF7
 35199                           tblptrl	equ	0xFF6
 35200                           tablat	equ	0xFF5
 35201                           prodh	equ	0xFF4
 35202                           prodl	equ	0xFF3
 35203                           intcon	equ	0xFF2
 35204                           intcon2	equ	0xFF1
 35205                           indf0	equ	0xFEF
 35206                           postinc0	equ	0xFEE
 35207                           plusw0	equ	0xFEB
 35208                           fsr0h	equ	0xFEA
 35209                           fsr0l	equ	0xFE9
 35210                           wreg	equ	0xFE8
 35211                           indf1	equ	0xFE7
 35212                           postdec1	equ	0xFE5
 35213                           fsr1h	equ	0xFE2
 35214                           fsr1l	equ	0xFE1
 35215                           indf2	equ	0xFDF
 35216                           postinc2	equ	0xFDE
 35217                           postdec2	equ	0xFDD
 35218                           plusw2	equ	0xFDB
 35219                           fsr2h	equ	0xFDA
 35220                           fsr2l	equ	0xFD9
 35221                           status	equ	0xFD8
 35222                           
 35223 ;; *************** function _low_isr *****************
 35224 ;; Defined at:
 35225 ;;		line 608 in file "interrupts.c"
 35226 ;; Parameters:    Size  Location     Type
 35227 ;;		None
 35228 ;; Auto vars:     Size  Location     Type
 35229 ;;  data            1   25[COMRAM] unsigned char 
 35230 ;; Return value:  Size  Location     Type
 35231 ;;		None               void
 35232 ;; Registers used:
 35233 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35234 ;; Tracked objects:
 35235 ;;		On entry : 0/0
 35236 ;;		On exit  : 0/0
 35237 ;;		Unchanged: 0/0
 35238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35241 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35242 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35243 ;;Total ram usage:       18 bytes
 35244 ;; Hardware stack levels used:    1
 35245 ;; Hardware stack levels required when called:    5
 35246 ;; This function calls:
 35247 ;;		_EraseScreen
 35248 ;;		_IsCharacter
 35249 ;;		i1_BlueConnected
 35250 ;;		i1_ReadUSART
 35251 ;;		i1_UARTchar
 35252 ;;		i1_UARTstring
 35253 ;;		i1_UARTstringCRLN
 35254 ;;		i1_cleanBuffer
 35255 ;; This function is called by:
 35256 ;;		Interrupt level 1
 35257 ;; This function uses a non-reentrant model
 35258 ;;
 35259                           
 35260                           	psect	intcodelo
 35261  000018                     __pintcodelo:
 35262                           	opt stack 0
 35263  000018                     _low_isr:
 35264                           	opt stack 17
 35265                           
 35266                           ;incstack = 0
 35267  000018  CFD8 F009          	movff	status,??_low_isr
 35268  00001C  CFE8 F00A          	movff	wreg,??_low_isr+1
 35269  000020  CFE0 F00B          	movff	bsr,??_low_isr+2
 35270  000024  CFFA F00C          	movff	pclath,??_low_isr+3
 35271  000028  CFFB F00D          	movff	pclatu,??_low_isr+4
 35272  00002C  CFE9 F00E          	movff	fsr0l,??_low_isr+5
 35273  000030  CFEA F00F          	movff	fsr0h,??_low_isr+6
 35274  000034  CFE1 F010          	movff	fsr1l,??_low_isr+7
 35275  000038  CFE2 F011          	movff	fsr1h,??_low_isr+8
 35276  00003C  CFD9 F012          	movff	fsr2l,??_low_isr+9
 35277  000040  CFDA F013          	movff	fsr2h,??_low_isr+10
 35278  000044  CFF3 F014          	movff	prodl,??_low_isr+11
 35279  000048  CFF4 F015          	movff	prodh,??_low_isr+12
 35280  00004C  CFF6 F016          	movff	tblptrl,??_low_isr+13
 35281  000050  CFF7 F017          	movff	tblptrh,??_low_isr+14
 35282  000054  CFF8 F018          	movff	tblptru,??_low_isr+15
 35283  000058  CFF5 F019          	movff	tablat,??_low_isr+16
 35284                           
 35285                           ;interrupts.c: 617: char data = 0;
 35286  00005C  0E00               	movlw	0
 35287  00005E  6E1A               	movwf	low_isr@data,c
 35288                           
 35289                           ;interrupts.c: 619: INTCONbits.PEIE = 0;
 35290  000060  9CF2               	bcf	intcon,6,c	;volatile
 35291                           
 35292                           ;interrupts.c: 621: if(PIR1bits.RCIF)
 35293  000062  AA9E               	btfss	3998,5,c	;volatile
 35294  000064  D093               	goto	i1l1344
 35295                           
 35296                           ;interrupts.c: 622: {
 35297                           ;interrupts.c: 624: data = ReadUSART();
 35298  000066  EC3A  F04A         	call	i1_ReadUSART	;wreg free
 35299  00006A  6E1A               	movwf	low_isr@data,c
 35300                           
 35301                           ;interrupts.c: 626: if(!BlueConnected())
 35302  00006C  ECAB  F04A         	call	i1_BlueConnected	;wreg free
 35303  000070  0900               	iorlw	0
 35304  000072  A4D8               	btfss	status,2,c
 35305  000074  D00F               	goto	i1l12282
 35306                           
 35307                           ;interrupts.c: 627: {
 35308                           ;interrupts.c: 628: if(CommandStringPos < 255)
 35309  000076  2827               	incf	_CommandStringPos,w,c
 35310  000078  B4D8               	btfsc	status,2,c
 35311  00007A  D086               	goto	i1l12332
 35312                           
 35313                           ;interrupts.c: 629: {
 35314                           ;interrupts.c: 630: CommandString[CommandStringPos] = data;
 35315  00007C  5027               	movf	_CommandStringPos,w,c
 35316  00007E  0D01               	mullw	1
 35317  000080  0E00               	movlw	low _CommandString
 35318  000082  24F3               	addwf	prodl,w,c
 35319  000084  6ED9               	movwf	fsr2l,c
 35320  000086  0E05               	movlw	high _CommandString
 35321  000088  20F4               	addwfc	prodh,w,c
 35322  00008A  6EDA               	movwf	fsr2h,c
 35323  00008C  C01A  FFDF         	movff	low_isr@data,indf2
 35324                           
 35325                           ;interrupts.c: 631: CommandStringPos++;
 35326  000090  2A27               	incf	_CommandStringPos,f,c
 35327                           
 35328                           ;interrupts.c: 632: }
 35329                           ;interrupts.c: 633: }
 35330  000092  D07A               	goto	i1l12332
 35331  000094                     i1l12282:
 35332                           
 35333                           ;interrupts.c: 634: else
 35334                           ;interrupts.c: 635: {
 35335                           ;interrupts.c: 636: if(data != '\r' && data != '\n')
 35336  000094  0E0D               	movlw	13
 35337  000096  181A               	xorwf	low_isr@data,w,c
 35338  000098  B4D8               	btfsc	status,2,c
 35339  00009A  D063               	goto	i1l12322
 35340  00009C  0E0A               	movlw	10
 35341  00009E  181A               	xorwf	low_isr@data,w,c
 35342  0000A0  B4D8               	btfsc	status,2,c
 35343  0000A2  D05F               	goto	i1l12322
 35344                           
 35345                           ;interrupts.c: 637: {
 35346                           ;interrupts.c: 638: if((data == 127 || data == 8) && (ReceivedStringPos > 0))
 35347  0000A4  0E7F               	movlw	127
 35348  0000A6  181A               	xorwf	low_isr@data,w,c
 35349  0000A8  B4D8               	btfsc	status,2,c
 35350  0000AA  D004               	goto	i1l12290
 35351  0000AC  0E08               	movlw	8
 35352  0000AE  181A               	xorwf	low_isr@data,w,c
 35353  0000B0  A4D8               	btfss	status,2,c
 35354  0000B2  D01F               	goto	i1l12302
 35355  0000B4                     i1l12290:
 35356  0000B4  0100               	movlb	0	; () banked
 35357  0000B6  51DC               	movf	_ReceivedStringPos& (0+255),w,b
 35358  0000B8  B4D8               	btfsc	status,2,c
 35359  0000BA  D01B               	goto	i1l12302
 35360                           
 35361                           ; BSR set to: 0
 35362                           ;interrupts.c: 639: {
 35363                           ;interrupts.c: 641: EraseScreen(ReceivedStringPos + 1);
 35364  0000BC  0100               	movlb	0	; () banked
 35365  0000BE  29DC               	incf	_ReceivedStringPos& (0+255),w,b
 35366  0000C0  ECC0  F049         	call	_EraseScreen
 35367                           
 35368                           ;interrupts.c: 642: ReceivedStringPos--;
 35369  0000C4  0100               	movlb	0	; () banked
 35370  0000C6  07DC               	decf	_ReceivedStringPos& (0+255),f,b
 35371                           
 35372                           ; BSR set to: 0
 35373                           ;interrupts.c: 643: ReceivedString[ReceivedStringPos] = '\0';
 35374  0000C8  0100               	movlb	0	; () banked
 35375  0000CA  51DC               	movf	_ReceivedStringPos& (0+255),w,b
 35376  0000CC  0D01               	mullw	1
 35377  0000CE  0E00               	movlw	low _ReceivedString
 35378  0000D0  24F3               	addwf	prodl,w,c
 35379  0000D2  6ED9               	movwf	fsr2l,c
 35380  0000D4  0E06               	movlw	high _ReceivedString
 35381  0000D6  20F4               	addwfc	prodh,w,c
 35382  0000D8  6EDA               	movwf	fsr2h,c
 35383  0000DA  0E00               	movlw	0
 35384  0000DC  6EDF               	movwf	indf2,c
 35385                           
 35386                           ; BSR set to: 0
 35387                           ;interrupts.c: 644: UARTchar('>');
 35388  0000DE  0E3E               	movlw	62
 35389  0000E0  EC18  F04A         	call	i1_UARTchar
 35390                           
 35391                           ;interrupts.c: 645: UARTstring(ReceivedString);
 35392  0000E4  0E00               	movlw	low _ReceivedString
 35393  0000E6  6E02               	movwf	i1UARTstring@data,c
 35394  0000E8  0E06               	movlw	high _ReceivedString
 35395  0000EA  6E03               	movwf	i1UARTstring@data+1,c
 35396  0000EC  EC24  F047         	call	i1_UARTstring	;wreg free
 35397                           
 35398                           ;interrupts.c: 646: }
 35399  0000F0  D04B               	goto	i1l12332
 35400  0000F2                     i1l12302:
 35401                           
 35402                           ;interrupts.c: 647: else if(ReceivedStringPos < 255)
 35403  0000F2  0100               	movlb	0	; () banked
 35404  0000F4  29DC               	incf	_ReceivedStringPos& (0+255),w,b
 35405  0000F6  B4D8               	btfsc	status,2,c
 35406  0000F8  D01B               	goto	i1l12314
 35407                           
 35408                           ; BSR set to: 0
 35409                           ;interrupts.c: 648: {
 35410                           ;interrupts.c: 649: if(!NewReceivedString)
 35411  0000FA  0100               	movlb	0	; () banked
 35412  0000FC  51DB               	movf	_NewReceivedString& (0+255),w,b	;volatile
 35413  0000FE  A4D8               	btfss	status,2,c
 35414  000100  D043               	goto	i1l12332
 35415                           
 35416                           ; BSR set to: 0
 35417                           ;interrupts.c: 650: {
 35418                           ;interrupts.c: 651: if(IsCharacter(data))
 35419  000102  501A               	movf	low_isr@data,w,c
 35420  000104  EC0C  F04A         	call	_IsCharacter
 35421  000108  0900               	iorlw	0
 35422  00010A  B4D8               	btfsc	status,2,c
 35423  00010C  D03D               	goto	i1l12332
 35424                           
 35425                           ;interrupts.c: 652: {
 35426                           ;interrupts.c: 653: UARTchar(data);
 35427  00010E  501A               	movf	low_isr@data,w,c
 35428  000110  EC18  F04A         	call	i1_UARTchar
 35429                           
 35430                           ;interrupts.c: 654: ReceivedString[ReceivedStringPos] = data;
 35431  000114  0100               	movlb	0	; () banked
 35432  000116  51DC               	movf	_ReceivedStringPos& (0+255),w,b
 35433  000118  0D01               	mullw	1
 35434  00011A  0E00               	movlw	low _ReceivedString
 35435  00011C  24F3               	addwf	prodl,w,c
 35436  00011E  6ED9               	movwf	fsr2l,c
 35437  000120  0E06               	movlw	high _ReceivedString
 35438  000122  20F4               	addwfc	prodh,w,c
 35439  000124  6EDA               	movwf	fsr2h,c
 35440  000126  C01A  FFDF         	movff	low_isr@data,indf2
 35441                           
 35442                           ; BSR set to: 0
 35443                           ;interrupts.c: 655: ReceivedStringPos++;
 35444  00012A  0100               	movlb	0	; () banked
 35445  00012C  2BDC               	incf	_ReceivedStringPos& (0+255),f,b
 35446                           
 35447                           ; BSR set to: 0
 35448                           ;interrupts.c: 656: }
 35449                           ;interrupts.c: 657: }
 35450                           ;interrupts.c: 658: }
 35451                           
 35452                           ; BSR set to: 0
 35453  00012E  D02C               	goto	i1l12332
 35454  000130                     i1l12314:
 35455                           
 35456                           ; BSR set to: 0
 35457                           ;interrupts.c: 659: else
 35458                           ;interrupts.c: 660: {
 35459                           ;interrupts.c: 661: cleanBuffer(ReceivedString,255);
 35460  000130  0E00               	movlw	low _ReceivedString
 35461  000132  6E01               	movwf	i1cleanBuffer@data,c
 35462  000134  0E06               	movlw	high _ReceivedString
 35463  000136  6E02               	movwf	i1cleanBuffer@data+1,c
 35464  000138  0E00               	movlw	0
 35465  00013A  6E04               	movwf	i1cleanBuffer@count+1,c
 35466  00013C  6803               	setf	i1cleanBuffer@count,c
 35467  00013E  ECC4  F048         	call	i1_cleanBuffer	;wreg free
 35468                           
 35469                           ;interrupts.c: 662: ReceivedStringPos = 0;
 35470  000142  0E00               	movlw	0
 35471  000144  0100               	movlb	0	; () banked
 35472  000146  6FDC               	movwf	_ReceivedStringPos& (0+255),b
 35473                           
 35474                           ; BSR set to: 0
 35475                           ;interrupts.c: 663: UARTstring(CRLN);
 35476  000148  0EA7               	movlw	low _CRLN
 35477  00014A  6E02               	movwf	i1UARTstring@data,c
 35478  00014C  0EF3               	movlw	high _CRLN
 35479  00014E  6E03               	movwf	i1UARTstring@data+1,c
 35480  000150  EC24  F047         	call	i1_UARTstring	;wreg free
 35481                           
 35482                           ;interrupts.c: 664: UARTstringCRLN((unsigned char *)"Buffer Overflow");
 35483  000154  0E71               	movlw	low STR_1
 35484  000156  6E04               	movwf	i1UARTstringCRLN@data,c
 35485  000158  0EFE               	movlw	high STR_1
 35486  00015A  6E05               	movwf	i1UARTstringCRLN@data+1,c
 35487  00015C  EC69  F046         	call	i1_UARTstringCRLN	;wreg free
 35488                           
 35489                           ;interrupts.c: 665: }
 35490                           ;interrupts.c: 666: }
 35491  000160  D013               	goto	i1l12332
 35492  000162                     i1l12322:
 35493                           
 35494                           ;interrupts.c: 667: else if(ReceivedStringPos > 0 && (NewReceivedString == 0))
 35495  000162  0100               	movlb	0	; () banked
 35496  000164  51DC               	movf	_ReceivedStringPos& (0+255),w,b
 35497  000166  B4D8               	btfsc	status,2,c
 35498  000168  D00F               	goto	i1l12332
 35499                           
 35500                           ; BSR set to: 0
 35501  00016A  0100               	movlb	0	; () banked
 35502  00016C  51DB               	movf	_NewReceivedString& (0+255),w,b	;volatile
 35503  00016E  A4D8               	btfss	status,2,c
 35504  000170  D00B               	goto	i1l12332
 35505                           
 35506                           ; BSR set to: 0
 35507                           ;interrupts.c: 668: {
 35508                           ;interrupts.c: 669: PIE1bits.RCIE = 0;
 35509  000172  9A9D               	bcf	3997,5,c	;volatile
 35510                           
 35511                           ; BSR set to: 0
 35512                           ;interrupts.c: 670: UARTstring(CRLN);
 35513  000174  0EA7               	movlw	low _CRLN
 35514  000176  6E02               	movwf	i1UARTstring@data,c
 35515  000178  0EF3               	movlw	high _CRLN
 35516  00017A  6E03               	movwf	i1UARTstring@data+1,c
 35517  00017C  EC24  F047         	call	i1_UARTstring	;wreg free
 35518                           
 35519                           ;interrupts.c: 671: NewReceivedString = 1;
 35520  000180  0E01               	movlw	1
 35521  000182  0100               	movlb	0	; () banked
 35522  000184  6FDB               	movwf	_NewReceivedString& (0+255),b	;volatile
 35523                           
 35524                           ; BSR set to: 0
 35525                           
 35526                           ; BSR set to: 0
 35527  000186  D000               	goto	i1l12332
 35528  000188                     i1l12332:
 35529                           
 35530                           ;interrupts.c: 672: }
 35531                           ;interrupts.c: 673: }
 35532                           ;interrupts.c: 674: PIR1bits.RCIF = 0;
 35533  000188  9A9E               	bcf	3998,5,c	;volatile
 35534                           
 35535                           ;interrupts.c: 675: }
 35536  00018A  D00F               	goto	i1l1359
 35537  00018C                     i1l1344:
 35538                           
 35539                           ;interrupts.c: 676: else if(PIR1bits.TMR1IF)
 35540  00018C  A09E               	btfss	3998,0,c	;volatile
 35541  00018E  D00B               	goto	i1l1360
 35542                           
 35543                           ;interrupts.c: 677: {
 35544                           ;interrupts.c: 678: Timer1_Postscaler++;
 35545  000190  2A39               	incf	_Timer1_Postscaler,f,c
 35546                           
 35547                           ;interrupts.c: 679: if(Timer1_Postscaler == 3)
 35548  000192  0E03               	movlw	3
 35549  000194  1839               	xorwf	_Timer1_Postscaler,w,c
 35550  000196  A4D8               	btfss	status,2,c
 35551  000198  D004               	goto	i1l12342
 35552                           
 35553                           ;interrupts.c: 680: {
 35554                           ;interrupts.c: 681: (LATC &= ~0x04);
 35555  00019A  948B               	bcf	3979,2,c	;volatile
 35556                           
 35557                           ;interrupts.c: 682: (LATC &= ~0x02);
 35558  00019C  928B               	bcf	3979,1,c	;volatile
 35559                           
 35560                           ;interrupts.c: 683: (T1CONbits.TMR1ON = 0);
 35561  00019E  90CD               	bcf	4045,0,c	;volatile
 35562  0001A0  D000               	goto	i1l12342
 35563  0001A2                     i1l12342:
 35564                           
 35565                           ;interrupts.c: 684: }
 35566                           ;interrupts.c: 685: PIR1bits.TMR1IF = 0;
 35567  0001A2  909E               	bcf	3998,0,c	;volatile
 35568                           
 35569                           ;interrupts.c: 686: }
 35570  0001A4  D002               	goto	i1l1359
 35571  0001A6                     i1l1360:
 35572                           
 35573                           ;interrupts.c: 687: else
 35574                           ;interrupts.c: 688: {
 35575                           ;interrupts.c: 690: __nop();
 35576  0001A6  F000               	nop	
 35577  0001A8  D000               	goto	i1l1359
 35578  0001AA                     i1l1359:
 35579                           
 35580                           ;interrupts.c: 691: }
 35581                           ;interrupts.c: 692: INTCONbits.PEIE = 1;
 35582  0001AA  8CF2               	bsf	intcon,6,c	;volatile
 35583  0001AC  C019  FFF5         	movff	??_low_isr+16,tablat
 35584  0001B0  C018  FFF8         	movff	??_low_isr+15,tblptru
 35585  0001B4  C017  FFF7         	movff	??_low_isr+14,tblptrh
 35586  0001B8  C016  FFF6         	movff	??_low_isr+13,tblptrl
 35587  0001BC  C015  FFF4         	movff	??_low_isr+12,prodh
 35588  0001C0  C014  FFF3         	movff	??_low_isr+11,prodl
 35589  0001C4  C013  FFDA         	movff	??_low_isr+10,fsr2h
 35590  0001C8  C012  FFD9         	movff	??_low_isr+9,fsr2l
 35591  0001CC  C011  FFE2         	movff	??_low_isr+8,fsr1h
 35592  0001D0  C010  FFE1         	movff	??_low_isr+7,fsr1l
 35593  0001D4  C00F  FFEA         	movff	??_low_isr+6,fsr0h
 35594  0001D8  C00E  FFE9         	movff	??_low_isr+5,fsr0l
 35595  0001DC  C00D  FFFB         	movff	??_low_isr+4,pclatu
 35596  0001E0  C00C  FFFA         	movff	??_low_isr+3,pclath
 35597  0001E4  C00B  FFE0         	movff	??_low_isr+2,bsr
 35598  0001E8  C00A  FFE8         	movff	??_low_isr+1,wreg
 35599  0001EC  C009  FFD8         	movff	??_low_isr,status
 35600  0001F0  0010               	retfie	
 35601  0001F2                     __end_of_low_isr:
 35602                           	opt stack 0
 35603                           pclatu	equ	0xFFB
 35604                           pclath	equ	0xFFA
 35605                           tblptru	equ	0xFF8
 35606                           tblptrh	equ	0xFF7
 35607                           tblptrl	equ	0xFF6
 35608                           tablat	equ	0xFF5
 35609                           prodh	equ	0xFF4
 35610                           prodl	equ	0xFF3
 35611                           intcon	equ	0xFF2
 35612                           intcon2	equ	0xFF1
 35613                           indf0	equ	0xFEF
 35614                           postinc0	equ	0xFEE
 35615                           plusw0	equ	0xFEB
 35616                           fsr0h	equ	0xFEA
 35617                           fsr0l	equ	0xFE9
 35618                           wreg	equ	0xFE8
 35619                           indf1	equ	0xFE7
 35620                           postdec1	equ	0xFE5
 35621                           fsr1h	equ	0xFE2
 35622                           fsr1l	equ	0xFE1
 35623                           bsr	equ	0xFE0
 35624                           indf2	equ	0xFDF
 35625                           postinc2	equ	0xFDE
 35626                           postdec2	equ	0xFDD
 35627                           plusw2	equ	0xFDB
 35628                           fsr2h	equ	0xFDA
 35629                           fsr2l	equ	0xFD9
 35630                           status	equ	0xFD8
 35631                           
 35632 ;; *************** function i1_cleanBuffer *****************
 35633 ;; Defined at:
 35634 ;;		line 127 in file "MISC.c"
 35635 ;; Parameters:    Size  Location     Type
 35636 ;;  data            2    0[COMRAM] PTR unsigned char 
 35637 ;;		 -> UseBluetooth@rfchannelSTR(10), UseBluetooth@buf(100), BluetoothInitialSetup@RFchannel(10), BluetoothInitialSetup
      +@buf(50), 
 35638 ;;		 -> CommandString(255), StringAddEqual@temp(255), ReceivedString(255), main@BluetoothString(255), 
 35639 ;;  count           2    2[COMRAM] int 
 35640 ;; Auto vars:     Size  Location     Type
 35641 ;;  cleanBuffer     1    7[COMRAM] unsigned char 
 35642 ;; Return value:  Size  Location     Type
 35643 ;;		None               void
 35644 ;; Registers used:
 35645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35646 ;; Tracked objects:
 35647 ;;		On entry : 0/0
 35648 ;;		On exit  : 0/0
 35649 ;;		Unchanged: 0/0
 35650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35651 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35653 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35654 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35655 ;;Total ram usage:        8 bytes
 35656 ;; Hardware stack levels used:    1
 35657 ;; Hardware stack levels required when called:    2
 35658 ;; This function calls:
 35659 ;;		Nothing
 35660 ;; This function is called by:
 35661 ;;		_low_isr
 35662 ;; This function uses a non-reentrant model
 35663 ;;
 35664                           
 35665                           	psect	text102
 35666  009188                     __ptext102:
 35667                           	opt stack 0
 35668  009188                     i1_cleanBuffer:
 35669                           	opt stack 19
 35670                           
 35671                           ;MISC.c: 129: unsigned char i=0;
 35672                           
 35673                           ;incstack = 0
 35674  009188  0E00               	movlw	0
 35675  00918A  6E08               	movwf	i1cleanBuffer@i,c
 35676                           
 35677                           ;MISC.c: 130: for(i=0; i<count;i++)
 35678  00918C  0E00               	movlw	0
 35679  00918E  6E08               	movwf	i1cleanBuffer@i,c
 35680  009190  D00C               	goto	i1l11586
 35681  009192                     i1l11582:
 35682                           
 35683                           ;MISC.c: 131: {
 35684                           ;MISC.c: 132: data[i]= 0;
 35685  009192  5008               	movf	i1cleanBuffer@i,w,c
 35686  009194  0D01               	mullw	1
 35687  009196  50F3               	movf	prodl,w,c
 35688  009198  2401               	addwf	i1cleanBuffer@data,w,c
 35689  00919A  6ED9               	movwf	fsr2l,c
 35690  00919C  50F4               	movf	prodh,w,c
 35691  00919E  2002               	addwfc	i1cleanBuffer@data+1,w,c
 35692  0091A0  6EDA               	movwf	fsr2h,c
 35693  0091A2  0E00               	movlw	0
 35694  0091A4  6EDF               	movwf	indf2,c
 35695  0091A6  2A08               	incf	i1cleanBuffer@i,f,c
 35696  0091A8  D000               	goto	i1l11586
 35697  0091AA                     i1l11586:
 35698  0091AA  5008               	movf	i1cleanBuffer@i,w,c
 35699  0091AC  6E05               	movwf	??i1_cleanBuffer& (0+255),c
 35700  0091AE  6A06               	clrf	(??i1_cleanBuffer+1)& (0+255),c
 35701  0091B0  5003               	movf	i1cleanBuffer@count,w,c
 35702  0091B2  5C05               	subwf	??i1_cleanBuffer,w,c
 35703  0091B4  5006               	movf	??i1_cleanBuffer+1,w,c
 35704  0091B6  0A80               	xorlw	128
 35705  0091B8  6E07               	movwf	(??i1_cleanBuffer+2)& (0+255),c
 35706  0091BA  5004               	movf	i1cleanBuffer@count+1,w,c
 35707  0091BC  0A80               	xorlw	128
 35708  0091BE  5807               	subwfb	(??i1_cleanBuffer+2)& (0+255),w,c
 35709  0091C0  A0D8               	btfss	status,0,c
 35710  0091C2  D7E7               	goto	i1l11582
 35711  0091C4  0012               	return		;funcret
 35712  0091C6                     __end_ofi1_cleanBuffer:
 35713                           	opt stack 0
 35714                           pclatu	equ	0xFFB
 35715                           pclath	equ	0xFFA
 35716                           tblptru	equ	0xFF8
 35717                           tblptrh	equ	0xFF7
 35718                           tblptrl	equ	0xFF6
 35719                           tablat	equ	0xFF5
 35720                           prodh	equ	0xFF4
 35721                           prodl	equ	0xFF3
 35722                           intcon	equ	0xFF2
 35723                           intcon2	equ	0xFF1
 35724                           indf0	equ	0xFEF
 35725                           postinc0	equ	0xFEE
 35726                           plusw0	equ	0xFEB
 35727                           fsr0h	equ	0xFEA
 35728                           fsr0l	equ	0xFE9
 35729                           wreg	equ	0xFE8
 35730                           indf1	equ	0xFE7
 35731                           postdec1	equ	0xFE5
 35732                           fsr1h	equ	0xFE2
 35733                           fsr1l	equ	0xFE1
 35734                           bsr	equ	0xFE0
 35735                           indf2	equ	0xFDF
 35736                           postinc2	equ	0xFDE
 35737                           postdec2	equ	0xFDD
 35738                           plusw2	equ	0xFDB
 35739                           fsr2h	equ	0xFDA
 35740                           fsr2l	equ	0xFD9
 35741                           status	equ	0xFD8
 35742                           
 35743 ;; *************** function i1_UARTstringCRLN *****************
 35744 ;; Defined at:
 35745 ;;		line 262 in file "UART.c"
 35746 ;; Parameters:    Size  Location     Type
 35747 ;;  data            2    3[COMRAM] PTR unsigned char 
 35748 ;;		 -> STR_150(36), STR_148(27), STR_134(13), STR_103(13), 
 35749 ;;		 -> STR_100(21), STR_93(17), STR_90(5), STR_82(29), 
 35750 ;;		 -> STR_81(18), STR_80(29), STR_77(44), STR_72(46), 
 35751 ;;		 -> STR_71(42), STR_70(50), STR_69(50), STR_67(31), 
 35752 ;;		 -> STR_66(31), STR_65(37), STR_64(37), STR_63(37), 
 35753 ;;		 -> STR_59(18), STR_58(14), STR_57(9), STR_56(20), 
 35754 ;;		 -> STR_55(16), STR_54(7), STR_53(35), STR_52(37), 
 35755 ;;		 -> STR_49(47), STR_44(17), STR_43(9), STR_42(18), 
 35756 ;;		 -> STR_41(9), STR_40(22), STR_39(11), STR_38(20), 
 35757 ;;		 -> STR_37(7), STR_36(31), STR_34(33), STR_30(32), 
 35758 ;;		 -> STR_26(31), STR_25(31), STR_23(29), STR_21(29), 
 35759 ;;		 -> SYNTAX_ERR(14), UseBluetooth@buf(100), STR_1(16), ProjectName(26), 
 35760 ;; Auto vars:     Size  Location     Type
 35761 ;;		None
 35762 ;; Return value:  Size  Location     Type
 35763 ;;		None               void
 35764 ;; Registers used:
 35765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35766 ;; Tracked objects:
 35767 ;;		On entry : 0/0
 35768 ;;		On exit  : 0/0
 35769 ;;		Unchanged: 0/0
 35770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35775 ;;Total ram usage:        2 bytes
 35776 ;; Hardware stack levels used:    1
 35777 ;; Hardware stack levels required when called:    4
 35778 ;; This function calls:
 35779 ;;		i1_UARTchar
 35780 ;;		i1_UARTstring
 35781 ;; This function is called by:
 35782 ;;		_low_isr
 35783 ;; This function uses a non-reentrant model
 35784 ;;
 35785                           
 35786                           	psect	text103
 35787  008CD2                     __ptext103:
 35788                           	opt stack 0
 35789  008CD2                     i1_UARTstringCRLN:
 35790                           	opt stack 17
 35791                           
 35792                           ;UART.c: 264: while(*data != 0)
 35793                           
 35794                           ;incstack = 0
 35795  008CD2  D016               	goto	i1l11614
 35796  008CD4                     i1l11610:
 35797                           
 35798                           ;UART.c: 265: {
 35799                           ;UART.c: 266: UARTchar(*data);
 35800  008CD4  C004  FFF6         	movff	i1UARTstringCRLN@data,tblptrl
 35801  008CD8  C005  FFF7         	movff	i1UARTstringCRLN@data+1,tblptrh
 35802  008CDC  0E00               	movlw	low (__mediumconst shr (0+16))
 35803  008CDE  6EF8               	movwf	tblptru,c
 35804  008CE0  0E0F               	movlw	(high __ramtop+-1)
 35805  008CE2  64F7               	cpfsgt	tblptrh,c
 35806  008CE4  D003               	bra	i1u1335_27
 35807  008CE6  0008               	tblrd		*
 35808  008CE8  50F5               	movf	tablat,w,c
 35809  008CEA  D005               	bra	i1u1335_20
 35810  008CEC                     i1u1335_27:
 35811  008CEC  CFF6 FFE9          	movff	tblptrl,fsr0l
 35812  008CF0  CFF7 FFEA          	movff	tblptrh,fsr0h
 35813  008CF4  50EF               	movf	indf0,w,c
 35814  008CF6                     i1u1335_20:
 35815  008CF6  EC18  F04A         	call	i1_UARTchar
 35816                           
 35817                           ;UART.c: 267: *data++;
 35818  008CFA  4A04               	infsnz	i1UARTstringCRLN@data,f,c
 35819  008CFC  2A05               	incf	i1UARTstringCRLN@data+1,f,c
 35820  008CFE  D000               	goto	i1l11614
 35821  008D00                     i1l11614:
 35822  008D00  C004  FFF6         	movff	i1UARTstringCRLN@data,tblptrl
 35823  008D04  C005  FFF7         	movff	i1UARTstringCRLN@data+1,tblptrh
 35824  008D08  0E00               	movlw	low (__mediumconst shr (0+16))
 35825  008D0A  6EF8               	movwf	tblptru,c
 35826  008D0C  0E0F               	movlw	(high __ramtop+-1)
 35827  008D0E  64F7               	cpfsgt	tblptrh,c
 35828  008D10  D003               	bra	i1u1336_27
 35829  008D12  0008               	tblrd		*
 35830  008D14  50F5               	movf	tablat,w,c
 35831  008D16  D005               	bra	i1u1336_20
 35832  008D18                     i1u1336_27:
 35833  008D18  CFF6 FFE9          	movff	tblptrl,fsr0l
 35834  008D1C  CFF7 FFEA          	movff	tblptrh,fsr0h
 35835  008D20  50EF               	movf	indf0,w,c
 35836  008D22                     i1u1336_20:
 35837  008D22  0900               	iorlw	0
 35838  008D24  A4D8               	btfss	status,2,c
 35839  008D26  D7D6               	goto	i1l11610
 35840                           
 35841                           ;UART.c: 268: }
 35842                           ;UART.c: 269: UARTstring(CRLN);
 35843  008D28  0EA7               	movlw	low _CRLN
 35844  008D2A  6E02               	movwf	i1UARTstring@data,c
 35845  008D2C  0EF3               	movlw	high _CRLN
 35846  008D2E  6E03               	movwf	i1UARTstring@data+1,c
 35847  008D30  EC24  F047         	call	i1_UARTstring	;wreg free
 35848  008D34  0012               	return		;funcret
 35849  008D36                     __end_ofi1_UARTstringCRLN:
 35850                           	opt stack 0
 35851                           pclatu	equ	0xFFB
 35852                           pclath	equ	0xFFA
 35853                           tblptru	equ	0xFF8
 35854                           tblptrh	equ	0xFF7
 35855                           tblptrl	equ	0xFF6
 35856                           tablat	equ	0xFF5
 35857                           prodh	equ	0xFF4
 35858                           prodl	equ	0xFF3
 35859                           intcon	equ	0xFF2
 35860                           intcon2	equ	0xFF1
 35861                           indf0	equ	0xFEF
 35862                           postinc0	equ	0xFEE
 35863                           plusw0	equ	0xFEB
 35864                           fsr0h	equ	0xFEA
 35865                           fsr0l	equ	0xFE9
 35866                           wreg	equ	0xFE8
 35867                           indf1	equ	0xFE7
 35868                           postdec1	equ	0xFE5
 35869                           fsr1h	equ	0xFE2
 35870                           fsr1l	equ	0xFE1
 35871                           bsr	equ	0xFE0
 35872                           indf2	equ	0xFDF
 35873                           postinc2	equ	0xFDE
 35874                           postdec2	equ	0xFDD
 35875                           plusw2	equ	0xFDB
 35876                           fsr2h	equ	0xFDA
 35877                           fsr2l	equ	0xFD9
 35878                           status	equ	0xFD8
 35879                           
 35880 ;; *************** function i1_UARTstring *****************
 35881 ;; Defined at:
 35882 ;;		line 202 in file "UART.c"
 35883 ;; Parameters:    Size  Location     Type
 35884 ;;  data            2    1[COMRAM] PTR unsigned char 
 35885 ;;		 -> STR_149(28), STR_92(13), STR_79(32), STR_68(14), 
 35886 ;;		 -> SYNTAX_ERR(14), UseBluetooth@buf(100), STR_18(5), STR_16(5), 
 35887 ;;		 -> STR_14(6), STR_12(6), STR_10(9), STR_8(21), 
 35888 ;;		 -> STR_6(10), BluetoothInitialSetup@buf(50), STR_2(4), ReceivedString(255), 
 35889 ;;		 -> CRLN(3), 
 35890 ;; Auto vars:     Size  Location     Type
 35891 ;;		None
 35892 ;; Return value:  Size  Location     Type
 35893 ;;		None               void
 35894 ;; Registers used:
 35895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35896 ;; Tracked objects:
 35897 ;;		On entry : 0/0
 35898 ;;		On exit  : 0/0
 35899 ;;		Unchanged: 0/0
 35900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35905 ;;Total ram usage:        2 bytes
 35906 ;; Hardware stack levels used:    1
 35907 ;; Hardware stack levels required when called:    3
 35908 ;; This function calls:
 35909 ;;		i1_UARTchar
 35910 ;; This function is called by:
 35911 ;;		_low_isr
 35912 ;;		i1_UARTstringCRLN
 35913 ;; This function uses a non-reentrant model
 35914 ;;
 35915                           
 35916                           	psect	text104
 35917  008E48                     __ptext104:
 35918                           	opt stack 0
 35919  008E48                     i1_UARTstring:
 35920                           	opt stack 17
 35921                           
 35922                           ;UART.c: 204: while(*data != 0)
 35923                           
 35924                           ;incstack = 0
 35925  008E48  D016               	goto	i1l10520
 35926  008E4A                     i1l10516:
 35927                           
 35928                           ;UART.c: 205: {
 35929                           ;UART.c: 206: UARTchar(*data);
 35930  008E4A  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 35931  008E4E  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 35932  008E52  0E00               	movlw	low (__mediumconst shr (0+16))
 35933  008E54  6EF8               	movwf	tblptru,c
 35934  008E56  0E0F               	movlw	(high __ramtop+-1)
 35935  008E58  64F7               	cpfsgt	tblptrh,c
 35936  008E5A  D003               	bra	i1u1178_27
 35937  008E5C  0008               	tblrd		*
 35938  008E5E  50F5               	movf	tablat,w,c
 35939  008E60  D005               	bra	i1u1178_20
 35940  008E62                     i1u1178_27:
 35941  008E62  CFF6 FFE9          	movff	tblptrl,fsr0l
 35942  008E66  CFF7 FFEA          	movff	tblptrh,fsr0h
 35943  008E6A  50EF               	movf	indf0,w,c
 35944  008E6C                     i1u1178_20:
 35945  008E6C  EC18  F04A         	call	i1_UARTchar
 35946                           
 35947                           ;UART.c: 207: *data++;
 35948  008E70  4A02               	infsnz	i1UARTstring@data,f,c
 35949  008E72  2A03               	incf	i1UARTstring@data+1,f,c
 35950  008E74  D000               	goto	i1l10520
 35951  008E76                     i1l10520:
 35952  008E76  C002  FFF6         	movff	i1UARTstring@data,tblptrl
 35953  008E7A  C003  FFF7         	movff	i1UARTstring@data+1,tblptrh
 35954  008E7E  0E00               	movlw	low (__mediumconst shr (0+16))
 35955  008E80  6EF8               	movwf	tblptru,c
 35956  008E82  0E0F               	movlw	(high __ramtop+-1)
 35957  008E84  64F7               	cpfsgt	tblptrh,c
 35958  008E86  D003               	bra	i1u1179_27
 35959  008E88  0008               	tblrd		*
 35960  008E8A  50F5               	movf	tablat,w,c
 35961  008E8C  D005               	bra	i1u1179_20
 35962  008E8E                     i1u1179_27:
 35963  008E8E  CFF6 FFE9          	movff	tblptrl,fsr0l
 35964  008E92  CFF7 FFEA          	movff	tblptrh,fsr0h
 35965  008E96  50EF               	movf	indf0,w,c
 35966  008E98                     i1u1179_20:
 35967  008E98  0900               	iorlw	0
 35968  008E9A  A4D8               	btfss	status,2,c
 35969  008E9C  D7D6               	goto	i1l10516
 35970  008E9E  0012               	return		;funcret
 35971  008EA0                     __end_ofi1_UARTstring:
 35972                           	opt stack 0
 35973                           pclatu	equ	0xFFB
 35974                           pclath	equ	0xFFA
 35975                           tblptru	equ	0xFF8
 35976                           tblptrh	equ	0xFF7
 35977                           tblptrl	equ	0xFF6
 35978                           tablat	equ	0xFF5
 35979                           prodh	equ	0xFF4
 35980                           prodl	equ	0xFF3
 35981                           intcon	equ	0xFF2
 35982                           intcon2	equ	0xFF1
 35983                           indf0	equ	0xFEF
 35984                           postinc0	equ	0xFEE
 35985                           plusw0	equ	0xFEB
 35986                           fsr0h	equ	0xFEA
 35987                           fsr0l	equ	0xFE9
 35988                           wreg	equ	0xFE8
 35989                           indf1	equ	0xFE7
 35990                           postdec1	equ	0xFE5
 35991                           fsr1h	equ	0xFE2
 35992                           fsr1l	equ	0xFE1
 35993                           bsr	equ	0xFE0
 35994                           indf2	equ	0xFDF
 35995                           postinc2	equ	0xFDE
 35996                           postdec2	equ	0xFDD
 35997                           plusw2	equ	0xFDB
 35998                           fsr2h	equ	0xFDA
 35999                           fsr2l	equ	0xFD9
 36000                           status	equ	0xFD8
 36001                           
 36002 ;; *************** function i1_ReadUSART *****************
 36003 ;; Defined at:
 36004 ;;		line 227 in file "UART.c"
 36005 ;; Parameters:    Size  Location     Type
 36006 ;;		None
 36007 ;; Auto vars:     Size  Location     Type
 36008 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 36009 ;; Return value:  Size  Location     Type
 36010 ;;                  1    wreg      unsigned char 
 36011 ;; Registers used:
 36012 ;;		wreg, status,2
 36013 ;; Tracked objects:
 36014 ;;		On entry : 0/0
 36015 ;;		On exit  : 0/0
 36016 ;;		Unchanged: 0/0
 36017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36021 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36022 ;;Total ram usage:        1 bytes
 36023 ;; Hardware stack levels used:    1
 36024 ;; Hardware stack levels required when called:    2
 36025 ;; This function calls:
 36026 ;;		Nothing
 36027 ;; This function is called by:
 36028 ;;		_low_isr
 36029 ;; This function uses a non-reentrant model
 36030 ;;
 36031                           
 36032                           	psect	text105
 36033  009474                     __ptext105:
 36034                           	opt stack 0
 36035  009474                     i1_ReadUSART:
 36036                           	opt stack 19
 36037                           
 36038                           ;UART.c: 229: unsigned char data;
 36039                           ;UART.c: 231: if(RCSTAbits.OERR)
 36040                           
 36041                           ;incstack = 0
 36042  009474  A2AB               	btfss	4011,1,c	;volatile
 36043  009476  D004               	goto	i1l667
 36044                           
 36045                           ;UART.c: 232: {
 36046                           ;UART.c: 234: RCSTAbits.CREN = 0;
 36047  009478  98AB               	bcf	4011,4,c	;volatile
 36048                           
 36049                           ;UART.c: 235: RCSTAbits.CREN = 1;
 36050  00947A  88AB               	bsf	4011,4,c	;volatile
 36051                           
 36052                           ;UART.c: 236: return 0;
 36053  00947C  0E00               	movlw	0
 36054  00947E  0012               	return	
 36055  009480                     i1l667:
 36056                           
 36057                           ;UART.c: 237: }
 36058                           ;UART.c: 239: data = RCREG;
 36059  009480  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 36060                           
 36061                           ;UART.c: 240: return (data);
 36062  009484  5001               	movf	i1ReadUSART@data,w,c
 36063  009486  0012               	return	
 36064  009488  0012               	return		;funcret
 36065  00948A                     __end_ofi1_ReadUSART:
 36066                           	opt stack 0
 36067                           pclatu	equ	0xFFB
 36068                           pclath	equ	0xFFA
 36069                           tblptru	equ	0xFF8
 36070                           tblptrh	equ	0xFF7
 36071                           tblptrl	equ	0xFF6
 36072                           tablat	equ	0xFF5
 36073                           prodh	equ	0xFF4
 36074                           prodl	equ	0xFF3
 36075                           intcon	equ	0xFF2
 36076                           intcon2	equ	0xFF1
 36077                           indf0	equ	0xFEF
 36078                           postinc0	equ	0xFEE
 36079                           plusw0	equ	0xFEB
 36080                           fsr0h	equ	0xFEA
 36081                           fsr0l	equ	0xFE9
 36082                           wreg	equ	0xFE8
 36083                           indf1	equ	0xFE7
 36084                           postdec1	equ	0xFE5
 36085                           fsr1h	equ	0xFE2
 36086                           fsr1l	equ	0xFE1
 36087                           bsr	equ	0xFE0
 36088                           indf2	equ	0xFDF
 36089                           postinc2	equ	0xFDE
 36090                           postdec2	equ	0xFDD
 36091                           plusw2	equ	0xFDB
 36092                           fsr2h	equ	0xFDA
 36093                           fsr2l	equ	0xFD9
 36094                           status	equ	0xFD8
 36095                           
 36096 ;; *************** function i1_BlueConnected *****************
 36097 ;; Defined at:
 36098 ;;		line 90 in file "Bluetooth.c"
 36099 ;; Parameters:    Size  Location     Type
 36100 ;;		None
 36101 ;; Auto vars:     Size  Location     Type
 36102 ;;		None
 36103 ;; Return value:  Size  Location     Type
 36104 ;;                  1    wreg      unsigned char 
 36105 ;; Registers used:
 36106 ;;		wreg
 36107 ;; Tracked objects:
 36108 ;;		On entry : 0/0
 36109 ;;		On exit  : 0/0
 36110 ;;		Unchanged: 0/0
 36111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36116 ;;Total ram usage:        0 bytes
 36117 ;; Hardware stack levels used:    1
 36118 ;; Hardware stack levels required when called:    2
 36119 ;; This function calls:
 36120 ;;		Nothing
 36121 ;; This function is called by:
 36122 ;;		_low_isr
 36123 ;; This function uses a non-reentrant model
 36124 ;;
 36125                           
 36126                           	psect	text106
 36127  009556                     __ptext106:
 36128                           	opt stack 0
 36129  009556                     i1_BlueConnected:
 36130                           	opt stack 19
 36131                           
 36132                           ;Bluetooth.c: 93: if((PORTA & 0x02) == 0x02)
 36133                           
 36134                           ;incstack = 0
 36135  009556  A280               	btfss	3968,1,c	;volatile
 36136  009558  D002               	goto	i1l11638
 36137                           
 36138                           ;Bluetooth.c: 94: {
 36139                           ;Bluetooth.c: 95: return 1;
 36140  00955A  0E01               	movlw	1
 36141  00955C  0012               	return	
 36142  00955E                     i1l11638:
 36143                           
 36144                           ;Bluetooth.c: 96: }
 36145                           ;Bluetooth.c: 97: return 0;
 36146  00955E  0E00               	movlw	0
 36147  009560  0012               	return	
 36148  009562  0012               	return		;funcret
 36149  009564                     __end_ofi1_BlueConnected:
 36150                           	opt stack 0
 36151                           pclatu	equ	0xFFB
 36152                           pclath	equ	0xFFA
 36153                           tblptru	equ	0xFF8
 36154                           tblptrh	equ	0xFF7
 36155                           tblptrl	equ	0xFF6
 36156                           tablat	equ	0xFF5
 36157                           prodh	equ	0xFF4
 36158                           prodl	equ	0xFF3
 36159                           intcon	equ	0xFF2
 36160                           intcon2	equ	0xFF1
 36161                           indf0	equ	0xFEF
 36162                           postinc0	equ	0xFEE
 36163                           plusw0	equ	0xFEB
 36164                           fsr0h	equ	0xFEA
 36165                           fsr0l	equ	0xFE9
 36166                           wreg	equ	0xFE8
 36167                           indf1	equ	0xFE7
 36168                           postdec1	equ	0xFE5
 36169                           fsr1h	equ	0xFE2
 36170                           fsr1l	equ	0xFE1
 36171                           bsr	equ	0xFE0
 36172                           indf2	equ	0xFDF
 36173                           postinc2	equ	0xFDE
 36174                           postdec2	equ	0xFDD
 36175                           plusw2	equ	0xFDB
 36176                           fsr2h	equ	0xFDA
 36177                           fsr2l	equ	0xFD9
 36178                           status	equ	0xFD8
 36179                           
 36180 ;; *************** function _IsCharacter *****************
 36181 ;; Defined at:
 36182 ;;		line 113 in file "MISC.c"
 36183 ;; Parameters:    Size  Location     Type
 36184 ;;  data            1    wreg     unsigned char 
 36185 ;; Auto vars:     Size  Location     Type
 36186 ;;  data            1    0[COMRAM] unsigned char 
 36187 ;; Return value:  Size  Location     Type
 36188 ;;                  1    wreg      unsigned char 
 36189 ;; Registers used:
 36190 ;;		wreg, status,2, status,0
 36191 ;; Tracked objects:
 36192 ;;		On entry : 0/0
 36193 ;;		On exit  : 0/0
 36194 ;;		Unchanged: 0/0
 36195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36199 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36200 ;;Total ram usage:        1 bytes
 36201 ;; Hardware stack levels used:    1
 36202 ;; Hardware stack levels required when called:    2
 36203 ;; This function calls:
 36204 ;;		Nothing
 36205 ;; This function is called by:
 36206 ;;		_low_isr
 36207 ;; This function uses a non-reentrant model
 36208 ;;
 36209                           
 36210                           	psect	text107
 36211  009418                     __ptext107:
 36212                           	opt stack 0
 36213  009418                     _IsCharacter:
 36214                           	opt stack 19
 36215                           
 36216                           ;incstack = 0
 36217                           ;IsCharacter@data stored from wreg
 36218  009418  6E01               	movwf	IsCharacter@data,c
 36219                           
 36220                           ;MISC.c: 115: if(data >= 32 && data <= 126)
 36221  00941A  0E1F               	movlw	31
 36222  00941C  6401               	cpfsgt	IsCharacter@data,c
 36223  00941E  D005               	goto	i1l11406
 36224  009420  0E7F               	movlw	127
 36225  009422  6001               	cpfslt	IsCharacter@data,c
 36226  009424  D002               	goto	i1l11406
 36227                           
 36228                           ;MISC.c: 116: {
 36229                           ;MISC.c: 117: return 1;
 36230  009426  0E01               	movlw	1
 36231  009428  0012               	return	
 36232  00942A                     i1l11406:
 36233                           
 36234                           ;MISC.c: 118: }
 36235                           ;MISC.c: 119: return 0;
 36236  00942A  0E00               	movlw	0
 36237  00942C  0012               	return	
 36238  00942E  0012               	return		;funcret
 36239  009430                     __end_of_IsCharacter:
 36240                           	opt stack 0
 36241                           pclatu	equ	0xFFB
 36242                           pclath	equ	0xFFA
 36243                           tblptru	equ	0xFF8
 36244                           tblptrh	equ	0xFF7
 36245                           tblptrl	equ	0xFF6
 36246                           tablat	equ	0xFF5
 36247                           prodh	equ	0xFF4
 36248                           prodl	equ	0xFF3
 36249                           intcon	equ	0xFF2
 36250                           intcon2	equ	0xFF1
 36251                           indf0	equ	0xFEF
 36252                           postinc0	equ	0xFEE
 36253                           plusw0	equ	0xFEB
 36254                           fsr0h	equ	0xFEA
 36255                           fsr0l	equ	0xFE9
 36256                           wreg	equ	0xFE8
 36257                           indf1	equ	0xFE7
 36258                           postdec1	equ	0xFE5
 36259                           fsr1h	equ	0xFE2
 36260                           fsr1l	equ	0xFE1
 36261                           bsr	equ	0xFE0
 36262                           indf2	equ	0xFDF
 36263                           postinc2	equ	0xFDE
 36264                           postdec2	equ	0xFDD
 36265                           plusw2	equ	0xFDB
 36266                           fsr2h	equ	0xFDA
 36267                           fsr2l	equ	0xFD9
 36268                           status	equ	0xFD8
 36269                           
 36270 ;; *************** function _EraseScreen *****************
 36271 ;; Defined at:
 36272 ;;		line 308 in file "UART.c"
 36273 ;; Parameters:    Size  Location     Type
 36274 ;;  characters      1    wreg     unsigned char 
 36275 ;; Auto vars:     Size  Location     Type
 36276 ;;  characters      1    1[COMRAM] unsigned char 
 36277 ;;  i               1    2[COMRAM] unsigned char 
 36278 ;; Return value:  Size  Location     Type
 36279 ;;		None               void
 36280 ;; Registers used:
 36281 ;;		wreg, status,2, status,0, cstack
 36282 ;; Tracked objects:
 36283 ;;		On entry : 0/0
 36284 ;;		On exit  : 0/0
 36285 ;;		Unchanged: 0/0
 36286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36288 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36291 ;;Total ram usage:        2 bytes
 36292 ;; Hardware stack levels used:    1
 36293 ;; Hardware stack levels required when called:    3
 36294 ;; This function calls:
 36295 ;;		i1_UARTchar
 36296 ;; This function is called by:
 36297 ;;		_low_isr
 36298 ;; This function uses a non-reentrant model
 36299 ;;
 36300                           
 36301                           	psect	text108
 36302  009380                     __ptext108:
 36303                           	opt stack 0
 36304  009380                     _EraseScreen:
 36305                           	opt stack 18
 36306                           
 36307                           ;incstack = 0
 36308                           ;EraseScreen@characters stored from wreg
 36309  009380  6E02               	movwf	EraseScreen@characters,c
 36310                           
 36311                           ;UART.c: 310: unsigned char i;
 36312                           ;UART.c: 312: UARTchar('\r');
 36313  009382  0E0D               	movlw	13
 36314  009384  EC18  F04A         	call	i1_UARTchar
 36315                           
 36316                           ;UART.c: 313: for (i = 0; i < characters; i++)
 36317  009388  0E00               	movlw	0
 36318  00938A  6E03               	movwf	EraseScreen@i,c
 36319  00938C  D005               	goto	i1l11418
 36320  00938E                     i1l11414:
 36321                           
 36322                           ;UART.c: 314: {
 36323                           ;UART.c: 315: UARTchar(' ');
 36324  00938E  0E20               	movlw	32
 36325  009390  EC18  F04A         	call	i1_UARTchar
 36326  009394  2A03               	incf	EraseScreen@i,f,c
 36327  009396  D000               	goto	i1l11418
 36328  009398                     i1l11418:
 36329  009398  5002               	movf	EraseScreen@characters,w,c
 36330  00939A  5C03               	subwf	EraseScreen@i,w,c
 36331  00939C  A0D8               	btfss	status,0,c
 36332  00939E  D7F7               	goto	i1l11414
 36333                           
 36334                           ;UART.c: 316: }
 36335                           ;UART.c: 317: UARTchar('\r');
 36336  0093A0  0E0D               	movlw	13
 36337  0093A2  EC18  F04A         	call	i1_UARTchar
 36338  0093A6  0012               	return		;funcret
 36339  0093A8                     __end_of_EraseScreen:
 36340                           	opt stack 0
 36341                           pclatu	equ	0xFFB
 36342                           pclath	equ	0xFFA
 36343                           tblptru	equ	0xFF8
 36344                           tblptrh	equ	0xFF7
 36345                           tblptrl	equ	0xFF6
 36346                           tablat	equ	0xFF5
 36347                           prodh	equ	0xFF4
 36348                           prodl	equ	0xFF3
 36349                           intcon	equ	0xFF2
 36350                           intcon2	equ	0xFF1
 36351                           indf0	equ	0xFEF
 36352                           postinc0	equ	0xFEE
 36353                           plusw0	equ	0xFEB
 36354                           fsr0h	equ	0xFEA
 36355                           fsr0l	equ	0xFE9
 36356                           wreg	equ	0xFE8
 36357                           indf1	equ	0xFE7
 36358                           postdec1	equ	0xFE5
 36359                           fsr1h	equ	0xFE2
 36360                           fsr1l	equ	0xFE1
 36361                           bsr	equ	0xFE0
 36362                           indf2	equ	0xFDF
 36363                           postinc2	equ	0xFDE
 36364                           postdec2	equ	0xFDD
 36365                           plusw2	equ	0xFDB
 36366                           fsr2h	equ	0xFDA
 36367                           fsr2l	equ	0xFD9
 36368                           status	equ	0xFD8
 36369                           
 36370 ;; *************** function i1_UARTchar *****************
 36371 ;; Defined at:
 36372 ;;		line 188 in file "UART.c"
 36373 ;; Parameters:    Size  Location     Type
 36374 ;;  data            1    wreg     unsigned char 
 36375 ;; Auto vars:     Size  Location     Type
 36376 ;;  data            1    0[COMRAM] unsigned char 
 36377 ;; Return value:  Size  Location     Type
 36378 ;;		None               void
 36379 ;; Registers used:
 36380 ;;		wreg, status,2
 36381 ;; Tracked objects:
 36382 ;;		On entry : 0/0
 36383 ;;		On exit  : 0/0
 36384 ;;		Unchanged: 0/0
 36385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36390 ;;Total ram usage:        1 bytes
 36391 ;; Hardware stack levels used:    1
 36392 ;; Hardware stack levels required when called:    2
 36393 ;; This function calls:
 36394 ;;		Nothing
 36395 ;; This function is called by:
 36396 ;;		_EraseScreen
 36397 ;;		_low_isr
 36398 ;;		i1_UARTstring
 36399 ;;		i1_UARTstringCRLN
 36400 ;; This function uses a non-reentrant model
 36401 ;;
 36402                           
 36403                           	psect	text109
 36404  009430                     __ptext109:
 36405                           	opt stack 0
 36406  009430                     i1_UARTchar:
 36407                           	opt stack 17
 36408                           
 36409                           ;incstack = 0
 36410                           ;i1UARTchar@data stored from wreg
 36411  009430  6E01               	movwf	i1UARTchar@data,c
 36412                           
 36413                           ;UART.c: 190: if(data != 0)
 36414  009432  5001               	movf	i1UARTchar@data,w,c
 36415  009434  B4D8               	btfsc	status,2,c
 36416  009436  0012               	return	
 36417                           
 36418                           ;UART.c: 191: {
 36419                           ;UART.c: 192: TXREG = data;
 36420  009438  C001  FFAD         	movff	i1UARTchar@data,4013	;volatile
 36421                           
 36422                           ;UART.c: 193: while(!TXSTAbits.TRMT);
 36423  00943C  D000               	goto	i1l652
 36424  00943E                     i1l652:
 36425  00943E  B2AC               	btfsc	4012,1,c	;volatile
 36426  009440  0012               	return	
 36427  009442  D7FD               	goto	i1l652
 36428  009444  0012               	return	
 36429  009446  0012               	return		;funcret
 36430  009448                     __end_ofi1_UARTchar:
 36431                           	opt stack 0
 36432                           pclatu	equ	0xFFB
 36433                           pclath	equ	0xFFA
 36434                           tblptru	equ	0xFF8
 36435                           tblptrh	equ	0xFF7
 36436                           tblptrl	equ	0xFF6
 36437                           tablat	equ	0xFF5
 36438                           prodh	equ	0xFF4
 36439                           prodl	equ	0xFF3
 36440                           intcon	equ	0xFF2
 36441                           intcon2	equ	0xFF1
 36442                           indf0	equ	0xFEF
 36443                           postinc0	equ	0xFEE
 36444                           plusw0	equ	0xFEB
 36445                           fsr0h	equ	0xFEA
 36446                           fsr0l	equ	0xFE9
 36447                           wreg	equ	0xFE8
 36448                           indf1	equ	0xFE7
 36449                           postdec1	equ	0xFE5
 36450                           fsr1h	equ	0xFE2
 36451                           fsr1l	equ	0xFE1
 36452                           bsr	equ	0xFE0
 36453                           indf2	equ	0xFDF
 36454                           postinc2	equ	0xFDE
 36455                           postdec2	equ	0xFDD
 36456                           plusw2	equ	0xFDB
 36457                           fsr2h	equ	0xFDA
 36458                           fsr2l	equ	0xFD9
 36459                           status	equ	0xFD8
 36460                           
 36461 ;; *************** function _high_isr *****************
 36462 ;; Defined at:
 36463 ;;		line 59 in file "interrupts.c"
 36464 ;; Parameters:    Size  Location     Type
 36465 ;;		None
 36466 ;; Auto vars:     Size  Location     Type
 36467 ;;  Time0           2   26[BANK0 ] unsigned int 
 36468 ;;  IRpin           1   25[BANK0 ] unsigned char 
 36469 ;; Return value:  Size  Location     Type
 36470 ;;		None               void
 36471 ;; Registers used:
 36472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36473 ;; Tracked objects:
 36474 ;;		On entry : 0/0
 36475 ;;		On exit  : 0/0
 36476 ;;		Unchanged: 0/0
 36477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36479 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36480 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36481 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36482 ;;Total ram usage:       21 bytes
 36483 ;; Hardware stack levels used:    1
 36484 ;; Hardware stack levels required when called:    1
 36485 ;; This function calls:
 36486 ;;		_IRrawToNEC
 36487 ;;		_ResetTimer3
 36488 ;;		_SetTimer0
 36489 ;;		i2_ReadIRpin
 36490 ;;		i2_ResetTimer0
 36491 ;;		i2_cleanBuffer16bit
 36492 ;; This function is called by:
 36493 ;;		Interrupt level 2
 36494 ;; This function uses a non-reentrant model
 36495 ;;
 36496                           
 36497                           	psect	intcode
 36498  000008                     __pintcode:
 36499                           	opt stack 0
 36500  000008                     _high_isr:
 36501                           	opt stack 17
 36502                           
 36503                           ;incstack = 0
 36504  000008  CFFA F06B          	movff	pclath,??_high_isr+4
 36505  00000C  CFFB F06C          	movff	pclatu,??_high_isr+5
 36506  000010  CFE9 F06D          	movff	fsr0l,??_high_isr+6
 36507  000014  EFD1  F01E         	goto	int_func
 36508                           pclatu	equ	0xFFB
 36509                           pclath	equ	0xFFA
 36510                           tblptru	equ	0xFF8
 36511                           tblptrh	equ	0xFF7
 36512                           tblptrl	equ	0xFF6
 36513                           tablat	equ	0xFF5
 36514                           prodh	equ	0xFF4
 36515                           prodl	equ	0xFF3
 36516                           intcon	equ	0xFF2
 36517                           intcon2	equ	0xFF1
 36518                           indf0	equ	0xFEF
 36519                           postinc0	equ	0xFEE
 36520                           plusw0	equ	0xFEB
 36521                           fsr0h	equ	0xFEA
 36522                           fsr0l	equ	0xFE9
 36523                           wreg	equ	0xFE8
 36524                           indf1	equ	0xFE7
 36525                           postdec1	equ	0xFE5
 36526                           fsr1h	equ	0xFE2
 36527                           fsr1l	equ	0xFE1
 36528                           bsr	equ	0xFE0
 36529                           indf2	equ	0xFDF
 36530                           postinc2	equ	0xFDE
 36531                           postdec2	equ	0xFDD
 36532                           plusw2	equ	0xFDB
 36533                           fsr2h	equ	0xFDA
 36534                           fsr2l	equ	0xFD9
 36535                           status	equ	0xFD8
 36536                           
 36537                           	psect	intcode_body
 36538  003DA2                     __pintcode_body:
 36539                           	opt stack 17
 36540  003DA2                     int_func:
 36541                           	opt stack 17
 36542  003DA2  CFEA F06E          	movff	fsr0h,??_high_isr+7
 36543  003DA6  CFE1 F06F          	movff	fsr1l,??_high_isr+8
 36544  003DAA  CFE2 F070          	movff	fsr1h,??_high_isr+9
 36545  003DAE  CFD9 F071          	movff	fsr2l,??_high_isr+10
 36546  003DB2  CFDA F072          	movff	fsr2h,??_high_isr+11
 36547  003DB6  CFF3 F073          	movff	prodl,??_high_isr+12
 36548  003DBA  CFF4 F074          	movff	prodh,??_high_isr+13
 36549  003DBE  CFF6 F075          	movff	tblptrl,??_high_isr+14
 36550  003DC2  CFF7 F076          	movff	tblptrh,??_high_isr+15
 36551  003DC6  CFF8 F077          	movff	tblptru,??_high_isr+16
 36552  003DCA  CFF5 F078          	movff	tablat,??_high_isr+17
 36553                           
 36554                           ;interrupts.c: 68: unsigned char IRpin;
 36555                           ;interrupts.c: 69: unsigned int Time0;
 36556                           ;interrupts.c: 71: INTCONbits.GIE = 0;
 36557  003DCE  9EF2               	bcf	intcon,7,c	;volatile
 36558                           
 36559                           ;interrupts.c: 73: if(INTCONbits.RBIF)
 36560  003DD0  A0F2               	btfss	intcon,0,c	;volatile
 36561  003DD2  D08F               	goto	i2l1217
 36562                           
 36563                           ;interrupts.c: 74: {
 36564                           ;interrupts.c: 75: __nop();
 36565  003DD4  F000               	nop	
 36566                           
 36567                           ;interrupts.c: 76: __nop();
 36568  003DD6  F000               	nop	
 36569                           
 36570                           ;interrupts.c: 77: IRtimeout = 0;
 36571  003DD8  0E00               	movlw	0
 36572  003DDA  0102               	movlb	2	; () banked
 36573  003DDC  6FCB               	movwf	_IRtimeout& (0+255),b
 36574  003DDE  0E00               	movlw	0
 36575  003DE0  6FCC               	movwf	(_IRtimeout+1)& (0+255),b
 36576  003DE2  0E00               	movlw	0
 36577  003DE4  6FCD               	movwf	(_IRtimeout+2)& (0+255),b
 36578  003DE6  0E00               	movlw	0
 36579  003DE8  6FCE               	movwf	(_IRtimeout+3)& (0+255),b
 36580                           
 36581                           ; BSR set to: 2
 36582                           ;interrupts.c: 78: IRpin = ReadIRpin();
 36583  003DEA  ECB2  F04A         	call	i2_ReadIRpin	;wreg free
 36584  003DEE  0100               	movlb	0	; () banked
 36585  003DF0  6F79               	movwf	high_isr@IRpin& (0+255),b
 36586                           
 36587                           ; BSR set to: 0
 36588                           ;interrupts.c: 79: if(IRpin != IRpinOLD)
 36589  003DF2  502F               	movf	_IRpinOLD,w,c
 36590  003DF4  0100               	movlb	0	; () banked
 36591  003DF6  1979               	xorwf	high_isr@IRpin& (0+255),w,b
 36592  003DF8  B4D8               	btfsc	status,2,c
 36593  003DFA  D075               	goto	i2l1218
 36594                           
 36595                           ; BSR set to: 0
 36596                           ;interrupts.c: 80: {
 36597                           ;interrupts.c: 81: (T0CONbits.TMR0ON = 1);
 36598  003DFC  8ED5               	bsf	4053,7,c	;volatile
 36599                           
 36600                           ;interrupts.c: 82: (INTCONbits.TMR0IE = 1);
 36601  003DFE  8AF2               	bsf	intcon,5,c	;volatile
 36602                           
 36603                           ; BSR set to: 0
 36604                           ;interrupts.c: 83: ReceivingIR = 19;
 36605  003E00  0E13               	movlw	19
 36606  003E02  6E44               	movwf	_ReceivingIR,c	;volatile
 36607                           
 36608                           ;interrupts.c: 84: IR_New_Code = 0;
 36609  003E04  0E00               	movlw	0
 36610  003E06  0100               	movlb	0	; () banked
 36611  003E08  6FE1               	movwf	_IR_New_Code& (0+255),b
 36612                           
 36613                           ; BSR set to: 0
 36614                           ;interrupts.c: 85: Time0 = TMR0L;
 36615  003E0A  CFD6 F07A          	movff	4054,high_isr@Time0	;volatile
 36616  003E0E  0100               	movlb	0	; () banked
 36617  003E10  6B7B               	clrf	(high_isr@Time0+1)& (0+255),b
 36618                           
 36619                           ;interrupts.c: 86: Time0 += (TMR0H << 8);
 36620  003E12  50D7               	movf	4055,w,c	;volatile
 36621  003E14  0100               	movlb	0	; () banked
 36622  003E16  277B               	addwf	(high_isr@Time0+1)& (0+255),f,b
 36623                           
 36624                           ; BSR set to: 0
 36625                           ;interrupts.c: 87: if(IRrawCodeNum < 100)
 36626  003E18  0E64               	movlw	100
 36627  003E1A  6030               	cpfslt	_IRrawCodeNum,c
 36628  003E1C  D05F               	goto	i2l1219
 36629                           
 36630                           ; BSR set to: 0
 36631                           ;interrupts.c: 88: {
 36632                           ;interrupts.c: 89: if((IRrawCodeNum > 0) && (IRrawCodeNum <= 100))
 36633  003E1E  5030               	movf	_IRrawCodeNum,w,c
 36634  003E20  B4D8               	btfsc	status,2,c
 36635  003E22  D054               	goto	i2l16432
 36636                           
 36637                           ; BSR set to: 0
 36638  003E24  0E65               	movlw	101
 36639  003E26  6030               	cpfslt	_IRrawCodeNum,c
 36640  003E28  D051               	goto	i2l16432
 36641                           
 36642                           ; BSR set to: 0
 36643                           ;interrupts.c: 90: {
 36644                           ;interrupts.c: 91: IRRawCode[IRrawCodeNum - 1] = Time0;
 36645  003E2A  0EFE               	movlw	254
 36646  003E2C  0100               	movlb	0	; () banked
 36647  003E2E  6F67               	movwf	??_high_isr& (0+255),b
 36648  003E30  0EFF               	movlw	255
 36649  003E32  0100               	movlb	0	; () banked
 36650  003E34  6F68               	movwf	(??_high_isr+1)& (0+255),b
 36651  003E36  5030               	movf	_IRrawCodeNum,w,c
 36652  003E38  0100               	movlb	0	; () banked
 36653  003E3A  6F69               	movwf	(??_high_isr+2)& (0+255),b
 36654  003E3C  6B6A               	clrf	(??_high_isr+3)& (0+255),b
 36655  003E3E  90D8               	bcf	status,0,c
 36656  003E40  0100               	movlb	0	; () banked
 36657  003E42  3769               	rlcf	(??_high_isr+2)& (0+255),f,b
 36658  003E44  376A               	rlcf	(??_high_isr+3)& (0+255),f,b
 36659  003E46  0100               	movlb	0	; () banked
 36660  003E48  5167               	movf	??_high_isr& (0+255),w,b
 36661  003E4A  0100               	movlb	0	; () banked
 36662  003E4C  2769               	addwf	(??_high_isr+2)& (0+255),f,b
 36663  003E4E  0100               	movlb	0	; () banked
 36664  003E50  5168               	movf	(??_high_isr+1)& (0+255),w,b
 36665  003E52  0100               	movlb	0	; () banked
 36666  003E54  236A               	addwfc	(??_high_isr+3)& (0+255),f,b
 36667  003E56  0E00               	movlw	low _IRRawCode
 36668  003E58  0100               	movlb	0	; () banked
 36669  003E5A  2569               	addwf	(??_high_isr+2)& (0+255),w,b
 36670  003E5C  6ED9               	movwf	fsr2l,c
 36671  003E5E  0E07               	movlw	high _IRRawCode
 36672  003E60  0100               	movlb	0	; () banked
 36673  003E62  216A               	addwfc	(??_high_isr+3)& (0+255),w,b
 36674  003E64  6EDA               	movwf	fsr2h,c
 36675  003E66  C07A  FFDE         	movff	high_isr@Time0,postinc2
 36676  003E6A  C07B  FFDD         	movff	high_isr@Time0+1,postdec2
 36677                           
 36678                           ; BSR set to: 0
 36679                           ;interrupts.c: 92: if((Time0 <= 21000 && Time0 >= 19000))
 36680  003E6E  0E09               	movlw	9
 36681  003E70  0100               	movlb	0	; () banked
 36682  003E72  5D7A               	subwf	high_isr@Time0& (0+255),w,b
 36683  003E74  0E52               	movlw	82
 36684  003E76  0100               	movlb	0	; () banked
 36685  003E78  597B               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 36686  003E7A  B0D8               	btfsc	status,0,c
 36687  003E7C  D00C               	goto	i2l16422
 36688                           
 36689                           ; BSR set to: 0
 36690  003E7E  0E38               	movlw	56
 36691  003E80  0100               	movlb	0	; () banked
 36692  003E82  5D7A               	subwf	high_isr@Time0& (0+255),w,b
 36693  003E84  0E4A               	movlw	74
 36694  003E86  0100               	movlb	0	; () banked
 36695  003E88  597B               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 36696  003E8A  A0D8               	btfss	status,0,c
 36697  003E8C  D004               	goto	i2l16422
 36698                           
 36699                           ; BSR set to: 0
 36700                           ;interrupts.c: 93: {
 36701                           ;interrupts.c: 95: (IOCBbits.IOCB4 = 0);
 36702  003E8E  987D               	bcf	3965,4,c	;volatile
 36703                           
 36704                           ;interrupts.c: 96: INTCONbits.RBIE = 0;
 36705  003E90  96F2               	bcf	intcon,3,c	;volatile
 36706                           
 36707                           ;interrupts.c: 98: INTCONbits.TMR0IF = 1;
 36708  003E92  84F2               	bsf	intcon,2,c	;volatile
 36709                           
 36710                           ;interrupts.c: 99: }
 36711  003E94  D01E               	goto	i2l16434
 36712  003E96                     i2l16422:
 36713                           
 36714                           ; BSR set to: 0
 36715                           ;interrupts.c: 100: else if(Time0 <= 50000 && Time0 >= 45000)
 36716  003E96  0E51               	movlw	81
 36717  003E98  0100               	movlb	0	; () banked
 36718  003E9A  5D7A               	subwf	high_isr@Time0& (0+255),w,b
 36719  003E9C  0EC3               	movlw	195
 36720  003E9E  0100               	movlb	0	; () banked
 36721  003EA0  597B               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 36722  003EA2  B0D8               	btfsc	status,0,c
 36723  003EA4  D010               	goto	i2l16430
 36724                           
 36725                           ; BSR set to: 0
 36726  003EA6  0EC8               	movlw	200
 36727  003EA8  0100               	movlb	0	; () banked
 36728  003EAA  5D7A               	subwf	high_isr@Time0& (0+255),w,b
 36729  003EAC  0EAF               	movlw	175
 36730  003EAE  0100               	movlb	0	; () banked
 36731  003EB0  597B               	subwfb	(high_isr@Time0+1)& (0+255),w,b
 36732  003EB2  A0D8               	btfss	status,0,c
 36733  003EB4  D008               	goto	i2l16430
 36734                           
 36735                           ; BSR set to: 0
 36736                           ;interrupts.c: 101: {
 36737                           ;interrupts.c: 103: (IOCBbits.IOCB4 = 0);
 36738  003EB6  987D               	bcf	3965,4,c	;volatile
 36739                           
 36740                           ;interrupts.c: 104: INTCONbits.RBIE = 0;
 36741  003EB8  96F2               	bcf	intcon,3,c	;volatile
 36742                           
 36743                           ; BSR set to: 0
 36744                           ;interrupts.c: 106: SetTimer0(0x8FFF);
 36745  003EBA  0E8F               	movlw	143
 36746  003EBC  6E1C               	movwf	SetTimer0@temp+1,c
 36747  003EBE  681B               	setf	SetTimer0@temp,c
 36748  003EC0  ECCD  F04A         	call	_SetTimer0	;wreg free
 36749                           
 36750                           ;interrupts.c: 107: }
 36751  003EC4  D006               	goto	i2l16434
 36752  003EC6                     i2l16430:
 36753                           
 36754                           ;interrupts.c: 108: else
 36755                           ;interrupts.c: 109: {
 36756                           ;interrupts.c: 110: ResetTimer0();
 36757  003EC6  ECC8  F04A         	call	i2_ResetTimer0	;wreg free
 36758                           
 36759                           ;interrupts.c: 111: }
 36760                           ;interrupts.c: 112: }
 36761  003ECA  D003               	goto	i2l16434
 36762  003ECC                     i2l16432:
 36763                           
 36764                           ;interrupts.c: 113: else
 36765                           ;interrupts.c: 114: {
 36766                           ;interrupts.c: 115: ResetTimer0();
 36767  003ECC  ECC8  F04A         	call	i2_ResetTimer0	;wreg free
 36768  003ED0  D000               	goto	i2l16434
 36769  003ED2                     i2l16434:
 36770                           
 36771                           ;interrupts.c: 116: }
 36772                           ;interrupts.c: 117: if(IRrawCodeNum <= 100)
 36773  003ED2  0E65               	movlw	101
 36774  003ED4  6030               	cpfslt	_IRrawCodeNum,c
 36775  003ED6  D004               	goto	i2l1227
 36776                           
 36777                           ;interrupts.c: 118: {
 36778                           ;interrupts.c: 119: IRrawCodeNum++;
 36779  003ED8  2A30               	incf	_IRrawCodeNum,f,c
 36780                           
 36781                           ;interrupts.c: 120: }
 36782                           ;interrupts.c: 121: }
 36783  003EDA  D002               	goto	i2l1227
 36784  003EDC                     i2l1219:
 36785                           
 36786                           ; BSR set to: 0
 36787                           ;interrupts.c: 122: else
 36788                           ;interrupts.c: 123: {
 36789                           ;interrupts.c: 124: (IOCBbits.IOCB4 = 0);
 36790  003EDC  987D               	bcf	3965,4,c	;volatile
 36791                           
 36792                           ;interrupts.c: 125: INTCONbits.RBIE = 0;
 36793  003EDE  96F2               	bcf	intcon,3,c	;volatile
 36794  003EE0                     i2l1227:
 36795                           
 36796                           ;interrupts.c: 126: }
 36797                           ;interrupts.c: 127: IRpinOLD = IRpin;
 36798  003EE0  C079  F02F         	movff	high_isr@IRpin,_IRpinOLD
 36799                           
 36800                           ;interrupts.c: 128: }
 36801  003EE4  D002               	goto	i2l16438
 36802  003EE6                     i2l1218:
 36803                           
 36804                           ; BSR set to: 0
 36805                           ;interrupts.c: 129: else
 36806                           ;interrupts.c: 130: {
 36807                           ;interrupts.c: 132: __nop();
 36808  003EE6  F000               	nop	
 36809  003EE8  D000               	goto	i2l16438
 36810  003EEA                     i2l16438:
 36811                           
 36812                           ;interrupts.c: 133: }
 36813                           ;interrupts.c: 135: ReadIRpin();
 36814  003EEA  ECB2  F04A         	call	i2_ReadIRpin	;wreg free
 36815                           
 36816                           ;interrupts.c: 136: INTCONbits.RBIF = 0;
 36817  003EEE  90F2               	bcf	intcon,0,c	;volatile
 36818                           
 36819                           ;interrupts.c: 137: }
 36820  003EF0  D218               	goto	i2l1229
 36821  003EF2                     i2l1217:
 36822                           
 36823                           ;interrupts.c: 138: else if(INTCONbits.TMR0IF)
 36824  003EF2  A4F2               	btfss	intcon,2,c	;volatile
 36825  003EF4  D030               	goto	i2l1230
 36826                           
 36827                           ;interrupts.c: 139: {
 36828                           ;interrupts.c: 141: (INTCONbits.TMR0IE = 0);
 36829  003EF6  9AF2               	bcf	intcon,5,c	;volatile
 36830                           
 36831                           ;interrupts.c: 142: (T0CONbits.TMR0ON = 0);
 36832  003EF8  9ED5               	bcf	4053,7,c	;volatile
 36833                           
 36834                           ;interrupts.c: 143: if(IRrawCodeNum >= (4))
 36835  003EFA  0E03               	movlw	3
 36836  003EFC  6430               	cpfsgt	_IRrawCodeNum,c
 36837  003EFE  D00E               	goto	i2l1231
 36838                           
 36839                           ;interrupts.c: 144: {
 36840                           ;interrupts.c: 145: IR_New_Code = IRrawToNEC(IRRawCode, &IR_NEC, 1);
 36841  003F00  0E00               	movlw	low _IRRawCode
 36842  003F02  6E1B               	movwf	IRrawToNEC@Raw,c
 36843  003F04  0E07               	movlw	high _IRRawCode
 36844  003F06  6E1C               	movwf	IRrawToNEC@Raw+1,c
 36845  003F08  0EDD               	movlw	low _IR_NEC
 36846  003F0A  6E1D               	movwf	IRrawToNEC@NEC,c
 36847  003F0C  0E00               	movlw	high _IR_NEC
 36848  003F0E  6E1E               	movwf	IRrawToNEC@NEC+1,c
 36849  003F10  0E01               	movlw	1
 36850  003F12  6E1F               	movwf	IRrawToNEC@Invert,c
 36851  003F14  EC8F  F02A         	call	_IRrawToNEC	;wreg free
 36852  003F18  0100               	movlb	0	; () banked
 36853  003F1A  6FE1               	movwf	_IR_New_Code& (0+255),b
 36854  003F1C                     i2l1231:
 36855                           
 36856                           ;interrupts.c: 146: }
 36857                           ;interrupts.c: 147: cleanBuffer16bit(IRRawCode,100);
 36858  003F1C  0E00               	movlw	low _IRRawCode
 36859  003F1E  6E1B               	movwf	i2cleanBuffer16bit@data,c
 36860  003F20  0E07               	movlw	high _IRRawCode
 36861  003F22  6E1C               	movwf	i2cleanBuffer16bit@data+1,c
 36862  003F24  0E00               	movlw	0
 36863  003F26  6E1E               	movwf	i2cleanBuffer16bit@count+1,c
 36864  003F28  0E64               	movlw	100
 36865  003F2A  6E1D               	movwf	i2cleanBuffer16bit@count,c
 36866  003F2C  EC84  F048         	call	i2_cleanBuffer16bit	;wreg free
 36867                           
 36868                           ;interrupts.c: 148: IRrawCodeNum = 0;
 36869  003F30  0E00               	movlw	0
 36870  003F32  6E30               	movwf	_IRrawCodeNum,c
 36871                           
 36872                           ;interrupts.c: 149: if(!IR_New_Code)
 36873  003F34  0100               	movlb	0	; () banked
 36874  003F36  51E1               	movf	_IR_New_Code& (0+255),w,b
 36875  003F38  A4D8               	btfss	status,2,c
 36876  003F3A  D009               	goto	i2l16462
 36877                           
 36878                           ; BSR set to: 0
 36879                           ;interrupts.c: 150: {
 36880                           ;interrupts.c: 151: ReadIRpin();
 36881  003F3C  ECB2  F04A         	call	i2_ReadIRpin	;wreg free
 36882                           
 36883                           ;interrupts.c: 152: IRpinOLD = ReadIRpin();
 36884  003F40  ECB2  F04A         	call	i2_ReadIRpin	;wreg free
 36885  003F44  6E2F               	movwf	_IRpinOLD,c
 36886                           
 36887                           ;interrupts.c: 153: INTCONbits.RBIF = 0;
 36888  003F46  90F2               	bcf	intcon,0,c	;volatile
 36889                           
 36890                           ;interrupts.c: 154: (IOCBbits.IOCB4 = 1);
 36891  003F48  887D               	bsf	3965,4,c	;volatile
 36892                           
 36893                           ;interrupts.c: 155: INTCONbits.RBIE = 1;
 36894  003F4A  86F2               	bsf	intcon,3,c	;volatile
 36895  003F4C  D000               	goto	i2l16462
 36896  003F4E                     i2l16462:
 36897                           
 36898                           ;interrupts.c: 156: }
 36899                           ;interrupts.c: 157: ReceivingIR = 13;
 36900  003F4E  0E0D               	movlw	13
 36901  003F50  6E44               	movwf	_ReceivingIR,c	;volatile
 36902                           
 36903                           ;interrupts.c: 158: INTCONbits.TMR0IF = 0;
 36904  003F52  94F2               	bcf	intcon,2,c	;volatile
 36905                           
 36906                           ;interrupts.c: 159: }
 36907  003F54  D1E6               	goto	i2l1229
 36908  003F56                     i2l1230:
 36909                           
 36910                           ;interrupts.c: 160: else if(PIR1bits.TMR2IF)
 36911  003F56  A29E               	btfss	3998,1,c	;volatile
 36912  003F58  D1D1               	goto	i2l1234
 36913                           
 36914                           ;interrupts.c: 161: {
 36915                           ;interrupts.c: 164: Timer2_Postscaler++;
 36916  003F5A  2A3A               	incf	_Timer2_Postscaler,f,c
 36917                           
 36918                           ;interrupts.c: 165: if(RF_IR == 55)
 36919  003F5C  0E37               	movlw	55
 36920  003F5E  1842               	xorwf	_RF_IR,w,c
 36921  003F60  A4D8               	btfss	status,2,c
 36922  003F62  D10C               	goto	i2l16700
 36923                           
 36924                           ;interrupts.c: 166: {
 36925                           ;interrupts.c: 168: if(Timer2_Postscaler >= RF_IR_Postscaler)
 36926  003F64  5043               	movf	_RF_IR_Postscaler,w,c	;volatile
 36927  003F66  5C3A               	subwf	_Timer2_Postscaler,w,c
 36928  003F68  A0D8               	btfss	status,0,c
 36929  003F6A  D103               	goto	i2l16696
 36930                           
 36931                           ;interrupts.c: 169: {
 36932                           ;interrupts.c: 170: Timer2_Postscaler = 0;
 36933  003F6C  0E00               	movlw	0
 36934  003F6E  6E3A               	movwf	_Timer2_Postscaler,c
 36935                           
 36936                           ;interrupts.c: 171: if(RFsendCode[RFcodeBit] != 99)
 36937  003F70  5035               	movf	_RFcodeBit,w,c
 36938  003F72  0D01               	mullw	1
 36939  003F74  0ECF               	movlw	low _RFsendCode
 36940  003F76  24F3               	addwf	prodl,w,c
 36941  003F78  6ED9               	movwf	fsr2l,c
 36942  003F7A  0E02               	movlw	high _RFsendCode
 36943  003F7C  20F4               	addwfc	prodh,w,c
 36944  003F7E  6EDA               	movwf	fsr2h,c
 36945  003F80  0E63               	movlw	99
 36946  003F82  18DE               	xorwf	postinc2,w,c
 36947  003F84  B4D8               	btfsc	status,2,c
 36948  003F86  D0B3               	goto	i2l16646
 36949                           
 36950                           ;interrupts.c: 172: {
 36951                           ;interrupts.c: 174: if(RFsendFlag)
 36952  003F88  5037               	movf	_RFsendFlag,w,c	;volatile
 36953  003F8A  B4D8               	btfsc	status,2,c
 36954  003F8C  D0F2               	goto	i2l16696
 36955                           
 36956                           ;interrupts.c: 175: {
 36957                           ;interrupts.c: 176: if(RFsendCode[RFcodeBit] == 0)
 36958  003F8E  5035               	movf	_RFcodeBit,w,c
 36959  003F90  0D01               	mullw	1
 36960  003F92  0ECF               	movlw	low _RFsendCode
 36961  003F94  24F3               	addwf	prodl,w,c
 36962  003F96  6ED9               	movwf	fsr2l,c
 36963  003F98  0E02               	movlw	high _RFsendCode
 36964  003F9A  20F4               	addwfc	prodh,w,c
 36965  003F9C  6EDA               	movwf	fsr2h,c
 36966  003F9E  50DF               	movf	indf2,w,c
 36967  003FA0  A4D8               	btfss	status,2,c
 36968  003FA2  D03F               	goto	i2l16538
 36969                           
 36970                           ;interrupts.c: 177: {
 36971                           ;interrupts.c: 179: if(RFConfig == 1)
 36972  003FA4  0434               	decf	_RFConfig,w,c
 36973  003FA6  A4D8               	btfss	status,2,c
 36974  003FA8  D025               	goto	i2l16516
 36975                           
 36976                           ;interrupts.c: 180: {
 36977                           ;interrupts.c: 181: if(RFcodePlace == 1)
 36978  003FAA  0436               	decf	_RFcodePlace,w,c
 36979  003FAC  A4D8               	btfss	status,2,c
 36980  003FAE  D007               	goto	i2l16490
 36981  003FB0  D077               	goto	i2l16604
 36982  003FB2                     i2l16486:
 36983                           
 36984                           ;interrupts.c: 184: (PR2 = 8);
 36985  003FB2  0E08               	movlw	8
 36986  003FB4                     L26:
 36987  003FB4  6ECB               	movwf	4043,c	;volatile
 36988  003FB6  D076               	goto	i2l16608
 36989  003FB8                     L28:
 36990                           
 36991                           ;interrupts.c: 186: (TMR2 = 0);
 36992  003FB8  0E00               	movlw	0
 36993  003FBA  6ECC               	movwf	4044,c	;volatile
 36994                           
 36995                           ;interrupts.c: 187: }
 36996  003FBC  D0DA               	goto	i2l16696
 36997  003FBE                     i2l16490:
 36998                           
 36999                           ;interrupts.c: 188: else if(RFcodePlace == 2)
 37000  003FBE  0E02               	movlw	2
 37001  003FC0  1836               	xorwf	_RFcodePlace,w,c
 37002  003FC2  A4D8               	btfss	status,2,c
 37003  003FC4  D004               	goto	i2l16498
 37004  003FC6  D074               	goto	L42
 37005                           
 37006                           ;interrupts.c: 189: {
 37007                           ;interrupts.c: 190: (LATC &= ~0x20);
 37008  003FC8  D03E               	goto	i2l16546
 37009  003FCA                     i2l16496:
 37010                           
 37011                           ;interrupts.c: 192: RFcodePlace++;
 37012  003FCA  2A36               	incf	_RFcodePlace,f,c
 37013                           
 37014                           ;interrupts.c: 193: }
 37015  003FCC  D0D2               	goto	i2l16696
 37016  003FCE                     i2l16498:
 37017                           
 37018                           ;interrupts.c: 194: else if(RFcodePlace == 3)
 37019  003FCE  0E03               	movlw	3
 37020  003FD0  1836               	xorwf	_RFcodePlace,w,c
 37021  003FD2  A4D8               	btfss	status,2,c
 37022  003FD4  D002               	goto	i2l16506
 37023  003FD6  D064               	goto	i2l16604
 37024                           
 37025                           ;interrupts.c: 195: {
 37026                           ;interrupts.c: 196: (LATC |= 0x20);
 37027  003FD8  D7EC               	goto	i2l16486
 37028  003FDA                     i2l16506:
 37029                           
 37030                           ;interrupts.c: 201: else if(RFcodePlace == 4)
 37031  003FDA  0E04               	movlw	4
 37032  003FDC  1836               	xorwf	_RFcodePlace,w,c
 37033  003FDE  A4D8               	btfss	status,2,c
 37034  003FE0  D004               	goto	i2l1247
 37035                           
 37036                           ;interrupts.c: 202: {
 37037                           ;interrupts.c: 203: (LATC &= ~0x20);
 37038  003FE2  9A8B               	bcf	3979,5,c	;volatile
 37039                           
 37040                           ;interrupts.c: 204: (PR2 = 24);
 37041  003FE4  0E18               	movlw	24
 37042  003FE6  D051               	goto	L27
 37043  003FE8  D016               	goto	i2l16532
 37044  003FEA                     i2l1247:
 37045                           
 37046                           ;interrupts.c: 208: else
 37047                           ;interrupts.c: 209: {
 37048                           ;interrupts.c: 211: (T2CONbits.TMR2ON = 0);
 37049  003FEA  94CA               	bcf	4042,2,c	;volatile
 37050  003FEC  D07B               	goto	i2l16644
 37051  003FEE                     L31:
 37052                           
 37053                           ;interrupts.c: 213: RFsendFlag = 0;
 37054  003FEE  0E00               	movlw	0
 37055  003FF0  6E37               	movwf	_RFsendFlag,c	;volatile
 37056                           
 37057                           ; BSR set to: 0
 37058                           ;interrupts.c: 214: }
 37059                           ;interrupts.c: 215: }
 37060                           
 37061                           ; BSR set to: 0
 37062                           
 37063                           ; BSR set to: 0
 37064                           
 37065                           ; BSR set to: 0
 37066  003FF2  D0BF               	goto	i2l16696
 37067  003FF4                     i2l16516:
 37068                           
 37069                           ;interrupts.c: 216: else if(RFConfig == 2)
 37070  003FF4  0E02               	movlw	2
 37071  003FF6  1834               	xorwf	_RFConfig,w,c
 37072  003FF8  A4D8               	btfss	status,2,c
 37073  003FFA  D7F7               	goto	i2l1247
 37074                           
 37075                           ;interrupts.c: 217: {
 37076                           ;interrupts.c: 219: if(RFcodePlace == 1)
 37077  003FFC  0436               	decf	_RFcodePlace,w,c
 37078  003FFE  A4D8               	btfss	status,2,c
 37079  004000  D003               	goto	i2l16526
 37080                           
 37081                           ;interrupts.c: 220: {
 37082                           ;interrupts.c: 221: (LATC |= 0x20);
 37083  004002  8A8B               	bsf	3979,5,c	;volatile
 37084                           
 37085                           ;interrupts.c: 222: (PR2 = 11);
 37086  004004  0E0B               	movlw	11
 37087  004006  D7D6               	goto	L26
 37088  004008                     i2l16526:
 37089                           
 37090                           ;interrupts.c: 226: else if(RFcodePlace == 2)
 37091  004008  0E02               	movlw	2
 37092  00400A  1836               	xorwf	_RFcodePlace,w,c
 37093  00400C  A4D8               	btfss	status,2,c
 37094  00400E  D7ED               	goto	i2l1247
 37095                           
 37096                           ;interrupts.c: 227: {
 37097                           ;interrupts.c: 228: (LATC &= ~0x20);
 37098  004010  9A8B               	bcf	3979,5,c	;volatile
 37099                           
 37100                           ;interrupts.c: 229: (PR2 = 29);
 37101  004012  0E1D               	movlw	29
 37102  004014  D03A               	goto	L27
 37103  004016                     i2l16532:
 37104                           
 37105                           ;interrupts.c: 230: RFcodePlace = 1;
 37106  004016  0E01               	movlw	1
 37107  004018  6E36               	movwf	_RFcodePlace,c
 37108                           
 37109                           ;interrupts.c: 231: RFcodeBit++;
 37110  00401A  2A35               	incf	_RFcodeBit,f,c
 37111                           
 37112                           ; BSR set to: 0
 37113                           ;interrupts.c: 239: }
 37114                           ;interrupts.c: 240: }
 37115                           
 37116                           ; BSR set to: 0
 37117                           
 37118                           ;interrupts.c: 238: RFsendFlag = 0;
 37119                           
 37120                           ;interrupts.c: 237: Sent = 1;
 37121                           
 37122                           ;interrupts.c: 233: else
 37123                           ;interrupts.c: 234: {
 37124                           ;interrupts.c: 236: (T2CONbits.TMR2ON = 0);
 37125                           
 37126                           ;interrupts.c: 232: }
 37127  00401C  D0AA               	goto	i2l16696
 37128                           
 37129                           ;interrupts.c: 241: else
 37130                           ;interrupts.c: 242: {
 37131                           ;interrupts.c: 244: (T2CONbits.TMR2ON = 0);
 37132  00401E  D062               	goto	i2l16644
 37133                           
 37134                           ; BSR set to: 0
 37135                           ;interrupts.c: 247: }
 37136                           ;interrupts.c: 248: }
 37137                           
 37138                           ; BSR set to: 0
 37139                           
 37140                           ;interrupts.c: 246: RFsendFlag = 0;
 37141                           
 37142                           ;interrupts.c: 245: Sent = 1;
 37143  004020  D0A8               	goto	i2l16696
 37144  004022                     i2l16538:
 37145                           
 37146                           ;interrupts.c: 249: else if(RFsendCode[RFcodeBit] == 1)
 37147  004022  5035               	movf	_RFcodeBit,w,c
 37148  004024  0D01               	mullw	1
 37149  004026  0ECF               	movlw	low _RFsendCode
 37150  004028  24F3               	addwf	prodl,w,c
 37151  00402A  6ED9               	movwf	fsr2l,c
 37152  00402C  0E02               	movlw	high _RFsendCode
 37153  00402E  20F4               	addwfc	prodh,w,c
 37154  004030  6EDA               	movwf	fsr2h,c
 37155  004032  04DE               	decf	postinc2,w,c
 37156  004034  A4D8               	btfss	status,2,c
 37157  004036  D02E               	goto	i2l16600
 37158                           
 37159                           ;interrupts.c: 250: {
 37160                           ;interrupts.c: 251: if(RFConfig == 1)
 37161  004038  0434               	decf	_RFConfig,w,c
 37162  00403A  A4D8               	btfss	status,2,c
 37163  00403C  D016               	goto	i2l16578
 37164                           
 37165                           ;interrupts.c: 252: {
 37166                           ;interrupts.c: 253: if(RFcodePlace == 1)
 37167  00403E  0436               	decf	_RFcodePlace,w,c
 37168  004040  A4D8               	btfss	status,2,c
 37169  004042  D004               	goto	i2l16550
 37170  004044  D03C               	goto	L43
 37171  004046                     i2l16546:
 37172                           
 37173                           ;interrupts.c: 256: (PR2 = 24);
 37174  004046  0E18               	movlw	24
 37175  004048  6ECB               	movwf	4043,c	;volatile
 37176  00404A  D7BF               	goto	i2l16496
 37177  00404C                     i2l16550:
 37178                           
 37179                           ;interrupts.c: 259: else if(RFcodePlace == 2)
 37180  00404C  0E02               	movlw	2
 37181  00404E  1836               	xorwf	_RFcodePlace,w,c
 37182  004050  A4D8               	btfss	status,2,c
 37183  004052  D031               	goto	i2l16618
 37184                           
 37185                           ;interrupts.c: 260: {
 37186                           ;interrupts.c: 261: (LATC &= ~0x20);
 37187  004054  9A8B               	bcf	3979,5,c	;volatile
 37188  004056  D7AD               	goto	i2l16486
 37189                           
 37190                           ;interrupts.c: 265: }
 37191                           
 37192                           ;interrupts.c: 264: (TMR2 = 0);
 37193                           
 37194                           ;interrupts.c: 263: RFcodePlace++;
 37195                           
 37196                           ;interrupts.c: 262: (PR2 = 8);
 37197  004058  D02E               	goto	i2l16618
 37198                           
 37199                           ;interrupts.c: 267: {
 37200                           ;interrupts.c: 268: (LATC |= 0x20);
 37201                           
 37202                           ;interrupts.c: 266: else if(RFcodePlace == 3)
 37203  00405A  D7F5               	goto	i2l16546
 37204                           
 37205                           ;interrupts.c: 269: (PR2 = 24);
 37206  00405C  D7B6               	goto	i2l16496
 37207                           
 37208                           ;interrupts.c: 271: }
 37209                           
 37210                           ;interrupts.c: 270: RFcodePlace++;
 37211  00405E  D032               	goto	i2l16626
 37212  004060                     i2l16570:
 37213                           
 37214                           ;interrupts.c: 275: (PR2 = 8);
 37215  004060  0E08               	movlw	8
 37216  004062  6ECB               	movwf	4043,c	;volatile
 37217  004064  D035               	goto	i2l16632
 37218                           
 37219                           ;interrupts.c: 277: RFcodeBit++;
 37220                           
 37221                           ;interrupts.c: 276: RFcodePlace = 1;
 37222  004066  D7A8               	goto	L28
 37223                           
 37224                           ; BSR set to: 0
 37225                           ;interrupts.c: 286: }
 37226                           ;interrupts.c: 287: }
 37227                           
 37228                           ; BSR set to: 0
 37229                           
 37230                           ; BSR set to: 0
 37231                           
 37232                           ; BSR set to: 0
 37233                           
 37234                           ;interrupts.c: 285: RFsendFlag = 0;
 37235                           
 37236                           ;interrupts.c: 284: Sent = 1;
 37237                           
 37238                           ;interrupts.c: 280: else
 37239                           ;interrupts.c: 281: {
 37240                           ;interrupts.c: 283: (T2CONbits.TMR2ON = 0);
 37241                           
 37242                           ;interrupts.c: 279: }
 37243                           
 37244                           ;interrupts.c: 278: (TMR2 = 0);
 37245  004068  D084               	goto	i2l16696
 37246  00406A                     i2l16578:
 37247                           
 37248                           ;interrupts.c: 288: else if(RFConfig == 2)
 37249  00406A  0E02               	movlw	2
 37250  00406C  1834               	xorwf	_RFConfig,w,c
 37251  00406E  A4D8               	btfss	status,2,c
 37252  004070  D7BC               	goto	i2l1247
 37253                           
 37254                           ;interrupts.c: 289: {
 37255                           ;interrupts.c: 291: if(RFcodePlace == 1)
 37256  004072  0436               	decf	_RFcodePlace,w,c
 37257  004074  A4D8               	btfss	status,2,c
 37258  004076  D003               	goto	i2l16588
 37259                           
 37260                           ;interrupts.c: 292: {
 37261                           ;interrupts.c: 293: (LATC |= 0x20);
 37262  004078  8A8B               	bsf	3979,5,c	;volatile
 37263                           
 37264                           ;interrupts.c: 294: (PR2 = 29);
 37265  00407A  0E1D               	movlw	29
 37266  00407C  D79B               	goto	L26
 37267  00407E                     i2l16588:
 37268                           
 37269                           ;interrupts.c: 298: else if(RFcodePlace == 2)
 37270  00407E  0E02               	movlw	2
 37271  004080  1836               	xorwf	_RFcodePlace,w,c
 37272  004082  A4D8               	btfss	status,2,c
 37273  004084  D004               	goto	i2l1271
 37274                           
 37275                           ;interrupts.c: 299: {
 37276                           ;interrupts.c: 300: (LATC &= ~0x20);
 37277  004086  9A8B               	bcf	3979,5,c	;volatile
 37278                           
 37279                           ;interrupts.c: 301: (PR2 = 11);
 37280  004088  0E0B               	movlw	11
 37281  00408A                     L27:
 37282  00408A  6ECB               	movwf	4043,c	;volatile
 37283  00408C  D7C4               	goto	i2l16532
 37284  00408E                     i2l1271:
 37285                           
 37286                           ;interrupts.c: 305: else
 37287                           ;interrupts.c: 306: {
 37288                           ;interrupts.c: 308: (T2CONbits.TMR2ON = 0);
 37289  00408E  94CA               	bcf	4042,2,c	;volatile
 37290  004090  D029               	goto	i2l16644
 37291                           
 37292                           ; BSR set to: 0
 37293                           ;interrupts.c: 319: }
 37294                           ;interrupts.c: 320: }
 37295                           
 37296                           ; BSR set to: 0
 37297                           
 37298                           ;interrupts.c: 318: RFsendFlag = 0;
 37299                           
 37300                           ;interrupts.c: 317: Sent = 1;
 37301                           
 37302                           ;interrupts.c: 313: else
 37303                           ;interrupts.c: 314: {
 37304                           ;interrupts.c: 316: (T2CONbits.TMR2ON = 0);
 37305                           
 37306                           ; BSR set to: 0
 37307                           ;interrupts.c: 311: }
 37308                           ;interrupts.c: 312: }
 37309                           
 37310                           ; BSR set to: 0
 37311                           
 37312                           ;interrupts.c: 310: RFsendFlag = 0;
 37313                           
 37314                           ;interrupts.c: 309: Sent = 1;
 37315  004092  D06F               	goto	i2l16696
 37316  004094                     i2l16600:
 37317                           
 37318                           ;interrupts.c: 321: else
 37319                           ;interrupts.c: 322: {
 37320                           ;interrupts.c: 323: if(RFConfig == 1)
 37321  004094  0434               	decf	_RFConfig,w,c
 37322  004096  A4D8               	btfss	status,2,c
 37323  004098  D020               	goto	i2l16638
 37324                           
 37325                           ;interrupts.c: 324: {
 37326                           ;interrupts.c: 326: if(RFcodePlace == 1)
 37327  00409A  0436               	decf	_RFcodePlace,w,c
 37328  00409C  A4D8               	btfss	status,2,c
 37329  00409E  D004               	goto	i2l16610
 37330  0040A0                     i2l16604:
 37331                           
 37332                           ;interrupts.c: 327: {
 37333                           ;interrupts.c: 328: (LATC |= 0x20);
 37334  0040A0  8A8B               	bsf	3979,5,c	;volatile
 37335  0040A2  D787               	goto	i2l16486
 37336  0040A4                     i2l16608:
 37337                           
 37338                           ;interrupts.c: 330: RFcodePlace++;
 37339  0040A4  2A36               	incf	_RFcodePlace,f,c
 37340  0040A6  D788               	goto	L28
 37341  0040A8                     i2l16610:
 37342                           
 37343                           ;interrupts.c: 333: else if(RFcodePlace == 2)
 37344  0040A8  0E02               	movlw	2
 37345  0040AA  1836               	xorwf	_RFcodePlace,w,c
 37346  0040AC  A4D8               	btfss	status,2,c
 37347  0040AE  D003               	goto	i2l16618
 37348  0040B0                     L42:
 37349                           
 37350                           ;interrupts.c: 334: {
 37351                           ;interrupts.c: 335: (LATC &= ~0x20);
 37352  0040B0  9A8B               	bcf	3979,5,c	;volatile
 37353  0040B2  D7C9               	goto	i2l16546
 37354                           
 37355                           ;interrupts.c: 336: (PR2 = 24);
 37356  0040B4  D78A               	goto	i2l16496
 37357  0040B6                     i2l16618:
 37358                           
 37359                           ;interrupts.c: 339: else if(RFcodePlace == 3)
 37360  0040B6  0E03               	movlw	3
 37361  0040B8  1836               	xorwf	_RFcodePlace,w,c
 37362  0040BA  A4D8               	btfss	status,2,c
 37363  0040BC  D003               	goto	i2l16626
 37364  0040BE                     L43:
 37365                           
 37366                           ;interrupts.c: 340: {
 37367                           ;interrupts.c: 341: (LATC |= 0x20);
 37368  0040BE  8A8B               	bsf	3979,5,c	;volatile
 37369  0040C0  D7C2               	goto	i2l16546
 37370                           
 37371                           ;interrupts.c: 342: (PR2 = 24);
 37372  0040C2  D783               	goto	i2l16496
 37373  0040C4                     i2l16626:
 37374                           
 37375                           ;interrupts.c: 345: else if(RFcodePlace == 4)
 37376  0040C4  0E04               	movlw	4
 37377  0040C6  1836               	xorwf	_RFcodePlace,w,c
 37378  0040C8  A4D8               	btfss	status,2,c
 37379  0040CA  D78F               	goto	i2l1247
 37380                           
 37381                           ;interrupts.c: 346: {
 37382                           ;interrupts.c: 347: (LATC &= ~0x20);
 37383  0040CC  9A8B               	bcf	3979,5,c	;volatile
 37384  0040CE  D7C8               	goto	i2l16570
 37385  0040D0                     i2l16632:
 37386                           
 37387                           ;interrupts.c: 349: RFcodePlace = 1;
 37388  0040D0  0E01               	movlw	1
 37389  0040D2  6E36               	movwf	_RFcodePlace,c
 37390                           
 37391                           ;interrupts.c: 350: RFcodeBit++;
 37392  0040D4  2A35               	incf	_RFcodeBit,f,c
 37393  0040D6  D770               	goto	L28
 37394                           
 37395                           ; BSR set to: 0
 37396                           ;interrupts.c: 359: }
 37397                           ;interrupts.c: 360: }
 37398                           
 37399                           ; BSR set to: 0
 37400                           
 37401                           ; BSR set to: 0
 37402                           
 37403                           ; BSR set to: 0
 37404                           
 37405                           ;interrupts.c: 358: RFsendFlag = 0;
 37406                           
 37407                           ;interrupts.c: 357: Sent = 1;
 37408                           
 37409                           ;interrupts.c: 353: else
 37410                           ;interrupts.c: 354: {
 37411                           ;interrupts.c: 356: (T2CONbits.TMR2ON = 0);
 37412                           
 37413                           ;interrupts.c: 352: }
 37414                           
 37415                           ;interrupts.c: 351: (TMR2 = 0);
 37416  0040D8  D04C               	goto	i2l16696
 37417  0040DA                     i2l16638:
 37418                           
 37419                           ;interrupts.c: 361: else if(RFConfig == 2)
 37420  0040DA  0E02               	movlw	2
 37421  0040DC  1834               	xorwf	_RFConfig,w,c
 37422  0040DE  A4D8               	btfss	status,2,c
 37423  0040E0  D784               	goto	i2l1247
 37424  0040E2  D783               	goto	i2l1247
 37425  0040E4                     i2l16644:
 37426                           
 37427                           ;interrupts.c: 372: Sent = 1;
 37428  0040E4  0E01               	movlw	1
 37429  0040E6  0100               	movlb	0	; () banked
 37430  0040E8  6FE3               	movwf	_Sent& (0+255),b	;volatile
 37431  0040EA  D781               	goto	L31
 37432                           
 37433                           ; BSR set to: 0
 37434                           ;interrupts.c: 374: }
 37435                           ;interrupts.c: 375: }
 37436                           ;interrupts.c: 376: }
 37437                           ;interrupts.c: 377: }
 37438                           
 37439                           ; BSR set to: 0
 37440                           
 37441                           ; BSR set to: 0
 37442                           
 37443                           ; BSR set to: 0
 37444                           
 37445                           ; BSR set to: 0
 37446                           
 37447                           ;interrupts.c: 373: RFsendFlag = 0;
 37448  0040EC  D042               	goto	i2l16696
 37449  0040EE                     i2l16646:
 37450                           
 37451                           ;interrupts.c: 378: else
 37452                           ;interrupts.c: 379: {
 37453                           ;interrupts.c: 381: if(RFcodePlace == 1)
 37454  0040EE  0436               	decf	_RFcodePlace,w,c
 37455  0040F0  A4D8               	btfss	status,2,c
 37456  0040F2  D016               	goto	i2l16664
 37457                           
 37458                           ;interrupts.c: 382: {
 37459                           ;interrupts.c: 383: if(RFConfig == 1)
 37460  0040F4  0434               	decf	_RFConfig,w,c
 37461  0040F6  A4D8               	btfss	status,2,c
 37462  0040F8  D003               	goto	i2l16654
 37463                           
 37464                           ;interrupts.c: 384: {
 37465                           ;interrupts.c: 385: (LATC |= 0x20);
 37466  0040FA  8A8B               	bsf	3979,5,c	;volatile
 37467                           
 37468                           ;interrupts.c: 386: (PR2 = 8);
 37469  0040FC  0E08               	movlw	8
 37470  0040FE  D006               	goto	L29
 37471  004100                     i2l16654:
 37472                           
 37473                           ;interrupts.c: 388: else if(RFConfig == 2)
 37474  004100  0E02               	movlw	2
 37475  004102  1834               	xorwf	_RFConfig,w,c
 37476  004104  A4D8               	btfss	status,2,c
 37477  004106  D004               	goto	i2l1291
 37478                           
 37479                           ;interrupts.c: 389: {
 37480                           ;interrupts.c: 390: (LATC &= ~0x20);
 37481  004108  9A8B               	bcf	3979,5,c	;volatile
 37482                           
 37483                           ;interrupts.c: 391: (PR2 = 11);
 37484  00410A  0E0B               	movlw	11
 37485  00410C                     L29:
 37486  00410C  6ECB               	movwf	4043,c	;volatile
 37487                           
 37488                           ;interrupts.c: 392: }
 37489  00410E  D005               	goto	i2l1290
 37490  004110                     i2l1291:
 37491                           
 37492                           ;interrupts.c: 393: else
 37493                           ;interrupts.c: 394: {
 37494                           ;interrupts.c: 396: (T2CONbits.TMR2ON = 0);
 37495  004110  94CA               	bcf	4042,2,c	;volatile
 37496                           
 37497                           ;interrupts.c: 397: Sent = 1;
 37498  004112  0E01               	movlw	1
 37499  004114  0100               	movlb	0	; () banked
 37500  004116  6FE3               	movwf	_Sent& (0+255),b	;volatile
 37501  004118  D000               	goto	i2l1290
 37502  00411A                     i2l1290:
 37503                           
 37504                           ;interrupts.c: 398: }
 37505                           ;interrupts.c: 399: (TMR2 = 0);
 37506  00411A  0E00               	movlw	0
 37507  00411C  6ECC               	movwf	4044,c	;volatile
 37508  00411E  D755               	goto	i2l16496
 37509  004120                     i2l16664:
 37510                           
 37511                           ;interrupts.c: 402: else if( RFcodePlace == 2)
 37512  004120  0E02               	movlw	2
 37513  004122  1836               	xorwf	_RFcodePlace,w,c
 37514  004124  A4D8               	btfss	status,2,c
 37515  004126  D01C               	goto	i2l16684
 37516                           
 37517                           ;interrupts.c: 403: {
 37518                           ;interrupts.c: 404: if(RFConfig == 1)
 37519  004128  0434               	decf	_RFConfig,w,c
 37520  00412A  A4D8               	btfss	status,2,c
 37521  00412C  D003               	goto	i2l16672
 37522                           
 37523                           ;interrupts.c: 405: {
 37524                           ;interrupts.c: 406: (LATC &= ~0x20);
 37525  00412E  9A8B               	bcf	3979,5,c	;volatile
 37526                           
 37527                           ;interrupts.c: 407: (PR2 = 250);
 37528  004130  0EFA               	movlw	250
 37529  004132  D005               	goto	L30
 37530  004134                     i2l16672:
 37531                           
 37532                           ;interrupts.c: 409: else if(RFConfig == 2)
 37533  004134  0E02               	movlw	2
 37534  004136  1834               	xorwf	_RFConfig,w,c
 37535  004138  A4D8               	btfss	status,2,c
 37536  00413A  D003               	goto	i2l1297
 37537                           
 37538                           ;interrupts.c: 410: {
 37539                           ;interrupts.c: 411: (PR2 = 149);
 37540  00413C  0E95               	movlw	149
 37541  00413E                     L30:
 37542  00413E  6ECB               	movwf	4043,c	;volatile
 37543                           
 37544                           ;interrupts.c: 412: }
 37545  004140  D005               	goto	i2l16678
 37546  004142                     i2l1297:
 37547                           
 37548                           ;interrupts.c: 413: else
 37549                           ;interrupts.c: 414: {
 37550                           ;interrupts.c: 416: (T2CONbits.TMR2ON = 0);
 37551  004142  94CA               	bcf	4042,2,c	;volatile
 37552                           
 37553                           ;interrupts.c: 417: Sent = 1;
 37554  004144  0E01               	movlw	1
 37555  004146  0100               	movlb	0	; () banked
 37556  004148  6FE3               	movwf	_Sent& (0+255),b	;volatile
 37557                           
 37558                           ; BSR set to: 0
 37559  00414A  D000               	goto	i2l16678
 37560  00414C                     i2l16678:
 37561                           
 37562                           ;interrupts.c: 418: }
 37563                           ;interrupts.c: 419: RFcodePlace++;
 37564  00414C  2A36               	incf	_RFcodePlace,f,c
 37565                           
 37566                           ;interrupts.c: 420: Sendcount--;
 37567  00414E  0638               	decf	_Sendcount,f,c	;volatile
 37568                           
 37569                           ;interrupts.c: 421: if(Sendcount)
 37570  004150  5038               	movf	_Sendcount,w,c	;volatile
 37571  004152  B4D8               	btfsc	status,2,c
 37572  004154  D00E               	goto	i2l16696
 37573                           
 37574                           ;interrupts.c: 422: {
 37575                           ;interrupts.c: 424: RFcodePlace = 1;
 37576  004156  0E01               	movlw	1
 37577  004158  6E36               	movwf	_RFcodePlace,c
 37578                           
 37579                           ;interrupts.c: 425: RFcodeBit = 0;
 37580  00415A  0E00               	movlw	0
 37581  00415C  6E35               	movwf	_RFcodeBit,c
 37582                           
 37583                           ;interrupts.c: 426: }
 37584                           ;interrupts.c: 427: }
 37585  00415E  D009               	goto	i2l16696
 37586  004160                     i2l16684:
 37587                           
 37588                           ;interrupts.c: 428: else
 37589                           ;interrupts.c: 429: {
 37590                           ;interrupts.c: 431: ResetTimer3();
 37591  004160  ECD2  F04A         	call	_ResetTimer3	;wreg free
 37592                           
 37593                           ;interrupts.c: 432: PIR2bits.TMR3IF = 0;
 37594  004164  92A1               	bcf	4001,1,c	;volatile
 37595                           
 37596                           ;interrupts.c: 433: Timer3_Postscaler = 0;
 37597  004166  0E00               	movlw	0
 37598  004168  6E3B               	movwf	_Timer3_Postscaler,c
 37599                           
 37600                           ;interrupts.c: 434: (T3CONbits.TMR3ON = 1);
 37601  00416A  80B1               	bsf	4017,0,c	;volatile
 37602                           
 37603                           ;interrupts.c: 435: (T2CONbits.TMR2ON = 0);
 37604  00416C  94CA               	bcf	4042,2,c	;volatile
 37605  00416E  D73F               	goto	L31
 37606                           
 37607                           ;interrupts.c: 436: RFsendFlag = 0;
 37608  004170  D000               	goto	i2l16696
 37609  004172                     i2l16696:
 37610                           
 37611                           ;interrupts.c: 437: }
 37612                           ;interrupts.c: 438: }
 37613                           ;interrupts.c: 439: }
 37614                           ;interrupts.c: 440: if(RFsendFlag)
 37615  004172  5037               	movf	_RFsendFlag,w,c	;volatile
 37616  004174  B4D8               	btfsc	status,2,c
 37617  004176  D0C0               	goto	i2l16824
 37618                           
 37619                           ;interrupts.c: 441: {
 37620                           ;interrupts.c: 443: (T2CONbits.TMR2ON = 1);
 37621  004178  84CA               	bsf	4042,2,c	;volatile
 37622                           
 37623                           ;interrupts.c: 444: }
 37624                           ;interrupts.c: 445: }
 37625  00417A  D0BE               	goto	i2l16824
 37626  00417C                     i2l16700:
 37627                           
 37628                           ;interrupts.c: 446: else
 37629                           ;interrupts.c: 447: {
 37630                           ;interrupts.c: 449: if(Timer2_Postscaler >= RF_IR_Postscaler)
 37631  00417C  5043               	movf	_RF_IR_Postscaler,w,c	;volatile
 37632  00417E  5C3A               	subwf	_Timer2_Postscaler,w,c
 37633  004180  A0D8               	btfss	status,0,c
 37634  004182  D0BA               	goto	i2l16824
 37635                           
 37636                           ;interrupts.c: 450: {
 37637                           ;interrupts.c: 451: Timer2_Postscaler = 0;
 37638  004184  0E00               	movlw	0
 37639  004186  6E3A               	movwf	_Timer2_Postscaler,c
 37640                           
 37641                           ;interrupts.c: 452: if(IRcodePlace == 7)
 37642  004188  0E07               	movlw	7
 37643  00418A  1841               	xorwf	_IRcodePlace,w,c
 37644  00418C  A4D8               	btfss	status,2,c
 37645  00418E  D00D               	goto	i2l16716
 37646                           
 37647                           ;interrupts.c: 453: {
 37648                           ;interrupts.c: 454: IRbitPosition = 32;
 37649  004190  0E20               	movlw	32
 37650  004192  6E40               	movwf	_IRbitPosition,c	;volatile
 37651                           
 37652                           ;interrupts.c: 455: (IRmod = 0);
 37653  004194  0E00               	movlw	0
 37654  004196  0100               	movlb	0	; () banked
 37655  004198  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37656                           
 37657                           ; BSR set to: 0
 37658                           ;interrupts.c: 456: (LATC &= ~0x08);
 37659  00419A  968B               	bcf	3979,3,c	;volatile
 37660                           
 37661                           ; BSR set to: 0
 37662                           ;interrupts.c: 457: IRcodePlace = 8;
 37663  00419C  0E08               	movlw	8
 37664  00419E  6E41               	movwf	_IRcodePlace,c
 37665                           
 37666                           ; BSR set to: 0
 37667                           ;interrupts.c: 458: RF_IR_Postscaler = 4;
 37668  0041A0  0E04               	movlw	4
 37669  0041A2  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37670                           
 37671                           ; BSR set to: 0
 37672                           ;interrupts.c: 459: (PR2 = 75);
 37673  0041A4  0E4B               	movlw	75
 37674  0041A6  6ECB               	movwf	4043,c	;volatile
 37675                           
 37676                           ;interrupts.c: 460: }
 37677  0041A8  D0A7               	goto	i2l16824
 37678  0041AA                     i2l16716:
 37679                           
 37680                           ;interrupts.c: 461: else if(IRcodePlace == 8 || IRcodePlace == 10)
 37681  0041AA  0E08               	movlw	8
 37682  0041AC  1841               	xorwf	_IRcodePlace,w,c
 37683  0041AE  B4D8               	btfsc	status,2,c
 37684  0041B0  D004               	goto	i2l16720
 37685  0041B2  0E0A               	movlw	10
 37686  0041B4  1841               	xorwf	_IRcodePlace,w,c
 37687  0041B6  A4D8               	btfss	status,2,c
 37688  0041B8  D011               	goto	i2l16730
 37689  0041BA                     i2l16720:
 37690                           
 37691                           ;interrupts.c: 462: {
 37692                           ;interrupts.c: 463: (IRmod = 1);
 37693  0041BA  0E01               	movlw	1
 37694  0041BC  0100               	movlb	0	; () banked
 37695  0041BE  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37696                           
 37697                           ;interrupts.c: 464: RF_IR_Postscaler = 1;
 37698  0041C0  0E01               	movlw	1
 37699  0041C2  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37700                           
 37701                           ; BSR set to: 0
 37702                           ;interrupts.c: 465: IRbit = (unsigned char) (IRsendCode & 0x01);
 37703  0041C4  5023               	movf	_IRsendCode,w,c
 37704  0041C6  0B01               	andlw	1
 37705  0041C8  6E2D               	movwf	_IRbit,c
 37706                           
 37707                           ; BSR set to: 0
 37708                           ;interrupts.c: 466: IRsendCode >>= 1;
 37709  0041CA  90D8               	bcf	status,0,c
 37710  0041CC  3226               	rrcf	_IRsendCode+3,f,c
 37711  0041CE  3225               	rrcf	_IRsendCode+2,f,c
 37712  0041D0  3224               	rrcf	_IRsendCode+1,f,c
 37713  0041D2  3223               	rrcf	_IRsendCode,f,c
 37714                           
 37715                           ; BSR set to: 0
 37716                           ;interrupts.c: 467: (PR2 = 38);
 37717  0041D4  0E26               	movlw	38
 37718  0041D6  6ECB               	movwf	4043,c	;volatile
 37719                           
 37720                           ; BSR set to: 0
 37721                           ;interrupts.c: 468: IRcodePlace = 9;
 37722  0041D8  0E09               	movlw	9
 37723  0041DA  D07A               	goto	L41
 37724  0041DC                     i2l16730:
 37725                           
 37726                           ;interrupts.c: 470: else if(IRcodePlace == 9)
 37727  0041DC  0E09               	movlw	9
 37728  0041DE  1841               	xorwf	_IRcodePlace,w,c
 37729  0041E0  A4D8               	btfss	status,2,c
 37730  0041E2  D017               	goto	i2l16752
 37731                           
 37732                           ;interrupts.c: 471: {
 37733                           ;interrupts.c: 472: (IRmod = 0);
 37734  0041E4  0E00               	movlw	0
 37735  0041E6  0100               	movlb	0	; () banked
 37736  0041E8  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37737                           
 37738                           ; BSR set to: 0
 37739                           ;interrupts.c: 473: (LATC &= ~0x08);
 37740  0041EA  968B               	bcf	3979,3,c	;volatile
 37741                           
 37742                           ; BSR set to: 0
 37743                           ;interrupts.c: 474: RF_IR_Postscaler = 1;
 37744  0041EC  0E01               	movlw	1
 37745  0041EE  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37746                           
 37747                           ; BSR set to: 0
 37748                           ;interrupts.c: 475: if(IRbit)
 37749  0041F0  502D               	movf	_IRbit,w,c
 37750  0041F2  B4D8               	btfsc	status,2,c
 37751  0041F4  D002               	goto	i2l16742
 37752                           
 37753                           ; BSR set to: 0
 37754                           ;interrupts.c: 476: {
 37755                           ;interrupts.c: 478: (PR2 = 113);
 37756  0041F6  0E71               	movlw	113
 37757  0041F8  D001               	goto	L33
 37758  0041FA                     i2l16742:
 37759                           
 37760                           ; BSR set to: 0
 37761                           ;interrupts.c: 480: else
 37762                           ;interrupts.c: 481: {
 37763                           ;interrupts.c: 483: (PR2 = 38);
 37764  0041FA  0E26               	movlw	38
 37765  0041FC                     L33:
 37766  0041FC  6ECB               	movwf	4043,c	;volatile
 37767  0041FE  D000               	goto	i2l16744
 37768  004200                     i2l16744:
 37769                           
 37770                           ; BSR set to: 0
 37771                           ;interrupts.c: 484: }
 37772                           ;interrupts.c: 485: IRbitPosition--;
 37773  004200  0640               	decf	_IRbitPosition,f,c	;volatile
 37774                           
 37775                           ; BSR set to: 0
 37776                           ;interrupts.c: 486: if(IRbitPosition == 0)
 37777  004202  5040               	movf	_IRbitPosition,w,c	;volatile
 37778  004204  A4D8               	btfss	status,2,c
 37779  004206  D002               	goto	i2l16750
 37780                           
 37781                           ; BSR set to: 0
 37782                           ;interrupts.c: 487: {
 37783                           ;interrupts.c: 488: IRcodePlace = 11;
 37784  004208  0E0B               	movlw	11
 37785  00420A  D062               	goto	L41
 37786  00420C                     i2l16750:
 37787                           
 37788                           ; BSR set to: 0
 37789                           ;interrupts.c: 490: else
 37790                           ;interrupts.c: 491: {
 37791                           ;interrupts.c: 492: IRcodePlace = 10;
 37792  00420C  0E0A               	movlw	10
 37793  00420E  D060               	goto	L41
 37794                           
 37795                           ; BSR set to: 0
 37796                           ;interrupts.c: 493: }
 37797                           ;interrupts.c: 494: }
 37798  004210  D073               	goto	i2l16824
 37799  004212                     i2l16752:
 37800                           
 37801                           ;interrupts.c: 495: else if(IRcodePlace == 11)
 37802  004212  0E0B               	movlw	11
 37803  004214  1841               	xorwf	_IRcodePlace,w,c
 37804  004216  A4D8               	btfss	status,2,c
 37805  004218  D007               	goto	i2l16756
 37806                           
 37807                           ;interrupts.c: 496: {
 37808                           ;interrupts.c: 497: (IRmod = 1);
 37809  00421A  0E01               	movlw	1
 37810  00421C  0100               	movlb	0	; () banked
 37811  00421E  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37812                           
 37813                           ;interrupts.c: 498: (PR2 = 38);
 37814  004220  0E26               	movlw	38
 37815  004222  6ECB               	movwf	4043,c	;volatile
 37816                           
 37817                           ;interrupts.c: 499: IRcodePlace = 12;
 37818  004224  0E0C               	movlw	12
 37819  004226  D054               	goto	L41
 37820  004228                     i2l16756:
 37821                           
 37822                           ;interrupts.c: 501: else if(IRcodePlace == 12)
 37823  004228  0E0C               	movlw	12
 37824  00422A  1841               	xorwf	_IRcodePlace,w,c
 37825  00422C  A4D8               	btfss	status,2,c
 37826  00422E  D011               	goto	i2l16770
 37827                           
 37828                           ;interrupts.c: 502: {
 37829                           ;interrupts.c: 503: (IRmod = 0);
 37830  004230  0E00               	movlw	0
 37831  004232  0100               	movlb	0	; () banked
 37832  004234  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37833                           
 37834                           ; BSR set to: 0
 37835                           ;interrupts.c: 504: (LATC &= ~0x08);
 37836  004236  968B               	bcf	3979,3,c	;volatile
 37837                           
 37838                           ; BSR set to: 0
 37839                           ;interrupts.c: 505: if(!IRrepeatflag)
 37840  004238  5032               	movf	_IRrepeatflag,w,c
 37841  00423A  A4D8               	btfss	status,2,c
 37842  00423C  D003               	goto	i2l16768
 37843                           
 37844                           ; BSR set to: 0
 37845                           ;interrupts.c: 506: {
 37846                           ;interrupts.c: 508: IRcodePlace = 13;
 37847  00423E  0E0D               	movlw	13
 37848  004240  6E41               	movwf	_IRcodePlace,c
 37849  004242  D057               	goto	i2l16820
 37850  004244                     i2l16768:
 37851                           
 37852                           ; BSR set to: 0
 37853                           ;interrupts.c: 512: else
 37854                           ;interrupts.c: 513: {
 37855                           ;interrupts.c: 514: RF_IR_Postscaler = 11;
 37856  004244  0E0B               	movlw	11
 37857  004246  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37858                           
 37859                           ;interrupts.c: 515: (PR2 = 242);
 37860  004248  0EF2               	movlw	242
 37861  00424A  6ECB               	movwf	4043,c	;volatile
 37862                           
 37863                           ;interrupts.c: 516: IRcodePlace = 14;
 37864  00424C  0E0E               	movlw	14
 37865  00424E  D040               	goto	L41
 37866                           
 37867                           ; BSR set to: 0
 37868                           ;interrupts.c: 517: }
 37869                           ;interrupts.c: 518: }
 37870  004250  D053               	goto	i2l16824
 37871  004252                     i2l16770:
 37872                           
 37873                           ;interrupts.c: 519: else if(IRcodePlace == 14 || IRcodePlace == 18)
 37874  004252  0E0E               	movlw	14
 37875  004254  1841               	xorwf	_IRcodePlace,w,c
 37876  004256  B4D8               	btfsc	status,2,c
 37877  004258  D004               	goto	i2l16774
 37878  00425A  0E12               	movlw	18
 37879  00425C  1841               	xorwf	_IRcodePlace,w,c
 37880  00425E  A4D8               	btfss	status,2,c
 37881  004260  D009               	goto	i2l16776
 37882  004262                     i2l16774:
 37883                           
 37884                           ;interrupts.c: 520: {
 37885                           ;interrupts.c: 521: (IRmod = 1);
 37886  004262  0E01               	movlw	1
 37887  004264  0100               	movlb	0	; () banked
 37888  004266  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37889                           
 37890                           ;interrupts.c: 522: RF_IR_Postscaler = 4;
 37891  004268  0E04               	movlw	4
 37892  00426A  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37893                           
 37894                           ;interrupts.c: 523: (PR2 = 150);
 37895  00426C  0E96               	movlw	150
 37896  00426E  6ECB               	movwf	4043,c	;volatile
 37897                           
 37898                           ;interrupts.c: 524: IRcodePlace = 15;
 37899  004270  0E0F               	movlw	15
 37900  004272  D02E               	goto	L41
 37901  004274                     i2l16776:
 37902                           
 37903                           ;interrupts.c: 526: else if(IRcodePlace == 15)
 37904  004274  0E0F               	movlw	15
 37905  004276  1841               	xorwf	_IRcodePlace,w,c
 37906  004278  A4D8               	btfss	status,2,c
 37907  00427A  D00A               	goto	i2l16788
 37908                           
 37909                           ;interrupts.c: 527: {
 37910                           ;interrupts.c: 528: (IRmod = 0);
 37911  00427C  0E00               	movlw	0
 37912  00427E  0100               	movlb	0	; () banked
 37913  004280  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37914                           
 37915                           ; BSR set to: 0
 37916                           ;interrupts.c: 529: (LATC &= ~0x08);
 37917  004282  968B               	bcf	3979,3,c	;volatile
 37918                           
 37919                           ; BSR set to: 0
 37920                           ;interrupts.c: 530: RF_IR_Postscaler = 1;
 37921  004284  0E01               	movlw	1
 37922  004286  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37923                           
 37924                           ; BSR set to: 0
 37925                           ;interrupts.c: 531: (PR2 = 149);
 37926  004288  0E95               	movlw	149
 37927  00428A  6ECB               	movwf	4043,c	;volatile
 37928                           
 37929                           ; BSR set to: 0
 37930                           ;interrupts.c: 532: IRcodePlace = 16;
 37931  00428C  0E10               	movlw	16
 37932  00428E  D020               	goto	L41
 37933  004290                     i2l16788:
 37934                           
 37935                           ;interrupts.c: 534: else if(IRcodePlace == 16)
 37936  004290  0E10               	movlw	16
 37937  004292  1841               	xorwf	_IRcodePlace,w,c
 37938  004294  A4D8               	btfss	status,2,c
 37939  004296  D009               	goto	i2l16792
 37940                           
 37941                           ;interrupts.c: 535: {
 37942                           ;interrupts.c: 536: (IRmod = 1);
 37943  004298  0E01               	movlw	1
 37944  00429A  0100               	movlb	0	; () banked
 37945  00429C  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37946                           
 37947                           ;interrupts.c: 537: RF_IR_Postscaler = 1;
 37948  00429E  0E01               	movlw	1
 37949  0042A0  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37950                           
 37951                           ;interrupts.c: 538: (PR2 = 38);
 37952  0042A2  0E26               	movlw	38
 37953  0042A4  6ECB               	movwf	4043,c	;volatile
 37954                           
 37955                           ;interrupts.c: 539: IRcodePlace = 17;
 37956  0042A6  0E11               	movlw	17
 37957  0042A8  D013               	goto	L41
 37958  0042AA                     i2l16792:
 37959                           
 37960                           ;interrupts.c: 541: else if(IRcodePlace == 17)
 37961  0042AA  0E11               	movlw	17
 37962  0042AC  1841               	xorwf	_IRcodePlace,w,c
 37963  0042AE  A4D8               	btfss	status,2,c
 37964  0042B0  D011               	goto	i2l16808
 37965                           
 37966                           ;interrupts.c: 542: {
 37967                           ;interrupts.c: 543: (IRmod = 0);
 37968  0042B2  0E00               	movlw	0
 37969  0042B4  0100               	movlb	0	; () banked
 37970  0042B6  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 37971                           
 37972                           ; BSR set to: 0
 37973                           ;interrupts.c: 544: (LATC &= ~0x08);
 37974  0042B8  968B               	bcf	3979,3,c	;volatile
 37975                           
 37976                           ; BSR set to: 0
 37977                           ;interrupts.c: 545: RF_IR_Postscaler = 26;
 37978  0042BA  0E1A               	movlw	26
 37979  0042BC  6E43               	movwf	_RF_IR_Postscaler,c	;volatile
 37980                           
 37981                           ; BSR set to: 0
 37982                           ;interrupts.c: 546: (PR2 = 246);
 37983  0042BE  0EF6               	movlw	246
 37984  0042C0  6ECB               	movwf	4043,c	;volatile
 37985                           
 37986                           ; BSR set to: 0
 37987                           ;interrupts.c: 547: IRrepeatAmount--;
 37988  0042C2  0631               	decf	_IRrepeatAmount,f,c
 37989                           
 37990                           ;interrupts.c: 548: if(IRrepeatAmount)
 37991  0042C4  5031               	movf	_IRrepeatAmount,w,c
 37992  0042C6  B4D8               	btfsc	status,2,c
 37993  0042C8  D002               	goto	i2l16806
 37994                           
 37995                           ; BSR set to: 0
 37996                           ;interrupts.c: 549: {
 37997                           ;interrupts.c: 550: IRcodePlace = 18;
 37998  0042CA  0E12               	movlw	18
 37999  0042CC  D001               	goto	L41
 38000  0042CE                     i2l16806:
 38001                           
 38002                           ; BSR set to: 0
 38003                           ;interrupts.c: 552: else
 38004                           ;interrupts.c: 553: {
 38005                           ;interrupts.c: 554: IRcodePlace = 13;
 38006  0042CE  0E0D               	movlw	13
 38007  0042D0                     L41:
 38008  0042D0  6E41               	movwf	_IRcodePlace,c
 38009                           
 38010                           ; BSR set to: 0
 38011                           ;interrupts.c: 555: }
 38012                           ;interrupts.c: 556: }
 38013  0042D2  D012               	goto	i2l16824
 38014  0042D4                     i2l16808:
 38015                           
 38016                           ;interrupts.c: 557: else if(IRcodePlace == 13)
 38017  0042D4  0E0D               	movlw	13
 38018  0042D6  1841               	xorwf	_IRcodePlace,w,c
 38019  0042D8  A4D8               	btfss	status,2,c
 38020  0042DA  D005               	goto	i2l16814
 38021  0042DC  D00A               	goto	i2l16820
 38022  0042DE                     i2l16812:
 38023                           
 38024                           ;interrupts.c: 561: Sent = 1;
 38025  0042DE  0E01               	movlw	1
 38026  0042E0  0100               	movlb	0	; () banked
 38027  0042E2  6FE3               	movwf	_Sent& (0+255),b	;volatile
 38028                           
 38029                           ;interrupts.c: 562: }
 38030  0042E4  D009               	goto	i2l16824
 38031  0042E6                     i2l16814:
 38032                           
 38033                           ;interrupts.c: 563: else
 38034                           ;interrupts.c: 564: {
 38035                           ;interrupts.c: 566: (IRmod = 0);
 38036  0042E6  0E00               	movlw	0
 38037  0042E8  0100               	movlb	0	; () banked
 38038  0042EA  6FDA               	movwf	_IRmod& (0+255),b	;volatile
 38039                           
 38040                           ; BSR set to: 0
 38041                           ;interrupts.c: 567: (LATC &= ~0x08);
 38042  0042EC  968B               	bcf	3979,3,c	;volatile
 38043                           
 38044                           ; BSR set to: 0
 38045                           ;interrupts.c: 568: IRcodePlace = 0;
 38046  0042EE  0E00               	movlw	0
 38047  0042F0  6E41               	movwf	_IRcodePlace,c
 38048  0042F2                     i2l16820:
 38049                           
 38050                           ; BSR set to: 0
 38051                           ;interrupts.c: 569: (T2CONbits.TMR2ON = 0);
 38052  0042F2  94CA               	bcf	4042,2,c	;volatile
 38053  0042F4  D7F4               	goto	i2l16812
 38054                           
 38055                           ; BSR set to: 0
 38056                           
 38057                           ; BSR set to: 0
 38058                           
 38059                           ; BSR set to: 0
 38060                           
 38061                           ; BSR set to: 0
 38062                           
 38063                           ; BSR set to: 0
 38064                           
 38065                           ; BSR set to: 0
 38066                           
 38067                           ; BSR set to: 0
 38068                           
 38069                           ; BSR set to: 0
 38070                           
 38071                           ; BSR set to: 0
 38072                           
 38073                           ; BSR set to: 0
 38074                           
 38075                           ; BSR set to: 0
 38076                           
 38077                           ; BSR set to: 0
 38078                           ;interrupts.c: 570: Sent = 1;
 38079  0042F6  D000               	goto	i2l16824
 38080  0042F8                     i2l16824:
 38081                           
 38082                           ;interrupts.c: 571: }
 38083                           ;interrupts.c: 572: }
 38084                           ;interrupts.c: 573: }
 38085                           ;interrupts.c: 574: PIR1bits.TMR2IF = 0;
 38086  0042F8  929E               	bcf	3998,1,c	;volatile
 38087                           
 38088                           ;interrupts.c: 575: }
 38089  0042FA  D013               	goto	i2l1229
 38090  0042FC                     i2l1234:
 38091                           
 38092                           ;interrupts.c: 576: else if(PIR2bits.TMR3IF)
 38093  0042FC  A2A1               	btfss	4001,1,c	;volatile
 38094  0042FE  D00F               	goto	i2l1337
 38095                           
 38096                           ;interrupts.c: 577: {
 38097                           ;interrupts.c: 578: (T3CONbits.TMR3ON = 0);
 38098  004300  90B1               	bcf	4017,0,c	;volatile
 38099                           
 38100                           ;interrupts.c: 579: if(Timer3_Postscaler < 4)
 38101  004302  0E04               	movlw	4
 38102  004304  603B               	cpfslt	_Timer3_Postscaler,c
 38103  004306  D005               	goto	i2l16836
 38104                           
 38105                           ;interrupts.c: 580: {
 38106                           ;interrupts.c: 581: ResetTimer3();
 38107  004308  ECD2  F04A         	call	_ResetTimer3	;wreg free
 38108                           
 38109                           ;interrupts.c: 582: (T3CONbits.TMR3ON = 1);
 38110  00430C  80B1               	bsf	4017,0,c	;volatile
 38111                           
 38112                           ;interrupts.c: 583: Timer3_Postscaler++;
 38113  00430E  2A3B               	incf	_Timer3_Postscaler,f,c
 38114                           
 38115                           ;interrupts.c: 584: }
 38116  004310  D004               	goto	i2l16838
 38117  004312                     i2l16836:
 38118                           
 38119                           ;interrupts.c: 585: else
 38120                           ;interrupts.c: 586: {
 38121                           ;interrupts.c: 591: Sent = 1;
 38122  004312  0E01               	movlw	1
 38123  004314  0100               	movlb	0	; () banked
 38124  004316  6FE3               	movwf	_Sent& (0+255),b	;volatile
 38125  004318  D000               	goto	i2l16838
 38126  00431A                     i2l16838:
 38127                           
 38128                           ;interrupts.c: 592: }
 38129                           ;interrupts.c: 593: PIR2bits.TMR3IF = 0;
 38130  00431A  92A1               	bcf	4001,1,c	;volatile
 38131                           
 38132                           ;interrupts.c: 594: }
 38133  00431C  D002               	goto	i2l1229
 38134  00431E                     i2l1337:
 38135                           
 38136                           ;interrupts.c: 595: else
 38137                           ;interrupts.c: 596: {
 38138                           ;interrupts.c: 598: __nop();
 38139  00431E  F000               	nop	
 38140  004320  D000               	goto	i2l1229
 38141  004322                     i2l1229:
 38142                           
 38143                           ;interrupts.c: 599: }
 38144                           ;interrupts.c: 601: INTCONbits.GIE = 1;
 38145  004322  8EF2               	bsf	intcon,7,c	;volatile
 38146  004324  C078  FFF5         	movff	??_high_isr+17,tablat
 38147  004328  C077  FFF8         	movff	??_high_isr+16,tblptru
 38148  00432C  C076  FFF7         	movff	??_high_isr+15,tblptrh
 38149  004330  C075  FFF6         	movff	??_high_isr+14,tblptrl
 38150  004334  C074  FFF4         	movff	??_high_isr+13,prodh
 38151  004338  C073  FFF3         	movff	??_high_isr+12,prodl
 38152  00433C  C072  FFDA         	movff	??_high_isr+11,fsr2h
 38153  004340  C071  FFD9         	movff	??_high_isr+10,fsr2l
 38154  004344  C070  FFE2         	movff	??_high_isr+9,fsr1h
 38155  004348  C06F  FFE1         	movff	??_high_isr+8,fsr1l
 38156  00434C  C06E  FFEA         	movff	??_high_isr+7,fsr0h
 38157  004350  C06D  FFE9         	movff	??_high_isr+6,fsr0l
 38158  004354  C06C  FFFB         	movff	??_high_isr+5,pclatu
 38159  004358  C06B  FFFA         	movff	??_high_isr+4,pclath
 38160  00435C  0011               	retfie		f
 38161  00435E                     __end_of_high_isr:
 38162                           	opt stack 0
 38163                           pclatu	equ	0xFFB
 38164                           pclath	equ	0xFFA
 38165                           tblptru	equ	0xFF8
 38166                           tblptrh	equ	0xFF7
 38167                           tblptrl	equ	0xFF6
 38168                           tablat	equ	0xFF5
 38169                           prodh	equ	0xFF4
 38170                           prodl	equ	0xFF3
 38171                           intcon	equ	0xFF2
 38172                           intcon2	equ	0xFF1
 38173                           indf0	equ	0xFEF
 38174                           postinc0	equ	0xFEE
 38175                           plusw0	equ	0xFEB
 38176                           fsr0h	equ	0xFEA
 38177                           fsr0l	equ	0xFE9
 38178                           wreg	equ	0xFE8
 38179                           indf1	equ	0xFE7
 38180                           postdec1	equ	0xFE5
 38181                           fsr1h	equ	0xFE2
 38182                           fsr1l	equ	0xFE1
 38183                           bsr	equ	0xFE0
 38184                           indf2	equ	0xFDF
 38185                           postinc2	equ	0xFDE
 38186                           postdec2	equ	0xFDD
 38187                           plusw2	equ	0xFDB
 38188                           fsr2h	equ	0xFDA
 38189                           fsr2l	equ	0xFD9
 38190                           status	equ	0xFD8
 38191                           
 38192 ;; *************** function i2_cleanBuffer16bit *****************
 38193 ;; Defined at:
 38194 ;;		line 141 in file "MISC.c"
 38195 ;; Parameters:    Size  Location     Type
 38196 ;;  data            2   26[COMRAM] PTR unsigned int 
 38197 ;;		 -> IRRawCode(200), 
 38198 ;;  count           2   28[COMRAM] int 
 38199 ;; Auto vars:     Size  Location     Type
 38200 ;;  cleanBuffer1    1   33[COMRAM] unsigned char 
 38201 ;; Return value:  Size  Location     Type
 38202 ;;		None               void
 38203 ;; Registers used:
 38204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38205 ;; Tracked objects:
 38206 ;;		On entry : 0/0
 38207 ;;		On exit  : 0/0
 38208 ;;		Unchanged: 0/0
 38209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38210 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38212 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38213 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38214 ;;Total ram usage:        8 bytes
 38215 ;; Hardware stack levels used:    1
 38216 ;; This function calls:
 38217 ;;		Nothing
 38218 ;; This function is called by:
 38219 ;;		_high_isr
 38220 ;; This function uses a non-reentrant model
 38221 ;;
 38222                           
 38223                           	psect	text111
 38224  009108                     __ptext111:
 38225                           	opt stack 0
 38226  009108                     i2_cleanBuffer16bit:
 38227                           	opt stack 17
 38228                           
 38229                           ;MISC.c: 143: unsigned char i=0;
 38230                           
 38231                           ;incstack = 0
 38232  009108  0E00               	movlw	0
 38233  00910A  6E22               	movwf	i2cleanBuffer16bit@i,c
 38234                           
 38235                           ;MISC.c: 144: for(i=0; i<count;i++)
 38236  00910C  0E00               	movlw	0
 38237  00910E  6E22               	movwf	i2cleanBuffer16bit@i,c
 38238  009110  D00E               	goto	i2l16198
 38239  009112                     i2l16194:
 38240                           
 38241                           ;MISC.c: 145: {
 38242                           ;MISC.c: 146: data[i]= 0;
 38243  009112  5022               	movf	i2cleanBuffer16bit@i,w,c
 38244  009114  0D02               	mullw	2
 38245  009116  50F3               	movf	prodl,w,c
 38246  009118  241B               	addwf	i2cleanBuffer16bit@data,w,c
 38247  00911A  6ED9               	movwf	fsr2l,c
 38248  00911C  50F4               	movf	prodh,w,c
 38249  00911E  201C               	addwfc	i2cleanBuffer16bit@data+1,w,c
 38250  009120  6EDA               	movwf	fsr2h,c
 38251  009122  0E00               	movlw	0
 38252  009124  6EDE               	movwf	postinc2,c
 38253  009126  0E00               	movlw	0
 38254  009128  6EDD               	movwf	postdec2,c
 38255  00912A  2A22               	incf	i2cleanBuffer16bit@i,f,c
 38256  00912C  D000               	goto	i2l16198
 38257  00912E                     i2l16198:
 38258  00912E  5022               	movf	i2cleanBuffer16bit@i,w,c
 38259  009130  6E1F               	movwf	??i2_cleanBuffer16bit& (0+255),c
 38260  009132  6A20               	clrf	(??i2_cleanBuffer16bit+1)& (0+255),c
 38261  009134  501D               	movf	i2cleanBuffer16bit@count,w,c
 38262  009136  5C1F               	subwf	??i2_cleanBuffer16bit,w,c
 38263  009138  5020               	movf	??i2_cleanBuffer16bit+1,w,c
 38264  00913A  0A80               	xorlw	128
 38265  00913C  6E21               	movwf	(??i2_cleanBuffer16bit+2)& (0+255),c
 38266  00913E  501E               	movf	i2cleanBuffer16bit@count+1,w,c
 38267  009140  0A80               	xorlw	128
 38268  009142  5821               	subwfb	(??i2_cleanBuffer16bit+2)& (0+255),w,c
 38269  009144  A0D8               	btfss	status,0,c
 38270  009146  D7E5               	goto	i2l16194
 38271  009148  0012               	return		;funcret
 38272  00914A                     __end_ofi2_cleanBuffer16bit:
 38273                           	opt stack 0
 38274                           pclatu	equ	0xFFB
 38275                           pclath	equ	0xFFA
 38276                           tblptru	equ	0xFF8
 38277                           tblptrh	equ	0xFF7
 38278                           tblptrl	equ	0xFF6
 38279                           tablat	equ	0xFF5
 38280                           prodh	equ	0xFF4
 38281                           prodl	equ	0xFF3
 38282                           intcon	equ	0xFF2
 38283                           intcon2	equ	0xFF1
 38284                           indf0	equ	0xFEF
 38285                           postinc0	equ	0xFEE
 38286                           plusw0	equ	0xFEB
 38287                           fsr0h	equ	0xFEA
 38288                           fsr0l	equ	0xFE9
 38289                           wreg	equ	0xFE8
 38290                           indf1	equ	0xFE7
 38291                           postdec1	equ	0xFE5
 38292                           fsr1h	equ	0xFE2
 38293                           fsr1l	equ	0xFE1
 38294                           bsr	equ	0xFE0
 38295                           indf2	equ	0xFDF
 38296                           postinc2	equ	0xFDE
 38297                           postdec2	equ	0xFDD
 38298                           plusw2	equ	0xFDB
 38299                           fsr2h	equ	0xFDA
 38300                           fsr2l	equ	0xFD9
 38301                           status	equ	0xFD8
 38302                           
 38303 ;; *************** function i2_ResetTimer0 *****************
 38304 ;; Defined at:
 38305 ;;		line 79 in file "Timer.c"
 38306 ;; Parameters:    Size  Location     Type
 38307 ;;		None
 38308 ;; Auto vars:     Size  Location     Type
 38309 ;;		None
 38310 ;; Return value:  Size  Location     Type
 38311 ;;		None               void
 38312 ;; Registers used:
 38313 ;;		wreg, status,2
 38314 ;; Tracked objects:
 38315 ;;		On entry : 0/0
 38316 ;;		On exit  : 0/0
 38317 ;;		Unchanged: 0/0
 38318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38323 ;;Total ram usage:        0 bytes
 38324 ;; Hardware stack levels used:    1
 38325 ;; This function calls:
 38326 ;;		Nothing
 38327 ;; This function is called by:
 38328 ;;		_high_isr
 38329 ;; This function uses a non-reentrant model
 38330 ;;
 38331                           
 38332                           	psect	text112
 38333  009590                     __ptext112:
 38334                           	opt stack 0
 38335  009590                     i2_ResetTimer0:
 38336                           	opt stack 17
 38337                           
 38338                           ;Timer.c: 85: TMR0H = 0;
 38339                           
 38340                           ;incstack = 0
 38341  009590  0E00               	movlw	0
 38342  009592  6ED7               	movwf	4055,c	;volatile
 38343                           
 38344                           ;Timer.c: 86: TMR0L = 2;
 38345  009594  0E02               	movlw	2
 38346  009596  6ED6               	movwf	4054,c	;volatile
 38347  009598  0012               	return		;funcret
 38348  00959A                     __end_ofi2_ResetTimer0:
 38349                           	opt stack 0
 38350                           pclatu	equ	0xFFB
 38351                           pclath	equ	0xFFA
 38352                           tblptru	equ	0xFF8
 38353                           tblptrh	equ	0xFF7
 38354                           tblptrl	equ	0xFF6
 38355                           tablat	equ	0xFF5
 38356                           prodh	equ	0xFF4
 38357                           prodl	equ	0xFF3
 38358                           intcon	equ	0xFF2
 38359                           intcon2	equ	0xFF1
 38360                           indf0	equ	0xFEF
 38361                           postinc0	equ	0xFEE
 38362                           plusw0	equ	0xFEB
 38363                           fsr0h	equ	0xFEA
 38364                           fsr0l	equ	0xFE9
 38365                           wreg	equ	0xFE8
 38366                           indf1	equ	0xFE7
 38367                           postdec1	equ	0xFE5
 38368                           fsr1h	equ	0xFE2
 38369                           fsr1l	equ	0xFE1
 38370                           bsr	equ	0xFE0
 38371                           indf2	equ	0xFDF
 38372                           postinc2	equ	0xFDE
 38373                           postdec2	equ	0xFDD
 38374                           plusw2	equ	0xFDB
 38375                           fsr2h	equ	0xFDA
 38376                           fsr2l	equ	0xFD9
 38377                           status	equ	0xFD8
 38378                           
 38379 ;; *************** function i2_ReadIRpin *****************
 38380 ;; Defined at:
 38381 ;;		line 107 in file "IR.c"
 38382 ;; Parameters:    Size  Location     Type
 38383 ;;		None
 38384 ;; Auto vars:     Size  Location     Type
 38385 ;;		None
 38386 ;; Return value:  Size  Location     Type
 38387 ;;                  1    wreg      unsigned char 
 38388 ;; Registers used:
 38389 ;;		wreg
 38390 ;; Tracked objects:
 38391 ;;		On entry : 0/0
 38392 ;;		On exit  : 0/0
 38393 ;;		Unchanged: 0/0
 38394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38399 ;;Total ram usage:        0 bytes
 38400 ;; Hardware stack levels used:    1
 38401 ;; This function calls:
 38402 ;;		Nothing
 38403 ;; This function is called by:
 38404 ;;		_high_isr
 38405 ;; This function uses a non-reentrant model
 38406 ;;
 38407                           
 38408                           	psect	text113
 38409  009564                     __ptext113:
 38410                           	opt stack 0
 38411  009564                     i2_ReadIRpin:
 38412                           	opt stack 17
 38413                           
 38414                           ;IR.c: 110: if((PORTB & 0x10) == 0x10)
 38415                           
 38416                           ;incstack = 0
 38417  009564  A881               	btfss	3969,4,c	;volatile
 38418  009566  D002               	goto	i2l16210
 38419                           
 38420                           ;IR.c: 111: {
 38421                           ;IR.c: 112: return (1);
 38422  009568  0E01               	movlw	1
 38423                           
 38424                           ;IR.c: 113: }
 38425  00956A  0012               	return	
 38426  00956C                     i2l16210:
 38427                           
 38428                           ;IR.c: 114: else
 38429                           ;IR.c: 115: {
 38430                           ;IR.c: 116: return 0;
 38431  00956C  0E00               	movlw	0
 38432  00956E  0012               	return	
 38433  009570  0012               	return		;funcret
 38434  009572                     __end_ofi2_ReadIRpin:
 38435                           	opt stack 0
 38436                           pclatu	equ	0xFFB
 38437                           pclath	equ	0xFFA
 38438                           tblptru	equ	0xFF8
 38439                           tblptrh	equ	0xFF7
 38440                           tblptrl	equ	0xFF6
 38441                           tablat	equ	0xFF5
 38442                           prodh	equ	0xFF4
 38443                           prodl	equ	0xFF3
 38444                           intcon	equ	0xFF2
 38445                           intcon2	equ	0xFF1
 38446                           indf0	equ	0xFEF
 38447                           postinc0	equ	0xFEE
 38448                           plusw0	equ	0xFEB
 38449                           fsr0h	equ	0xFEA
 38450                           fsr0l	equ	0xFE9
 38451                           wreg	equ	0xFE8
 38452                           indf1	equ	0xFE7
 38453                           postdec1	equ	0xFE5
 38454                           fsr1h	equ	0xFE2
 38455                           fsr1l	equ	0xFE1
 38456                           bsr	equ	0xFE0
 38457                           indf2	equ	0xFDF
 38458                           postinc2	equ	0xFDE
 38459                           postdec2	equ	0xFDD
 38460                           plusw2	equ	0xFDB
 38461                           fsr2h	equ	0xFDA
 38462                           fsr2l	equ	0xFD9
 38463                           status	equ	0xFD8
 38464                           
 38465 ;; *************** function _SetTimer0 *****************
 38466 ;; Defined at:
 38467 ;;		line 94 in file "Timer.c"
 38468 ;; Parameters:    Size  Location     Type
 38469 ;;  temp            2   26[COMRAM] unsigned int 
 38470 ;; Auto vars:     Size  Location     Type
 38471 ;;		None
 38472 ;; Return value:  Size  Location     Type
 38473 ;;		None               void
 38474 ;; Registers used:
 38475 ;;		wreg, status,2
 38476 ;; Tracked objects:
 38477 ;;		On entry : 0/0
 38478 ;;		On exit  : 0/0
 38479 ;;		Unchanged: 0/0
 38480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38485 ;;Total ram usage:        2 bytes
 38486 ;; Hardware stack levels used:    1
 38487 ;; This function calls:
 38488 ;;		Nothing
 38489 ;; This function is called by:
 38490 ;;		_high_isr
 38491 ;; This function uses a non-reentrant model
 38492 ;;
 38493                           
 38494                           	psect	text114
 38495  00959A                     __ptext114:
 38496                           	opt stack 0
 38497  00959A                     _SetTimer0:
 38498                           	opt stack 17
 38499                           
 38500                           ;Timer.c: 100: TMR0H = (temp & 0xFF00)>> 8;;
 38501                           
 38502                           ;incstack = 0
 38503  00959A  501C               	movf	SetTimer0@temp+1,w,c
 38504  00959C  6ED7               	movwf	4055,c	;volatile
 38505                           
 38506                           ;Timer.c: 101: TMR0L = temp & 0xFF;
 38507  00959E  C01B  FFD6         	movff	SetTimer0@temp,4054	;volatile
 38508  0095A2  0012               	return		;funcret
 38509  0095A4                     __end_of_SetTimer0:
 38510                           	opt stack 0
 38511                           pclatu	equ	0xFFB
 38512                           pclath	equ	0xFFA
 38513                           tblptru	equ	0xFF8
 38514                           tblptrh	equ	0xFF7
 38515                           tblptrl	equ	0xFF6
 38516                           tablat	equ	0xFF5
 38517                           prodh	equ	0xFF4
 38518                           prodl	equ	0xFF3
 38519                           intcon	equ	0xFF2
 38520                           intcon2	equ	0xFF1
 38521                           indf0	equ	0xFEF
 38522                           postinc0	equ	0xFEE
 38523                           plusw0	equ	0xFEB
 38524                           fsr0h	equ	0xFEA
 38525                           fsr0l	equ	0xFE9
 38526                           wreg	equ	0xFE8
 38527                           indf1	equ	0xFE7
 38528                           postdec1	equ	0xFE5
 38529                           fsr1h	equ	0xFE2
 38530                           fsr1l	equ	0xFE1
 38531                           bsr	equ	0xFE0
 38532                           indf2	equ	0xFDF
 38533                           postinc2	equ	0xFDE
 38534                           postdec2	equ	0xFDD
 38535                           plusw2	equ	0xFDB
 38536                           fsr2h	equ	0xFDA
 38537                           fsr2l	equ	0xFD9
 38538                           status	equ	0xFD8
 38539                           
 38540 ;; *************** function _ResetTimer3 *****************
 38541 ;; Defined at:
 38542 ;;		line 175 in file "Timer.c"
 38543 ;; Parameters:    Size  Location     Type
 38544 ;;		None
 38545 ;; Auto vars:     Size  Location     Type
 38546 ;;		None
 38547 ;; Return value:  Size  Location     Type
 38548 ;;		None               void
 38549 ;; Registers used:
 38550 ;;		wreg, status,2
 38551 ;; Tracked objects:
 38552 ;;		On entry : 0/0
 38553 ;;		On exit  : 0/0
 38554 ;;		Unchanged: 0/0
 38555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38560 ;;Total ram usage:        0 bytes
 38561 ;; Hardware stack levels used:    1
 38562 ;; This function calls:
 38563 ;;		Nothing
 38564 ;; This function is called by:
 38565 ;;		_high_isr
 38566 ;; This function uses a non-reentrant model
 38567 ;;
 38568                           
 38569                           	psect	text115
 38570  0095A4                     __ptext115:
 38571                           	opt stack 0
 38572  0095A4                     _ResetTimer3:
 38573                           	opt stack 17
 38574                           
 38575                           ;Timer.c: 181: TMR3H = 0;
 38576                           
 38577                           ;incstack = 0
 38578  0095A4  0E00               	movlw	0
 38579  0095A6  6EB3               	movwf	4019,c	;volatile
 38580                           
 38581                           ;Timer.c: 182: TMR3L = 2;
 38582  0095A8  0E02               	movlw	2
 38583  0095AA  6EB2               	movwf	4018,c	;volatile
 38584  0095AC  0012               	return		;funcret
 38585  0095AE                     __end_of_ResetTimer3:
 38586                           	opt stack 0
 38587                           pclatu	equ	0xFFB
 38588                           pclath	equ	0xFFA
 38589                           tblptru	equ	0xFF8
 38590                           tblptrh	equ	0xFF7
 38591                           tblptrl	equ	0xFF6
 38592                           tablat	equ	0xFF5
 38593                           prodh	equ	0xFF4
 38594                           prodl	equ	0xFF3
 38595                           intcon	equ	0xFF2
 38596                           intcon2	equ	0xFF1
 38597                           indf0	equ	0xFEF
 38598                           postinc0	equ	0xFEE
 38599                           plusw0	equ	0xFEB
 38600                           fsr0h	equ	0xFEA
 38601                           fsr0l	equ	0xFE9
 38602                           wreg	equ	0xFE8
 38603                           indf1	equ	0xFE7
 38604                           postdec1	equ	0xFE5
 38605                           fsr1h	equ	0xFE2
 38606                           fsr1l	equ	0xFE1
 38607                           bsr	equ	0xFE0
 38608                           indf2	equ	0xFDF
 38609                           postinc2	equ	0xFDE
 38610                           postdec2	equ	0xFDD
 38611                           plusw2	equ	0xFDB
 38612                           fsr2h	equ	0xFDA
 38613                           fsr2l	equ	0xFD9
 38614                           status	equ	0xFD8
 38615                           
 38616 ;; *************** function _IRrawToNEC *****************
 38617 ;; Defined at:
 38618 ;;		line 125 in file "IR.c"
 38619 ;; Parameters:    Size  Location     Type
 38620 ;;  Raw             2   26[COMRAM] PTR unsigned int 
 38621 ;;		 -> IRRawCode(200), 
 38622 ;;  NEC             2   28[COMRAM] PTR unsigned long 
 38623 ;;		 -> IR_NEC(4), 
 38624 ;;  Invert          1   30[COMRAM] unsigned char 
 38625 ;; Auto vars:     Size  Location     Type
 38626 ;;  NECtemp         4    0[BANK0 ] unsigned long 
 38627 ;;  StartBit        1    6[BANK0 ] unsigned char 
 38628 ;;  i               1    5[BANK0 ] unsigned char 
 38629 ;;  first           1    4[BANK0 ] unsigned char 
 38630 ;; Return value:  Size  Location     Type
 38631 ;;                  1    wreg      unsigned char 
 38632 ;; Registers used:
 38633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38634 ;; Tracked objects:
 38635 ;;		On entry : 0/0
 38636 ;;		On exit  : 0/0
 38637 ;;		Unchanged: 0/0
 38638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38639 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38640 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38641 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38642 ;;      Totals:         7       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38643 ;;Total ram usage:       14 bytes
 38644 ;; Hardware stack levels used:    1
 38645 ;; This function calls:
 38646 ;;		Nothing
 38647 ;; This function is called by:
 38648 ;;		_high_isr
 38649 ;; This function uses a non-reentrant model
 38650 ;;
 38651                           
 38652                           	psect	text116
 38653  00551E                     __ptext116:
 38654                           	opt stack 0
 38655  00551E                     _IRrawToNEC:
 38656                           	opt stack 17
 38657                           
 38658                           ;IR.c: 153: unsigned char i;
 38659                           ;IR.c: 154: unsigned char first =0;
 38660                           
 38661                           ;incstack = 0
 38662  00551E  0E00               	movlw	0
 38663  005520  0100               	movlb	0	; () banked
 38664  005522  6F64               	movwf	IRrawToNEC@first& (0+255),b
 38665                           
 38666                           ;IR.c: 155: unsigned char StartBit=100;
 38667  005524  0E64               	movlw	100
 38668  005526  0100               	movlb	0	; () banked
 38669  005528  6F66               	movwf	IRrawToNEC@StartBit& (0+255),b
 38670                           
 38671                           ;IR.c: 156: unsigned long NECtemp = 0;
 38672  00552A  0E00               	movlw	0
 38673  00552C  0100               	movlb	0	; () banked
 38674  00552E  6F60               	movwf	IRrawToNEC@NECtemp& (0+255),b
 38675  005530  0E00               	movlw	0
 38676  005532  6F61               	movwf	(IRrawToNEC@NECtemp+1)& (0+255),b
 38677  005534  0E00               	movlw	0
 38678  005536  6F62               	movwf	(IRrawToNEC@NECtemp+2)& (0+255),b
 38679  005538  0E00               	movlw	0
 38680  00553A  6F63               	movwf	(IRrawToNEC@NECtemp+3)& (0+255),b
 38681                           
 38682                           ;IR.c: 159: for (i =0; i < 100; i++)
 38683  00553C  0E00               	movlw	0
 38684  00553E  0100               	movlb	0	; () banked
 38685  005540  6F65               	movwf	IRrawToNEC@i& (0+255),b
 38686  005542                     i2l16054:
 38687                           
 38688                           ; BSR set to: 0
 38689  005542  0E63               	movlw	99
 38690  005544  0100               	movlb	0	; () banked
 38691  005546  6565               	cpfsgt	IRrawToNEC@i& (0+255),b
 38692  005548  D001               	goto	i2l16058
 38693                           
 38694                           ; BSR set to: 0
 38695  00554A  D024               	goto	i2l16068
 38696  00554C                     i2l16058:
 38697                           
 38698                           ; BSR set to: 0
 38699                           ;IR.c: 160: {
 38700                           ;IR.c: 161: if(Raw[i] >= 4000 && Raw[i] <= 5000 )
 38701  00554C  0100               	movlb	0	; () banked
 38702  00554E  5165               	movf	IRrawToNEC@i& (0+255),w,b
 38703  005550  0D02               	mullw	2
 38704  005552  50F3               	movf	prodl,w,c
 38705  005554  241B               	addwf	IRrawToNEC@Raw,w,c
 38706  005556  6ED9               	movwf	fsr2l,c
 38707  005558  50F4               	movf	prodh,w,c
 38708  00555A  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38709  00555C  6EDA               	movwf	fsr2h,c
 38710  00555E  0EA0               	movlw	160
 38711  005560  5CDE               	subwf	postinc2,w,c
 38712  005562  0E0F               	movlw	15
 38713  005564  58DE               	subwfb	postinc2,w,c
 38714  005566  A0D8               	btfss	status,0,c
 38715  005568  D012               	goto	i2l16064
 38716                           
 38717                           ; BSR set to: 0
 38718  00556A  0100               	movlb	0	; () banked
 38719  00556C  5165               	movf	IRrawToNEC@i& (0+255),w,b
 38720  00556E  0D02               	mullw	2
 38721  005570  50F3               	movf	prodl,w,c
 38722  005572  241B               	addwf	IRrawToNEC@Raw,w,c
 38723  005574  6ED9               	movwf	fsr2l,c
 38724  005576  50F4               	movf	prodh,w,c
 38725  005578  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38726  00557A  6EDA               	movwf	fsr2h,c
 38727  00557C  0E89               	movlw	137
 38728  00557E  5CDE               	subwf	postinc2,w,c
 38729  005580  0E13               	movlw	19
 38730  005582  58DE               	subwfb	postinc2,w,c
 38731  005584  B0D8               	btfsc	status,0,c
 38732  005586  D003               	goto	i2l16064
 38733                           
 38734                           ; BSR set to: 0
 38735                           ;IR.c: 162: {
 38736                           ;IR.c: 164: StartBit = i;
 38737  005588  C065  F066         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 38738                           
 38739                           ;IR.c: 165: break;
 38740  00558C  D003               	goto	i2l16068
 38741  00558E                     i2l16064:
 38742                           
 38743                           ; BSR set to: 0
 38744  00558E  0100               	movlb	0	; () banked
 38745  005590  2B65               	incf	IRrawToNEC@i& (0+255),f,b
 38746  005592  D7D7               	goto	i2l16054
 38747  005594                     i2l16068:
 38748                           
 38749                           ; BSR set to: 0
 38750                           ;IR.c: 166: }
 38751                           ;IR.c: 167: }
 38752                           ;IR.c: 168: if((100 - StartBit) < 50)
 38753  005594  0100               	movlb	0	; () banked
 38754  005596  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38755  005598  6E20               	movwf	??_IRrawToNEC& (0+255),c
 38756  00559A  6A21               	clrf	(??_IRrawToNEC+1)& (0+255),c
 38757  00559C  1E20               	comf	??_IRrawToNEC,f,c
 38758  00559E  1E21               	comf	??_IRrawToNEC+1,f,c
 38759  0055A0  4A20               	infsnz	??_IRrawToNEC,f,c
 38760  0055A2  2A21               	incf	??_IRrawToNEC+1,f,c
 38761  0055A4  0E64               	movlw	100
 38762  0055A6  2620               	addwf	??_IRrawToNEC,f,c
 38763  0055A8  0E00               	movlw	0
 38764  0055AA  2221               	addwfc	??_IRrawToNEC+1,f,c
 38765  0055AC  BE21               	btfsc	??_IRrawToNEC+1,7,c
 38766  0055AE  D006               	goto	i2l16070
 38767  0055B0  5021               	movf	??_IRrawToNEC+1,w,c
 38768  0055B2  E106               	bnz	i2l16074
 38769  0055B4  0E32               	movlw	50
 38770  0055B6  5C20               	subwf	??_IRrawToNEC,w,c
 38771  0055B8  B0D8               	btfsc	status,0,c
 38772  0055BA  D002               	goto	i2l16074
 38773  0055BC                     i2l16070:
 38774                           
 38775                           ; BSR set to: 0
 38776                           ;IR.c: 169: {
 38777                           ;IR.c: 171: return 0;
 38778  0055BC  0E00               	movlw	0
 38779                           
 38780                           ; BSR set to: 0
 38781  0055BE  0012               	return	
 38782  0055C0                     i2l16074:
 38783                           
 38784                           ; BSR set to: 0
 38785                           ;IR.c: 172: }
 38786                           ;IR.c: 174: StartBit++;
 38787  0055C0  0100               	movlb	0	; () banked
 38788  0055C2  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 38789                           
 38790                           ; BSR set to: 0
 38791                           ;IR.c: 175: if(Raw[StartBit] >= 925 && Raw[StartBit] <= 1250 )
 38792  0055C4  0100               	movlb	0	; () banked
 38793  0055C6  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38794  0055C8  0D02               	mullw	2
 38795  0055CA  50F3               	movf	prodl,w,c
 38796  0055CC  241B               	addwf	IRrawToNEC@Raw,w,c
 38797  0055CE  6ED9               	movwf	fsr2l,c
 38798  0055D0  50F4               	movf	prodh,w,c
 38799  0055D2  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38800  0055D4  6EDA               	movwf	fsr2h,c
 38801  0055D6  0E9D               	movlw	157
 38802  0055D8  5CDE               	subwf	postinc2,w,c
 38803  0055DA  0E03               	movlw	3
 38804  0055DC  58DE               	subwfb	postinc2,w,c
 38805  0055DE  A0D8               	btfss	status,0,c
 38806  0055E0  D053               	goto	i2l16096
 38807                           
 38808                           ; BSR set to: 0
 38809  0055E2  0100               	movlb	0	; () banked
 38810  0055E4  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38811  0055E6  0D02               	mullw	2
 38812  0055E8  50F3               	movf	prodl,w,c
 38813  0055EA  241B               	addwf	IRrawToNEC@Raw,w,c
 38814  0055EC  6ED9               	movwf	fsr2l,c
 38815  0055EE  50F4               	movf	prodh,w,c
 38816  0055F0  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38817  0055F2  6EDA               	movwf	fsr2h,c
 38818  0055F4  0EE3               	movlw	227
 38819  0055F6  5CDE               	subwf	postinc2,w,c
 38820  0055F8  0E04               	movlw	4
 38821  0055FA  58DE               	subwfb	postinc2,w,c
 38822  0055FC  B0D8               	btfsc	status,0,c
 38823  0055FE  D044               	goto	i2l16096
 38824                           
 38825                           ; BSR set to: 0
 38826                           ;IR.c: 176: {
 38827                           ;IR.c: 178: StartBit++;
 38828  005600  0100               	movlb	0	; () banked
 38829  005602  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 38830                           
 38831                           ; BSR set to: 0
 38832                           ;IR.c: 179: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 38833  005604  0100               	movlb	0	; () banked
 38834  005606  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38835  005608  0D02               	mullw	2
 38836  00560A  50F3               	movf	prodl,w,c
 38837  00560C  241B               	addwf	IRrawToNEC@Raw,w,c
 38838  00560E  6ED9               	movwf	fsr2l,c
 38839  005610  50F4               	movf	prodh,w,c
 38840  005612  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38841  005614  6EDA               	movwf	fsr2h,c
 38842  005616  0E01               	movlw	1
 38843  005618  50DB               	movf	plusw2,w,c
 38844  00561A  E104               	bnz	i2u2016_40
 38845  00561C  0E7D               	movlw	125
 38846  00561E  5CDE               	subwf	postinc2,w,c
 38847  005620  A0D8               	btfss	status,0,c
 38848  005622  D053               	goto	i2l16104
 38849  005624                     i2u2016_40:
 38850                           
 38851                           ; BSR set to: 0
 38852  005624  0100               	movlb	0	; () banked
 38853  005626  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38854  005628  0D02               	mullw	2
 38855  00562A  50F3               	movf	prodl,w,c
 38856  00562C  241B               	addwf	IRrawToNEC@Raw,w,c
 38857  00562E  6ED9               	movwf	fsr2l,c
 38858  005630  50F4               	movf	prodh,w,c
 38859  005632  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38860  005634  6EDA               	movwf	fsr2h,c
 38861  005636  0E59               	movlw	89
 38862  005638  5CDE               	subwf	postinc2,w,c
 38863  00563A  0E02               	movlw	2
 38864  00563C  58DE               	subwfb	postinc2,w,c
 38865  00563E  B0D8               	btfsc	status,0,c
 38866  005640  D044               	goto	i2l16104
 38867                           
 38868                           ; BSR set to: 0
 38869                           ;IR.c: 180: {
 38870                           ;IR.c: 182: StartBit++;
 38871  005642  0100               	movlb	0	; () banked
 38872  005644  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 38873                           
 38874                           ; BSR set to: 0
 38875                           ;IR.c: 183: if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 38876  005646  0100               	movlb	0	; () banked
 38877  005648  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38878  00564A  0D02               	mullw	2
 38879  00564C  50F3               	movf	prodl,w,c
 38880  00564E  241B               	addwf	IRrawToNEC@Raw,w,c
 38881  005650  6ED9               	movwf	fsr2l,c
 38882  005652  50F4               	movf	prodh,w,c
 38883  005654  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38884  005656  6EDA               	movwf	fsr2h,c
 38885  005658  0EC8               	movlw	200
 38886  00565A  5CDE               	subwf	postinc2,w,c
 38887  00565C  0EAF               	movlw	175
 38888  00565E  58DE               	subwfb	postinc2,w,c
 38889  005660  A0D8               	btfss	status,0,c
 38890  005662  D033               	goto	i2l16104
 38891                           
 38892                           ; BSR set to: 0
 38893  005664  0100               	movlb	0	; () banked
 38894  005666  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38895  005668  0D02               	mullw	2
 38896  00566A  50F3               	movf	prodl,w,c
 38897  00566C  241B               	addwf	IRrawToNEC@Raw,w,c
 38898  00566E  6ED9               	movwf	fsr2l,c
 38899  005670  50F4               	movf	prodh,w,c
 38900  005672  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38901  005674  6EDA               	movwf	fsr2h,c
 38902  005676  0E51               	movlw	81
 38903  005678  5CDE               	subwf	postinc2,w,c
 38904  00567A  0EC3               	movlw	195
 38905  00567C  58DE               	subwfb	postinc2,w,c
 38906  00567E  B0D8               	btfsc	status,0,c
 38907  005680  D024               	goto	i2l16104
 38908                           
 38909                           ; BSR set to: 0
 38910                           ;IR.c: 184: {
 38911                           ;IR.c: 186: return 2;
 38912  005682  0E02               	movlw	2
 38913                           
 38914                           ; BSR set to: 0
 38915  005684  0012               	return	
 38916                           
 38917                           ; BSR set to: 0
 38918                           ;IR.c: 187: }
 38919                           ;IR.c: 188: }
 38920                           ;IR.c: 189: }
 38921                           
 38922                           ; BSR set to: 0
 38923  005686  D021               	goto	i2l16104
 38924  005688                     i2l16096:
 38925                           
 38926                           ; BSR set to: 0
 38927                           ;IR.c: 190: else if(Raw[StartBit] < 1750 || Raw[StartBit] > 2750 )
 38928  005688  0100               	movlb	0	; () banked
 38929  00568A  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38930  00568C  0D02               	mullw	2
 38931  00568E  50F3               	movf	prodl,w,c
 38932  005690  241B               	addwf	IRrawToNEC@Raw,w,c
 38933  005692  6ED9               	movwf	fsr2l,c
 38934  005694  50F4               	movf	prodh,w,c
 38935  005696  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38936  005698  6EDA               	movwf	fsr2h,c
 38937  00569A  0ED6               	movlw	214
 38938  00569C  5CDE               	subwf	postinc2,w,c
 38939  00569E  0E06               	movlw	6
 38940  0056A0  58DE               	subwfb	postinc2,w,c
 38941  0056A2  A0D8               	btfss	status,0,c
 38942  0056A4  D00F               	goto	i2l16100
 38943                           
 38944                           ; BSR set to: 0
 38945  0056A6  0100               	movlb	0	; () banked
 38946  0056A8  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 38947  0056AA  0D02               	mullw	2
 38948  0056AC  50F3               	movf	prodl,w,c
 38949  0056AE  241B               	addwf	IRrawToNEC@Raw,w,c
 38950  0056B0  6ED9               	movwf	fsr2l,c
 38951  0056B2  50F4               	movf	prodh,w,c
 38952  0056B4  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 38953  0056B6  6EDA               	movwf	fsr2h,c
 38954  0056B8  0EBF               	movlw	191
 38955  0056BA  5CDE               	subwf	postinc2,w,c
 38956  0056BC  0E0A               	movlw	10
 38957  0056BE  58DE               	subwfb	postinc2,w,c
 38958  0056C0  A0D8               	btfss	status,0,c
 38959  0056C2  D003               	goto	i2l16104
 38960  0056C4                     i2l16100:
 38961                           
 38962                           ; BSR set to: 0
 38963                           ;IR.c: 191: {
 38964                           ;IR.c: 193: return 0;
 38965  0056C4  0E00               	movlw	0
 38966                           
 38967                           ; BSR set to: 0
 38968  0056C6  0012               	return	
 38969                           
 38970                           ; BSR set to: 0
 38971  0056C8  D000               	goto	i2l16104
 38972  0056CA                     i2l16104:
 38973                           
 38974                           ; BSR set to: 0
 38975                           ;IR.c: 194: }
 38976                           ;IR.c: 196: StartBit++;
 38977  0056CA  0100               	movlb	0	; () banked
 38978  0056CC  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 38979                           
 38980                           ; BSR set to: 0
 38981                           ;IR.c: 197: for(i = StartBit; i < 100;i++)
 38982  0056CE  C066  F065         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 38983  0056D2                     i2l16108:
 38984                           
 38985                           ; BSR set to: 0
 38986  0056D2  0E63               	movlw	99
 38987  0056D4  0100               	movlb	0	; () banked
 38988  0056D6  6565               	cpfsgt	IRrawToNEC@i& (0+255),b
 38989  0056D8  D001               	goto	i2l16112
 38990                           
 38991                           ; BSR set to: 0
 38992  0056DA  D0E0               	goto	i2l16188
 38993  0056DC                     i2l16112:
 38994                           
 38995                           ; BSR set to: 0
 38996                           ;IR.c: 198: {
 38997                           ;IR.c: 199: if(Raw[StartBit] >= 125 && Raw[StartBit] <= 600 )
 38998  0056DC  0100               	movlb	0	; () banked
 38999  0056DE  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39000  0056E0  0D02               	mullw	2
 39001  0056E2  50F3               	movf	prodl,w,c
 39002  0056E4  241B               	addwf	IRrawToNEC@Raw,w,c
 39003  0056E6  6ED9               	movwf	fsr2l,c
 39004  0056E8  50F4               	movf	prodh,w,c
 39005  0056EA  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39006  0056EC  6EDA               	movwf	fsr2h,c
 39007  0056EE  0E01               	movlw	1
 39008  0056F0  50DB               	movf	plusw2,w,c
 39009  0056F2  E104               	bnz	i2u2023_40
 39010  0056F4  0E7D               	movlw	125
 39011  0056F6  5CDE               	subwf	postinc2,w,c
 39012  0056F8  A0D8               	btfss	status,0,c
 39013  0056FA  D02A               	goto	i2l16128
 39014  0056FC                     i2u2023_40:
 39015                           
 39016                           ; BSR set to: 0
 39017  0056FC  0100               	movlb	0	; () banked
 39018  0056FE  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39019  005700  0D02               	mullw	2
 39020  005702  50F3               	movf	prodl,w,c
 39021  005704  241B               	addwf	IRrawToNEC@Raw,w,c
 39022  005706  6ED9               	movwf	fsr2l,c
 39023  005708  50F4               	movf	prodh,w,c
 39024  00570A  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39025  00570C  6EDA               	movwf	fsr2h,c
 39026  00570E  0E59               	movlw	89
 39027  005710  5CDE               	subwf	postinc2,w,c
 39028  005712  0E02               	movlw	2
 39029  005714  58DE               	subwfb	postinc2,w,c
 39030  005716  B0D8               	btfsc	status,0,c
 39031  005718  D01B               	goto	i2l16128
 39032                           
 39033                           ; BSR set to: 0
 39034                           ;IR.c: 200: {
 39035                           ;IR.c: 201: if(!first)
 39036  00571A  0100               	movlb	0	; () banked
 39037  00571C  5164               	movf	IRrawToNEC@first& (0+255),w,b
 39038  00571E  0100               	movlb	0	; () banked
 39039  005720  A4D8               	btfss	status,2,c
 39040  005722  D002               	goto	i2l16120
 39041                           
 39042                           ; BSR set to: 0
 39043                           ;IR.c: 202: {
 39044                           ;IR.c: 204: first = 1;
 39045  005724  0E01               	movlw	1
 39046  005726  D049               	goto	L44
 39047  005728                     i2l16120:
 39048                           
 39049                           ; BSR set to: 0
 39050                           ;IR.c: 206: else
 39051                           ;IR.c: 207: {
 39052                           ;IR.c: 209: first = 0;
 39053  005728  0E00               	movlw	0
 39054  00572A  0100               	movlb	0	; () banked
 39055  00572C  6F64               	movwf	IRrawToNEC@first& (0+255),b
 39056                           
 39057                           ; BSR set to: 0
 39058                           ;IR.c: 210: NECtemp <<= 1;
 39059  00572E  0100               	movlb	0	; () banked
 39060  005730  90D8               	bcf	status,0,c
 39061  005732  3760               	rlcf	IRrawToNEC@NECtemp& (0+255),f,b
 39062  005734  3761               	rlcf	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 39063  005736  3762               	rlcf	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 39064  005738  3763               	rlcf	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 39065                           
 39066                           ; BSR set to: 0
 39067                           ;IR.c: 211: if(!Invert)
 39068  00573A  501F               	movf	IRrawToNEC@Invert,w,c
 39069  00573C  A4D8               	btfss	status,2,c
 39070  00573E  D0A9               	goto	i2l16184
 39071                           
 39072                           ; BSR set to: 0
 39073                           ;IR.c: 212: {
 39074                           ;IR.c: 213: NECtemp++;
 39075  005740  0E01               	movlw	1
 39076  005742  0100               	movlb	0	; () banked
 39077  005744  2760               	addwf	IRrawToNEC@NECtemp& (0+255),f,b
 39078  005746  0E00               	movlw	0
 39079  005748  2361               	addwfc	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 39080  00574A  2362               	addwfc	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 39081  00574C  2363               	addwfc	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 39082                           
 39083                           ; BSR set to: 0
 39084                           ;IR.c: 214: }
 39085                           ;IR.c: 215: }
 39086                           ;IR.c: 216: }
 39087                           
 39088                           ; BSR set to: 0
 39089  00574E  D0A1               	goto	i2l16184
 39090  005750                     i2l16128:
 39091                           
 39092                           ; BSR set to: 0
 39093                           ;IR.c: 217: else if(Raw[StartBit] >= 700 && Raw[StartBit] <= 950)
 39094  005750  0100               	movlb	0	; () banked
 39095  005752  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39096  005754  0D02               	mullw	2
 39097  005756  50F3               	movf	prodl,w,c
 39098  005758  241B               	addwf	IRrawToNEC@Raw,w,c
 39099  00575A  6ED9               	movwf	fsr2l,c
 39100  00575C  50F4               	movf	prodh,w,c
 39101  00575E  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39102  005760  6EDA               	movwf	fsr2h,c
 39103  005762  0EBC               	movlw	188
 39104  005764  5CDE               	subwf	postinc2,w,c
 39105  005766  0E02               	movlw	2
 39106  005768  58DE               	subwfb	postinc2,w,c
 39107  00576A  A0D8               	btfss	status,0,c
 39108  00576C  D02C               	goto	i2l16146
 39109                           
 39110                           ; BSR set to: 0
 39111  00576E  0100               	movlb	0	; () banked
 39112  005770  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39113  005772  0D02               	mullw	2
 39114  005774  50F3               	movf	prodl,w,c
 39115  005776  241B               	addwf	IRrawToNEC@Raw,w,c
 39116  005778  6ED9               	movwf	fsr2l,c
 39117  00577A  50F4               	movf	prodh,w,c
 39118  00577C  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39119  00577E  6EDA               	movwf	fsr2h,c
 39120  005780  0EB7               	movlw	183
 39121  005782  5CDE               	subwf	postinc2,w,c
 39122  005784  0E03               	movlw	3
 39123  005786  58DE               	subwfb	postinc2,w,c
 39124  005788  B0D8               	btfsc	status,0,c
 39125  00578A  D01D               	goto	i2l16146
 39126                           
 39127                           ; BSR set to: 0
 39128                           ;IR.c: 218: {
 39129                           ;IR.c: 219: if(first)
 39130  00578C  0100               	movlb	0	; () banked
 39131  00578E  5164               	movf	IRrawToNEC@first& (0+255),w,b
 39132  005790  0100               	movlb	0	; () banked
 39133  005792  B4D8               	btfsc	status,2,c
 39134  005794  D015               	goto	i2l16142
 39135                           
 39136                           ; BSR set to: 0
 39137                           ;IR.c: 220: {
 39138                           ;IR.c: 222: NECtemp <<= 1;
 39139  005796  0100               	movlb	0	; () banked
 39140  005798  90D8               	bcf	status,0,c
 39141  00579A  3760               	rlcf	IRrawToNEC@NECtemp& (0+255),f,b
 39142  00579C  3761               	rlcf	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 39143  00579E  3762               	rlcf	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 39144  0057A0  3763               	rlcf	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 39145                           
 39146                           ; BSR set to: 0
 39147                           ;IR.c: 223: if(Invert)
 39148  0057A2  501F               	movf	IRrawToNEC@Invert,w,c
 39149  0057A4  B4D8               	btfsc	status,2,c
 39150  0057A6  D008               	goto	i2l16140
 39151                           
 39152                           ; BSR set to: 0
 39153                           ;IR.c: 224: {
 39154                           ;IR.c: 225: NECtemp++;
 39155  0057A8  0E01               	movlw	1
 39156  0057AA  0100               	movlb	0	; () banked
 39157  0057AC  2760               	addwf	IRrawToNEC@NECtemp& (0+255),f,b
 39158  0057AE  0E00               	movlw	0
 39159  0057B0  2361               	addwfc	(IRrawToNEC@NECtemp+1)& (0+255),f,b
 39160  0057B2  2362               	addwfc	(IRrawToNEC@NECtemp+2)& (0+255),f,b
 39161  0057B4  2363               	addwfc	(IRrawToNEC@NECtemp+3)& (0+255),f,b
 39162  0057B6  D000               	goto	i2l16140
 39163  0057B8                     i2l16140:
 39164                           
 39165                           ; BSR set to: 0
 39166                           ;IR.c: 226: }
 39167                           ;IR.c: 227: first = 0;
 39168  0057B8  0E00               	movlw	0
 39169  0057BA                     L44:
 39170  0057BA  0100               	movlb	0	; () banked
 39171  0057BC  6F64               	movwf	IRrawToNEC@first& (0+255),b
 39172                           
 39173                           ;IR.c: 228: }
 39174  0057BE  D069               	goto	i2l16184
 39175  0057C0                     i2l16142:
 39176                           
 39177                           ; BSR set to: 0
 39178                           ;IR.c: 229: else
 39179                           ;IR.c: 230: {
 39180                           ;IR.c: 232: return 0;
 39181  0057C0  0E00               	movlw	0
 39182                           
 39183                           ; BSR set to: 0
 39184  0057C2  0012               	return	
 39185                           
 39186                           ; BSR set to: 0
 39187                           ;IR.c: 233: }
 39188                           ;IR.c: 234: }
 39189  0057C4  D066               	goto	i2l16184
 39190  0057C6                     i2l16146:
 39191                           
 39192                           ; BSR set to: 0
 39193                           ;IR.c: 235: else if(Raw[StartBit] == 0 && first == 1)
 39194  0057C6  0100               	movlb	0	; () banked
 39195  0057C8  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39196  0057CA  0D02               	mullw	2
 39197  0057CC  50F3               	movf	prodl,w,c
 39198  0057CE  241B               	addwf	IRrawToNEC@Raw,w,c
 39199  0057D0  6ED9               	movwf	fsr2l,c
 39200  0057D2  50F4               	movf	prodh,w,c
 39201  0057D4  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39202  0057D6  6EDA               	movwf	fsr2h,c
 39203  0057D8  50DE               	movf	postinc2,w,c
 39204  0057DA  10DE               	iorwf	postinc2,w,c
 39205  0057DC  A4D8               	btfss	status,2,c
 39206  0057DE  D013               	goto	i2l16158
 39207                           
 39208                           ; BSR set to: 0
 39209  0057E0  0100               	movlb	0	; () banked
 39210  0057E2  0564               	decf	IRrawToNEC@first& (0+255),w,b
 39211  0057E4  A4D8               	btfss	status,2,c
 39212  0057E6  D00F               	goto	i2l16158
 39213  0057E8                     i2l16150:
 39214                           
 39215                           ; BSR set to: 0
 39216                           ;IR.c: 236: {
 39217                           ;IR.c: 241: *NEC = NECtemp;
 39218  0057E8  C01D  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 39219  0057EC  C01E  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 39220  0057F0  C060  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 39221  0057F4  C061  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 39222  0057F8  C062  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 39223  0057FC  C063  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 39224  005800  D021               	goto	i2l16164
 39225                           
 39226                           ; BSR set to: 0
 39227                           
 39228                           ; BSR set to: 0
 39229                           ;IR.c: 242: return 1;
 39230  005802  0012               	return	
 39231                           
 39232                           ; BSR set to: 0
 39233                           ;IR.c: 243: }
 39234  005804  D046               	goto	i2l16184
 39235  005806                     i2l16158:
 39236                           
 39237                           ; BSR set to: 0
 39238                           ;IR.c: 244: else if(Raw[StartBit] >= 19000 && Raw[StartBit] <= 21000)
 39239  005806  0100               	movlb	0	; () banked
 39240  005808  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39241  00580A  0D02               	mullw	2
 39242  00580C  50F3               	movf	prodl,w,c
 39243  00580E  241B               	addwf	IRrawToNEC@Raw,w,c
 39244  005810  6ED9               	movwf	fsr2l,c
 39245  005812  50F4               	movf	prodh,w,c
 39246  005814  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39247  005816  6EDA               	movwf	fsr2h,c
 39248  005818  0E38               	movlw	56
 39249  00581A  5CDE               	subwf	postinc2,w,c
 39250  00581C  0E4A               	movlw	74
 39251  00581E  58DE               	subwfb	postinc2,w,c
 39252  005820  A0D8               	btfss	status,0,c
 39253  005822  D013               	goto	i2l16170
 39254                           
 39255                           ; BSR set to: 0
 39256  005824  0100               	movlb	0	; () banked
 39257  005826  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39258  005828  0D02               	mullw	2
 39259  00582A  50F3               	movf	prodl,w,c
 39260  00582C  241B               	addwf	IRrawToNEC@Raw,w,c
 39261  00582E  6ED9               	movwf	fsr2l,c
 39262  005830  50F4               	movf	prodh,w,c
 39263  005832  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39264  005834  6EDA               	movwf	fsr2h,c
 39265  005836  0E09               	movlw	9
 39266  005838  5CDE               	subwf	postinc2,w,c
 39267  00583A  0E52               	movlw	82
 39268  00583C  58DE               	subwfb	postinc2,w,c
 39269  00583E  B0D8               	btfsc	status,0,c
 39270  005840  D004               	goto	i2l16170
 39271  005842  D7D2               	goto	i2l16150
 39272  005844                     i2l16164:
 39273                           
 39274                           ; BSR set to: 0
 39275                           ;IR.c: 248: return 1;
 39276  005844  0E01               	movlw	1
 39277                           
 39278                           ; BSR set to: 0
 39279  005846  0012               	return	
 39280                           
 39281                           ; BSR set to: 0
 39282                           ;IR.c: 249: }
 39283  005848  D024               	goto	i2l16184
 39284  00584A                     i2l16170:
 39285                           
 39286                           ; BSR set to: 0
 39287                           ;IR.c: 250: else if(Raw[StartBit] >= 45000 && Raw[StartBit] <= 50000)
 39288  00584A  0100               	movlb	0	; () banked
 39289  00584C  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39290  00584E  0D02               	mullw	2
 39291  005850  50F3               	movf	prodl,w,c
 39292  005852  241B               	addwf	IRrawToNEC@Raw,w,c
 39293  005854  6ED9               	movwf	fsr2l,c
 39294  005856  50F4               	movf	prodh,w,c
 39295  005858  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39296  00585A  6EDA               	movwf	fsr2h,c
 39297  00585C  0EC8               	movlw	200
 39298  00585E  5CDE               	subwf	postinc2,w,c
 39299  005860  0EAF               	movlw	175
 39300  005862  58DE               	subwfb	postinc2,w,c
 39301  005864  A0D8               	btfss	status,0,c
 39302  005866  D012               	goto	i2l16180
 39303                           
 39304                           ; BSR set to: 0
 39305  005868  0100               	movlb	0	; () banked
 39306  00586A  5166               	movf	IRrawToNEC@StartBit& (0+255),w,b
 39307  00586C  0D02               	mullw	2
 39308  00586E  50F3               	movf	prodl,w,c
 39309  005870  241B               	addwf	IRrawToNEC@Raw,w,c
 39310  005872  6ED9               	movwf	fsr2l,c
 39311  005874  50F4               	movf	prodh,w,c
 39312  005876  201C               	addwfc	IRrawToNEC@Raw+1,w,c
 39313  005878  6EDA               	movwf	fsr2h,c
 39314  00587A  0E51               	movlw	81
 39315  00587C  5CDE               	subwf	postinc2,w,c
 39316  00587E  0EC3               	movlw	195
 39317  005880  58DE               	subwfb	postinc2,w,c
 39318  005882  B0D8               	btfsc	status,0,c
 39319  005884  D003               	goto	i2l16180
 39320                           
 39321                           ; BSR set to: 0
 39322                           ;IR.c: 251: {
 39323                           ;IR.c: 253: return 2;
 39324  005886  0E02               	movlw	2
 39325                           
 39326                           ; BSR set to: 0
 39327  005888  0012               	return	
 39328                           
 39329                           ; BSR set to: 0
 39330                           ;IR.c: 254: }
 39331  00588A  D003               	goto	i2l16184
 39332  00588C                     i2l16180:
 39333                           
 39334                           ; BSR set to: 0
 39335                           ;IR.c: 255: else
 39336                           ;IR.c: 256: {
 39337                           ;IR.c: 257: return 0;
 39338  00588C  0E00               	movlw	0
 39339                           
 39340                           ; BSR set to: 0
 39341  00588E  0012               	return	
 39342                           
 39343                           ; BSR set to: 0
 39344                           
 39345                           ; BSR set to: 0
 39346                           
 39347                           ; BSR set to: 0
 39348                           
 39349                           ; BSR set to: 0
 39350  005890  D000               	goto	i2l16184
 39351  005892                     i2l16184:
 39352                           
 39353                           ; BSR set to: 0
 39354                           ;IR.c: 258: }
 39355                           ;IR.c: 259: StartBit++;
 39356  005892  0100               	movlb	0	; () banked
 39357  005894  2B66               	incf	IRrawToNEC@StartBit& (0+255),f,b
 39358  005896  0100               	movlb	0	; () banked
 39359  005898  2B65               	incf	IRrawToNEC@i& (0+255),f,b
 39360  00589A  D71B               	goto	i2l16108
 39361  00589C                     i2l16188:
 39362                           
 39363                           ; BSR set to: 0
 39364                           ;IR.c: 260: }
 39365                           ;IR.c: 262: return 0;
 39366  00589C  0E00               	movlw	0
 39367  00589E  0012               	return	
 39368                           
 39369                           ; BSR set to: 0
 39370                           
 39371                           ; BSR set to: 0
 39372  0058A0  0012               	return		;funcret
 39373  0058A2                     __end_of_IRrawToNEC:
 39374                           	opt stack 0
 39375                           pclatu	equ	0xFFB
 39376                           pclath	equ	0xFFA
 39377                           tblptru	equ	0xFF8
 39378                           tblptrh	equ	0xFF7
 39379                           tblptrl	equ	0xFF6
 39380                           tablat	equ	0xFF5
 39381                           prodh	equ	0xFF4
 39382                           prodl	equ	0xFF3
 39383                           intcon	equ	0xFF2
 39384                           intcon2	equ	0xFF1
 39385                           indf0	equ	0xFEF
 39386                           postinc0	equ	0xFEE
 39387                           plusw0	equ	0xFEB
 39388                           fsr0h	equ	0xFEA
 39389                           fsr0l	equ	0xFE9
 39390                           wreg	equ	0xFE8
 39391                           indf1	equ	0xFE7
 39392                           postdec1	equ	0xFE5
 39393                           fsr1h	equ	0xFE2
 39394                           fsr1l	equ	0xFE1
 39395                           bsr	equ	0xFE0
 39396                           indf2	equ	0xFDF
 39397                           postinc2	equ	0xFDE
 39398                           postdec2	equ	0xFDD
 39399                           plusw2	equ	0xFDB
 39400                           fsr2h	equ	0xFDA
 39401                           fsr2l	equ	0xFD9
 39402                           status	equ	0xFD8
 39403                           pclatu	equ	0xFFB
 39404                           pclath	equ	0xFFA
 39405                           tblptru	equ	0xFF8
 39406                           tblptrh	equ	0xFF7
 39407                           tblptrl	equ	0xFF6
 39408                           tablat	equ	0xFF5
 39409                           prodh	equ	0xFF4
 39410                           prodl	equ	0xFF3
 39411                           intcon	equ	0xFF2
 39412                           intcon2	equ	0xFF1
 39413                           indf0	equ	0xFEF
 39414                           postinc0	equ	0xFEE
 39415                           plusw0	equ	0xFEB
 39416                           fsr0h	equ	0xFEA
 39417                           fsr0l	equ	0xFE9
 39418                           wreg	equ	0xFE8
 39419                           indf1	equ	0xFE7
 39420                           postdec1	equ	0xFE5
 39421                           fsr1h	equ	0xFE2
 39422                           fsr1l	equ	0xFE1
 39423                           bsr	equ	0xFE0
 39424                           indf2	equ	0xFDF
 39425                           postinc2	equ	0xFDE
 39426                           postdec2	equ	0xFDD
 39427                           plusw2	equ	0xFDB
 39428                           fsr2h	equ	0xFDA
 39429                           fsr2l	equ	0xFD9
 39430                           status	equ	0xFD8
 39431                           
 39432                           	psect	rparam
 39433  0000                     pclatu	equ	0xFFB
 39434                           pclath	equ	0xFFA
 39435                           tblptru	equ	0xFF8
 39436                           tblptrh	equ	0xFF7
 39437                           tblptrl	equ	0xFF6
 39438                           tablat	equ	0xFF5
 39439                           prodh	equ	0xFF4
 39440                           prodl	equ	0xFF3
 39441                           intcon	equ	0xFF2
 39442                           intcon2	equ	0xFF1
 39443                           indf0	equ	0xFEF
 39444                           postinc0	equ	0xFEE
 39445                           plusw0	equ	0xFEB
 39446                           fsr0h	equ	0xFEA
 39447                           fsr0l	equ	0xFE9
 39448                           wreg	equ	0xFE8
 39449                           indf1	equ	0xFE7
 39450                           postdec1	equ	0xFE5
 39451                           fsr1h	equ	0xFE2
 39452                           fsr1l	equ	0xFE1
 39453                           bsr	equ	0xFE0
 39454                           indf2	equ	0xFDF
 39455                           postinc2	equ	0xFDE
 39456                           postdec2	equ	0xFDD
 39457                           plusw2	equ	0xFDB
 39458                           fsr2h	equ	0xFDA
 39459                           fsr2l	equ	0xFD9
 39460                           status	equ	0xFD8


Data Sizes:
    Strings     3156
    Constant    657
    Data        64
    BSS         904
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      68
    BANK0           160    122     132
    BANK1           256    255     256
    BANK2           256    153     230
    BANK3           256    255     255
    BANK4           256      0     136
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0     200
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_151(CODE[7]), sprintf@c(BANK1[1]), Frequency(CODE[4]), PCBVersion(CODE[5]), 
		 -> FirmVersion(CODE[9]), GetNumber@temp(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_106(CODE[19]), STR_104(CODE[15]), STR_89(CODE[27]), STR_88(CODE[16]), 
		 -> STR_87(CODE[29]), STR_86(CODE[21]), STR_84(CODE[20]), STR_76(CODE[44]), 
		 -> STR_75(CODE[54]), STR_74(CODE[54]), STR_73(CODE[63]), STR_51(CODE[44]), 
		 -> STR_50(CODE[46]), STR_48(CODE[44]), STR_47(CODE[21]), STR_33(CODE[17]), 
		 -> STR_32(CODE[17]), STR_31(CODE[20]), STR_29(CODE[23]), STR_28(CODE[21]), 
		 -> STR_27(CODE[21]), STR_17(CODE[28]), STR_4(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@buf(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    SendRF_wait@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    SendRF@Code	PTR const unsigned char  size(2) Largest target is 16
		 -> Conf2_ChannelH_3_OFF(CODE[16]), Conf2_ChannelH_3_ON(CODE[16]), Conf2_ChannelH_2_OFF(CODE[16]), Conf2_ChannelH_2_ON(CODE[16]), 
		 -> Conf2_ChannelH_1_OFF(CODE[16]), Conf2_ChannelH_1_ON(CODE[16]), Conf2_ChannelD_OFF(CODE[16]), Conf2_ChannelD_ON(CODE[16]), 
		 -> Conf2_ChannelB_OFF(CODE[16]), Conf2_ChannelB_ON(CODE[16]), Conf1_ChannelF(CODE[12]), Conf1_ChannelE(CODE[12]), 
		 -> Conf1_ChannelD(CODE[12]), 

    UseBluetooth@String	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    DecodeNEC@address	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecAddress(BANK2[1]), IRaddress(BANK0[1]), 

    DecodeNEC@command	PTR unsigned char  size(2) Largest target is 1
		 -> UseBluetooth@NecCommand(BANK2[1]), IRcommand(BANK1[1]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK0[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(BANK0[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 200
		 -> IRRawCode(BANK7[200]), 

    GetEEPROM@Temp	PTR struct EEdata size(2) Largest target is 136
		 -> SyncEEPROMToGlobal@Temp(BANK1[136]), 

    InternalADC_Read@ADCcounts	PTR unsigned int  size(2) Largest target is 2
		 -> ReadVoltage@temp(BANK0[2]), 

    UARTcommandMenu@Desc	PTR unsigned char  size(2) Largest target is 49
		 -> STR_147(CODE[32]), STR_146(CODE[31]), STR_145(CODE[32]), STR_144(CODE[31]), 
		 -> STR_143(CODE[32]), STR_142(CODE[31]), STR_141(CODE[20]), STR_140(CODE[19]), 
		 -> STR_139(CODE[23]), STR_138(CODE[22]), STR_137(CODE[19]), STR_136(CODE[19]), 
		 -> STR_135(CODE[19]), STR_133(CODE[40]), STR_131(CODE[46]), STR_129(CODE[46]), 
		 -> STR_127(CODE[46]), STR_125(CODE[46]), STR_123(CODE[46]), STR_121(CODE[46]), 
		 -> STR_119(CODE[49]), STR_117(CODE[49]), STR_115(CODE[49]), STR_113(CODE[49]), 
		 -> STR_111(CODE[49]), STR_109(CODE[49]), STR_107(CODE[24]), STR_105(CODE[25]), 
		 -> STR_102(CODE[28]), STR_99(CODE[35]), STR_97(CODE[32]), STR_95(CODE[10]), 

    UARTcommandMenu@Command	PTR unsigned char  size(2) Largest target is 100
		 -> STR_132(CODE[5]), STR_130(CODE[13]), STR_128(CODE[13]), STR_126(CODE[13]), 
		 -> STR_124(CODE[13]), STR_122(CODE[13]), STR_120(CODE[13]), STR_118(CODE[11]), 
		 -> STR_116(CODE[11]), STR_114(CODE[11]), STR_112(CODE[11]), STR_110(CODE[11]), 
		 -> STR_108(CODE[11]), STR_101(CODE[8]), STR_98(CODE[8]), STR_96(CODE[6]), 
		 -> STR_94(CODE[4]), Conf2_ChannelH_3_OFF_STR(CODE[21]), Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), 
		 -> Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), UseBluetooth@buf(BANK2[100]), 

    UARTstringCRLN@data	PTR unsigned char  size(2) Largest target is 100
		 -> STR_150(CODE[36]), STR_148(CODE[27]), STR_134(CODE[13]), STR_103(CODE[13]), 
		 -> STR_100(CODE[21]), STR_93(CODE[17]), STR_90(CODE[5]), STR_82(CODE[29]), 
		 -> STR_81(CODE[18]), STR_80(CODE[29]), STR_77(CODE[44]), STR_72(CODE[46]), 
		 -> STR_71(CODE[42]), STR_70(CODE[50]), STR_69(CODE[50]), STR_67(CODE[31]), 
		 -> STR_66(CODE[31]), STR_65(CODE[37]), STR_64(CODE[37]), STR_63(CODE[37]), 
		 -> STR_59(CODE[18]), STR_58(CODE[14]), STR_57(CODE[9]), STR_56(CODE[20]), 
		 -> STR_55(CODE[16]), STR_54(CODE[7]), STR_53(CODE[35]), STR_52(CODE[37]), 
		 -> STR_49(CODE[47]), STR_44(CODE[17]), STR_43(CODE[9]), STR_42(CODE[18]), 
		 -> STR_41(CODE[9]), STR_40(CODE[22]), STR_39(CODE[11]), STR_38(CODE[20]), 
		 -> STR_37(CODE[7]), STR_36(CODE[31]), STR_34(CODE[33]), STR_30(CODE[32]), 
		 -> STR_26(CODE[31]), STR_25(CODE[31]), STR_23(CODE[29]), STR_21(CODE[29]), 
		 -> SYNTAX_ERR(CODE[14]), UseBluetooth@buf(BANK2[100]), STR_1(CODE[16]), ProjectName(CODE[26]), 

    UARTstring@data	PTR unsigned char  size(2) Largest target is 255
		 -> STR_149(CODE[28]), STR_92(CODE[13]), STR_79(CODE[32]), STR_68(CODE[14]), 
		 -> SYNTAX_ERR(CODE[14]), UseBluetooth@buf(BANK2[100]), STR_18(CODE[5]), STR_16(CODE[5]), 
		 -> STR_14(CODE[6]), STR_12(CODE[6]), STR_10(CODE[9]), STR_8(CODE[21]), 
		 -> STR_6(CODE[10]), BluetoothInitialSetup@buf(BANK1[50]), STR_2(CODE[4]), ReceivedString(BANK6[255]), 
		 -> CRLN(CODE[3]), 

    GetStringAfterComma@result	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    GetStringAfterComma@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    GetNumber@result	PTR unsigned long  size(2) Largest target is 4
		 -> UseBluetooth@temp(BANK2[4]), UseBluetooth@EnteredNEC(BANK2[4]), 

    GetNumber@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    lowercaseChar@Input	PTR unsigned char  size(2) Largest target is 1
		 -> GetNumber@tempThis(BANK0[1]), StringContainsCaseInsensitive@tempThat(BANK0[1]), StringContainsCaseInsensitive@tempThis(BANK0[1]), StringMatchCaseInsensitive@tempThat(BANK0[1]), 
		 -> StringMatchCaseInsensitive@tempThis(BANK0[1]), 

    lowercaseString@Input	PTR unsigned char  size(2) Largest target is 10
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_62(CODE[7]), STR_61(CODE[9]), STR_60(CODE[7]), STR_46(CODE[4]), 
		 -> STR_45(CODE[13]), STR_24(CODE[4]), STR_22(CODE[6]), STR_20(CODE[6]), 
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), 

    StringContainsCaseInsensitive@This	PTR unsigned char  size(2) Largest target is 255
		 -> Conf2_Channels(CODE[4]), Conf1_Channels(CODE[4]), main@BluetoothString(BANK3[255]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_35(CODE[2]), STR_19(CODE[4]), STR_15(CODE[4]), STR_13(CODE[4]), 
		 -> STR_11(CODE[4]), STR_9(CODE[4]), STR_7(CODE[4]), STR_5(CODE[4]), 
		 -> BluetoothInitialSetup@buf(BANK1[50]), STR_3(CODE[4]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 255
		 -> CommandString(BANK5[255]), main@BluetoothString(BANK3[255]), 

    StringMatchCaseInsensitive@That	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_85(CODE[8]), STR_83(CODE[8]), STR_78(CODE[6]), Conf2_ChannelH_3_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_3_ON_STR(CODE[20]), Conf2_ChannelH_2_OFF_STR(CODE[21]), Conf2_ChannelH_2_ON_STR(CODE[20]), Conf2_ChannelH_1_OFF_STR(CODE[21]), 
		 -> Conf2_ChannelH_1_ON_STR(CODE[20]), Conf2_ChannelD_OFF_STR(CODE[19]), Conf2_ChannelD_ON_STR(CODE[18]), Conf2_ChannelB_OFF_STR(CODE[19]), 
		 -> Conf2_ChannelB_ON_STR(CODE[18]), Conf1_ChannelF_STR(CODE[15]), Conf1_ChannelE_STR(CODE[15]), Conf1_ChannelD_STR(CODE[15]), 

    StringMatchCaseInsensitive@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_91(CODE[4]), 

    StringMatch@This	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 255
		 -> StringAddEqual@temp(BANK1[255]), ReceivedString(BANK6[255]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 255
		 -> main@BluetoothString(BANK3[255]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 200
		 -> IRRawCode(BANK7[200]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 255
		 -> UseBluetooth@rfchannelSTR(BANK2[10]), UseBluetooth@buf(BANK2[100]), BluetoothInitialSetup@RFchannel(BANK1[10]), BluetoothInitialSetup@buf(BANK1[50]), 
		 -> CommandString(BANK5[255]), StringAddEqual@temp(BANK1[255]), ReceivedString(BANK6[255]), main@BluetoothString(BANK3[255]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_cleanBuffer16bit

Critical Paths under _low_isr in COMRAM

    _low_isr->i1_cleanBuffer
    i1_UARTstringCRLN->i1_UARTstring
    i1_UARTstring->i1_UARTchar
    _EraseScreen->i1_UARTchar

Critical Paths under _main in BANK0

    _SendRF_Channel->_SendRF_wait
    _ReadCodeButtons->_delayUS
    _UseBluetooth->_sprintf
    _WaitForIRsignal->_delayUS
    _UARTstringCRLN->_UARTstring
    _UARTcommandMenu->_UARTstring
    _StringMatchCaseInsensitive->_lowercaseChar
    _StringContainsCaseInsensitive->_lowercaseChar
    _StringAddEqual->_BufferCopy
    _BufferCopy->_cleanBuffer
    _SendRF_wait->_SendRF
    _SendNEC_wait->_SendNEC_bytes
    _SendNEC_bytes->_Reverse_4Byte
    _ReadVoltage->___ftmul
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft
    _InternalADC_Read->_delayUS
    _GetNumber->___lmul
    _EncodeNEC->_Reverse_Byte
    _DecodeNEC->_Reverse_Byte
    _Init_System->_InitUART
    _SyncEEPROMToGlobal->_GetEEPROM
    _GetEEPROM->_GetMemoryLong
    _InitUART->_Round
    _Round->___fttol
    ___altoft->___ftpack
    _ClearUSART->_ReadUSART
    _InitIR->_cleanBuffer16bit
    _BluetoothInitialSetup->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftadd
    ___ftsub->___ftadd
    ___ftadd->_fround
    _EnterCommandMode->_delayUS
    _UARTstring->_UARTchar
    _ResetBlue->_delayUS
    _SyncGlobalToEEPROM->_SetEEPROM
    _SetEEPROM->_SetMemoryLong
    _SetMemoryLong->_GetMemoryLong
    _GetMemoryLong->_ReadEEPROM_1Byte
    _SetMemoryChar->_GetMemoryChar
    _GetMemoryChar->_ReadEEPROM_1Byte

Critical Paths under _high_isr in BANK0

    _high_isr->_IRrawToNEC

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _UseBluetooth->_StringAddEqual
    _BluetoothInitialSetup->_sprintf
    _SyncGlobalToEEPROM->_SetEEPROM

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_UseBluetooth

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               262   262      0  410709
                                            121 BANK0      1     1      0
                                            147 BANK2      6     6      0
                                              0 BANK3    255   255      0
                      _BlueConnected
                         _BufferCopy
                         _ClearUSART
                _ConfigureOscillator
                            _InitApp
                        _Init_System
                          _ReadIRpin
                        _ReadVoltage
                           _UARTchar
                         _UARTstring
                     _UARTstringCRLN
                       _UseBluetooth
                          _UseIRCode
                            ___ftadd
                             ___ftge
                            ___ftsub
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _UseIRCode                                           12     6      6   23566
                                             93 BANK0     12     6      6
                          _DecodeNEC
                         _LEDTimerON
                    _ReadCodeButtons
                          _ReadIRpin
                     _ReadPushButton
                     _SendRF_Channel
                 _SyncGlobalToEEPROM
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SendRF_Channel                                       1     1      0    8911
                                             41 BANK0      1     1      0
                        _SendRF_wait
 ---------------------------------------------------------------------------------
 (2) _ReadPushButton                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadCodeButtons                                      1     1      0    2886
                                             37 BANK0      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _UseBluetooth                                       147   144      3  186116
                                              0 BANK2    147   144      3
                         _ClearUSART
                          _DecodeNEC
                          _EncodeNEC
                          _GetNumber
                _GetStringAfterComma
                        _ReadVoltage
                       _SendNEC_wait
                        _SendRF_wait
                     _StringAddEqual
                     _StringContains
      _StringContainsCaseInsensitive
                        _StringMatch
         _StringMatchCaseInsensitive
                 _SyncGlobalToEEPROM
                           _UARTchar
                    _UARTcommandMenu
                         _UARTstring
                     _UARTstringCRLN
                    _WaitForIRsignal
                        _cleanBuffer
                            _delayUS
                    _lowercaseString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercaseString                                      3     1      2     204
                                             28 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _WaitForIRsignal                                      1     1      0   19325
                                             37 BANK0      1     1      0
                         _LEDTimerON
                           _UARTchar
                         _UARTstring
                     _UARTstringCRLN
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _UARTstringCRLN                                       2     0      2   10663
                                             31 BANK0      2     0      2
                           _UARTchar
                         _UARTstring
 ---------------------------------------------------------------------------------
 (2) _UARTcommandMenu                                     11     7      4   10982
                                             31 BANK0     11     7      4
                           _UARTchar
                         _UARTstring
 ---------------------------------------------------------------------------------
 (2) _StringMatchCaseInsensitive                           6     2      4    3257
                                             31 BANK0      6     2      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          5     1      4     315
                                             28 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringContainsCaseInsensitive                        7     3      4    2370
                                             31 BANK0      7     3      4
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     263   261      2   10768
                                             43 BANK0      8     6      2
                                              0 BANK1    255   255      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    5168
                                             36 BANK0      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _SendRF_wait                                          5     0      5    8880
                                             36 BANK0      5     0      5
                         _LEDTimerON
                          _ReadIRpin
                             _SendRF
 ---------------------------------------------------------------------------------
 (4) _SendRF                                               8     3      5     748
                                             28 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _LEDTimerON                                           0     0      0       0
                        _ResetTimer1
 ---------------------------------------------------------------------------------
 (5) _ResetTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SendNEC_wait                                         6     1      5    4915
                                             49 BANK0      6     1      5
                   _CheckReceivingIR
                          _ReadIRpin
                      _SendNEC_bytes
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _SendNEC_bytes                                        5     0      5    1477
                                             44 BANK0      5     0      5
                      _Reverse_4Byte
 ---------------------------------------------------------------------------------
 (4) _Reverse_4Byte                                       16    12      4    1199
                                             28 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (3) _CheckReceivingIR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadVoltage                                          8     5      3   17520
                                             69 BANK0      8     5      3
                   _InternalADC_Read
                  _VoltageDividerOFF
                   _VoltageDividerON
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2692
                                             36 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3272
                                             39 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _VoltageDividerOFF                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InternalADC_Read                                     6     4      2    3109
                                             37 BANK0      6     4      2
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _GetStringAfterComma                                  8     3      5     726
                                             28 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _GetNumber                                           20    15      5    3766
                                             40 BANK0     20    15      5
                           _IsLetter
                             ___lmul
                      _lowercaseChar
 ---------------------------------------------------------------------------------
 (3) _lowercaseChar                                        3     1      2     478
                                             28 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     404
                                             28 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _IsLetter                                             1     1      0      62
                                             28 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EncodeNEC                                           41    37      4     720
                                             32 BANK0     41    37      4
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (2) _DecodeNEC                                           15     7      8    1614
                                             32 BANK0     15     7      8
                       _Reverse_Byte
 ---------------------------------------------------------------------------------
 (3) _Reverse_Byte                                         4     4      0     306
                                             28 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0  143062
                  _EEPROMinitialized
                            _InitADC
                      _InitBluetooth
                             _InitIR
                         _InitTimers
                           _InitUART
                   _SetEEPROMdefault
                 _SyncEEPROMToGlobal
                 _SyncGlobalToEEPROM
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _SyncEEPROMToGlobal                                 143   143      0    3407
                                             73 BANK0      4     4      0
                                              0 BANK1    139   139      0
                          _GetEEPROM
 ---------------------------------------------------------------------------------
 (3) _GetEEPROM                                            8     6      2    2507
                                             65 BANK0      8     6      2
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (2) _SetEEPROMdefault                                     5     5      0    6941
                                             93 BANK0      5     5      0
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _InitUART                                            18    14      4   13617
                                            113 BANK0      8     4      4
                                              0 BANK1     10    10      0
                         _ClearUSART
                   _Local_CloseUSART
                          _OpenUSART
                              _Round
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) _Round                                                7     4      3    8302
                                            106 BANK0      7     4      3
                           ___altoft
                            ___ftadd
                            ___fttol
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    2865
                                             36 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     387
                                             28 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _Local_CloseUSART                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearUSART                                           0     0      0      34
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (3) _ReadUSART                                            1     1      0      34
                                             28 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitTimers                                           0     0      0       0
                         _InitTimer1
                         _InitTimer2
                         _InitTimer3
 ---------------------------------------------------------------------------------
 (3) _InitTimer3                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer2                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitIR                                               0     0      0     371
                         _InitTimer0
                          _ReadIRpin
                        _ResetTimer0
                   _cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (3) _cleanBuffer16bit                                     8     4      4     371
                                             28 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _ResetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitBluetooth                                        0     0      0  108059
                _BluetoothConfigured
              _BluetoothInitialSetup
                          _ResetBlue
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (3) _BluetoothInitialSetup                               61    61      0   94552
                                             36 BANK1     61    61      0
                   _EnterCommandMode
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             51    37     14   62057
                                            106 BANK0     14     0     14
                                              0 BANK1     36    36      0
                        _ReadVoltage (ARG)
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   12847
                                             69 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             28 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   12568
                                             69 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2850
                                             42 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    5496
                                             54 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             28 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             34 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     608
                                             28 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     827
                                             28 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2840
                                             36 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     848
                                             41 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1011
                                             28 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     756
                                             91 BANK0     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    5057
                                             91 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4539
                                             79 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2584
                                             28 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     142
                                             28 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1276
                                             28 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (4) _EnterCommandMode                                     1     1      0   17396
                                             37 BANK0      1     1      0
                      _BlueConnected
                          _ResetBlue
                     _StringContains
                         _UARTstring
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    4221
                                             28 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _UARTstring                                           2     0      2    5720
                                             29 BANK0      2     0      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (5) _UARTchar                                             1     1      0      62
                                             28 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _StringContains                                       6     2      4    1738
                                             28 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _ResetBlue                                            0     0      0    2840
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _delayUS                                              9     5      4    2840
                                             28 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (5) _BlueConnected                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BluetoothConfigured                                  0     0      0    6446
                 _SyncGlobalToEEPROM
 ---------------------------------------------------------------------------------
 (2) _SyncGlobalToEEPROM                                   0     0      0    6446
                          _SetEEPROM
 ---------------------------------------------------------------------------------
 (3) _SetEEPROM                                          151    11    140    6446
                                             82 BANK0     11    11      0
                                              0 BANK1    140     0    140
                      _SetMemoryChar
                      _SetMemoryLong
 ---------------------------------------------------------------------------------
 (4) _SetMemoryLong                                       17    12      5    2845
                                             65 BANK0     17    12      5
                      _GetMemoryLong
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _GetMemoryLong                                       33    29      4     969
                                             32 BANK0     33    29      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (4) _SetMemoryChar                                        3     2      1    2445
                                             38 BANK0      3     2      1
                      _GetMemoryChar
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (5) _WriteEEPROM_1Byte                                    5     2      3    1242
                                             28 BANK0      5     2      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (6) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _GetMemoryChar                                        6     2      4     737
                                             32 BANK0      6     2      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (6) _ReadEEPROM_1Byte                                     4     2      2     672
                                             28 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
                           _ResetADC
 ---------------------------------------------------------------------------------
 (3) _ResetADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROMinitialized                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             18    18      0    1023
                                              8 COMRAM    18    18      0
                        _EraseScreen
                        _IsCharacter
                    i1_BlueConnected
                        i1_ReadUSART
                         i1_UARTchar
                       i1_UARTstring
                   i1_UARTstringCRLN
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (10) i1_cleanBuffer                                       8     4      4     143
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (10) i1_UARTstringCRLN                                    2     0      2     308
                                              3 COMRAM     2     0      2
                         i1_UARTchar
                       i1_UARTstring
 ---------------------------------------------------------------------------------
 (11) i1_UARTstring                                        2     0      2     193
                                              1 COMRAM     2     0      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (10) i1_ReadUSART                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) i1_BlueConnected                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IsCharacter                                         1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _EraseScreen                                         2     2      0      90
                                              1 COMRAM     2     2      0
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (12) i1_UARTchar                                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _high_isr                                           21    21      0    2533
                                              7 BANK0     21    21      0
                         _IRrawToNEC
                        _ResetTimer3
                          _SetTimer0
                        i2_ReadIRpin
                      i2_ResetTimer0
                 i2_cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (14) i2_cleanBuffer16bit                                  8     4      4     203
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (14) i2_ResetTimer0                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_ReadIRpin                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _SetTimer0                                           2     0      2     139
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _ResetTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _IRrawToNEC                                         14     9      5    1965
                                             26 COMRAM     7     2      5
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueConnected
   _BufferCopy
     _cleanBuffer
   _ClearUSART
     _ReadUSART
   _ConfigureOscillator
   _InitApp
   _Init_System
     _EEPROMinitialized
     _InitADC
       _ResetADC
     _InitBluetooth
       _BluetoothConfigured
         _SyncGlobalToEEPROM
           _SetEEPROM
             _SetMemoryChar
               _GetMemoryChar
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
             _SetMemoryLong
               _GetMemoryLong
                 _ReadEEPROM_1Byte
               _WriteEEPROM_1Byte
                 _EEPROM_UNLOCK
       _BluetoothInitialSetup
         _EnterCommandMode
           _BlueConnected
           _ResetBlue
             _delayUS
           _StringContains
           _UARTstring
             _UARTchar
           _cleanBuffer
           _delayUS
         _StringContains
         _UARTstring
           _UARTchar
         _cleanBuffer
         _delayUS
         _sprintf
           _ReadVoltage (ARG)
             _InternalADC_Read
               _delayUS
             _VoltageDividerOFF
             _VoltageDividerON
             ___ftdiv
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lwtoft
               ___ftpack
             _delayUS
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftsub (ARG)
             ___ftadd
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftdiv (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
             ___lldiv (ARG)
           ___lltoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_ (ARG)
           __tdiv_to_l_ (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _ResetBlue
         _delayUS
       _cleanBuffer
     _InitIR
       _InitTimer0
       _ReadIRpin
       _ResetTimer0
       _cleanBuffer16bit
     _InitTimers
       _InitTimer1
       _InitTimer2
       _InitTimer3
     _InitUART
       _ClearUSART
         _ReadUSART
       _Local_CloseUSART
       _OpenUSART
       _Round
         ___altoft
           ___ftpack
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___fttol
           ___ftadd (ARG)
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___lltoft
         ___ftpack
     _SetEEPROMdefault
       _SyncGlobalToEEPROM
         _SetEEPROM
           _SetMemoryChar
             _GetMemoryChar
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
           _SetMemoryLong
             _GetMemoryLong
               _ReadEEPROM_1Byte
             _WriteEEPROM_1Byte
               _EEPROM_UNLOCK
     _SyncEEPROMToGlobal
       _GetEEPROM
         _GetMemoryChar
           _ReadEEPROM_1Byte
         _GetMemoryLong
           _ReadEEPROM_1Byte
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _cleanBuffer
   _ReadIRpin
   _ReadVoltage
     _InternalADC_Read
       _delayUS
     _VoltageDividerOFF
     _VoltageDividerON
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
     _delayUS
   _UARTchar
   _UARTstring
     _UARTchar
   _UARTstringCRLN
     _UARTchar
     _UARTstring
       _UARTchar
   _UseBluetooth
     _ClearUSART
       _ReadUSART
     _DecodeNEC
       _Reverse_Byte
     _EncodeNEC
       _Reverse_Byte
     _GetNumber
       _IsLetter
       ___lmul
       _lowercaseChar
     _GetStringAfterComma
     _ReadVoltage
       _InternalADC_Read
         _delayUS
       _VoltageDividerOFF
       _VoltageDividerON
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft
         ___ftpack
       _delayUS
     _SendNEC_wait
       _CheckReceivingIR
       _ReadIRpin
       _SendNEC_bytes
         _Reverse_4Byte
       _delayUS
     _SendRF_wait
       _LEDTimerON
         _ResetTimer1
       _ReadIRpin
       _SendRF
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContains
     _StringContainsCaseInsensitive
       _lowercaseChar
     _StringMatch
     _StringMatchCaseInsensitive
       _lowercaseChar
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _UARTchar
     _UARTcommandMenu
       _UARTchar
       _UARTstring
         _UARTchar
     _UARTstring
       _UARTchar
     _UARTstringCRLN
       _UARTchar
       _UARTstring
         _UARTchar
     _WaitForIRsignal
       _LEDTimerON
         _ResetTimer1
       _UARTchar
       _UARTstring
         _UARTchar
       _UARTstringCRLN
         _UARTchar
         _UARTstring
           _UARTchar
       _delayUS
     _cleanBuffer
     _delayUS
     _lowercaseString
     _sprintf
       _ReadVoltage (ARG)
         _InternalADC_Read
           _delayUS
         _VoltageDividerOFF
         _VoltageDividerON
         ___ftdiv
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft
           ___ftpack
         _delayUS
       ___awdiv (ARG)
         ___awmod (ARG)
       ___ftadd (ARG)
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftdiv (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _UseIRCode
     _DecodeNEC
       _Reverse_Byte
     _LEDTimerON
       _ResetTimer1
     _ReadCodeButtons
       _delayUS
     _ReadIRpin
     _ReadPushButton
     _SendRF_Channel
       _SendRF_wait
         _LEDTimerON
           _ResetTimer1
         _ReadIRpin
         _SendRF
     _SyncGlobalToEEPROM
       _SetEEPROM
         _SetMemoryChar
           _GetMemoryChar
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
         _SetMemoryLong
           _GetMemoryLong
             _ReadEEPROM_1Byte
           _WriteEEPROM_1Byte
             _EEPROM_UNLOCK
     _delayUS
   ___ftadd
     ___ftpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftge
   ___ftsub
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lltoft (ARG)
       ___ftpack
   _cleanBuffer
   _delayUS

 _low_isr (ROOT)
   _EraseScreen
     i1_UARTchar
   _IsCharacter
   i1_BlueConnected
   i1_ReadUSART
   i1_UARTchar
   i1_UARTstring
     i1_UARTchar
   i1_UARTstringCRLN
     i1_UARTchar
     i1_UARTstring
       i1_UARTchar
   i1_cleanBuffer

 _high_isr (ROOT)
   _IRrawToNEC
   _ResetTimer3
   _SetTimer0
   i2_ReadIRpin
   i2_ResetTimer0
   i2_cleanBuffer16bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      C8      19       78.1%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      88      13       53.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100     FF      FF      11       99.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     99      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FF     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      84       5       82.5%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      44       1       71.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     6FB      32        0.0%
DATA                 0      0     6FB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Apr 13 11:26:10 2015

                       BufferCopy@shift 0089                      UARTstringCRLN@data 007F  
                __end_of_Conf1_ChannelD F375                  __end_of_Conf1_ChannelE F381  
                __end_of_Conf1_ChannelF F38D                   UseBluetooth@StringPos 0202  
                          ___altoft@exp 008C                  __end_of_Conf1_Channels F39F  
               __size_of_StringContains 00B2                           ??_EraseScreen 0002  
                           _IRcodePlace 0041                           ___altoft@sign 008D  
                  ?_BluetoothConfigured 0001                                      _SN 003C  
                          ___awdiv@sign 0087                     ?_SyncGlobalToEEPROM 0001  
                                    bsr 000FE0                  __end_of_Conf2_Channels F3A3  
                   ___wmul@multiplicand 008C                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                            ___ftadd@exp1 00BA  
                          ___ftadd@exp2 00B9                             ?_LEDTimerON 0001  
                    lowercaseChar@Input 007C                            ___ftadd@sign 00B8  
                            _SYNTAX_ERR F35B                                     l142 5240  
                                   l304 8F1A                                     l144 52CC  
                                   l305 8F0A                                     l147 532C  
                                   l640 8990   StringContainsCaseInsensitive@tempThat 0085  
                                   l652 93DA                                     l644 89B4  
                                   l485 6388                                     l646 89C4  
                                   l647 89C6                                     l920 8C36  
                                   l667 940C                                     l747 8530  
                                   l934 8CA6                                     l928 9454  
 StringContainsCaseInsensitive@tempThis 0084                                     l964 65A4  
                                   l974 6680                                     l967 6692  
                                   l959 65B0                            __CFG_CPB$OFF 000000  
                                   _PR2 000FCB                            __CFG_CPD$OFF 000000  
            StringAddEqual@NullPosition 008F                    lowercaseString@Input 007C  
                            _IRrawToNEC 551E                           _IRbitPosition 0040  
                   __end_of_IsCharacter 9430                            __CFG_BORV$27 000000  
                          ___awmod@sign 0081                                     prod 000FF3  
                                   wreg 000FE8                              _IRsendCode 0023  
                            _IRsendFlag 0033                           main@Connected 0296  
                         _InitBluetooth 8EA0                            __CFG_LVP$OFF 000000  
                          ___ftdiv@cntr 0090                            ___ftdiv@sign 0095  
                                  l1000 677A                                    l2118 7BE4  
                                  l2241 2CB4                                    l2280 2AF8  
                                  l2701 5C46                                    l2710 5D2A  
                                  l2623 6B9A                                    l1647 8F96  
                                  l2289 2D24                                    l1825 4E22  
                                  l1921 1246                                    l2730 712E  
                                  l2719 5D54                                    l2824 7FCC  
                                  l2744 6A06                                    l1880 0716  
                                  l2737 693A                                    l2666 773C  
                                  l2834 84B2                                    l2738 697E  
                                  l1882 0772                                    l2695 5BE2  
                                  l1887 099A                                    l2769 92C2  
                                  l1889 09EA                                    l2699 5C1C  
                                  STR_1 FE71                                    STR_2 FFE6  
                                  STR_3 FFF2                                    STR_4 FC1D  
                                  STR_5 FFFA                                    STR_6 FF6E  
                                  STR_7 FFFA                                    STR_8 FCA7  
                                  STR_9 FFFA                    ??_SyncGlobalToEEPROM 00BD  
                                  _CRLN F3A7                                    _LATA 000F89  
                                  _LATB 000F8A                                    _LATC 000F8B  
                                  _TMR2 000FCC                                    _WPUB 000F7C  
                        ?i2_ResetTimer0 0001                                    _Sent 00E3  
            WriteEEPROM_1Byte@GIEstatus 007F                              _ClearUSART 9502  
             SetMemoryChar@AddressFirst 0086                                    _main 510C  
                          ___ftpack@arg 007C                            ___ftpack@exp 007F  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  indf0 000FEF                                    fsr0l 000FE9  
                                  fsr2h 000FDA                                    indf1 000FE7  
                            SetEEPROM@i 00BB                                    fsr1l 000FE1  
                                  indf2 000FDF                              SetEEPROM@j 00BC  
                            SetEEPROM@k 00BA                                    fsr2l 000FD9  
                            _RFsendCode 02CF                              _RFsendFlag 0037  
                                  pclat 000FFA                        i1_UARTstringCRLN 8CD2  
                           _RFcodePlace 0036                                    prodh 000FF4  
                   main@BluetoothString 0300                                    prodl 000FF3  
                                  start 01F2                           __CFG_IESO$OFF 000000  
                      Reverse_Byte@This 007F                            _sprintf$3810 0106  
                      Reverse_Byte@temp 007E                           __CFG_MCLRE$ON 000000  
                          ___ftmul@cntr 00A3                          UARTstring@data 007D  
                           ?i1_UARTchar 0001                            ___param_bank 000010  
                          ___ftmul@sign 00A4                         __end_of_InitADC 9474  
                       __end_of_InitApp 90C4                      i2_cleanBuffer16bit 9108  
 __end_of_StringContainsCaseInsensitive 7656  __size_of_StringContainsCaseInsensitive 0126  
         _StringContainsCaseInsensitive 7530                 __size_of_ReadPushButton 000E  
                 ??_BluetoothConfigured 00BD                            ___fttol@exp1 00C9  
                         ??_Init_System 00D9                            ___fttol@lval 00C5  
                  _Conf2_ChannelH_1_OFF F2CE                       IRrawToNEC@NECtemp 0060  
                  _Conf2_ChannelH_2_OFF F2EE                    _Conf2_ChannelH_3_OFF F30E  
                                 l13012 6A64                                   l13006 6A3E  
                                 l12410 8CBA                                   l13202 9078  
                                 l13114 7236                                   l13050 6B60  
                                 l13034 6B10                                   l13026 6ABA  
                                 l14002 6C66                                   l13300 7E58  
                                 l13132 72A6                                   l13124 7268  
                                 l13310 7E6E                                   l13126 727A  
                                 l13118 724A                                   l13142 7F46  
                                 l13046 6B4C                                   l13038 6B24  
                                 l14022 6CAE                                   l14006 6C6C  
                                 l13072 7DC4                                   l12440 7670  
                                 l13064 8FC4                                   l13128 7288  
                                 l13144 7F58                                   l13056 6B7E  
                                 l14200 50EC                                   l14024 6CB4  
                                 l14040 6D2A                                   l14016 6C9E  
                                 l12370 8C4C                                   l13082 7E4A  
                                 l13154 7FB8                                   l13146 7F62  
                                 l13170 849E                                   l13162 843C  
                                 l13058 6B90                                   l12602 6EE4  
                                 l13402 242A                                   l14130 4E7C  
                                 l14018 6CA4                                   l14050 8874  
                                 l12516 7BBC                                   l13076 7E06  
                                 l12452 76EA                                   l12444 7686  
                                 l12540 5C2A                                   l13164 844E  
                                 l12700 823C                                   l13404 2448  
                                 l14108 4DAC                                   l14036 6D24  
                                 l14028 6CBE                                   l15100 8662  
                                 l15012 8F8E                                   l15004 8F76  
                                 l12374 8C62                                   l12462 7748  
                                 l12454 771C                                   l12446 7696  
                                 l12534 5BF0                                   l13166 8458  
                                 l12630 6FAA                                   l12622 6F6E  
                                 l13510 292A                                   l13502 28AE  
                                 l13430 252C                                   l13414 247C  
                                 l13350 2234                                   l14070 94D0  
                                 l15102 8668                                   l15022 6066  
                                 l12800 651C                                   l13328 7EF6  
                                 l12456 772C                                   l12448 76C8  
                                 l13096 71A2                                   l13176 88E2  
                                 l12720 82B4                                   l12712 828E  
                                 l12704 8250                                   l12640 6FEE  
                                 l12632 6FB2                                   l12608 6F1E  
                                 l13600 2CDC                                   l13408 2462  
                                 l13416 24D0                                   l13352 224C  
                                 l13344 2210                                   l14144 4EF2  
                                 l13192 9534                                   l14232 8A12  
                                 l14216 9170                                   l15008 8F82  
                                 l15024 608A                                   l12810 6538  
                                 l12730 9542                                   l12562 5CAE  
                                 l12546 5C3C                                   l13178 88F4  
                                 l12706 825E                                   l12626 6F8E  
                                 l13506 2900                                   l13370 2304  
                                 l13346 2226                                   l13338 21F0  
                                 l14410 74BA                                   l14402 74A4  
                                 l14330 6772                                   l14322 66E6  
                                 l14242 7050                                   l14058 88BE  
                                 l15106 8672                                   l16002 1DD2  
                                 l15034 6100                                   l15026 60AE  
                                 l12804 6528                                   l14084 93FA  
                                 l12740 8E1E                                   l12468 7766  
                                 l12564 5CBE                                   l12556 5C7E  
                                 l12652 7CD0                                   l12708 8268  
                                 l12716 829E                                   l12636 6FD2  
                                 l13620 2D76                                   l13604 2D04  
                                 l13540 29FE                                   l13524 2980  
                                 l13532 29B6                                   l13460 2696  
                                 l13380 2344                                   l13364 22F0  
                                 l13356 226E                                   l14172 4FDE  
                                 l14420 751E                                   l14404 74AA  
                                 l14340 6796                                   l14316 66D6  
                                 l14228 89EA                                   l16012 1E32  
                                 l15044 6156                                   l15028 60D2  
                                 l12830 65D0                                   l12822 65AA  
                                 l12814 6542                                   l12582 5D80  
                                 l12574 5D0A                                   l12566 5CCE  
                                 l12910 45BA                                   l13702 30AE  
                                 l13614 2D46                                   l13550 2AAA  
                                 l13534 29CA                                   l13526 299A  
                                 l13518 2964                                   l13470 272C  
                                 l13462 26C8                                   l13454 2650  
                                 l13446 25E0                                   l13390 23C2  
                                 l13382 234C                                   l13366 22F6  
                                 l13710 30F0                                   l14158 4F68  
                                 l14414 74C4                                   l14350 67B0  
                                 l14318 66DC                                   l15134 8768  
                                 l16014 1E38                                   l16030 21AC  
                                 l15054 61AC                                   l15038 6128  
                                 l15310 5F52                                   l12488 91FA  
                                 l12840 65F2                                   l12808 6532  
                                 l12752 82C8                                   l12736 8DF0  
                                 l12744 8DA2                                   l12592 5DD0  
                                 l12576 5D1A                                   l12568 5CDA  
                                 l12664 7D06                                   l12680 7D60  
                                 l12904 44E4                                   l13704 30C2  
                                 l13632 2DCC                                   l13624 2D84  
                                 l13480 27AA                                   l13464 26DE  
                                 l13384 2390                                   l13368 22FE  
                                 l13712 3114                                   l14424 7524  
                                 l14408 74B4                                   l14360 6862  
                                 l14344 67A0                                   l14328 676E  
                                 l15240 8B10                                   l14248 708A  
                                 l14600 7616                                   l14520 8A8A  
                                 l15064 6202                                   l15048 617E  
                                 l15080 6280                                   l15320 5F6C  
                                 l14370 94AC                                   l12850 660C  
                                 l12834 65E2                                   l12770 834C  
                                 l12666 7D14                                   l12658 7CE8  
                                 l12922 475E                                   l12914 45E6  
                                 l13642 2E20                                   l13634 2DD2  
                                 l13650 2E3C                                   l13618 2D70  
                                 l13570 2B30                                   l13562 2AFE  
                                 l13538 29F6                                   l13490 285A  
                                 l13482 27D8                                   l13474 275A  
                                 l13458 2680                                   l13394 23D6  
                                 l13378 2338                                   l14098 4D30  
                                 l14346 67A6                                   l14338 6790  
                                 l13730 7C08                                   l16018 1E42  
                                 l15410 0558                                   l15402 04D4  
                                 l15074 6258                                   l15058 61D4  
                                 l15314 5F5C                                   l12844 65FC  
                                 l12764 8338                                   l12748 8DC2  
                                 l12684 7D76                                   l12676 7D50  
                                 l12668 7D1E                                   l12940 92F2  
                                 l13708 30D6                                   l13660 2EAA  
                                 l13628 2DC4                                   l13556 2AC6  
                                 l13548 2A9A                                   l13476 2766  
                                 l13484 27EC                                   l13396 23F0  
                                 l13388 23B6                                   l14188 5080  
                                 l14428 752A                                   l14380 7436  
                                 l14356 685C                                   l14268 70EC  
                                 l15084 8610                                   l13740 7C32  
                                 l13804 8810                                   l13812 8836  
                                 l14524 8A8E                                   l14516 8A52  
                                 l15148 87B6                                   l16028 1EA2  
                                 l15500 0A9C                                   l15068 622A  
                                 l15332 602C                                   l15316 5F62  
                                 l15340 6038                                   l15308 5F4C  
                                 l12846 6602                                   l12862 668C  
                                 l12838 65EC                                   l12950 68AC  
                                 l13670 2EF0                                   l13662 2EB6  
                                 l13638 2DE0                                   l13574 2B82  
                                 l13558 2ADA                                   l13494 2868  
                                 l13902 89B8                                   l14382 743C  
                                 l14702 4A0C                                   l14710 4A28  
                                 l14278 7140                                   l14294 812E  
                                 l15094 864E                                   l13726 7BF4  
                                 l14606 7620                                   l14526 8A9C  
                                 l14542 86A8                                   l14622 90F0  
                                 l15422 061E                                   l15414 059A  
                                 l15406 0516                                   l15430 0684  
                                 l12776 8356                                   l12696 822A  
                                 l12928 4834                                   l13680 2F32  
                                 l13672 2EFC                                   l13656 2E72  
                                 l13648 2E28                                   l13592 2CA4  
                                 l13584 2C78                                   l13488 2854  
                                 l13832 8D44                                   l14392 748E  
                                 l14376 742C                                   l14704 4A14  
                                 l14296 8142                                   l15088 863A  
                                 l13744 7C74                                   l14800 62D4  
                                 l14608 7628                                   l14536 8AC2  
                                 l14560 870E                                   l14616 90C6  
                                 l14624 90F8                                   l15328 601C  
                                 l15336 6032                                   l15272 5E80  
                                 l15344 6046                                   l16240 51BA  
                                 l16232 51A2                                   l12858 6686  
                                 l12794 64F0                                   l12778 835E  
                                 l12890 5B2A                                   l12882 5A36  
                                 l13586 2C88                                   l13498 28A8  
                                 l13770 85A4                                   l14386 7446  
                                 l13826 93C0                                   l14722 4A6A  
                                 l14714 4A3A                                   l13930 84F4  
                                 l15098 865A                                   l13754 7CA6  
                                 l13738 7C2A                                   l14570 8734  
                                 l14554 86FC                                   l15426 0660  
                                 l15418 05DC                                   l15370 032C  
                                 l15282 5EB8                                   l15258 5E20  
                                 l16306 53C8                                   l12956 68E6  
                                 l13692 2F90                                   l13836 8D68  
                                 l14396 7494                                   l14740 4B2A  
                                 l14716 4A42                                   l14660 495A  
                                 l14636 48CE                                   l14644 48F8  
                                 l14628 4894                                   l13756 7CAC  
                                 l14820 638E                                   l14804 62E8  
                                 l15620 115A                                   l15612 1124  
                                 l15604 10E6                                   l15532 0D60  
                                 l15436 06A0                                   l15284 5EBE  
                                 l15268 5E76                                   l16260 5208  
                                 l16252 51F4                                   l16236 51B0  
                                 l16228 5172                                   l12990 69CC  
                                 l13694 2FA2                                   l13686 2F5C  
                                 l13678 2F26                                   l14398 749A  
                                 l14734 4B1C                                   l14654 4928  
                                 l14910 795E                                   l13934 8506  
                                 l13926 84EA                                   l14830 63BC  
                                 l14814 6330                                   l14822 6394  
                                 l14558 8700                                   l13782 8B68  
                                 l15702 1332                                   l15542 0D92  
                                 l15470 0862                                   l15390 040E  
                                 l15374 036E                                   l15366 02EA  
                                 l16334 5488                                   l16326 5462  
                                 l16254 51F8                                   l13696 302C  
                                 l13768 8592                                   l14752 4B84  
                                 l14744 4B48                                   l14672 498E  
                                 l14648 4904                                   l14904 794A  
                                 l13792 87E8                                   l14832 63C4  
                                 l14824 63B0                                   l14808 62F4  
                                 l14576 7538                                   l15720 139A  
                                 l15712 1378                                   l15632 11C2  
                                 l15624 117C                                   l15616 1146  
                                 l15472 0874                                   l15384 03AE  
                                 l15288 5EC8                                   l16256 51FE  
                                 l12986 69B8                                   l12978 6990  
                                 l13890 8994                                   l13882 897C  
                                 l14762 4C04                                   l14682 49BA  
                                 l14842 641C                                   l14818 636A  
                                 l14594 75E8                                   l14930 777E  
                                 l13778 8B3A                                   l15802 1704  
                                 l15538 0D84                                   l15394 0450  
                                 l15378 0392                                   l15298 5F00  
                                 l16354 54CC                                   l16282 52F8  
                                 l12996 69EA                                   l14764 4C58  
                                 l14748 4B66                                   l14772 4C62  
                                 l14692 49F0                                   l14676 49A8  
                                 l14668 496E                                   l14924 79AC  
                                 l13796 87F6                                   l14852 6486  
                                 l14836 63F6                                   l14940 77E2  
                                 l15804 1742                                   l15724 13B2  
                                 l16348 549E                                   l16292 536C  
                                 l16276 5292                                   l12998 69FC  
                                 l13894 899E                                   l13886 8986  
                                 l13878 8970                                   l13990 6C08  
                                 l14782 4CAC                                   l14774 4C6A  
                                 l14918 7984                                   l14870 78C6  
                                 l14846 6428                                   l14950 7846  
                                 l14942 77EA                                   l15910 1A44  
                                 l15902 1A1E                                   l15814 1774  
                                 l15734 13E4                                   l15662 1288  
                                 l15670 12A8                                   l15646 121C  
                                 l15638 11E4                                   l15582 0F98  
                                 l15494 09AC                                   l15398 0492  
                                 l16286 5324                                   l13984 6BF8  
                                 l14856 648C                                   l14960 7882  
                                 l14936 77B0                                   l15920 1A64  
                                 l15832 17C4                                   l15752 1464  
                                 l15744 141C                                   l15680 12CE  
                                 l15656 1272                                   l15592 1088  
                                 l15568 0F22                                   l15488 098A  
                                 l13898 89A8                                   l13994 6C12  
                                 l14970 839C                                   l14786 4CCA  
                                 l14698 49F6                                   l14890 7916  
                                 l14866 78A4                                   l14946 77F6  
                                 l15922 1A86                                   l15826 17B4  
                                 l15666 1296                                   l15738 1404  
                                 l15578 0F64                                   l13988 6C02  
                                 l14884 7904                                   l14796 62C8  
                                 l14956 7864                                   l15932 1AAC  
                                 l15844 189E                                   l15828 17BA  
                                 l15764 150E                                   l15756 146E  
                                 l15676 12C0                                   l15596 10AA  
                                 l15588 104A                                   l14878 78DA  
                                 l15942 1B28                                   l15846 18CC  
                                 l15838 185A                                   l15774 1530  
                                 l15598 10B2                                   l15870 1960  
                                 l14990 94EE                                   l14896 7934  
                                 l15856 18FE                                   l15784 15EE  
                                 l15768 1514                                   l14978 8402  
                                 l15970 1CA0                                   l15794 1620  
                                 l15778 1548                                   l15786 15F4  
                                 l15866 193E                                   l15980 1CB6  
                                 l15964 1C6C                                   l15892 19D8  
                                 l15788 1604                                   l15974 1CAA  
                                 l15984 1CCC                           ??_ReadVoltage 00A8  
                                 l15994 1CE2                                   l15988 1CD6  
                                 l15998 1DC8                                   ?_main 0001  
                __size_ofi1_cleanBuffer 003E                         __end_of___awdiv 7D82  
                                 _EEADR 000FA9                         __end_of___ftadd 5DF8  
                                 STR_10 FF82                                   STR_11 FFFA  
                                 STR_20 FFC0                                   STR_12 FFBA  
                                 STR_13 FFFA                                   STR_21 FB23  
                                 STR_14 FFBA                                   STR_22 FFC6  
                                 STR_30 F9EE                                   STR_15 FFFA  
                                 STR_31 FD4D                                   STR_23 FB40  
                                 STR_32 FCD5                                   STR_24 FFEE  
                                 STR_16 FFD7                                   STR_40 FC91  
                                 STR_33 F799                                   STR_41 FF8B  
                                 STR_17 FB7A                                   STR_25 FA0E  
                                 STR_18 FFD2                                   STR_42 FDE8  
                                 STR_26 FA2D                                   STR_34 F92D  
                                 STR_50 F60E                                   STR_51 F77E  
                                 STR_35 FFEC                                   STR_43 FF65  
                                 STR_19 FFF6                                   STR_27 FCD1  
                                 STR_60 FFB3                                   STR_44 FE40  
                                 STR_28 FCBC                                   STR_36 FAE7  
                                 STR_52 F89E                         __end_of___awmod 82C0  
                                 STR_37 FFAC                                   STR_61 FF94  
                                 STR_45 FF14                                   STR_29 FC4D  
                                 STR_53 F8E7                                   STR_54 FFAC  
                                 STR_46 FD85                                   STR_62 FFB3  
                                 STR_38 FD25                                   STR_70 F487  
                                 STR_39 FF63                                   STR_55 FE51  
                                 STR_47 FCE6                                   STR_63 F854  
                                 STR_71 F802                                   STR_64 F854  
                                 STR_56 FD75                                   STR_80 FB06  
                                 STR_48 F77E                                   STR_72 F750  
                                 STR_57 FF8B                                   STR_81 FE0C  
                                 STR_65 F879                                   STR_49 F5DF  
                                 STR_73 F3AA                                   STR_82 FB06  
                                 STR_90 FFE1                                   STR_58 FE90  
                                 STR_66 FAA9                                   STR_74 F3E9  
                                 STR_91 FFEA                                   STR_83 FF9D  
                                 STR_59 FDFA                                   STR_67 FAC8  
                                 STR_75 F41F                                   STR_92 FBF7  
                                 STR_68 FE9E                                   STR_84 FD61  
                                 STR_76 F7AA                                   STR_85 F925  
                                 STR_93 FE2F                                   STR_77 F7D6  
                                 STR_69 F455                                   STR_94 FFEA  
                                 STR_78 FFCC                                   STR_86 FD10  
                                 STR_95 FF78                                   STR_87 FB5D  
                                 STR_79 F9CE                                   STR_96 FFCC  
                                 STR_88 FE61                                   STR_89 FBCE  
                                 STR_97 F9AE                                   STR_98 F925  
                                 STR_99 F90A                         __end_of___ftdiv 7168  
                   ?i2_cleanBuffer16bit 001B                         __end_of___ftneg 92D0  
                                 _ANSEL 000F7E                         __end_of___lldiv 7FDE  
                       __end_of___ftmul 7016                         ___awdiv@divisor 0084  
                       __end_of___llmod 84C4                         __end_of___ftsub 8FF0  
                       __end_of___fttol 72BA                                   u20601 54E4  
                   __end_of_FirmVersion F396                                   u15100 82F8  
               ReadEEPROM_1Byte@address 007C                                   u15120 832E  
                                 u16000 376A                                   u16010 37D6  
                                 u15107 82EE                                   u15060 8E12  
                                 u16100 3BA2                                   u16020 3842  
                                 u16005 375E                                   u15070 8E40  
                                 u16110 3C0E                                   u16030 38AE  
                                 u15127 8324                                   u16015 37CA  
                                 u16120 3C7A                                   u16040 391A  
                                 u16105 3B96                                   u16025 3836  
                                 u16130 3CE6                                   u16050 3986  
                                 u15067 8E08                                   u16115 3C02  
                                 u16035 38A2                                   u16140 3D6A  
                                 u16060 39F2                                   u15077 8E36  
                                 u16125 3C6E                                   u16045 390E  
                                 u16230 2386                                   u16070 3A5E  
                                 u16135 3CDA                                   u16055 397A  
                                 u14640 7B00                                   u16320 2572  
                                 u16080 3ACA                                   u17025 818A  
                                 u16145 3D5E                                   u16065 39E6  
                                 u16090 3B36                                   u16075 3A52  
                                 u14645 7AF4                                   u14661 5B90  
                                 u15461 6888                                   u16325 2566  
                                 u16237 237C                                   u16085 3ABE  
                                 u16270 241A                                   u14671 5BAE  
                                 u16095 3B2A                                   u15481 68C2  
                                 u16540 2AF0                                   u16277 2410  
                                 u17501 7066                                   u15831 9042  
                                 u15671 717E                                   u14871 6EC0  
                                 u18305 4B88                                   u15905 3322  
                                 u15690 71C8                                   u14891 6EFA  
                                 u15915 337C                                   u16900 8B5C  
                                 u19300 0750                                   u15925 33D6  
                                 u16910 8B8A                                   u15695 71BE  
                                 u15935 3430                                   u15855 3160  
                                 u19400 0C0E                                   u17481 702C  
                                 u15945 348A                                   u15865 31BA  
                                 u15955 34E4                                   u15875 3214  
                                 u16907 8B52                                   u18700 83E2  
                                 u17900 760A                                   u18620 77A0  
                                 u15965 353E                                   u15885 326E  
                                 u16917 8B80                                   u17750 7A36  
                                 u18630 77D2                                   u15975 3598  
                                 u15895 32C8                                   u19280 06F4  
                                 u18705 83D6                                   u15985 35F2  
                                 u17930 764A                                   u17850 755A  
                                 u17755 7A2A                                   u15995 364C  
                                 u17907 7600                                   u18627 7796  
                                 u19371 0B0A                                   u17860 7580  
                                 u18637 77C8                                   u17880 75DE  
                                 u17937 7640                                   u17857 7550  
                                 u17867 7576                                   u17887 75D4  
                                 i1l652 943E                                   i1l667 9480  
                   __end_of_EraseScreen 93A8                         ___awdiv@counter 0086  
                                 _RCREG 000FAE                                   _RCSTA 000FAB  
                                 _TMR0H 000FD7                                   _TMR1H 000FCF  
                                 _TMR0L 000FD6                                   _TMR3H 000FB3  
                                 _TMR1L 000FCE                                   _TMR3L 000FB2  
                                 _SPBRG 000FAF                              _BufferCopy 87CA  
                                 _PORTA 000F80                                   _PORTB 000F81  
                                 _PORTC 000F82                                   _RF_IR 0042  
                          InitUART@Baud 00D1                                   _IRbit 002D  
                                 _IRmod 00DA                                   _TXREG 000FAD  
                                 _TXSTA 000FAC                     _ConfigureOscillator 95C2  
                       __end_of_delayUS 8F4C                           __CFG_PWRT$OFF 000000  
                      _InternalADC_Read 84C4                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
                   ___lmul@multiplicand 0080                           __CFG_WRT3$OFF 000000  
                     _NewReceivedString 00DB                            ___lltoft@exp 008C  
                        __CFG_EBTR0$OFF 000000                          __CFG_FCMEN$OFF 000000  
                        ?_InitBluetooth 0001                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                            SendRF@Code 007C                            InitUART@temp 0106  
                          _IRrawCodeNum 0030                                   _Round 8BA2  
                         __CFG_WRTB$OFF 000000                   _BluetoothInitialSetup 4CE8  
              __end_of_Local_CloseUSART 9502                           __CFG_WRTC$OFF 000000  
                 __end_of_BlueConnected 9548                           __CFG_WRTD$OFF 000000  
                      ?_lowercaseString 007C                        __end_of_UARTchar 93E4  
                        __CFG_EBTRB$OFF 000000                         __end_of_dpowers F141  
                                 _scale 435E                              SendRF@size 007F  
                       __end_of_isdigit 92FE                           ___ftpack@sign 0080  
                                 main@i 0298                         __end_of_low_isr 01F2  
                                 tablat 000FF5                        _RF_IR_Postscaler 0043  
                                 plusw0 000FEB                                   plusw2 000FDB  
                           ?_UARTstring 007D                 InternalADC_Read@channel 008A  
                                 status 000FD8                    ??i2_cleanBuffer16bit 001F  
                       __end_of_sprintf 3124                          __CFG_HFOFST$ON 000000  
           WriteEEPROM_1Byte@PEIEstatus 0080                    __size_of_cleanBuffer 005A  
                   __size_of_LEDTimerON 0012                   __end_of_GetMemoryChar 9380  
                  ?_ConfigureOscillator 0001                   __end_of_GetMemoryLong 6EAA  
                         ??_SendRF_wait 0089                      StringContains@That 007E  
                    StringContains@This 007C                            __end_of_CRLN F3AA  
                         high_isr@IRpin 0079                         __initialization 7FDE  
                    StringAddEqual@temp 0100                   __end_of_EEPROM_UNLOCK 945E  
                      __end_of_IsLetter 93C6                              _InitTimer0 94D6  
                            _InitTimer1 951E                      _Conf1_ChannelD_STR F32E  
                            _InitTimer2 9510                              _InitTimer3 957C  
                    __size_of_GetEEPROM 018E                           high_isr@Time0 007A  
                    _Conf1_ChannelE_STR F33D                      _Conf1_ChannelF_STR F34C  
      __end_of_Conf2_ChannelH_1_OFF_STR F1DE                              _InitTimers 948A  
                          _IRrepeatflag 0032                      __size_of_DecodeNEC 00AE  
                          __end_of_main 551E                   __end_of_Reverse_4Byte 3DA2  
                      ??_UARTstringCRLN 0081                        __end_of_InitUART 7AC8  
      __end_of_Conf2_ChannelH_2_OFF_STR F1F3                  WaitForIRsignal@timeout 0085  
          __size_of_GetStringAfterComma 011E                          GetNumber@count 0094  
      __end_of_Conf2_ChannelH_3_OFF_STR F208                             _IsCharacter 9418  
                                ??_main 00D9                           ___fttol@sign1 00C4  
                      __end_of_ResetADC 9556                       GetNumber@negative 0093  
                         __activetblptr 000003                      SendRF@RepeatAmount 0080  
                           ?_IRrawToNEC 001B                      __size_of_GetNumber 0486  
                       _WaitForIRsignal 873A                    __size_of__tdiv_to_l_ 01A6  
                    __size_of_EncodeNEC 014E                     __end_of_Init_System 8B38  
                     SetEEPROMdefault@i 00C0                       SetEEPROMdefault@j 00C1  
                     SetEEPROMdefault@k 00BF                   _Conf2_ChannelB_ON_STR F26A  
                         ?_SendNEC_wait 0091                   _Conf2_ChannelD_ON_STR F27C  
                __size_of_SendNEC_bytes 0086                                  ?_Round 00CA  
                   __end_of_ReadVoltage 8156                       GetNumber@tempThis 0097  
                            UseIRCode@i 00C8                              UseIRCode@j 00C7  
                        _StringAddEqual 62B8                                  _ADCON0 000FC2  
                                _ADCON1 000FC1                                  _ADCON2 000FC0  
                   __size_ofi1_UARTchar 0018                        __end_of___altoft 8608  
                      ___llmod@dividend 0089                                  ?_scale 00A5  
                                STR_100 FCFB                                  STR_101 FF9D  
                                STR_110 FF42                                  STR_102 FB96  
                                STR_103 FEB9                                  STR_111 F54C  
                                STR_112 FF4D                                  STR_120 FED3  
                                STR_104 FE81                                  STR_105 FC04  
                                STR_121 F66A                                  STR_113 F57D  
                                STR_114 FF21                                  STR_130 FF07  
                                STR_122 FEED                                  STR_106 FDD5  
                                _ADRESH 000FC4                                  STR_107 FC35  
                                STR_131 F722                                  STR_123 F6C6  
                                STR_115 F4B9                                  STR_132 FFDC  
                                STR_116 FF37                                  STR_108 FF2C  
                                STR_124 FEFA                                  STR_140 FDC2  
                                _EEADRH 000FAA                                  STR_141 FD39  
                                STR_133 F82C                                  STR_125 F6F4  
                                STR_117 F51B                                  STR_109 F4EA  
                                STR_118 FF58                                  STR_126 FEC6  
                                STR_134 FEAC                                  STR_142 FA4C  
                                STR_150 F8C3                                  _ADRESL 000FC3  
                                STR_151 FFA5                                  STR_135 FD89  
                                STR_143 F94E                                  STR_127 F63C  
                                STR_119 F5AE                                  STR_128 FEE0  
                                STR_152 FE1E                                  STR_136 FD9C  
                                STR_144 FA6B                                  STR_137 FDAF  
                                STR_145 F96E                                  STR_129 F698  
                                STR_138 FC7B                                  STR_146 FA8A  
                                STR_139 FC64                                  STR_147 F98E  
                                STR_148 FBE9                                  STR_149 FBB2  
                                _EEDATA 000FA8                                  _EECON2 000FA7  
                      ___awdiv@dividend 0082                         ??i2_ResetTimer0 001B  
                      __end_of___ftpack 7776                                  _ANSELH 000F7F  
                     ?_VoltageDividerON 0001                   _Conf2_ChannelB_Status 0028  
                         ??_ResetTimer0 007C                           ??_ResetTimer1 007C  
                         ??_ResetTimer3 001B                        __end_of___lltoft 895A  
                                i1l1360 01A6                                  i1l1344 018C  
                                i1l1359 01AA                                  i2l1230 3F56  
                                i2l1231 3F1C                                  i2l1217 3EF2  
                                i2l1234 42FC                                  i2l1218 3EE6  
                                i2l1227 3EE0                                  i2l1219 3EDC  
                                i2l1229 4322                                  i2l1271 408E  
                                i2l1247 3FEA                                  i2l1337 431E  
                                i2l1290 411A                                  i2l1291 4110  
                                i2l1297 4142                          __CFG_WDTEN$OFF 000000  
                      __end_of___lwtoft 932A                      __size_of_ReadUSART 0018  
                 _Conf2_ChannelD_Status 0029                           SetTimer0@temp 001B  
                                _IR_NEC 00DD                      __size_of_ReadIRpin 000E  
                                _SPBRGH 000FB0                      ??_VoltageDividerON 007C  
                         i1_cleanBuffer 9188                             ?_ClearUSART 0001  
                        SetMemoryLong@H 00AE                          SetMemoryLong@L 00B1  
                    __size_of_SetEEPROM 01EC                               ??_InitADC 007C  
                             ??_InitApp 007C                   ??_ConfigureOscillator 007C  
                                _Global 0400                                  _InitIR 8FF0  
                                _SendRF 7BC2                          __CFG_XINST$OFF 000000  
                       _UARTcommandMenu 7776                GetStringAfterComma@count 0083  
                      __end_of__powers_ F18F                           InitUART@spbrg 0103  
                      __end_of_high_isr 435E                         _ReadCodeButtons 8F4C  
                    __size_of_OpenUSART 007C                          _StringContains 82C0  
                                ___ftge 7D82                                  ___lmul 89D6  
              SendNEC_wait@RepeatAmount 0095                                  ___wmul 9200  
            __end_of_SyncEEPROMToGlobal 6872                               ??___awdiv 0086  
                           _FirmVersion F38D                               ??___ftadd 00B5  
                        __CFG_STVREN$ON 000000                               ??___awmod 0080  
                             ??___ftdiv 008D             ?_StringMatchCaseInsensitive 007F  
                             ??___ftneg 007F                               ??___lldiv 0084  
                             ??___ftmul 009C                             _EraseScreen 9380  
                             ??___llmod 0091                               ??___ftsub 00C1  
                             ??___fttol 00BF                       cleanBuffer16bit@i 0083  
                    __size_of_SetTimer0 000A                      __size_of_ResetBlue 0032  
                   __end_of_SendRF_wait 9188                            ?i1_ReadUSART 0001  
                                _fround 58A2                       ?_SetEEPROMdefault 0001  
                                clear_0 7FE4                                  clear_1 7FF2  
                                clear_2 8006                                  clear_3 8018  
                                clear_4 8024                                  clear_5 8034  
                                clear_6 8040                        ___awdiv@quotient 0088  
                             ??_delayUS 0080                         ___awmod@divisor 007E  
                    __size_of_UseIRCode 0268                         ___awmod@counter 0080  
                    ??_SetEEPROMdefault 00BD                   ___ftmul@f3_as_product 00A0  
                   __size_of_UARTstring 005A                         ??_InitBluetooth 00D8  
                           ?_BufferCopy 0084                       ?_cleanBuffer16bit 007C  
                          __pdataCOMRAM 003C                               ??_isdigit 007C  
                        ??_SendNEC_wait 0096                  ?_BluetoothInitialSetup 0001  
                __end_of_StringAddEqual 64B8                            __mediumconst F118  
                        EncodeNEC@temp1 0098                          EncodeNEC@temp2 009C  
                        EncodeNEC@temp3 00A0                          EncodeNEC@temp4 00A4  
                          ?i2_ReadIRpin 0001                               ??_low_isr 0009  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                      ??_cleanBuffer16bit 0080  
                    IRrawToNEC@StartBit 0066                  SyncEEPROMToGlobal@Temp 0103  
                      _CommandStringPos 0027                       __end_of_GetEEPROM 6D3A  
                 __end_of_lowercaseChar 9356                       __end_of_DecodeNEC 8420  
                             ??_sprintf 0100                         __CFG_FOSC$HSPLL 000000  
                        ?i1_cleanBuffer 0001                    UARTcommandMenu@place 0089  
                    UseBluetooth@String 0200                              __accesstop 0060  
               __end_of__initialization 8098                              ___altoft@c 0084  
                            Round@input 00CA                         __CFG_PBADEN$OFF 000000  
                            ___ftadd@f1 00AF                              ___ftadd@f2 00B2  
                            ___ftge@ff1 007C                              ___ftge@ff2 007F  
                    UseBluetooth@device 0284                           ___rparam_used 000001  
                   StringAddEqual@Input 008B                              ___ftdiv@f1 0087  
                            ___ftdiv@f2 008A                              ___ftdiv@f3 0091  
                   StringContains@begin 0081                              ___ftneg@f1 007C  
                     __end_of_GetNumber 4CE8                  __end_of_StringContains 8372  
                    UseBluetooth@rfconf 028B                       __end_of_EncodeNEC 7408  
             __size_of_ReadEEPROM_1Byte 0066                     __end_of_ResetTimer0 9590  
                   __end_of_ResetTimer1 957C                     __end_of_ResetTimer3 95AE  
                   __size_of_IRrawToNEC 0384                              ___ftmul@f1 0096  
                            ___ftmul@f2 0099                           _SendNEC_bytes 8854  
                            ___ftsub@f1 00BB                              ___ftsub@f2 00BE  
                            ___fttol@f1 00BB                          __pcstackCOMRAM 0001  
                           ?_InitTimer0 0001                             ?_InitTimer1 0001  
                           ?_InitTimer2 0001                             ?_InitTimer3 0001  
                           ?_InitTimers 0001                      _Conf2_ChannelB_OFF F28E  
                    _Conf2_ChannelD_OFF F2AE                           __end_of_Round 8C08  
                        _ReadPushButton 94E6                  i2cleanBuffer16bit@data 001B  
                          __pidataBANK0 95C4                            __pidataBANK2 9238  
                      main@ConnectedOLD 00D9               __size_of_EnterCommandMode 00C8  
                            ___lltoft@c 0084                               ?_UARTchar 0001  
               __end_of_WaitForIRsignal 87CA                           __end_of_scale 4862  
       __end_of_Conf2_ChannelH_1_ON_STR F21C                             _Init_System 8AC8  
                   SyncEEPROMToGlobal@i 0101                     SyncEEPROMToGlobal@j 0102  
                   SyncEEPROMToGlobal@k 0100         __end_of_Conf2_ChannelH_2_ON_STR F230  
       __end_of_Conf2_ChannelH_3_ON_STR F244                _Conf2_ChannelH_1_OFF_STR F1C9  
                     __end_of_ReadUSART 9418                       __end_of_ReadIRpin 953A  
                         ?i1_UARTstring 0002                            ??_LEDTimerON 007C  
                            ___lwtoft@c 0084                       __end_of_Frequency F3A7  
             __size_of_CheckReceivingIR 0012                             _ReadVoltage 809E  
              _Conf2_ChannelH_2_OFF_STR F1DE                       __end_of_SetEEPROM 66A4  
                       ReadVoltage@temp 00AB                     __size_of_ClearUSART 000E  
                            __div_to_l_ 6A18                __end_ofi1_UARTstringCRLN 8D36  
              _Conf2_ChannelH_3_OFF_STR F1F3                         GetNumber@result 008B  
                       ?_StringAddEqual 008B                                 ??_Round 00CD  
                         ReadUSART@data 007C                       __end_of_OpenUSART 89D6  
                       __div_to_l_@exp1 0087                         __div_to_l_@cntr 0086  
                               ??_scale 00A8                               ?_IsLetter 0001  
                       __div_to_l_@quot 0082                            sprintf@width 011F  
                __size_of_SetMemoryChar 003A                       __end_of_SetTimer0 95A4  
                            __pbssBANK0 00DA                              __pbssBANK1 01FF  
                            __pbssBANK2 02CF                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            __pbssBANK7 0700                  __size_of_SetMemoryLong 00FA  
                     _EEPROMinitialized 949E                               ?_InitUART 00D1  
                     __end_of_ResetBlue 92A0                 __end_of_UARTcommandMenu 7894  
                _Conf2_ChannelB_OFF_STR F244                       __end_of_UseIRCode 6060  
                    ReadVoltage@voltage 00A8                 __end_of_ReadCodeButtons 8FA0  
                           _ReceivingIR 0044                      ?_EEPROMinitialized 0001  
                         ??_StringMatch 0080                  _Conf2_ChannelD_OFF_STR F257  
                   __end_of_ProjectName F1C9                           __div_to_l_@f1 007C  
                         __div_to_l_@f2 007F                __size_ofi1_BlueConnected 000E  
                 WriteEEPROM_1Byte@data 007E                               ?_ResetADC 0001  
                    __end_of_LEDTimerON 94C4                                 ?_InitIR 0001  
                       ?_StringContains 007C                          ?_SendNEC_bytes 008C  
                __end_of_ReadPushButton 94F4                __end_of_InternalADC_Read 8566  
                   __size_of_BufferCopy 008A                                 ?_SendRF 007C  
                           _SendRF_wait 914A                            ??i1_UARTchar 0001  
                               ?___ftge 007C                     ??_EEPROMinitialized 007C  
                               ?___lmul 007C                                 ?___wmul 008A  
                         ?_Reverse_Byte 0001                              ??_UARTchar 007C  
                     _VoltageDividerOFF 95BE                               ?___altoft 0084  
                               ?_fround 00A5                          ___lmul@product 0084  
                        ??i1_UARTstring 0004                               ?___ftpack 007C  
                 EnterCommandMode@count 0085                   cleanBuffer16bit@count 007E  
                             ?___lltoft 0084                      __end_of_PCBVersion F39B  
                    ?_VoltageDividerOFF 0001               SendNEC_bytes@RepeatAmount 0090  
                             ?___lwtoft 0084                                 i1l10520 8E76  
                               i1l10516 8E4A                                 i1l11414 938E  
                               i1l11406 942A                                 i1l12302 00F2  
                               i1l11418 9398                                 i1l11610 8CD4  
                               i1l12314 0130                                 i1l12322 0162  
                               i1l12332 0188                                 i1l11614 8D00  
                               i1l12342 01A2                                 i1l12290 00B4  
                               i1l12282 0094                                 i1l11638 955E  
                               i1l11582 9192                                 i1l11586 91AA  
                               i2l16100 56C4                                 i2l16120 5728  
                               i2l16112 56DC                                 i2l16104 56CA  
                               i2l16210 956C                                 i2l16140 57B8  
                               i2l16108 56D2                                 i2l16150 57E8  
                               i2l16142 57C0                                 i2l16070 55BC  
                               i2l16054 5542                                 i2l16128 5750  
                               i2l16064 558E                                 i2l16170 584A  
                               i2l16146 57C6                                 i2l16074 55C0  
                               i2l16058 554C                                 i2l16180 588C  
                               i2l16164 5844                                 i2l16068 5594  
                               i2l16158 5806                                 i2l16430 3EC6  
                               i2l16422 3E96                                 i2l16184 5892  
                               i2l16096 5688                                 i2l16600 4094  
                               i2l16432 3ECC                                 i2l16194 9112  
                               i2l16610 40A8                                 i2l16506 3FDA  
                               i2l16434 3ED2                                 i2l16188 589C  
                               i2l16604 40A0                                 i2l16532 4016  
                               i2l16516 3FF4                                 i2l16700 417C  
                               i2l16198 912E                                 i2l16550 404C  
                               i2l16526 4008                                 i2l16462 3F4E  
                               i2l16438 3EEA                                 i2l16720 41BA  
                               i2l16632 40D0                                 i2l16608 40A4  
                               i2l16730 41DC                                 i2l16626 40C4  
                               i2l16618 40B6                                 i2l16570 4060  
                               i2l16546 4046                                 i2l16490 3FBE  
                               i2l16538 4022                                 i2l16820 42F2  
                               i2l16812 42DE                                 i2l16716 41AA  
                               i2l16644 40E4                                 i2l16814 42E6  
                               i2l16806 42CE                                 i2l16750 420C  
                               i2l16742 41FA                                 i2l16654 4100  
                               i2l16638 40DA                                 i2l16486 3FB2  
                               i2l16646 40EE                                 i2l16808 42D4  
                               i2l16744 4200                                 i2l16752 4212  
                               i2l16824 42F8                                 i2l16672 4134  
                               i2l16664 4120                                 i2l16496 3FCA  
                               i2l16770 4252                                 i2l16578 406A  
                               i2l16498 3FCE                                 i2l16836 4312  
                               i2l16756 4228                                 i2l16684 4160  
                               i2l16588 407E                                 i2l16838 431A  
                               i2l16774 4262                                 i2l16678 414C  
                               i2l16792 42AA                                 i2l16776 4274  
                               i2l16768 4244                                 i2l16696 4172  
                               i2l16788 4290                        i1UARTstring@data 0002  
                         UseIRCode@Code 00BD                       _ReceivedStringPos 00DC  
                   ??_VoltageDividerOFF 007C                         SetMemoryLong@MH 00AF  
                       SetMemoryLong@ML 00B0                       ?_Local_CloseUSART 0001  
             __end_of_EEPROMinitialized 94B2                 BluetoothInitialSetup@ok 0160  
                   __size_of_InitTimer0 0010                     __size_of_InitTimer1 000E  
                   __size_of_InitTimer2 000E                     __size_of_InitTimer3 000A  
                       ??i1_cleanBuffer 0005                              ??_IsLetter 007C  
                   __size_of_InitTimers 0014                               ?_high_isr 0001  
                    __end_ofi1_UARTchar 9448                     _GetStringAfterComma 7894  
                    ??_Local_CloseUSART 007C             __size_of_SyncGlobalToEEPROM 0046  
                            ??_InitUART 00D5                             _ResetTimer0 9586  
                           _ResetTimer1 9572                             _ResetTimer3 95A4  
   __size_of_StringMatchCaseInsensitive 0094                            ??_UARTstring 007F  
                               SendRF@i 0083                           ?_UseBluetooth 0200  
                               _InitADC 945E                                 _InitApp 907E  
                        UseBluetooth@ok 0289                             low_isr@data 001A  
           __end_of_BluetoothConfigured 9400                 UseBluetooth@tempRFArray 028A  
                            ??_ResetADC 007C                          InitUART@config 0105  
                     __end_of__npowers_ F168                                 __Hparam 0000  
                       ?_ReadPushButton 0001                              _scale$3809 00A8  
                       __size_of_InitIR 0048                                 __Lparam 0000  
                  __end_of_SendNEC_wait 86A6                 __size_of_SendRF_Channel 0258  
                       __size_of_SendRF 00F0                            SendRF@Config 007E  
             __end_of_VoltageDividerOFF 95C2                       i1cleanBuffer@data 0001  
                        ??_Reverse_Byte 007C                         __size_of___ftge 00CE  
                               ___awdiv 7CB2                         __size_of___lmul 007A  
                               ___ftadd 5B7A                                 ___awmod 820C  
                               ___ftdiv 7016                                 ___ftneg 92A0  
                               ___lldiv 7F18                     __end_of_StringMatch 8AC8  
                  ?_GetStringAfterComma 007C                         __size_of___wmul 0038  
                               ___ftmul 6EAA                                 ___llmod 8420  
                               ___ftsub 8FA0                                 ___fttol 7168  
                         _SetMemoryChar 91C6                            ?_IsCharacter 0001  
                         _SetMemoryLong 7AC8                        ?_WaitForIRsignal 0001  
                            ??___altoft 0088                                 __pcinit 7FDE  
                               _delayUS 8EF6                              ??___ftpack 0081  
                       __size_of_fround 02D8                                 __ramtop 1000  
                            ??___lltoft 0088                                 __ptext0 510C  
                               __ptext1 5DF8                                 __ptext2 6060  
                               __ptext3 94E6                                 __ptext4 8F4C  
                               __ptext5 01F6                                 __ptext6 90C4  
                               __ptext7 873A                                 __ptext8 8B38  
                               __ptext9 7776                              ??___lwtoft 0087  
                             _T0CONbits 000FD5                    __size_ofi1_ReadUSART 0016  
                     __end_of_hexpowers F1AF                               _T1CONbits 000FCD  
                           ?__div_to_l_ 007C                       SetMemoryChar@Data 0088  
                               _dpowers F119                            ??_IRrawToNEC 0020  
                             _T2CONbits 000FCA                      __end_of_UARTstring 8E48  
                     SetMemoryChar@Test 0087                                 _isdigit 92D0  
                             _T3CONbits 000FB1                        ___awmod@dividend 007C  
             GetMemoryLong@AddressFirst 00A0                                 _low_isr 0018  
                          DecodeNEC@Nec 0080                           SetEEPROM@Temp 0100  
                         SetEEPROM@fail 00B4                           SetEEPROM@burn 0188  
                         SetEEPROM@temp 00B8                                 _sprintf 21E0  
                  __size_ofi2_ReadIRpin 000E                              ??_high_isr 0067  
                        __pintcode_body 3DA2                             _ProjectName F1AF  
                  end_of_initialization 8098                        SendNEC_wait@code 0091  
                         ??_cleanBuffer 0080                             _ProductName 0299  
                      ?_UARTcommandMenu 007F                         i1ReadUSART@data 0001  
                          ??_ClearUSART 007D                          ??_UseBluetooth 0203  
                               int_func 3DA2                               i1u1335_20 8CF6  
                             i1u1335_27 8CEC                               i1u1336_20 8D22  
                             i1u1336_27 8D18                               i1u1178_20 8E6C  
                             i1u1178_27 8E62                               i1u1179_20 8E98  
                             i1u1179_27 8E8E                        ?_ReadCodeButtons 0001  
           __size_ofi2_cleanBuffer16bit 0042                         ??_SendNEC_bytes 0091  
              __size_of_lowercaseString 0044                               i2u2023_40 56FC  
                             i2u2016_40 5624                         ___lldiv@divisor 0080  
                 EraseScreen@characters 0002                      __end_of_SYNTAX_ERR F369  
                      _ReadEEPROM_1Byte 8C08                         ___lldiv@counter 0088  
                    __end_of_IRrawToNEC 58A2                  main@BluetoothStringPos 0295  
                             _RCSTAbits 000FAB                                 postdec1 000FE5  
                               postdec2 000FDD                   ??_GetStringAfterComma 0081  
                      _EnterCommandMode 7E50                                 postinc0 000FEE  
                               postinc2 000FDE                          ?_SetMemoryChar 0086  
             __size_of_VoltageDividerON 0006                  __size_of_BlueConnected 000E  
                          ?_EraseScreen 0001                          ?_SetMemoryLong 00A1  
                     ??i1_BlueConnected 0001                          __tdiv_to_l_@f1 007C  
                        __tdiv_to_l_@f2 007F                               _IRRawCode 0700  
                         ??__tdiv_to_l_ 0082                 ??_BluetoothInitialSetup 00D8  
                     SetMemoryLong@Data 00A1                        _CheckReceivingIR 94C4  
                     SetMemoryLong@Test 00AA                       GetMemoryLong@temp 0098  
                          ??_BufferCopy 008A                      __end_of_ClearUSART 9510  
                             _IRaddress 00E2                  __size_of_GetMemoryChar 002A  
                             _TRISAbits 000F92                               _TRISBbits 000F93  
                    _SyncEEPROMToGlobal 66A4                               _TRISCbits 000F94  
                        BufferCopy@from 0084                              main@IRtask 0293  
                __size_of_GetMemoryLong 0170                               _IRcodeBit 002E  
            __size_of_EEPROMinitialized 0014                  __size_of_EEPROM_UNLOCK 0016  
     StringContainsCaseInsensitive@That 0081       StringContainsCaseInsensitive@This 007F  
                             _IRcommand 01FF             __end_of_ConfigureOscillator 95C4  
                __size_of_Reverse_4Byte 0C7E               __size_of_SetEEPROMdefault 0128  
                             _RFcodeBit 0035                     ?_SyncEEPROMToGlobal 0001  
                 __end_ofi2_ResetTimer0 959A                               _GetEEPROM 6BAC  
                     main@Bluetoothtask 0294                    __end_ofi1_UARTstring 8EA0  
                             _DecodeNEC 8372                             ___ftdiv@exp 0094  
            ReadEEPROM_1Byte@PEIEstatus 007F                               _IRtimeout 02CB  
                             _TXSTAbits 000FAC               __size_of_cleanBuffer16bit 005E  
                   UseBluetooth@tempNec 027E                             _StringMatch 8A50  
                   __size_of__div_to_l_ 0194                     UseBluetooth@timeout 0282  
    __end_of_StringMatchCaseInsensitive 873A              _StringMatchCaseInsensitive 86A6  
                   __end_of_cleanBuffer 8DEE                       _Timer1_Postscaler 0039  
                        _IRrepeatAmount 0031                      __end_of_BufferCopy 8854  
                           ___ftmul@exp 009F                            ??_InitTimer0 007C  
                          ??_InitTimer1 007C                            ??_InitTimer2 007C  
                          ??_InitTimer3 007C                          __end_of_InitIR 9038  
                          ??_InitTimers 007C              __size_of_VoltageDividerOFF 0004  
                        __end_of_SendRF 7CB2                     _Conf2_ChannelH_1_ON F2DE  
                   _Conf2_ChannelH_2_ON F2FE                     _Conf2_ChannelH_3_ON F31E  
                             _GetNumber 4862                               _EncodeNEC 72BA  
        GetStringAfterComma@CommaNumber 007E                          __end_of___ftge 7E50  
                          ?_Init_System 0001                          __end_of___lmul 8A50  
               i2cleanBuffer16bit@count 001D                          _ReceivedString 0600  
                        __end_of___wmul 9238                    ??_SyncEEPROMToGlobal 00A9  
                           _BAUDCONbits 000FB8                           __pidataCOMRAM 95AE  
                      ??_StringAddEqual 008D                       __size_of_UARTchar 001E  
                          ?_ReadVoltage 00A5                          __end_of_fround 5B7A  
                      IRrawToNEC@Invert 001F                       ?i1_UARTstringCRLN 0004  
                   start_initialization 7FDE                               _ReadUSART 9400  
               __size_of_UARTstringCRLN 006A                       _Timer2_Postscaler 003A  
                             _ReadIRpin 952C                   __end_of_InitBluetooth 8EF6  
                      UseBluetooth@temp 028E                               _Frequency F3A3  
                   __end_of__tdiv_to_l_ 6A18                               _SetEEPROM 64B8  
                         GetNumber@This 0088                      ??i1_UARTstringCRLN 0006  
                         _BlueConnected 953A                           GetNumber@temp 0098  
                  __end_of_Reverse_Byte 820C                      __end_of_InitTimer0 94E6  
                    __end_of_InitTimer1 952C                      __end_of_InitTimer2 951E  
                    __end_of_InitTimer3 9586                      __end_of_InitTimers 949E  
                      ??_StringContains 0080                              ?_GetEEPROM 00A1  
                             _OpenUSART 895A                       __size_of_IsLetter 001E  
                 __size_of_SendNEC_wait 009E                              ?_DecodeNEC 0080  
                       ___llmod@divisor 008D                       __size_of_InitUART 0116  
                       ___llmod@counter 0091                               _SetTimer0 959A  
                             _ResetBlue 926E                               _Sendcount 0038  
                              ??_InitIR 0084                          _SendRF_Channel 6060  
               GetStringAfterComma@This 007C                            ?_SendRF_wait 0084  
                             _UseIRCode 5DF8                           _GetMemoryChar 9356  
                              ??_SendRF 0081                       _Timer3_Postscaler 003B  
             StringAddEqual@firstnumber 0090                         ??_SetMemoryChar 0087  
                         _GetMemoryLong 6D3A                       ?_InternalADC_Read 0085  
                       ??_SetMemoryLong 00A6                                ??___ftge 0082  
                     __size_of_ResetADC 000E                                ??___lmul 0084  
                         _EEPROM_UNLOCK 9448                                ??___wmul 008E  
    StringContainsCaseInsensitive@begin 0083                       ??_lowercaseString 007E  
                            ?_GetNumber 0088                      ??_InternalADC_Read 0087  
                            ?_EncodeNEC 0080                           _Reverse_4Byte 3124  
    StringMatchCaseInsensitive@tempThat 0084      StringMatchCaseInsensitive@tempThis 0083  
                __size_of_lowercaseChar 002C                             __pdataBANK0 00E3  
                           __pdataBANK2 0299                        __CFG_LPT1OSC$OFF 000000  
                              ??_fround 00A8                           sprintf@tmpval 0112  
                   UARTcommandMenu@Desc 0081                    GetNumber@CommaNumber 008A  
              WriteEEPROM_1Byte@address 007C                    __size_of_IsCharacter 0018  
                  __end_of_UseBluetooth 21E0                       __size_of___altoft 00A2  
                            fround@prec 00AE                       __size_of___ftpack 0120  
             SetMemoryLong@AddressFirst 00A5                               Round@temp 00CD  
                      cleanBuffer@count 007E                       __size_of___lltoft 0080  
                           __pbssCOMRAM 0023                              ?_ReadUSART 0001  
        ?_StringContainsCaseInsensitive 007F                       __size_of___lwtoft 002C  
                            ?_ReadIRpin 0001          __end_of_Conf2_ChannelB_OFF_STR F257  
                         __pcstackBANK0 0060                           __pcstackBANK1 0100  
                         __pcstackBANK2 0200                           __pcstackBANK3 0300  
                          _SendNEC_wait 8608                              ?_SetEEPROM 0100  
                     _Conf2_ChannelB_ON F29E                       _Conf2_ChannelD_ON F2BE  
                        ?_BlueConnected 0001                            _isdigit$3485 007D  
        __end_of_Conf2_ChannelD_OFF_STR F26A          StringMatchCaseInsensitive@That 0081  
        StringMatchCaseInsensitive@This 007F                GetNumber@tempCommaNumber 0092  
               _Conf2_ChannelH_1_ON_STR F208                            ?_ResetTimer0 0001  
                          ?_ResetTimer1 0001                            ?_ResetTimer3 0001  
                           _cleanBuffer 8D94                 _Conf2_ChannelH_2_ON_STR F21C  
                      ??_ReadPushButton 007C                              ?_OpenUSART 007C  
               _Conf2_ChannelH_3_ON_STR F230                       __size_of_high_isr 4356  
                           sprintf@flag 0121                             sprintf@fval 011C  
                           sprintf@prec 0110                  __end_of_SendRF_Channel 62B8  
                              ?_InitADC 0001                                ?_InitApp 0001  
                            ?_SetTimer0 001B                              ?_ResetBlue 0001  
                        ?_GetMemoryChar 0080                          ?_GetMemoryLong 0080  
               _Conf2_ChannelH_1_Status 002A                              ?_UseIRCode 00BD  
               _Conf2_ChannelH_2_Status 002B                       __CFG_CCP2MX$PORTC 000000  
               _Conf2_ChannelH_3_Status 002C                          ?_EEPROM_UNLOCK 0001  
                       SendRF_wait@Code 0084               __size_of_Local_CloseUSART 000E  
                             __pintcode 0008                           __pmediumconst F118  
                        ?_Reverse_4Byte 007C                        _VoltageDividerON 95B8  
                              ?___awdiv 0082                               __ptext100 95C2  
                             __ptext102 9188                               __ptext111 9108  
                             __ptext103 8CD2                               __ptext112 9590  
                             __ptext104 8E48                               __ptext113 9564  
                             __ptext105 9474                               __ptext114 959A  
                             __ptext106 9556                               __ptext115 95A4  
                             __ptext107 9418                               __ptext116 551E  
                             __ptext108 9380                               __ptext109 9430  
                              ?___ftadd 00AF                       SendRF_wait@Config 0086  
                           IRrawToNEC@i 0065                                ?___awmod 007C  
                              ?___ftdiv 0087                    cleanBuffer16bit@data 007C  
                              ?___ftneg 007C                         SendRF_wait@size 0087  
                              ?___lldiv 007C                                ?___ftmul 0096  
                              ?___llmod 0089                                ?___ftsub 00BB  
                             __npowers_ F141                                ?___fttol 00BB  
                          UseIRCode@NEC 00BF                             __pintcodelo 0018  
                              ?_delayUS 007C                    __size_of_EraseScreen 0028  
                           __tdiv_to_l_ 6872                            ??__div_to_l_ 0082  
                     SendRF_wait@amount 0088                           IRrawToNEC@NEC 001D  
                     _WriteEEPROM_1Byte 8C6E                                ?_isdigit 0001  
             __end_of_Conf2_ChannelB_ON F2AE               __end_of_Conf2_ChannelD_ON F2CE  
                         IRrawToNEC@Raw 001B                           UseBluetooth@i 0292  
              __end_of_ReadEEPROM_1Byte 8C6E                                ?_low_isr 0001  
                    ?_WriteEEPROM_1Byte 007C                          __size_of_Round 0066  
                             _hexpowers F18F              __end_of_SyncGlobalToEEPROM 907E  
                 __size_ofi1_UARTstring 0058                __end_of_EnterCommandMode 7F18  
                              ?_sprintf 00CA                          __size_of_scale 0504  
                         _lowercaseChar 932A                UseBluetooth@rfchannelSTR 0273  
                      _SetEEPROMdefault 7408                               delayUS@US 007C  
                 __end_ofi1_cleanBuffer 91C6                         IsCharacter@data 0001  
                           ??_GetEEPROM 00A3                     ??_WriteEEPROM_1Byte 007F  
                           ??_DecodeNEC 0088                          ___wmul@product 008E  
                              _IOCBbits 000F7D                         i1_BlueConnected 9556  
              __end_of_CheckReceivingIR 94D6                        _cleanBuffer16bit 8D36  
                       ?_SendRF_Channel 0001                                _IPR1bits 000F9F  
                              _IPR2bits 000FA2                                _PIE1bits 000F9D  
                              _PIE2bits 000FA0                            cleanBuffer@i 0083  
                              _PIR1bits 000F9E                      __end_of__div_to_l_ 6BAC  
                              _PIR2bits 000FA1                                _RCONbits 000FD0  
                  i1UARTstringCRLN@data 0004                        __CFG_WDTPS$32768 000000  
                        UseIRCode@found 00C6                             ??_GetNumber 008D  
                           ??_EncodeNEC 0084                          DecodeNEC@temp1 008E  
                        DecodeNEC@temp2 008C                          DecodeNEC@temp3 008D  
                              _RFConfig 0034                                _UARTchar 93C6  
          ??_StringMatchCaseInsensitive 0083                           ??i1_ReadUSART 0001  
          __size_of_BluetoothConfigured 001C                BluetoothInitialSetup@buf 012E  
             ReadEEPROM_1Byte@GIEstatus 007E               __end_of_WriteEEPROM_1Byte 8CD2  
                            _ADCON0bits 000FC2                              _ADCON1bits 000FC1  
                            _ADCON2bits 000FC0                       ___wmul@multiplier 008A  
                          i1_UARTstring 8E48                    __size_of_Init_System 0070  
                              _IRpinOLD 002F          __size_of_BluetoothInitialSetup 0424  
                   ReadCodeButtons@temp 0085           __end_of_BluetoothInitialSetup 510C  
                 __size_of_Reverse_Byte 00B6                          _UARTstringCRLN 8B38  
                       ??_BlueConnected 007C                             ??_ReadUSART 007C  
                         ??i2_ReadIRpin 001B                    __size_of_ReadVoltage 00B8  
                           ??_ReadIRpin 007C                __size_of_WaitForIRsignal 0090  
                       StringAddEqual@i 0091                         StringAddEqual@j 0092  
                           ??_SetEEPROM 00B2                          ?_lowercaseChar 007C  
                     ___lmul@multiplier 007C                             _INTCON2bits 000FF1  
                              _IsLetter 93A8                               copy_data0 805A  
                             copy_data1 808C              __end_ofi2_cleanBuffer16bit 914A  
                         _CommandString 0500                                _InitUART 79B2  
                       UseBluetooth@buf 020F                         UseBluetooth@set 027D  
                           ??_OpenUSART 007E                            GetNumber@Hex 0095  
                       IRrawToNEC@first 0064                         ??_GetMemoryChar 0084  
                       OpenUSART@config 007E                         ??_GetMemoryLong 0084  
                    SendNEC_wait@toggle 0096                             ??_SetTimer0 001D  
           __end_of_GetStringAfterComma 79B2                              _EECON1bits 000FA6  
                          ?_StringMatch 007C                             ??_ResetBlue 0085  
                      __size_of_InitADC 0016                         ??_EEPROM_UNLOCK 007C  
                              _ResetADC 9548                   __end_of_SendNEC_bytes 88DA  
                      __size_of_InitApp 0046                                __Hrparam 0000  
                           ??_UseIRCode 00C3                         ??_Reverse_4Byte 0080  
                              __Lrparam 0000                          i1cleanBuffer@i 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_UARTcommandMenu 011E  
                  __size_of_SendRF_wait 003E                   __size_of_UseBluetooth 1FEA  
              __size_of_ReadCodeButtons 0054                            _Reverse_Byte 8156  
             InternalADC_Read@ADCcounts 0085                      i1cleanBuffer@count 0003  
                     Reverse_4Byte@This 007C                           GetEEPROM@Temp 00A1  
                      __size_of___awdiv 00D0                        __size_of___ftadd 027E  
                      __size_of___awmod 00B4                        __size_of___ftdiv 0152  
                       cleanBuffer@data 007C                        __size_of___ftneg 0030  
                      __size_of___lldiv 00C6                                ___altoft 8566  
                      __size_of___ftmul 016C                        __size_of___llmod 00A4  
                      __size_of___ftsub 0050                        __size_of___fttol 0152  
                     Reverse_4Byte@temp 0088                                ___ftpack 7656  
            InternalADC_Read@AnaChanSel 0089                             _fround$3807 00AB  
                           _fround$3808 00A8                                ___lltoft 88DA  
                __end_of_UARTstringCRLN 8BA2                        __size_of_delayUS 0056  
         __end_of_Conf2_ChannelB_ON_STR F27C                                ___lwtoft 92FE  
         __end_of_Conf2_ChannelD_ON_STR F28E                       main@VoltageStatus 0297  
                            sprintf@idx 0109                              sprintf@len 010C  
                            sprintf@exp 0116                              sprintf@val 0118  
                UseBluetooth@NecAddress 028C                     __end_ofi1_ReadUSART 948A  
                      __size_of_isdigit 002E                  UseBluetooth@NecCommand 028D  
                      __size_of_low_isr 01DA                                __ptext10 86A6  
                              __ptext11 8A50                                __ptext20 8854  
                              __ptext12 7530                                __ptext21 3124  
                              __ptext13 62B8                                __ptext30 4862  
                              __ptext22 94C4                                __ptext14 87CA  
                              __ptext31 932A                                __ptext23 809E  
                              __ptext15 914A                                __ptext40 7408  
                              __ptext32 89D6                                __ptext24 92FE  
                              __ptext16 7BC2                                __ptext41 79B2  
                              __ptext33 93A8                                __ptext25 7016  
                              __ptext17 94B2                                __ptext50 9510  
                              __ptext42 8BA2                                __ptext34 72BA  
                              __ptext26 95B8                                __ptext18 9572  
                              __ptext51 951E                                __ptext43 8566  
                              __ptext35 8372                                __ptext27 95BE  
                              __ptext19 8608                                __ptext60 435E  
                              __ptext52 8FF0                                __ptext44 895A  
                              __ptext36 8156                                __ptext28 84C4  
                              __ptext61 92D0                                __ptext53 8D36  
                              __ptext45 94F4                                __ptext37 8AC8  
                              __ptext29 7894                                __ptext70 8420  
                              __ptext62 58A2                                __ptext54 9586  
                              __ptext46 9502                                __ptext38 66A4  
                              __ptext71 7F18                                __ptext63 9200  
                              __ptext55 952C                                __ptext47 9400  
                              __ptext39 6BAC                                __ptext80 8DEE  
                              __ptext72 7168                                __ptext64 6EAA  
                              __ptext56 94D6                                __ptext48 948A  
                              __ptext81 93C6                                __ptext73 8FA0  
                              __ptext65 820C                                __ptext57 8EA0  
                              __ptext49 957C                                __ptext90 6D3A  
                              __ptext82 82C0                                __ptext74 5B7A  
                              __ptext66 7CB2                                __ptext58 4CE8  
                              __ptext91 91C6                                __ptext83 926E  
                              __ptext75 7656                                __ptext67 6872  
                              __ptext59 21E0                                __ptext92 8C6E  
                              __ptext84 8EF6                                __ptext76 92A0  
                              __ptext68 6A18                                __ptext93 9448  
                              __ptext85 953A                                __ptext77 7D82  
                              __ptext69 88DA                       SendNEC_bytes@code 008C  
                              __ptext94 9356                                __ptext86 93E4  
                              __ptext78 7E50                                __ptext95 8C08  
                              __ptext87 9038                                __ptext79 8D94  
                              __ptext96 945E                                __ptext88 64B8  
                              __ptext97 9548                                __ptext89 7AC8  
               __end_ofi1_BlueConnected 9564                                __ptext98 949E  
                              __ptext99 907E                                __powers_ F168  
                              _high_isr 0008              __end_of_Conf1_ChannelD_STR F33D  
            __end_of_Conf1_ChannelE_STR F34C              __end_of_Conf1_ChannelF_STR F35B  
                      __size_of_sprintf 0F44                     __end_ofi2_ReadIRpin 9572  
                       _lowercaseString 90C4                              GetEEPROM@i 00A7  
                            GetEEPROM@j 00A8                              GetEEPROM@k 00A6  
                         __size_of_main 0412                   SendRF_Channel@channel 0089  
                          _UseBluetooth 01F6                                delayUS@i 0081  
                  __size_of_ResetTimer0 000A                    __size_of_ResetTimer1 000A  
                  __size_of_ResetTimer3 000A               __size_ofi1_UARTstringCRLN 0064  
             GetMemoryChar@AddressFirst 0084            __size_of_ConfigureOscillator 0002  
                UseBluetooth@EnteredNEC 0285                        _Local_CloseUSART 94F4  
                       GetMemoryLong@MH 009D                         GetMemoryLong@ML 009E  
                UseBluetooth@EmptyPlace 0283                            BufferCopy@to 0086  
           __size_of_SyncEEPROMToGlobal 01CE              __size_of_WriteEEPROM_1Byte 0064  
                            _LEDTimerON 94B2                         ?_UARTstringCRLN 007F  
                __size_ofi2_ResetTimer0 000A                              _INTCONbits 000FF2  
             __size_of_InternalADC_Read 00A2                          OpenUSART@spbrg 007C  
                       ??_lowercaseChar 007E                            UARTchar@data 007C  
                       StringMatch@That 007E                         StringMatch@This 007C  
                              isdigit@c 007E                                scale@scl 00AB  
                    GetEEPROM@Arrayspot 00A5                      SetEEPROM@Arrayspot 00B9  
                      EncodeNEC@address 00A8                __end_of_VoltageDividerON 95BE  
                   i2cleanBuffer16bit@i 0022            __end_of_Conf2_ChannelH_1_OFF F2DE  
          __end_of_Conf2_ChannelH_2_OFF F2FE            __end_of_Conf2_ChannelH_3_OFF F31E  
                              intlevel1 0000                                intlevel2 0000  
                            _PCBVersion F396                               sprintf@ap 010E  
                             sprintf@cp 010A                        __tdiv_to_l_@exp1 008A  
                             sprintf@sp 00CA                        __tdiv_to_l_@cntr 0089  
                          ?_cleanBuffer 007C      GetStringAfterComma@tempCommaNumber 0082  
                      __tdiv_to_l_@quot 0085                       ??_WaitForIRsignal 0085  
                      EncodeNEC@command 0080                        ___lldiv@dividend 007C  
                          IsLetter@data 007C         ??_StringContainsCaseInsensitive 0083  
                        _BatteryVoltage 02E3                          GetMemoryChar@H 0085  
                           _IR_New_Code 00E1                              i1_UARTchar 9430  
                        GetMemoryLong@H 009C                          GetMemoryLong@L 009F  
                __size_of_InitBluetooth 0056                             BufferCopy@i 008A  
                 __end_of_SetMemoryChar 9200                   __end_of_SetMemoryLong 7BC2  
        BluetoothInitialSetup@RFchannel 0124                           ??_IsCharacter 0001  
                         _InitUART$3806 0100                __end_of_SetEEPROMdefault 7530  
                        _Conf1_ChannelD F369                          _Conf1_ChannelE F375  
                        _Conf1_ChannelF F381                              GetNumber@i 0096  
                        _Conf1_Channels F39B                             i1_ReadUSART 9474  
                      DecodeNEC@address 0084                            ?__tdiv_to_l_ 007C  
                      UARTcommandMenu@i 0088                  UARTcommandMenu@Command 007F  
                     ??_UARTcommandMenu 0083             __end_of_Conf2_ChannelH_1_ON F2EE  
           __end_of_Conf2_ChannelH_2_ON F30E             __end_of_Conf2_ChannelH_3_ON F32E  
                        _Conf2_Channels F39F                                sprintf@c 0123  
              __end_of_cleanBuffer16bit 8D94                                sprintf@f 00CC  
                      DecodeNEC@command 0086                       ??_ReadCodeButtons 0085  
                      ___lldiv@quotient 0084                             i2_ReadIRpin 9564  
                     ?_ReadEEPROM_1Byte 007C                            EraseScreen@i 0003  
               __end_of_lowercaseString 9108                        ?i1_BlueConnected 0001  
               __size_of_StringAddEqual 0200                          i1UARTchar@data 0001  
                      ??_SendRF_Channel 0089                      ??_ReadEEPROM_1Byte 007E  
                     ?_EnterCommandMode 0001              __end_of_Conf2_ChannelB_OFF F29E  
            __end_of_Conf2_ChannelD_OFF F2BE                     _BluetoothConfigured 93E4  
                    ??_EnterCommandMode 0085                              _UARTstring 8DEE  
                         i2_ResetTimer0 9590                       ?_CheckReceivingIR 0001  
             GetStringAfterComma@result 007F                      _SyncGlobalToEEPROM 9038  
                    ??_CheckReceivingIR 007C                         BufferCopy@count 0088  
                  __size_of_StringMatch 0078  
